{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Th\u01b0 vi\u1ec7n FPTOJ l\u00e0 m\u1ed9t b\u1ea3n fork c\u1ee7a VNOI Wiki.</p> <p>FPTOJ \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng v\u1edbi m\u1ee5c \u0111\u00edch chia s\u1ebb ki\u1ebfn th\u1ee9c Tin h\u1ecdc \u0111\u1ebfn v\u1edbi t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc b\u00e0i gi\u1edbi thi\u1ec7u c\u1ee7a b\u1ecdn m\u00ecnh \u1edf \u0111\u00e2y.</p> <p>B\u1ea1n \u0111\u1ecdc b\u00e0i vi\u1ebft nh\u01b0ng kh\u00f4ng hi\u1ec3u? H\u00e3y h\u1ecfi \u1edf \u0111\u00e2y.</p> <p>\u1ede trang ch\u1ee7 n\u00e0y, c\u00e1c b\u00e0i vi\u1ebft v\u1ec1 thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u v\u1ec1 \u0111\u1ed9 kh\u00f3 t\u1eeb (1) \u0111\u1ebfn (5) v\u1edbi \u00fd ngh\u0129a:</p> <ul> <li>(\u2b50): C\u01a1 b\u1ea3n,</li> <li>(\u2b50\u2b50): Ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft \u0111\u1ec3 thi HSG QG, ACM ICPC,</li> <li>(\u2b50\u2b50\u2b50): Ki\u1ebfn th\u1ee9c n\u00e2ng cao, d\u00e0nh cho c\u00e1c b\u1ea1n c\u00f3 m\u1ee5c ti\u00eau \u0111\u1ea1t gi\u1ea3i cao trong HSG QG,</li> <li>(\u2b50\u2b50\u2b50\u2b50): Ki\u1ebfn th\u1ee9c r\u1ea5t kh\u00f3,</li> <li>(\u2b50\u2b50\u2b50\u2b50\u2b50): Ki\u1ebfn th\u1ee9c r\u1ea5t chuy\u00ean s\u00e2u v\u1ec1 1 v\u1ea5n \u0111\u1ec1 n\u00e0o \u0111\u00f3, ch\u1ec9 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c v\u1edbi r\u1ea5t \u00edt b\u00e0i kh\u00f3.</li> </ul> <p>T\u00e0i li\u1ec7u gi\u00e1o khoa chuy\u00ean tin (download \u1edf M\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u hay v\u1ec1 Thu\u1eadt To\u00e1n) \u0111\u00e3 vi\u1ebft r\u1ea5t chi ti\u1ebft.</p>"},{"location":"#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":""},{"location":"#nhap-mon","title":"Nh\u1eadp m\u00f4n","text":"<ul> <li>T\u1ea7m quan tr\u1ecdng c\u1ee7a Thu\u1eadt To\u00e1n</li> <li>M\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u hay v\u1ec1 Thu\u1eadt To\u00e1n</li> <li>Ngh\u1ec7 thu\u1eadt gi\u1ea3i b\u00e0i</li> <li>Nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian (\u2b50)</li> <li>S\u1eafp x\u1ebfp (\u2b50)</li> <li>T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n</li> <li>Hai con tr\u1ecf (\u2b50)</li> <li>Ph\u00e9p to\u00e1n bit</li> <li>\u0110\u1ec7 quy v\u00e0 quay lui</li> <li>Chia \u0111\u00f4i t\u1eadp</li> </ul>"},{"location":"#cau-truc-du-lieu","title":"C\u1ea5u tr\u00fac d\u1eef li\u1ec7u","text":"<ul> <li>T\u1ed5ng quan v\u1ec1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u (\u2b50\u2b50)</li> <li>M\u1ea3ng v\u00e0 danh s\u00e1ch li\u00ean k\u1ebft (\u2b50)</li> <li>Ng\u0103n x\u1ebfp (stack) (\u2b50)</li> <li>M\u1ea3ng c\u1ed9ng d\u1ed3n v\u00e0 m\u1ea3ng hi\u1ec7u</li> <li>Deque v\u00e0 t\u00ecm min max tr\u00ean \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn (\u2b50\u2b50)</li> <li>Heap (\u2b50\u2b50)</li> <li>B\u1ea3ng b\u0103m (Hash table) (\u2b50\u2b50)</li> <li>Disjoint Set Union (\u2b50\u2b50)</li> <li>C\u00e2y Ph\u00e2n \u0110o\u1ea1n (c\u01a1 b\u1ea3n)</li> <li>Segment Tree (Interval Tree) (\u2b50\u2b50)</li> <li>C\u00e0i \u0111\u1eb7t Segment Tree ch\u1ea1y nhanh h\u01a1n (\u2b50\u2b50\u2b50)</li> <li>Chia c\u0103n - Part 1</li> <li>Mo Algorithm (\u2b50\u2b50\u2b50)</li> <li>Segment Tree (Interval Tree) tr\u00ean t\u1eadp \u0111o\u1ea1n th\u1eb3ng (\u2b50\u2b50\u2b50\u2b50)</li> <li>Fenwick Tree (Binary Indexed Tree) (\u2b50\u2b50)</li> <li>Heavy Light Decomposition</li> <li>Persistent Data Structures (\u2b50\u2b50\u2b50)</li> <li>Lowest Common Ancestor (LCA) - Binary Lifting</li> <li>B\u00e0i to\u00e1n RMQ &amp; b\u00e0i to\u00e1n LCA (\u2b50\u2b50)</li> <li>C\u00e1c ph\u01b0\u01a1ng ph\u00e1p gi\u1ea3i b\u00e0i to\u00e1n LCA (\u2b50\u2b50\u2b50)</li> <li>Trie (\u2b50\u2b50)</li> <li>Suffix Array (\u2b50\u2b50\u2b50\u2b50)</li> <li>Palindrome Tree (\u2b50\u2b50\u2b50\u2b50)</li> <li>Skip List (\u2b50\u2b50\u2b50)</li> <li>Range Tree - th\u1ea7y L\u00ea Minh Ho\u00e0ng (\u2b50\u2b50\u2b50)</li> </ul>"},{"location":"#xu-ly-xau","title":"X\u1eed l\u00fd x\u00e2u","text":"<ul> <li>T\u1ed5ng quan (\u2b50\u2b50)</li> <li>KMP (\u2b50\u2b50)</li> <li>Trie (\u2b50\u2b50)</li> <li>Hash (\u2b50\u2b50)</li> <li>Suffix Array (\u2b50\u2b50\u2b50\u2b50)</li> <li>Palindrome Tree (\u2b50\u2b50\u2b50\u2b50)</li> <li>Z-function</li> <li>Z Algorithm (\u2b50\u2b50\u2b50)</li> <li>Suffix Tree - th\u1ea7y L\u00ea Minh Ho\u00e0ng(\u2b50\u2b50\u2b50\u2b50)</li> </ul>"},{"location":"#quy-hoach-ong","title":"Quy ho\u1ea1ch \u0111\u1ed9ng","text":"<ul> <li>Nh\u1eadp m\u00f4n Quy ho\u1ea1ch \u0111\u1ed9ng (\u2b50\u2b50)</li> <li>Quy ho\u1ea1ch \u0111\u1ed9ng c\u01a1 b\u1ea3n (Ph\u1ea7n 1)</li> <li>Quy ho\u1ea1ch \u0111\u1ed9ng c\u01a1 b\u1ea3n (Ph\u1ea7n 2)</li> <li>M\u1ed9t v\u00e0i b\u00e0i t\u1eadp v\u1ec1 Palindrome (\u2b50\u2b50)</li> <li>M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n QHD \u0111i\u1ec3n h\u00ecnh (\u2b50\u2b50)</li> <li>Ph\u00e2n t\u00edch v\u1ec1 QHD - Th\u1ea7y L\u00ea Minh Ho\u00e0ng</li> <li>M\u1ed9t s\u1ed1 k\u0129 thu\u1eadt t\u1ed1i \u01b0u ho\u00e1 QH\u0110 (\u2b50\u2b50\u2b50)</li> <li>K\u0129 thu\u1eadt bao l\u1ed3i (\u2b50\u2b50\u2b50)</li> </ul>"},{"location":"#o-thi","title":"\u0110\u1ed3 th\u1ecb","text":"<ul> <li>C\u00e1c ch\u1ee7 \u0111\u1ec1 c\u01a1 b\u1ea3n v\u1ec1 \u0111\u1ed3 th\u1ecb (\u2b50\u2b50)</li> <li>Thu\u1eadt to\u00e1n duy\u1ec7t \u0111\u1ed3 th\u1ecb theo chi\u1ec1u r\u1ed9ng (BFS)</li> <li>B\u00e0i to\u00e1n kh\u1edbp c\u1ea7u, th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh (C\u00e2y DFS v\u00e0 \u1ee9ng d\u1ee5ng)</li> <li>C\u00e2y khung nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng</li> <li>C\u00e1c thu\u1eadt to\u00e1n v\u1ec1 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t</li> <li>S\u1eafp x\u1ebfp T\u00f4-p\u00f4</li> <li>\u0110\u01b0\u1eddng \u0111i - Chu tr\u00ecnh Euler</li> <li>\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y</li> <li>Thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m</li> <li>B\u00e0i to\u00e1n 2-SAT (\u2b50\u2b50\u2b50)</li> <li>Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng (\u2b50\u2b50\u2b50)</li> </ul>"},{"location":"#tham-lam","title":"Tham lam","text":"<ul> <li>Tham lam (\u2b50\u2b50)</li> <li>Sum-constrained convex optimization</li> </ul>"},{"location":"#so-hoc","title":"S\u1ed1 h\u1ecdc","text":"<ul> <li>Ki\u1ec3m tra s\u1ed1 nguy\u00ean t\u1ed1</li> <li>S\u00e0ng nguy\u00ean t\u1ed1</li> <li>L\u0169y th\u1eeba nh\u1ecb ph\u00e2n</li> </ul>"},{"location":"#series-so-hoc-cua-hackerearth","title":"Series s\u1ed1 h\u1ecdc c\u1ee7a HackerEarth","text":"<ul> <li>S\u1ed1 h\u1ecdc 1 - Modulo v\u00e0 gcd (\u2b50).</li> <li>S\u1ed1 h\u1ecdc 2 - S\u1ed1 nguy\u00ean t\u1ed1, S\u00e0ng Eratosthenes (\u2b50).</li> <li>S\u1ed1 h\u1ecdc 3 - T\u00ednh (a^b) % c (\u2b50).</li> <li>S\u1ed1 h\u1ecdc 4 - Phi h\u00e0m Euler (\u2b50\u2b50).</li> <li>S\u1ed1 h\u1ecdc 4.5 - Ngh\u1ecbch \u0111\u1ea3o modulo (\u2b50\u2b50).</li> <li>S\u1ed1 h\u1ecdc 5 - C\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 T\u1ed5 h\u1ee3p (Combinatorics) (\u2b50\u2b50).</li> <li>S\u1ed1 h\u1ecdc 6 - X\u00e1c su\u1ea5t (Probabilities) (\u2b50\u2b50).</li> <li>S\u1ed1 h\u1ecdc 7 - Bao h\u00e0m - Lo\u1ea1i tr\u1eeb (Inclusion-Exclusion) (\u2b50\u2b50).</li> </ul>"},{"location":"#hinh-hoc","title":"H\u00ecnh h\u1ecdc","text":"<ul> <li>H\u00ecnh h\u1ecdc t\u00ednh to\u00e1n ph\u1ea7n 1</li> <li>H\u00ecnh h\u1ecdc t\u00ednh to\u00e1n ph\u1ea7n 2</li> <li>Thu\u1eadt to\u00e1n \u0111\u01b0\u1eddng qu\u00e9t (\u2b50\u2b50)</li> <li>Bao l\u1ed3i (\u2b50\u2b50\u2b50)</li> </ul>"},{"location":"#toan-hoc","title":"To\u00e1n h\u1ecdc","text":"<ul> <li>To\u00e1n h\u1ecdc trong Tin h\u1ecdc (\u2b50\u2b50)</li> <li>X\u00e1c su\u1ea5t (\u2b50\u2b50)</li> <li>\u0110\u1ecbnh l\u00fd Wilson (\u2b50\u2b50\u2b50)</li> <li>H\u00e0m nh\u00e2n t\u00ednh (Multiplicative Function) (\u2b50\u2b50\u2b50\u2b50)</li> <li>H\u00e0m Mobius (\u2b50\u2b50\u2b50\u2b50)</li> <li>Nh\u00e2n nhanh \u0111a th\u1ee9c - FFT (\u2b50\u2b50\u2b50\u2b50)</li> <li>L\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i</li> </ul>"},{"location":"#toi-uu-hoa","title":"T\u1ed1i \u01b0u ho\u00e1","text":"<ul> <li>T\u00ecm ki\u1ebfm tam ph\u00e2n - Ternary Search (\u2b50\u2b50\u2b50)</li> <li>Local Search (\u2b50\u2b50\u2b50)</li> </ul>"},{"location":"#ky-nang-khac","title":"K\u1ef9 n\u0103ng kh\u00e1c","text":"<ul> <li>R\u1eddi r\u1ea1c ho\u00e1 (n\u00e9n s\u1ed1) (\u2b50)</li> <li>Nh\u00e2n ma tr\u1eadn (\u2b50\u2b50\u2b50)</li> <li>Kh\u1eed nh\u00e2n ma tr\u1eadn (\u2b50\u2b50\u2b50)</li> <li>Mo's algorithm (\u2b50\u2b50\u2b50)</li> <li>Fun with bits</li> <li>Gi\u1ea3i thu\u1eadt c\u1eaft t\u1ec9a Alpha-Beta</li> </ul>"},{"location":"#chia-se","title":"Chia s\u1ebb","text":""},{"location":"#ve-cach-hoc-tin-hoc","title":"V\u1ec1 c\u00e1ch h\u1ecdc Tin h\u1ecdc","text":"<ul> <li>T\u00f4i \u0111\u00e3 h\u1ecdc Tin nh\u01b0 th\u1ebf n\u00e0o - ph\u1ea7n 1</li> <li>T\u00f4i \u0111\u00e3 h\u1ecdc Tin nh\u01b0 th\u1ebf n\u00e0o - ph\u1ea7n 2</li> </ul>"},{"location":"#ki-nang-thi-cu","title":"K\u0129 n\u0103ng thi c\u1eed","text":"<ul> <li>Vi\u1ebft tr\u00ecnh ch\u1ea5m</li> <li>T\u1ed5ng h\u1ee3p l\u1eddi khuy\u00ean cho c\u00e1c k\u1ef3 thi</li> <li>Kinh nghi\u1ec7m thi VOI</li> </ul>"},{"location":"#kinh-nghiem-phong-van","title":"Kinh nghi\u1ec7m ph\u1ecfng v\u1ea5n","text":"<ul> <li>Nh\u1eefng kinh nghi\u1ec7m chung khi ph\u1ecfng v\u1ea5n</li> <li>Kinh nghi\u1ec7m ph\u1ecfng v\u1ea5n - G\u00f3c nh\u00ecn t\u1eeb ng\u01b0\u1eddi ph\u1ecfng v\u1ea5n</li> <li>Nh\u1eefng l\u1ea7n ph\u1ecfng v\u1ea5n v\u00e0 nh\u1eefng kinh nghi\u1ec7m r\u00fat ra</li> </ul>"},{"location":"#fptoj-interview","title":"FPTOJ Interview","text":"<ul> <li>Ph\u1ecfng v\u1ea5n L\u00ea Y\u00ean Thanh</li> <li>Ph\u1ecfng v\u1ea5n Nguy\u1ec5n Xu\u00e2n Kh\u00e1nh</li> <li>Ph\u1ecfng v\u1ea5n Team IOI Vi\u1ec7t Nam 2017</li> <li>Ph\u1ecfng v\u1ea5n Team IOI Vi\u1ec7t Nam 2018</li> </ul>"},{"location":"#khac","title":"Kh\u00e1c","text":"<ul> <li>Ho\u00e0i ni\u1ec7m v\u1ec1 Pascal - th\u1ea7y L\u00ea Minh Ho\u00e0ng</li> </ul>"},{"location":"#cac-ky-thi","title":"C\u00e1c k\u1ef3 thi","text":"<ul> <li>ACM ICPC Regional Vietnam</li> <li>Vi\u1ec7t Nam t\u1ea1i ACM ICPC World Final</li> </ul>"},{"location":"#cac-chu-e-trong-khoa-hoc-may-tinh","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 trong Khoa h\u1ecdc m\u00e1y t\u00ednh","text":""},{"location":"#ngon-ngu-lap-trinh","title":"Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh","text":"<ul> <li>X\u1eed l\u00fd x\u00e2u trong C++</li> <li>S\u1eed d\u1ee5ng regex</li> <li>C++ STL</li> <li>Con tr\u1ecf trong C++</li> </ul>"},{"location":"#machine-learning","title":"Machine Learning","text":"<ul> <li>Machine Learning 101: L\u00e0m quen</li> <li>Classification - Ph\u1ea7n 1</li> <li>Classification - Ph\u1ea7n 2</li> <li>Classification - Ph\u1ea7n 3</li> <li>Classification - Ph\u1ea7n 3</li> <li>PyTorch l\u00e0 g\u00ec?</li> </ul>"},{"location":"#cac-chu-e-khac","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 kh\u00e1c:","text":"<ul> <li>X\u1eed l\u00fd \u1ea3nh<ul> <li>Seam Carving</li> </ul> </li> <li>Cryptography<ul> <li>Public Key Cryptography v\u00e0 RSA</li> </ul> </li> <li>Trang Web FPTOJ phi\u00ean b\u1ea3n \u0111\u1ea7u ti\u00ean</li> <li>Trang Web IOICAMP phi\u00ean b\u1ea3n \u0111\u1ea7u ti\u00ean</li> </ul>"},{"location":"#tro-choi-giai-tri-voi-ai-hay","title":"Tr\u00f2 ch\u01a1i gi\u1ea3i tr\u00ed v\u1edbi AI hay","text":"<ul> <li>C\u1edd Car\u00f4 v\u1edbi AI hay</li> <li>C\u1edd Vua v\u1edbi AI hay</li> <li>C\u1edd Gomoku v\u1edbi AI hay</li> <li>Tr\u00f2 ch\u01a1i D\u00f2 M\u00ecn</li> </ul>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/","title":"Ph\u1ecfng V\u1ea5n Team IOI VN 2017","text":"<p>V\u1eeba qua, \u0111o\u00e0n IOI Vi\u1ec7t Nam \u0111\u00e3 xu\u1ea5t s\u1eafc \u0111em v\u1ec1 cho Vi\u1ec7t Nam nh\u1eefng k\u1ebft qu\u1ea3 r\u1ef1c r\u1ee1 trong k\u00ec thi IOI 2017 t\u1ea1i Tehran. Sau \u0111\u00e2y l\u00e0 4 khu\u00f4n m\u1eb7t ch\u1eafc ch\u1eafn quen thu\u1ed9c v\u1edbi m\u1ecdi ng\u01b0\u1eddi trong c\u1ed9ng \u0111\u1ed3ng CP Vi\u1ec7t Nam:</p> <ul> <li> <p>Ph\u1ea1m Cao Nguy\u00ean \u0111\u1ebfn t\u1eeb tr\u01b0\u1eddng Chuy\u00ean T\u1ed5ng H\u1ee3p H\u00e0 N\u1ed9i v\u1edbi th\u00e0nh t\u00edch v\u00f4 c\u00f9ng \u1ea5n t\u01b0\u1ee3ng, 4 gi\u1ea3i t\u1ea7m qu\u1ed1c t\u1ebf v\u1edbi 2 Huy ch\u01b0\u01a1ng APIO v\u00e0 2 Huy ch\u01b0\u01a1ng IOI. Trong \u0111\u00f3 \u1ea5n t\u01b0\u1ee3ng nh\u1ea5t l\u00e0 t\u1ea5m huy ch\u01b0\u01a1ng v\u00e0ng IOI n\u0103m 2016. B\u1ea1n c\u0169ng c\u00f3 c\u00f4ng \u0111\u00f3ng g\u00f3p r\u1ea5t nhi\u1ec1u trong n\u1ec1n tin h\u1ecdc Vi\u1ec7t Nam trong \u0111\u00f3 b\u1ea1n ch\u00ednh l\u00e0 t\u00e1c gi\u1ea3 c\u1ee7a web interface cho Themis.     CF: http://codeforces.com/profile/natsukagami</p> </li> <li> <p>L\u00ea Quang Tu\u1ea5n \u0111\u1eb9p trai \u0111\u1ebfn t\u1eeb tr\u01b0\u1eddng Chuy\u00ean S\u01b0 Ph\u1ea1m c\u00f9ng nh\u1eefng k\u1ebft qu\u1ea3 c\u0169ng kh\u1ee7ng kh\u00f4ng k\u00e9m. B\u1ea1n \u1ea5y \u0111\u00f3ng g\u00f3p 2 Huy Ch\u01b0\u01a1ng APIO v\u00e0 m\u1ed9t Huy Ch\u01b0\u01a1ng V\u00e0ng IOI.      CF: http://codeforces.com/profile/YouAreMyPrettySunshine</p> </li> <li> <p>Nguy\u1ec5n Hy Ho\u00e0i L\u00e2m l\u00e0 h\u1ecdc sinh \u0111\u1ea7u ti\u00ean tham gia v\u00e0 mang v\u1ec1 t\u1ea5m huy ch\u01b0\u01a1ng IOI cho tr\u01b0\u1eddng Qu\u1ed1c H\u1ecdc Hu\u1ebf. B\u1ea1n \u1ea5y \u0111\u00e3 mang v\u1ec1 cho Vi\u1ec7t Nam 2 huy ch\u01b0\u01a1ng APIO v\u00e0 1 huy ch\u01b0\u01a1ng IOI.     CF: http://codeforces.com/profile/abcdef6199</p> </li> <li> <p>Nguy\u1ec5n Di\u1ec7p Xu\u00e2n Quang l\u00e0 ng\u01b0\u1eddi \u0111\u00e3 xu\u1ea5t s\u1eafc gi\u00e0nh \u0111\u01b0\u1ee3c \u0111i\u1ec3m cao nh\u1ea5t trong k\u00ec VOI 2017 v\u00e0 b\u01b0\u1edbc \u0111\u1ebfn t\u1eeb m\u1ed9t th\u00e0nh ph\u1ed1 kh\u00f4ng c\u00f3 truy\u1ec1n th\u1ed1ng Olympiad nh\u01b0 m\u1ed9t v\u1ecb th\u1ea7n v\u00e0 \u0111\u00e8 b\u1eb9p m\u1ecdi \u0111\u1ed1i th\u1ee7 v\u1edbi rank r\u1ea5t cao (rank 5 TST v\u00e0 rank 2 v\u00e0 huy ch\u01b0\u01a1ng b\u1ea1c APIO trong Vi\u1ec7t Nam) v\u00e0 gi\u00e0nh cho m\u00ecnh m\u1ed9t v\u1ecb tr\u00ed trong IOI. Quang l\u00e0 v\u00ed d\u1ee5 r\u00f5 n\u00e9t v\u1ec1 vi\u1ec7c ti\u1ebfn l\u00ean t\u1eeb c\u1ed1 g\u1eafng h\u1ebft m\u00ecnh.     CF: http://codeforces.com/profile/xuanquang1999</p> </li> </ul> <p>\u0110\u01b0\u1ee3c tham d\u1ef1 m\u1ed9t k\u00ec IOI l\u00e0 m\u01a1 \u01b0\u1edbc c\u1ee7a b\u1ea5t c\u1ee9 b\u1ea1n n\u00e0o trong gi\u1edbi CP n\u01a1i c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c thi \u0111\u1ea5u c\u00e1c th\u1ea7n t\u01b0\u1ee3ng nh\u01b0 Yuta Takaya (Rank 1 IOI, rank 1 IMO 2017, Codeforces: yutaka1999 ), Xiao Mao (Rank 1 Ch\u1ecdn \u0111\u1ed9i tuy\u1ec3n Trung Qu\u1ed1c, Legendary Grandmaster Codeforces: matthew99) v\u00e0 c\u00f3 c\u01a1 h\u1ed9i gi\u1ea3i nh\u1eefng b\u00e0i to\u00e1n c\u1ef1c \u0111\u1ec9nh. VNOI Wiki \u0111\u00e3 r\u1ea5t may m\u1eafn c\u00f3 c\u01a1 h\u1ed9i ph\u1ecfng v\u1ea5n 4 b\u1ea1n kh\u1ee7ng tr\u00ean v\u1edbi hi v\u1ecdng \u0111em \u0111\u1ebfn cho c\u00e1c b\u1ea1n c\u00e1i nh\u00ecn t\u1eeb c\u00e1c IOI-er v\u1ec1 c\u00e1c k\u00ec thi l\u1eadp tr\u00ecnh c\u0169ng nh\u01b0 c\u00e1ch \u00f4n luy\u1ec7n c\u1ee7a c\u00e1c b\u1ea1n \u0111\u1ec3 tr\u1edf n\u00ean kh\u1ee7ng nh\u01b0  b\u00e2y gi\u1edd.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#cau-hoi-chung","title":"C\u00e2u h\u1ecfi chung","text":""},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#1-khi-i-thi-ban-thay-cac-thi-sinh-nuoc-ngoai-co-gi-khac-biet-so-voi-vn-tam-ly-phong-cach-lam-bai","title":"1. Khi \u0111i thi, b\u1ea1n th\u1ea5y c\u00e1c th\u00ed sinh n\u01b0\u1edbc ngo\u00e0i c\u00f3 g\u00ec kh\u00e1c bi\u1ec7t so v\u1edbi VN (t\u00e2m l\u00fd, phong c\u00e1ch l\u00e0m b\u00e0i ...)?","text":"<p>Tu\u1ea5n: V\u1edbi b\u1ecdn T\u00e0u, H\u00e0n hay M\u1ef9,.. th\u00ec ch\u00fang n\u00f3 c\u1ef1c k\u00ec coi tr\u1ecdng k\u1ebft q\u1ee7a, c\u00f2n nh\u1eefng ng\u01b0\u1eddi b\u1ea1n kh\u00e1c m\u00e0 m\u00ecnh quen th\u00ec h\u1ecd \u0111\u1ebfn r\u1ea5t tho\u1ea3i m\u00e1i, giao l\u01b0u, \u0111i ch\u01a1i, v\u00e0 ch\u1eb3ng ngh\u0129 m\u1ea5y \u0111\u1ebfn medal l\u00e0m g\u00ec c\u1ea3. </p> <p>Nguy\u00ean: T\u1ea5t nhi\u00ean v\u1edbi ph\u1ea7n \u0111\u00f4ng s\u1ed1 n\u01b0\u1edbc, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c n\u01b0\u1edbc ch\u00e2u  u, th\u00ec h\u1ecd kh\u00f4ng h\u1ec1 quan t\u00e2m \u0111\u1ebfn k\u1ebft qu\u1ea3 c\u1ee7a cu\u1ed9c thi. Nhi\u1ec1u ng\u01b0\u1eddi ch\u1ec9 coi \u0111\u00e2y l\u00e0 m\u1ed9t d\u1ecbp \u0111i ch\u01a1i, g\u1eb7p m\u1eb7t b\u1ea1n b\u00e8 qu\u1ed1c t\u1ebf,... C\u00f2n l\u1ea1i nh\u1eefng n\u01b0\u1edbc nh\u01b0 M\u1ef9, Nh\u1eadt, Trung Qu\u1ed1c th\u00ec nghi\u00eam t\u00fac k\u1ebft qu\u1ea3 h\u01a1n. D\u00f9 v\u1eady m\u00ecnh th\u1ea5y team Nh\u1eadt n\u0103m nay d\u00f9 l\u00fac n\u00e0o c\u0169ng nh\u01b0 \u0111i ch\u01a1i m\u00e0 k\u1ebft qu\u1ea3 v\u1eabn cao ng\u1ea5t ng\u01b0\u1edfng :))</p> <p>Quang: M\u00ecnh th\u1ea5y th\u00ed sinh n\u01b0\u1edbc ngo\u00e0i c\u00f3 th\u1ec3 chia ra th\u00e0nh hai nh\u00f3m: + Nh\u00f3m 1: R\u1ea5t coi tr\u1ecdng k\u1ebft qu\u1ea3, huy ch\u01b0\u01a1ng (\u0111i\u1ec3n h\u00ecnh l\u00e0 Trung Qu\u1ed1c, M\u1ef9). Hi\u1ec3n nhi\u00ean l\u00e0 \u00e1p l\u1ef1c t\u00e2m l\u00fd c\u1ee7a h\u1ecd s\u1ebd l\u1edbn. + Nh\u00f3m 2: \u0110\u1ebfn cu\u1ed9c thi v\u1edbi m\u1ee5c \u0111\u00edch giao l\u01b0u, vui l\u00e0 ch\u00ednh, kh\u00f4ng quan t\u00e2m nhi\u1ec1u \u0111\u1ebfn huy ch\u01b0\u01a1ng, kh\u00f4ng c\u00f3 \u00e1p l\u1ef1c t\u00e2m l\u00fd. Nh\u01b0ng d\u00f9 thu\u1ed9c nh\u00f3m n\u00e0o th\u00ec m\u00ecnh \u0111\u1ec1u th\u1ea5y h\u1ecd r\u1ea5t c\u1edfi m\u1edf v\u00e0 tr\u00f2 chuy\u1ec7n v\u1edbi h\u1ecd r\u1ea5t tho\u1ea3i m\u00e1i.</p> <p>L\u00e2m: m\u1ed9t s\u1ed1 \u0111\u1ed9i c\u00f3 v\u1ebb nh\u01b0 c\u1ef1c k\u1ef3 xem tr\u1ecdng k\u1ebft qu\u1ea3 (Trung Qu\u1ed1c, H\u00e0n Qu\u1ed1c...), c\u00f2n nh\u1eefng \u0111\u1ed9i kh\u00e1c th\u00ec m\u00ecnh th\u1ea5y h\u1ecd kh\u00e1 tho\u1ea3i m\u00e1i v\u00e0 kh\u00f4ng quan tr\u1ecdng medal cho l\u1eafm. \u0110\u1ed9i VN th\u00ec m\u00ecnh th\u1ea5y l\u00e0 \u1edf gi\u1eefa gi\u1eefa 2 lo\u1ea1i n\u00e0y v\u00e0 thi\u00ean v\u1ec1 lo\u1ea1i 2 h\u01a1n.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#2-khi-hoc-cp-cac-anh-thuong-hoc-tu-nguon-nao-lam-bai-tap-o-autap-trung-vao-hoc-ki-ly-thuyet-hay-lam-bai-tap-e-nang-cao-ky-nang-a","title":"2. Khi h\u1ecdc CP c\u00e1c anh th\u01b0\u1eddng h\u1ecdc t\u1eeb ngu\u1ed3n n\u00e0o, l\u00e0m b\u00e0i t\u1eadp \u1edf \u0111\u00e2u.T\u1eadp trung v\u00e0o h\u1ecdc k\u0129 l\u00fd thuy\u1ebft hay l\u00e0m b\u00e0i t\u1eadp \u0111\u1ec3 n\u00e2ng cao k\u1ef9 n\u0103ng \u1ea1?","text":"<p>Tu\u1ea5n: Ngu\u1ed3n b\u00e0i t\u1eadp th\u00ec thay \u0111\u1ed5i qua t\u1eebng th\u1eddi k\u00ec. H\u1ed3i m\u1edbi h\u1ecdc th\u00ec m\u00ecnh ch\u1ee7 y\u1ebfu c\u00e0y c\u00e1c b\u00e0i A, B, C div2 tr\u00ean codeforces, r\u1ed3i qua m\u1ed9t th\u1eddi gian th\u1ea5y qu\u00e1 ch\u00e1n, th\u00ec sang c\u00e0y m\u1ea5y b\u00e0i d\u00f9ng ki\u1ebfn th\u1ee9c \u1edf tr\u00ean SPOJ su\u1ed1t n\u0103m l\u1edbp 10. \u0110\u1ebfn n\u0103m l\u1edbp 11 th\u00ec m\u1edf r\u1ed9ng sang l\u00e0m USACO, COCI, r\u1ed3i c\u00e0y c\u00e1c \u0111\u1ec1 VOI nh\u1eefng n\u0103m tr\u01b0\u1edbc. Codeforces th\u00ec m\u00ecnh v\u1eabn l\u00e0m th\u01b0\u1eddng xuy\u00ean, nh\u01b0ng l\u00ean l\u1edbp 12 th\u00ec m\u00ecnh kh\u00f4ng l\u00e0m codeforces n\u1eefa. L\u00ean l\u1edbp 12 th\u00ec m\u00ecnh ch\u1ec9 t\u1eadp trung v\u00e0o suy ngh\u0129, n\u00ean l\u00e0m nh\u1eefng \u0111\u1ec1 c\u1ea7n ph\u1ea3i ngh\u0129 s\u00e2u nh\u01b0 POI, hay atcoder, topcoder, v\u00e0o IOI th\u00ec \u0111\u01b0\u1ee3c Nguy\u00ean ph\u1ed5 \u0111\u1ed9 cho JOI Spring camp v\u1edbi \u0111\u1ec1 c\u1ef1c k\u00ec ch\u1ea5t l\u01b0\u1ee3ng. M\u00ecnh ch\u1ea3 bao gi\u1edd t\u1eadp trung v\u00e0o h\u1ecdc l\u00fd thuy\u1ebft l\u00e0m g\u00ec c\u1ea3, khi g\u1eb7p m\u1ed9t b\u00e0i m\u00e0 c\u1ea7n d\u00f9ng ki\u1ebfn th\u1ee9c m\u00ecnh ch\u01b0a h\u1ecdc, th\u00ec m\u00ecnh l\u00ean m\u1ea1ng t\u00ecm t\u00e0i li\u1ec7u \u0111\u1ecdc r\u1ed3i \u00e1p d\u1ee5ng l\u00e0m b\u00e0i \u0111\u00f3.</p> <p>Nguy\u00ean: L\u1edbp 10 h\u1ecdc t\u1ed5ng h\u1ee3p l\u00fac \u0111\u1ea7u \u0111\u01b0\u1ee3c l\u00e0m UVA r\u1ea5t nhi\u1ec1u :D \u0111\u1ec1 UVA t\u00f3m l\u1ea1i kh\u00f4ng kh\u00f3 ngh\u0129 g\u00ec c\u1ea3, nh\u01b0ng r\u1ea5t l\u1eb1ng nh\u1eb1ng x\u1eed l\u00ed l\u0103ng nh\u0103ng, n\u00f3i chung l\u00e0 ngu\u1ed3n t\u1ed1t \u0111\u1ec3 c\u00e0y cho quen tay code. Sau \u0111\u1ea5y m\u00ecnh \u0111i l\u00e0m c\u00e1c OJ c\u00f3 b\u00e0i kh\u00f3 h\u01a1n - l\u1edbp 11 th\u00ec l\u00e0m codeforces (tr\u01b0\u1edbc khi thi VOI th\u00ec l\u00e0m VOI c\u00e1c n\u0103m tr\u01b0\u1edbc), r\u1ed3i l\u00e0m Ba Lan v\u00e0 c\u00e1c contest c\u1ee7a ch\u00e2u  u, \u0111\u1ee3t IOI n\u0103m ngo\u00e1i th\u00ec c\u00e0y topcoder, \u0111\u1ee3t IOI n\u0103m nay th\u00ec l\u00e0m JOI spring camp.</p> <p>Quang: M\u00ecnh th\u01b0\u1eddng l\u00e0m b\u00e0i t\u1eadp v\u00e0 tham gia c\u00e1c contest t\u1eeb trang SPOJ Vi\u1ec7t Nam, Codeforces (\u0111\u1ebfn l\u1edbp 12 th\u00ec c\u00f3 th\u00eam AtCoder, v\u00e0o IOI th\u00ec l\u00e0m th\u00eam c\u00e1c \u0111\u1ec1 IOI t\u1eeb n\u0103m 2006, v\u00e0 \u0111\u01b0\u1ee3c c\u00e1c b\u1ea1n IOI ph\u1ed5 \u0111\u1ed9 cho m\u1ed9t v\u00e0i b\u00e0i JOI Spring Camp) v\u00e0 qua \u0111\u00f3 bi\u1ebft th\u00eam c\u00e1c thu\u1eadt to\u00e1n, c\u00e1c c\u00e1c ti\u1ebfp c\u1eadn m\u1edbi. M\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n th\u00ec m\u00ecnh \u0111\u01b0\u1ee3c c\u00e1c th\u1ea7y c\u00f4 trong \u0111\u1ed9i tuy\u1ec3n d\u1ea1y, m\u1ed9t s\u1ed1 th\u00ec m\u00ecnh t\u00ecm ki\u1ebfm b\u1eb1ng Google v\u00e0 \u01b0u ti\u00ean l\u1ef1a ch\u1ecdn c\u00e1c k\u1ebft qu\u1ea3 c\u00f3 ngu\u1ed3n t\u1eeb Codeforces, e-maxx, geeksforgeeks, \u2026 Ngo\u00e0i ra th\u00ec m\u00ecnh c\u0169ng c\u00f3 \u0111\u1ecdc s\u00e1ch Competitive Programming 3 c\u1ee7a th\u1ea7y Steven Halim theo d\u00f5i k\u00eanh Algorithm Live! tr\u00ean Youtube.</p> <p>L\u00e2m: h\u1ed3i tr\u01b0\u1edbc th\u00ec m\u00ecnh ng\u1ed3i c\u00e0y SPOJ su\u1ed1t, \u0111\u1ebfn cu\u1ed1i 11  th\u00ec ng\u1ed3i l\u00e0m Codeforces. L\u00fac v\u00f2ng 2 n\u0103m nay th\u00ec l\u00e0m USACO. T\u1edbi l\u00fac h\u1ecdc IOI th\u00ec \u0111\u01b0\u1ee3c ph\u1ed5 \u0111\u1ed9 cho JOI SP. V\u1ec1 vi\u1ec7c h\u1ecdc l\u00fd thuy\u1ebft th\u00ec m\u00ecnh ch\u1ec9 \u0111\u1ecdc qua l\u00e0 thu\u1eadt to\u00e1n, CTDL... \u0111\u00f3 d\u00f9ng \u0111\u1ec3 l\u00e0m g\u00ec, t\u1edbi khi c\u1ea7n m\u00ecnh s\u1ebd l\u00f4i ra nghi\u00ean c\u1ee9u sau.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#3-minh-thay-co-rat-nhieu-comment-rang-i-thi-ve-roi-mai-mot-ko-lam-uoc-gi-cho-at-nuoc-ban-than-la-mot-nhan-vat-trong-ay-cac-ban-co-cam-nghi-gi-va-inh-huong-tuong-lai-cac-ban-la-gi","title":"3. M\u00ecnh th\u1ea5y c\u00f3 r\u1ea5t nhi\u1ec1u comment r\u1eb1ng \u0111i thi v\u1ec1 r\u1ed3i mai m\u1ed1t ko l\u00e0m \u0111\u01b0\u1ee3c g\u00ec cho \u0111\u1ea5t n\u01b0\u1edbc. B\u1ea3n th\u00e2n l\u00e0 m\u1ed9t nh\u00e2n v\u1eadt trong \u1ea5y c\u00e1c b\u1ea1n c\u00f3 c\u1ea3m ngh\u0129 g\u00ec v\u00e0 \u0111\u1ecbnh h\u01b0\u1edbng t\u01b0\u01a1ng lai c\u00e1c b\u1ea1n l\u00e0 g\u00ec?","text":"<p>Tu\u1ea5n: M\u00ecnh l\u00e0 m\u1ed9t ng\u01b0\u1eddi r\u1ea5t y\u00eau \u0111\u1ea3ng, y\u00eau c\u00e1ch m\u1ea1ng, n\u00ean m\u00ecnh s\u1ebd quy\u1ebft t\u00e2m sang n\u01b0\u1edbc ngo\u00e0i h\u1ecdc th\u1eadt t\u1ed1t, \u0111\u1ec3 v\u1ec1 v\u1ec1 Vi\u1ec7t nam m\u1edf m\u1ed9t trang tr\u1ea1i g\u00e0, v\u00e0 l\u1eadp m\u1ed9t th\u01b0\u01a1ng hi\u1ec7u g\u00e0 LQT. </p> <p>Nguy\u00ean: M\u00ecnh th\u1ea5y 2 v\u1ebf c\u1ee7a c\u00e2u ch\u1ea3 li\u00ean quan g\u00ec \u0111\u1ebfn nhau c\u1ea3 =)) T\u1ea1i sao c\u1ee9 \u0111i thi th\u00ec sau n\u00e0y kh\u00f4ng l\u00e0m \u0111\u01b0\u1ee3c g\u00ec cho \u0111\u1ea5t n\u01b0\u1edbc? Nghe c\u1ee9 nh\u01b0 ki\u1ec3u l\u1eddi nguy\u1ec1n \u00fd. T\u1ea5t nhi\u00ean vi\u1ec7c h\u1ecdc \u0111\u1ec3 l\u00e0m g\u00ec \u0111\u00f3 \u0111\u00f3ng g\u00f3p cho x\u00e3 h\u1ed9i kh\u00f4ng gi\u1ed1ng v\u1edbi vi\u1ec7c h\u1ecdc \u0111\u1ec3 \u0111i thi th\u1ed1, tuy nhi\u00ean n\u1ebfu m\u00ecnh l\u00e0 ng\u01b0\u1eddi h\u1ecdc t\u1ed1t, th\u00f4ng minh, th\u00ec ch\u1eb3ng c\u00f3 g\u00ec l\u00e0 kh\u00f4ng th\u1ec3 - k\u1ec3 c\u1ea3 \u0111\u00f3ng g\u00f3p cho \u0111\u1ea5t n\u01b0\u1edbc.</p> <p>Quang: Theo m\u00ecnh th\u1ea5y th\u00ec vi\u1ec7c \u201cc\u00f3 l\u00e0m \u0111\u01b0\u1ee3c g\u00ec cho \u0111\u1ea5t n\u01b0\u1edbc hay kh\u00f4ng\u201d ph\u1ee5 thu\u1ed9c v\u00e0o ki\u1ebfn th\u1ee9c chuy\u00ean m\u00f4n, k\u0129 n\u0103ng s\u1ed1ng v\u00e0 th\u00e1i \u0111\u1ed9 c\u1ee7a m\u1ed7i ng\u01b0\u1eddi. Nh\u1eefng b\u1ea1n thu\u1ed9c di\u1ec7n \u201c\u0111i thi\u201d s\u1ebd c\u00f3 l\u1ee3i th\u1ebf v\u1ec1 ki\u1ebfn th\u1ee9c chuy\u00ean m\u00f4n, nh\u01b0ng m\u1ed9t s\u1ed1 b\u1ea1n th\u00ec k\u0129 n\u0103ng s\u1ed1ng kh\u00f4ng b\u1eb1ng c\u00e1c b\u1ea1n \u201ckh\u00f4ng \u0111i thi\u201d. Do \u0111\u00f3, sau cu\u1ed9c thi, m\u00ecnh d\u1ef1 \u0111\u1ecbnh s\u1ebd d\u00e0nh th\u1eddi gian nhi\u1ec1u h\u01a1n cho vi\u1ec7c r\u00e8n luy\u1ec7n c\u00e1c k\u1ef9 n\u0103ng s\u1ed1ng. M\u00ecnh \u0111ang h\u1ecdc ng\u00e0nh C\u00f4ng ngh\u1ec7 Th\u00f4ng tin \u1edf Tr\u01b0\u1eddng \u0110H Khoa h\u1ecdc T\u1ef1 nhi\u00ean HCM (d\u1ef1 \u0111\u1ecbnh n\u0103m 2 s\u1ebd \u0111i du h\u1ecdc t\u1ea1i tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc Qu\u1ed1c gia Singapore) v\u1edbi mong mu\u1ed1n tr\u1edf th\u00e0nh m\u1ed9t nh\u00e0 ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m (developer), v\u00e0 l\u00e0m vi\u1ec7c cho c\u00f4ng ty Google. Sau khi \u0111\u00e3 c\u00f3 \u0111\u1ee7 kinh nghi\u1ec7m, m\u00ecnh s\u1ebd quay v\u1ec1 Vi\u1ec7t Nam v\u00e0 m\u1edf m\u1ed9t c\u00f4ng ty ph\u1ea7n m\u1ec1m ri\u00eang.</p> <p>L\u00e2m: D\u1ef1 \u0111\u1ecbnh t\u01b0\u01a1ng lai c\u1ee7a m\u00ecnh l\u00e0 \u0111i n\u01b0\u1edbc ngo\u00e0i h\u1ecdc t\u1eadp th\u1eadt t\u1ed1t, sau \u0111\u00f3 quay v\u1ec1 n\u01b0\u1edbc, v\u00e0o \u0110\u1ea3ng v\u00e0 ph\u1ea5n \u0111\u1ea5u l\u00e0m Ch\u1ee7 t\u1ecbch n\u01b0\u1edbc.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#4-cac-ban-cam-nhan-the-nao-ve-thoi-gian-hoc-oi-tuyen-tu-luc-o-truong-cap-3-en-luc-hoc-chung-neu-co-the-cac-ban-co-the-chia-se-1-vai-ki-niem-ang-nho","title":"4. C\u00e1c b\u1ea1n c\u1ea3m nh\u1eadn th\u1ebf n\u00e0o v\u1ec1 th\u1eddi gian h\u1ecdc \u0111\u1ed9i tuy\u1ec3n, t\u1eeb l\u00fac \u1edf tr\u01b0\u1eddng c\u1ea5p 3 \u0111\u1ebfn l\u00fac h\u1ecdc chung? N\u1ebfu c\u00f3 th\u1ec3 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 chia s\u1ebb 1 v\u00e0i k\u1ec9 ni\u1ec7m \u0111\u00e1ng nh\u1edb?","text":"<p>Tu\u1ea5n: B\u1ecdn m\u00ecnh th\u1eadt l\u00f2ng xin l\u1ed7i Quang v\u00ec \u0111\u00e3 nh\u1ed3i qu\u00e1 nhi\u1ec1u nh\u1eefng th\u00f4ng tin m\u00e0 \u0111\u00e1ng l\u1ebd ra \u00f4ng n\u00ean ti\u1ebfp thu m\u1ed9t cachs t\u1ef1 nhi\u00ean, v\u00e0 \u0111\u00e3 troll \u00f4ng qu\u00e1 nhi\u1ec1u trong kho\u1ea3ng th\u1eddi gian h\u1ecdc \u0111\u1ed9i tuy\u1ec3n, c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t trong nh\u1eefng nguy\u00ean do khi\u1ebfn \u00f4ng b\u1ecb t\u00e2m l\u00fd. L\u00fac h\u1ecdc chung th\u00ec k\u1ec9 ni\u1ec7m nhi\u1ec1u l\u1eafm, m\u00ecnh nh\u1edb nh\u1ea5t l\u00e0 l\u1ea7n c\u1ea3 4 \u0111\u1ee9a \u0111i \u0103n b\u00edt t\u1ebft r\u1ed3i m\u01b0a ng\u1eadp \u0111\u1ebfn b\u1eafp \u0111\u00f9i, v\u1eeba \u0111i v\u1eeba h\u00e1t L\u1ee5t t\u1eeb ng\u00e3 t\u01b0 \u0111\u01b0\u1eddng ph\u1ed1, hay l\u00e0 nh\u1eefng bu\u1ed5i \u0111i \u0103n, \u0111i ch\u01a1i, \u0111i xem phim, \u0111i d\u1ea1o b\u1edd h\u1ed3 \u2026 \u00c0 c\u1ea3 hackathon t\u1ed5ng h\u1ee3p n\u1eefa, c\u1ea3 l\u0169 th\u1ee9c \u0111\u1ebfn s\u00e1ng vui l\u1eafm.</p> <p>Nguy\u00ean: N\u00f3i chung qu\u00e3ng th\u1eddi gian h\u1ecdc \u0111\u1ed9i tuy\u1ec3n c\u00f3 th\u1ec3 n\u00f3i l\u00e0 k\u1ec9 ni\u1ec7m \u0111\u00e1ng nh\u1edb nh\u1ea5t th\u1eddi \u0111i h\u1ecdc c\u1ee7a m\u00ecnh. Ai m\u00e0 l\u1ea1i kh\u00f4ng th\u00edch gi\u00e0nh to\u00e0n b\u1ed9 th\u1eddi gian cho ni\u1ec1m y\u00eau th\u00edch c\u1ee7a m\u00ecnh ch\u1ee9? </p> <p>Quang: Kho\u1ea3ng th\u1eddi gian h\u1ecdc \u0111\u1ed9i tuy\u1ec3n l\u00e0 m\u1ed9t kho\u1ea3ng th\u1eddi gian m\u00ecnh c\u1ea3m th\u1ea5y th\u00edch nh\u1ea5t, khi m\u00e0 m\u00ecnh \u0111\u01b0\u1ee3c h\u1ecdc b\u1ed9 m\u00f4n y\u00eau th\u00edch m\u00e0 t\u1ea1m th\u1eddi kh\u00f4ng ph\u1ea3i b\u1eadn t\u00e2m \u0111\u1ebfn c\u00e1c m\u00f4n h\u1ecdc kh\u00e1c. L\u00fac h\u1ecdc IOI, m\u00ecnh \u0111\u00e3 ng\u1ed9 ra nhi\u1ec1u \u0111i\u1ec1u m\u1edbi (nh\u01b0 vi\u1ec7c kh\u00f4ng l\u1ea1m v\u00e0o vi\u1ec7c gi\u1ea3i c\u00e1c b\u00e0i d\u1ec5 trong l\u00fac l\u00e0m contest tr\u00ean Codeforces, hay k\u0129 n\u0103ng x\u1eed l\u00ed, ph\u00e2n lo\u1ea1i th\u00f4ng tin thu th\u1eadp \u0111\u01b0\u1ee3c tr\u00ean Internet, ...). C\u00f3 nhi\u1ec1u k\u1ec9 ni\u1ec7m \u0111\u00e1ng nh\u1edb (c\u1ea3 l\u00fac h\u1ecdc \u1edf tr\u01b0\u1eddng c\u1ea5p 3 v\u00e0 l\u00fac h\u1ecdc chung) m\u00e0 m\u00ecnh kh\u00f4ng k\u1ec3 h\u1ebft \u0111\u01b0\u1ee3c.</p> <ul> <li> <p>C\u00f3 m\u1ed9t h\u00f4m h\u1ecdc \u0111\u1ed9i tuy\u1ec3n VOI, v\u00ec m\u1ed9t l\u00fd do n\u00e0o \u0111\u00f3, th\u1ea7y d\u1ea1y \u0111\u1ed9i tuy\u1ec3n quy\u1ebft \u0111\u1ecbnh kh\u00f3a c\u1eeda ph\u00f2ng \u0111\u1ed9i tuy\u1ec3n l\u1ea1i. Sau \u0111\u00f3, th\u1ea7y m\u1edbi nh\u1eadn ra l\u00e0 trong ph\u00f2ng kh\u00f4ng c\u00f3 ch\u00eca kh\u00f3a. Th\u1ea7y ph\u1ea3i g\u1ecdi m\u1ed9t th\u1ea7y d\u1ea1y \u0111\u1ed9i tuy\u1ec3n kh\u00e1c \u0111em ch\u00eca kh\u00f3a l\u00ean. L\u00fac \u0111\u1ebfn n\u01a1i, th\u1ea7y \u0111em ch\u00eca n\u00f3i: \u201c\u0110\u1ee9a n\u00e0o ngh\u1ecbch d\u1ea1i th\u1ebf?\u201d. C\u1ea3 \u0111\u1ed9i tuy\u1ec3n h\u00f4m \u1ea5y \u0111\u01b0\u1ee3c m\u1ed9t tr\u1eadn c\u01b0\u1eddi v\u1ee1 b\u1ee5ng.</p> </li> <li> <p>L\u00fac \u1edf \u0111\u1ed9i tuy\u1ec3n IOI, m\u1ed9t t\u1ed1i, c\u1ea3 \u0111\u1ed9i tuy\u1ec3n \u0111i \u0103n b\u00f2 b\u00edt t\u1ebft, xong tr\u1eddi m\u01b0a x\u1ed1i x\u1ea3, n\u01b0\u1edbc ng\u1eadp \u0111\u1ebfn \u0111\u1ea7u g\u1ed1i. C\u1ea3 \u0111\u1ed9i tuy\u1ec3n \u0111ang l\u1ed9i n\u01b0\u1edbc \u0111i th\u00ec m\u1ed9t chi\u1ebfc xe t\u1ea3i ch\u1ea1y qua, mang theo c\u1ea3 m\u1ed9t \u0111\u1ee3t s\u00f3ng th\u1ea7n \u0111\u1ebfn. Tu\u1ea5n v\u00e0 Nguy\u00ean la l\u00ean: \u201cNami t\u1edbi k\u00eca\u201d (Ai ch\u01a1i LMHT s\u1ebd hi\u1ec3u). B\u1eefa \u0111\u1ea5y ai c\u0169ng \u01b0\u1edbt c\u1ea3 ng\u01b0\u1eddi, nh\u01b0ng \u0111\u00e2y l\u00e0 m\u1ed9t k\u1ec9 ni\u1ec7m kh\u00e1 vui.</p> </li> </ul> <p>L\u00e2m: K\u1ef7 ni\u1ec7m IOI th\u00ec m\u00ecnh nh\u1edb \u0111\u00eam tr\u01b0\u1edbc ng\u00e0y 1, m\u00ecnh v\u00e0 Nguy\u00ean nh\u1ed3i nh\u00e9t v\u00e0o \u0111\u1ea7u Quang v\u00e0 Tu\u1ea5n m\u1ed9t \u0111\u1ed1ng tr\u00ed tu\u1ec7 ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#5-cac-ban-lam-gi-suy-nghi-gi-khi-co-cam-giac-that-vong-chan-nan-trong-viec-hoc","title":"5. C\u00e1c b\u1ea1n l\u00e0m g\u00ec, suy ngh\u0129 g\u00ec khi c\u00f3 c\u1ea3m gi\u00e1c th\u1ea5t v\u1ecdng, ch\u00e1n n\u1ea3n trong vi\u1ec7c h\u1ecdc?","text":"<p>Tu\u1ea5n: Vi\u1ec7c n\u00e0y x\u1ea3y ra r\u1ea5t th\u01b0\u1eddng xuy\u00ean, vi\u1ec7c h\u1ecdc li\u00ean t\u1ee5c, l\u00e0m b\u00e0i li\u00ean t\u1ee5c d\u1eabn \u0111\u1ebfn m\u1ec7t m\u1ecfi, \u00e1p l\u1ef1c, n\u00ean m\u1ea5t c\u1ea3m h\u1ee9ng h\u1ecdc, thi\u1ebfu s\u00e1ng t\u1ea1o. M\u00ecnh \u0111\u00e3 g\u1eb7p qua t\u00ecnh tr\u1ea1ng n\u00e0y r\u1ea5t nhi\u1ec1u l\u1ea7n. M\u00ecnh r\u00fat ra m\u1ed9t kinh nghi\u1ec7m l\u00e0 ph\u1ea3i l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 lu\u00f4n lu\u00f4n gi\u1eef \u0111\u01b0\u1ee3c \u0111\u1ed9ng l\u1ef1c h\u1ecdc ? Xem phim v\u00e0 \u0111\u1ecdc s\u00e1ch, m\u00ecnh th\u1ea5y s\u00e1ch v\u00e0 phim khi\u1ebfn cho m\u00ecnh c\u00f3 \u0111\u1ed9ng l\u1ef1c nh\u1ea5t. M\u1ed9t s\u1ed1 b\u1ed9 phim m\u00e0 m\u00ecnh xem xong c\u1ea3m th\u1ea5y m\u00e1u chi\u1ebfn c\u1ef1c k\u00ec, mu\u1ed1n l\u00e0m h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i tr\u00ean th\u1ebf gi\u1edbi n\u00e0y lu\u00f4n, nh\u01b0 : Ba ch\u00e0ng ng\u1ed1c, About time, \u2026 S\u00e1ch th\u00ec c\u00f3 nh\u1eefng cu\u1ed1n m\u00ecnh r\u1ea5t th\u00edch nh\u01b0 : Nh\u00e0 gi\u1ea3 kim, Kh\u00f4ng gia \u0111\u00ecnh, Tri\u1ec7u ph\u00fa khu \u1ed5 chu\u1ed9t, \u2026 M\u00ecnh hay l\u00ean xem code m\u1ea5y th\u1eb1ng nick \u0111\u1ecf tr\u00ean codeforces n\u1eefa, r\u1ed3i ngh\u0129 r\u1eb1ng, m\u1ed9t ng\u00e0y n\u00e0o \u0111\u1ea5y m\u00ecnh s\u1ebd code \u0111\u01b0\u1ee3c nh\u01b0 m\u1ea5y th\u1eb1ng \u0111\u1ea5y. Hay th\u1ea5y c\u00e1c anh c\u00e1c b\u1ea1n thi kh\u1ee7ng v\u1ec1 th\u00ec m\u00ecnh c\u00f3 c\u1ef1c nhi\u1ec1u \u0111\u1ed9ng l\u1ef1c \u0111\u1ec3 chi\u1ebfn \u0111\u1ea5u. </p> <p>Nguy\u00ean: M\u00ecnh \u00edt b\u1ecb c\u00e1i n\u00e0y n\u00ean c\u0169ng kh\u00f4ng ngh\u0129 ra l\u00e0 n\u00ean l\u00e0m g\u00ec? T\u1ea1i v\u00ec c\u00e1ch ch\u1ecdn b\u00e0i c\u1ee7a m\u00ecnh c\u0169ng c\u00f3 ph\u1ea7n h\u1ee3p v\u1edbi tinh th\u1ea7n (l\u1edbp 10 c\u00f2n tr\u00e2u b\u00f2 th\u00ec l\u00e0m b\u00e0i tr\u00e2u b\u00f2, sau n\u00e0y c\u00e0ng ng\u00e0y c\u00e0ng \u00edt s\u1ee9c th\u00ec l\u00e0m nhi\u1ec1u b\u00e0i tr\u00ed tu\u1ec7 h\u01a1n, ngh\u0129 nhi\u1ec1u h\u01a1n code\u2026). \u0110\u1ed3ng th\u1eddi, m\u00ecnh r\u1ea5t hay nghe nh\u1ea1c trong l\u00fac code (v\u00e0 c\u1ea3 khi ngh\u0129 b\u00e0i), r\u1ea5t c\u00f3 t\u00e1c d\u1ee5ng l\u00e0m d\u00e3n tinh th\u1ea7n.</p> <p>Quang: Trong qu\u00e1 tr\u00ecnh h\u1ecdc, vi\u1ec7c l\u00e0m b\u00e0i li\u00ean t\u1ee5c c\u00f3 l\u00fac s\u1ebd d\u1eabn \u0111\u1ebfn s\u1ef1 m\u1ec7t m\u1ecfi, l\u01b0\u1eddi bi\u1ebfng; ho\u1eb7c vi\u1ec7c g\u1eb7p m\u1ed9t b\u00e0i qu\u00e1 kh\u00f3, \u0111\u1ecdc sol 4-5 l\u1ea7n v\u1eabn kh\u00f4ng hi\u1ec3u hay l\u00e0m kh\u00f4ng \u0111\u01b0\u1ee3c m\u1ed9t b\u00e0i n\u00e0o \u0111\u00f3 m\u00e0 c\u1ea3 t\u1ef7 ng\u01b0\u1eddi AC d\u1eabn \u0111\u1ebfn ch\u00e1n n\u1ea3n, m\u1ea5t \u0111\u1ed9ng l\u1ef1c. </p> <p>M\u1ed7i l\u1ea7n c\u1ea3m th\u1ea5y m\u1ec7t m\u1ecfi, l\u01b0\u1eddi bi\u1ebfng, m\u00ecnh th\u01b0\u1eddng t\u1ea1m ng\u01b0ng c\u00e0y b\u00e0i kh\u00f3, quay qua l\u00e0m m\u1ed9t ho\u1eb7c hai b\u00e0i d\u1ec5 (c\u1ee1 A Div 1 Codeforces) \u0111\u1ec3 th\u01b0 gi\u00e3n \u0111\u1ea7u \u00f3c, r\u1ed3i quay tr\u1edf l\u1ea1i. Ho\u1eb7c m\u1ed7i khi m\u00ecnh m\u1ea5t \u0111\u1ed9ng l\u1ef1c, m\u00ecnh th\u01b0\u1eddng l\u1eadt l\u1ea1i c\u00e1c contest c\u0169 m\u00ecnh \u0111\u00e3 tham gia, l\u00e0m m\u1ed9t b\u00e0i m\u00e0 tr\u01b0\u1edbc \u0111\u00f3 m\u00ecnh kh\u00f4ng l\u00e0m \u0111\u01b0\u1ee3c, khi \u0111\u1ea5y th\u00ec m\u00ecnh c\u1ea3m th\u1ea5y r\u1eb1ng, m\u00ecnh \u0111\u00e3 ti\u1ebfn b\u1ed9 h\u01a1n so v\u1edbi l\u00fac tr\u01b0\u1edbc, v\u00e0 c\u00f3 l\u1ea1i \u0111\u1ed9ng l\u1ef1c. Ngo\u00e0i ra, \u0111\u00f4i khi m\u00ecnh c\u0169ng t\u00ecnh c\u1edd b\u1eaft g\u1eb7p m\u1ed9t s\u1ed1 video, b\u00e0i vi\u1ebft n\u00f3i v\u1ec1 vi\u1ec7c ph\u1ea3i n\u1ed7 l\u1ef1c, ph\u1ea5n \u0111\u1ea5u n\u1ebfu mong mu\u1ed1n c\u00f3 th\u00e0nh c\u00f4ng, \u0111i\u1ec1u \u0111\u00f3 c\u0169ng ti\u1ebfp th\u00eam cho m\u00ecnh nhi\u1ec1u \u0111\u1ed9ng l\u1ef1c. (N\u00f3i nh\u1ecf: \u0111\u00e2y c\u0169ng l\u00e0 m\u1ed9t ngu\u1ed3n \u0111\u1ed9ng l\u1ef1c kh\u00f4ng nh\u1ecf c\u1ee7a m\u00ecnh)</p> <p>L\u00e2m: Khi m\u00e0 th\u1ea5t v\u1ecdng th\u00ec th\u01b0\u1eddng m\u00ecnh s\u1ebd \u0111i ng\u1ee7, ng\u1ee7 d\u1eady xong l\u00e0 t\u1ef1 reset h\u1ebft c\u1ea3m x\u00fac. Khi m\u00e0 c\u1ea3m th\u1ea5y l\u01b0\u1eddi bi\u1ebfng m\u00ecnh s\u1ebd ki\u1ebfm m\u1ea5y b\u00e0i code max d\u00e0i v\u00e0 l\u1eb1ng nh\u1eb1ng ra \u0111\u1ec3 code, r\u1ed3i v\u1eeba code v\u1eeba ch\u1eedi, t\u1edbi l\u00fac AC th\u00ec s\u1ebd sung s\u01b0\u1edbng v\u00e0 c\u00f3 \u0111\u1ed9ng l\u1ef1c \u0111\u1ec3 h\u1ecdc ti\u1ebfp. Ho\u1eb7c l\u00e0 m\u00ecnh s\u1ebd m\u1edf h\u00ecnh Astolfo ra xem, \u0111\u1ed9ng l\u1ef1c s\u1ebd \u0111\u01b0\u1ee3c auto refill.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#6-ieu-gi-ma-cac-ban-cho-la-quan-trong-nhat-e-co-uoc-thanh-cong-nhu-ngay-hom-nay-ex-kien-nhan-ky-luat-am-me","title":"6. \u0110i\u1ec1u g\u00ec m\u00e0 c\u00e1c b\u1ea1n cho l\u00e0 quan tr\u1ecdng NH\u1ea4T \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c th\u00e0nh c\u00f4ng nh\u01b0 ng\u00e0y h\u00f4m nay (ex: ki\u00ean nh\u1eabn, k\u00fd lu\u1eadt, \u0111am m\u00ea....)?","text":"<p>Tu\u1ea5n: Theo m\u00ecnh th\u00ec m\u00ecnh th\u1ea5y \u0111\u00e2y ch\u1eb3ng ph\u1ea3i th\u00e0nh c\u00f4ng. C\u00f2n y\u1ebfu t\u1ed1 quan tr\u1ecdng nh\u1ea5t \u0111\u1ec3 \u0111\u01b0\u1ee3c V\u00e0ng IOI ? Theo m\u00ecnh th\u00ec V\u00e0ng IOI \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn t\u1eeb tr\u01b0\u1edbc r\u1ed3i, c\u00e1c b\u1ea1n ch\u1ec9 c\u1ea7n hi\u1ec3u tai sao m\u00ecnh \u0111\u01b0\u1ee3c th\u00f4i, t\u1ea5t c\u1ea3 l\u00e0 s\u1ed1 c\u1ea3 r\u1ed3i. </p> <p>Nguy\u00ean: IOI b\u00e9 t\u00ed \u1ea5y m\u00e0 :D quan tr\u1ecdng l\u00e0 ph\u1ea3i c\u00f3 may m\u1eafn th\u00ec s\u1ebd c\u00f3 medal. C\u00f2n \u0111\u1ec3 v\u00e0o \u0111\u1ed9i tuy\u1ec3n th\u00ec c\u00f3 l\u1ebd l\u00e0 k\u1ef7 lu\u1eadt. C\u00f3 th\u1ec3 m\u1ecdi ng\u01b0\u1eddi kh\u00f4ng t\u1ef1 \u0111\u1ec3 \u00fd, ch\u1ee9 d\u00f9 c\u00f3 game g\u1ee7ng g\u00ec c\u1ea3 ng\u00e0y th\u00ec \u0111\u1ed9i IOI kh\u00f4ng h\u00f4m n\u00e0o l\u00e0 b\u1ecf l\u00e0m b\u00e0i c\u1ea3 :D</p> <p>Quang: Theo m\u00ecnh th\u00ec quan tr\u1ecdng nh\u1ea5t l\u00e0 l\u00f2ng \u0111am m\u00ea. M\u00ecnh \u0111\u00e3 t\u1eebng \u0111\u1ecdc qua c\u00e2u n\u00f3i: \"N\u1ebfu c\u00f4ng vi\u1ec7c l\u00e0 \u0111am m\u00ea c\u1ee7a b\u1ea1n, th\u00ec m\u1ed7i ng\u00e0y b\u1ea1n kh\u00f4ng ph\u1ea3i \u0111i l\u00e0m!\". N\u1ebfu c\u00f3 \u0111am m\u00ea, th\u00ec t\u1ef1 kh\u1eafc ta s\u1ebd c\u00f3 k\u1ef7 lu\u1eadt, ki\u00ean nh\u1eabn, si\u00eang n\u0103ng \u0111\u1ec3 theo \u0111u\u1ed5i con \u0111\u01b0\u1eddng m\u00ecnh \u0111\u00e3 ch\u1ecdn.</p> <p>L\u00e2m: M\u00ecnh kh\u00f4ng h\u1ec1 ngh\u0129 \u0111\u00e2y l\u00e0 th\u00e0nh c\u00f4ng. C\u00f2n \u0111i\u1ec1u quan tr\u1ecdng nh\u1ea5t theo m\u00ecnh \u0111\u1ec3 c\u00f3 medal l\u00e0 code nhi\u1ec1u cho tay to v\u00e0o, b\u1ea1n s\u1ebd auto c\u00f3 medal (assume b\u1ea1n \u0111\u00e3 v\u00e0o \u0111\u01b0\u1ee3c \u0111\u1ed9i IOI). \u00c0, v\u00e0 l\u00e0m sao \u0111\u1ea5y \u0111\u1ec3 \u0111\u1eebng xui nh\u01b0 Quang l\u00e0 \u0111\u01b0\u1ee3c :'(</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#7-em-xin-hoi-thoi-gian-bieu-hang-ngay-cua-cac-anh-trong-luc-hoc-van-hoa-khong-trong-mua-on-luyen-cay-thi-ioi-o-truong-uoc-khong-a","title":"7. Em xin h\u1ecfi th\u1eddi gian bi\u1ec3u h\u1eb1ng ng\u00e0y c\u1ee7a c\u00e1c anh trong l\u00fac h\u1ecdc v\u0103n h\u00f3a (kh\u00f4ng trong m\u00f9a \u00f4n luy\u1ec7n c\u00e0y thi IOI) \u1edf tr\u01b0\u1eddng \u0111\u01b0\u1ee3c kh\u00f4ng \u1ea1 ?","text":"<p>Tu\u1ea5n: M\u00ecnh \u0111\u1ebfn l\u1edbp, ti\u1ebft n\u00e0o m\u00e0 hay th\u00ec m\u00ecnh nghe, ti\u1ebft n\u00e0o m\u00e0 ch\u00e1n th\u00ec m\u00ecnh ng\u1ee7 g\u1ee5c xu\u1ed1ng v\u00ec m\u1ec7t. \u1ede nh\u00e0 th\u00ec v\u1eabn h\u1ecdc Tin, r\u1ed3i xem phim \u0111\u1ecdc s\u00e1ch \u0111\u1ec3 gi\u1ea3i tr\u00ed. V\u1eabn \u0111i \u0103n ch\u01a1i v\u1edbi b\u1ea1n b\u00e8, v\u1eabn c\u00f3 nh\u1eefng k\u1ec9 ni\u1ec7m \u0111i h\u1ecdc mu\u1ed9n, b\u1ecb ghi s\u1ed5 \u0111\u1ea7u b\u00e0i.  Nh\u01b0 th\u1ebf th\u00ec tu\u1ed5i thanh xu\u00e2n c\u1ee7a m\u00ecnh m\u1edbi c\u00f3 nhi\u1ec1u th\u1ee9 \u0111\u1ec3 nh\u1edb. </p> <p>Nguy\u00ean: Xa qu\u00e1 r\u1ed3i, qu\u00ean g\u1ea7n h\u1ebft r\u1ed3i :D m\u00ecnh ch\u1ec9 nh\u1edb h\u1ed3i l\u1edbp 10 th\u00ec c\u00f2n h\u1ecdc \u0111\u1ea7y \u0111\u1ee7 c\u00e1c m\u00f4n, m\u00e0 h\u1ed3i \u0111\u1ea5y h\u00f3a v\u1eabn c\u00f2n nhai \u0111\u01b0\u1ee3c n\u00ean v\u1eabn ng\u1ed3i h\u1ecdc \u0111\u1ea7y \u0111\u1ee7. L\u00fac \u0111\u1ea5y th\u00ec t\u1ed1i c\u1ee9 l\u00e0m h\u1ebft b\u00e0i c\u00e1c m\u00f4n xong th\u00ec ng\u1ed3i code. M\u00e0 h\u1ed3i \u0111\u1ea5y h\u00f3a v\u1edbi l\u00ed nhi\u1ec1u b\u00e0i kh\u00f4ng ch\u1ecbu \u0111\u01b0\u1ee3c n\u00ean th\u1ec9nh tho\u1ea3ng c\u0169ng b\u1ecf b\u00e0i hihi.</p> <p>Quang: M\u00ecnh th\u00ec s\u00e1ng h\u1ecdc \u1edf tr\u01b0\u1eddng t\u1eeb th\u1ee9 2 \u0111\u1ebfn th\u1ee9 7, t\u1ed1i h\u1ecdc th\u00eam. H\u1ec5 l\u00fac n\u00e0o xong h\u1ebft b\u00e0i v\u1edf \u1edf tr\u01b0\u1eddng th\u00ec c\u00e0y CP, n\u1ebfu th\u1ea5y \u0111\u1ea7u \u00f3c m\u1ec7t m\u1ecfi th\u00ec ch\u01a1i game th\u01b0 gi\u00e3n (Touhou, m\u1ea5y b\u1ea3n Mario c\u1ef1c kh\u00f3, RollerCoaster Tycoon 2, c\u00f3 h\u00f4m th\u00ec code Danmakufu, \u2026), h\u1ecdc v\u1ec1 l\u1eadp tr\u00ecnh ph\u1ea7n m\u1ec1m ho\u1eb7c xem c\u00e1c video khoa h\u1ecdc tr\u00ean c\u00e1c k\u00eanh Vsauce, SciShow, BrainCraft, TED-ed, ...</p> <p>L\u00e2m: Ng\u00e0y n\u00e0o m\u00e0 nhi\u1ec1u ti\u1ebft to\u00e1n l\u00fd h\u00f3a (not sinh, fck sinh) th\u00ec m\u00ecnh s\u1ebd \u0111\u1ebfn l\u1edbp, ng\u1ed3i nghe gi\u1ea3ng c\u0169ng vui, th\u1ec9nh tho\u1ea3ng l\u1ea1i c\u00f3 b\u00e0i n\u00e0o \u0111\u1ea5y m\u00ecnh l\u00e0m \u0111\u01b0\u1ee3c th\u00ec c\u0169ng vui. C\u00f2n \u1edf nh\u00e0 th\u00ec m\u00ecnh xem phim, ch\u01a1i game v\u00e0 \u0111\u1ecdc wiki (v\u1ec1 \u0111\u1ee7 th\u1ee9, v\u1ec1 game, v\u1ec1 nh\u00e2n v\u1eadt, v\u1ec1 l\u1ecbch s\u1eed \u0110ng, l\u1ecbch s\u1eed th\u1ebf gi\u1edbi...).</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#8-cho-minh-hoi-du-inh-tuong-lai-cua-cac-ban-nhu-the-nao-y-minh-la-sau-ai-hoc-ay","title":"8. Cho m\u00ecnh h\u1ecfi d\u1ef1 \u0111\u1ecbnh t\u01b0\u01a1ng lai c\u1ee7a c\u00e1c b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o. \u00dd m\u00ecnh l\u00e0 sau \u0111\u1ea1i h\u1ecdc \u1ea5y.","text":"<p>Tu\u1ea5n: M\u00ecnh s\u1ebd c\u01b0\u1edbi v\u1ee3, r\u1ed3i sinh con, r\u1ed3i d\u1ea1y con thi IOI.</p> <p>Nguy\u00ean: T\u01b0\u01a1ng lai m\u1ecbt m\u00f9, h\u1ecdc \u0111\u1ea1i h\u1ecdc s\u1ebd t\u00ecm c\u01a1 h\u1ed9i \u0111i l\u00e0m thu\u00ea, r\u1ed3i sau \u0111\u00f3 s\u1ebd \u0111i thay \u0111\u1ed5i th\u1ebf gi\u1edbi.</p> <p>Quang: Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean, m\u00ecnh d\u1ef1 \u0111\u1ecbnh tr\u1edf th\u00e0nh m\u1ed9t nh\u00e0 ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m (developer), v\u00e0 l\u00e0m vi\u1ec7c cho c\u00f4ng ty Google. Sau khi \u0111\u00e3 c\u00f3 \u0111\u1ee7 kinh nghi\u1ec7m, m\u00ecnh s\u1ebd quay v\u1ec1 Vi\u1ec7t Nam v\u00e0 m\u1edf m\u1ed9t c\u00f4ng ty ph\u1ea7n m\u1ec1m ri\u00eang. C\u00f2n vi\u1ec7c c\u00f3 g\u1ea5u hay kh\u00f4ng th\u00ec t\u00f9y duy\u00ean s\u1ed1.</p> <p>L\u00e2m : C\u00e2u n\u00e0y c\u1ee7a L\u00e2m n\u00ean L\u00e2m ko mu\u1ed1n tr\u1ea3 l\u1eddi.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#9-theo-cac-anh-nghi-thi-trinh-o-cua-nhung-nguoi-tung-at-huy-chuong-ioi-sau-khi-tot-nghiep-h-co-hon-trinh-o-cua-nhung-nguoi-khong-phai-dan-competitive-programming-nhung-cham-chi-can-cu-chiu-kho-tim-hieu-sau-khi-tot-nghiep-h-khong-va-neu-hon-thi-nhung-nguoi-tung-at-huy-chuong-se-hon-uoc-nhung-iem-gi-a","title":"9. Theo c\u00e1c anh ngh\u0129 th\u00ec tr\u00ecnh \u0111\u1ed9 c\u1ee7a nh\u1eefng ng\u01b0\u1eddi t\u1eebng \u0111\u1ea1t huy ch\u01b0\u01a1ng IOI sau khi t\u1ed1t nghi\u1ec7p \u0110H c\u00f3 h\u01a1n tr\u00ecnh \u0111\u1ed9 c\u1ee7a nh\u1eefng ng\u01b0\u1eddi kh\u00f4ng ph\u1ea3i d\u00e2n competitive programming nh\u01b0ng ch\u0103m ch\u1ec9, c\u1ea7n c\u00f9, ch\u1ecbu kh\u00f3 t\u00ecm hi\u1ec3u sau khi t\u1ed1t nghi\u1ec7p \u0110H kh\u00f4ng, v\u00e0 n\u1ebfu h\u01a1n th\u00ec nh\u1eefng ng\u01b0\u1eddi t\u1eebng \u0111\u1ea1t huy ch\u01b0\u01a1ng s\u1ebd h\u01a1n \u0111\u01b0\u1ee3c nh\u1eefng \u0111i\u1ec3m g\u00ec \u1ea1?","text":"<p>Tu\u1ea5n:  Theo th\u1ea7y \u0110\u00f4ng ph\u00e2n t\u00edch, th\u00ec m\u1ed7i ng\u01b0\u1eddi \u0111\u1ec1u c\u00f3 tr\u00ecnh \u0111\u1ed9 t\u01b0 duy nh\u1ea5t \u0111\u1ecbnh, m\u1ee9c \u0111\u1ed9 nh\u1ea5t \u0111\u1ecbnh. C\u1ea7n c\u00f9, ch\u0103m ch\u1ec9 s\u1ebd khi\u1ebfn ta \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u1ee9c \u0111\u1ed9 \u0111\u1ea5y, khai ph\u00e1 \u0111\u01b0\u1ee3c ti\u1ec1m n\u0103ng c\u1ee7a b\u1ea3n th\u00e2n. V\u00e0 khi \u0111\u00e3 \u0111\u1ebfn gi\u1edbi h\u1ea1n r\u1ed3i th\u00ec l\u00ean n\u1eefa s\u1ebd r\u1ea5t kh\u00f3, th\u1ebf n\u00ean c\u1ea7n c\u00f9, ch\u0103m ch\u1ec9 l\u00e0m nh\u1eefng th\u1ee9 v\u01b0\u1ee3t qu\u00e1 kh\u1ea3 n\u0103ng c\u1ee7a m\u00ecnh v\u1eabn c\u00f3 th\u1ec3 n\u00e2ng tr\u00ecnh \u0111\u1ed9 l\u00ean \u0111\u01b0\u1ee3c. Nh\u1eefng l\u1eddi n\u00e0y th\u1ea7y \u0110\u00f4ng \u0111\u00e3 n\u00f3i v\u1edbi \u0111\u1ed9i APIO 2016, v\u00e0 m\u00ecnh c\u1ea3m th\u1ea5y n\u00f3 r\u1ea5t \u0111\u00fang.</p> <p>Nguy\u00ean: M\u00ecnh th\u1ea5y l\u00e0 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c medal ch\u1ec9 ch\u1ee9ng minh \u0111\u01b0\u1ee3c b\u1ea1n l\u00e0 ng\u01b0\u1eddi c\u00f3 IQ cao h\u01a1n trung b\u00ecnh m\u1ed9t ch\u00fat, c\u1ed9ng v\u1edbi c\u00f3 t\u1ed1 ch\u1ea5t c\u1ea7n c\u00f9 k\u1ec9 lu\u1eadt t\u1eeb th\u1eddi h\u1ecdc sinh. T\u1ea5t c\u1ea3 nh\u1eefng th\u1ee9 kh\u00e1c c\u00f3 l\u1ebd kh\u00f4ng r\u00f5 r\u00e0ng. C\u00f2n l\u00e0 ng\u01b0\u1eddi c\u00f3 l\u00e0m competitive programming, th\u00ec b\u1ea1n c\u00f3 kinh nghi\u1ec7m problem solving, kh\u1ea3 n\u0103ng ngh\u0129 nhanh, hi\u1ec3u bi\u1ebft c\u01a1 b\u1ea3n v\u1ec1 algo &amp; data structures.</p> <p>Quang: Theo m\u00ecnh th\u00ec ng\u01b0\u1eddi h\u1ecdc competitive programming s\u1ebd c\u00f3 l\u1ee3i \u1edf ch\u1ed7 xu\u1ea5t ph\u00e1t \u0111i\u1ec3m cao h\u01a1n (\u0111\u00e3 n\u1eafm v\u1eefng v\u1ec1 t\u01b0 duy l\u1eadp tr\u00ecnh, c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u01a1 b\u1ea3n, c\u00f3 kinh nghi\u1ec7m v\u1ec1 debug, ...). Nh\u01b0ng \u0111\u00e2y c\u0169ng l\u00e0 nh\u1eefng th\u1ee9 m\u00e0 c\u00e1c b\u1ea1n ch\u01b0a t\u1eebng h\u1ecdc competitive programming c\u00f3 th\u1ec3 h\u1ecdc \u0111\u01b0\u1ee3c th\u00f4ng qua qu\u00e1 tr\u00ecnh l\u00e0m vi\u1ec7c, t\u00ecm hi\u1ec3u.</p> <p>L\u00e2m: M\u00ecnh ch\u1ec9 th\u1ea5y l\u00e0 d\u00e2n CP th\u00ec s\u1ebd c\u00f3 nhi\u1ec1u kinh nghi\u1ec7m v\u1ec1 code v\u00e0 debug h\u01a1n th\u00f4i.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#10-dao-nay-ro-len-chuyen-ban-luan-ve-ga-choi-cac-ban-co-nghi-minh-la-ga-choi-ko-cac-ban-suy-nghi-the-nao-ve-quang-thoi-gian-hoc-oi-tuyen","title":"10. D\u1ea1o n\u00e0y r\u1ed9 l\u00ean chuy\u1ec7n b\u00e0n lu\u1eadn v\u1ec1 g\u00e0 ch\u1ecdi. C\u00e1c b\u1ea1n c\u00f3 ngh\u0129 m\u00ecnh l\u00e0 g\u00e0 ch\u1ecdi ko? :)) c\u00e1c b\u1ea1n suy ngh\u0129 th\u1ebf n\u00e0o v\u1ec1 qu\u00e3ng th\u1eddi gian h\u1ecdc \u0111\u1ed9i tuy\u1ec3n?","text":"<p>Tu\u1ea5n: M\u00ecnh ngh\u0129 m\u00ecnh kh\u00f4ng ph\u1ea3i l\u00e0 G\u00e0. M\u00ecnh h\u1ecdc Tin v\u00ec ni\u1ec1m \u0111am m\u00ea y\u00eau th\u00edch c\u1ee7a m\u00ecnh. K\u1ec3 c\u1ea3 thi c\u00f3 th\u1ecdt, th\u00ec m\u00ecnh v\u1eabn h\u1ecdc tin th\u00f4i. H\u1ecdc \u0111\u1ed9i tuy\u1ec3n cho ta nhi\u1ec1u k\u1ec9 ni\u1ec7m, tr\u1ea3i nghi\u1ec7m \u0111\u00e1ng nh\u1edb m\u00e0 \u00edt ai \u0111\u01b0\u1ee3c tr\u1ea3i qua. \u0110\u01b0\u1ee3c to\u00e0n t\u00e2m to\u00e0n \u00fd theo \u0111u\u1ed5i m\u1ed9t gi\u1ea5c m\u01a1, \u0111\u01b0\u1ee3c s\u1ed1ng b\u00ean nh\u1eefng ng\u01b0\u1eddi b\u1ea1n, ng\u01b0\u1eddi \u0111\u1ed3ng h\u00e0nh c\u00f9ng trang l\u1ee9a. \u0110\u1ea5y l\u00e0 luy\u1ec7n g\u00e0 ch\u1ecdi \u01b0 ? </p> <p>Nguy\u00ean: G\u00e0 ch\u1ecdi qu\u00e1 \u00fd ch\u1ee9 :)) Nh\u01b0ng g\u00e0 ch\u1ecdi th\u00ec c\u00f3 g\u00ec sai \u0111\u00e2u. \u00cdt nh\u1ea5t con g\u00e0 ch\u1ecdi v\u1eabn gi\u1ecfi \u0111\u1eb7c bi\u1ec7t \u1edf m\u00f4n ch\u1ecdi. C\u00f3 g\u00ec sai \u1edf vi\u1ec7c c\u1ed1 g\u1eafng gi\u1ecfi \u1edf m\u1ed9t m\u00f4n c\u00f3 \u00edch cho t\u01b0\u01a1ng lai ch\u1ee9.</p> <p>Quang: Trong qu\u00e1 tr\u00ecnh h\u1ecdc \u0111\u1ed9i tuy\u1ec3n, m\u00ecnh kh\u00f4ng ph\u1ea3i d\u00e0nh c\u1ea3 ng\u00e0y \u0111\u1ec3 h\u1ecdc m\u00e0 v\u1eabn c\u00f3 th\u1eddi gian \u0111\u1ec3 ch\u01a1i ho\u1eb7c t\u00ecm hi\u1ec3u v\u1ec1 nh\u1eefng v\u1ea5n \u0111\u1ec1 kh\u00e1c. M\u00ecnh c\u0169ng kh\u00f4ng ph\u1ea3i ch\u1ecbu nhi\u1ec1u \u00e1p l\u1ef1c t\u1eeb th\u1ea7y c\u00f4 v\u00e0 gia \u0111\u00ecnh. Sau qu\u00e1 tr\u00ecnh h\u1ecdc \u0111\u1ed9i tuy\u1ec3n, m\u00ecnh v\u1eabn l\u1ea5y l\u1ea1i \u0111\u01b0\u1ee3c ki\u1ebfn th\u1ee9c c\u00e1c m\u00f4n kh\u00e1c. N\u00ean m\u00ecnh kh\u00f4ng ngh\u0129 m\u00ecnh l\u00e0 g\u00e0 ch\u1ecdi.</p> <p>L\u00e2m: M\u00ecnh kh\u00f4ng ngh\u0129 m\u00ecnh l\u00e0 g\u00e0 ch\u1ecdi. Th\u1ee9 nh\u1ea5t l\u00e0 v\u00ec m\u00ecnh g\u00e0 vkl :'( Th\u1ee9 hai l\u00e0 nh\u00e0 tr\u01b0\u1eddng v\u00e0 gia \u0111\u00ecnh c\u0169ng kh\u00f4ng \u0111\u1eb7t \u00e1p l\u1ef1c g\u00ec cho m\u00ecnh.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#11-ngoi-trong-phong-thi-voi-v2-apio-voi-ioi-co-gi-khac-nhau-cam-giac-nop-offline-khac-nop-online-the-nao-ap-luc-khi-biet-tat-ca-moi-nguoi-xem-iem-minh-viec-thi-hai-ngay-co-anh-huong-gi-en-tam-ly-cac-anh","title":"11. Ng\u1ed3i trong ph\u00f2ng thi VOI, V2, APIO v\u1edbi IOI c\u00f3 g\u00ec kh\u00e1c nhau? c\u1ea3m gi\u00e1c n\u1ed9p offline kh\u00e1c n\u1ed9p online th\u1ebf n\u00e0o. \u00c1p l\u1ef1c khi bi\u1ebft t\u1ea5t c\u1ea3 moi ng\u01b0\u1eddi xem \u0111i\u1ec3m m\u00ecnh ? Vi\u1ec7c thi hai ng\u00e0y c\u00f3 \u1ea3nh h\u01b0\u1edfng g\u00ec \u0111\u1ebfn t\u00e2m l\u00fd c\u00e1c anh","text":"<p>Tu\u1ea5n: VOI 2016 l\u00e0 k\u00ec thi m\u00e0 m\u00ecnh tuy\u1ec7t v\u1ecdng kinh kh\u1ee7ng, v\u00ec ch\u1ea3 bi\u1ebft l\u00e0m g\u00ec c\u1ea3. N\u1ed9p offline th\u00ec r\u00f5 l\u00e0 s\u1ee3, n\u00ean kh\u00f4ng c\u00f3 nhi\u1ec1u th\u1eddi gian \u0111\u1ec3 ngh\u0129 hay l\u00e0m nh\u1eefng th\u1ee9 \u0111\u1ed9t ph\u00e1. Theo m\u00ecnh th\u00ec th\u1ea5y l\u00e0 m\u00ecnh ch\u1ea3 c\u00f3 \u00e1p l\u1ef1c g\u00ec c\u1ea3, c\u1ee9 v\u00e0o thi l\u00e0 qu\u00ean h\u1ebft t\u1ea5t c\u1ea3 \u1ea5y m\u00e0, \u0111\u00e2m \u0111\u1ea7u v\u00e0o l\u00e0m. Th\u1ebf nh\u01b0ng n\u1ed9p online m\u00ecnh ngh\u0129 c\u00f3 2 chi\u1ec1u h\u01b0\u1edbng : may m\u1eafn AC, t\u00e2m l\u00fd h\u1ee9ng l\u00ean ngh\u0129 ra l\u00e0m ti\u1ebfp, AC ti\u1ebfp, c\u00e0ng ng\u00e0y c\u00e0ng h\u01b0ng ph\u1ea5n ho\u1eb7c n\u1ed9p m\u00e3i v\u1eabn 0 \u0111i\u1ec3m, s\u1eeda \u0111i s\u1eeda l\u1ea1i v\u1eabn 0 \u0111i\u1ec3m, c\u00e0ng ng\u00e0y c\u00e0ng tuy\u1ec7t v\u1ecdng, th\u1ecdt. </p> <p>Nguy\u00ean: M\u1ed7i c\u00e1i thi l\u1ea1i c\u0103ng th\u1eb3ng 1 ki\u1ec3u kh\u00e1c nhau. \u1ede VOI th\u00ec l\u00fac n\u00e0o l\u00e0m c\u0169ng ph\u1ea3i \u0111\u1eb7c bi\u1ec7t c\u1ea9n th\u1eadn, thi\u1ebfu 1 k\u00ed t\u1ef1 l\u00e0 ch\u1ebft nh\u01b0 ch\u01a1i. B\u00e0i c\u0169ng kh\u00f4ng ph\u1ea3i l\u00e0 d\u1ec5, c\u00e0ng kh\u00f4ng ph\u1ea3i l\u00e0 d\u1ec5 c\u1eafn. V\u00f2ng 2 th\u00ec kh\u00e1c m\u1ed9t ch\u00fat, ch\u1ea5m online m\u00e0 l\u1ea1i ch\u1ea5m l\u1ebb test n\u00ean d\u1ec5 \u0103n \u0111i\u1ec3m h\u01a1n. D\u00f9 v\u1eady b\u00e0i c\u0169ng l\u1eb1ng nh\u1eb1ng h\u01a1n, theo nh\u01b0 m\u00ecnh th\u1ea5y ph\u1ea7n l\u1edbn l\u00e0 c\u00e1c b\u00e0i kh\u00f3 ch\u1ecbu h\u01a1n l\u00e0 kh\u00f3. Th\u00eam n\u1eefa h\u1ecdc t\u1ed5ng h\u1ee3p b\u1ecb b\u1ec7nh ng\u1ed9 thu\u1eadt chu\u1ea9n n\u00ean nhi\u1ec1u l\u00fac th\u1ecdt v\u00ec kh\u00f4ng ngh\u0129 ra thu\u1eadt b\u1eady b\u1ea1 c\u1eafn test. APIO th\u00ec ch\u1eafc l\u00e0 c\u0103ng th\u1eb3ng nh\u1ea5t, v\u00ec ch\u1ea5m subtask, l\u1ea1i c\u00f3 m\u1ed7i 1 ng\u00e0y thi - kh\u00f4ng c\u00f3 c\u01a1 h\u1ed9i s\u1eeda sai. IOI th\u00ec ch\u1eafc c\u0103ng v\u00ec bi\u1ebft r\u1eb1ng t\u1ea5t c\u1ea3 \u0111ang theo d\u00f5i m\u00ecnh thi \u0111\u1ea5u? H\u01a1n n\u1eefa, v\u00e0o \u0111\u1ecdc \u0111\u1ec1 IOI bao gi\u1edd c\u0169ng s\u1ebd th\u1ea5y b\u00e0i r\u1ea5t kh\u00f3, ph\u1ea3i c\u00f3 t\u00e2m l\u00ed v\u1eefng ch\u00e3i, ngh\u0129 d\u1ea7n d\u1ea7n m\u1edbi c\u00f3 th\u1ec3 ti\u1ebfn \u0111\u1ebfn s\u1ed1 \u0111i\u1ec3m mong mu\u1ed1n. </p> <p>Quang: Ng\u1ed3i trong ph\u00f2ng thi n\u00e0o th\u00ec gi\u00e2y ph\u00fat c\u0103ng th\u1eb3ng nh\u1ea5t c\u0169ng l\u00e0 gi\u00e2y ph\u00fat tr\u01b0\u1edbc khi cu\u1ed9c thi b\u1eaft \u0111\u1ea7u, c\u00f2n khi b\u1eaft \u0111\u1ea7u thi th\u00ec t\u1eadp trung l\u00e0m b\u00e0i n\u00ean qu\u00ean h\u1ebft c\u1ea3m gi\u00e1c c\u0103ng th\u1eb3ng ngay M\u00ecnh th\u1ea5y vi\u1ec7c l\u00e0m online so v\u1edbi offline s\u1ebd c\u00f3 kh\u00e1c bi\u1ec7t:</p> <ul> <li> <p>L\u00e0m online s\u1ebd c\u00f3 l\u1ee3i th\u1ebf l\u00e0 bi\u1ebft \u0111\u01b0\u1ee3c l\u1eddi gi\u1ea3i m\u00ecnh \u0111\u00fang hay sai (kh\u00f4ng ph\u1ea3i lo s\u1ee3 l\u00e0 sol m\u00ecnh s\u1ebd t\u1ea1ch v\u00ec bug v\u1edb v\u1ea9n nh\u01b0 l\u00fac thi offline), h\u01a1n n\u1eefa c\u00f3 th\u1ec3 test sol v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u1edbn (xem th\u1eed \u00fd t\u01b0\u1edfng \u0111\u00fang hay sai), sau \u0111\u00f3 m\u1edbi c\u1ea3i ti\u1ebfn thu\u1eadt to\u00e1n.</p> </li> <li> <p>L\u00e0m online th\u00ec th\u01b0\u1eddng s\u1ebd c\u00f3 \u201cl\u0103n c\u1ea7u tuy\u1ebft\u201d (snowball) theo hai chi\u1ec1u h\u01b0\u1edbng: AC \u0111\u01b0\u1ee3c m\u1ed9t b\u00e0i, l\u00ean tinh th\u1ea7n ngh\u0129 ra lu\u00f4n sol cho m\u1ed9t s\u1ed1 b\u00e0i kh\u00e1c, AC ti\u1ebfp, v\u00e0 c\u1ee9 nh\u01b0 th\u1ebf (thi TST ng\u00e0y 1 th\u00ec n\u1eeda ti\u1ebfng \u0111\u1ea7u kh\u00f4ng ngh\u0129 ra sol b\u00e0i 4, nh\u01b0ng sau khi m\u00ecnh AC b\u00e0i 3 xong c\u00e1i ngh\u0129 ra lu\u00f4n sol b\u00e0i 4). C\u1ee9 0 \u0111i\u1ec3m m\u00e3i m\u1ed9t b\u00e0i, s\u1eeda ki\u1ec3u g\u00ec c\u0169ng kh\u00f4ng l\u00ean \u0111i\u1ec3m, c\u1ea3m th\u1ea5y tuy\u1ec7t v\u1ecdng v\u00e0 \u1ee9c ch\u1ebf t\u00e2m l\u00fd, th\u1ea5y m\u00ecnh v\u00f4 d\u1ee5ng v\u00e0 h\u00e0nh ng\u1eadp m\u1ed3m c\u1ea3 contest (l\u00fac thi IOI ng\u00e0y 2 th\u00ec m\u00ecnh b\u1ecb snowball theo chi\u1ec1u h\u01b0\u1edbng n\u00e0y v\u00e0 \u201ch\u1ea1t b\u1ee5i n\u00e0o h\u00f3a ki\u1ebfp th\u00e2n t\u00f4i\u201d lu\u00f4n)</p> </li> </ul> <p>Vi\u1ec7c t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi xem \u0111i\u1ec3m c\u1ee7a m\u00ecnh \u0111\u00e3 \u1ea3nh h\u01b0\u1edfng ph\u1ea7n n\u00e0o \u0111\u1ebfn t\u00e2m l\u00fd c\u1ee7a m\u00ecnh (\u0111i\u1ec1u m\u00e0 m\u00ecnh kh\u00f4ng n\u00ean \u0111\u1ec3 x\u1ea3y ra). C\u00e1i c\u1ea3m gi\u00e1c m\u00e0 c\u1ea3 n\u01b0\u1edbc Vi\u1ec7t Nam bi\u1ebft m\u00ecnh \u0111ang s\u1ea5p m\u1eb7t n\u00f3 kh\u1ee7ng khi\u1ebfp l\u1eafm... Vi\u1ec7c thi hai ng\u00e0y kh\u00f4ng \u1ea3nh h\u01b0\u1edfng qu\u00e1 nhi\u1ec1u \u0111\u1ebfn t\u00e2m l\u00fd c\u1ee7a m\u00ecnh. C\u00f3 c\u00e2u th\u00e0nh ng\u1eef \u201cIt's no good crying over spilt milk\u201d (\u0110\u1eebng ti\u1ebfc r\u1ebb con g\u00e0 qu\u1ea1 tha). N\u1ebfu ta l\u00e0m b\u00e0i kh\u00f4ng t\u1ed1t \u1edf ng\u00e0y 1 th\u00ec c\u00f3 ti\u1ebfc c\u0169ng kh\u00f4ng l\u00e0m \u0111\u01b0\u1ee3c g\u00ec, m\u00e0 ph\u1ea3i c\u1ed1 g\u1eafng h\u01a1n \u1edf ng\u00e0y 2.</p> <p>L\u00e2m: VOI16 m\u00ecnh ch\u1ec9 nh\u1edb l\u00e0 ng\u1ed3i code sml ng\u00e0y 2 c\u00f2n ng\u00e0y 1 th\u00ec ch\u1ea3 l\u00e0m \u0111\u01b0\u1ee3c g\u00ec. Sau \u0111\u00f3 th\u00ec c\u00e1c cu\u1ed9c thi kh\u00e1c m\u00ecnh \u0111\u1ec1u ch\u1ea3 c\u00f3 c\u1ea3m x\u00fac g\u00ec. Ch\u1ec9 tr\u1eeb l\u00fac chu\u1ea9n b\u1ecb v\u00e0o contest th\u00ec max c\u0103ng th\u1eb3ng th\u00f4i.</p> <p>Gi\u1eefa n\u1ed9p offline v\u00e0 online th\u00ec m\u00ecnh ch\u1ec9 th\u1ea5y n\u1ed9p online n\u00f3 \u0111\u1ee1 sai ngu ngu h\u01a1n (nh\u01b0 ki\u1ec3u nh\u1ea7m 1 ch\u1eef s\u1ed1 \u1edf b\u00e0i 4 v\u00e0 qu\u00ean fast I/O \u1edf b\u00e0i 6 VOI16 c\u1ee7a m\u00ecnh), v\u00ec m\u00ecnh code to\u00e0n ch\u1ec9 r\u01a1i v\u00e0o 3 tr\u01b0\u1eddng h\u1ee3p: 1-\u0111\u00fang lu\u00f4n, 2-sai 1, 2 ch\u1ed7 l\u1eb7t v\u1eb7t (typo...), 3-sai kh\u00f4ng th\u1ec3 s\u1eeda \u0111\u01b0\u1ee3c, th\u00ec n\u1ed9p online s\u1ebd gi\u00fap m\u00ecnh tr\u00e1nh \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p 2, c\u00f2n tr\u01b0\u1eddng h\u1ee3p 3 th\u00ec to\u00e0n l\u00e0 sai ngay test \u0111\u1ec1 n\u00ean online hay offline kh\u00f4ng \u1ea3nh h\u01b0\u1edfng g\u00ec.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#cau-hoi-rieng","title":"C\u00e2u h\u1ecfi ri\u00eang","text":""},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#12-cau-nay-hoi-rieng-cho-tuan-gan-ay-co-1-so-bao-ua-tin-la-tuan-choi-game-rat-nhieu-2h-moi-ngay-ieu-nay-co-ung-ko-tuan-nghi-sao-ve-viec-choi-game","title":"12. C\u00e2u n\u00e0y h\u1ecfi ri\u00eang cho Tu\u1ea5n :)) g\u1ea7n \u0111\u00e2y c\u00f3 1 s\u1ed1 b\u00e1o \u0111\u01b0a tin l\u00e0 Tu\u1ea5n ch\u01a1i game r\u1ea5t nhi\u1ec1u, 2h m\u1ed7i ng\u00e0y, \u0111i\u1ec1u n\u00e0y c\u00f3 \u0111\u00fang ko? :)) Tu\u1ea5n ngh\u0129 sao v\u1ec1 vi\u1ec7c ch\u01a1i game?","text":"<p>Tu\u1ea5n: M\u00ecnh hi\u1ec7n t\u1ea1i ch\u01a1i 2 game l\u00e0 Li\u00ean Minh Huy\u1ec1n Tho\u1ea1i v\u00e0 Candy Crush. Th\u1ef1c ra th\u00ec m\u00ecnh kh\u00f4ng ch\u01a1i nhi\u1ec1u m\u00e0 m\u00ecnh xem c\u00e1c gi\u1ea3i \u0111\u1ea5u chuy\u00ean nghi\u1ec7p th\u00ec nhi\u1ec1u, m\u1ed7i ng\u00e0y t\u1ea7m 1 ti\u1ebfng th\u1eadt. C\u00f2n ch\u01a1i game th\u00ec tu\u1ef3 t\u1eebng giai \u0111o\u1ea1n, n\u1ebfu kh\u00f4ng ph\u1ea3i thi th\u00ec m\u00ecnh ch\u01a1i h\u00e0ng ng\u00e0y m\u1ed7i ng\u00e0y 2 tr\u1eadn. C\u00f2n v\u00e0o \u0111\u1ed9i tuy\u1ec3n th\u00ec m\u00ecnh ch\u1ec9 ch\u01a1i v\u00e0o ng\u00e0y ch\u1ee7 nh\u1eadt. M\u00ecnh \u0111\u00e3 t\u1eebng l\u00e0 con nghi\u1ec7n game h\u1ed3i c\u1ea5p 2, n\u00ean m\u00ecnh \u0111\u00e3 h\u1ecdc \u0111\u01b0\u1ee3c c\u00e1ch ki\u1ec3m so\u00e1t th\u1eddi gian ch\u01a1i c\u1ee7a b\u1ea3n th\u00e2n. Theo m\u00ecnh bi\u1ebft th\u00ec anh Phan \u0110\u1ee9c Nh\u1eadt Minh h\u1ed3i c\u1ea5p 2 c\u0169ng \u0111\u00e3 t\u1eebng ch\u01a1i V\u00f5 L\u00e2m Chi M\u1ed9ng h\u1ebft s\u1ee9c b\u00e1 \u0111\u1ea1o . Theo m\u00ecnh ch\u01a1i game l\u00e0 t\u1ed1t n\u1ebfu ch\u01a1i h\u1ee3p l\u00fd, v\u00ec c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u01a1i c\u00f9ng b\u1ea1n b\u00e8, \u0111\u01b0\u1ee3c ch\u1eedi nhau, kh\u00e1 l\u00e0 vui.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#13-theo-minh-biet-vao-nam-lop-10-quang-a-tham-du-ki-thi-hoc-sinh-gioi-quoc-gia-va-at-giai-3-va-nam-11-cung-co-ket-qua-tuong-tuc-nhung-lop-12-lai-vung-len-thu-khoa-quoc-gia-va-vao-oi-ioi-ieu-nay-cung-la-ieu-tuong-tu-voi-rating-codeforces-cua-quang-trong-ki-tst-va-apio-cho-hoi-ieu-gi-nam-12-a-lam-quang-buc-pha-va-ieu-gi-khien-quang-bi-ket-trong-mot-khoang-thoi-gian-dai-nhu-vay","title":"13. Theo m\u00ecnh bi\u1ebft v\u00e0o n\u0103m l\u1edbp 10 Quang \u0111\u00e3 tham d\u1ef1 k\u00ec thi h\u1ecdc sinh gi\u1ecfi qu\u1ed1c gia v\u00e0 \u0111\u1ea1t gi\u1ea3i 3 v\u00e0 n\u0103m 11 c\u0169ng c\u00f3 k\u1ebft qu\u1ea3 t\u01b0\u01a1ng t\u1ee9c nh\u01b0ng l\u1edbp 12 l\u1ea1i v\u00f9ng l\u00ean th\u1ee7 khoa qu\u1ed1c gia v\u00e0 v\u00e0o \u0111\u1ed9i IOI. \u0110i\u1ec1u n\u00e0y c\u0169ng l\u00e0 \u0111i\u1ec1u tuong t\u1ef1 v\u1edbi rating codeforces c\u1ee7a Quang trong k\u00ec TST v\u00e0 APIO. Cho h\u1ecfi \u0111i\u1ec1u g\u00ec n\u0103m 12 \u0111\u00e3 l\u00e0m Quang b\u1ee9c ph\u00e1 v\u00e0 \u0111i\u00e8u g\u00ec khi\u1ebfn Quang b\u1ecb k\u1eb9t trong m\u1ed9t kho\u1ea3ng th\u1eddi gian d\u00e0i nh\u01b0 v\u1eady ?","text":"<p>Quang: Theo m\u00ecnh t\u1ef1 nh\u1eadn th\u1ea5y th\u00ec tr\u00ecnh \u0111\u1ed9 m\u00ecnh t\u0103ng \u0111\u1ec1u qua c\u00e1c n\u0103m, v\u00e0 t\u0103ng m\u1ea1nh nh\u1ea5t k\u1ec3 t\u1eeb l\u00fac h\u1ecdc TST (do trong qu\u00e1 tr\u00ecnh \u0111\u00f3 th\u00ec m\u00ecnh h\u1ecdc \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u t\u1eeb c\u00e1c b\u1ea1n trong \u0111\u1ed9i tuy\u1ec3n). Ngo\u00e0i ra th\u00ec may m\u1eafn c\u0169ng l\u00e0 m\u1ed9t nh\u00e2n t\u1ed1 \u1ea3nh h\u01b0\u1edfng kh\u00f4ng nh\u1ecf trong c\u00e1c k\u00ec thi.</p> <p>N\u0103m l\u1edbp 10 th\u00ec \u0111\u01b0\u1ee3c gi\u1ea3i ba qu\u1ed1c gia l\u00e0 nh\u1edd v\u00e9t h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c subtask nh\u1ecf c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i (ch\u1ee9 l\u00fac \u0111\u00f3 m\u00ecnh c\u00f2n g\u00e0 l\u1eafm, kh\u00f4ng gi\u1ea3i tr\u1ecdn v\u1eb9n b\u00e0i n\u00e0o h\u1ebft). N\u0103m l\u1edbp 11 th\u00ec m\u00ecnh \u0111\u1ecdc sai \u0111\u1ec1 b\u00e0i 4 n\u00ean t\u1ea1ch m\u1ea5t 6 \u0111i\u1ec3m n\u00ean ch\u1ec9 \u0111\u01b0\u1ee3c gi\u1ea3i ba (kh\u00f4ng b\u1ecb c\u00e1i \u0111\u1ea5y th\u00ec c\u00f3 l\u1ebd m\u00ecnh \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1ea3i nh\u00ec). N\u0103m l\u1edbp 12 th\u00ec m\u00ecnh ngh\u0129 m\u00ecnh \u0111\u01b0\u1ee3c th\u1ee7 khoa c\u00f3 m\u1ed9t ph\u1ea7n do may m\u1eafn (m\u00ecnh ngh\u0129 l\u00e0 kh\u1ea3 n\u0103ng c\u1ee7a m\u00ecnh s\u1ebd \u0111\u1ee7 \u0111\u1ec3 v\u00e0o TST nh\u01b0ng kh\u00f4ng ngh\u0129 l\u00e0 s\u1ebd \u0111\u01b0\u1ee3c th\u1ee7 khoa).</p> <p>Vi\u1ec7c rating Codeforces c\u1ee7a m\u00ecnh t\u0103ng \u0111\u1ed9t bi\u1ebfn k\u1ec3 t\u1eeb l\u00fac h\u1ecdc APIO (trong khi l\u00fac h\u1ecdc TST th\u1ecdt t\u1edbi n\u1ed7i xu\u1ed1ng Div 2) th\u00ec\u2026 m\u00ecnh c\u0169ng kh\u00f4ng bi\u1ebft t\u1ea1i sao. M\u00e0 c\u0169ng k\u1ec3 t\u1eeb l\u00fac xu\u1ed1ng Div 2 sau k\u00ec 406, m\u00ecnh \u0111\u00e3 \u0111\u1ed5i profile picture th\u00e0nh \u1ea3nh Marisa (nh\u00e2n v\u1eadt y\u00eau th\u00edch trong game Touhou). K\u1ec3 t\u1eeb \u0111\u00f3 th\u00ec rating m\u00ecnh t\u0103ng li\u00ean t\u1ee5c h\u01a1n 500 \u0111i\u1ec3m, g\u1ea7n \u0111\u1ea1t m\u1ee9c \u0111\u1ecf lu\u00f4n. C\u00f3 l\u1ebd c\u00f4 \u1ea5y \u0111\u00e3 \u0111em l\u1ea1i s\u1ef1 may m\u1eafn cho m\u00ecnh.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#14-cau-hoi-cho-ban-nguyen-ban-co-nghi-viec-minh-uoc-vang-ioi-nam-ngoai-a-phan-nao-o-at-mot-ap-luc-len-ban-khong","title":"14. C\u00e2u h\u1ecfi cho b\u1ea1n Nguy\u00ean, B\u1ea1n c\u00f3 ngh\u0129 vi\u1ec7c m\u00ecnh \u0111\u01b0\u1ee3c v\u00e0ng IOI n\u0103m ngo\u00e1i \u0111\u00e3 ph\u1ea7n n\u00e0o \u0111\u00f3 \u0111\u1eb7t m\u1ed9t \u00e1p l\u1ef1c l\u00ean b\u1ea1n kh\u00f4ng ?","text":"<p>Nguy\u00ean: C\u00f3 ch\u1ee9, ai m\u00e0 ch\u1ea3 th\u1ebf. May m\u00e0 c\u00f3 ng\u00e0y 1 th\u1ecdt \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ea5y ng\u00e0y \u0111i ch\u01a1i x\u1ea3 l\u00e1ng.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#15-minh-nghe-on-ban-a-trai-qua-nhieu-cuoc-friendzone-to-tinh-10-lan-thi-11-lan-fail-ban-co-cam-thay-ieu-nay-la-may-man-khi-co-the-tap-trung-an-vang-ioi-sau-ioi-ban-co-inh-dung-vang-cua-minh-e-thay-oi-tinh-trang-nay-ko-hay-van-tiep-tuc-giu-vung-phong-o-e-them-nhieu-thanh-tich-khung-trong-tuong-lai","title":"15. M\u00ecnh nghe \u0111\u1ed3n b\u1ea1n \u0111\u00e3 tr\u1ea3i qua nhi\u1ec1u cu\u1ed9c friendzone, t\u1ecf t\u00ecnh 10 l\u1ea7n th\u00ec 11 l\u1ea7n fail. B\u1ea1n c\u00f3 c\u1ea3m th\u1ea5y \u0111i\u1ec1u n\u00e0y l\u00e0 may m\u1eafn khi c\u00f3 th\u1ec3 t\u1eadp trung \u0103n v\u00e0ng IOI? Sau IOI b\u1ea1n c\u00f3 \u0111\u1ecbnh d\u00f9ng v\u00e0ng c\u1ee7a m\u00ecnh \u0111\u1ec3 thay \u0111\u1ed5i t\u00ecnh tr\u1ea1ng n\u00e0y ko, hay v\u1eabn ti\u1ebfp t\u1ee5c gi\u1eef v\u1eefng phong \u0111\u1ed9 \u0111\u1ec3 th\u00eam nhi\u1ec1u th\u00e0nh t\u00edch kh\u1ee7ng trong t\u01b0\u01a1ng lai?","text":"<p>Tu\u1ea5n: B\u1ea1n l\u1ea5y th\u00f4ng tin \u1edf \u0111\u00e2u m\u00e0 b\u1ea3o m\u00ecnh b\u1ecb friendzone nhi\u1ec1u nh\u01b0 v\u1eady. Theo m\u00ecnh th\u00ec v\u00e0ng IOI c\u0169ng kh\u00f4ng th\u1ec3 \u0111\u01b0a 2 ng\u01b0\u1eddi \u0111\u1ebfn v\u1edbi nhau \u0111\u01b0\u1ee3c. C\u00f2n m\u00ecnh th\u00ec \u0111\u00e3 c\u00f3 g\u1ea5u r\u1ed3i nh\u00e9. M\u00ecnh th\u1ea5y anh Ph\u00e1t v\u1eeba code v\u1eeba skype  m\u00e0 thi v\u1eabn kh\u1ee7ng \u0111\u1ea5y th\u00f4i, vi\u1ec7c c\u00f3 b\u1ea1n g\u00e1i m\u00ecnh ngh\u0129 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng g\u00ec \u0111\u1ebfn vi\u1ec7c h\u1ecdc l\u1eafm.</p>"},{"location":"Ph%E1%BB%8Fng-v%E1%BA%A5n-team-IOI-VN-2017/#16-ban-lam-va-quang-co-thay-ap-luc-khi-ban-than-hai-ban-la-nhung-nguoi-au-tien-cua-truong-thanh-pho-va-tinh-minh-i-tham-du-mot-ki-thi-lon-nhu-vay-khong","title":"16. B\u1ea1n L\u00e2m v\u00e0 Quang c\u00f3 th\u1ea5y \u00e1p l\u1ef1c khi b\u1ea3n th\u00e2n hai b\u1ea1n l\u00e0 nh\u1eefng ng\u01b0\u1eddi \u0111\u1ea7u ti\u00ean c\u1ee7a tr\u01b0\u1eddng, th\u00e0nh ph\u1ed1 v\u00e0 t\u1ec9nh m\u00ecnh \u0111i tham d\u1ef1 m\u1ed9t k\u00ec thi l\u1edbn nh\u01b0 v\u1eady kh\u00f4ng ?","text":"<p>Quang: L\u00e0 ng\u01b0\u1eddi C\u1ea7n Th\u01a1 \u0111\u1ea7u ti\u00ean d\u01b0\u1ee3c d\u1ef1 thi IOI n\u00ean m\u00ecnh c\u0169ng mong mu\u1ed1n l\u00e0 ng\u01b0\u1eddi mang v\u1ec1 t\u1ea5m huy ch\u01b0\u01a1ng qu\u1ed1c t\u1ebf m\u00f4n Tin h\u1ecdc \u0111\u1ea7u ti\u00ean cho C\u1ea7n Th\u01a1. Nh\u01b0ng c\u0169ng ch\u00ednh v\u00ec v\u1eady m\u00e0 m\u00ecnh \u0111\u00e3 t\u1ef1 g\u00e2y \u00e1p l\u1ef1c l\u00ean b\u1ea3n th\u00e2n m\u00ecnh trong c\u1ea3 2 ng\u00e0y thi (d\u00f9 Tu\u1ea5n v\u00e0 Nguy\u00ean \u0111\u00e3 khuy\u00ean m\u00ecnh r\u1eb1ng m\u1ee5c \u0111\u00edch ch\u00ednh c\u1ee7a k\u00ec thi l\u00e0 giao l\u01b0u, kh\u00f4ng c\u00f3 huy ch\u01b0\u01a1ng th\u00ec c\u0169ng kh\u00f4ng ai \u0103n th\u1ecbt m\u00ecnh). Gi\u1edd m\u1edbi th\u1ea5y l\u1ebd ra m\u00ecnh kh\u00f4ng n\u00ean t\u1ef1 g\u00e2y \u00e1p l\u1ef1c cho b\u1ea3n th\u00e2n nh\u01b0 v\u1eady.</p> <p>L\u00e2m: \u00e1p l\u1ef1c duy nh\u1ea5t c\u1ee7a m\u00ecnh l\u00e0 huy ch\u01b0\u01a1ng c\u00e0ng th\u1ea5p th\u00ec ti\u1ec1n th\u01b0\u1edfng c\u00e0ng \u00edt, ti\u1ec1n th\u01b0\u1edfng \u00edt th\u00ec kh\u1ed5 b\u1ed1 m\u1eb9 m\u00ecnh, th\u1ebf th\u00f4i.</p>"},{"location":"about/","title":"Gi\u1edbi thi\u1ec7u","text":""},{"location":"about/#loi-gioi-thieu","title":"L\u1eddi gi\u1edbi thi\u1ec7u","text":"<p>B\u1ea1n c\u00f3 bi\u1ebft:</p> <ul> <li>Sau t\u1ea5m huy ch\u01b0\u01a1ng v\u00e0ng n\u0103m 2003, Vi\u1ec7t Nam m\u1ea5t 8 n\u0103m \u0111\u1ec3 c\u00f3 t\u1ea5m huy ch\u01b0\u01a1ng v\u00e0ng ti\u1ebfp theo (2011), r\u1ed3i l\u1ea1i ph\u1ea3i ch\u1edd th\u00eam 4 n\u0103m n\u1eefa \u0111\u1ec3 l\u1eb7p l\u1ea1i k\u00ec t\u00edch n\u00e0y (2015).</li> <li>Ch\u01b0a t\u1eebng c\u00f3 m\u1ed9t team Vi\u1ec7t Nam n\u00e0o \u0111\u1ea1t huy ch\u01b0\u01a1ng \u1edf k\u00ec thi ACM-ICPC World final.</li> <li>Sinh vi\u00ean Vi\u1ec7t Nam, d\u00f9 c\u00f3 n\u1ec1n t\u1ea3ng thu\u1eadt to\u00e1n r\u1ea5t t\u1ed1t t\u1eeb c\u1ea5p 3, v\u1eabn b\u1ed1i r\u1ed1i khi xin vi\u1ec7c \u1edf nh\u1eefng c\u00f4ng ty l\u1edbn nh\u01b0 Google, Facebook.</li> </ul> <p>Ch\u00fang m\u00ecnh nh\u1eadn th\u1ea5y, h\u1ecdc sinh sinh vi\u00ean Vi\u1ec7t Nam, d\u00f9 ti\u1ec1m n\u0103ng c\u00f3 th\u1eeba, nh\u01b0ng ch\u01b0a bi\u1ebft c\u00e1ch kh\u01a1i d\u1eady ti\u1ec1m n\u0103ng \u0111\u00f3 m\u1ed9t c\u00e1ch tri\u1ec7t \u0111\u1ec3. H\u01a1n n\u1eefa, c\u00e1c b\u1ea1n c\u00f2n ng\u1ea1i va ch\u1ea1m v\u1edbi ti\u1ebfng Anh, ng\u1ea1i t\u00ecm t\u00f2i \u0111\u1ecdc s\u00e1ch v\u1edf b\u00e0i b\u1ea3n m\u00e0 ch\u1ee7 y\u1ebfu ch\u1ec9 luy\u1ec7n gi\u1ea3i \u0111\u1ec1 v\u00e0 tham gia c\u00e1c cu\u1ed9c thi tr\u00ean m\u1ea1ng. C\u00e1ch h\u1ecdc nh\u01b0 v\u1eady gi\u00fap c\u00e1ch b\u1ea1n t\u0103ng t\u1ed1c r\u1ea5t nhanh \u0111\u1ec3 ch\u1ea1y theo c\u00e1c k\u00ec thi qu\u1ed1c gia qu\u1ed1c t\u1ebf, nh\u01b0ng v\u1ec1 sau v\u1ec1 d\u00e0i n\u00f3 th\u1eadm ch\u00ed kh\u00f4ng th\u1ec3 gi\u00fap c\u00e1c b\u1ea1n tr\u1ea3 l\u1eddi m\u1ed9t c\u00e2u h\u1ecfi \u0111\u01a1n gi\u1ea3n: h\u1ecdc tin \u0111\u1ec3 l\u00e0m g\u00ec? Nhi\u1ec1u b\u1ea1n h\u1ecdc sinh vi\u00ean \"s\u1ed1ng\" b\u1eb1ng nh\u1eefng cu\u1ed9c thi nh\u01b0ng khi ra ngo\u00e0i cu\u1ed9c s\u1ed1ng kh\u00f4ng c\u00f2n nh\u1eefng cu\u1ed9c thi n\u1eefa. C\u00e1c b\u1ea1n b\u1ecb m\u1ea5t \u0111\u1ecbnh h\u01b0\u1edbng v\u00e0 \u0111am m\u00ea, d\u1eabn \u0111\u1ebfn vi\u1ec7c b\u1ecb b\u1ecf l\u1ea1i \u0111\u1eb1ng sau. Th\u1eadt ti\u1ebfc cho nh\u1eefng t\u00e0i n\u0103ng tr\u1ebb nh\u01b0 v\u1eady! \u0110\u00e2y l\u00e0 th\u1eddi k\u00ec b\u00f9ng n\u1ed5 c\u1ee7a c\u00e1c startup IT, c\u00e1c b\u1ea1n th\u1ef1c s\u1ef1 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u th\u1ee9, th\u1eadm ch\u00ed thay \u0111\u1ed5i th\u1ebf gi\u1edbi!</p> <p>Ch\u00fang m\u00ecnh c\u0169ng nh\u1eadn th\u1ea5y, \u1edf Vi\u1ec7t Nam hi\u1ec7n t\u1ea1i ch\u01b0a c\u00f3 m\u1ed9t gi\u00e1o tr\u00ecnh m\u1ea1ch l\u1ea1c v\u00e0 b\u00e0i b\u1ea3n \u0111\u1ec3 h\u01b0\u1edbng d\u1eabn c\u00e1c b\u1ea1n t\u1eeb c\u1ea5p \u0111\u1ed9 ch\u01b0a bi\u1ebft g\u00ec \u0111\u1ebfn c\u1ea5p \u0111\u1ed9 c\u00f3 th\u1ec3 chinh ph\u1ee5c IOI. T\u00e0i li\u1ec7u gi\u1edbi thi\u1ec7u v\u1ec1 tin h\u1ecdc v\u01b0\u1ee3t ra ngo\u00e0i khu\u00f4n kh\u1ed5 c\u1ee7a IOI th\u00ec l\u1ea1i c\u00e0ng kh\u00f4ng c\u00f3. \u0110\u00e1ng bu\u1ed3n h\u01a1n l\u00e0 c\u00f3 m\u1ed9t s\u1ef1 m\u1ea5t k\u1ebft n\u1ed1i gi\u1eefa c\u00e1c th\u1ebf h\u1ec7 v\u1edbi nhau. C\u00e1c t\u00ean tu\u1ed5i l\u1eebng l\u1eaby tr\u00ean c\u00e1c cu\u1ed9c thi ng\u00e0y n\u00e0o, sau khi gi\u1ea3i ngh\u1ec7 l\u1ea7n l\u01b0\u1ee3t bi\u1ebfn m\u1ea5t, khi\u1ebfn cho ki\u1ebfn th\u1ee9c, kinh nghi\u1ec7m qu\u00fd b\u00e1u c\u1ee7a h\u1ecd \u0111\u1ec1u kh\u00f4ng \u0111\u1ebfn \u0111\u01b0\u1ee3c v\u1edbi th\u1ebf h\u1ec7 \u0111i sau.</p> <p>Team Admins VNOI \u0111\u00e3 quy\u1ebft t\u00e2m x\u00e2y d\u1ef1ng m\u1ed9t th\u01b0 vi\u1ec7n VNOI m\u1edbi \u0111\u1ec3 l\u1ea5p \u0111\u1ea7y nh\u1eefng kho\u1ea3ng tr\u1ed1ng tr\u00ean. Th\u01b0 vi\u1ec7n m\u1edbi c\u1ee7a VNOI bao g\u1ed3m c\u00e1c n\u1ed9i dung nh\u01b0:</p> <ul> <li>T\u1ed5ng h\u1ee3p v\u00e0 d\u1ecbch c\u00e1c b\u00e0i vi\u1ebft \u0111\u00e3 c\u00f3 tr\u00ean m\u1ea1ng;</li> <li>B\u1ed5 sung th\u00eam nh\u1eefng b\u00e0i vi\u1ebft v\u1ec1 nh\u1eefng ch\u1ee7 \u0111\u1ec1 tin h\u1ecdc \u00edt g\u1eb7p ho\u1eb7c ch\u01b0a c\u00f3 h\u01b0\u1edbng d\u1eabn;</li> <li>Gi\u1edbi thi\u1ec7u v\u1ec1 c\u00e1c v\u1ea5n \u0111\u1ec1 trong b\u1ed9 m\u00f4n khoa h\u1ecdc m\u00e1y t\u00ednh th\u1ef1c ti\u1ec5n, gi\u00fap c\u00e1c b\u1ea1n \u0111\u1ecbnh h\u01b0\u1edbng h\u1ecdc c\u1ea5p 3 v\u00e0 \u0111\u1ea1i h\u1ecdc xong th\u00ec m\u00ecnh c\u00f3 th\u1ec3 l\u00e0m g\u00ec;</li> <li>Ph\u1ecfng v\u1ea5n nh\u1eefng ng\u01b0\u1eddi \u0111i tr\u01b0\u1edbc v\u1ec1 kinh nghi\u1ec7m h\u1ecdc tin c\u0169ng nh\u01b0 nh\u1eefng kinh nghi\u1ec7m khi \u0111i ph\u1ecfng v\u1ea5n \u1edf c\u00e1c c\u00f4ng ty l\u1edbn nh\u01b0 Google, Facebook, Microsoft; </li> <li>V\u00e0 c\u00f2n r\u1ea5t nhi\u1ec1u \u0111i\u1ec1u m\u1edbi m\u1ebb n\u1eefa...</li> </ul>"},{"location":"markdown/","title":"Test Markdown","text":""},{"location":"markdown/#test-markdown-syntax","title":"Test Markdown Syntax","text":""},{"location":"markdown/#bullet","title":"Bullet","text":"<ul> <li>Bullet 1</li> <li>Bullet 2</li> <li>Bullet 3<ul> <li>Nested bullet 1</li> <li>Nested bullet 2</li> </ul> </li> </ul>"},{"location":"markdown/#numbering","title":"Numbering","text":"<ol> <li>Number 1</li> <li>Number 2<ul> <li>Bullet in number</li> </ul> </li> </ol> <p>Google</p> <p>bold italic bold italic</p>"},{"location":"markdown/#advanced","title":"Advanced","text":"<p>Code:</p> <pre><code>print 'Hello'\n</code></pre> <p>inline code: <code>print 'Hello'</code></p> <p>Tables:</p> A B CC X Y Z UU V WW <p>Image from /uploads</p> <p></p> <p>Formula: \\(a^{21} + b_{12} = c\\)</p> <p>Resize image </p>"},{"location":"algo/algebra/binary_exponentation/","title":"L\u0169y th\u1eeba nh\u1ecb ph\u00e2n","text":"<p>T\u00e1c gi\u1ea3: * Cao Thanh H\u1eadu - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 Nhi\u00ean, \u0110HQG-HCM</p> <p>Reviewer: * Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN * Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/algebra/binary_exponentation/#loi-noi-au","title":"L\u1eddi n\u00f3i \u0111\u1ea7u","text":"<p>Ph\u00e9p t\u00ednh l\u0169y th\u1eeba l\u00e0 m\u1ed9t trong nh\u1eefng ph\u00e9p t\u00ednh c\u01a1 b\u1ea3n nh\u1ea5t, xu\u1ea5t hi\u1ec7n r\u1ea5t nhi\u1ec1u trong c\u00e1c c\u00f4ng th\u1ee9c to\u00e1n h\u1ecdc v\u00e0 t\u1ea5t nhi\u00ean c\u0169ng c\u00f3 h\u00e0ng t\u00e1 c\u00e1c \u1ee9ng d\u1ee5ng trong tin h\u1ecdc. V\u1eady \u0111\u00e2u l\u00e0 c\u00e1ch t\u00ednh l\u0169y th\u1eeba hi\u1ec7u qu\u1ea3 nh\u1ea5t trong l\u1eadp tr\u00ecnh v\u00e0 nh\u1eefng \u1ee9ng d\u1ee5ng c\u1ee7a l\u0169y th\u1eeba l\u00e0 g\u00ec, m\u1eddi b\u1ea1n \u0111\u1ecdc c\u00f9ng t\u00ecm hi\u1ec3u.</p>"},{"location":"algo/algebra/binary_exponentation/#thuat-toan-va-cai-at","title":"Thu\u1eadt to\u00e1n v\u00e0 c\u00e0i \u0111\u1eb7t","text":"<p>\u0110\u1ec3 g\u1ee3i \u00fd cho b\u1ea1n \u0111\u1ecdc, h\u00e3y c\u00f9ng gi\u1ea3i c\u00e2u \u0111\u1ed1 sau: h\u00e3y t\u00ednh \\(3^{10}\\) b\u1eb1ng c\u00e1c ph\u00e9p nh\u00e2n sao cho s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n d\u00f9ng l\u00e0 \u00edt nh\u1ea5t. Trong m\u1ed7i ph\u00e9p nh\u00e2n, b\u1ea1n ch\u1ec9 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng th\u1eeba s\u1ed1 l\u00e0 \\(3\\) ho\u1eb7c l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t ph\u00e9p nh\u00e2n tr\u01b0\u1edbc \u0111\u00f3.</p> <p>N\u1ebfu t\u00ecm \u0111\u01b0\u1ee3c s\u1ed1 ph\u00e9p nh\u00e2n \u00edt nh\u1ea5t l\u00e0 \\(4\\) th\u00ec xin ch\u00fac m\u1eebng b\u1ea1n, \u0111\u00f3 l\u00e0 c\u00e2u tr\u1ea3 l\u1eddi t\u1ed1i \u01b0u. C\u00e1ch th\u1ef1c hi\u1ec7n nh\u01b0 sau: * L\u1ea5y \\(3 \\times 3\\) \u0111\u1ec3 \u0111\u01b0\u1ee3c \\(3^2\\). * L\u1ea5y \\(3^2 \\times 3^2\\) \u0111\u1ec3 \u0111\u01b0\u1ee3c \\(3^4\\). * L\u1ea5y \\(3^4 \\times 3\\) \u0111\u1ec3 \u0111\u01b0\u1ee3c \\(3^5\\). * Cu\u1ed1i c\u00f9ng, l\u1ea5y \\(3^5 \\times 3^5\\) \u0111\u1ec3 \u0111\u01b0\u1ee3c \\(3^{10}\\).</p> <p>V\u1eady ch\u1ec9 c\u1ea7n \\(4\\) ph\u00e9p nh\u00e2n \u0111\u1ec3 t\u00ednh \\(3^{10}\\), nh\u1ecf h\u01a1n nhi\u1ec1u so v\u1edbi s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n th\u1ef1c hi\u1ec7n n\u1ebfu t\u00ednh theo \u0111\u1ecbnh ngh\u0129a (t\u00edch c\u1ee7a \\(10\\) th\u1eeba s\u1ed1 \\(3\\)).</p> <p>\u0110\u00e2y ch\u00ednh l\u00e0 \u00fd t\u01b0\u1edfng cho thu\u1eadt to\u00e1n t\u00ednh l\u0169y th\u1eeba b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p nh\u1ecb ph\u00e2n. </p> <p>V\u1edbi m\u1ecdi s\u1ed1 t\u1ef1 nhi\u00ean \\(b\\), c\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t nh\u01b0 sau:</p> <p>\\(a^b =  \\begin{cases}     1                 ,&amp; \\text{n\u1ebfu } b =0\\\\     (a^{\\frac{b - 1}{2}})^2 \\times a,&amp; \\text{n\u1ebfu } b \\text{ l\u1ebb}\\\\     (a^{\\frac{b}{2}})^2,       &amp; \\text{n\u1ebfu } b \\text{ ch\u1eb5n} \\end{cases}\\)</p> <p>D\u1ef1a v\u00e0o c\u00f4ng th\u1ee9c tr\u00ean, ta c\u00f3 h\u00e0m t\u00ednh \\(a^b\\) nh\u01b0 sau:</p> <pre><code>long long Pow(long long a, long long b) {\n    if (!b) return 1;\n    long long x = Pow(a, b / 2);\n    if (b % 2 == 0) \n        return x * x;\n    else \n        return x * x * a;\n}\n</code></pre> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c kh\u00f4ng c\u1ea7n \u0111\u1ec7 quy. Trong c\u00e1ch n\u00e0y ta ph\u00e2n t\u00edch \\(b\\) th\u00e0nh t\u1ed5ng c\u00e1c l\u0169y th\u1eeba c\u1ee7a \\(2\\), \u0111\u1ed3ng th\u1eddi \u0111\u1ea1t \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb \\(a^{2^k}\\) t\u1eeb gi\u00e1 tr\u1ecb \\(a^{2^{k - 1}}\\). K\u1ebft h\u1ee3p l\u1ea1i, ta nh\u00e2n \\(a^{2^k}\\) v\u00e0o k\u1ebft qu\u1ea3 n\u1ebfu \\(2^k\\) l\u00e0 m\u1ed9t s\u1ed1 h\u1ea1ng trong c\u00e1c l\u0169y th\u1eeba t\u1ea1o n\u00ean t\u1ed5ng \\(b\\). Ph\u00e2n t\u00edch \\(b\\) d\u01b0\u1edbi d\u1ea1ng nh\u1ecb ph\u00e2n cho m\u1ed9t c\u00e1ch nh\u00ecn r\u00f5 r\u00e0ng h\u01a1n, v\u00ed d\u1ee5 t\u00ednh \\(3^{10}\\) nh\u01b0 sau:</p> \\[ 3^{1010_2} = 3^{1000_2} \\times 3^{10_2} \\] <p>C\u00e0i \u0111\u1eb7t: <pre><code>long long Pow(long long a, long long b) {\n    long long ans = 1;\n    while (b &gt; 0){\n        if (b % 2) ans = ans * a;\n        a = a * a;\n        b /= 2;\n    }\n    return ans;\n}\n</code></pre></p> <p>Thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\log(b)\\).</p>"},{"location":"algo/algebra/binary_exponentation/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/algebra/binary_exponentation/#tinh-luy-thua-chia-lay-du","title":"T\u00ednh l\u0169y th\u1eeba chia l\u1ea5y d\u01b0","text":"<p>Khi \\(a &gt; 1\\) v\u00e0 \\(b\\) l\u1edbn th\u00ec \\(a^b\\) r\u1ea5t l\u1edbn, v\u00ec v\u1eady ng\u01b0\u1eddi ta th\u01b0\u1eddng y\u00eau c\u1ea7u t\u00ednh \\(a^b\\) chia l\u1ea5y d\u01b0 cho m\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean \\(M\\) n\u00e0o \u0111\u00f3.</p> <p>Bi\u1ebft r\u1eb1ng ph\u00e9p nh\u00e2n kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn ph\u00e9p chia l\u1ea5y d\u01b0, v\u00ec v\u1eady ch\u1ec9 c\u1ea7n th\u00eam c\u00e1c thao t\u00e1c chia l\u1ea5y d\u01b0 m\u1ed7i khi th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n, ta \u0111\u01b0\u1ee3c h\u00e0m <code>Pow(a, b, M)</code> nh\u01b0 sau:</p> <pre><code>long long Pow(long long a, long long b, long long M) {\n    long long ans = 1;\n    while (b &gt; 0){\n        if (b % 2) ans = ans * a % M;\n        a = a * a % M;\n        b /= 2;\n    }\n    return ans;\n}\n</code></pre> <p>V\u1edbi c\u00e1c gi\u00e1 tr\u1ecb \\(a &lt; 0\\), c\u00f3 th\u1ec3 thay \\(a\\) b\u1edfi \\(a + M\\) tr\u01b0\u1edbc.</p> <p>M\u1ed9t t\u00ednh ch\u1ea5t kh\u00e1c trong ph\u00e9p l\u0169y th\u1eeba: * N\u1ebfu \\(m\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec \\(x^n \\equiv x^{n \\bmod (m-1)} \\pmod{m}\\). *  N\u1ebfu \\(m\\) l\u00e0 h\u1ee3p s\u1ed1, \\(x^n \\equiv x^{n \\bmod{\\phi(m)}} \\pmod{m}\\)</p> <p>Trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p \\(b\\) r\u1ea5t l\u1edbn so v\u1edbi \\(m\\), c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ednh ch\u1ea5t n\u00e0y \u0111\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian. \u0110\u1ec3 hi\u1ec3u h\u01a1n v\u1ec1 c\u00e1c t\u00ednh ch\u1ea5t, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o \u0111\u1ecbnh l\u00fd Fermat nh\u1ecf v\u00e0 h\u00e0m phi Euler.</p> <p>M\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh \u1ee9ng d\u1ee5ng t\u00ednh ch\u1ea5t b\u00ean tr\u00ean l\u00e0 t\u00ednh \\(a^{b^c} \\mod M\\) v\u1edbi \\(M\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1. Khi \u0111\u00f3, ta c\u1ea7n t\u00ednh \\(a^{b^c \\mod (M - 1)} \\mod M\\)</p>"},{"location":"algo/algebra/binary_exponentation/#nhan-lay-du","title":"Nh\u00e2n l\u1ea5y d\u01b0","text":"<p>C\u1ea7n t\u00ednh \\(a \\times b \\text{ mod } m\\).</p> <p>Tho\u1ea1t nh\u00ecn, \u0111\u00e2y l\u00e0 m\u1ed9t v\u1ea5n \u0111\u1ec1 r\u1ea5t \u0111\u01a1n gi\u1ea3n, ta c\u00f3 th\u1ec3 l\u1ea5y \\(a \\text{ mod } m\\) r\u1ed3i nh\u00e2n v\u1edbi \\(b \\text{ mod } m\\), r\u1ed3i l\u1ea1i \\(\\text{mod }m\\).</p> <p>Tuy nhi\u00ean trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p gi\u00e1 tr\u1ecb \\(m\\) kh\u00e1 l\u1edbn (v\u00ed d\u1ee5, \\(m = 10^{16}\\)), khi \u0111\u00f3 d\u00f9 l\u1ea5y \\(a\\) v\u00e0 \\(b\\) chia d\u01b0 tr\u01b0\u1edbc cho \\(m\\), ta v\u1eabn kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n \\(a\\) v\u00e0 \\(b\\) v\u00ec nh\u01b0 th\u1ebf s\u1ebd qu\u00e1 gi\u1edbi h\u1ea1n ki\u1ec3u d\u1eef li\u1ec7u.</p> <p>V\u00ec v\u1eady ta c\u1ea7n \"nh\u00e2n nh\u1ecb ph\u00e2n\" (m\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u g\u1ecdi l\u00e0 \"nh\u00e2n \u1ea4n \u0110\u1ed9\"), v\u1edbi \u00fd t\u01b0\u1edfng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 l\u0169y th\u1eeba nh\u1ecb ph\u00e2n. C\u00f4ng th\u1ee9c nh\u01b0 sau:</p> <p>\\(a \\times b =  \\begin{cases}     0                 ,&amp; \\text{n\u1ebfu } b =0\\\\     2 \\times a \\times \\frac{b}{2},&amp; \\text{n\u1ebfu } b \\text{ ch\u1eb5n v\u00e0 l\u1edbn h\u01a1n 0}\\\\     2 \\times a \\times \\frac{b - 1}{2} + a,       &amp; \\text{n\u1ebfu } b \\text{ l\u1ebb v\u00e0 l\u1edbn h\u01a1n 0} \\end{cases}\\)</p> <p>C\u00e0i \u0111\u1eb7t: <pre><code>long long Mul(long long a, long long b) {\n    if (!b) return 0;\n    long long x = Mul(a, b / 2);\n    if (b % 2 == 0) \n        return 2 * x % m;\n    else \n        return (2 * x + a) % m;\n}\n</code></pre></p>"},{"location":"algo/algebra/binary_exponentation/#tinh-so-fibonacci-lon-phep-nhan-ma-tran","title":"T\u00ednh s\u1ed1 Fibonacci l\u1edbn - Ph\u00e9p nh\u00e2n ma tr\u1eadn","text":"<p>\u0110\u1ec3 hi\u1ec3u r\u00f5 ph\u1ea7n n\u00e0y, b\u1ea1n \u0111\u1ecdc c\u1ea7n n\u1eafm c\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 nh\u00e2n ma tr\u1eadn</p> <p>\u1ee8ng d\u1ee5ng l\u0169y th\u1eeba nh\u1ecb ph\u00e2n k\u1ebft h\u1ee3p v\u1edbi nh\u00e2n ma tr\u1eadn l\u00e0 m\u1ed9t \u1ee9ng d\u1ee5ng ph\u1ed5 bi\u1ebfn, \u0111i\u1ec3n h\u00ecnh l\u00e0 b\u00e0i to\u00e1n t\u00ednh s\u1ed1 Fibonacci th\u1ee9 \\(n\\).</p> <p>D\u00e3y s\u1ed1 Fibonacci \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> <p>\\(f_i =  \\begin{cases}     0                 ,&amp; \\text{n\u1ebfu } i = 0\\\\     1                 ,&amp; \\text{n\u1ebfu } i = 1\\\\     f_{i - 2} + f_{i - 1},       &amp; \\text{n\u1ebfu } i \\geq 2 \\end{cases}\\)</p> <p>B\u00e0i to\u00e1n \u0111\u1eb7t ra l\u00e0 t\u00ecm \\(f_n\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\log(n)\\).</p> <p>M\u1ed9t trong nh\u1eefng c\u00e1ch th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y l\u00e0 \u00e1p d\u1ee5ng ki\u1ebfn th\u1ee9c \"nh\u00e2n ma tr\u1eadn\".</p> <p>T\u1eeb ma tr\u1eadn \\(A\\) g\u1ed3m \\(2\\) gi\u00e1 tr\u1ecb \\(f_i\\) v\u00e0 \\(f_{i + 1}\\) , x\u00e2y d\u1ef1ng ma tr\u1eadn k\u00edch th\u01b0\u1edbc \\(2 \\times 2\\) sao cho ma tr\u1eadn n\u00e0y nh\u00e2n v\u1edbi \\(A\\) \u0111\u01b0\u1ee3c ma tr\u1eadn m\u1edbi g\u1ed3m \\(2\\) gi\u00e1 tr\u1ecb \\(f_{i + 1}\\) v\u00e0 \\(f_{i + 2}\\).</p> \\[\\begin{pmatrix} F_{i} \\cr F_{i - 1} \\cr\\end{pmatrix}  = \\begin{pmatrix} 1 &amp; 1 \\cr 1 &amp; 0 \\cr\\end{pmatrix} \\begin{pmatrix} F_{i - 1} \\cr F_{i - 2}\\cr\\end{pmatrix} \\] <p>V\u00ec ph\u00e9p nh\u00e2n ma tr\u1eadn c\u00f3 t\u00ednh ch\u1ea5t k\u1ebft h\u1ee3p n\u00ean ta d\u1ec5 d\u00e0ng \u00e1p d\u1ee5ng k\u0129 thu\u1eadt l\u0169y th\u1eeba nh\u1ecb ph\u00e2n (thay s\u1ed1 nguy\u00ean th\u00e0nh ma tr\u1eadn) \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log(n))\\).</p>"},{"location":"algo/algebra/binary_exponentation/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>Ki\u1ec3m tra si\u00eau m\u00e1y t\u00ednh</p> <p>The last digit</p> <p>LOCKER</p>"},{"location":"algo/algebra/binary_exponentation/#tham-khao","title":"Tham kh\u1ea3o","text":"<p>B\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c tham kh\u1ea3o t\u1eeb Algorithms for Competitive Programming.</p>"},{"location":"algo/algebra/euclid/","title":"Thu\u1eadt to\u00e1n Euclid","text":"<p>T\u00e1c gi\u1ea3:  - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean, Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN.</p> <p>Reviewer:  - Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN - Ph\u1ea1m Ho\u00e0ng Hi\u1ec7p - University of Georgia - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/algebra/euclid/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":""},{"location":"algo/algebra/euclid/#mot-so-ky-hieu-toan-hoc-su-dung-trong-bai-viet","title":"M\u1ed9t s\u1ed1 k\u00fd hi\u1ec7u to\u00e1n h\u1ecdc s\u1eed d\u1ee5ng trong b\u00e0i vi\u1ebft","text":"<ul> <li>Cho hai s\u1ed1 nguy\u00ean \\(a\\) v\u00e0 \\(b\\) \\((b \\neq 0)\\). N\u1ebfu t\u1ed3n t\u1ea1i s\u1ed1 nguy\u00ean \\(q\\) sao cho \\(a = bq\\) th\u00ec ta n\u00f3i \\(a\\) chia h\u1ebft cho \\(b\\) (k\u00fd hi\u1ec7u \\(a\\ \\vdots\\ b\\)) ho\u1eb7c \\(b\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(a\\) (k\u00fd hi\u1ec7u \\(b\\mid a\\)).</li> <li>Cho ba s\u1ed1 nguy\u00ean \\(a\\), \\(b\\) v\u00e0 \\(m\\) \\((m \\neq 0)\\). N\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t s\u1ed1 nguy\u00ean \\(r\\) sao cho \\(a = mq_1 + r\\) v\u00e0 \\(b = mq_2 + r\\) v\u1edbi \\(q_1, q_2\\) l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean th\u00ec ta n\u00f3i \\(a\\) \u0111\u1ed3ng d\u01b0 v\u1edbi \\(b\\) theo modulo \\(m\\). K\u00fd hi\u1ec7u l\u00e0 \\(a \\equiv b \\pmod m\\).</li> <li>K\u00fd hi\u1ec7u \\(\\text{log}_a(b)\\) \u0111\u01b0\u1ee3c hi\u1ec3u l\u00e0 logarit c\u01a1 s\u1ed1 \\(a\\) c\u1ee7a \\(b\\). B\u00e0i vi\u1ebft n\u00e0y s\u1ebd s\u1eed d\u1ee5ng \\(\\text{log}(x)\\) \u0111\u1ec3 thay cho \\(\\text{log}_2(x)\\).</li> </ul>"},{"location":"algo/algebra/euclid/#uoc-chung-lon-nhat","title":"\u01af\u1edbc chung l\u1edbn nh\u1ea5t","text":"<p>\u0110\u00e2y l\u00e0 kh\u00e1i ni\u1ec7m t\u01b0\u01a1ng \u0111\u1ed1i quen thu\u1ed9c v\u1edbi ch\u00fang ta.</p> <p>Cho hai s\u1ed1 t\u1ef1 nhi\u00ean \\(a\\) v\u00e0 \\(b\\). S\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(d\\) l\u1edbn nh\u1ea5t tho\u1ea3 m\u00e3n \\(d\\mid a\\) v\u00e0 \\(d\\mid b\\) g\u1ecdi l\u00e0 \u01b0\u1edbc chung l\u1edbn nh\u1ea5t (greatest common divisor - GCD) c\u1ee7a \\(a\\) v\u00e0 \\(b\\). K\u00ed hi\u1ec7u l\u00e0 \\(\\gcd(a, b)\\) (<code>\u01afCLN(a, b)</code> trong ti\u1ebfng Vi\u1ec7t) ho\u1eb7c \u0111\u01a1n gi\u1ea3n h\u01a1n \\((a, b)\\).</p> \\[\\gcd(a, b) = \\max\\{d \\in \\mathbb{N}^* : (d \\mid a),  (d\\mid b)\\}\\] <p>V\u1ec1 m\u1eb7t to\u00e1n h\u1ecdc, v\u1edbi \\(k \\neq 0\\) th\u00ec \\(\\gcd(0, k) = k\\), v\u00e0 \\(\\gcd(0, 0)\\) kh\u00f4ng x\u00e1c \u0111\u1ecbnh. Tuy nhi\u00ean, \u0111\u1ec3 l\u1eadp tr\u00ecnh ti\u1ec7n l\u1ee3i ta quy \u01b0\u1edbc \\(\\gcd(0, 0) = 0\\).</p> <p>\u0110\u1ecbnh ngh\u0129a \u01afCLN c\u0169ng c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng cho s\u1ed1 nguy\u00ean. Khi \u0111\u00f3 \\(\\gcd(a, b) = \\gcd(\\|a\\|, \\|b\\|)\\).</p> <p>C\u00f3 m\u1ed9t v\u00e0i c\u00e1ch \u0111\u1ec3 t\u00ecm \u01afCLN c\u1ee7a hai s\u1ed1 \\(a\\) v\u00e0 \\(b\\). C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ... duy\u1ec7t t\u1eebng s\u1ed1 t\u1ef1 nhi\u00ean \\(d\\) m\u1ed9t \u0111\u1ebfn \\(\\min\\{a, b\\}\\) \u0111\u1ec3 ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n \\(d\\mid a\\) v\u00e0 \\(d\\mid b\\). Ngo\u00e0i ra, trong to\u00e1n h\u1ecdc, ta c\u0169ng s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p ph\u00e2n t\u00edch th\u00e0nh th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u1ec3 t\u00ecm \u01afCLN. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y kh\u00f4ng hi\u1ec7u qu\u1ea3 l\u1eafm khi l\u1eadp tr\u00ecnh. Thay v\u00e0o \u0111\u00f3, ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Euclid.</p>"},{"location":"algo/algebra/euclid/#thuat-toan-euclid","title":"Thu\u1eadt to\u00e1n Euclid","text":"<p>Thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y trong t\u00e1c ph\u1ea9m \"C\u01a1 s\u1edf\" (Elements) c\u1ee7a Euclid v\u00e0o kho\u1ea3ng n\u0103m 300 TCN, nh\u01b0ng c\u0169ng c\u00f3 th\u1ec3 \u0111\u00e3 t\u1eebng xu\u1ea5t hi\u1ec7n tr\u01b0\u1edbc \u0111\u00f3.</p> <p>Thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch li\u00ean t\u1ee5c \u00e1p d\u1ee5ng c\u00f4ng th\u1ee9c sau cho t\u1edbi khi ra k\u1ebft qu\u1ea3:</p> \\[ \\gcd(a, b) = \\begin{cases}    a, &amp; \\text{n\u1ebfu } b = 0 \\\\    \\gcd(b, a \\bmod b), &amp; \\text{trong tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i} \\end{cases} \\]"},{"location":"algo/algebra/euclid/#chung-minh","title":"Ch\u1ee9ng minh","text":"<p>N\u1ebfu \\(d\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(a\\) v\u00e0 \\(b\\), hi\u1ec3n nhi\u00ean n\u00f3 c\u0169ng l\u00e0 \u01b0\u1edbc c\u1ee7a \\(a - b\\).</p> <p>N\u1ebfu \\(d'\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(b\\) v\u00e0 \\(b - a\\), hi\u1ec3n nhi\u00ean n\u00f3 c\u0169ng l\u00e0 \u01b0\u1edbc c\u1ee7a \\(b + (a - b) = a\\).</p> <p>Do v\u1eady v\u1edbi ba s\u1ed1 \\(a\\), \\(b\\), \\(a - b\\), n\u1ebfu m\u1ed9t s\u1ed1 \\(d\\) b\u1ea5t k\u1ef3 l\u00e0 \u01b0\u1edbc c\u1ee7a m\u1ed9t trong ba s\u1ed1 tr\u00ean th\u00ec s\u1ebd l\u00e0 \u01b0\u1edbc c\u1ee7a hai s\u1ed1 c\u00f2n l\u1ea1i, t\u1ee9c l\u00e0 <code>\u01afC(a, b) = \u01afC(b, a - b)</code>. \u0110i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn \\(\\gcd(a, b) = \\gcd(b, a - b)\\).</p> <p>Ph\u00e9p t\u00ednh \\(a - b\\) sau khi th\u1ef1c hi\u1ec7n \\(\\lfloor \\frac{a}{b} \\rfloor\\) l\u1ea7n th\u00ec s\u1ebd tho\u1ea3 m\u00e3n \\(a \\leq b\\).  S\u1ed1 \\(a\\) sau khi tr\u1eeb \u0111i \\(\\lfloor \\frac{a}{b} \\rfloor\\) l\u1ea7n \\(b\\) tr\u1edf th\u00e0nh \\(a - b\\lfloor \\frac{a}{b} \\rfloor = a \\text{ mod } b\\). </p> <p>V\u1eady \\(\\gcd(a, b) = \\gcd(b, a \\text{ mod } b)\\) (\u0111pcm).</p>"},{"location":"algo/algebra/euclid/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>int gcd(int a, int b)\n{\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n</code></pre> <p>Ho\u1eb7c ng\u1eafn h\u01a1n: <pre><code>int gcd(int a, int b)\n{\n    return (b ? gcd(b, a % b) : a);\n}\n</code></pre></p>"},{"location":"algo/algebra/euclid/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>\u0110\u1ecbnh l\u00fd Lam\u00e9: Thu\u1eadt to\u00e1n Euclid c\u1ea7n th\u1ef1c hi\u1ec7n \u00edt h\u01a1n \\(5\\log_{10}(\\min(u, v))\\) l\u1ea7n chia l\u1ea5y d\u01b0.</p> <p>Thu\u1eadt to\u00e1n ch\u1ea1y ch\u1eadm nh\u1ea5t khi \\(a = F_n\\), \\(b = F_{n - 1}\\), v\u1edbi \\(F_i\\) l\u00e0 s\u1ed1 Fibonacci th\u1ee9 \\(i\\). Khi \u0111\u00f3 thu\u1eadt to\u00e1n c\u1ea7n th\u1ef1c hi\u1ec7n \\(n - 2\\) l\u1ea7n \u0111\u1ec7 quy.</p>"},{"location":"algo/algebra/euclid/#cai-tien","title":"C\u1ea3i ti\u1ebfn","text":"<p>So v\u1edbi c\u00e1c ph\u00e9p to\u00e1n kh\u00e1c, ph\u00e9p l\u1ea5y ph\u1ea7n d\u01b0 (<code>%</code>) ch\u1eadm h\u01a1n m\u1ed9t ch\u00fat d\u00f9 v\u1eabn c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(1)\\). Ch\u00fang ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c kh\u00f4ng s\u1eed d\u1ee5ng ph\u00e9p to\u00e1n n\u00e0y.</p> <p>Ta c\u00f3 m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t sau:  - \\(\\gcd(2k, 2h) = 2\\gcd(k, h)\\) - \\(\\gcd(2k, 2h + 1) = \\gcd(k, 2h + 1)\\)</p> <p>K\u1ebft h\u1ee3p v\u1edbi \\(\\gcd(a, b) = \\gcd(b, a - b)\\) ta c\u00e0i \u0111\u1eb7t nh\u01b0 sau (Code tham kh\u1ea3o t\u1eeb CP Algorithms): <pre><code>int gcd(int a, int b) \n{\n    if (!a || !b) return a | b;\n    int shift = __builtin_ctz(a | b);\n    a &gt;&gt;= __builtin_ctz(a);\n    do \n    {\n        b &gt;&gt;= __builtin_ctz(b);\n        if (a &gt; b)\n            swap(a, b);\n        b -= a;\n    } while (b);\n\n    return a &lt;&lt; shift;\n}\n</code></pre> \u0110o\u1ea1n code tr\u00ean th\u1ef1c hi\u1ec7n nh\u1eefng c\u00f4ng vi\u1ec7c sau: - Chia c\u1ea3 hai s\u1ed1 \\(a\\) v\u00e0 \\(b\\) cho \\(shift\\) l\u00e0 lu\u1ef9 th\u1eeba c\u1ee7a \\(2\\), \u0111\u1ec3 hai s\u1ed1 \u0111\u1ec1u l\u1ebb (H\u00e0m <code>__builtin_ctz(k)</code> \u0111\u1ebfm s\u1ed1 bit \\(0\\) t\u1eadn c\u00f9ng c\u1ee7a \\(k\\)). - L\u00fac n\u00e0y, \u00edt nh\u1ea5t m\u1ed9t trong hai s\u1ed1 l\u00e0 l\u1ebb. Li\u00ean t\u1ee5c chia s\u1ed1 ch\u1eb5n cho \\(2\\) \u0111\u1ec3 n\u00f3 tr\u1edf th\u00e0nh s\u1ed1 l\u1ebb, sau \u0111\u00f3 \u00e1p d\u1ee5ng \\((a, b) = (b, a - b)\\). L\u1eb7p l\u1ea1i b\u01b0\u1edbc tr\u00ean t\u1edbi khi m\u1ed9t trong hai s\u1ed1 l\u00e0 \\(0\\). - Nh\u00e2n k\u1ebft qu\u1ea3 (t\u1ea1m g\u1ecdi l\u00e0 \\(ans\\)) v\u1edbi \\(shift\\), v\u00ec ta \u0111\u00e3 chia c\u1ea3 hai s\u1ed1 n\u00e0y cho \\(shift\\), v\u00ec r\u00f5 r\u00e0ng \\((shift, ans) = 1\\).</p> <p>Thu\u1eadt to\u00e1n c\u1ea3i ti\u1ebfn tr\u00ean s\u1ebd th\u1ef1c hi\u1ec7n chia \\(\\text{log}(a) + \\text{log}(b)\\) l\u1ea7n trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t. Do v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt v\u1eabn kh\u00f4ng \u0111\u1ed5i v\u00e0 l\u00e0 \\(O(\\text{log}(a, b))\\). </p>"},{"location":"algo/algebra/euclid/#vai-chu-y","title":"V\u00e0i ch\u00fa \u00fd","text":"<ul> <li>Th\u01b0 vi\u1ec7n <code>algorithm</code> c\u1ee7a C++ c\u00f3 h\u1ed7 tr\u1ee3 h\u00e0m <code>__gcd(a, b)</code> \u0111\u1ec3 t\u00ecm \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a hai s\u1ed1 \\(a\\) v\u00e0 \\(b\\), c\u0169ng s\u1eed d\u1ee5ng thu\u1eadt Euclid. K\u1ec3 t\u1eeb phi\u00ean b\u1ea3n <code>C++17</code>, th\u01b0 vi\u1ec7n <code>numeric</code> h\u1ed7 tr\u1ee3 th\u00eam h\u00e0m <code>gcd(a, b)</code> v\u1edbi m\u1ee5c \u0111\u00edch t\u01b0\u01a1ng t\u1ef1. C\u00e1c h\u00e0m c\u00f3 s\u1eb5n n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 code ng\u1eafn g\u1ecdn.</li> <li>\u0110\u1ec3 t\u00ednh b\u1ed9i chung nh\u1ecf nh\u1ea5t (BCNN) c\u1ee7a hai s\u1ed1, ta d\u00f9ng c\u00f4ng th\u1ee9c:</li> </ul> \\[\\text{lcm}(a, b) = \\frac{a \\times b}{\\gcd(a, b)}\\] <p>Khi t\u00ednh to\u00e1n, c\u00f4ng th\u1ee9c tr\u00ean s\u1ebd g\u00e2y tr\u00e0n s\u1ed1 n\u1ebfu \\(a \\times b\\) qu\u00e1 l\u1edbn, nh\u01b0ng ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft d\u1ec5 d\u00e0ng b\u1eb1ng c\u00e1ch th\u1ef1c hi\u1ec7n ph\u00e9p chia tr\u01b0\u1edbc: </p> \\[\\text{lcm}(a, b)=\\frac{a}{\\gcd(a, b)}\\times b\\] <p>K\u1ec3 t\u1eeb <code>C++17</code>, th\u01b0 vi\u1ec7n <code>numeric</code> c\u0169ng h\u1ed7 tr\u1ee3 c\u1ea3 h\u00e0m <code>lcm(a, b)</code> cho ph\u00e9p t\u00ednh BCNN c\u1ee7a hai s\u1ed1.</p>"},{"location":"algo/algebra/euclid/#thuat-toan-euclid-mo-rong","title":"Thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng","text":"<p>V\u1edbi hai s\u1ed1 t\u1ef1 nhi\u00ean \\(a\\) v\u00e0 \\(b\\), thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 vi\u1ebft \\(d = \\gcd(a, b)\\) d\u01b0\u1edbi d\u1ea1ng t\u1ed5 h\u1ee3p tuy\u1ebfn t\u00ednh. N\u00f3i c\u00e1ch kh\u00e1c, thu\u1eadt to\u00e1n n\u00e0y s\u1ebd t\u00ecm m\u1ed9t b\u1ed9 gi\u00e1 tr\u1ecb nguy\u00ean \\((x, y)\\) tho\u1ea3 m\u00e3n:</p> \\[ax + by = d\\] <p>V\u00ed d\u1ee5: </p> <p>\\(\\gcd(55, 80) = 5 = 55 \\times 3 + 80 \\times (-2)\\)</p> <p>C\u00e1c s\u1ed1 \\(x, y\\) tho\u1ea3 m\u00e3n \u0111\u1eb3ng th\u1ee9c tr\u00ean lu\u00f4n t\u1ed3n t\u1ea1i theo b\u1ed5 \u0111\u1ec1 sau:</p> <p>B\u1ed5 \u0111\u1ec1 B\u00e9zout: V\u1edbi hai s\u1ed1 nguy\u00ean \\(a\\), \\(b\\) c\u00f3 \u01afCLN l\u00e0 \\(d\\), t\u1ed3n t\u1ea1i hai s\u1ed1 nguy\u00ean \\(x\\) v\u00e0 \\(y\\) tho\u1ea3 m\u00e3n \\(ax + by = d\\). H\u01a1n n\u1eefa, t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean \\(D\\) c\u00f3 d\u1ea1ng \\(D = aX + bY\\) \u0111\u1ec1u l\u00e0 b\u1ed9i c\u1ee7a \\(d\\). </p>  Ch\u1ee9ng minh  <p> X\u00e9t tr\u01b0\u1eddng h\u1ee3p $a = b = 0$. V\u1edbi quy \u01b0\u1edbc $(0, 0) = 0$ \u0111\u00e3 n\u00f3i t\u1edbi \u1edf tr\u00ean, m\u1ecdi gi\u00e1 tr\u1ecb nguy\u00ean c\u1ee7a $x, y$ \u0111\u1ec1u tho\u1ea3 m\u00e3n \u0111\u1eb3ng th\u1ee9c $ax + by = 0$. B\u00e2y gi\u1edd ta s\u1ebd gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n v\u1edbi $a, b$ kh\u00f4ng \u0111\u1ed3ng th\u1eddi b\u1eb1ng $0$.  R\u00f5 r\u00e0ng, lu\u00f4n t\u1ed3n t\u1ea1i c\u00e1c gi\u00e1 tr\u1ecb $x, y$ \u0111\u1ec3 $ax + by &gt; 0$. G\u1ecdi $d'$ l\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng nh\u1ecf nh\u1ea5t tho\u1ea3 m\u00e3n $d' = ax' + by'$ (v\u1edbi $x', y'$ l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean). Ta ch\u1ee9ng minh r\u1eb1ng $d'$ l\u00e0 \u01afCLN c\u1ee7a $a$ v\u00e0 $b$. gcd(a, b)  \\begin{align} &amp;a = d'q + r \\ (0 \\leq r &lt; d')\\\\ &amp;\\Rightarrow r = a - qd'\\\\ &amp;\\Rightarrow r = a - q(ax' + by')\\\\ &amp;\\Rightarrow r = a(1 - qx') + b(-qy') \\end{align}  Do \u0111\u00f3 $r$ c\u0169ng c\u00f3 d\u1ea1ng $ax + by$. Tuy nhi\u00ean, s\u1ed1 d\u01b0\u01a1ng nh\u1ecf nh\u1ea5t c\u00f3 d\u1ea1ng nh\u01b0 v\u1eady l\u00e0 $d'$, th\u1ebf nh\u01b0ng $0 \\leq r &lt; d'$ n\u00ean $r = 0$, \u0111\u1ed3ng ngh\u0129a v\u1edbi $d' \\mid a$.  Ch\u1ee9ng minh t\u01b0\u01a1ng t\u1ef1 ta c\u0169ng \u0111\u01b0\u1ee3c $d' \\mid b$. T\u1eeb \u0111\u00f3 suy ra $d$ l\u00e0 \u01b0\u1edbc chung c\u1ee7a $a$ v\u00e0 $b$.  X\u00e9t $c$ l\u00e0 m\u1ed9t \u01b0\u1edbc chung b\u1ea5t k\u1ef3 kh\u00e1c $d'$ c\u1ee7a $a$ v\u00e0 $b$. \u0110\u1eb7t $a = cu, b = cv$ v\u1edbi $u, v$ l\u00e0 s\u1ed1 nguy\u00ean. Ta c\u00f3:  \\begin{align} &amp;d' = ax' + bt'\\\\ &amp;\\Rightarrow d' = cux' + cvy'\\\\ &amp;\\Rightarrow d' = c(ux' + vy') \\end{align}  Suy ra $c \\mid d'$. V\u00ec $d'$ d\u01b0\u01a1ng v\u00e0 kh\u00e1c $c$ n\u00ean $c &lt; d'$.   V\u1eady $d'$ l\u00e0 \u01afCLN c\u1ee7a $a$ v\u00e0 $b$. B\u1ed5 \u0111\u1ec1 \u0111\u01b0\u1ee3c ch\u1ee9ng minh. </p> <p>\u1ee8ng d\u1ee5ng tr\u1ef1c ti\u1ebfp c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 c\u00e1c ph\u01b0\u01a1ng tr\u00ecnh Diophantus, s\u1ebd \u0111\u01b0\u1ee3c th\u1ea3o lu\u1eadn \u1edf ph\u1ea7n sau.</p>"},{"location":"algo/algebra/euclid/#mo-ta-thuat-toan","title":"M\u00f4 t\u1ea3 thu\u1eadt to\u00e1n","text":"<p>X\u00e9t b\u00e0i to\u00e1n v\u1edbi hai s\u1ed1 ban \u0111\u1ea7u l\u00e0 \\(a = A\\) v\u00e0 \\(b = B\\). G\u1ecdi \\(d\\) l\u00e0 \u01afCLN c\u1ee7a \\(A\\) v\u00e0 \\(B\\).</p> <p>Khi th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n Euclid (kh\u00f4ng m\u1edf r\u1ed9ng) \u0111\u1ec3 t\u00ecm \\(d\\), sau khi bi\u1ebfn \u0111\u1ed5i ho\u00e0n t\u1ea5t ta thu \u0111\u01b0\u1ee3c \\(a = d, b = 0\\). L\u00fac n\u00e0y ta c\u00f3 \\(d = d \\times 1 + 0 \\times 0\\), t\u1ee9c l\u00e0 \\(a = d, b = 0, x = 1, y = 0\\).</p> <p>T\u1eeb c\u00e1c gi\u00e1 tr\u1ecb \\(a, b, x, y\\) \u1edf tr\u00ean, ta truy l\u1ea1i c\u00e1c gi\u00e1 tr\u1ecb \\(a, b\\) \u1edf b\u01b0\u1edbc tr\u01b0\u1edbc v\u00e0 thay \u0111\u1ed5i c\u00e1c h\u1ec7 s\u1ed1 \\(x, y\\) \u0111\u1ec3 \u0111\u1eb3ng th\u1ee9c \\(d = ax + by\\) \u0111\u00fang trong b\u01b0\u1edbc n\u00e0y.</p> <p>Gi\u1ea3 s\u1eed t\u1ea1i m\u1ed9t b\u01b0\u1edbc ta c\u00f3 \\(a = a_0, b = b_0\\). \u0110\u1eb7t \\(a_0 = b_0q + r \\ (q, r \\in \\mathbb{N} , r &lt; b_0)\\). Ta th\u1ea5y \\(q = \\left\\lfloor \\dfrac{a_0}{b_0} \\right\\rfloor\\) v\u00e0 \\(r = a_0 \\text{ mod } b_0\\).</p> <p>L\u1ea1i gi\u1ea3 s\u1eed tr\u01b0\u1edbc b\u01b0\u1edbc \u0111\u00f3 sau khi \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng, ta \u0111\u01b0\u1ee3c b\u1ed9 \\(a = b_0, b = r\\) v\u00e0 c\u00e1c h\u1ec7 s\u1ed1 \\(x = x_1, y = y_1\\) l\u00e0 .</p> <p>Ta c\u1ea7n t\u00ecm c\u00e1c h\u1ec7 s\u1ed1 \\(x_0, y_0\\) \u0111\u1ec3: \\(a_0x_0 + b_0y_0 = d\\).</p> \\[\\begin{align} &amp;d = b_0x_1 + ry_1 \\\\ &amp;\\Rightarrow d = b_0x_1 + (a_0 - b_0q)y_1 \\\\ &amp;\\Rightarrow d = a_0y_1 + b_0(x_1 - qy_1) \\\\ \\end{align}\\] <p>Li\u00ean t\u1ee5c c\u1eadp nh\u1eadt c\u00e1c h\u1ec7 s\u1ed1 \\(x, y\\) theo c\u00f4ng th\u1ee9c tr\u00ean t\u1edbi khi thu \u0111\u01b0\u1ee3c \\(a = A, b = B\\) nh\u01b0 ban \u0111\u1ea7u, ta s\u1ebd thu \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3.</p>"},{"location":"algo/algebra/euclid/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>// H\u00e0m tr\u1ea3 v\u1ec1 \u01afCLN c\u1ee7a a v\u00e0 b \u0111\u1ed3ng th\u1eddi thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a x, y\nint extEuclid(int a, int b, int&amp; x, int&amp; y)\n{\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int q = a / b;\n    int r = a - b * q;\n    int x1 = 0, y1 = 0;\n    int d = extEuclid(b, r, x1, y1);\n    x = y1;\n    y = x1 - q * y1;\n    return d;\n}\n</code></pre>"},{"location":"algo/algebra/euclid/#o-phuc-tap_1","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>Thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng th\u1ef1c t\u1ebf ch\u1ec9 l\u00e0 th\u00eam m\u1ed9t v\u00e0i b\u01b0\u1edbc t\u00ednh to\u00e1n v\u00e0o thu\u1eadt to\u00e1n Euclid th\u01b0\u1eddng n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1eabn l\u00e0 \\(O(\\text{log}(\\text{min}\\{a, b\\}))\\).</p>"},{"location":"algo/algebra/euclid/#phuong-trinh-diophantus-tuyen-tinh-hai-an","title":"Ph\u01b0\u01a1ng tr\u00ecnh Diophantus tuy\u1ebfn t\u00ednh hai \u1ea9n","text":"<p>Ph\u01b0\u01a1ng tr\u00ecnh Diophantus (Diophantine function) tuy\u1ebfn t\u00ednh hai \u1ea9n c\u00f3 d\u1ea1ng nh\u01b0 sau:</p> \\[ax + by = c \\  (a, b, c \\in \\mathbb{Z})\\] <p>Ph\u01b0\u01a1ng tr\u00ecnh tr\u00ean c\u00f3 v\u00f4 s\u1ed1 nghi\u1ec7m \\((x, y)\\) th\u1ef1c (tr\u1eeb khi \\(a = b = 0, c \\neq 0\\), khi \u0111\u00f3 ph\u01b0\u01a1ng tr\u00ecnh v\u00f4 nghi\u1ec7m). Tuy nhi\u00ean, ta ch\u1ec9 quan t\u00e2m \u0111\u1ebfn c\u00e1c nghi\u1ec7m nguy\u00ean c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh.</p> <p>\u0110\u1ec3 cho ng\u1eafn g\u1ecdn, b\u00e0i vi\u1ebft s\u1ebd s\u1eed d\u1ee5ng c\u1ee5m t\u1eeb \"ph\u01b0\u01a1ng tr\u00ecnh Diophantus\" \u0111\u1ec3 ch\u1ec9 ph\u01b0\u01a1ng tr\u00ecnh Diophantus tuy\u1ebfn t\u00ednh hai \u1ea9n.</p> <p>B\u00e0i t\u1eadp \u00e1p d\u1ee5ng tr\u1ef1c ti\u1ebfp: CEQU</p>"},{"location":"algo/algebra/euclid/#thuat-toan-tim-nghiem","title":"Thu\u1eadt to\u00e1n t\u00ecm nghi\u1ec7m","text":"<p>Khi \\(a = b = 0\\), ph\u01b0\u01a1ng tr\u00ecnh c\u00f3 nghi\u1ec7m \\(x = k, y = h \\ (k, h \\in \\mathbb{Z})\\) n\u1ebfu \\(c = 0\\) v\u00e0 v\u00f4 nghi\u1ec7m n\u1ebfu \\(c = 0\\)</p> <p>Khi \\(a \\neq 0, b = 0\\) ph\u01b0\u01a1ng tr\u00ecnh c\u00f3 nghi\u1ec7m \\(x = \\frac{c}{a}, y = k \\ (k \\in \\mathbb{Z})\\) n\u1ebfu \\(a\\mid  c\\) v\u00e0 v\u00f4 nghi\u1ec7m n\u1ebfu \\(a \\nmid c\\). T\u01b0\u01a1ng t\u1ef1 khi \\(a = 0, b \\neq 0\\).</p> <p>B\u00e2y gi\u1edd ta ch\u1ec9 x\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p \\(a \\neq 0, b \\neq 0\\).</p>"},{"location":"algo/algebra/euclid/#tim-nghiem-tong-quat-bang-phuong-phap-so-hoc","title":"T\u00ecm nghi\u1ec7m t\u1ed5ng qu\u00e1t b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p s\u1ed1 h\u1ecdc","text":"<p>L\u01b0u \u00fd: Ph\u1ea7n d\u01b0\u1edbi \u0111\u00e2y kh\u00f4ng th\u1ef1c s\u1ef1 li\u00ean quan t\u1edbi thu\u1eadt to\u00e1n \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y, \u0111\u1ed3ng th\u1eddi k\u1ebft qu\u1ea3 c\u0169ng kh\u00e1 ph\u1ee9c t\u1ea1p v\u00e0 kh\u00f4ng ph\u1ea3i th\u1ee9 ch\u00fang ta c\u1ea7n l\u00fac n\u00e0y. B\u1ea1n \u0111\u1ecdc c\u00e2n nh\u1eafc tr\u01b0\u1edbc khi xem.</p>  T\u00ecm nghi\u1ec7m t\u1ed5ng qu\u00e1t b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p s\u1ed1 h\u1ecdc  <p> T\u1eeb $ax + by = c$ ta r\u00fat ra:  $$ax \\equiv c \\ (\\text{mod } b)$$  V\u1ebf tr\u00e1i v\u00e0 modulo c\u1ee7a \u0111\u1ed3ng d\u01b0 th\u1ee9c tr\u00ean c\u00f9ng chia h\u1ebft cho $d = \\gcd(a, b)$. Do v\u1eady, $d\\mid  c$. N\u1ebfu \u0111i\u1ec1u ng\u01b0\u1ee3c l\u1ea1i x\u1ea3y ra, ph\u01b0\u01a1ng tr\u00ecnh v\u00f4 nghi\u1ec7m.  Chia hai v\u1ebf v\u00e0 modulo c\u1ee7a \u0111\u1ed3ng d\u01b0 th\u1ee9c cho $d$ \u0111\u01b0\u1ee3c:  $$\\frac{a}{d} \\times x \\equiv \\frac{c}{d} \\ \\left(\\text{mod } \\dfrac{b}{d}\\right)$$  V\u00ec $(\\frac{a}{d}, \\frac{b}{d}) = 1$ n\u00ean t\u1ed3n t\u1ea1i ngh\u1ecbch \u0111\u1ea3o modulo $\\frac{b}{d}$ c\u1ee7a $\\frac{a}{d}$. Nh\u00e2n hai v\u1ebf c\u1ee7a \u0111\u1ed3ng d\u01b0 th\u1ee9c v\u1edbi gi\u00e1 tr\u1ecb n\u00e0y \u0111\u01b0\u1ee3c:  $$x \\equiv \\frac{c}{d} \\times \\left(\\dfrac{a}{d}\\right) ^{-1} \\ \\left(\\text{mod } \\dfrac{b}{d}\\right)$$  Do \u0111\u00f3 h\u1ecd c\u00e1c nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh l\u00e0:  $$\\begin{cases}     x = \\frac{b}{d} \\times k + \\frac{c}{d} \\times \\gamma &amp;\\left(k, \\gamma \\in \\mathbb{Z}, \\frac{a}{d} \\times \\gamma \\equiv 1 \\ \\left(\\text{mod } \\dfrac{b}{d}\\right)\\right) \\\\     y = \\frac{c - ax}{b} \\end{cases}$$ </p>"},{"location":"algo/algebra/euclid/#tim-nghiem-bang-thuat-toan","title":"T\u00ecm nghi\u1ec7m b\u1eb1ng thu\u1eadt to\u00e1n","text":"<p>Ta \u0111\u00e3 bi\u1ebft ph\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 c\u00f3 nghi\u1ec7m n\u1ebfu \\(\\gcd(a, b)\\mid  c\\). N\u1ebfu \u0111i\u1ec1u ki\u1ec7n n\u00e0y kh\u00f4ng tho\u1ea3 m\u00e3n, ta k\u1ebft lu\u1eadn ph\u01b0\u01a1ng tr\u00ecnh v\u00f4 nghi\u1ec7m.</p> <p>Gi\u1ea3 s\u1eed \\(a, b\\) l\u00e0 c\u00e1c s\u1ed1 d\u01b0\u01a1ng. \u0110\u1eb7t \\(d = \\gcd(a, b)\\). </p> <p>S\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng, ta c\u00f3:</p> \\[ax' + by' = d \\ (x', y' \\in \\mathbb{Z})\\] <p>Nh\u00e2n hai v\u1ebf c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh v\u1edbi \\(\\frac{c}{d}\\) \u0111\u01b0\u1ee3c:</p> \\[a\\left(x' \\times \\frac{c}{d}\\right) + b\\left(y' \\times \\frac{c}{d}\\right) = c\\] <p>Suy ra ph\u01b0\u01a1ng tr\u00ecnh c\u00f3 nghi\u1ec7m: </p> \\[\\begin{cases}     x_0 = x' \\times \\frac{c}{d}  \\\\     y_0 = y' \\times \\frac{c}{d} \\end{cases}\\] <p>Tr\u01b0\u1eddng h\u1ee3p \\(a, b\\) kh\u00f4ng d\u01b0\u01a1ng, ta thay \u0111\u1ed5i d\u1ea5u c\u1ee7a \\(x, y\\) \u0111\u1ec3 tho\u1ea3 m\u00e3n \u0111\u1eb3ng th\u1ee9c.</p> <p>Thay nghi\u1ec7m \\(x_0, y_0\\) tr\u1edf l\u1ea1i ph\u01b0\u01a1ng tr\u00ecnh, ta \u0111\u01b0\u1ee3c:</p> <p>\\(ax_0 + by_0 = c\\\\ \\Rightarrow a\\left(x_0 + k\\times\\frac{b}{d}\\right) + b\\left(y_0 - k\\times\\frac{a}{d}\\right) = c \\  (k \\in \\mathbb{Z})\\)</p> <p>T\u1eeb \u0111\u1eb3ng th\u1ee9c n\u00e0y ta k\u1ebft lu\u1eadn c\u00e1c nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh c\u00f3 d\u1ea1ng:</p> \\[\\begin{cases}     x = x_0 + k \\times \\frac{b}{d} \\\\     y = y_0 - k \\times \\frac{a}{d} \\end{cases} \\ (k \\in \\mathbb{Z})\\] <p>Ch\u1ed1t l\u1ea1i, \u0111\u1ec3 t\u00ecm nghi\u1ec7m c\u1ee7a m\u1ed9t ph\u01b0\u01a1ng tr\u00ecnh Diophantus, ta t\u00ecm c\u00e1c h\u1ec7 s\u1ed1 \\(x', y'\\) t\u1eeb thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng, r\u1ed3i t\u1eeb c\u00e1c h\u1ec7 s\u1ed1 n\u00e0y \u00e1p d\u1ee5ng v\u00e0o c\u00e1c c\u00f4ng th\u1ee9c tr\u00ean \u0111\u1ec3 t\u00ednh ra k\u1ebft qu\u1ea3.</p>"},{"location":"algo/algebra/euclid/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh sau t\u00ecm m\u1ed9t nghi\u1ec7m nguy\u00ean c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh \\(ax + by = c\\), v\u1edbi \\(a, b \\neq 0\\):</p> <pre><code>const pair &lt;int, int&gt; INVALID_ROOT = {INT_MAX, INT_MAX};\n\n//H\u00e0m tr\u1ea3 v\u1ec1 \u01afCLN c\u1ee7a a v\u00e0 b, bi\u1ebfn \u0111\u1ed5i x, y tho\u1ea3 m\u00e3n ax + by = \\gcd(a, b)\nint extEuclid(int a, int b, int &amp;x, int&amp;y)\n{\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int q = a / b;\n    int r = a - b * q;\n    int x1 = 0, y1 = 0;\n    int d = extEuclid(b, r, x1, y1);\n    x = y1;\n    y = x1 - q * y1;\n    return d;\n}\n\n//T\u00ecm 1 nghi\u1ec7m nguy\u00ean c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh ax + by + c = 0\npair &lt;int, int&gt; diophantineSolve(int a, int b, int c)\n{\n    int x = 0, y = 0;\n    int d = extEuclid(a, b, x, y);\n    if (c % d != 0) return INVALID_ROOT;\n    x *= c / d;\n    y *= c / d;\n    if (a &lt; 0) x = -x;\n    if (b &lt; 0) y = -y;\n    return make_pair(x, y);\n}\n</code></pre>"},{"location":"algo/algebra/euclid/#mot-so-bai-toan-lien-quan","title":"M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n li\u00ean quan","text":""},{"location":"algo/algebra/euclid/#em-so-nghiem-cua-phuong-trinh-diophantus-trong-mot-khoang-cho-truoc","title":"\u0110\u1ebfm s\u1ed1 nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh Diophantus trong m\u1ed9t kho\u1ea3ng cho tr\u01b0\u1edbc","text":"<p>B\u00e0i t\u1eadp \u00e1p d\u1ee5ng tr\u1ef1c ti\u1ebfp: SGU 106</p> <p>T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i: \u0110\u1ebfm s\u1ed1 c\u1eb7p s\u1ed1 nguy\u00ean \\(x, y\\) tho\u1ea3 m\u00e3n: \\(\\begin{cases}     ax + by = c \\\\     x_1 \\leq x \\leq x_2\\\\     y_1 \\leq y \\leq y_2 \\end{cases}\\)</p> <p>C\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f3 \\(a = 0\\) ho\u1eb7c \\(b = 0\\) l\u00e0 t\u1ea7m th\u01b0\u1eddng. Ta ch\u1ec9 x\u00e9t \\(a \\neq 0\\) v\u00e0 \\(b \\neq 0\\).</p> <p>\u1ede ph\u1ea7n tr\u01b0\u1edbc, ta \u0111\u00e3 c\u00f3 c\u00f4ng th\u1ee9c nghi\u1ec7m t\u1ed5ng qu\u00e1t c\u1ee7a c\u00e1c ph\u01b0\u01a1ng tr\u00ecnh Diophantus t\u1eeb m\u1ed9t nghi\u1ec7m b\u1ea5t k\u1ef3:</p> <p>\\(\\begin{cases}     x = x_0 + k \\times \\frac{b}{d} \\\\     y = y_0 - k \\times \\frac{a}{d} \\end{cases} \\ (k \\in \\mathbb{Z})\\)</p> <p>D\u1ec5 th\u1ea5y c\u00e1c nghi\u1ec7m c\u1ee7a b\u00e0i to\u00e1n l\u00fac n\u00e0y ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o \\(k\\). B\u00e0i to\u00e1n tr\u1edf th\u00e0nh t\u00ecm \\(k\\) sao cho \\(x\\) v\u00e0 \\(y\\) tho\u1ea3 m\u00e3n c\u00e1c \u0111i\u1ec1u ki\u1ec7n \u0111\u00e3 cho. L\u00fac n\u00e0y ta ch\u1ec9 c\u1ea7n thay ng\u01b0\u1ee3c bi\u1ec3u th\u1ee9c c\u1ee7a \\(x\\) v\u00e0 \\(y\\) theo \\(k\\) v\u00e0o r\u1ed3i suy ng\u01b0\u1ee3c \\(k\\) ra l\u00e0 xong.</p> <p>N\u1ebfu b\u00e0i to\u00e1n y\u00eau c\u1ea7u li\u1ec7t k\u00ea chi ti\u1ebft c\u00e1c nghi\u1ec7m n\u00e0y, ta c\u0169ng ch\u1ec9 c\u1ea7n t\u0103ng \\(k\\) l\u00ean d\u1ea7n d\u1ea7n trong kho\u1ea3ng tho\u1ea3 m\u00e3n.</p>"},{"location":"algo/algebra/euclid/#tim-nghiem-co-tong-duong-nho-nhat","title":"T\u00ecm nghi\u1ec7m c\u00f3 t\u1ed5ng d\u01b0\u01a1ng nh\u1ecf nh\u1ea5t","text":"<p>B\u00e0i to\u00e1n n\u00e0y y\u00eau c\u1ea7u ch\u00fang ta t\u00ecm nghi\u1ec7m \\(x, y\\) c\u00f3 \\(x + y\\) d\u01b0\u01a1ng nh\u1ecf nh\u1ea5t.</p> <p>C\u1ed9ng t\u1eebng v\u1ebf c\u1ee7a bi\u1ec3u th\u1ee9c nghi\u1ec7m \\(x\\) v\u00e0 \\(y\\) theo \\(k\\) \u0111\u01b0\u1ee3c:</p> <p>\\(x + y = x_0 + y_0 + k\\times\\frac{b - a}{d}\\)</p> <p>D\u1ec5 th\u1ea5y nghi\u1ec7m nh\u1ecf nh\u1ea5t khi \\(k\\times\\frac{b - a}{d}\\) nh\u1ecf nh\u1ea5t. Tu\u1ef3 thu\u1ed9c v\u00e0o d\u1ea5u c\u1ee7a \\(b - a\\), ta ch\u1ecdn \\(k\\) sao cho gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ec3u th\u1ee9c l\u00e0 c\u1ef1c ti\u1ec3u.</p> <p>B\u00e0i t\u1eadp \u00e1p d\u1ee5ng: Euclid Problem. \u1ede b\u00e0i n\u00e0y \\(c = d\\).</p>"},{"location":"algo/algebra/euclid/#nghich-ao-modulo","title":"Ngh\u1ecbch \u0111\u1ea3o modulo","text":"<p>S\u1ed1 t\u1ef1 nhi\u00ean \\(\\gamma\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ngh\u1ecbch \u0111\u1ea3o modulo theo modulo \\(m\\) c\u1ee7a m\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean \\(a\\) n\u1ebfu \\(a\\gamma \\equiv 1 \\ (\\text{mod } m)\\). K\u00fd hi\u1ec7u l\u00e0 \\(a^{-1} \\ (\\text{mod } m)\\).</p> <p>V\u00ed d\u1ee5: \\(3 \\equiv 7^{-1} \\ (\\text{mod } 10)\\)</p> <p>Kh\u00f4ng ph\u1ea3i s\u1ed1 t\u1ef1 nhi\u00ean n\u00e0o c\u0169ng c\u00f3 ngh\u1ecbch \u0111\u1ea3o modulo; ch\u1eb3ng h\u1ea1n, kh\u00f4ng c\u00f3 ngh\u1ecbch \u0111\u1ea3o modulo \\(4\\) c\u1ee7a \\(2\\).</p> <p>X\u00e9t ph\u01b0\u01a1ng tr\u00ecnh Diophantus \\(ax + by = 1\\). Khi ph\u01b0\u01a1ng tr\u00ecnh c\u00f3 nghi\u1ec7m \\((x_0, y_0)\\), ta c\u00f3:</p> <p>\\(ax_0 + by_0 = 1\\\\ \\Rightarrow ax_0 = 1 - by_0\\\\ \\Rightarrow ax_0 \\equiv 1 \\ (\\text{mod } b)\\\\ \\Rightarrow x_0 \\equiv a^{-1} \\ (\\text{mod } b)\\)</p> <p>Ta th\u1ea5y nghi\u1ec7m \\(x\\) c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh l\u00e0 ngh\u1ecbch \u0111\u1ea3o modulo \\(b\\) c\u1ee7a \\(a\\). Qua \u0111\u00f3 ta c\u0169ng th\u1ea5y, ngh\u1ecbch \u0111\u1ea3o modulo ch\u1ec9 t\u1ed3n t\u1ea1i khi v\u00e0 ch\u1ec9 khi \\((a, b) = 1\\).</p> <p>Ngh\u1ecbch \u0111\u1ea3o modulo th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong nh\u1eefng b\u00e0i to\u00e1n chia s\u1ed1 l\u1edbn l\u1ea5y ph\u1ea7n d\u01b0, \u0111i\u1ec3n h\u00ecnh l\u00e0 c\u00e1c b\u00e0i to\u00e1n t\u00ednh t\u1ed5 h\u1ee3p. Ch\u1eb3ng h\u1ea1n:</p> \\[\\text{C}^k_n = \\frac{n!}{k!\\times (n - k)!} \\equiv n!\\times (k!\\times (n - k)!)^{-1} \\pmod M\\] <p>(L\u01b0u \u00fd r\u1eb1ng c\u00f4ng th\u1ee9c tr\u00ean ch\u1ec9 \u0111\u00fang n\u1ebfu \\(k!\\times (n - k)!\\) nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(M\\) v\u1edbi m\u1ecdi \\(k, n\\) tho\u1ea3 m\u00e3n d\u1eef li\u1ec7u c\u1ee7a \u0111\u1ec1)</p> <p>Khi modulo \\(M\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1, \u0111\u1ec3 ti\u1ec7n l\u1ee3i ta th\u01b0\u1eddng d\u00f9ng \u0111\u1ecbnh l\u00fd Fermat nh\u1ecf \u0111\u1ec3 suy ra \\(x^{-1} \\equiv x^{M - 2} \\ (\\text{mod } M)\\) r\u1ed3i d\u00f9ng lu\u1ef9 th\u1eeba nhanh \u0111\u1ec3 t\u00ednh. C\u00f2n n\u1ebfu \\(M\\) kh\u00f4ng nguy\u00ean t\u1ed1, ta l\u1ea1i \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng \u0111\u1ec3 t\u00ecm ngh\u1ecbch \u0111\u1ea3o modulo qua ph\u01b0\u01a1ng tr\u00ecnh \\(a\\gamma + My = 1\\).</p>"},{"location":"algo/algebra/euclid/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>UVA - Gift Dilemma</li> <li>Codeforces - Ebony and Ivory</li> <li>Codeforces - Beautiful Numbers</li> <li>Codechef - Get AC in one go</li> <li>VNOJ - VM 08 B\u00e0i 05 - S\u1ed1 nguy\u00ean</li> </ul>"},{"location":"algo/algebra/euclid/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>M\u1ed9t lo\u1ea1t c\u00e1c b\u00e0i vi\u1ebft trong m\u1ee5c Fundamentals, CP Algorithms</li> <li>Wikipedia (ph\u1ea7n ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd Lam\u00e9 v\u00e0 b\u1ed5 \u0111\u1ec1 B\u00e9zout)</li> <li>VNOI Wiki, Ngh\u1ecbch \u0111\u1ea3o Modulo (b\u00e0i vi\u1ebft c\u0169)</li> <li>Post tr\u00ean VNOI Forum c\u1ee7a anh T\u0103ng Kh\u1ea3i H\u1ea1nh</li> <li>Slide v\u1ec1 ch\u1ee7 \u0111\u1ec1 n\u00e0y c\u1ee7a th\u1ea7y L\u00ea Minh Ho\u00e0ng (ch\u01b0a t\u00ecm \u0111\u01b0\u1ee3c ngu\u1ed3n)</li> </ul>"},{"location":"algo/algebra/fft-test/","title":"Bi\u1ebfn \u0111\u1ed5i Fourier nhanh - Fast Fourier transform","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: - Nguy\u1ec5n Ho\u00e0ng V\u0169 - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN</p> <p>Reviewer: - Tr\u1ea7n Xu\u00e2n B\u00e1ch - \u0110\u1ea1i h\u1ecdc Chicago - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p> <p>C\u00e1c b\u00e0i to\u00e1n t\u1ed5 h\u1ee3p ng\u00e0y c\u00e0ng xu\u1ea5t hi\u1ec7n nhi\u1ec1u trong c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh thi \u0111\u1ea5u v\u00e0 th\u01b0\u1eddng xuy\u00ean n\u1eafm gi\u1eef c\u00e1c v\u1ecb tr\u00ed kh\u00f3 nh\u1ea5t. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u v\u1ec1 m\u1ed9t c\u00f4ng c\u1ee5 quan tr\u1ecdng \u0111\u1ec3 gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n t\u1ed5 h\u1ee3p, \u0111\u00f3 l\u00e0 Bi\u1ebfn \u0111\u1ed5i Fourier nhanh - Fast Fourier transform, hay c\u00f2n \u0111\u01b0\u1ee3c vi\u1ebft t\u1eaft l\u00e0 FFT.</p>"},{"location":"algo/algebra/fft-test/#1-cac-kien-thuc-can-biet","title":"1. C\u00e1c ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft","text":""},{"location":"algo/algebra/fft-test/#11-so-phuc-complex-number","title":"1.1. S\u1ed1 ph\u1ee9c (Complex number)","text":""},{"location":"algo/algebra/fft-test/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>S\u1ed1 ph\u1ee9c l\u00e0 c\u00e1c s\u1ed1 c\u00f3 d\u1ea1ng \\(z=a+bi\\) trong \u0111\u00f3 \\(a,b\\in \\mathbb{R}\\) v\u00e0 \\(i^2=-1\\). S\u1ed1 \\(i\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u01a1n v\u1ecb \u1ea3o. T\u1eadp h\u1ee3p t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 ph\u1ee9c \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(\\mathbb{C}\\).</p> <p>Ta c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n s\u1ed1 ph\u1ee9c \\(z\\) tr\u00ean m\u1eb7t ph\u1eb3ng to\u1ea1 \u0111\u1ed9 b\u1eb1ng vect\u01a1 \\((a,b)\\). - Ph\u1ea7n th\u1ef1c (Real) v\u00e0 ph\u1ea7n \u1ea3o (Imaginary): \\(Re(z)=a,Im(z)=b\\). - S\u1ed1 ph\u1ee9c li\u00ean h\u1ee3p (Conjugate): \\(\\overline{z}=a-bi\\). - M\u00f4\u0111un (Modulus): \\(|z|=r=\\sqrt{a^2+b^2}\\). - Acgumen (Argument): G\u00f3c c\u00f3 h\u01b0\u1edbng t\u1eeb tr\u1ee5c th\u1ef1c \\(Ox\\) \u0111\u1ebfn vect\u01a1 \\((a,b)\\), t\u1ee9c g\u00f3c \\(\\varphi\\) trong h\u00ecnh d\u01b0\u1edbi \u0111\u00e2y. - D\u1ea1ng l\u01b0\u1ee3ng gi\u00e1c (Polar form): \\(z=r(\\cos\\varphi + i\\sin\\varphi)=re^{i\\varphi}=r\\exp(i\\varphi)\\).</p> <p>V\u1ec1 bi\u1ec3u di\u1ec5n \\(z=r\\exp(i\\varphi)\\), c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u \u1edf C\u00f4ng th\u1ee9c Euler (Wikipedia). </p>      H\u00ecnh 1. Bi\u1ec3u di\u1ec5n s\u1ed1 ph\u1ee9c tr\u00ean m\u1eb7t ph\u1eb3ng"},{"location":"algo/algebra/fft-test/#cac-phep-toan","title":"C\u00e1c ph\u00e9p to\u00e1n","text":"<p>X\u00e9t hai s\u1ed1 ph\u1ee9c \\(z_1=a_1+b_1i=r_1\\exp(i\\varphi_1)\\) v\u00e0 \\(z_2=a_2+b_2i=r_2\\exp(i\\varphi_2)\\):</p> <ul> <li>Ph\u00e9p c\u1ed9ng: \\(z_1+z_2=(a_1+a_2)+(b_1+b_2)i\\).</li> <li>Ph\u00e9p tr\u1eeb: \\(z_1-z_2=(a_1-a_2)+(b_1-b_2)i\\).</li> <li>Ph\u00e9p nh\u00e2n: \\(z_1z_2=(a_1a_2-b_1b_2)+(a_1b_2+a_2b_1)i=r_1r_2\\exp(i(\\varphi_1+\\varphi_2))\\).</li> <li>Ph\u00e9p chia: \\(\\dfrac{z_1}{z_2}=\\dfrac{z_1\\overline{z_2}}{z_2\\overline{z_2}}=\\dfrac{z_1\\overline{z_2}}{|z_2|^2}\\).</li> </ul> <p>Ph\u00e9p c\u1ed9ng (tr\u1eeb) hai s\u1ed1 ph\u1ee9c t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi ph\u00e9p c\u1ed9ng (tr\u1eeb) hai vect\u01a1 bi\u1ec3u di\u1ec5n ch\u00fang. Khi nh\u00e2n hai s\u1ed1 ph\u1ee9c, ta nh\u00e2n m\u00f4\u0111un c\u1ee7a ch\u00fang v\u00e0 c\u1ed9ng acgumen c\u1ee7a ch\u00fang.</p>"},{"location":"algo/algebra/fft-test/#can-on-vi-root-of-unity","title":"C\u0103n \u0111\u01a1n v\u1ecb (Root of unity)","text":"<p>X\u00e9t m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(n\\):</p> <ul> <li>C\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\) l\u00e0 c\u00e1c s\u1ed1 ph\u1ee9c \\(z\\) tho\u1ea3 m\u00e3n \\(z^n=1\\).</li> <li>C\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t cho c\u00e1c c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\): \\(z_{n,i}=\\exp(\\frac{2k\\pi i}{n})\\) v\u1edbi \\(k\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(n-1\\). K\u00ed hi\u1ec7u \\(\\omega_n=z_{n,1}\\) th\u00ec ta c\u00f2n c\u00f3 th\u1ec3 vi\u1ebft d\u01b0\u1edbi d\u1ea1ng \\(\\omega_n^0,\\omega_n^1,\\ldots,\\omega_n^{n-1}\\).</li> <li>C\u00e1c c\u0103n \u0111\u01a1n v\u1ecb n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng tr\u00f2n \u0111\u01a1n v\u1ecb t\u1ea1o th\u00e0nh m\u1ed9t \u0111a gi\u00e1c \u0111\u1ec1u \\(n\\) \u0111\u1ec9nh.</li> </ul>      H\u00ecnh 2. Bi\u1ec3u di\u1ec5n c\u00e1c c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p 8 tr\u00ean m\u1eb7t ph\u1eb3ng"},{"location":"algo/algebra/fft-test/#mot-so-tinh-chat-cua-can-on-vi","title":"M\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t c\u1ee7a c\u0103n \u0111\u01a1n v\u1ecb","text":"<ul> <li>\\(\\omega_n^j=\\omega_n^{j\\bmod n}\\).</li> <li>V\u1edbi \\(n\\) ch\u1eb5n, \\(\\omega_n^{n/2}=-1\\), t\u1eeb \u0111\u00e2y suy ra \\(\\omega_n^{j+n/2}=-\\omega_n^j\\).</li> <li>V\u1edbi \\(n\\) ch\u1eb5n, \\(\\omega_n^2=\\omega_{n/2}\\).</li> </ul>"},{"location":"algo/algebra/fft-test/#12-ma-tran","title":"1.2. Ma tr\u1eadn","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft Nh\u00e2n ma tr\u1eadn (VNOI).</p>"},{"location":"algo/algebra/fft-test/#2-thuat-toan-fft","title":"2. Thu\u1eadt to\u00e1n FFT","text":""},{"location":"algo/algebra/fft-test/#21-bai-toan","title":"2.1. B\u00e0i to\u00e1n","text":"<p>Cho hai d\u00e3y \\(a=(a_0,a_1,\\ldots,a_{n-1})\\) v\u00e0 \\(b=(b_0,b_1,\\ldots,b_{n-1})\\). T\u00ednh d\u00e3y \\(c=(c_0,c_1,\\ldots,c_{2n-2})\\) \u0111\u01b0\u1ee3c cho b\u1edfi c\u00f4ng th\u1ee9c: \\(c_k=\\displaystyle\\sum a_jb_{k-j}\\) v\u1edbi \\(k\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(2n-2\\).</p> <p>D\u00e3y \\(c\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 t\u00edch ch\u1eadp (convolution) c\u1ee7a hai d\u00e3y \\(a\\) v\u00e0 \\(b\\).</p>"},{"location":"algo/algebra/fft-test/#22-y-tuong","title":"2.2. \u00dd t\u01b0\u1edfng","text":"<p>Bi\u1ec3u th\u1ee9c c\u1ee7a d\u00e3y \\(c\\) ph\u00eda tr\u00ean g\u1ee3i l\u1ea1i cho ch\u00fang ta v\u1ec1 ph\u00e9p nh\u00e2n \u0111a th\u1ee9c. C\u1ee5 th\u1ec3, \u0111\u1ecbnh ngh\u0129a:</p> \\[\\begin{align*} A(z)&amp;=a_0 z^0 + a_1 z^1 + \\ldots + a_{n-1} z^{n-1}\\\\ B(z)&amp;=b_0 z^0 + b_1 z^1 + \\ldots + b_{n-1} z^{n-1} \\end{align*}\\] <p>th\u00ec \\(c\\) ch\u00ednh l\u00e0 d\u00e3y h\u1ec7 s\u1ed1 c\u1ee7a \u0111a th\u1ee9c \\(C(z)=A(z)\\cdot B(z)\\).</p> <p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng vi\u1ec7c t\u00ednh \u0111a th\u1ee9c \\(C\\) theo \u0111\u1ecbnh ngh\u0129a s\u1ebd c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \\(\\mathcal{O}(n^2)\\), kh\u00f4ng \u0111\u1ee7 nhanh khi \u0111\u1ed9 d\u00e0i \\(n\\) kh\u00e1 l\u1edbn, ta c\u1ea7n m\u1ed9t h\u01b0\u1edbng ti\u1ebfp c\u1eadn kh\u00e1c. Gi\u1ea3 s\u1eed ta t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a \\(A\\) v\u00e0 \\(B\\) t\u1ea1i \\(m\\) \u0111i\u1ec3m kh\u00e1c nhau:</p> \\[\\begin{align*} A(z_0),A(z_1),\\ldots,A({z_{m-1})}\\\\ B(z_0),B(z_1),\\ldots,B({z_{m-1})} \\end{align*}\\] <p>th\u00ec gi\u00e1 tr\u1ecb c\u1ee7a \\(C\\) t\u1ea1i c\u00e1c \u0111i\u1ec3m t\u01b0\u01a1ng \u1ee9ng l\u00e0: \\(C(z_j)=A(z_j)\\cdot B(z_j)\\).</p> <p>Ta c\u00f3 \u0111\u1ecbnh l\u00fd quan tr\u1ecdng sau \u0111\u00e2y:</p> <p>\u0110\u1ecbnh l\u00fd n\u1ed9i suy \u0111a th\u1ee9c. Cho \\(m\\) c\u1eb7p s\u1ed1 ph\u1ee9c \\((u_0,v_0),(u_1,v_1),\\ldots,(u_{m-1},v_{m-1})\\) tho\u1ea3 m\u00e3n \\(z_i\\ne z_j\\) v\u1edbi m\u1ecdi \\(0\\le i&lt;j&lt;m\\), t\u1ed3n t\u1ea1i duy nh\u1ea5t m\u1ed9t \u0111a th\u1ee9c \\(P\\) c\u00f3 b\u1eadc kh\u00f4ng qu\u00e1 \\(m-1\\) tho\u1ea3 m\u00e3n \\(P(u_i)=v_i\\) v\u1edbi m\u1ecdi \\(0\\le i&lt;m\\).</p> <p>V\u00ed d\u1ee5:</p> <ul> <li>C\u00f3 duy nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng (\u0111a th\u1ee9c b\u1eadc \\(1\\)) \u0111i qua hai \u0111i\u1ec3m b\u1ea5t k\u00ec tr\u00ean m\u1eb7t ph\u1eb3ng.</li> <li>C\u00f3 duy nh\u1ea5t m\u1ed9t parabol (\u0111a th\u1ee9c b\u1eadc \\(2\\)) \u0111i qua ba \u0111i\u1ec3m b\u1ea5t k\u00ec tr\u00ean m\u1eb7t ph\u1eb3ng.</li> </ul> <p>\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n FFT l\u00e0 ch\u1ecdn ra m\u1ed9t t\u1eadp \u0111i\u1ec3m \\(z_0,z_1,\\ldots,z_{m-1}\\) sao cho ta c\u00f3 th\u1ec3 t\u00ednh nhanh gi\u00e1 tr\u1ecb c\u1ee7a \u0111a th\u1ee9c \\(A\\) v\u00e0 \\(B\\) tr\u00ean \u0111\u00f3, \u0111\u1ed3ng th\u1eddi c\u00f3 th\u1ec3 kh\u00f4i ph\u1ee5c \u0111\u01b0\u1ee3c \u0111a th\u1ee9c \\(C\\) d\u1ef1a tr\u00ean \\(C(z_0),C(z_1),\\ldots,C(z_{m-1})\\).</p>"},{"location":"algo/algebra/fft-test/#23-thuat-toan","title":"2.3. Thu\u1eadt to\u00e1n","text":""},{"location":"algo/algebra/fft-test/#bien-oi-xuoi","title":"Bi\u1ebfn \u0111\u1ed5i xu\u00f4i","text":"<p>Ta c\u00f3 m\u1ed9t \u0111a th\u1ee9c \\(A(z)=a_0z^0 + a_1z^1+\\ldots+a_{n-1}z^{n-1}\\). Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(n\\) l\u00e0 m\u1ed9t lu\u1ef9 th\u1eeba c\u1ee7a \\(2\\) hay \\(n=2^k\\) v\u1edbi \\(k\\in \\mathbb{N}\\). N\u1ebfu \\(n\\) kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t l\u0169y th\u1eeba c\u1ee7a \\(2\\), ta th\u00eam c\u00e1c s\u1ed1 h\u1ea1ng \\(a_i z^i\\) b\u1ecb thi\u1ebfu v\u00e0 cho c\u00e1c h\u1ec7 s\u1ed1 \\(a_i\\) b\u1eb1ng \\(0\\). </p> <p>T\u1eadp s\u1ed1 m\u00e0 FFT ch\u1ecdn \u0111\u1ec3 t\u00ednh l\u00e0 t\u1eadp c\u00e1c c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\), t\u1ee9c \\(\\{\\omega_n^0,\\omega_n^1,\\ldots,\\omega_n^{n-1}\\}\\) (nh\u1eafc l\u1ea1i \\(\\omega_n=\\exp(\\frac{2\\pi i}{n})\\)).</p> <p>\u0110\u1ecbnh ngh\u0129a. Cho m\u1ed9t d\u00e3y \\(a_0,a_1,\\ldots,a_{n-1}\\), Bi\u1ebfn \u0111\u1ed5i Fourier nhanh - Fast Fourier Transform - FFT l\u00e0 b\u1ea5t k\u00ec thu\u1eadt to\u00e1n n\u00e0o t\u00ednh d\u00e3y \\(A(\\omega_n^0),A(\\omega_n^1),\\ldots,A(\\omega_n^{n-1})\\) trong th\u1eddi gian \\(O(n\\log n)\\). Ph\u00e9p bi\u1ebfn \u0111\u1ed5i n\u00e0y b\u1ea3n th\u00e2n n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Bi\u1ebfn \u0111\u1ed5i Fourier r\u1eddi r\u1ea1c - Discrete Fourier Transform - DFT. \\(\\(\\text{DFT}(a_0,a_1,\\ldots,a_{n-1})=(A(\\omega_n^0),A(\\omega_n^1),\\ldots,A(\\omega_n^{n-1}))\\)\\)</p> <p>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u v\u1ec1 m\u1ed9t thu\u1eadt to\u00e1n FFT th\u00f4ng d\u1ee5ng l\u00e0 thu\u1eadt to\u00e1n Cooley-Tukey.</p> <p>Ta s\u1ebd bi\u1ec3u di\u1ec5n b\u00e0i to\u00e1n d\u01b0\u1edbi d\u1ea1ng ma tr\u1eadn:</p> \\[\\left[ \\begin{array}{@{}c@{}} A(\\omega^0)\\\\A(\\omega^1)\\\\ \\vdots \\\\ A(\\omega^{n-1}) \\end{array} \\right ]= \\left [\\begin{array}{@{}cccccccc@{}} \\omega^0 &amp; \\omega^0 &amp; \\omega^0 &amp; \\ldots &amp; \\omega^0 \\\\ \\omega^0 &amp; \\omega^1 &amp; \\omega^2 &amp; \\ldots &amp; \\omega^{n-1} \\\\ \\omega^0 &amp; \\omega^2 &amp; \\omega^4 &amp; \\ldots &amp; \\omega^{2(n-1)} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\omega^0 &amp; \\omega^{n-1} &amp; \\omega^{2(n-1)} &amp; \\ldots &amp; \\omega^{(n-1)(n-1)} \\end{array}\\right ] \\left [\\begin{array}{@{}c@{}} a_0\\\\ a_1\\\\ a_2\\\\ \\vdots\\\\ a_{n-1} \\end{array}\\right ]\\] <p>Tr\u01b0\u1edbc khi \u0111i v\u00e0o tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t, ta s\u1ebd xem x\u00e9t m\u1ed9t v\u00ed d\u1ee5 v\u1edbi \\(n=8\\):</p> \\[ \\left [\\begin{array}{@{}cccccccc@{}} \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^0} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^1} &amp; \\color{red}{\\omega^2} &amp; \\color{blue}{\\omega^3} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^5} &amp; \\color{red}{\\omega^6} &amp; \\color{blue}{\\omega^7} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^2} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^6} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^2} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^6} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^3} &amp; \\color{red}{\\omega^6} &amp; \\color{blue}{\\omega^1} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^7} &amp; \\color{red}{\\omega^2} &amp; \\color{blue}{\\omega^5} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^4} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^4} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^4} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^4} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^5} &amp; \\color{red}{\\omega^2} &amp; \\color{blue}{\\omega^7} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^1} &amp; \\color{red}{\\omega^6} &amp; \\color{blue}{\\omega^3} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^6} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^2} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^6} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^2} \\\\ \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^7} &amp; \\color{red}{\\omega^6} &amp; \\color{blue}{\\omega^5} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^3} &amp; \\color{red}{\\omega^2} &amp; \\color{blue}{\\omega^1} \\\\ \\end{array}\\right ] \\left [\\begin{array}{@{}c@{}} \\color{red}{a_0} \\\\ \\color{blue}{a_1} \\\\ \\color{red}{a_2} \\\\ \\color{blue}{a_3} \\\\ \\color{red}{a_4} \\\\ \\color{blue}{a_5} \\\\ \\color{red}{a_6} \\\\ \\color{blue}{a_7} \\end{array}\\right ] \\] <p>C\u00e1c s\u1ed1 m\u0169 tr\u00ean b\u1ea3ng \u0111\u00e3 \u0111\u01b0\u1ee3c l\u1ea5y d\u01b0 cho \\(8\\). Ta s\u1ebd \u0111\u01b0a c\u00e1c c\u1ed9t m\u00e0u \u0111\u1ecf (ch\u1ec9 s\u1ed1 ch\u1eb5n) v\u1ec1 b\u00ean tr\u00e1i, c\u00e1c c\u1ed9t m\u00e0u xanh (ch\u1ec9 s\u1ed1 l\u1ebb) v\u1ec1 b\u00ean ph\u1ea3i v\u00e0 chia ma tr\u1eadn th\u00e0nh b\u1ed1n ma tr\u1eadn con nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y. Ch\u00fa \u00fd r\u1eb1ng vi\u1ec7c n\u00e0y c\u0169ng thay \u0111\u1ed5i th\u1ee9 t\u1ef1 c\u1ee7a vect\u01a1 h\u1ec7 s\u1ed1.</p> \\[ \\left [ \\begin{array}{@{}cccc|cccc@{}} \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{blue}{\\omega^0} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^2} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^6} &amp; \\color{blue}{\\omega^1} &amp; \\color{blue}{\\omega^3} &amp; \\color{blue}{\\omega^5} &amp; \\color{blue}{\\omega^7} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^2} &amp; \\color{blue}{\\omega^6} &amp; \\color{blue}{\\omega^2} &amp; \\color{blue}{\\omega^6} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^6} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^2} &amp; \\color{blue}{\\omega^3} &amp; \\color{blue}{\\omega^1} &amp; \\color{blue}{\\omega^7} &amp; \\color{blue}{\\omega^5} \\\\ \\hline \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{blue}{\\omega^4} &amp; \\color{blue}{\\omega^4} &amp; \\color{blue}{\\omega^4} &amp; \\color{blue}{\\omega^4} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^2} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^6} &amp; \\color{blue}{\\omega^5} &amp; \\color{blue}{\\omega^7} &amp; \\color{blue}{\\omega^1} &amp; \\color{blue}{\\omega^3} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^4} &amp; \\color{blue}{\\omega^6} &amp; \\color{blue}{\\omega^2} &amp; \\color{blue}{\\omega^6} &amp; \\color{blue}{\\omega^2} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^6} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^2} &amp; \\color{blue}{\\omega^7} &amp; \\color{blue}{\\omega^5} &amp; \\color{blue}{\\omega^3} &amp; \\color{blue}{\\omega^1} \\\\ \\end{array} \\right ] \\left [\\begin{array}{@{}c@{}} \\color{red}{a_0} \\\\ \\color{red}{a_2} \\\\ \\color{red}{a_4} \\\\ \\color{red}{a_6} \\\\ \\hline  \\color{blue}{a_1} \\\\ \\color{blue}{a_3} \\\\ \\color{blue}{a_5} \\\\ \\color{blue}{a_7} \\end{array}\\right ] \\] <p>Nh\u1eadn th\u1ea5y r\u1eb1ng c\u00e1c h\u1ec7 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng \u1edf hai ma tr\u1eadn con b\u00ean tr\u00e1i b\u1eb1ng nhau v\u00e0 c\u00e1c h\u1ec7 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng \u1edf hai ma tr\u1eadn con b\u00ean ph\u1ea3i tr\u00e1i d\u1ea5u, do t\u00ednh ch\u1ea5t \\(\\omega^{n/2}=-1\\).</p> <p>V\u1eady bi\u1ec3u th\u1ee9c c\u1ea7n t\u00ednh c\u00f3 d\u1ea1ng:</p> \\[ \\left [ \\begin{array}{@{}cc@{}} \\color{red}{A} &amp; \\color{blue}{B} \\\\ \\color{red}{A} &amp; \\color{blue}{-B} \\\\ \\end{array} \\right ] \\left [ \\begin{array}{@{}c@{}} \\color{red}{X} \\\\ \\color{blue}{Y} \\\\ \\end{array} \\right] = \\left[ \\begin{array}{@{}c@{}} \\color{red}{AX}+\\color{blue}{BY} \\\\ \\color{red}{AX}-\\color{blue}{BY} \\end{array} \\right] \\] <p>\u0110\u1ec3 \u00fd r\u1eb1ng:</p> \\[ \\color{blue}{B}= \\left[ \\begin{array}{@{}cccc@{}} \\color{blue}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{blue}{\\omega^0} &amp; \\color{blue}{\\omega^0} \\\\ \\color{blue}{\\omega^1} &amp; \\color{blue}{\\omega^3} &amp; \\color{blue}{\\omega^5} &amp; \\color{blue}{\\omega^7} \\\\ \\color{blue}{\\omega^2} &amp; \\color{blue}{\\omega^6} &amp; \\color{blue}{\\omega^2} &amp; \\color{blue}{\\omega^6} \\\\ \\color{blue}{\\omega^3} &amp; \\color{blue}{\\omega^1} &amp; \\color{blue}{\\omega^7} &amp; \\color{blue}{\\omega^5} \\\\ \\end{array} \\right ] = \\left [ \\begin{array}{@{}cccc@{}} \\omega^0 &amp; &amp; &amp; \\\\ &amp; \\omega^1 &amp; &amp; \\\\ &amp; &amp; \\omega^2 &amp; \\\\ &amp; &amp; &amp; \\omega^3 \\\\ \\end{array} \\right ] \\left [ \\begin{array}{@{}cccc@{}} \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^0} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^2} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^6} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^4} \\\\ \\color{red}{\\omega^0} &amp; \\color{red}{\\omega^6} &amp; \\color{red}{\\omega^4} &amp; \\color{red}{\\omega^2} \\\\ \\end{array} \\right ]  \\] <p>V\u1eady ta ch\u1ec9 c\u1ea7n t\u00ednh \\(\\color{red}{AX}\\) v\u00e0 \\(\\color{red}{A}\\color{blue}{Y}\\) l\u00e0 \u0111\u1ee7 \u0111\u1ec3 t\u00ednh k\u1ebft qu\u1ea3. M\u1eb7t kh\u00e1c, c\u00f3 th\u1ec3 th\u1ea5y t\u00ednh \\(\\color{red}{AX}\\) v\u00e0 \\(\\color{red}{A}\\color{blue}{Y}\\) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi t\u00ednh \\(\\text{DFT}(a_0,a_2,a_4,a_6)\\) v\u00e0 \\(\\text{DFT}(a_1,a_3,a_5,a_7)\\).</p> <p>X\u00e9t tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t, v\u1edbi \\(0\\le i&lt;\\frac{n}{2}\\), ta c\u00f3 (ch\u00fa \u00fd \\(i\\) \u1edf \u0111\u00e2y l\u00e0 ch\u1ec9 s\u1ed1, kh\u00f4ng ph\u1ea3i \u0111\u01a1n v\u1ecb \u1ea3o):</p> \\[\\begin{align} A(\\omega_n^i)&amp;=\\sum_ja_j\\omega_n^{ij}=\\sum_k a_{2k}\\omega_n^{2k i}+\\sum_k a_{2k+1}\\omega_n^{(2k+1)i}\\\\&amp;=\\sum_k a_{2k}(\\omega_n^2)^{ik}+\\omega_n^i\\sum_k a_{2k+1}(\\omega_n^2)^{ik}\\\\ &amp;= \\sum_k a_{2k}\\omega_{n/2}^{ik}+\\omega_n^i\\sum_k a_{2k+1}\\omega_{n/2}^{ik} \\end{align}\\] \\[\\begin{align} A(\\omega_n^{i+n/2})&amp;=\\sum_ja_j\\omega_n^{(i+n/2)j}=\\sum_k a_{2k}\\omega_n^{2k(i+n/2)}+\\sum_k a_{2k+1}\\omega_n^{(2k+1)(i+n/2)}\\\\ &amp;=\\sum_k a_{2k}\\omega_n^{2ki}+\\sum_k a_{2k+1}\\omega_n^{2ki+i+n/2}\\\\ &amp;=\\sum_k a_{2k}(\\omega_n^2)^{ik}-\\omega_n^i\\sum_k a_{2k+1}(\\omega_n^2)^{ik}\\\\ &amp;= \\sum_k a_{2k}\\omega_{n/2}^{ik}-\\omega_{n}^i\\sum_k a_{2k+1}\\omega_{n/2}^{ik} \\end{align}\\] <p>N\u1ebfu coi \\(\\text{DFT}(a_0,a_2,\\ldots,a_{n/2-2})=A_0\\) v\u00e0 \\(\\text{DFT}(a_1,a_3,\\ldots,a_{n/2-1})=A_1\\) th\u00ec hai bi\u1ec3u th\u1ee9c tr\u00ean c\u00f3 th\u1ec3 vi\u1ebft l\u1ea1i th\u00e0nh:</p> \\[\\begin{align} A(\\omega_n^i)&amp;=A_0(\\omega_{n/2}^i)+\\omega_n^iA_1(\\omega_{n/2}^i)\\\\ A(\\omega_n^{i+n/2})&amp;=A_0(\\omega_{n/2}^i)-\\omega_n^iA_1(\\omega_{n/2}^i) \\end{align}\\] <p>V\u1eady ta c\u1ea7n t\u00ednh \\(A_0\\) v\u00e0 \\(A_1\\) l\u00e0 hai b\u00e0i to\u00e1n v\u1edbi k\u00edch th\u01b0\u1edbc gi\u1ea3m \u0111i m\u1ed9t n\u1eeda.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p. Thu\u1eadt to\u00e1n FFT l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n chia \u0111\u1ec3 tr\u1ecb n\u00ean ta d\u1ec5 th\u1ea5y n\u00f3 c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n\\log_2n)\\).</p>"},{"location":"algo/algebra/fft-test/#bien-oi-nguoc","title":"Bi\u1ebfn \u0111\u1ed5i ng\u01b0\u1ee3c","text":"<p>B\u1ed5 \u0111\u1ec1. \\(\\text{DFT}(\\text{DFT}(a_0,a_1,\\ldots,a_{n-2},a_{n-1}))=(na_0,na_{n-1},na_{n-2}\\ldots,na_1)\\).</p> <p>Ch\u1ee9ng minh: \u0110\u1eb7t \\((b_0,b_1,\\ldots,b_{n-1})=\\text{DFT}(a_0,a_1,\\ldots,a_{n-1})\\) v\u00e0 \\((c_0,c_1,\\ldots,c_{n-1})=\\text{DFT}(b_0,b_1,\\ldots,b_{n-1})\\).</p> <p>Ta c\u00f3:</p> \\[c_l=\\sum_k c_k\\omega^{kl}=\\sum_k \\omega^{kl}\\sum_ja_j\\omega^{jk}=\\sum_ja_j\\sum_k\\omega^{k(j+l)}\\] <p>X\u00e9t \\(j+l\\not \\equiv 0\\pmod n\\), ta c\u00f3:</p> \\[\\sum_k\\omega^{k(j+l)}=\\frac{(\\omega^{j+l})^n-1}{\\omega^{j+l}-1}=0\\] <p>b\u1edfi \\(w^{j+l}\\) l\u00e0 m\u1ed9t c\u0103n \u0111\u01a1n v\u1ecb.</p> <p>T\u1eeb \u0111\u00e2y ta suy ra \\(c_l=na_j\\) v\u1edbi \\(j+l\\equiv 0\\pmod n\\).</p> <p>Ngo\u00e0i ra, n\u1ebfu ta s\u1eed d\u1ee5ng \\(\\omega^{-1}=\\exp(\\frac{-2\\pi i}{n})\\) thay cho \\(\\omega\\) \u1edf l\u1ea7n \\(\\text{DFT}\\) th\u1ee9 hai, k\u1ebft qu\u1ea3 ta nh\u1eadn \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 \\((na_0,na_1,\\ldots,na_{n-1})\\) (b\u1ea1n \u0111\u1ecdc t\u1ef1 ch\u1ee9ng minh).</p> <p>Ta s\u1ebd c\u00e0i \u0111\u1eb7t chung c\u1ea3 bi\u1ebfn \u0111\u1ed5i xu\u00f4i v\u00e0 ng\u01b0\u1ee3c:</p> <pre><code>using cd = complex&lt;long double&gt;;\n\nvoid fft(vector&lt;cd&gt; &amp;a, bool invert) {\n    /// invert = true t\u01b0\u01a1ng \u1ee9ng v\u1edbi bi\u1ebfn \u0111\u1ed5i ng\u01b0\u1ee3c\n    int n = a.size();\n    if (n == 1) return;\n    vector&lt;cd&gt; a0, a1;\n    for (int i = 0; i &lt; n / 2; i++) {\n        a0.push_back(a[2 * i]);\n        a1.push_back(a[2 * i + 1]);\n    }\n    fft(a0, invert); fft(a1, invert);\n    cd w = 1, wn = polar(1.0L, acos(-1.0L) / n * (invert ? -2 : 2));\n    /// polar(r, t) = r * exp(it) v\u00e0 acos(-1.0L) = pi\n    /// thay wn = wn^-1 \u1edf bi\u1ebfn \u0111\u1ed5i ng\u01b0\u1ee3c\n    for (int i = 0; i &lt; n / 2; i++) {\n        a[i] = a0[i] + w * a1[i];\n        a[i + n / 2] = a0[i] - w * a1[i];\n        /// Ta s\u1ebd chia 2 \u1edf m\u1ed7i t\u1ea7ng \u0111\u1ec7 quy thay cho vi\u1ec7c chia n \u1edf cu\u1ed1i\n        if (invert) {\n            a[i] /= 2; a[i + n / 2] /= 2;\n        }\n        w *= wn;\n    }\n}\n</code></pre> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00e0i \u0111\u1eb7t \u0111\u1ec3 t\u00ednh t\u00edch ch\u1eadp c\u1ee7a hai d\u00e3y s\u1ed1: <pre><code>vector&lt;int&gt; conv(const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b) {\n    if (a.empty() || b.empty()) return {};\n    vector&lt;cd&gt; fa(a.begin(), a.end());\n    vector&lt;cd&gt; fb(b.begin(), b.end());\n    int n = 1;\n    while (n &lt; int(a.size() + b.size()) - 1) n &lt;&lt;= 1;\n    fa.resize(n); fb.resize(n);\n    fft(fa, false); fft(fb, false);\n    for (int i = 0; i &lt; n; i++)\n        fa[i] *= fb[i];\n    fft(fa, true);\n    vector&lt;int&gt; res(n);\n    for (int i = 0; i &lt; n; i++)\n        res[i] = int(real(fa[i]) + 0.5);\n    return res;\n}\n</code></pre></p>"},{"location":"algo/algebra/fft-test/#cai-at-khu-e-quy","title":"C\u00e0i \u0111\u1eb7t kh\u1eed \u0111\u1ec7 quy","text":"<p>Ta x\u00e9t c\u00e1c t\u1ea7ng \u0111\u1ec7 quy v\u1edbi \\(n=8\\): - T\u1ea7ng \\(3\\): \\((a_0,a_1,a_2,a_3,a_4,a_5,a_6,a_7)\\) - T\u1ea7ng \\(2\\): \\((a_0,a_2,a_4,a_6), (a_1,a_3,a_5,a_7)\\) - T\u1ea7ng \\(1\\): \\((a_0,a_4),(a_2,a_6),(a_1,a_5),(a_3,a_7)\\)</p> <p>V\u1eady n\u1ebfu ta s\u1eafp x\u1ebfp d\u00e3y \\(a\\) l\u1ea1i th\u00e0nh \\((a_0,a_4,a_2,a_6,a_1,a_5,a_3,a_7)\\) th\u00ec m\u1ed7i l\u1ea7n g\u1ecdi \u0111\u1ec7 quy \u1edf t\u1ea7ng th\u1ee9 \\(i\\) s\u1ebd th\u1ef1c hi\u1ec7n tr\u00ean m\u1ed9t \u0111o\u1ea1n d\u00e0i \\(2^i\\).</p> <p>Vi\u1ebft l\u1ea1i d\u00e3y ch\u1ec9 s\u1ed1 d\u01b0\u1edbi d\u1ea1ng nh\u1ecb ph\u00e2n: \\(\\((000,100,010,110,001,101,011,111)\\)\\)</p> <p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng n\u1ebfu ta \u0111\u1ea3o ng\u01b0\u1ee3c th\u1ee9 t\u1ef1 bit th\u00ec, v\u00ed d\u1ee5 \\(100\\rightarrow 001\\) th\u00ec ta nh\u1eadn \u0111\u01b0\u1ee3c d\u00e3y t\u0103ng d\u1ea7n t\u1eeb \\(0\\) \u0111\u1ebfn \\(n-1\\).</p> <p>G\u1ecdi \\(rev(i)\\) l\u00e0 s\u1ed1 nh\u1eadn \u0111\u01b0\u1ee3c sau khi \u0111\u1ea3o ng\u01b0\u1ee3c th\u1ee9 t\u1ef1 bit c\u1ee7a \\(i\\), ta c\u00f3 \\(rev(i)=\\dfrac{rev(i / 2) | [(i \\bmod 2) \\cdot n]}{2}\\) v\u1edbi \\(|\\) th\u1ec3 hi\u1ec7n ph\u00e9p to\u00e1n bitwise OR (b\u1ea1n \u0111\u1ecdc t\u1ef1 ch\u1ee9ng minh).</p> <p>Ta c\u00f3 c\u00e0i \u0111\u1eb7t sau: <pre><code>void fft(vector&lt;cd&gt; &amp;a, bool invert) {\n    int n = a.size(), L = __builtin_ctz(n);\n    vector&lt;int&gt; rev(n);\n    for (int i = 0; i &lt; n; i++) {\n        rev[i] = (rev[i &gt;&gt; 1] | (i &amp; 1) &lt;&lt; L) &gt;&gt; 1;\n        if (i &lt; rev[i]) swap(a[i], a[rev[i]]);\n    }\n    for (int len = 2; len &lt;= n; len &lt;&lt;= 1) {\n        cd wlen = polar(1.0L, acos(-1.0L) / len * (invert ? -2 : 2));\n        for (int i = 0; i &lt; n; i += len) {\n            cd w = 1;\n            for (int j = 0; j &lt; len / 2; j++) {\n                cd u = a[i + j];\n                cd v = a[i + j + len / 2] * w;\n                a[i + j] = u + v;\n                a[i + j + len / 2] = u - v;\n                w *= wlen;\n            }\n        }\n    }\n    if (invert) {\n        for (auto &amp;x : a) x /= n;\n    }\n}\n</code></pre></p>"},{"location":"algo/algebra/fft-test/#van-e-ve-o-chinh-xac","title":"V\u1ea5n \u0111\u1ec1 v\u1ec1 \u0111\u1ed9 ch\u00ednh x\u00e1c","text":"<p>\u1ede c\u00e0i \u0111\u1eb7t ph\u00eda tr\u00ean ta c\u00f3 vi\u1ebft <code>w *= wlen</code> \u0111\u1ec3 t\u00ednh lu\u1ef9 th\u1eeba c\u1ee7a c\u0103n \u0111\u01a1n v\u1ecb. Vi\u1ec7c nh\u00e2n nhi\u1ec1u l\u1ea7n s\u1ebd \u1ea3nh h\u01b0\u1edfng r\u1ea5t l\u1edbn \u0111\u1ebfn \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a thu\u1eadt to\u00e1n v\u00ec ta \u0111ang th\u1ef1c hi\u1ec7n t\u00ednh to\u00e1n tr\u00ean s\u1ed1 th\u1ef1c.</p> <p>Nh\u1eadn x\u00e9t r\u1eb1ng v\u1edbi m\u1ed7i \\(len\\) ta ch\u1ec9 c\u1ea7n t\u00ednh \\(\\omega_{len}^0,\\omega_{len}^1,\\ldots,\\omega_{len}^{len/2-1}\\).</p> <p>\u0110\u1ecbnh ngh\u0129a m\u1ed9t m\u1ea3ng \\(root\\) sao cho v\u1edbi m\u1ed7i \\(len\\) v\u00e0 v\u1edbi m\u1ed7i \\(0\\le j&lt;\\frac{len}{2}\\) ta c\u00f3 \\(root(\\frac{len}{2}+j)=\\omega_{len}^j\\).</p> <p>C\u00e0i \u0111\u1eb7t \u0111\u1ec3 t\u00ednh m\u1ea3ng \\(root\\): <pre><code>vector&lt;cd&gt; root(n);\nroot[1] = 1;\nfor (int k = 2; k &lt; n; k *= 2) {\n    cd z = polar(1.0l, acos(-1.0l) / k * (invert ? 1 : -1));\n    for (int j = k / 2; j &lt; k; j++) {\n        root[2 * j] = root[j];\n        root[2 * j + 1] = root[j] * z;\n    }\n}\n</code></pre></p> <p>Sau khi c\u00f3 m\u1ea3ng \\(root\\) ta c\u00f3 th\u1ec3 s\u1eeda c\u00e0i \u0111\u1eb7t FFT nh\u01b0 sau: <pre><code>for (int k = 1; k &lt; n; k *= 2)\n    for (int i = 0; i &lt; n; i += 2 * k)\n        for (int j = 0; j &lt; k; j++) {\n            cd z = root[j + k] * a[i + j + k];\n            a[i + j + k] = a[i + j] - z;\n            a[i + j] += z;\n        }\n</code></pre></p> <p>Th\u1eed nghi\u1ec7m v\u1edbi \\(n=2^{20}\\), sai s\u1ed1 ch\u1ec9 r\u01a1i v\u00e0o kho\u1ea3ng \\(5.5511\\cdot 10^{-16}\\). </p>"},{"location":"algo/algebra/fft-test/#fft-hai-day-cung-mot-luc","title":"FFT hai d\u00e3y c\u00f9ng m\u1ed9t l\u00fac","text":"<p>Ta c\u00f3 th\u1ec3 t\u00ednh \\(\\text{DFT}\\) c\u1ee7a hai d\u00e3y \\(a\\) v\u00e0 \\(b\\) c\u00f9ng m\u1ed9t l\u00fac b\u1eb1ng c\u00e1ch t\u00ednh \\(\\text{DFT}\\) c\u1ee7a d\u00e3y \\(c\\) v\u1edbi \\(c_j=a_j+b_j\\cdot i\\).</p> <p>G\u1ecdi \\(A,B,C\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 c\u00e1c bi\u1ebfn \u0111\u1ed5i \\(\\text{DFT}\\) t\u01b0\u01a1ng \u1ee9ng. Ta c\u00f3: \\(\\(\\overline{C(\\omega^{-j})}=\\overline{A(\\omega^{-j})}+\\overline{B(\\omega^{-j})\\cdot i}=A(\\overline{\\omega^{-j}})-i\\cdot B(\\overline{\\omega^{-j}})=A(\\omega^j)-B(\\omega^j)\\cdot i\\)\\)</p> <p>k\u1ebft h\u1ee3p v\u1edbi \\(C(\\omega^j)=A(\\omega^j)+B(\\omega^j)\\cdot i\\) suy ra: \\begin{align} A(\\omega^j) &amp;= \\frac{C(\\omega^j)+\\overline{C(\\omega^{-j})}}{2}\\ B(\\omega^j) &amp;= \\frac{C(\\omega^j)-\\overline{C(\\omega^{-j})}}{2i} \\ A(\\omega^j)B(\\omega^j) &amp;=\\frac{C^2(\\omega^j)-\\overline{C^2(\\omega^{-j})}}{4i} \\end{align}</p> <p>S\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c n\u00e0y ta c\u00f3 th\u1ec3 t\u00ednh t\u00edch ch\u1eadp ch\u1ec9 d\u00f9ng hai l\u1ea7n g\u1ecdi h\u00e0m <code>fft</code>: <pre><code>vector&lt;int&gt; conv(const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b) {\n    if (a.empty() || b.empty()) return {};\n    int n = 1;\n    while (n &lt; int(a.size() + b.size()) - 1) n &lt;&lt;= 1;\n    vector&lt;cd&gt; in(n), out(n);\n    for (int i = 0; i &lt; int(a.size()); i++)\n        in[i].real(a[i]);\n    for (int i = 0; i &lt; int(b.size()); i++)\n        in[i].image(b[i]);\n    fft(in, false);\n    for (int i = 0; i &lt; n; i++)\n        in[i] *= in[i];\n    for (int i = 0; i &lt; n; i++) {\n        /// (n - i) mod n\n        int j = -i &amp; (n - 1);\n        out[i] = in[i] - conj(in[j]);\n    }\n    fft(out, true)\n    vector&lt;int&gt; res(n);\n    /// \u1edf tr\u00ean ta kh\u00f4ng chia cho 4i n\u00ean k\u1ebft qu\u1ea3 s\u1ebd n\u1eb1m trong ph\u1ea7n \u1ea3o\n    for (int i = 0; i &lt; n; i++)\n        res[i] = int(imag(out[i]) / 4 + 0.5);\n    return res;\n}\n</code></pre></p>"},{"location":"algo/algebra/fft-test/#3-thuat-toan-ntt","title":"3. Thu\u1eadt to\u00e1n NTT","text":"<p>X\u00e9t b\u00e0i to\u00e1n nh\u00e2n \u0111a th\u1ee9c nh\u01b0ng l\u1ea7n n\u00e0y ta mu\u1ed1n c\u00e1c h\u1ec7 s\u1ed1 c\u1ee7a \u0111a th\u1ee9c chia l\u1ea5y d\u01b0 cho m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 \\(p\\). N\u1ebfu ta s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n FFT th\u00f4ng th\u01b0\u1eddng c\u00f3 th\u1ec3 g\u00e2y ra sai s\u1ed1 l\u1edbn v\u00ec h\u1ec7 s\u1ed1 c\u1ee7a \u0111a th\u1ee9c k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn. Thu\u1eadt to\u00e1n NTT cho ph\u00e9p ta t\u00ednh to\u00e1n ch\u1ec9 d\u00f9ng s\u1ed1 nguy\u00ean, t\u1eeb \u0111\u00f3 k\u1ebft qu\u1ea3 lu\u00f4n \u0111\u1ea3m b\u1ea3o ch\u00ednh x\u00e1c.</p> <p>Thu\u1eadt to\u00e1n FFT d\u1ef1a tr\u00ean c\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a c\u0103n \u0111\u01a1n v\u1ecb. C\u00e1c t\u00ednh ch\u1ea5t n\u00e0y c\u0169ng xu\u1ea5t hi\u1ec7n tr\u00ean c\u0103n \u0111\u01a1n v\u1ecb trong s\u1ed1 h\u1ecdc modulo. C\u1ee5 th\u1ec3 ta g\u1ecdi c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\) modulo \\(p\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean \\(\\omega_n\\) tho\u1ea3 m\u00e3n: \\begin{align} &amp;(\\omega_n)^n=1\\pmod p\\ &amp;(\\omega_n)^j \\ne (\\omega_n)^k, \\forall\\ 0\\le j&lt;k&lt;n \\end{align}</p> <p>\u0110i\u1ec1u ki\u1ec7n th\u1ee9 hai c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c vi\u1ebft l\u1ea1i th\u00e0nh: \\((\\omega_n)^k\\ne 1\\) v\u1edbi m\u1ecdi \\(1\\le k&lt;n\\).</p> <p>C\u00e1c c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\) kh\u00e1c \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t lu\u1ef9 th\u1eeba c\u1ee7a \\(\\omega_n\\).</p> <p>\u0110\u1ec3 \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n FFT, ta c\u1ea7n c\u00e1c c\u0103n \u0111\u01a1n v\u1ecb cho c\u00e1c lu\u1ef9 th\u1eeba nh\u1ecf h\u01a1n c\u1ee7a \\(2\\). Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh t\u00ednh ch\u1ea5t sau: \\begin{align} &amp;(\\omega_n^2)^{n/2}=1\\pmod p\\ &amp;(\\omega_n^2)^k\\ne 1\\pmod p,\\forall\\ 1\\le k&lt;\\frac{n}{2} \\end{align}</p> <p>T\u1eeb \u0111\u00e2y ta c\u00f3 n\u1ebfu \\(\\omega_n\\) l\u00e0 c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\), th\u00ec \\(\\omega_n^2\\) l\u00e0 c\u0103n \u0111\u01a1n v\u1ecb c\u1ea5p \\(\\frac{n}{2}\\) v\u00e0 do \u0111\u00f3 ta t\u00ednh \u0111\u01b0\u1ee3c c\u0103n \u0111\u01a1n v\u1ecb cho c\u00e1c lu\u1ef9 th\u1eeba c\u1ee7a \\(2\\) nh\u1ecf h\u01a1n.</p> <p>\u0110\u1ec3 t\u00ednh bi\u1ebfn \u0111\u1ed5i ng\u01b0\u1ee3c ta c\u1ea7n ngh\u1ecbch \u0111\u1ea3o modulo \\(\\omega_n^{-1}\\) t\u1ed3n t\u1ea1i, \u0111i\u1ec1u n\u00e0y l\u00e0 hi\u1ec3n nhi\u00ean v\u00ec \\(p\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> <p>Ta ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng v\u1edbi m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 c\u00f3 d\u1ea1ng \\(p=c2^k+1\\), t\u1ed3n t\u1ea1i \\(\\omega_{2^k}=g^c\\) v\u1edbi \\(g\\) l\u00e0 m\u1ed9t c\u0103n nguy\u00ean thu\u1ef7 modulo \\(p\\). L\u1ea5y v\u00ed d\u1ee5 v\u1edbi \\(p=998244353=119\\cdot 2^{23}+1\\) c\u00f3 c\u0103n nguy\u00ean thu\u1ef7 \\(g=3\\) v\u00e0 \\(\\omega_{2^{23}}=3^{119} \\bmod p=15311432\\).</p> <p>C\u00e0i \u0111\u1eb7t v\u1edbi \\(p=998244353\\) (c\u00e1c h\u1eb1ng s\u1ed1 <code>root, root_pw</code> th\u1ec3 hi\u1ec7n c\u0103n \u0111\u01a1n v\u1ecb v\u00e0 s\u1ed1 m\u0169 t\u01b0\u01a1ng \u1ee9ng, <code>root_1</code> l\u00e0 ngh\u1ecbch \u0111\u1ea3o c\u1ee7a c\u0103n \u0111\u01a1n v\u1ecb, h\u00e0m <code>inverse</code> t\u00ednh ngh\u1ecbch \u0111\u1ea3o modulo c\u1ee7a m\u1ed9t s\u1ed1): <pre><code>const int mod = 998244353;\nconst int root = 15311432;\nconst int root_1 = 469870224;\nconst int root_pw = 1 &lt;&lt; 23;\n\nvoid fft(vector&lt;int&gt; &amp; a, bool invert) {\n    int n = a.size(), L = __builtin_ctz(n);\n\n    vector&lt;int&gt; rev(n);\n    for (int i = 0; i &lt; n; i++) {\n        rev[i] = (rev[i &gt;&gt; 1] | (i &amp; 1) &lt;&lt; L) &gt;&gt; 1;\n        if (i &lt; rev[i]) swap(a[i], a[rev[i]]);\n    }\n\n    for (int len = 2; len &lt;= n; len &lt;&lt;= 1) {\n        int wlen = invert ? root_1 : root;\n        for (int i = len; i &lt; root_pw; i &lt;&lt;= 1)\n            wlen = (int)(1LL * wlen * wlen % mod);\n\n        for (int i = 0; i &lt; n; i += len) {\n            int w = 1;\n            for (int j = 0; j &lt; len / 2; j++) {\n                int u = a[i + j];\n                int v = 1ll * a[i + j + len / 2] * w % mod;\n                a[i + j] = u + v &lt; mod ? u + v : u + v - mod;\n                a[i + j + len / 2] = u - v &gt;= 0 ? u - v : u - v + mod;\n                w = 1ll * w * wlen % mod;\n            }\n        }\n    }\n\n    if (invert) {\n        int n_1 = inverse(n, mod);\n        for (int &amp; x : a)\n            x = 1ll * x * n_1 % mod;\n    }\n}\n</code></pre></p>"},{"location":"algo/algebra/fft-test/#nhan-a-thuc-voi-modulo-bat-ki","title":"Nh\u00e2n \u0111a th\u1ee9c v\u1edbi modulo b\u1ea5t k\u00ec","text":"<p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng thu\u1eadt to\u00e1n NTT ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng v\u1edbi n\u1ebfu c\u0103n \u0111\u01a1n v\u1ecb t\u1ed3n t\u1ea1i. V\u1edbi c\u00e1c modulo kh\u00f4ng tho\u1ea3 m\u00e3n ta c\u00f3 hai c\u00e1ch sau:</p>"},{"location":"algo/algebra/fft-test/#su-dung-inh-ly-thang-du-trung-hoa","title":"S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd th\u1eb7ng d\u01b0 Trung Hoa","text":"<p>N\u1ebfu k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p nh\u00e2n \u0111a th\u1ee9c c\u00f3 h\u1ec7 s\u1ed1 nh\u1ecf h\u01a1n \\(M_1\\cdot M_2\\), v\u1edbi \\(M_1,M_2\\) l\u00e0 hai s\u1ed1 nguy\u00ean t\u1ed1 c\u00f3 d\u1ea1ng \\(c2^k+1\\), ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n NTT tr\u00ean hai modulo n\u00e0y v\u00e0 d\u00f9ng \u0111\u1ecbnh l\u00fd th\u1eb7ng d\u01b0 Trung Hoa \u0111\u1ec3 kh\u00f4i ph\u1ee5c k\u1ebft qu\u1ea3.</p>"},{"location":"algo/algebra/fft-test/#chia-nho-a-thuc","title":"Chia nh\u1ecf \u0111a th\u1ee9c","text":"<p>Ta c\u1ea7n t\u00ednh \\(A(x)\\cdot B(x)\\) v\u1edbi h\u1ec7 s\u1ed1 modulo \\(M\\), th\u1ef1c hi\u1ec7n t\u00e1ch hai \u0111a th\u1ee9c nh\u01b0 sau: $$ A(x) = A_0(x) + A_1(x) \\cdot C \\ B(x) = B_0(x) + B_1(x) \\cdot C \\ $$ v\u1edbi \\(C \\approx \\sqrt{M}\\).</p> <p>Khi \u0111\u00f3 t\u00edch c\u1ee7a hai \u0111a th\u1ee9c \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n th\u00e0nh:</p> \\[A_0(x)B_0(x)+(A_0(x)B_1(x)+A_1(x)B_0(x))\\cdot C + A_1(x)B_1(x)\\cdot C^2\\] <p>S\u1eed d\u1ee5ng k\u0129 thu\u1eadt t\u01b0\u01a1ng t\u1ef1 v\u1edbi FFT hai d\u00e3y c\u00f9ng m\u1ed9t l\u00fac, ta c\u00f3 th\u1ec3 t\u00ednh bi\u1ec3u th\u1ee9c tr\u00ean v\u1edbi ch\u1ec9 \\(4\\) l\u1ea7n g\u1ecdi FFT.</p> <p>C\u00e0i \u0111\u1eb7t: <pre><code>using ll = long long;\n\nvector&lt;int&gt; convMod(const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b, int M) {\n    if (a.empty() || b.empty()) return {};\n    vector&lt;int&gt; res(a.size() + b.size() - 1);\n    int B = 32 - __builtin_clz(res.size());\n    int n = 1 &lt;&lt; B, cut = sqrt(M);\n\n    vector&lt;cd&gt; L(n), R(n), outs(n), outl(n);\n\n    for (int i = 0; i &lt; int(a.size()); i++)\n        L[i] = cd(a[i] / cut, a[i] % cut);\n    for (int i = 0; i &lt; int(b.size()); i++)\n        R[i] = cd(b[i] / cut, b[i] % cut);\n    fft(L, false); fft(R, false);\n\n    for (int i = 0; i &lt; n; i++) {\n        /// j = (n - i) % n\n        int j = -i &amp; (n - 1);\n        outl[i] = (L[i] + conj(L[j])) * R[i] / 2.0l;\n        outs[i] = (L[i] - conj(L[j])) * R[i] / 2il;\n    }\n    fft(outl, true), fft(outs, true);\n\n    for (int i = 0; i &lt; int(res.size()); i++) {\n        ll av = ll(real(outl[i]) + 0.5);\n        ll cv = ll(imag(outs[i]) + 0.5);\n        ll bv = ll(imag(outl[i]) + 0.5) + ll(real(outs[i]) + 0.5);\n        res[i] = ((av % M * cut + bv) % M * cut + cv) % M;\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"algo/algebra/fft-test/#4-bai-tap-tham-khao","title":"4. B\u00e0i t\u1eadp tham kh\u1ea3o","text":"<ul> <li>Codeforces - Nikita and Order Statistics</li> <li>AtCoder - Product Modulo</li> <li>CodeChef - Power Sum</li> <li>Kattis - A + B Problem</li> <li>Codeforces - Rusty String</li> </ul>"},{"location":"algo/algebra/nCk/","title":"C\u00e1ch t\u00ednh s\u1ed1 t\u1ed5 h\u1ee3p","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: - Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN</p> <p>Reviewer: - Ph\u1ea1m C\u00f4ng Minh - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/algebra/nCk/#to-hop-combination","title":"T\u1ed5 h\u1ee3p (Combination)","text":""},{"location":"algo/algebra/nCk/#gioi-thieu-ve-to-hop","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 t\u1ed5 h\u1ee3p","text":"<p>Trong to\u00e1n h\u1ecdc, t\u1ed5 h\u1ee3p l\u00e0 c\u00e1ch ch\u1ecdn c\u00e1c ph\u1ea7n t\u1eed t\u1eeb m\u1ed9t nh\u00f3m m\u00e0 kh\u00f4ng ph\u00e2n bi\u1ec7t th\u1ee9 t\u1ef1 ch\u1ecdn. M\u1ed7i t\u1eadp con g\u1ed3m \\(k\\) ph\u1ea7n t\u1eed kh\u00e1c nhau (kh\u00f4ng ph\u00e2n bi\u1ec7t th\u1ee9 t\u1ef1) c\u1ee7a t\u1eadp h\u1ee3p \\(n\\) ph\u1ea7n t\u1eed \u0111\u00e3 cho (\\(0 \u2264 k \u2264 n\\)) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t t\u1ed5 h\u1ee3p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed. S\u1ed1 c\u00e1c t\u1ed5 h\u1ee3p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed kh\u00e1c nhau \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(C_n^k\\) ho\u1eb7c \\(\\dbinom{n}{k}\\):</p> \\[C_n^k  = \\dbinom{n}{k} = \\dfrac{n!}{k! (n - k)!} = \\dfrac{n(n-1)\\ldots(n - k + 1)}{k!},\\, 0 \u2264 k \u2264 n\\] <p>\u0110\u1ec3 b\u1ea1n \u0111\u1ecdc ti\u1ec7n theo d\u00f5i, trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta th\u1ed1ng nh\u1ea5t s\u1eed d\u1ee5ng k\u00fd hi\u1ec7u \\(C_n^k\\). Ta quy \u01b0\u1edbc: - \\(C_n^0  = 1\\) v\u1edbi m\u1ecdi \\(n \\ge 0\\) - N\u1ebfu \\(k &gt; n\\) th\u00ec \\(C_n^k  = 0\\)</p>"},{"location":"algo/algebra/nCk/#mot-so-tinh-chat-cua-to-hop","title":"M\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t c\u1ee7a t\u1ed5 h\u1ee3p","text":"<ul> <li> <p>V\u1edbi m\u1ecdi \\(n \u2265 1\\) v\u00e0 \\(0 \u2264 k \u2264 n\\), ta c\u00f3:</p> <ul> <li>\\(C_n^k = C_n^{n - k}\\)</li> <li>\\(C_n^k = C_{n - 1}^{k - 1} + C_{n - 1}^{k}\\)</li> </ul> </li> <li> <p>\\(C_n^k\\) c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 h\u1ec7 s\u1ed1 nh\u1ecb th\u1ee9c (binomial coefficients) do \\(C_n^k\\) l\u00e0 h\u1ec7 s\u1ed1 trong khai tri\u1ec3n: \\(\\((x + y)^n= \\sum\\limits_{k = 0}^{n} C_n^k \\cdot x^k \\cdot y ^ {n - k}\\)\\)</p> </li> </ul>"},{"location":"algo/algebra/nCk/#tinh-so-to-hop","title":"T\u00ednh s\u1ed1 t\u1ed5 h\u1ee3p","text":""},{"location":"algo/algebra/nCk/#su-dung-inh-nghia","title":"S\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a","text":"<p>\\(\\(C_n^k = \\dfrac{n!}{k! (n - k)!}\\)\\) - V\u1edbi c\u00f4ng th\u1ee9c n\u00e0y, ta ngh\u0129 ngay \u0111\u1ebfn m\u1ed9t thu\u1eadt to\u00e1n \"ng\u00e2y th\u01a1\": T\u00ednh \\(n!\\), \\(k!\\) v\u00e0  \\((n - k)!\\). T\u1eeb \u0111\u00f3 t\u00ednh \u0111\u01b0\u1ee3c \\(C_n^k\\).</p> <pre><code>long long res = 1;\nfor (int i = 1; i &lt;= n; i++) res = res * i;\nfor (int i = 1; i &lt;= k; i++) res = res / i;\nfor (int i = 1; i &lt;= n-k; i++) res = res / i;\n</code></pre> <ul> <li>M\u1edf r\u1ed9ng h\u01a1n, ta c\u00f3 th\u1ec3 bi\u1ebfn \u0111\u1ed5i m\u1ed9t ch\u00fat nh\u01b0 sau:</li> </ul> \\[C_n^k = \\dfrac{n}{1} \\cdot \\dfrac{n - 1}{2} \\ldots \\dfrac{n - k + 1}{k} = \\dfrac{C_{n-1}^{k-1} \\cdot (n - k + 1)}{k}\\] <p>V\u00ec \\(C_n^k\\) l\u00e0 s\u1ed1 nguy\u00ean, n\u00ean b\u1ea1n y\u00ean t\u00e2m r\u1eb1ng \\(C_{n-1}^{k-1} \\cdot (n - k + 1)\\) lu\u00f4n chia h\u1ebft cho \\(k\\).</p> <pre><code>long long res = 1;\nfor (int i = 1; i &lt;= k; i++)\n    res = res * (n - i + 1) / i;\n</code></pre> <ul> <li>Hai c\u00e1ch ti\u1ebfp c\u1eadn tr\u00ean r\u1ea5t t\u1ef1 nhi\u00ean, d\u1ec5 ngh\u0129, d\u1ec5 th\u1ef1c hi\u1ec7n nh\u01b0ng l\u1ea1i c\u00f3 m\u1ed9t tr\u1edf ng\u1ea1i: gi\u00e1 tr\u1ecb c\u1ee7a \\(n!\\) c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn (khi \\(n = 20\\) th\u00ec \\(n! \\approx 2.42\\times10^{18}\\))</li> </ul>"},{"location":"algo/algebra/nCk/#su-dung-cong-thuc-truy-hoi","title":"S\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c truy h\u1ed3i","text":"\\[\\begin{align*} C_n^k=\\begin{cases} 1 &amp;\\text{n\u1ebfu } k = 0 \\text{ v\u00e0 } n \\ge 0\\\\ 0 &amp;\\text{n\u1ebfu } k &gt; n\\\\ C_{n - 1}^{k - 1} + C_{n - 1}^{k} &amp;\\text{trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i} \\end{cases} \\end{align*}\\] <p>V\u1edbi c\u00f4ng th\u1ee9c truy h\u1ed3i n\u00e0y, ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t m\u1ea3ng hai chi\u1ec1u <code>C[n][k]</code> \u0111\u1ec3 t\u00ednh \\(C_n^k\\)</p> <p>Code C++ minh h\u1ecda <pre><code>for (int i = 0; i &lt;= n; i++){\n    C[i][0] = 1;\n    for (int k = 1; k &lt;= i; k++){\n        C[i][k] = C[i - 1][k - 1] + C[i - 1][k];\n    }\n}\n</code></pre></p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(O(n^2)\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: - Ti\u1ec1n x\u1eed l\u00fd: \\(O(n^2)\\) - Truy v\u1ea5n: \\(O(1)\\)</p>"},{"location":"algo/algebra/nCk/#tinh-so-to-hop-theo-modulo-m","title":"T\u00ednh s\u1ed1 t\u1ed5 h\u1ee3p theo modulo M","text":"<p>V\u00ec k\u1ebft qu\u1ea3 c\u1ee7a \\(C_n^k\\) c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn n\u00ean trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, th\u00ed sinh th\u01b0\u1eddng \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u t\u00ednh \\(C_n^k\\) theo m\u1ed9t modulo \\(M\\) n\u00e0o \u0111\u00f3 (ph\u1ea7n d\u01b0 c\u1ee7a ph\u00e9p chia \\(C_n^k\\) cho \\(M\\)). D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 c\u00e1ch s\u1eed d\u1ee5ng \u0111\u1ec3 t\u00ednh \\(C_n^k\\) theo modulo \\(M\\). Ch\u00fa \u00fd r\u1eb1ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p d\u01b0\u1edbi \u0111\u00e2y \u0111\u01b0\u1ee3c t\u00ednh to\u00e1n khi s\u1eed d\u1ee5ng m\u1ed9t modulo \\(M\\) cho to\u00e0n b\u00e0i!</p> C\u00e1ch Ti\u1ec1n x\u1eed l\u00fd Truy v\u1ea5n B\u1ed9 nh\u1edb \u0110\u1ed9 kh\u00f3 Gi\u1edbi h\u1ea1n S\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c truy h\u1ed3i \\(O(n^2)\\) \\(O(1)\\) \\(O(n^2)\\) C\u01a1 b\u1ea3n \\(M\\) b\u1ea5t k\u1ef3, \\(n \\sim 5000\\) S\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a \\(O(n + \\log M)\\) \\(O(1)\\) \\(O(n)\\) C\u01a1 b\u1ea3n \\(M\\) nguy\u00ean t\u1ed1, \\(n &lt; M, n \\sim 10^6\\) S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd Lucas \\(O(M)\\) \\(O\\big(\\log_M(n)\\big)\\) \\(O(M)\\) Trung b\u00ecnh \\(M\\) nguy\u00ean t\u1ed1, \\(M \\sim 10^6\\) S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd Lucas m\u1edf r\u1ed9ng \\(O(M)\\) \\(O\\big(\\log_p(n)\\big)\\) \\(O(M)\\) Trung b\u00ecnh \\(M = p^q\\) v\u1edbi \\(p\\) nguy\u00ean t\u1ed1, \\(M \\sim 10^6\\) S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd th\u1eb7ng d\u01b0 Trung Hoa Trung b\u00ecnh \\(M\\) b\u1ea5t k\u1ef3 <p>Ngo\u00e0i ra c\u00f2n c\u00f3 hai c\u00e1ch t\u00ednh d\u1ef1a tr\u00ean c\u00e1ch t\u00ednh giai th\u1eeba modulo \\(M\\) kh\u00e1 hi\u1ec7u qu\u1ea3. Tham kh\u1ea3o th\u00eam t\u1ea1i \u0111\u00e2y. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 \u0111\u00e1nh gi\u00e1 v\u1ec1 hai c\u00e1ch \u0111\u00f3:</p> C\u00e1ch Ti\u1ec1n x\u1eed l\u00fd Truy v\u1ea5n B\u1ed9 nh\u1edb \u0110\u1ed9 kh\u00f3 Gi\u1edbi h\u1ea1n Chia c\u0103n \\(O\\left(\\frac{M}{S}\\right)\\) \\(O\\left(S+\\frac{M}{S}\\right)\\) \\(O\\left(\\frac{M}{S}\\right)\\) C\u01a1 b\u1ea3n \\(n &lt; M \\le 2 \\cdot 10^9\\) Bi\u1ebfn \u0111\u1ed5i FFT kh\u00f4ng \\(O\\left(\\sqrt M\\log M\\right)\\) \\(O\\left(\\sqrt M\\right)\\) Kh\u00f3 \\(M\\) nguy\u00ean t\u1ed1, \\(n &lt; M \\le 10^{12}\\)"},{"location":"algo/algebra/nCk/#su-dung-cong-thuc-truy-hoi_1","title":"S\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c truy h\u1ed3i","text":"<p>\u1ede \u0111\u00e2y, ta s\u1ebd s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c truy h\u1ed3i \u1edf tr\u00ean v\u00e0 thay \u0111\u1ed5i m\u1ed9t ch\u00fat: \\(\\(C_n^k = (C_{n - 1}^{k - 1} + C_{n - 1}^{k}) \\mod M\\)\\)</p> <p>Code C++ minh h\u1ecda <pre><code>for (int i = 0; i &lt;= n; i++){\n    C[i][0] = 1 % MOD;\n    for (int k = 1; k &lt;= i; k++){\n        C[i][k] = (C[i - 1][k - 1] + C[i - 1][k]) % MOD;\n    }\n}\n</code></pre></p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(O(n^2)\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: - Ti\u1ec1n x\u1eed l\u00fd: \\(O(n^2)\\) - Truy v\u1ea5n: \\(O(1)\\)</p> <p>Nh\u1eadn x\u00e9t: \u0110\u00e2y l\u00e0 c\u00e1ch \u0111\u01a1n gi\u1ea3n, d\u1ec5 ngh\u0129, d\u1ec5 code \u0111\u00fang, n\u00ean s\u1eed d\u1ee5ng trong tr\u01b0\u1eddng h\u1ee3p \\(n\\) nh\u1ecf \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian.</p>"},{"location":"algo/algebra/nCk/#su-dung-inh-nghia_1","title":"S\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a","text":"<p>R\u00e0o c\u1ea3n l\u1edbn nh\u1ea5t cho vi\u1ec7c s\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a \\(C_n^k = \\dfrac{n!}{k! (n - k)!}\\) l\u00e0 \\(n!\\) qu\u00e1 l\u1edbn. Tuy nhi\u00ean khi ta c\u1ea7n l\u1ea5y k\u1ebft qu\u1ea3 theo modulo \\(M\\), \u0111\u00f3 l\u1ea1i l\u00e0 v\u1ea5n \u0111\u1ec1 kh\u00e1c.</p> <ul> <li>\u0110i\u1ec1u ki\u1ec7n s\u1eed d\u1ee5ng: \\(M\\) nguy\u00ean t\u1ed1 v\u00e0 \\(n &lt; M\\)</li> <li>Ki\u1ebfn th\u1ee9c s\u1eed d\u1ee5ng:<ul> <li>Ngh\u1ecbch \u0111\u1ea3o modulo (Modular Inverse): Tham kh\u1ea3o \u1edf b\u00e0i vi\u1ebft S\u1ed1 h\u1ecdc 4.5 - Ngh\u1ecbch \u0111\u1ea3o modulo c\u1ee7a VNOI.</li> <li>\u0110\u1ecbnh l\u00fd Fermat nh\u1ecf :::spoiler  Cho \\(p\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 s\u1ed1 nguy\u00ean \\(a\\) kh\u00f4ng chia h\u1ebft cho \\(p\\). Khi \u0111\u00f3, ta c\u00f3: \\(\\(a^{p - 1} \\equiv 1 \\pmod p\\)\\) T\u1eeb \u0111\u00f3, ta r\u00fat ra: \\(\\(a^{-1} \\equiv a^{p-2} \\pmod p\\)\\) :::</li> <li>L\u0169y th\u1eeba nhanh</li> </ul> </li> <li> <p>\u00dd t\u01b0\u1edfng:</p> <ul> <li>Ta vi\u1ebft l\u1ea1i:  \\(\\(C_n^k = n! \\times \\left( k! \\right)^{-1} \\times \\left( (n - k)! \\right)^{-1} \\mod M\\)\\)</li> <li> <p>Ta s\u1eed d\u1ee5ng hai m\u1ea3ng: m\u1ea3ng \\(\\text{fact}[i]\\) \u0111\u1ec3 l\u01b0u \\(i! \\bmod M\\) v\u00e0 m\u1ea3ng \\(\\text{ifact}[i]\\) \u0111\u1ec3 l\u01b0u \\((i!)^{-1} \\bmod M\\). Sau \u0111\u00f3 d\u00f9ng c\u00f4ng th\u1ee9c (s\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd Fermat nh\u1ecf):</p> \\[\\text{ifact}[i] = (\\text{fact}[i]) ^ {-1} \\bmod M = (\\text{fact}[i])^{M-2} \\bmod M\\] <p>Ch\u00fa \u00fd r\u1eb1ng \\(\\text{fact}[i] \\equiv 0 \\pmod M \\;\\;\\forall i \\ge M\\) n\u00ean ta ch\u1ec9 t\u00ednh \\(\\text{fact}[i]\\) v\u00e0 \\(\\text{ifact}[i]\\) v\u1edbi \\(0 \\le i \\le M - 1\\).</p> </li> <li> <p>Ta s\u1ebd t\u00ednh m\u1ea3ng \\(\\text{fact}[i]\\) nh\u01b0 sau:</p> </li> </ul> \\[\\begin{align}     \\begin{cases}     \\text{fact}[0] &amp;= 1\\\\     \\text{fact}[i] &amp;= (\\text{fact}[i - 1] \\times i ) \\bmod M &amp;\\text{ n\u1ebfu } 1 \\le i \\le n     \\end{cases} \\end{align}\\] <ul> <li>Ti\u1ebfp theo ta s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n l\u0169y th\u1eeba nhanh \u0111\u1ec3 t\u00ednh \\(\\text{ifact}[n] = \\left( \\text{fact}[n] \\right)^{M-2} \\mod M\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log M)\\).</li> <li>C\u00f2n m\u1ea3ng \\(\\text{ifact}[i]\\) th\u00ec t\u00ednh nh\u01b0 sau:</li> </ul> \\[\\begin{align}     \\begin{cases}     \\text{ifact}[n] &amp;= \\left( \\text{fact}[n] \\right)^{M-2} &amp;\\mod M\\\\     \\text{ifact}[i - 1] &amp;= \\text{ifact}[i] \\times i  &amp;\\mod M  &amp;\\text{n\u1ebfu } 1 \\le i \\le n     \\end{cases} \\end{align}\\] <ul> <li>Cu\u1ed1i c\u00f9ng, \\(C_n^k = \\text{fact}[n] \\times \\text{ifact}[k] \\times \\text{ifact}[n - k] \\mod M\\).</li> </ul> </li> </ul> <p>Code C++ minh h\u1ecda <pre><code>const int MOD = 1e9 + 7;\nconst int N = 1e6;\nint fact[N + 5], ifact[N + 5];\n\n// H\u00e0m l\u0169y th\u1eeba nhanh\nlong long binpow(long long a, long long b) {\n    long long ans = 1;\n    while (b &gt; 0){\n        if (b % 2) ans = ans * a % MOD;\n        a = a * a % MOD;\n        b /= 2;\n    }\n    return ans;\n}\n\n// Chu\u1ea9n b\u1ecb\nvoid prepare(){\n    // T\u00ednh fact[]\n    fact[0] = 1;\n    for (int i = 1; i &lt;= N; i++)\n        fact[i] = 1LL * fact[i - 1] * i % MOD;\n\n    // T\u00ednh ifact[]\n    ifact[N] = binpow(fact[N], MOD - 2);\n    for (int i = N - 1; i &gt;= 1; i--)\n        ifact[i] = 1LL * ifact[i + 1] * (i + 1) % MOD;\n}\n\n// H\u00e0m t\u00ednh nCk\nint C(int n, int k){\n    if (k &gt; n) return 0;\n    return (1LL * fact[n] * ifact[k] % MOD) * ifact[n - k] % MOD;\n}\n\nint main(){\n    prepare();        \n    // Truy v\u1ea5n\n    int q; cin &gt;&gt; q;\n    while (q--){\n        int n, k; cin &gt;&gt; n &gt;&gt; k;\n        cout &lt;&lt; C(n, k) &lt;&lt; '\\n';\n    }\n}\n</code></pre></p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(O(n)\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: - Ti\u1ec1n x\u1eed l\u00fd: \\(O(n + \\log M)\\) - Truy v\u1ea5n: \\(O(1)\\)</p>"},{"location":"algo/algebra/nCk/#su-dung-inh-ly-lucas","title":"S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd Lucas","text":"<p>\u0110\u00e2y l\u00e0 c\u1ea3i ti\u1ebfn c\u1ee7a c\u00e1ch s\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a \u0111\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng cho \\(n &gt; M\\) - \u0110i\u1ec1u ki\u1ec7n s\u1eed d\u1ee5ng: \\(M\\) nguy\u00ean t\u1ed1 - \u00dd t\u01b0\u1edfng: C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o t\u1ea1i b\u00e0i vi\u1ebft \u0110\u1ecbnh l\u00fd Lucas c\u1ee7a VNOI</p> <p>Code C++ minh h\u1ecda <pre><code>int C(long long n, long long k){...} // h\u00e0m t\u00ednh Ckn s\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a b\u00ean tr\u00ean\nint comb(long long n, long long k){\n    if (k &gt; n) return 0;\n    int res = 1;\n    while (n &gt; 0){\n        res = 1LL * res * C(n % MOD, k % MOD) % MOD;\n        n /= MOD; k/= MOD;\n    }\n    return res;\n}\n</code></pre></p> B\u1ea1n \u0111\u1ecdc tham kh\u1ea3o th\u00eam code \u0111\u1ea7y \u0111\u1ee7 \u1edf \u0111\u00e2y <pre><code>const int MOD = 1e6 + 3;\nint fact[MOD + 5], ifact[MOD + 5];\n\n// H\u00e0m l\u0169y th\u1eeba nhanh\nlong long binpow(long long a, long long b) {\n    long long ans = 1;\n    while (b &gt; 0){\n        if (b % 2) ans = ans * a % MOD;\n        a = a * a % MOD;\n        b /= 2;\n    }\n    return ans;\n}\n\n// Chu\u1ea9n b\u1ecb\nvoid prepare(){\n    // T\u00ednh fact[]\n    fact[0] = 1;\n    for (int i = 1; i &lt; MOD; i++)\n        fact[i] = 1LL * fact[i - 1] * i % MOD;\n\n    // T\u00ednh ifact[]\n    ifact[MOD - 1] = binpow(fact[MOD - 1], MOD - 2);\n    for (int i = MOD - 2; i &gt;= 0; i--)\n        ifact[i] = 1LL * ifact[i + 1] * (i + 1) % MOD;\n}\n\n// H\u00e0m t\u00ednh nCk v\u1edbi n &lt; M\nint C(int n, int k){\n    if (k &gt; n) return 0;\n    return (1LL * fact[n] * ifact[k] % MOD) * ifact[n - k] % MOD;\n}\n\n// H\u00e0m t\u00ednh nCk v\u1edbi n c\u00f3 th\u1ec3 l\u1edbn h\u01a1n M\nint comb(long long n, long long k){\n    if (k &gt; n) return 0;\n    int res = 1;\n    while (n &gt; 0){\n        res = 1LL * res * C(n % MOD, k % MOD) % MOD;\n        n /= MOD; k/= MOD;\n    }\n    return res;\n}\n\nint main(){\n    prepare();        \n    // Truy v\u1ea5n\n    int q; cin &gt;&gt; q;\n    while (q--){\n        long long n, k; cin &gt;&gt; n &gt;&gt; k;\n        cout &lt;&lt; comb(n, k) &lt;&lt; '\\n';\n    }\n\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(O(M)\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: - Ti\u1ec1n x\u1eed l\u00fd: \\(O(M)\\) - Truy v\u1ea5n: \\(O\\big(\\log_M(n)\\big)\\)</p>"},{"location":"algo/algebra/nCk/#su-dung-inh-ly-lucas-mo-rong","title":"S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd Lucas m\u1edf r\u1ed9ng","text":"<ul> <li>\u0110i\u1ec1u ki\u1ec7n s\u1eed d\u1ee5ng: \\(M\\) l\u0169y th\u1eeba c\u1ee7a s\u1ed1 nguy\u00ean t\u1ed1</li> <li>Ki\u1ebfn th\u1ee9c s\u1eed d\u1ee5ng:<ul> <li>Ngh\u1ecbch \u0111\u1ea3o modulo, l\u0169y th\u1eeba nhanh</li> <li> <p>\u0110\u1ecbnh l\u00fd Euler (m\u1edf r\u1ed9ng c\u1ee7a \u0111\u1ecbnh l\u00fd Fermat nh\u1ecf)     Cho \\(2\\) s\u1ed1 nguy\u00ean \\(a, m\\) nguy\u00ean t\u1ed1 c\u00f9ng nhau. Khi \u0111\u00f3, ta c\u00f3: \\(a^{\\varphi(m)} \\equiv 1 \\pmod m\\).</p> <p>Trong \u0111\u00f3, \\(\\varphi(m)\\) l\u00e0 h\u00e0m phi Euler: \\(\\varphi(m) = m \\cdot \\prod\\limits_{p \\text{ nguy\u00ean t\u1ed1}, p \\mid m} \\dfrac{p - 1}{p}\\). T\u1eeb \u0111\u00f3, ta r\u00fat ra: \\(\\(a^{-1} \\equiv a^{\\varphi(m)-1} \\pmod p\\)\\)     - M\u1edf r\u1ed9ng \u0111\u1ecbnh l\u00fd Lucas cho modulo l\u00e0 l\u0169y th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1: Andrew Granville \u0111\u00e3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c sau: (Xem b\u00e0i b\u00e1o t\u1ea1i \u0111\u00e2y ho\u1eb7c t\u1ea1i \u0111\u00e2y)</p> \\[\\dfrac{t^{e_q}}{p^{e_1}} C_n^k \\equiv \\dfrac{(n_0!)_p}{(k_0!)_p(r_0!)_p} \\cdot \\dfrac{(n_1!)_p}{(k_1!)_p(r_1!)_p} \\ldots \\dfrac{(n_d!)_p}{(k_d!)_p(r_d!)_p} \\,(\\bmod p^q)\\] <p>Trong \u0111\u00f3: - \\(t = \\begin{align} \\begin{cases} 1 &amp;\\text{ n\u1ebfu } p = 2 \\text{ v\u00e0 } q \\ge 3\\\\ -1&amp;\\text{ c\u00f2n l\u1ea1i} \\end{cases} \\end{align}\\) - \\(e_j = \\sum\\limits_{i \\ge j} \\left( \\left\\lfloor \\dfrac{n}{p^i} \\right\\rfloor - \\left\\lfloor \\dfrac{k}{p^i} \\right\\rfloor - \\left\\lfloor \\dfrac{r}{p^i} \\right\\rfloor \\right)\\) B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 th\u1ea5y, \\(e_1\\) l\u00e0 s\u1ed1 m\u0169 c\u1ee7a \\(p\\) khi ph\u00e2n t\u00edch \\(C_n^k\\) ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1. - \\(\\left( n! \\right)_p\\) l\u00e0 t\u00edch t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) v\u00e0 kh\u00f4ng bao g\u1ed3m c\u00e1c s\u1ed1 chia h\u1ebft cho \\(p\\) (v\u1edbi \\(p\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1). - \\(r = n-k\\) - \\(n_i = \\left\\lfloor \\dfrac{n}{p^i} \\right\\rfloor \\bmod p ^ q\\) - \\(k_i, r_i\\) \u0111\u1ecbnh ngh\u0129a t\u01b0\u01a1ng t\u1ef1 \\(n_i\\) - \\(d\\) l\u00e0 v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng m\u00e0 \\(n_i \\neq 0\\).  Ngh\u0129a l\u00e0 ta ch\u1ec9 c\u1ea7n ch\u1ea1y cho \u0111\u1ebfn khi \\(n_i = 0\\).</p> </li> </ul> </li> </ul> <p>Chi ti\u1ebft c\u00e1c b\u01b0\u1edbc: <pre><code>const int MOD = 27;\nconst int prime = 3;\nlong long fact[MOD], ifact[MOD];\n</code></pre> - Ch\u00fa \u00fd r\u1eb1ng \u1edf b\u01b0\u1edbc chu\u1ea9n b\u1ecb, \\(\\text{fact}[i]\\) s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u \\(\\left( i! \\right)_p\\) (Xem ph\u1ea7n m\u00f4 t\u1ea3 m\u1edf r\u1ed9ng \u0111\u1ecbnh l\u00fd Lucas) thay v\u00ec \\(i!\\) v\u00e0 ta c\u1ea7n s\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd Euler thay cho \u0111\u1ecbnh l\u00fd Fermat nh\u1ecf. <pre><code>void init(){\n    fact[0] = 1;\n    for (int i = 1; i &lt; MOD; i++) {\n        if (i % prime != 0)\n            fact[i] = (fact[i - 1] * i) % MOD;\n        else\n            fact[i] = fact[i - 1];\n    }\n    int phi = MOD / prime * (prime - 1) - 1;\n    ifact[MOD - 1] = binpow(fact[MOD - 1], phi, MOD);\n    for (int i = MOD - 1; i &gt; 0; i--) {\n        if (i % prime != 0)\n            ifact[i - 1] = (ifact[i] * i) % MOD;\n        else\n            ifact[i - 1] = ifact[i];\n    }\n}\n</code></pre> - Ti\u1ebfp theo ta s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c b\u00ean tr\u00ean <pre><code>long long C(long long N, long long K, long long R){\n    return (fact[N] * ifact[R] % MOD) * ifact[K] % MOD;\n}\n\nint count_carry(long long n, long long k, long long r, int p, long long t){\n    long long res = 0;\n    while (n &gt;= t) {\n        res += ((n / t) - (k / t) - (r / t));\n        t *= p;\n    }\n    return res;\n}\n\nlong long calc(long long N, long long K, long long R) {\n    if (K &gt; N)\n        return 0;\n    long long res = 1;\n    int vp = count_carry(N, K, R, prime, prime);\n    int vp2 = count_carry(N, K, R, prime, MOD);\n    while (N &gt; 0) {\n        res = (res * C(N % MOD, K % MOD, R % MOD)) % MOD;\n        N /= prime; K /= prime; R /= prime;\n    }\n    res = res * binpow(prime, vp, MOD) % MOD;\n    if ((vp2 % 2 == 1) &amp;&amp; (prime != 2 || MOD &lt;= 4))\n        res = (MOD - res) % MOD;\n    return res;\n}\n</code></pre></p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(O(M)\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: - Ti\u1ec1n x\u1eed l\u00fd: \\(O(M)\\) - Truy v\u1ea5n: \\(O\\big(\\log_p(n)\\big)\\)</p>"},{"location":"algo/algebra/nCk/#su-dung-inh-ly-thang-du-trung-hoa","title":"S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd th\u1eb7ng d\u01b0 Trung Hoa","text":"<p>\u0110\u1ecbnh l\u00fd th\u1eb7ng d\u01b0 Trung Hoa l\u00e0 c\u1ea7u n\u1ed1i gi\u00fap ta t\u00ednh to\u00e1n \u0111\u01b0\u1ee3c khi \\(M\\) kh\u00f4ng ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1. - Ki\u1ebfn th\u1ee9c s\u1eed d\u1ee5ng:     - \u0110\u1ecbnh l\u00fd Th\u1eb7ng d\u01b0 trung hoa - Chinese remainder theorem (CRT)</p> <pre><code>    X\u00e9t h\u1ec7:\n\n    $$\\left\\{\\begin{array}{rcl}\n        a &amp; \\equiv &amp; a_1 \\pmod{m_1} \\\\\n        a &amp; \\equiv &amp; a_2 \\pmod{m_2} \\\\\n          &amp; \\vdots &amp; \\\\\n        a &amp; \\equiv &amp; a_k \\pmod{m_k}\n    \\end{array}\\right.$$\n\n    v\u1edbi $m_1, m_2, \\ldots m_k$ \u0111\u00f4i m\u1ed9t nguy\u00ean t\u1ed1 c\u00f9ng nhau.\n\n    K\u00fd hi\u1ec7u: \n    - $M = m_1 \\cdot m_2 \\ldots m_k$\n\n    - $M_i = \\dfrac{M}{m_i}$\n\n    - $N_i = M_i^{-1} \\mod m_i$\n\n    T\u1eeb \u0111\u00f3 nh\u1eadn th\u1ea5y:\n\n    $$\\left\\{\\begin{array}{rcl}\n        a_i M_i N_i &amp; \\equiv &amp; a_i \\pmod{m_i} \\\\\n        a_j M_j N_j &amp; \\equiv &amp; 0 \\pmod{m_i} \\,\\,\\forall j \\neq i\n    \\end{array}\\right.$$\n\n    Khi n\u00e0y ch\u1ec9 c\u1ea7n c\u1ed9ng t\u1ea5t c\u1ea3 s\u1ed1 h\u1ea1ng $a_i M_i N_i$ ta \u0111\u01b0\u1ee3c m\u1ed9t nghi\u1ec7m th\u1ecfa m\u00e3n h\u1ec7:\n    $$a = a_1 M_1 N_1 + a_2 M_2 N_2 + \\ldots + a_k M_k N_k$$\n</code></pre> <p>\u0110\u1ec3 minh h\u1ecda r\u00f5 h\u01a1n n\u00e0y, ta s\u1ebd gi\u1ea3i quy\u1ebft b\u00e0i nCr tr\u00ean Hackerrank</p> <p>T\u00f3m t\u1eaft: T\u00ednh \\(C_n^k \\bmod 142857\\) v\u1edbi \\(0 \\le k \\le n \\le 10^{9}\\)</p> <p>L\u1eddi gi\u1ea3i: - Gi\u1ea3 s\u1eed b\u1eb1ng nh\u1eefng c\u00e1ch tr\u00ean, b\u1ea1n \u0111\u00e3 t\u00ednh \u0111\u01b0\u1ee3c \\(C_n^k\\) modulo l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 (\u0110L Lucas) ho\u1eb7c l\u0169y th\u1eeba c\u1ee7a ch\u00fang (\u0110L Lucas m\u1edf r\u1ed9ng). Ti\u1ebfp theo ta s\u1ebd s\u1eed d\u1ee5ng CRT x\u1eed l\u00fd c\u00e1c ph\u1ea7n c\u00f2n l\u1ea1i. - \u0110\u1ea7u ti\u00ean, ta s\u1ebd ph\u00e2n t\u00edch modulo \\(142857 = 3^3 \\cdot 11 \\cdot 13 \\cdot 17\\) <pre><code>int n_primes = 4;\nint primes[] = {3, 11, 13, 37};\nint primes_pw[] = {27, 11, 13, 37};\nint rem[n_primes];\nvector&lt;long long&gt; fact[n_primes], ifact[n_primes];\n</code></pre></p> <ul> <li>Ta chu\u1ea9n b\u1ecb s\u1eb5n m\u1ed9t m\u1ea3ng t\u00ednh \\(M_i N_i\\) trong c\u00f4ng th\u1ee9c \\(a = \\sum a_i M_i N_i\\) \u0111\u1ec3 ti\u1ec7n cho vi\u1ec7c truy v\u1ea5n.     <pre><code>void prepare(){\n    for (int i = 0; i &lt; n_primes; i++) {\n        // M_i\n        int tmp = MOD / primes_pw[i];\n        //gi\u00e1 tr\u1ecb phi Euler c\u1ee7a primes_pw[i]\n        int phi = primes_pw[i] / primes[i] * (primes[i] - 1);\n        // M_i * M_i^(-1)\n        rem[i] = tmp * binpow(tmp, phi - 1, primes_pw[i]) % MOD;\n    }\n}\n</code></pre></li> <li>Cu\u1ed1i c\u00f9ng t\u00ednh ra k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng s\u1eed d\u1ee5ng CRT     <pre><code>long long CRT(long long N, long long K) {\n    long long res = 0;\n    for (int i = 0; i &lt; n_primes; i++) {\n        // C(n, k, MOD) l\u00e0 h\u00e0m t\u00ednh nCk modulo MOD\n        int ans = C(N, K, MOD) * rem[i] % MOD;\n        res = (res + ans) % MOD;\n    }\n    return res;\n}\n</code></pre></li> </ul>  B\u1ea1n \u0111\u1ecdc tham kh\u1ea3o code n\u1ed9p AC b\u00e0i nCr \u1edf \u0111\u00e2y  <pre><code>## include &lt;bits/stdc++.h&gt;\nconst int MOD = 142857;\n\nusing ll = long long;\n\nusing namespace std;\n\nint primes[] = {3, 11, 13, 37};\nint primes_pw[] = {27, 11, 13, 37};\nint phi[] = {18, 10, 12, 36}; // phi = prime_pw * (prime - 1)/prime\nint rem[4];\nvector&lt;ll&gt; fact[4], ifact[4];\nint t;\n\nll binpow(ll a, ll n, ll mod)\n{\n    ll res = 1;\n    for (; n &gt; 0; n &gt;&gt;= 1)\n    {\n        if (n &amp; 1)\n            res = res * a % mod;\n        a = a * a % mod;\n    }\n    return res;\n}\n\nvoid init(int x)\n{\n    fact[x].assign(primes_pw[x], 0);\n    ifact[x].assign(primes_pw[x], 0);\n    fact[x][0] = 1;\n    for (int i = 1; i &lt; primes_pw[x]; i++)\n    {\n        if (i % primes[x] != 0)\n            fact[x][i] = (fact[x][i - 1] * i) % primes_pw[x];\n        else\n            fact[x][i] = fact[x][i - 1];\n    }\n    ifact[x][primes_pw[x] - 1] = binpow(fact[x][primes_pw[x] - 1],\n                                        primes_pw[x] / primes[x] * (primes[x] - 1) - 1,\n                                        primes_pw[x]);\n    for (int i = primes_pw[x] - 1; i &gt; 0; i--)\n    {\n        if (i % primes[x] != 0)\n            ifact[x][i - 1] = (ifact[x][i] * i) % primes_pw[x];\n        else\n            ifact[x][i - 1] = ifact[x][i];\n    }\n}\n\n/*i is the order of prime*/\nll C(ll N, ll K, ll R, int i)\n{\n    return (fact[i][N] * ifact[i][R] % primes_pw[i]) * ifact[i][K] % primes_pw[i];\n}\n\nint count_carry(ll n, ll k, ll r, ll p, ll t)\n{\n    ll res = 0;\n    while (n &gt;= t)\n    {\n        res += (n / t - k / t - r / t);\n        t *= p;\n    }\n    return res;\n}\n\nll calc(ll N, ll K, ll R, int ord_pr)\n{\n    if (K &gt; N)\n        return 0;\n    int prime = primes[ord_pr];\n    int mod = primes_pw[ord_pr];\n    ll res = 1;\n    int vp = count_carry(N, K, R, prime, prime);\n    int vp2 = count_carry(N, K, R, prime, mod);\n    while (N &gt; 0)\n    {\n        res = (res * C(N % mod, K % mod, R % mod, ord_pr)) % mod;\n        N /= prime;\n        K /= prime;\n        R /= prime;\n    }\n    res = res * binpow(prime, vp, mod) % mod;\n    if ((vp2 &amp; 1) &amp;&amp; (prime != 2 || mod &lt;= 4))\n        res = (mod - res) % mod;\n\n    return res;\n}\n\nll CRT(ll N, ll K)\n{\n    ll res = 0;\n    for (int i = 0; i &lt;= 3; i++)\n    {\n        int ans = calc(N, K, N - K, i) * rem[i] % MOD;\n        res = (res + ans) % MOD;\n    }\n    return res;\n}\n\nvoid solve()\n{\n    for (int i = 0; i &lt;= 3; i++)\n    {\n        init(i);\n        int tmp = MOD / primes_pw[i];\n        rem[i] = tmp * binpow(tmp, phi[i] - 1, primes_pw[i]) % MOD;\n    }\n    while (t--)\n    {\n        ll N, K;\n        cin &gt;&gt; N &gt;&gt; K;\n        cout &lt;&lt; CRT(N, K) &lt;&lt; '\\n';\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n    cin &gt;&gt; t;\n    solve();\n}\n</code></pre>"},{"location":"algo/algebra/nCk/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<ul> <li>SPOJ - Marbles</li> <li>Codeforces 181C Div.2</li> <li>Codechef - Long Sandwich</li> <li>Hackerearth - Binomial Coefficient</li> <li>SPOJ - ADATEAMS</li> <li>SPOJ - UCV2013E</li> <li>Codeforces 239C Div. 1 </li> <li>VNOJ - X\u00f4ng nh\u00e0 ng\u00e0y T\u1ebft</li> <li>LQDOJ - T\u1ed5 h\u1ee3p nCk</li> <li>Hackerrank - nCr</li> <li>Hackerearth - Army parade</li> <li>Library Checker - Binomial Coefficient</li> <li>Libary Checker - Binomial Coefficient (Prime Mod)</li> </ul>"},{"location":"algo/algebra/nCk/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Codeforces - Binomial Coefficients with Large Mod</li> <li>Codeforces - nCk for small k</li> <li>M\u1edf r\u1ed9ng \u0111\u1ecbnh l\u00fd Lucas c\u1ee7a Andrew Granville</li> <li>CP-Algorithms - Binomial Coefficients</li> </ul>"},{"location":"algo/algebra/primality_check/","title":"Ki\u1ec3m tra s\u1ed1 nguy\u00ean t\u1ed1","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: Nguy\u1ec5n Anh B\u1ea3o - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i</p> <p>Reviewer: * Ng\u00f4 Nh\u1eadt Quang - The University of Texas at Dallas * Ph\u1ea1m Ho\u00e0ng Hi\u1ec7p - University of Georgia</p>"},{"location":"algo/algebra/primality_check/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n v\u00e0 ph\u01b0\u01a1ng ph\u00e1p ki\u1ec3m tra m\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean b\u1ea5t k\u00ec c\u00f3 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 hay kh\u00f4ng.</p>"},{"location":"algo/algebra/primality_check/#so-nguyen-to","title":"S\u1ed1 nguy\u00ean t\u1ed1","text":"<p>M\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean \\(n\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 khi v\u00e0 ch\u1ec9 khi \\(n\\) c\u00f3 \u0111\u00fang \\(2\\) \u01b0\u1edbc d\u01b0\u01a1ng l\u00e0 \\(1\\) v\u00e0 ch\u00ednh n\u00f3.</p> <p>V\u00ed d\u1ee5: \\(2,3,5,101\\) l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1. \\(0,1,10,12\\) kh\u00f4ng l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd t\u1eadp trung v\u00e0o vi\u1ec7c ki\u1ec3m tra m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng c\u00f3 ph\u1ea3i s\u1ed1 nguy\u00ean t\u1ed1 hay kh\u00f4ng. \u0110\u1ec3 ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a nhi\u1ec1u s\u1ed1 nguy\u00ean tr\u00ean m\u1ed9t \u0111o\u1ea1n \\(\\left[a,b\\right]\\), b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft S\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 s\u00e0ng Eratosthenes.</p>"},{"location":"algo/algebra/primality_check/#1-thuat-toan-ngay-tho","title":"1. Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":""},{"location":"algo/algebra/primality_check/#11-ngay-tho-1","title":"1.1. Ng\u00e2y th\u01a1 1","text":"<p>C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u1ec3 ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a s\u1ed1 t\u1ef1 nhi\u00ean \\(n\\) l\u00e0 tr\u1ef1c ti\u1ebfp s\u1eed d\u1ee5ng \u0111\u1ecbnh ngh\u0129a s\u1ed1 nguy\u00ean t\u1ed1: </p> <p>S\u1ed1 t\u1ef1 nhi\u00ean \\(n\\ge 2\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 khi v\u00e0 ch\u1ec9 khi \\(n\\) kh\u00f4ng chia h\u1ebft cho c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean \\(2,3,\\ldots,n-1\\).</p> <p>Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <p><pre><code>bool primeCheck(int n)\n{\n    if (n &lt; 2)\n        return false;\n    for (int i = 2; i &lt; n; ++i)\n        if (n % i == 0)\n            return false;\n    return true;\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n: \\(\\mathcal{O}\\left(n\\right)\\).</p>"},{"location":"algo/algebra/primality_check/#12-ngay-tho-2","title":"1.2. Ng\u00e2y th\u01a1 2","text":"<p>\u0110\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n tr\u00ean, nh\u1eadn x\u00e9t r\u1eb1ng n\u1ebfu \\(n\\) c\u00f3 m\u1ed9t \u01b0\u1edbc \\(d\\) sao cho \\(n-1\\ge d\\ge\\sqrt{n}\\) th\u00ec \\(\\frac{n}{d}\\) c\u0169ng l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\) v\u00e0 c\u00f3 \\(1&lt;\\frac{n}{d} \\le \\sqrt{n}\\). Suy ra n\u1ebfu \\(n\\) kh\u00f4ng chia h\u1ebft cho c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean l\u1edbn h\u01a1n \\(1\\) v\u00e0 kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(\\sqrt{n}\\) th\u00ec \\(n\\) c\u0169ng kh\u00f4ng chia h\u1ebft cho c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean l\u1edbn h\u01a1n \\(\\sqrt{n}\\). T\u1eeb \u0111\u00f3, thay v\u00ec x\u00e9t t\u00ednh chia h\u1ebft c\u1ee7a \\(n\\) cho \\(i=2,3,\\ldots,n-1\\) ta ch\u1ec9 c\u1ea7n x\u00e9t \\(i=2,3,\\ldots,\\left[\\sqrt{n}\\right]\\).</p> <p>C\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n:</p> <pre><code>bool primeCheck(int n)\n{\n    if (n &lt; 2)\n        return false;\n    for (int i = 2; i * i &lt;= n; ++i)\n        if (n % i == 0)\n            return false;\n    return true;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n: \\(\\mathcal{O}\\left(\\sqrt{n}\\right)\\).</p> <p>Ta c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng thu\u1eadt to\u00e1n tr\u00ean th\u00e0nh thu\u1eadt to\u00e1n ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1:</p> <pre><code>void primeFactorization(int n)\n{\n    for (int i = 2; i * i &lt;= n; ++i)\n        while (n % i == 0)\n        {\n            n /= i;\n            cout &lt;&lt; i &lt;&lt; ' ';\n        }\n    if (n &gt; 1)\n        cout &lt;&lt; n;\n}\n</code></pre>"},{"location":"algo/algebra/primality_check/#13-ngay-tho-25","title":"1.3. Ng\u00e2y th\u01a1 2.5","text":"<p>\u0110\u1ec3 \u00fd n\u1ebfu s\u1ed1 nguy\u00ean t\u1ed1 \\(n\\) l\u1ebb th\u00ec \\(n\\) kh\u00f4ng chia h\u1ebft cho m\u1ed9t s\u1ed1 ch\u1eb5n b\u1ea5t k\u00ec. Do \u0111\u00f3 n\u1ebfu \\(n&gt;2\\), ta ch\u1ec9 c\u1ea7n x\u00e9t c\u00e1c s\u1ed1 \\(i\\) l\u1ebb thu\u1ed9c \u0111o\u1ea1n \\(\\left[2,\\left[\\sqrt{n}\\right]\\right]\\). T\u01b0\u01a1ng t\u1ef1, n\u1ebfu \\(n&gt;3\\) th\u00ec ta ch\u1ec9 c\u1ea7n x\u00e9t \\(i\\) l\u00e0 c\u00e1c s\u1ed1 kh\u00f4ng chia h\u1ebft cho \\(3\\). T\u1eeb hai nh\u1eadn x\u00e9t tr\u00ean, n\u1ebfu \\(n&gt;3\\) th\u00ec ta ch\u1ec9 c\u1ea7n x\u00e9t c\u00e1c s\u1ed1 \\(i\\) sao cho \\(i\\) chia \\(6\\) d\u01b0 \\(1\\) ho\u1eb7c \\(5\\).</p> <p><pre><code>bool primeCheck(int n)\n{\n    if (n == 2 || n == 3)\n        return true;\n    if (n &lt; 3 || n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (int i = 5; i * i &lt;= n; i += 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return true;\n}\n</code></pre> Ch\u00fa \u00fd: C\u00f3 th\u1ec3 s\u1eed d\u1ee5ng nhi\u1ec1u s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u1ea7u ti\u00ean \u0111\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n h\u01a1n. V\u1ec1 l\u00fd thuy\u1ebft, n\u1ebfu \\(k\\) l\u00e0 s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u01b0\u1ee3c d\u00f9ng c\u00e0ng l\u1edbn th\u00ec v\u00f2ng l\u1eb7p ch\u1ea1y c\u00e0ng nhanh. Tuy nhi\u00ean, v\u1edbi \\(k=50\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u00f2ng l\u1eb7p <code>for</code> l\u00e0 \\(\\mathcal{O}\\left(\\frac{\\sqrt{n}}{10}\\right)\\). V\u00e0 k\u1ec3 c\u1ea3 v\u1edbi \\(k=6.10^5\\) th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt c\u1ee7a v\u00f2ng l\u1eb7p <code>for</code> v\u1eabn l\u00e0 \\(\\mathcal{O}\\left(\\frac{\\sqrt{n}}{30}\\right)\\).</p> <p>Do \u0111\u00f3 thu\u1eadt to\u00e1n n\u00e0y c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u1ee7 nhanh \u0111\u1ec3 gi\u1ea3i quy\u1ebft gi\u1edbi h\u1ea1n \\(n\\le10^{18}\\), ho\u1eb7c \\(n\\le10^9\\) nh\u01b0ng ph\u1ea3i ki\u1ec3m tra \\(10^6\\) s\u1ed1 \\(n\\) tr\u1edf l\u00ean. \u0110\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i to\u00e1n c\u00f3 gi\u1edbi h\u1ea1n l\u1edbn nh\u01b0 th\u1ebf, ta ph\u1ea3i s\u1eed d\u1ee5ng \u0111\u1ebfn c\u00e1c ph\u01b0\u01a1ng ph\u00e1p x\u00e1c su\u1ea5t.</p>"},{"location":"algo/algebra/primality_check/#2-phep-thu-fermat-inh-li-fermat-nho","title":"2. Ph\u00e9p th\u1eed Fermat (\u0110\u1ecbnh l\u00ed Fermat nh\u1ecf)","text":""},{"location":"algo/algebra/primality_check/#21-y-tuong","title":"2.1. \u00dd t\u01b0\u1edfng","text":"<p>Theo \u0111\u1ecbnh l\u00ed Fermat nh\u1ecf, n\u1ebfu \\(p\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec v\u1edbi m\u1ecdi s\u1ed1 nguy\u00ean \\(a\\) th\u1ecfa m\u00e3n \\(\\gcd\\left(a,p\\right)=1\\), ta c\u00f3:  $$ a^{p-1}\\equiv 1\\mod{p}  $$</p> <p>T\u1eeb \u0111\u1ecbnh l\u00fd Fermat ta c\u00f3 \u00fd t\u01b0\u1edfng ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(n\\) nh\u01b0 sau: </p> <ul> <li>X\u00e9t s\u1ed1 nguy\u00ean \\(a\\in\\left[2,n-1\\right]\\), n\u1ebfu \\(a^{n-1}\\not\\equiv1\\mod{n}\\) th\u00ec ta ch\u1eafc ch\u1eafn \\(n\\) l\u00e0 h\u1ee3p s\u1ed1 ho\u1eb7c \\(n&lt;2\\). </li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu \\(a^{n-1}\\equiv 1\\mod{n}\\) th\u00ec \\(n\\) c\u00f3 th\u1ec3 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</li> </ul> <p>Ch\u00fa \u00fd: Ph\u1ea7n in \u0111\u1eadm c\u1ee7a ph\u00e9p th\u1eed ngh\u0129a l\u00e0 t\u1ed3n t\u1ea1i c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(n\\) v\u00e0 \\(a\\) sao cho \\(n\\) l\u00e0 h\u1ee3p s\u1ed1 v\u00e0 \\(a^{n-1}\\equiv 1 \\mod{n}\\). V\u00ed d\u1ee5, n\u1ebfu \\(n=15\\) v\u00e0 \\(a=4\\) th\u00ec \\(4^{14}\\equiv 1 \\mod{15}\\). Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \\(n\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 s\u1ed1 gi\u1ea3 nguy\u00ean t\u1ed1 c\u01a1 s\u1edf \\(a\\), ho\u1eb7c s\u1ed1 nguy\u00ean t\u1ed1 x\u00e1c su\u1ea5t c\u01a1 s\u1edf \\(a\\).</p> <p>V\u1ec1 l\u00fd thuy\u1ebft, n\u1ebfu ta ki\u1ec3m tra \u0111\u1eb3ng th\u1ee9c Fermat v\u1edbi m\u1ecdi s\u1ed1 \\(a\\), ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn ch\u1eafc ch\u1eafn t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a \\(n\\). Tuy nhi\u00ean, vi\u1ec7c ki\u1ec3m tra \u0111\u1eb3ng th\u1ee9c v\u1edbi m\u1ecdi \\(a\\) s\u1ebd ph\u1ee9c t\u1ea1p h\u01a1n c\u1ea3 thu\u1eadt to\u00e1n ng\u00e2y th\u01a1. Do \u0111\u00f3, ph\u00e9p th\u1eed Fermat s\u1ebd th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 l\u1ea7n th\u1eed v\u1edbi c\u00e1c s\u1ed1 \\(a\\) \u0111\u01b0\u1ee3c l\u1ea5y ng\u1eabu nhi\u00ean. Trong c\u00e1c b\u00e0i to\u00e1n l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, ph\u00e9p th\u1eed v\u1eabn c\u00f3 \u0111\u1ed9 ch\u00ednh x\u00e1c \u0111\u1ee7 t\u1ed1t. </p>"},{"location":"algo/algebra/primality_check/#22-cai-at","title":"2.2. C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p t\u00ednh \\(a^{n-1}\\mod{n}\\) b\u1eb1ng l\u0169y th\u1eeba nh\u1ecb ph\u00e2n.</p> <pre><code>// T\u00ednh a^k (mod n)\nint binaryPower(long long a, int k, int n)\n{\n    a = a % n;\n    long long res = 1;\n    while (k)\n    {\n        if (k &amp; 1)\n            res = (res * a) % n;\n        a = (a * a) % n;\n        k /= 2;\n    }\n    return res;\n}\n</code></pre> <p>C\u00e0i \u0111\u1eb7t ph\u00e9p th\u1eed Fermat:</p> <pre><code>bool isProbablyPrime(int n)\n{\n    if (n &lt; 7)\n        return n == 2 || n == 3 || n == 5;\n\n    static const int repeatNum = 5;\n    for (int i = 0; i &lt; repeatNum; ++i)\n    {\n        int a = rand() % (n - 3) + 2;\n        if (binaryPower(a, n - 1, n) != 1)\n            return false;\n    }\n    return true;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ph\u00e9p th\u1eed l\u00e0 \\(\\mathcal{O}\\left(c\\log{n}\\right)\\) v\u1edbi \\(c\\) l\u00e0 s\u1ed1 c\u01a1 s\u1ed1 \\(a\\) \u0111\u01b0\u1ee3c th\u1eed.</p> <p>Do thu\u1eadt to\u00e1n <code>binaryPower</code> c\u00f3 s\u1eed d\u1ee5ng ph\u00e9p t\u00ednh <code>(a * a) % n</code> n\u00ean n\u1ebfu \\(n\\ge2^{32}\\) s\u1ebd c\u00f3 th\u1ec3 b\u1ecb tr\u00e0n s\u1ed1. Phi\u00ean b\u1ea3n \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf tr\u00ean x\u1eed l\u00ed \\(n&lt;2^{32}\\). \u0110\u1ec3 \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n l\u0169y th\u1eeba nh\u1ecb ph\u00e2n v\u1edbi \\(10^{18}\\ge n\\), b\u1ea1n ph\u1ea3i d\u00f9ng ki\u1ec3u s\u1ed1 nguy\u00ean \\(128-bit\\) n\u1ebfu ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh cho ph\u00e9p. N\u1ebfu ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ch\u1ec9 c\u00f3 lo\u1ea1i s\u1ed1 nguy\u00ean \\(64-bit\\), b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c ch\u1ec9nh s\u1eeda nh\u01b0 sau:</p> <pre><code>// T\u00ednh a * b mod n\nlong long binaryMul(long long a, long long b, long long n)\n{\n    a = a % n;\n    long long res = 0;\n    while (b)\n    {\n        if (b &amp; 1)\n            res = (res + a) % n;\n        a = (2 * a) % n;\n        b /= 2;\n    }\n    return res;\n}\n\n// T\u00ednh a^b mod n\nlong long binaryPow(long long a, long long k, long long n)\n{\n    a = a % n;\n    long long res = 1;\n    while (k)\n    {\n        if (k &amp; 1)\n            res = binaryMul(res, a, n);\n        a = binaryMul(a, a, n) % n;\n        k /= 2;\n    }\n    return res;\n}\n</code></pre> <p>Khi \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}\\left(c\\log^2{n}\\right)\\).</p> <p>Ch\u00fa \u00fd: Do kh\u00f4ng c\u00f3 t\u00ednh ch\u00ednh x\u00e1c tuy\u1ec7t \u0111\u1ed1i n\u00ean ph\u00e9p th\u1eed Fermat kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n.</p> <p>Tuy t\u1ed1c \u0111\u1ed9 cao v\u00e0 d\u1ec5 c\u00e0i \u0111\u1eb7t, v\u1eabn c\u00f3 nh\u1eefng tr\u01b0\u1eddng h\u1ee3p x\u00e1c su\u1ea5t ph\u00e9p th\u1eed Fermat th\u1ea5t b\u1ea1i l\u00e0 r\u1ea5t cao. V\u00ed d\u1ee5 x\u00e9t s\u1ed1 \\(n=561 = 3 \\times 11 \\times 17\\). S\u1ed1 n\u00e0y c\u00f3 t\u00ednh ch\u1ea5t v\u1edbi m\u1ecdi s\u1ed1 nguy\u00ean \\(a\\) m\u00e0 \\(\\gcd(a,n)=1\\) th\u00ec \\(a^{n-1}\\equiv 1\\mod n\\). Do \u0111\u00f3, tr\u1eeb khi trong c\u00e1c l\u1ea7n th\u1eed ng\u1eabu nhi\u00ean ta ch\u1ecdn \u0111\u01b0\u1ee3c \\(a\\) chia h\u1ebft cho \\(3,11\\) ho\u1eb7c \\(17\\) th\u00ec ph\u00e9p th\u1eed s\u1ebd cho k\u1ebft qu\u1ea3 sai.</p> <p>C\u00e1c s\u1ed1 c\u00f3 t\u00ednh ch\u1ea5t tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 s\u1ed1 Carmichael. </p>"},{"location":"algo/algebra/primality_check/#23-van-e-voi-so-carmichael","title":"2.3. V\u1ea5n \u0111\u1ec1 v\u1edbi s\u1ed1 Carmichael","text":"<p>X\u00e9t \\(n\\) l\u00e0 m\u1ed9t s\u1ed1 Carmichael c\u00f3 \\(k\\) \u01b0\u1edbc nguy\u00ean t\u1ed1, \\(c\\) l\u00e0 s\u1ed1 l\u1ea7n ch\u1ecdn c\u01a1 s\u1ed1 \\(a\\) (<code>repeatNum</code>). N\u1ebfu \\(k=3\\) th\u00ec s\u1ed1 \\(n\\) nh\u1ecf nh\u1ea5t l\u00e0 \\(561\\). X\u00e1c su\u1ea5t ph\u00e9p th\u1eed k\u1ebft lu\u1eadn \u0111\u00fang v\u1edbi \\(k=3\\) do \u0111\u00f3 b\u1ecb ch\u1eb7n b\u1edfi \\(T(c)\\). \\(T(c)\\) cho b\u1edfi b\u1ea3ng sau:</p> \\(c\\) \\(1\\) \\(2\\) \\(3\\) \\(4\\) \\(5\\) \\(\\ldots\\) \\(T(c)\\) \\(49\\%\\) \\(74\\%\\) \\(86\\%\\) \\(93\\%\\) \\(97\\%\\) \\(\\ldots\\) <p>T\u1eeb b\u1ea3ng tr\u00ean c\u00f3 th\u1ec3 th\u1ea5y \u0111\u1ec3 c\u00f3 \u0111\u1ed9 ch\u00ednh x\u00e1c \\(\\ge90\\%\\) th\u00ec ta ph\u1ea3i th\u1eed \u00edt nh\u1ea5t \\(4\\) l\u1ea7n, v\u00e0 c\u00f3 th\u1ec3 nhi\u1ec1u h\u01a1n. Trong khi n\u1ebfu ta ch\u1ec9 th\u1eed \\(1\\) l\u1ea7n duy nh\u1ea5t th\u00ec x\u00e1c su\u1ea5t ph\u00e9p th\u1eed k\u1ebft lu\u1eadn sai l\u00e0 \\(&gt;\\frac{1}{2}\\).</p> <p>V\u1edbi \\(k=4\\), s\u1ed1 Carmichael nh\u1ecf nh\u1ea5t c\u00f3 \\(4\\) \u01b0\u1edbc nguy\u00ean t\u1ed1 l\u00e0 \\(41041\\)\\(= 7 \\times 11 \\times 13 \\times 41\\). T\u01b0\u01a1ng t\u1ef1, x\u00e9t x\u00e1c su\u1ea5t ph\u00e9p th\u1eed cho k\u1ebft qu\u1ea3 \u0111\u00fang v\u1edbi \\(n\\) l\u00e0 s\u1ed1 Carmichael d\u1ea1ng n\u00e0y b\u1ecb ch\u1eb7n b\u1edfi \\(T(c)\\). \\(T(c)\\) \u0111\u01b0\u1ee3c cho b\u1edfi b\u1ea3ng sau:</p> \\(c\\) \\(1\\) \\(2\\) \\(3\\) \\(4\\) \\(5\\) \\(\\ldots\\) \\(T(c)\\) \\(34\\%\\) \\(56\\%\\) \\(71\\%\\) \\(81\\%\\) \\(88\\%\\) \\(\\ldots\\) <p>T\u1ee9c l\u00e0 k\u1ec3 c\u1ea3 ta c\u00f3 th\u1eed \u0111\u1ebfn \\(5\\) l\u1ea7n th\u00ec x\u00e1c su\u1ea5t ph\u00e9p th\u1eed k\u1ebft lu\u1eadn \u0111\u00fang v\u1eabn kh\u00f4ng th\u1ec3 qu\u00e1 \\(90\\%\\).</p> <p>M\u1ed9t \u0111i\u1ec1u kh\u00e1 th\u00fa v\u1ecb l\u00e0 c\u00e1c s\u1ed1 Carmichael ph\u00e2n b\u1ed1 r\u1ea5t \u00edt trong t\u1eadp c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean. Theo OEIS-A055553: * S\u1ed1 c\u00e1c s\u1ed1 Carmichael nh\u1ecf h\u01a1n \\(10^6\\) l\u00e0 \\(43\\) * S\u1ed1 c\u00e1c s\u1ed1 Carmichael nh\u1ecf h\u01a1n \\(10^9\\) l\u00e0 \\(646\\) * S\u1ed1 c\u00e1c s\u1ed1 Carmichael nh\u1ecf h\u01a1n \\(10^{18}\\) l\u00e0 \\(1401644\\)</p> <p>Do \u0111\u00f3, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 y\u00ean t\u00e2m khi s\u1eed d\u1ee5ng ph\u00e9p th\u1eed Fermat n\u1ebfu test \u0111\u01b0\u1ee3c sinh ng\u1eabu nhi\u00ean, v\u00ec x\u00e1c su\u1ea5t g\u1eb7p s\u1ed1 Carmichael r\u1ea5t th\u1ea5p. N\u1ebfu test c\u1ed1 t\u00ecnh ch\u1ecdn s\u1ed1 Carmichael th\u00ec ph\u00e9p th\u1eed kh\u00f4ng c\u00f2n \u0111\u00e1ng tin c\u1eady. R\u1ea5t may l\u00e0 c\u00f3 nh\u1eefng ph\u00e9p th\u1eed hi\u1ec7u qu\u1ea3 v\u00e0 ch\u00ednh x\u00e1c h\u01a1n ph\u00e9p th\u1eed Fermat. Trong ph\u1ea7n ti\u1ebfp theo ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u thu\u1eadt to\u00e1n Rabin-Miller.</p>"},{"location":"algo/algebra/primality_check/#3-thuat-toan-rabin-miller","title":"3. Thu\u1eadt to\u00e1n Rabin-Miller","text":""},{"location":"algo/algebra/primality_check/#31-y-tuong","title":"3.1. \u00dd t\u01b0\u1edfng","text":"<p>Thu\u1eadt to\u00e1n Rabin-Miller l\u00e0 phi\u00ean b\u1ea3n m\u1edf r\u1ed9ng v\u00e0 m\u1ea1nh h\u01a1n c\u1ee7a ph\u00e9p th\u1eed Fermat. Thu\u1eadt to\u00e1n d\u1ef1a v\u00e0o nh\u1eadn x\u00e9t sau:</p> <p>V\u1edbi m\u1ecdi s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(x\\), ta t\u00ecm \u0111\u01b0\u1ee3c duy nh\u1ea5t hai s\u1ed1 t\u1ef1 nhi\u00ean \\(k,m\\) sao cho \\(x=2^k\\times m\\) v\u00e0 \\(m\\) l\u1ebb.</p> <p>V\u00ed d\u1ee5: \\(6=2^1\\times3,100=2^2\\times25, 9=2^0\\times9,\\ldots\\)</p> <p>Do \u0111\u00f3, x\u00e9t s\u1ed1 \\(n\\), ta c\u00f3 th\u1ec3 ph\u00e2n t\u00edch \\(n-1\\) th\u00e0nh \\(2^k\\times m\\), v\u1edbi \\(m\\) l\u00e0 s\u1ed1 l\u1ebb.</p> <p>Theo \u0111\u1ecbnh l\u00fd nh\u1ecf Fermat, n\u1ebfu \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec v\u1edbi m\u1ecdi \\(a\\) sao cho \\(\\gcd(a,n)=1\\) ta c\u00f3: </p> \\[ a^{n-1}\\equiv1\\mod{n}\\Leftrightarrow a^{2^k.m}-1\\equiv0\\mod{n} \\\\ \\Leftrightarrow \\left(a^{2^{k-1}m}+1\\right)\\left(a^{2^{k-2}m}+1\\right)\\ldots\\left(a^{m}+1\\right)\\left(a^m-1\\right)\\equiv0 \\mod{n} \\] <p>V\u00ec \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 n\u00ean t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t trong c\u00e1c nh\u00e2n t\u1eed c\u1ee7a v\u1ebf tr\u00e1i chia h\u1ebft cho \\(n\\). Do \u0111\u00f3, thay v\u00ec ki\u1ec3m tra k\u1ebft lu\u1eadn c\u1ee7a \u0111\u1ecbnh l\u00fd Fermat nh\u1ecf, ta s\u1ebd ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n sau:</p> <ul> <li>\\(a^m\\equiv1\\mod{n}\\) ho\u1eb7c</li> <li>T\u1ed3n t\u1ea1i \\(0\\le l \\le k-1\\) sao cho \\(a^{{2^l}m}\\equiv-1\\mod{n}\\)</li> </ul> <p>N\u1ebfu c\u1ea3 hai \u0111i\u1ec1u ki\u1ec7n kh\u00f4ng \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n th\u00ec ch\u1eafc ch\u1eafn \\(n\\) l\u00e0 h\u1ee3p s\u1ed1.</p> <p>Nh\u01b0ng n\u1ebfu c\u1ea3 hai \u0111i\u1ec1u ki\u1ec7n \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n th\u00ec \\(n\\) c\u00f3 ph\u1ea3i s\u1ed1 nguy\u00ean t\u1ed1 kh\u00f4ng?</p> <p>C\u00e2u tr\u1ea3 l\u1eddi l\u00e0 kh\u00f4ng. V\u00ed d\u1ee5: v\u1edbi \\(n=28,a=19\\) th\u00ec \\(n-1=2^0\\times27\\) v\u00e0 \\(19^{27}\\equiv-1\\mod{28}\\).</p> <p>Do \u0111\u00f3, \u0111\u1ec3 \u00e1p d\u1ee5ng \u00fd t\u01b0\u1edfng tr\u00ean, ta c\u00f3 th\u1ec3 tri\u1ec3n khai theo hai c\u00e1ch sau:</p>"},{"location":"algo/algebra/primality_check/#32-phep-thu-xac-suat-probabilistic","title":"3.2. Ph\u00e9p th\u1eed x\u00e1c su\u1ea5t (Probabilistic)","text":"<p>\u0110\u1ec3 t\u0103ng t\u00ednh ch\u00ednh x\u00e1c c\u1ee7a thu\u1eadt to\u00e1n ta c\u00f3 th\u1ec3 l\u1eb7p l\u1ea1i b\u01b0\u1edbc ki\u1ec3m tra v\u1edbi nhi\u1ec1u c\u01a1 s\u1ed1 \\(a\\), gi\u1ed1ng nh\u01b0 ph\u00e9p th\u1eed Fermat. H\u01a1n th\u1ebf n\u1eefa, ch\u1ee9ng minh \u0111\u01b0\u1ee3c n\u1ebfu \\(n\\) l\u00e0 h\u1ee3p s\u1ed1, ch\u1ec9 c\u00f3 \\(\\approx25\\%\\) s\u1ed1 c\u01a1 s\u1ed1 \\(a\\) trong \u0111o\u1ea1n \\(\\left[2,n-1\\right]\\) th\u1ecfa m\u00e3n m\u1ed9t trong hai \u0111i\u1ec1u ki\u1ec7n. </p> <p>Ngh\u0129a l\u00e0 v\u1edbi h\u1ee3p s\u1ed1 \\(n\\) b\u1ea5t k\u00ec, x\u00e1c su\u1ea5t \u0111\u1ec3 thu\u1eadt to\u00e1n ch\u1ee9ng minh \u0111\u01b0\u1ee3c \\(n\\) l\u00e0 h\u1ee3p s\u1ed1 sau l\u1ea7n ki\u1ec3m tra \u0111\u1ea7u ti\u00ean l\u00e0 \\(\\ge75\\%\\), l\u1ea7n th\u1ee9 hai l\u00e0 \\(\\ge93.75\\%\\), l\u1ea7n th\u1ee9 ba l\u00e0 \\(\\ge98.43\\%\\), l\u1ea7n th\u1ee9 \\(x\\) l\u00e0 \\(\\left(1-\\frac{1}{4^x}\\right)\\times 100\\%\\). C\u00f3 th\u1ec3 th\u1ea5y \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a thu\u1eadt to\u00e1n Rabin-Miller cao h\u01a1n nhi\u1ec1u so v\u1edbi ph\u00e9p th\u1eed Fermat, v\u00e0 t\u1ea5t nhi\u00ean l\u00e0 \u0111\u1ee7 t\u1ed1t cho c\u00e1c b\u00e0i to\u00e1n l\u1eadp tr\u00ecnh thi \u0111\u1ea5u.</p> <p>C\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n:</p> <p><pre><code>// T\u00ednh a^k mod n\nlong long binaryPower(long long a, long long k, long long n)\n{\n    a = a % n;\n    long long res = 1;\n    while (k)\n    {\n        if (k &amp; 1)\n            res = (res * a) % n;\n        a = (a * a) % n;\n        k /= 2;\n    }\n    return res;\n}\n\n// Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n thu\u1eadt to\u00e1n v\u1edbi a c\u1ed1 \u0111\u1ecbnh\nbool test(long long a, long long n, long long k, long long m)\n{\n    long long mod = binaryPower(a, m, n);\n    if (mod == 1 || mod == n - 1)\n            return true;\n    for (int l = 1; l &lt; k; ++l)\n    {\n        mod = (mod * mod) % n;\n        if (mod == n - 1)\n            return true;\n    }\n    return false;\n}\n\nbool RabinMiller(long long n)\n{\n    // Ki\u1ec3m tra v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb nh\u1ecf\n    if (n == 2 || n == 3 || n == 5 || n == 7)\n        return true;\n    if (n &lt; 11)\n        return false;\n\n    // T\u00ednh m v\u00e0 k\n    long long k = 0, m = n - 1;\n    while (m % 2 == 0)\n    {\n        m /= 2;\n        k++;\n    }\n\n    // L\u1eb7p l\u1ea1i b\u01b0\u1edbc ki\u1ec3m tra v\u1edbi a ng\u1eabu nhi\u00ean\n    const static int repeatTime = 3;\n    for (int i = 0; i &lt; repeatTime; ++i)\n    {\n        long long a = rand() % (n - 3) + 2;\n        if (!test(a, n, k, m))\n            return false;\n    }\n    return true;\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}\\left(c\\log{n}\\right)\\).</p>"},{"location":"algo/algebra/primality_check/#33-thuat-toan-on-inh-deterministic","title":"3.3. Thu\u1eadt to\u00e1n \u0111\u01a1n \u0111\u1ecbnh (Deterministic)","text":"<p>Ph\u00e9p th\u1eed x\u00e1c su\u1ea5t c\u00f3 th\u1ec3 tr\u1edf th\u00e0nh thu\u1eadt to\u00e1n b\u1eb1ng c\u00e1ch thay v\u00ec x\u00e9t \\(a\\) ng\u1eabu nhi\u00ean, ta s\u1ebd x\u00e9t t\u1ea5t c\u1ea3 \\(a\\) b\u1ecb ch\u1eb7n b\u1edfi m\u1ed9t h\u00e0m theo \\(n\\). Miller ch\u1ee9ng minh \u0111\u01b0\u1ee3c n\u1ebfu \u0110\u1ecbnh \u0111\u1ec1 Riemann t\u1ed5ng qu\u00e1t (GRH) l\u00e0 \u0111\u00fang th\u00ec ta ch\u1ec9 c\u1ea7n ki\u1ec3m tra \\(a\\in\\left[2,\\mathcal{O}\\left(\\ln^2 n\\right)\\right]\\). Sau \u0111\u00f3, Bach ch\u1ee9ng minh \u0111\u01b0\u1ee3c ch\u1ec9 c\u1ea7n x\u00e9t \\(a\\in\\left[2,2\\ln^2 n\\right]\\).</p> <p>V\u1edbi \\(n\\) \u0111\u1ee7 l\u1edbn th\u00ec v\u1eabn c\u00f3 r\u1ea5t nhi\u1ec1u gi\u00e1 tr\u1ecb c\u1ea7n ki\u1ec3m tra. Nh\u01b0ng ng\u01b0\u1eddi ta c\u0169ng ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng:</p> <ul> <li>N\u1ebfu \\(n\\le 3.10^9\\), ch\u1ec9 c\u1ea7n x\u00e9t \\(a\\in\\{2;3;5;7\\}\\)</li> <li>N\u1ebfu \\(n\\le 2^{64}\\), ch\u1ec9 c\u1ea7n x\u00e9t \\(a\\in\\{2;3;5;7;11;13;17;19;23;29;31;37\\}\\)</li> </ul> <p>Do \u0111\u00f3, ta c\u00f3 phi\u00ean b\u1ea3n thu\u1eadt to\u00e1n (\u0111\u1ed9 ch\u00ednh x\u00e1c \\(100\\%\\)) c\u1ee7a ph\u00e9p th\u1eed nh\u01b0 sau:</p> <pre><code>bool MillerRabin(long long n)\n{\n    if (n == 2 || n == 3 || n == 5 || n == 7)\n        return true;\n    if (n &lt; 11)\n        return false;\n\n    long long k = 0, m = n - 1;\n    while (m % 2 == 0)\n    {\n        m /= 2;\n        k++;\n    }\n\n    static vector&lt;int&gt; checkSet = {2,3,5,7,11,13,17,19,23,29,31,37};\n    for (auto a : checkSet)\n        if (!test(a, n, k, m))\n            return false;\n    return true;\n}\n</code></pre>"},{"location":"algo/algebra/primality_check/#4-bai-tap-luyen-tap","title":"4. B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp:","text":"<ul> <li>SPOJ - Prime Or Not</li> </ul>"},{"location":"algo/algebra/primality_check/#5-tham-khao","title":"5. Tham kh\u1ea3o:","text":"<ul> <li>CP Algorithm - Primality Test</li> <li>Wikipedia - Primality Miller-Rabin test</li> <li>Wikipedia - Primality test</li> <li>Wikipedia - Carmichael numbers</li> </ul>"},{"location":"algo/algebra/prime_sieve/","title":"S\u00e0ng nguy\u00ean t\u1ed1","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: - Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN</p> <p>Reviewer: - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN - Cao Thanh H\u1eadu - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p> <p>Khi c\u1ea7n t\u00ecm ra c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\), ta c\u00f3 th\u1ec3 duy\u1ec7t t\u1eebng s\u1ed1 v\u00e0 ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a n\u00f3. V\u00e0 \u00fd t\u01b0\u1edfng \u0111\u00f3 cho ta m\u1ed9t thu\u1eadt to\u00e1n \\(\\boldsymbol{O\\left(n\\sqrt n\\right)}\\).</p> <p>Tuy nhi\u00ean, m\u1ed9t nh\u00e0 to\u00e1n h\u1ecdc c\u1ed5 Hy L\u1ea1p t\u00ean l\u00e0 Eratosthenes \u0111\u00e3 \"ph\u00e1t minh\" ra m\u1ed9t \"thu\u1eadt to\u00e1n\" hi\u1ec7u qu\u1ea3 h\u01a1n. Ban \u0111\u1ea7u, Eratosthenes \u0111\u00e3 l\u1ea5y l\u00e1 c\u1ecd v\u00e0 ghi t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 t\u1eeb \\(2\\) cho \u0111\u1ebfn \\(100\\). Sau \u0111\u00f3, \u00f4ng \u0111\u00e3 ch\u1ecdc th\u1ee7ng c\u00e1c h\u1ee3p s\u1ed1 v\u00e0 gi\u1eef nguy\u00ean c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1. B\u1ea3ng s\u1ed1 nguy\u00ean t\u1ed1 c\u00f2n l\u1ea1i tr\u00f4ng r\u1ea5t gi\u1ed1ng m\u1ed9t c\u00e1i s\u00e0ng. Cho \u0111\u1ebfn ng\u00e0y nay, \"thu\u1eadt to\u00e1n\" n\u00e0y \u0111\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn r\u1ed9ng r\u00e3i v\u1edbi c\u00e1i t\u00ean s\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes.</p>"},{"location":"algo/algebra/prime_sieve/#sang-nguyen-to-eratosthenes-sieve-of-eratosthenes","title":"S\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes (Sieve of Eratosthenes)","text":""},{"location":"algo/algebra/prime_sieve/#huong-tiep-can","title":"H\u01b0\u1edbng ti\u1ebfp c\u1eadn","text":"<ul> <li>Ban \u0111\u1ea7u, ta cho t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 t\u1eeb \\(2\\) \u0111\u1ebfn \\(n\\) v\u00e0o s\u00e0ng v\u00e0 \u0111\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1. (C\u00e1c s\u1ed1 kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u sau c\u00f9ng s\u1ebd b\u1ecb lo\u1ea1i kh\u1ecfi s\u00e0ng).</li> <li>Duy\u1ec7t l\u1ea7n l\u01b0\u1ee3t c\u00e1c s\u1ed1 t\u1eeb \\(2\\) \u0111\u1ebfn \\(n\\). N\u1ebfu s\u1ed1 \u0111ang x\u00e9t:<ul> <li>\u0110\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u \\(\\Rightarrow\\) s\u1ed1 nguy\u00ean t\u1ed1: ta b\u1ecf \u0111\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c b\u1ed9i (kh\u00e1c ch\u00ednh n\u00f3) c\u1ee7a s\u1ed1 nguy\u00ean t\u1ed1 n\u00e0y \u0111\u1ec3 lo\u1ea1i c\u00e1c b\u1ed9i \u1ea5y ra kh\u1ecfi s\u00e0ng. </li> <li>Kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u \\(\\Rightarrow\\) h\u1ee3p s\u1ed1: ta b\u1ecf qua s\u1ed1 n\u00e0y.</li> </ul> </li> <li>Sau khi duy\u1ec7t xong, c\u00e1c s\u1ed1 c\u00f2n l\u1ea1i trong s\u00e0ng, hay n\u00f3i c\u00e1ch kh\u00e1c c\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</li> </ul> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 h\u00ecnh minh h\u1ecda cho thu\u1eadt to\u00e1n tr\u00ean. Ngu\u1ed3n: CP-Algorithm </p>"},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>const int maxn = 1000000 + 5; //10^6 + 5\nbool is_prime[maxn]; // m\u1ea3ng bool kh\u1edfi t\u1ea1o v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb false\nvoid sieve(int n){\n    // \u0110\u00e1nh d\u1ea5u c\u00e1c s\u1ed1 t\u1eeb 2 \u0111\u1ebfn n \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n    for (int i = 2; i &lt;= n; i++)\n        is_prime[i] = true;\n    for (int i = 2; i &lt;= n; i++) {\n        if (is_prime[i]) {\n            for (int j = i * 2; j &lt;= n; j += i)\n            // B\u1ecf \u0111\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 kh\u00f4ng ph\u1ea3i s\u1ed1 nguy\u00ean t\u1ed1\n                is_prime[j] = false;\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O\\left( n \\times \\left(\\dfrac{1}{2} + \\dfrac{1}{3} +\\ldots+\\dfrac{1}{p} \\right) \\right)\\) v\u1edbi \\(p\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 \\(\\le  n\\).  \u0110\u1ebfn \u0111\u00e2y, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o \u0110\u1ecbnh l\u00fd Merten 2 \u0111\u1ec3 r\u00fat g\u1ecdn \u0111\u1ed9 ph\u1ee9c t\u1ea1p: \\(\\(O\\left( n \\times \\left(\\dfrac{1}{2} + \\dfrac{1}{3} +\\ldots+\\dfrac{1}{p} \\right) \\right) = O( n \\log (\\log n))\\)\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O(n \\log \\log n)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O(n)}\\)</p> <p>Nh\u1eadn x\u00e9t:  X\u00e9t \\(X = k \\cdot p\\) l\u00e0 b\u1ed9i c\u1ee7a s\u1ed1 nguy\u00ean t\u1ed1 \\(p\\). N\u1ebfu nh\u01b0 \\(p &lt; X &lt; p^2\\), ta c\u00f3 \\(1 &lt; k &lt; p\\). Ta suy ra \\(k\\) ph\u1ea3i c\u00f3 m\u1ed9t \u01b0\u1edbc nguy\u00ean t\u1ed1 nh\u1ecf h\u01a1n \\(p\\). V\u00ec th\u1ebf, \\(X = k \\cdot p\\) \u0111\u00e3 b\u1ecb s\u00e0ng lo\u1ea1i \u0111i trong c\u00e1c v\u00f2ng l\u1eb7p tr\u01b0\u1edbc \u0111\u00f3 v\u00e0 ta ch\u1ec9 c\u1ea7n x\u00e9t \\(\\boldsymbol{X \\ge p^2}\\).</p> <p>D\u1ef1a v\u00e0o Nh\u1eadn x\u00e9t tr\u00ean, ta c\u00f3 c\u1ea3i ti\u1ebfn nh\u01b0 sau: <pre><code>const int maxn = 1000000 + 5; //10^6 + 5\nbool is_prime[maxn];\nvoid Eratosthenes(int n){\n    for (int i = 2; i &lt;= n; i++)\n        is_prime[i] = true;\n    for (int i = 2; i * i &lt;= n; i++) {\n        if (is_prime[i]) {\n            // j s\u1ebd b\u1eaft \u0111\u1ea7u ch\u1ea1y t\u1eeb i * i\n            for (int j = i * i; j &lt;= n; j += i)\n                is_prime[j] = false;\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian sau khi c\u1ea3i ti\u1ebfn v\u1eabn l\u00e0 \\(\\boldsymbol{O(n \\log \\log n)}\\). Tuy nhi\u00ean, s\u1ed1 ph\u00e9p t\u00ednh \u0111\u00e3 gi\u1ea3m \u0111i \u0111\u00e1ng k\u1ec3.</p> <p>L\u01b0u \u00fd: - Trong \u0111o\u1ea1n code tr\u00ean, v\u00ec \\(j\\) ch\u1ea1y t\u1eeb \\(i\\times i\\) \u0111\u1ebfn \\(n\\), n\u00ean \\(i\\) ch\u1ec9 ch\u1ea1y t\u1eeb \\(1\\) \u0111\u1ebfn \\(\\sqrt n\\). Ngo\u00e0i ra, \u1edf \u0111\u00e2y, ta s\u1eed d\u1ee5ng \u0111i\u1ec1u ki\u1ec7n <code>i * i &lt;= n</code> thay v\u00ec s\u1eed d\u1ee5ng <code>i &lt;= sqrt(n)</code> b\u1edfi h\u00e0m <code>sqrt()</code> ch\u1ea1y l\u00e2u h\u01a1n so v\u1edbi ph\u00e9p nh\u00e2n s\u1ed1 nguy\u00ean. - N\u1ebfu v\u1eabn mu\u1ed1n s\u1eed d\u1ee5ng h\u00e0m <code>sqrt()</code>, ta ph\u1ea3i tr\u00e1nh vi\u1ec7c ph\u1ea3i t\u00ednh l\u1ea1i <code>sqrt(n)</code> m\u1ed7i l\u1ea7n l\u1eb7p:</p> <pre><code>    int nsqrt = sqrt(n);\n    for (int i = 2; i &lt;= nsqrt; i++) \n</code></pre> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 h\u00ecnh minh h\u1ecda cho c\u1ea3i ti\u1ebfn tr\u00ean. Ngu\u1ed3n: Wikipedia</p> <p></p>"},{"location":"algo/algebra/prime_sieve/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/algebra/prime_sieve/#phan-tich-thua-so-nguyen-to","title":"Ph\u00e2n t\u00edch th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1","text":""},{"location":"algo/algebra/prime_sieve/#phan-tich-so-nguyen-nho","title":"Ph\u00e2n t\u00edch s\u1ed1 nguy\u00ean nh\u1ecf","text":"<p>Khi ph\u00e2n t\u00edch c\u00e1c s\u1ed1 nh\u1ecf \\(i \\approx 10^6\\), thay v\u00ec l\u01b0u k\u1ebft qu\u1ea3 ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a \\(i\\) \u1edf m\u1ea3ng <code>is_prime[i]</code>, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng <code>min_prime[i]</code> l\u01b0u \u01b0\u1edbc nguy\u00ean t\u1ed1 nh\u1ecf nh\u1ea5t c\u1ee7a s\u1ed1 <code>i</code>.</p> <p><pre><code>const int maxn = 1000000 + 5; //10^6 + 5\nint min_prime[maxn];\nvoid sieve(int n){\n    for (int i = 2; i * i &lt;= n; ++i) {\n        if (min_prime[i] == 0) { //n\u1ebfu i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n            for (int j = i * i; j &lt;= n; j += i) {\n                if (min_prime[j] == 0) {\n                    min_prime[j] = i;\n                }\n            }\n        }\n    }\n    for (int i = 2; i &lt;= n; ++i) {\n        if (min_prime[i] == 0) {\n            min_prime[i] = i;\n        }\n    }\n}\n</code></pre> B\u00e2y gi\u1edd ta c\u00f3 th\u1ec3 ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1: <pre><code>vector&lt;int&gt; factorize(int n) {\n    vector&lt;int&gt; res;\n    while (n != 1) {\n        res.push_back(minPrime[n]);\n        n /= minPrime[n];\n    }\n    return res;\n}\n</code></pre> M\u1ed7i l\u1ea7n ta chia \\(n\\) cho \u01b0\u1edbc nguy\u00ean t\u1ed1 nh\u1ecf nh\u1ea5t \\(\\text{min_prime}[n]\\) \u0111\u1ebfn khi n\u00e0o \\(n\\) gi\u1ea3m v\u1ec1 \\(1\\). Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t th\u00ec m\u1ed7i l\u1ea7n chia \\(\\text{min_prime}[n]\\) \u0111\u1ec1u b\u1eb1ng \\(2\\). V\u00ec v\u1eady, h\u00e0m ph\u00e2n t\u00edch tr\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t l\u00e0 \\(\\boldsymbol{O(\\log n)}\\). </p> <p>Tuy nhi\u00ean, ph\u01b0\u01a1ng ph\u00e1p n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian \\(\\boldsymbol{O(n)}\\) v\u00e0 th\u01b0\u1eddng s\u1eed d\u1ee5ng trong tr\u01b0\u1eddng h\u1ee3p c\u1ea7n ph\u00e2n t\u00edch nhi\u1ec1u s\u1ed1 nguy\u00ean ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1.</p> <p>\u0110\u1eb7c bi\u1ec7t, khi ph\u00e2n t\u00edch t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\), t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u1ec9 c\u00f2n l\u1ea1i \\(\\boldsymbol{O(n\\log\\log n)}\\).</p> Ch\u1ee9ng minh t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi ph\u00e2n t\u00edch t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1eeb 1 \u0111\u1ebfn n <p> X\u00e9t s\u1ed1 nguy\u00ean t\u1ed1 $p$ v\u00e0 h\u00e0m \u0111\u1ecbnh gi\u00e1 $p$-adic: $v_p(n)$ l\u00e0 s\u1ed1 nguy\u00ean l\u1edbn nh\u1ea5t th\u1ecfa m\u00e3n $p^{v_p(n)} | n$. N\u00f3i c\u00e1ch kh\u00e1c $v_p(n)$ l\u00e0 s\u1ed1 th\u1eeba s\u1ed1 $p$ nh\u1eadn \u0111\u01b0\u1ee3c khi ph\u00e2n t\u00edch $n$ ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1.  Theo \u0111\u1ecbnh l\u00fd Legendre, ta c\u00f3: $$ v_p\\left(n!\\right) = \\left\\lfloor {\\dfrac{n}{{{p^1}}}} \\right\\rfloor + \\left\\lfloor {\\dfrac{n}{{{p^2}}}} \\right\\rfloor + \\left\\lfloor {\\dfrac{n}{{{p^3}}}} \\right\\rfloor + \\ldots &lt; \\dfrac{n}{{{p^1}}} + \\dfrac{n}{{{p^2}}} + \\dfrac{n}{{{p^3}}} + \\ldots = \\dfrac{n}{p-1}$$  Nh\u01b0 v\u1eady, vi\u1ec7c ph\u00e2n t\u00edch t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1eeb $1$ \u0111\u1ebfn $n$ c\u0169ng nh\u01b0 vi\u1ec7c ph\u00e2n t\u00edch $n!$ cho ta t\u1ed5ng c\u1ed9ng t\u1ed1i \u0111a  $$\\sum\\limits_{p\\text{ nguy\u00ean t\u1ed1}} v_p\\left(n!\\right) &lt; \\sum\\limits_{p\\text{ nguy\u00ean t\u1ed1}} \\dfrac{n}{p-1} \\sim n\\ln \\ln n + n + O(1) \\text{ th\u1eeba s\u1ed1}$$ </p>"},{"location":"algo/algebra/prime_sieve/#phan-tich-so-nguyen-lon-hon","title":"Ph\u00e2n t\u00edch s\u1ed1 nguy\u00ean l\u1edbn h\u01a1n","text":"<p>Nh\u1eadn x\u00e9t: N\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean trong \u0111o\u1ea1n \\(\\left[ 2;\\sqrt{n} \\right]\\) \u0111\u1ec1u kh\u00f4ng ph\u1ea3i l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\) th\u00ec \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> <p>D\u1ef1a v\u00e0o <code>Nh\u1eadn x\u00e9t</code> tr\u00ean, \u0111\u1ec3 ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 nguy\u00ean \\(n\\) l\u1edbn (kho\u1ea3ng \\(10^9\\) hay \\(10^{12}\\)), ta x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\boldsymbol{O \\left(\\sqrt n \\right)}\\) d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>vector&lt;long long&gt; factorize(long long n) {\n    vector&lt;long long&gt; res;\n    for (long long i = 2; i * i &lt;= n; i++){\n        while (n % i == 0){\n            res.push_back(i);\n            n /= i;\n        }\n    }\n    if (n &gt; 1) res.push_back(n);\n    return res;\n}\n</code></pre> <p>\u0110\u1ebfn \u0111\u00e2y, ta d\u1ec5 d\u00e0ng t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t c\u00e1ch c\u1ea3i ti\u1ebfn thu\u1eadt to\u00e1n n\u00e0y: ta ch\u1ec9 c\u1ea7n x\u00e9t c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n \\(\\left[ 2;\\sqrt{n} \\right]\\). Th\u1eadt v\u1eady, n\u1ebfu \\(n\\) kh\u00f4ng chia h\u1ebft cho s\u1ed1 nguy\u00ean t\u1ed1 \\(p\\) th\u00ec ch\u1eafc ch\u1eafn \\(n\\) s\u1ebd kh\u00f4ng chia h\u1ebft cho b\u1ed9i c\u1ee7a \\(p\\).</p> <p>Tr\u01b0\u1edbc h\u1ebft, ta t\u1ea1o m\u1ea3ng c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n \\(\\left[ 2;\\sqrt{n} \\right]\\). Sau \u0111\u00f3, ch\u00fang ta l\u00e0m nh\u01b0 sau: <pre><code>vector&lt;int&gt; primes;\n\nvector&lt;long long&gt; factorize(long long n) {\n    vector&lt;long long&gt; res;\n    for (int p : primes){\n        if (1LL * p * p &gt; n) break;\n        while (n % p == 0){\n            res.push_back(p);\n            n /= p;\n        }\n    }\n    if (n &gt; 1) res.push_back(n);\n    return res;\n}\n</code></pre></p> <p>Ph\u00e2n t\u00edch s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t l\u00e0 \\(\\boldsymbol{O \\left(\\pi \\left( \\sqrt n \\right)\\right) \\sim O \\left( \\dfrac{\\sqrt n}{\\log\\log n}\\right)}\\). Trong \u0111\u00f3 \\(\\pi\\left( x \\right)\\) l\u00e0 s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n \\(\\left[ 2;x \\right]\\). B\u1ea1n \u0111\u1ecdc tham kh\u1ea3o th\u00eam h\u00e0m n\u00e0y \u1edf ph\u1ea7n M\u1edf r\u1ed9ng c\u1ee7a b\u00e0i vi\u1ebft.</p>"},{"location":"algo/algebra/prime_sieve/#tim-so-nguyen-to-trong-oan-l-r","title":"T\u00ecm s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n [L; R]","text":"<p>\u0110\u00f4i khi b\u1ea1n ph\u1ea3i t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 kh\u00f4ng ph\u1ea3i tr\u00ean \u0111o\u1ea1n \\([1;N]\\) m\u00e0 l\u00e0 tr\u00ean \u0111o\u1ea1n \\([L;R]\\) c\u00f3 k\u00edch th\u01b0\u1edbc nh\u1ecf nh\u01b0ng \\(R\\) l\u1edbn. V\u00ed d\u1ee5 nh\u01b0 \\(R - L + 1 \\approx 1e6\\) v\u00e0 \\(R \\approx 10^{12}\\).</p> <p>Ta \u0111\u1eb7t \\(N = R - L + 1\\) l\u00e0 \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n \\([L;R]\\) \u0111\u1ec3 ti\u1ec7n theo d\u00f5i.</p> <p>\u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, ta s\u1ebd chu\u1ea9n b\u1ecb tr\u01b0\u1edbc m\u1ed9t m\u1ea3ng g\u1ed3m c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n \\(\\left[ 1;\\sqrt R \\right]\\). Sau \u0111\u00f3, d\u00f9ng c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u00f3 \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u trong \u0111o\u1ea1n \\([L; R]\\).</p> <pre><code>vector&lt;bool&gt; sieve(long long L, long long R) {\n    long long sqrtR = sqrt(R);\n    vector&lt;bool&gt; mark(sqrtR + 1, false);\n    vector&lt;long long&gt; primes;\n    // sinh ra c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 &lt;= sqrt(R)\n    for (long long i = 2; i &lt;= sqrtR; ++i) {\n        if (!mark[i]) {\n            primes.push_back(i);\n            for (long long j = i * i; j &lt;= sqrtR; j += i)\n                mark[j] = true;\n        }\n    }\n\n    vector&lt;bool&gt; isPrime(R - L + 1, true);\n    for (long long i : primes)\n        for (long long j = max(i * i, (L + i - 1) / i * i); j &lt;= R; j += i)\n            isPrime[j - L] = false;\n    if (L == 1)\n        isPrime[0] = false;\n    return isPrime;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O \\left( N \\log \\log (R) + \\sqrt R \\log \\log \\sqrt R \\right)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O \\left( N + \\sqrt R \\right)}\\)</p> <p>Trong \u0111\u00f3: - T\u00ecm c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n \\(\\left[ 1;\\sqrt R \\right]\\) m\u1ea5t \\(O \\left( \\sqrt R \\log \\log \\sqrt R \\right)\\). - D\u00f9ng c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u00f3 \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u trong \u0111o\u1ea1n \\([L; R]\\) m\u1ea5t \\(O \\left( N \\log \\log R \\right)\\).</p> <p>Ta c\u0169ng kh\u00f4ng c\u1ea7n ph\u1ea3i sinh tr\u01b0\u1edbc c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong \u0111o\u1ea1n \\(\\left[ 1;\\sqrt R \\right]\\):</p> <p><pre><code>vector&lt;bool&gt; is_prime;\nvoid sieve(int L, int R){\n    is_prime.assign(R - L + 1, true); \n    // x l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 khi v\u00e0 ch\u1ec9 khi is_prime[x - l] == true\n\n    for (long long i = 2; i * i &lt;= R; ++i) {\n    // L\u01b0u \u00fd: (L + i - 1) / i * i l\u00e0 b\u1ed9i nh\u1ecf nh\u1ea5t c\u1ee7a i m\u00e0 &gt;= L\n        for (long long j = max(i * i, (L + i - 1) / i * i); j &lt;= R; j += i) {\n            is_prime[j - L] = false;\n        }\n    }\n\n    if (1 &gt;= L) {  // X\u00e9t ri\u00eang tr\u01b0\u1eddng h\u1ee3p s\u1ed1 1\n        is_prime[1 - L] = false;\n    }\n\n    for (long long x = L; x &lt;= R; ++x) {\n        if (is_prime[x - L]) {\n            // x l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian s\u1ebd t\u1ec7 h\u01a1n : \\(\\boldsymbol{O(N \\log (R) + \\sqrt R)}\\).  Tuy nhi\u00ean, ta l\u1ea1i \u0111\u01b0\u1ee3c l\u1ee3i th\u1ebf h\u01a1n v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O \\left( N \\right)}\\).</p> <p>Nguy\u00ean nh\u00e2n l\u00e0 ta d\u00f9ng t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean trong \u0111o\u1ea1n \\(\\left[ 2;\\sqrt R \\right]\\) \u0111\u00f3 \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u trong \u0111o\u1ea1n \\([L; R]\\) n\u00ean s\u1ebd m\u1ea5t \\(O \\left( (R - L + 1) \\cdot \\left(\\dfrac{1}{2} + \\dfrac{1}{3} + \\dfrac{1}{4} + \\ldots + \\dfrac{1}{\\left\\lfloor \\sqrt R \\right\\rfloor} \\right) \\right) = O \\left( N \\log (R) \\right)\\).</p>"},{"location":"algo/algebra/prime_sieve/#mot-so-vi-du","title":"M\u1ed9t s\u1ed1 v\u00ed d\u1ee5","text":"<p>VNOI - Phi h\u00e0m Euler T\u00f3m t\u1eaft \u0111\u1ec1:  Cho s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(T\\) v\u00e0 \\(T\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(n_i\\). H\u00e3y t\u00ednh phi h\u00e0m \\(\\varphi(n_i)\\) c\u1ee7a \\(T\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \u0111\u00e3 cho. \\(\\(\\varphi(n) = p_1^{\\alpha_1 - 1}p_2^{\\alpha_2 - 1} \\ldots p_k^{\\alpha_k - 1} (p_1-1)(p_2 - 1) \\ldots (p_k - 1)\\)\\)</p> G\u1ee3i \u00fd <p> Gi\u1ea3 s\u1eed khi ph\u00e2n t\u00edch ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1, $n = p_1^{\\alpha_1}p_2^{\\alpha_2} \\ldots p_k^{\\alpha_k}$ v\u1edbi $\\alpha_i &gt; 0$. Khi \u0111\u00f3:  $$\\varphi(n) = p_1^{\\alpha_1 - 1}p_2^{\\alpha_2 - 1} \\ldots p_k^{\\alpha_k - 1} (p_1-1)(p_2 - 1) \\ldots (p_k - 1)$$ </p> L\u1eddi gi\u1ea3i <p> $$ \\varphi(n) = p_1^{\\alpha_1 - 1} . p_2^{\\alpha_2 - 1} \\ldots p_k^{\\alpha_k - 1} . (p_1-1)(p_2 - 1) \\ldots (p_k - 1) = n \\dfrac{p_1-1}{p_1} \\dfrac{p_2-1}{p_2} \\ldots \\dfrac{p_k-1}{p_k}$$  D\u1ef1a v\u00e0o c\u00f4ng th\u1ee9c tr\u00ean, \u0111\u1ea7u ti\u00ean ta s\u1ebd g\u00e1n <code>f[i] = i</code>. Sau \u0111\u00f3, ta ch\u1ec9 c\u1ea7n duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1. V\u1edbi m\u1ed7i s\u1ed1 nguy\u00ean t\u1ed1 <code>p</code>, ta s\u1ebd duy\u1ec7t c\u00e1c b\u1ed9i <code>j</code> c\u1ee7a ch\u00fang, r\u1ed3i nh\u00e2n <code>f[j]</code> v\u1edbi $\\dfrac{p-1}{p}$ </p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int maxn = 1e6;\nint ntest, f[maxn + 5];\n\nint main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n    for (int i = 1; i &lt;= maxn; i++){\n        f[i] = i;\n    }\n    for (int i = 2; i &lt;= maxn; i++){\n        if (f[i] == i){\n            for (int j = i; j &lt;= maxn; j += i){\n                f[j] = f[j] / i * (i-1);\n            }\n        }\n    }\n    cin &gt;&gt; ntest;\n    while (ntest--){\n        int n;\n        cin &gt;&gt; n;\n        cout &lt;&lt; f[n] &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/algebra/prime_sieve/#mot-so-cai-tien-cua-sang-nguyen-to-eratosthenes","title":"M\u1ed9t s\u1ed1 c\u1ea3i ti\u1ebfn c\u1ee7a s\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes","text":"<p>S\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes v\u1edbi \u0110PT th\u1eddi gian \\(\\boldsymbol{O(n \\log \\log n)}\\) \u0111\u00e3 kh\u00e1 ph\u00f9 h\u1ee3p v\u1edbi h\u1ea7u h\u1ebft c\u00e1c b\u00e0i to\u00e1n l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. Tuy nhi\u00ean \u0111i\u1ec3m y\u1ebfu ch\u00ed m\u1ea1ng c\u1ee7a n\u00f3 ch\u00ednh l\u00e0 \u0110PT kh\u00f4ng gian \\(\\boldsymbol{O(n)}\\). M\u1ed9t s\u1ed1 c\u1ea3i ti\u1ebfn d\u01b0\u1edbi \u0111\u00e2y c\u00f3 th\u1ec3 kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi nh\u1eefng b\u1ea1n m\u1edbi ch\u1ec9 bi\u1ebft \u0111\u1ebfn s\u00e0ng nguy\u00ean t\u1ed1. C\u00e1c b\u1ea1n h\u00e3y luy\u1ec7n t\u1eadp v\u1edbi c\u00e1c b\u00e0i t\u1eadp luy\u1ec7n t\u1eadp tr\u01b0\u1edbc khi \u0111\u1ebfn v\u1edbi c\u00e1c c\u1ea3i ti\u1ebfn b\u00ean d\u01b0\u1edbi nha!</p>"},{"location":"algo/algebra/prime_sieve/#so-sanh-mang-bool-va-vector","title":"So s\u00e1nh m\u1ea3ng bool v\u00e0 vector <ul> <li>M\u1ed9t bi\u1ebfn <code>bool</code> ch\u1ec9 c\u00f3 hai gi\u00e1 tr\u1ecb <code>true/false</code> n\u00ean v\u1ec1 m\u1eb7t l\u00fd thuy\u1ebft ch\u1ec9 c\u1ea7n 1 bit \u0111\u1ec3 l\u01b0u tr\u1eef n\u00f3. Nh\u01b0ng b\u00ecnh th\u01b0\u1eddng, c\u00e1c m\u00e1y t\u00ednh hi\u1ec7n nay khi l\u01b0u tr\u1eef bi\u1ebfn <code>bool</code> s\u1ebd s\u1eed d\u1ee5ng \\(1\\) byte (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \\(8\\) bits) \u0111\u1ec3 truy c\u1eadp nhanh ch\u00f3ng. V\u00ec th\u1ebf m\u1ed9t m\u1ea3ng <code>bool a[n]</code> s\u1ebd c\u1ea7n \u0111\u1ebfn \\(n\\) bytes.</li> <li><code>vector&lt;bool&gt;</code> \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u \u0111\u1ec3 l\u01b0u tr\u1eef \\(1\\) bi\u1ebfn <code>bool</code> trong \\(1\\) bit thay v\u00ec \\(1\\) byte, ngo\u00e0i ra c\u00f2n c\u00f3 \\(40\\) bytes s\u1eed d\u1ee5ng cho kh\u1edfi t\u1ea1o <code>vector&lt;bool&gt;</code> ban \u0111\u1ea7u. Tuy nhi\u00ean, vi\u1ec7c t\u1ed1i \u01b0u v\u1ec1 b\u1ed9 nh\u1edb khi\u1ebfn ta ph\u1ea3i truy c\u1eadp bit m\u1ed9t c\u00e1c gi\u00e1n ti\u1ebfp: m\u1ed7i l\u1ea7n truy c\u1eadp, \u0111\u1ecdc, ghi bit ta c\u1ea7n t\u00e1ch nh\u1ecf t\u1eebng bit c\u1ee7a byte \u0111\u00f3. Trong tr\u01b0\u1eddng h\u1ee3p b\u1ed9 d\u1eef li\u1ec7u nh\u1ecf (kho\u1ea3ng \\(10^6\\)), truy c\u1eadp nh\u01b0 v\u1eady s\u1ebd ch\u1eadm h\u01a1n so v\u1edbi vi\u1ec7c truy c\u1eadp tr\u1ef1c ti\u1ebfp.</li> <li>T\u00f3m l\u1ea1i, ta c\u00f3 b\u1ea3ng d\u01b0\u1edbi \u0111\u00e2y</li> </ul>     bool a[n] vector     Kh\u00f4ng gian l\u01b0u tr\u1eef \\(n\\) bytes \\(40 + \\left\\lceil\\dfrac{n}{8}\\right\\rceil\\) bytes   Truy c\u1eadp, \u0111\u1ecdc, ghi bit Tr\u1ef1c ti\u1ebfp Gi\u00e1n ti\u1ebfp","text":""},{"location":"algo/algebra/prime_sieve/#chi-sang-so-le","title":"Ch\u1ec9 s\u00e0ng s\u1ed1 l\u1ebb <p>M\u1ed9t c\u1ea3i ti\u1ebfn kh\u00e1c c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u00f3 l\u00e0 ch\u1ec9 ti\u1ebfn h\u00e0nh ki\u1ec3m tra v\u1edbi s\u1ed1 l\u1ebb (s\u1ed1 ch\u1eb5n ch\u1ec9 c\u00f3 \\(2\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1). \u0110i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3m c\u1ea3 kh\u00f4ng gian \u0111\u1ec3 l\u01b0u tr\u1eef l\u1eabn s\u1ed1 b\u01b0\u1edbc t\u00ednh to\u00e1n \u0111i m\u1ed9t n\u1eeda.</p>","text":""},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa_1","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>vector&lt;bool&gt; is_prime;\nvoid sieve_odd(int n){\n    is_prime.assign(n / 2 + 1, true);\n    //is_prime[t] = true ngh\u0129a l\u00e0 2*t+1 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n    is_prime[0] = false;\n    for (int t = 1; t * t &lt;= n / 4; t++) {\n        int i = 2 * t + 1;\n        if (is_prime[t]){\n            for (int j = i * i; j &lt;= n; j += i * 2)\n                is_prime[j / 2] = false;\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O\\left(\\dfrac{n}{2} \\cdot \\log \\log n\\right)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O\\left(\\dfrac{n}{2}\\right)}\\)</p>"},{"location":"algo/algebra/prime_sieve/#su-dung-bitset","title":"S\u1eed d\u1ee5ng bitset <p>Trong C++, <code>std::bitset</code> l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 h\u1eefu hi\u1ec7u trong vi\u1ec7c l\u01b0u tr\u1eef v\u00e0 x\u1eed l\u00fd d\u00e3y nh\u1ecb ph\u00e2n. <code>std::bitset</code> s\u1eed d\u1ee5ng c\u00e1ch l\u01b0u bit t\u01b0\u01a1ng t\u1ef1 <code>std::vector&lt;bool&gt;</code> v\u00e0 nhanh h\u01a1n <code>std::vector&lt;bool&gt;</code> m\u1ed9t ch\u00fat. Tuy nhi\u00ean k\u00edch th\u01b0\u1edbc <code>MAX</code> c\u1ee7a <code>std::bitset&lt;MAX&gt;</code> ph\u1ea3i \u0111\u01b0\u1ee3c bi\u1ebft l\u00fac bi\u00ean d\u1ecbch.</p>","text":""},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa_2","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>const int maxn = 1e6;\nbitset&lt;maxn + 1&gt; is_prime;\nvoid sieve_bitset(int n){\n    is_prime.set(); // g\u00e1n t\u1ea5t c\u1ea3 c\u00e1c bit l\u00e0 true\n    is_prime[0] = is_prime[1] = 0;\n    for (int i = 2; i*i &lt;= n; i = is_prime._Find_next(i)) {\n        if (is_prime[i]) {\n            for (int j = i*i; j &lt;= n; j += i) {\n                is_prime[j] = 0;\n            }\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O(n \\log \\log n)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O\\left(\\dfrac{n}{32}\\right)}\\)</p> <p>M\u1ed9t c\u00e1ch kh\u00e1c, v\u00ec bi\u1ebfn <code>bool</code> l\u01b0u trong b\u1ed9 nh\u1edb th\u01b0\u1eddng l\u00e0 \\(1\\) byte (\\(8\\) bits), tuy nhi\u00ean th\u1ef1c ch\u1ea5t ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng \\(1\\) bit. V\u00ec th\u1ebf ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t bi\u1ebfn <code>int</code> \u0111\u1ec3 l\u01b0u nhi\u1ec1u bi\u1ebfn <code>bool</code>. \u0110\u1ec3 code \u0111\u01b0\u1ee3c nhanh ch\u00f3ng, \u1edf \u0111\u00e2y ta n\u00ean s\u1eed d\u1ee5ng c\u00e1c ph\u00e9p to\u00e1n tr\u00ean bit.</p>"},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa_3","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>## define doc(n) (prime_bits[n &gt;&gt; 3] &amp; (1 &lt;&lt; (n &amp; 7)))\n## define set(n) {prime_bits[n &gt;&gt; 3] |= (1 &lt;&lt; (n &amp; 7));}\nvector&lt;int&gt; prime_bits;\nvoid sieve_bits(int n){\n    prime_bits.assign((n &gt;&gt; 3) + 5, 0);\n    set(0); set(1);\n    for(int i = 2; i * i &lt;= n; i++){  \n        if (!doc(i)){\n            for(int j = i * i; j &lt;= n; j += i){\n                set(j);\n            }\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O(n \\log \\log n)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O\\left(\\dfrac{n}{8}\\right)}\\)</p> <p>Trong code b\u00ean tr\u00ean, <code>int</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u \\(8\\) gi\u00e1 tr\u1ecb <code>bool</code>. Tr\u00ean th\u1ef1c t\u1ebf, <code>int/unsigned int</code> ch\u1ee9a \\(4\\) bytes hay \\(32\\) bits. Nh\u1edd \u0111\u00f3, m\u1ed9t s\u1ed1 <code>int/unsigned int</code> c\u00f3 th\u1ec3 l\u01b0u tr\u1eef \u0111\u1ebfn \\(32\\) gi\u00e1 tr\u1ecb <code>bool</code>. V\u00e0 b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 th\u1eed c\u00e1ch l\u01b0u \\(32\\) gi\u00e1 tr\u1ecb thay v\u00ec \\(8\\) v\u00e0o code b\u00ean tr\u00ean.</p>"},{"location":"algo/algebra/prime_sieve/#sang-nguyen-to-tuyen-tinh-linear-sieve","title":"S\u00e0ng nguy\u00ean t\u1ed1 tuy\u1ebfn t\u00ednh - Linear Sieve  <ul> <li>S\u00e0ng nguy\u00ean t\u1ed1 n\u00e0y \u0111\u01b0\u1ee3c c\u1ea3i ti\u1ebfn t\u1eeb S\u00e0ng Eratosthenes. Tuy c\u00f3 \u0110PT th\u1eddi gian l\u00e0 \\(\\boldsymbol{O(n)}\\) nh\u01b0ng v\u1edbi nh\u1eefng b\u1ed9 d\u1eef li\u1ec7u kho\u1ea3ng \\(10^6\\) th\u00ec kh\u00f4ng nhanh h\u01a1n S\u00e0ng Eratosthenes l\u00e0 m\u1ea5y.</li> <li>S\u00e0ng \\(O(n)\\) n\u00e0y c\u00f3 l\u01b0u l\u1ea1i c\u00e1c \u01b0\u1edbc nguy\u00ean t\u1ed1 nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c s\u1ed1 kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n\\) n\u00ean s\u1ebd ph\u00f9 h\u1ee3p cho c\u00e1c b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn ph\u00e2n t\u00edch th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1.</li> </ul>","text":""},{"location":"algo/algebra/prime_sieve/#huong-tiep-can_1","title":"H\u01b0\u1edbng ti\u1ebfp c\u1eadn","text":"<p>X\u00e9t \\(\\text{min_prime}[i]\\) l\u00e0 \u01b0\u1edbc nguy\u00ean t\u1ed1 nh\u1ecf nh\u1ea5t c\u1ee7a \\(i\\) M\u1ea3ng \\(\\text{primes}[]\\) s\u1ebd l\u01b0u t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c. Duy\u1ec7t c\u00e1c s\u1ed1 t\u1eeb \\(2\\) \u0111\u1ebfn \\(n\\). Ta c\u00f3 \\(2\\) tr\u01b0\u1eddng h\u1ee3p: - \\(\\text{min_prime}[i] = 0 \\Rightarrow i\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1. V\u00ec th\u1ebf, ta g\u00e1n \\(\\text{min_prime} [i] = i\\) v\u00e0 th\u00eam \\(i\\) v\u00e0o cu\u1ed1i m\u1ea3ng \\(\\text{primes}[]\\). - Ng\u01b0\u1ee3c l\u1ea1i, \\(\\text{min_prime}[i] \\neq 0\\), ta ph\u1ea3i t\u00ednh \u0111\u01b0\u1ee3c \\(\\text{min_prime} [i]\\) trong c\u00e1c v\u00f2ng l\u1eb7p tr\u01b0\u1edbc \u0111\u00f3.</p> <p>Trong c\u1ea3 hai tr\u01b0\u1eddng h\u1ee3p, ta \u0111\u1ec1u c\u1ea7n c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a \\(\\text{min_prime}[]\\) cho c\u00e1c b\u1ed9i c\u1ee7a \\(i\\). V\u00e0 m\u1ee5c ti\u00eau c\u1ee7a ta l\u00e0 g\u00e1n gi\u00e1 tr\u1ecb \\(\\text{min_prime}[]\\) t\u1ed1i \u0111a m\u1ed9t l\u1ea7n cho m\u1ed7i s\u1ed1.</p> <p>Ch\u00fang ta c\u00f3 th\u1ec3 l\u00e0m nh\u01b0 sau: Duy\u1ec7t c\u00e1c s\u1ed1 nguy\u00ean \\(i\\) t\u1eeb \\(2\\) \u0111\u1ebfn \\(n\\). V\u1edbi m\u1ed7i s\u1ed1 nguy\u00ean \\(i\\), ta s\u1ebd g\u00e1n \\(\\text{min_prime} [i * p_j] = p_j\\) v\u1edbi \\(p_j\\) l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 \\(\\le \\text{min_prime} [i]\\).</p>"},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa_4","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>vector&lt;int&gt; min_prime, primes;\nvoid linear_sieve(int n){\n    min_prime.assign(n + 1, 0);\n\n    for (int i = 2; i &lt;= n; ++i) {\n        if (min_prime[i] == 0) {\n            min_prime[i] = i;\n            primes.push_back(i);\n        }\n        for (int j = 0; i * primes[j] &lt;= n; ++j) {\n            min_prime[i * primes[j]] = primes[j];\n            if (primes[j] == min_prime[i]) {\n                break;\n            }\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O(n)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O(n)}\\)</p> Gi\u1ea3i th\u00edch v\u1ec1 \u0110PT c\u1ee7a thu\u1eadt to\u00e1n <p> M\u1ed7i s\u1ed1 $x$ c\u00f3 duy nh\u1ea5t m\u1ed9t c\u00e1ch bi\u1ec3u di\u1ec5n: $$x = \\text{min_prime}[x] \\cdot i$$ trong \u0111\u00f3 $\\text{min_prime}[x]$ l\u00e0 \u01b0\u1edbc nguy\u00ean t\u1ed1 nh\u1ecf nh\u1ea5t c\u1ee7a $x$. Suy ra $i$ kh\u00f4ng c\u00f3 \u01b0\u1edbc nguy\u00ean t\u1ed1 n\u00e0o nh\u1ecf h\u01a1n $\\text{min_prime}[x]$, t\u1ee9c l\u00e0 $$\\text{min_prime}[x] \\le \\text{min_prime}[i]$$ V\u1edbi m\u1ed7i $i$, ta duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 l\u00ean \u0111\u1ebfn $\\text{min_prime}[i]$ th\u00ec s\u1ebd duy\u1ec7t \u0111\u01b0\u1ee3c c\u00e1c s\u1ed1 c\u00f3 d\u1ea1ng \u0111\u00e3 cho \u1edf tr\u00ean.  V\u00ec c\u00f3 duy nh\u1ea5t m\u1ed9t c\u00e1ch bi\u1ec3u di\u1ec5n $x = \\text{min_prime}[x] \\cdot i$ n\u00ean thu\u1eadt to\u00e1n s\u1ebd \u0111i qua m\u1ed7i s\u1ed1 h\u1ee3p s\u1ed1 \u0111\u00fang m\u1ed9t l\u1ea7n \u0111\u1ec3 g\u00e1n c\u00e1c gi\u00e1 tr\u1ecb $\\text{min_prime}[]$ t\u1ea1i \u0111\u00f3. Hay thu\u1eadt to\u00e1n c\u00f3 \u0110PT th\u1eddi gian $O(n)$. </p> ---"},{"location":"algo/algebra/prime_sieve/#sang-phan-oan-block-sieve-segmented-sieve","title":"S\u00e0ng ph\u00e2n \u0111o\u1ea1n - Block Sieve / Segmented Sieve  <p>\u0110\u00e2y l\u00e0 m\u1ed9t trong s\u1ed1 nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p h\u1eefu hi\u1ec7u kh\u1eafc ph\u1ee5c \u0111i\u1ec3m y\u1ebfu v\u1ec1 kh\u00f4ng gian c\u1ee7a s\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes.</p>  <p>X\u00e9t code s\u00e0ng Erathosenes sau:</p> <pre><code>    for (int i = 2; i * i &lt;= n; i++) {\n        if (is_prime[i]) {\n            // j s\u1ebd b\u1eaft \u0111\u1ea7u ch\u1ea1y t\u1eeb i * i\n            for (int j = i * i; j &lt;= n; j += i)\n                is_prime[j] = false;\n        }\n    }\n</code></pre> <p>V\u00ec v\u00f2ng l\u1eb7p <code>j</code> b\u1eaft \u0111\u1ea7u t\u1eeb <code>i * i</code> n\u00ean ta kh\u00f4ng c\u1ea7n ph\u1ea3i gi\u1eef l\u1ea1i to\u00e0n b\u1ed9 m\u1ea3ng <code>is_prime[1...n]</code> trong su\u1ed1t qu\u00e1 tr\u00ecnh s\u00e0ng. Khi \u0111\u00f3:  - Gi\u1eef l\u1ea1i c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 \\(p\\) trong \u0111o\u1ea1n \\(\\left[1;\\sqrt n\\right]\\): <code>prime[1..sqrt(n)]</code> - Chia \\(\\left[1; n\\right]\\) th\u00e0nh c\u00e1c \u0111o\u1ea1n con (block) v\u00e0 s\u00e0ng ri\u00eang t\u1eebng \u0111o\u1ea1n (block).</p> <p>G\u1ecdi \\(S\\) l\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed7i \u0111o\u1ea1n. Nh\u01b0 th\u1ebf, ch\u00fang ta s\u1ebd c\u00f3 \\(\\left\\lceil \\dfrac{n}{S} \\right\\rceil\\) \u0111o\u1ea1n. \u0110o\u1ea1n th\u1ee9 \\(k\\) \\(\\left(k = 0 .. \\left\\lceil \\dfrac{n}{S} \\right\\rceil - 1\\right)\\) l\u00e0 \\(\\left[ kS; \\min(kS + S - 1, n) \\right]\\). </p> <p>V\u1edbi m\u1ed7i \u0111o\u1ea1n, v\u00f2ng l\u1eb7p <code>for (int j = i * i; j &lt;= n; j += i)</code> s\u1ebd thay \u0111\u1ed5i sao cho <code>j</code> ch\u1ec9 ch\u1ea1y trong \u0111o\u1ea1n \u0111ang x\u00e9t.</p>","text":""},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa_5","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>vector&lt;int&gt; primes;\nvoid segmented_sieve(int n) {\n    const int S = 10000;\n\n    int nsqrt = sqrt(n);\n    vector&lt;char&gt; is_prime(nsqrt + 2, true);\n    for (int i = 2; i &lt;= nsqrt; i++) {\n        if (is_prime[i]) {\n            primes.push_back(i);\n            for (int j = i * i; j &lt;= nsqrt; j += i)\n                is_prime[j] = false;\n        }\n    }\n\n    int result = 0;\n    vector&lt;char&gt; block(S);\n    for (int k = 0; k * S &lt;= n; k++) {\n        fill(block.begin(), block.end(), true);\n        int start = k * S;\n        for (int p : primes) {\n            // start_idx * p l\u00e0 b\u1ed9i nh\u1ecf nh\u1ea5t c\u1ee7a p m\u00e0 start_idx * p &gt;= start\n            int start_idx = (start + p - 1) / p;\n            int j = max(start_idx, p) * p - start;\n            for (; j &lt; S; j += p)\n                block[j] = false;\n        }\n        if (k == 0)\n            block[0] = block[1] = false;\n        for (int i = 0; i &lt; S &amp;&amp; start + i &lt;= n; i++) {\n            if (block[i])\n                result++;\n        }\n    }\n    cout &lt;&lt; result &lt;&lt; '\\n'; // In ra s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 t\u00ecm \u0111\u01b0\u1ee3c\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O \\left( n \\log \\log n +  \\dfrac{n \\cdot \\pi(\\sqrt n)}{S} \\right)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O\\left(\\sqrt{n} + S\\right)}\\)</p> <p>Ch\u00fa \u00fd r\u1eb1ng ta ph\u1ea3i ch\u1ecdn \\(S\\) sao cho c\u00e2n b\u1eb1ng gi\u1eefa \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian v\u00e0 th\u1eddi gian. Th\u00f4ng th\u01b0\u1eddng th\u00ec ta hay ch\u1ecdn \\(S = \\sqrt n\\).</p>"},{"location":"algo/algebra/prime_sieve/#banh-xe-phan-tich-wheel-factorization","title":"B\u00e1nh xe ph\u00e2n t\u00edch - Wheel Factorization <p>Wheel Factorization l\u00e0 ph\u01b0\u01a1ng ph\u00e1p c\u1ea3i ti\u1ebfn c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf \u0111i r\u1ea5t nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p tr\u01b0\u1edbc khi s\u00e0ng nguy\u00ean t\u1ed1. Thay v\u00ec ch\u1ec9 x\u00e9t c\u00e1c s\u1ed1 l\u1ebb, ta c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf c\u00e1c s\u1ed1 l\u00e0 b\u1ed9i c\u1ee7a \\(2, 3, 5, 7, \\ldots\\) Vi\u1ec7c n\u00e0y c\u00f3 th\u1ec3 gi\u00fap ch\u00fang ta gi\u1ea3m \u0111i \u0110PT c\u1ea3 th\u1eddi gian l\u1eabn kh\u00f4ng gian \u0111i m\u1ed9t ch\u00fat.</p> <p></p> <p>V\u00ed d\u1ee5 khi ch\u1ecdn \\(n = 2\\cdot 3 = 6\\) s\u1ebd ch\u1ec9 lo\u1ea1i \u0111i c\u00e1c s\u1ed1 l\u00e0 b\u1ed9i c\u1ee7a \\(2\\) ho\u1eb7c \\(3\\). B\u1ea3n ch\u1ea5t c\u1ee7a b\u00e1nh xe khi n\u00e0y l\u00e0 ch\u1ec9 gi\u1eef l\u1ea1i c\u00e1c s\u1ed1 \\(2, 3\\) v\u00e0 c\u00e1c s\u1ed1 c\u00f3 d\u1ea1ng \\(6k+1\\) ho\u1eb7c \\(6k+5\\).</p> <p></p> <p>Ho\u1eb7c v\u00ed d\u1ee5 khi ch\u1ecdn lo\u1ea1i b\u1ecf c\u00e1c b\u1ed9i c\u1ee7a \\(2\\) ho\u1eb7c \\(3\\) ho\u1eb7c \\(5\\), ta ch\u1ecdn \\(n = 2 \\cdot 3 \\cdot 5 = 30\\) B\u1ea3n ch\u1ea5t l\u00e0 ta ch\u1ec9 gi\u1eef l\u1ea1i c\u00e1c s\u1ed1 \\(2, 3, 5\\) v\u00e0 c\u00e1c s\u1ed1 c\u00f3 d\u1ea1ng \\(30k+i\\) v\u1edbi \\(i &lt;30\\) v\u00e0 \\(i\\) kh\u00f4ng chia h\u1ebft cho \\(2,3,5\\).  \\(\\left(i \\in \\{1, 7, 11, 13, 17, 19, 23, 29 \\}\\right)\\) Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng m\u1ea3ng ki\u1ec3m tra nguy\u00ean t\u1ed1 <code>is_prime</code> cho c\u00e1c s\u1ed1 c\u00f3 d\u1ea1ng tr\u00ean. L\u00fd do ng\u01b0\u1eddi ta d\u00f9ng b\u00e1nh xe th\u00ec b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 xem \u1ea3nh d\u01b0\u1edbi \u0111\u00e2y. Ngu\u1ed3n: Wikipedia </p>","text":""},{"location":"algo/algebra/prime_sieve/#code-c-minh-hoa_6","title":"Code C++ minh h\u1ecda","text":"<p><pre><code>// C\u00e1c th\u00f4ng s\u1ed1 c\u1ee7a b\u00e1nh xe\n// B\u1ed9i c\u1ee7a c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 b\u00e9\nconst int wheel_size = 2 * 3 * 5;\nconst int num_offsets = 8;\n// T\u1eadp c\u00e1c s\u1ed1 d\u01b0\nconst int wheel_offsets[] = {1, 7, 11, 13, 17, 19, 23, 29};\n// Th\u1ee9 t\u1ef1 c\u1ee7a 1 s\u1ed1 trong offsets\nint num_in_offsets[wheel_size];\n\nvector&lt;bool&gt; is_prime;\n\n// v\u1ecb tr\u00ed trong m\u1ea3ng is_prime\nint pos(const int &amp;v){\n    return v / wheel_size * num_offsets + num_in_offsets[v % wheel_size] - 1;\n}\n\nvoid sieve_with_wheel(int n){\n    for (int i = 0; i &lt; num_offsets; i++)\n        num_in_offsets[wheel_offsets[i]] = i + 1;\n\n    is_prime.assign(pos(n) + num_offsets + 10, true);\n    is_prime[0] = false; // 1 kh\u00f4ng l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n\n    // S\u00e0ng\n    for (int i = 0; i * i &lt;= n; i += wheel_size) {\n        for (int j = 0; j &lt; num_offsets; ++j) {\n            int u = i + wheel_offsets[j];\n            if (is_prime[pos(u)]) {\n                for (int v = u * u; v &lt;= n; v += u) {\n                    if (num_in_offsets[v % wheel_size]) {\n                        is_prime[pos(v)] = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // v\u00f2ng l\u1eb7p sau s\u1ebd duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 l\u1edbn h\u01a1n 5\n    for (int i = 0; i &lt;= n; i += wheel_size) {\n        for (int j = 0; j &lt; num_offsets; ++j) {\n            int u = i + wheel_offsets[j];\n            if (u &lt;= n &amp;&amp; is_prime[pos(u)]) {\n                // u l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1\n            }\n        }\n    }\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\boldsymbol{O\\left(\\dfrac{4}{15} n \\log \\log n \\right)}\\)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian: \\(\\boldsymbol{O\\left(\\dfrac{4}{15} n \\right)}\\)</p> <p>X\u00e9t k\u00edch th\u01b0\u1edbc \"b\u00e1nh xe\" l\u00e0 \\(mod = 2 \\cdot 3 \\cdot 5 \\ldots\\) c\u00f3 th\u1ec3 ch\u1ecdn \\(mod\\) v\u00e0o kho\u1ea3ng \\(\\sqrt n\\) th\u00ec \u0110PT s\u1ebd c\u00f2n l\u00e0 \\(O\\left( \\dfrac{n}{\\log \\log n} \\right)\\). Nh\u00ecn th\u00ec \u0110PT th\u1ea5p h\u01a1n s\u00e0ng Eratosthenes th\u00f4ng th\u01b0\u1eddng, nh\u01b0ng v\u00ec ph\u01b0\u01a1ng ph\u00e1p tr\u00ean m\u1ed7i v\u00f2ng l\u1eb7p \u0111\u1ec1u s\u1eed d\u1ee5ng ph\u00e9p nh\u00e2n/chia n\u00ean th\u1eddi gian ch\u1ea1y c\u00f3 th\u1ec3 ch\u1eadm h\u01a1n nhi\u1ec1u so v\u1edbi s\u00e0ng Eratosthenes th\u00f4ng th\u01b0\u1eddng v\u1edbi b\u1ed9 d\u1eef li\u1ec7u nh\u1ecf \\(\\left(n \\le 10^6 \\right)\\).</p> <p>V\u00e0 v\u00ec l\u00fd do b\u1ed9 nh\u1edb cache m\u00e0 ng\u01b0\u1eddi ta ch\u1ec9 th\u01b0\u1eddng ch\u1ecdn modulo \\(mod \\in 30; 210\\). C\u00e1c s\u1ed1 l\u1ecdc \u0111\u01b0\u1ee3c ti\u1ebfp t\u1ee5c ki\u1ec3m tra b\u1eb1ng c\u00e1ch kh\u00e1c nh\u01b0 b\u00ean tr\u00ean.</p>"},{"location":"algo/algebra/prime_sieve/#ket-hop-cac-cai-tien","title":"K\u1ebft h\u1ee3p c\u00e1c c\u1ea3i ti\u1ebfn <p>B\u00ean tr\u00ean l\u00e0 m\u1ed9t s\u1ed1 c\u00e1ch c\u1ea3i ti\u1ebfn th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. Tuy nhi\u00ean b\u1ea1n c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p c\u00e1c c\u1ea3i ti\u1ebfn m\u1ed9t c\u00e1ch h\u1ee3p l\u00fd \u0111\u1ec3 t\u1ea1o ra m\u1ed9t s\u00e0ng nguy\u00ean t\u1ed1 m\u1ea1nh m\u1ebd. </p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 s\u00e0ng \u0111\u01b0\u1ee3c s\u01b0u t\u1ea7m b\u1edfi Code c\u00f9ng RR.</p>  S\u00e0ng ph\u00e2n \u0111o\u1ea1n v\u00e0 Ch\u1ec9 s\u00e0ng s\u1ed1 l\u1ebb <pre><code>// Source: RR Code\nconst int maxn = 1e6;\nvoid block_sieve_odd() {\n    long long sum_primes = 2;\n\n    const int S = round(sqrt(maxn));\n    vector&lt;char&gt; sieve(S + 1, true);\n    vector&lt;array&lt;int, 2&gt;&gt; cp;\n    for (int i = 3; i &lt; S; i += 2) {\n        if (!sieve[i])\n            continue;\n        cp.push_back({i, (i * i - 1) / 2});\n        for (int j = i * i; j &lt;= S; j += 2 * i)\n            sieve[j] = false;\n    }\n    vector&lt;char&gt; block(S);\n    int high = (MAX - 1) / 2;\n    for (int low = 0; low &lt;= high; low += S) {\n        fill(block.begin(), block.end(), true);\n        for (auto &amp;i : cp) {\n            int p = i[0], idx = i[1];\n            for (; idx &lt; S; idx += p)\n                block[idx] = false;\n            i[1] = idx - S;\n        }\n        if (low == 0)\n            block[0] = false;\n        for (int i = 0; i &lt; S &amp;&amp; low + i &lt;= high; i++)\n            if (block[i])\n                sum_primes += (low + i) * 2 + 1;\n    };\n}\n</code></pre>   S\u00e0ng ph\u00e2n \u0111o\u1ea1n v\u00e0 B\u00e1nh xe ph\u00e2n t\u00edch <pre><code>// Source: RR Code\nconst int WHEEL = 3 * 5 * 7 * 11 * 13;\nconst int N_SMALL_PRIMES = 6536;             // cnt primes less than 2^16\nconst int SIEVE_SPAN = WHEEL * 64;           // one iteration of segmented sieve\nconst int SIEVE_SIZE = SIEVE_SPAN / 128 + 1;\n\nuint64_t ONES[64];                           // ONES[i] = 1&lt;&lt;i\nint small_primes[N_SMALL_PRIMES];            // primes less than 2^16\n\n// each element of sieve is a 64-bit bitmask.\n// Each bit (0/1) stores whether the corresponding element is a prime number.\n// We only need to store odd numbers\n// -&gt; 1st bitmask stores 3, 5, 7, 9, ...\nuint64_t si[SIEVE_SIZE];\n// for each 'wheel', we store the sieve pattern (i.e. what numbers cannot\n// be primes)\nuint64_t pattern[WHEEL];\n\ninline void mark(uint64_t* s, int o) { s[o &gt;&gt; 6] |= ONES[o &amp; 63]; }\ninline int test(uint64_t* s, int o) { return (s[o &gt;&gt; 6] &amp; ONES[o &amp; 63]) == 0; }\n\n// update_sieve\nvoid update_sieve(int offset) {\n    // copy each wheel pattern to sieve\n    for (int i = 0, k; i &lt; SIEVE_SIZE; i += k) {\n        k = std::min(WHEEL, SIEVE_SIZE - i);\n        memcpy(si + i, pattern, sizeof(*pattern) * k);\n    }\n\n    // Correctly mark 1, 3, 5, 7, 11, 13 as not prime / primes\n    if (offset == 0) {\n        si[0] |= ONES[0];\n        si[0] &amp;= ~(ONES[1] | ONES[2] | ONES[3] | ONES[5] | ONES[6]);\n    }\n\n    // sieve for primes &gt;= 17 (stored in `small_primes`)\n    for (int i = 0; i &lt; N_SMALL_PRIMES; ++i) {\n        int j = small_primes[i] * small_primes[i];\n        if (j &gt; offset + SIEVE_SPAN - 1) break;\n        if (j &gt; offset) j = (j - offset) &gt;&gt; 1;\n        else {\n            j = small_primes[i] - offset % small_primes[i];\n            if ((j &amp; 1) == 0) j += small_primes[i];\n            j &gt;&gt;= 1;\n        }\n        while (j &lt; SIEVE_SPAN / 2) {\n            mark(si, j);\n            j += small_primes[i];\n        }\n    }\n}\n\n\nvoid sieve() {\n    // init small primes {{{\n    for (int i = 0; i &lt; 64; ++i) ONES[i] = 1ULL &lt;&lt; i;\n\n    // sieve to find small primes\n    for (int i = 3; i &lt; 256; i += 2) {\n        if (test(si, i &gt;&gt; 1)) {\n            for (int j = i*i / 2; j &lt; 32768; j += i) mark(si, j);\n        }\n    }\n    // store primes &gt;= 17 in `small_primes` (we will sieve differently\n    // for primes 2, 3, 5, 7, 11, 13)\n    {\n        int m = 0;\n        for (int i = 8; i &lt; 32768; ++i) {\n            if (test(si, i)) small_primes[m++] = i*2 + 1;\n        }\n        assert(m == N_SMALL_PRIMES);\n    }\n    // }}}\n\n    // For primes 3, 5, 7, 11, 13: we initialize wheel pattern..\n    for (int i = 1; i &lt; WHEEL * 64; i += 3) mark(pattern, i);\n    for (int i = 2; i &lt; WHEEL * 64; i += 5) mark(pattern, i);\n    for (int i = 3; i &lt; WHEEL * 64; i += 7) mark(pattern, i);\n    for (int i = 5; i &lt; WHEEL * 64; i += 11) mark(pattern, i);\n    for (int i = 6; i &lt; WHEEL * 64; i += 13) mark(pattern, i);\n\n    // Segmented sieve\n    long long sum_primes = 2;\n    for (int offset = 0; offset &lt; MAX; offset += SIEVE_SPAN) {\n        update_sieve(offset);\n\n        for (uint32_t j = 0; j &lt; SIEVE_SIZE; j++){\n            uint64_t x = ~si[j];\n            while (x){\n                uint32_t p = offset + (j &lt;&lt; 7) + (__builtin_ctzll(x) &lt;&lt; 1) + 1;\n                if (p &gt; offset + SIEVE_SPAN - 1) break;\n                if (p &lt;= MAX) {\n                    sum_primes += p;\n                }\n                x ^= (-x &amp; x);\n            }\n        }\n    }\n    assert(sum_primes == SUM_PRIMES);\n}\n</code></pre>    C\u1ea3i ti\u1ebfn c\u1ee7a Kim Walisch <p> Xem code g\u1ed1c t\u1ea1i \u0111\u00e2y. S\u00e0ng nguy\u00ean t\u1ed1 c\u1ee7a Kim Walisch s\u1eed d\u1ee5ng k\u1ebft h\u1ee3p r\u1ea5t nhi\u1ec1u ph\u01b0\u01a1ng ph\u00e1p nh\u1eb1m t\u1ed1i \u01b0u h\u00f3a s\u00e0ng nguy\u00ean t\u1ed1 t\u1eeb nh\u01b0ng tr\u01b0\u1eddng h\u1ee3p nh\u1ecf \u0111\u1ebfn nh\u1eefng tr\u01b0\u1eddng h\u1ee3p l\u1edbn. Tham kh\u1ea3o c\u00e1c t\u1ed1i \u01b0u h\u00f3a \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng t\u1ea1i \u0111\u00e2y.  D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t ph\u1ea7n code \u0111\u01b0\u1ee3c t\u1ed1i gi\u1ea3n cho tr\u01b0\u1eddng h\u1ee3p $n$ l\u1edbn v\u00e0 ph\u00f9 h\u1ee3p h\u01a1n v\u1edbi l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. </p> <pre><code>// Source: RR Code\nconst int lim = 1e9;\ntypedef unsigned char byte;\n\nint count = 0;\nvoid sieve()\n{\n    long long sum_primes = 0;\n\n    int sqrt = std::sqrt(lim);\n    int sieve_size = max(sqrt, (1 &lt;&lt; 15));\n    int segment_size = sieve_size * 16;\n\n    vector&lt;byte&gt; mark(sieve_size);\n    vector&lt;byte&gt; is_prime(sqrt + 1, true);\n    vector&lt;int&gt; seg_prime;\n    vector&lt;int&gt; seg_multi;\n\n    for (int i = 3; i &lt;= sqrt; i += 2)\n        if (is_prime[i])\n            for (int j = i * i; j &lt;= sqrt; j += i)\n                is_prime[j] = false;\n\n    int reset[16];\n    for (int i = 0; i &lt; 8; ++i)\n        reset[2 * i] = reset[2 * i + 1] = ~(1 &lt;&lt; i);\n\n    int s = 3;\n    for (int low = 0; low &lt;= lim; low += segment_size)\n    {\n        fill(mark.begin(), mark.end(), 0xff);\n        int high = min(low + segment_size - 1, lim);\n        sieve_size = (high - low) / 16 + 1;\n\n        for (; s * s &lt;= high; s += 2)\n        {\n            if (is_prime[s])\n            {\n                seg_prime.push_back(s);\n                seg_multi.push_back(s * s - low);\n            }\n        }\n\n        for (size_t i = 0; i &lt; seg_prime.size(); ++i)\n        {\n            int j = seg_multi[i];\n            for (int k = seg_prime[i] * 2; j &lt; segment_size; j += k)\n                mark[j &gt;&gt; 4] &amp;= reset[j % 16];\n\n            seg_multi[i] = j - segment_size;\n        }\n\n        if (high == lim)\n        {\n            int bits = 0xff &lt;&lt; ((lim % 16) + 1) / 2;\n            mark[sieve_size - 1] &amp;= ~bits;\n        }\n\n        for (int n = 0; n &lt; sieve_size; n++)\n        {\n            for (int i = 0; i &lt; 8; i++)\n                if (mark[n] &amp; (1 &lt;&lt; i))\n                {\n                    auto p = low + n * 16 + i * 2 + 1;\n                    sum_primes += (p &gt; 1) ? p : 2;\n                }\n        }\n    }\n}\n</code></pre>  <p>So s\u00e1nh \u0111\u1ed9 d\u00e0i code v\u00e0 th\u1eddi gian ch\u1ea1y v\u1edbi \\(n = 10^9\\) c\u1ee7a m\u1ed9t s\u1ed1 s\u00e0ng nguy\u00ean t\u1ed1 (Ngu\u1ed3n: Code c\u00f9ng RR)</p> <p></p>","text":""},{"location":"algo/algebra/prime_sieve/#mot-so-sang-nguyen-to-khac","title":"M\u1ed9t s\u1ed1 s\u00e0ng nguy\u00ean t\u1ed1 kh\u00e1c","text":"<p>Ngo\u00e0i S\u00e0ng Eratosthenes, c\u00f2n c\u00f3 m\u1ed9t s\u1ed1 s\u00e0ng nguy\u00ean t\u1ed1 kh\u00e1c nh\u01b0: - S\u00e0ng nguy\u00ean t\u1ed1 Atkin v\u1edbi \u0110PT \\(O(n)\\) - S\u00e0ng nguy\u00ean t\u1ed1 Sundaram v\u1edbi \u0110PT \\(O(n\\log n)\\) - S\u00e0ng Pritchard v\u1edbi \u0110PT \\(O\\left( \\dfrac{n}{\\log \\log n} \\right)\\) - ... Tuy nhi\u00ean, khi g\u1eb7p c\u00e1c b\u1ed9 d\u1eef li\u1ec7u \\(n\\) v\u00e0o kho\u1ea3ng \\(10^6\\) th\u00ec c\u00e1c s\u00e0ng n\u00e0y h\u1ea7u nh\u01b0 ch\u1ea1y ch\u1eadm h\u01a1n so v\u1edbi S\u00e0ng Eratosthenes th\u00f4ng th\u01b0\u1eddng.</p>"},{"location":"algo/algebra/prime_sieve/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<ul> <li>S\u1eed d\u1ee5ng c\u00e1ch s\u00e0ng nh\u01b0 s\u00e0ng nguy\u00ean t\u1ed1 ch\u00fang ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng c\u00e1c s\u00e0ng cho c\u00e1c s\u1ed1 c\u00f3 t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t kh\u00e1c, v\u00ed d\u1ee5 nh\u01b0 l\u01b0u \u01b0\u1edbc ch\u00ednh ph\u01b0\u01a1ng l\u1edbn nh\u1ea5t, thay c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 th\u00e0nh c\u00e1c s\u1ed1 ph\u00e2n bi\u1ec7t c\u00f3 t\u00ednh ch\u1ea5t n\u00e0o \u0111\u00f3 ... V\u00ed d\u1ee5 nh\u01b0 VNOI - Duy\u00ean H\u1ea3i 2020 - L\u1edbp 10 - B\u00e0i 2</li> <li>H\u00e0m \\(\\boldsymbol{\\pi(x)}\\) l\u00e0 h\u00e0m \u0111\u1ebfm s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 s\u1ed1 d\u01b0\u01a1ng \\(x\\). V\u00e0 theo \u0111\u1ecbnh l\u00fd s\u1ed1 nguy\u00ean t\u1ed1 (Prime Number Theorem), ta c\u00f3 m\u1ed9t c\u00f4ng th\u1ee9c \u0111\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng:  \\(\\(\\boldsymbol{\\pi(x) \\sim \\dfrac{x}{\\ln x}}\\)\\) C\u00f4ng th\u1ee9c n\u00e0y c\u00f3 th\u1ec3 h\u1eefu \u00edch trong vi\u1ec7c \u01b0\u1edbc ch\u1eebng c\u00e1c \u0111\u1ed9 ph\u1ee9c t\u1ea1p li\u00ean quan \u0111\u1ebfn s\u1ed1 nguy\u00ean t\u1ed1.</li> <li>Khi t\u00ednh s\u1ed1 l\u01b0\u1ee3ng c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 hay t\u1ed5ng c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n\\), vi\u1ec7c s\u1eed d\u1ee5ng S\u00e0ng nguy\u00ean t\u1ed1 l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p nhanh d\u1ec5 hi\u1ec3u. Tuy nhi\u00ean, v\u1edbi nh\u1eefng b\u1ed9 d\u1eef li\u1ec7u l\u1edbn, ng\u01b0\u1eddi ta th\u01b0\u1eddng s\u1eed d\u1ee5ng s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Meissel\u2013Lehmer hay thu\u1eadt to\u00e1n Lucy Hedgehog, c\u00f3 th\u1ec3 ch\u1ea1y v\u1edbi \\(n\\) l\u00ean \u0111\u1ebfn \\(10^{12}\\) trong 1s. Xem code b\u1eb1ng C++ t\u1ea1i thu\u1eadt to\u00e1n Lehmer - \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 thu\u1eadt to\u00e1n Lucy Hedgehog - t\u00ednh t\u1ed5ng c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1.</li> <li>\u0110\u1ec3 ph\u00e2n t\u00edch th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec c\u00f3 hai s\u00e0ng t\u1ed1t h\u01a1n s\u00e0ng nguy\u00ean t\u1ed1: Quadratic Sieve v\u00e0 General number field sieve</li> <li>Ngo\u00e0i ra c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam c\u00e1c code s\u00e0ng nguy\u00ean t\u1ed1 \u0111\u01b0\u1ee3c s\u01b0u t\u1ea7m b\u1edfi Code c\u00f9ng RR t\u1ea1i \u0111\u00e2y.</li> </ul>"},{"location":"algo/algebra/prime_sieve/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":""},{"location":"algo/algebra/prime_sieve/#sang-nguyen-to-co-ban","title":"S\u00e0ng nguy\u00ean t\u1ed1 c\u01a1 b\u1ea3n <ul> <li>VNOI - Free Contest 75 - FPRIME</li> <li>VNOI - Free Contest 102 - PRIME</li> <li>VNOI - Bedao Grand Contest 01 - KPRIME</li> <li>VNOI - Bedao Regular Contest 03 - PRIME</li> <li>VNOI - T\u00ecm s\u1ed1 nguy\u00ean t\u1ed1</li> <li>VNOI - S\u1ed1 nguy\u00ean t\u1ed1!</li> <li>VNOI - V\u00f2ng s\u1ed1 nguy\u00ean t\u1ed1</li> <li>VNOI - Bedao Regular Contest 02 - PXOR</li> <li>VNOI - VM 08 B\u00e0i 04 - X\u00f3a s\u1ed1</li> <li>VNOI - Euler</li> <li>NTUCoder - Phi Euler</li> <li>NTUCoder - Phi Euler 2</li> <li>VNOI - COCI 2016/2017 - Contest 6 - Savrsen</li> <li>NTUCoder - Sum gcd</li> <li>VNOI - Sum of Primes </li> <li>Codechef - Chef and Divisor Tree </li> <li>SPOJ - A conjecture of Paul Erd\u0151s</li> <li>SPOJ - Primal Fear</li> <li>SPOJ - Primes Triangle</li> <li>Codeforces - Almost Prime</li> <li>Codeforces - Sherlock And His Girlfriend</li> <li>SPOJ - Namit in Trouble</li> <li>SPOJ - Bazinga!</li> <li>Hackerrank - Project Euler - Prime pair connection</li> <li>SPOJ - N-Factorful</li> <li>SPOJ - Binary Sequence of Prime Numbers</li> <li>UVA 11353 - A Different Kind of Sorting</li> <li>SPOJ - Prime Generator</li> <li>Codeforces - Nodbach Problem</li> <li>Codefoces - Colliders</li> </ul>","text":""},{"location":"algo/algebra/prime_sieve/#sang-nguyen-to-cai-tien-thuat-toan-meissel-lehmer","title":"S\u00e0ng nguy\u00ean t\u1ed1 c\u1ea3i ti\u1ebfn. Thu\u1eadt to\u00e1n Meissel-Lehmer <ul> <li>VNOI - Prime Number Theorem </li> <li>SPOJ - Primes2 </li> <li>SPOJ - KPrimes2 </li> <li>SPOJ - BSPRIME</li> <li>ICPC 2022 v\u00f2ng Qu\u1ed1c gia - C: Consecutive Primes</li> <li>VOI 22 B\u00e0i 6 - X\u00e2y d\u1ef1ng ma tr\u1eadn</li> </ul>","text":""},{"location":"algo/algebra/prime_sieve/#nguon-tham-khao","title":"Ngu\u1ed3n tham kh\u1ea3o","text":"<p>B\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c t\u1ed5ng h\u1ee3p t\u1eeb c\u00e1c ngu\u1ed3n d\u01b0\u1edbi \u0111\u00e2y: * CP - Algorithms:      - Sieve of Eratosthenes     - Linear Sieve * B\u00e0i vi\u1ebft c\u1ee7a Code c\u00f9ng RR * B\u00e0i vi\u1ebft 2 c\u1ee7a Code c\u00f9ng RR * Wikipedia</p>"},{"location":"algo/basic/Tai-Lieu-Thuat-Toan/","title":"M\u1ed9t s\u1ed1 T\u00e0i li\u1ec7u hay v\u1ec1 Thu\u1eadt To\u00e1n","text":"<p>1. Gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh (DSAP) - th\u1ea7y L\u00ea Minh Ho\u00e0ng</p> <p>Ch\u1eafc h\u1eb3n nh\u1eefng b\u1ea1n h\u1ecdc chuy\u00ean tin \u0111\u1ec1u bi\u1ebft \u0111\u1ebfn cu\u1ed1n s\u00e1ch n\u00e0y, b\u1edfi n\u00f3 nh\u01b0 l\u00e0 m\u1ed9t cu\u1ed1n s\u00e1ch gi\u00e1o khoa cho chuy\u00ean tin v\u1edbi c\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n t\u1eeb quay lui, s\u1eafp x\u1ebfp \u0111\u1ebfn quy ho\u1ea1ch \u0111\u1ed9ng, \u0111\u1ed3 th\u1ecb.</p> <p>Link Download</p> <p>2. T\u00e0i li\u1ec7u gi\u00e1o khoa chuy\u00ean tin</p> <p>V\u1ec1 c\u01a1 b\u1ea3n, ph\u1ea7n m\u1ed9t v\u00e0 ph\u1ea7n hai gi\u1ed1ng v\u1edbi gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh, tuy nhi\u00ean \u0111\u01b0\u1ee3c b\u1ed5 sung th\u00eam m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c nh\u01b0: s\u1ed1 Catalan, x\u1eed l\u00fd s\u1ed1 l\u1edbn b\u1eb1ng x\u00e2u,... K\u00e8m theo \u0111\u00f3 l\u00e0 nh\u1eefng b\u00e0i t\u1eadp v\u00f4 c\u00f9ng h\u1ea5p d\u1eabn \u0111\u1ec3 c\u00e1c b\u1ea1n luy\u1ec7n t\u1eadp.</p> <p>Ph\u1ea7n ba ch\u1ee9a c\u00e1c ki\u1ebfn th\u1ee9c n\u00e2ng cao h\u01a1n, \u0111\u00f3 l\u00e0 h\u00ecnh h\u1ecdc v\u00e0 l\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i.</p> <p>Link Download:</p> <ul> <li>T\u1eadp 1</li> <li>T\u1eadp 2</li> <li>T\u1eadp 3 - ph\u1ea7n 1</li> <li>T\u1eadp 3 - ph\u1ea7n 2</li> </ul> <p>3. M\u1ed9t s\u1ed1 v\u1ea5n \u0111\u1ec1 \u0111\u00e1ng ch\u00fa \u00fd trong m\u00f4n tin h\u1ecdc</p> <p>Cu\u1ed1n s\u00e1ch n\u00e0y \u0111\u01b0\u1ee3c vi\u1ebft b\u1edfi c\u00e1c c\u1ef1u h\u1ecdc sinh tr\u01b0\u1eddng chuy\u00ean Phan B\u1ed9i Ch\u00e2u - Ngh\u1ec7 An. N\u00f3 ch\u1ee9a c\u00e1c ki\u1ebfn th\u1ee9c tuy\u1ec7t hay m\u00e0 t\u00e0i li\u1ec7u gi\u00e1o khoa chuy\u00ean tin hay gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh \u0111\u1ec1u kh\u00f4ng c\u00f3 nh\u01b0: duy\u1ec7t \u01b0u ti\u00ean, thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm chu\u1ed7i KMP, quy ho\u1ea1ch \u0111\u1ed9ng tr\u1ea1ng th\u00e1i, quy ho\u1ea1ch \u0111\u1ed9ng v\u1ecb tr\u00ed c\u1ea5u h\u00ecnh, quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean c\u00e2y, t\u00f4 m\u00e0u \u0111\u1ed3 th\u1ecb, thu\u1eadt to\u00e1n Dijkstra v\u1edbi \u0111\u1ec9nh \u1ea3o, Interval Tree, Binary Index Tree, ...</p> <p>Link Download</p> <p>4. B\u1ea3n d\u1ecbch Introduction to Algorithm</p> <p>Link download</p> <p>(C\u1ea3m \u01a1n b\u1ea1n Nguy\u1ec5n V\u0103n Kh\u1edfi \u0111\u00e3 chia s\u1ebb link).</p> <p>5. KC Book</p> <ul> <li>Quy\u1ec3n 1</li> <li>Quy\u1ec3n 3</li> </ul> <p>6. Guide To Competitive Programming</p> <p>N\u1ebfu b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc ti\u1ebfng Anh tr\u00f4i ch\u1ea3y, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o quy\u1ec3n \"Guide To Competitive Programming\" \u0111\u01b0\u1ee3c vi\u1ebft n\u0103m 2017. S\u00e1ch s\u1eed d\u1ee5ng ng\u00f4n ng\u1eef C++ v\u00e0 c\u00f3 nhi\u1ec1u ki\u1ebfn th\u1ee9c m\u1edbi.</p> <p>Link download</p>"},{"location":"algo/basic/backtracking/","title":"\u0110\u1ec7 quy v\u00e0 Thu\u1eadt to\u00e1n quay lui","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean, Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN.</p> <p>Reviewer: - Nguy\u1ec5n Minh Nh\u1eadt, Tr\u01b0\u1eddng THPT chuy\u00ean KHTN - \u0110HKHTN - \u0110HQGHN. - Cao Thanh H\u1eadu, Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM. - Nguy\u1ec5n Ho\u00e0ng V\u0169, Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN.</p>"},{"location":"algo/basic/backtracking/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"B\u00fap b\u00ea Matryoshka (\u1ea3nh tr\u00ean Google Images) <p>Trong cu\u1ed9c s\u1ed1ng, ch\u00fang ta \u0111\u00f4i khi b\u1eaft g\u1eb7p nh\u1eefng h\u00ecnh \u1ea3nh v\u1ec1 m\u1ed9t v\u1eadt m\u00e0 ch\u1ee9a b\u00ean trong n\u00f3 l\u00e0 m\u1ed9t v\u1eadt kh\u00e1c gi\u1ed1ng h\u1ec7t n\u00f3, nh\u01b0 b\u00fap b\u00ea Matryoska, c\u1eeda s\u1ed5 OBS khi b\u1ea1n c\u1ed1 d\u00f9ng n\u00f3 \u0111\u1ec3 quay m\u00e0n h\u00ecnh c\u1ee7a ch\u00ednh n\u00f3, s\u00e1ch gi\u00e1o khoa To\u00e1n l\u1edbp 3 c\u0169, link n\u00e0y, ... T\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady, trong khoa h\u1ecdc m\u00e1y t\u00ednh v\u00e0 l\u1eadp tr\u00ecnh, ch\u00fang ta x\u00e2y d\u1ef1ng kh\u00e1i ni\u1ec7m v\u1ec1 \u0111\u1ec7 quy.</p>"},{"location":"algo/basic/backtracking/#e-quy-va-giai-thuat-e-quy","title":"\u0110\u1ec7 quy v\u00e0 gi\u1ea3i thu\u1eadt \u0111\u1ec7 quy","text":""},{"location":"algo/basic/backtracking/#khai-niem","title":"Kh\u00e1i ni\u1ec7m","text":"<p>Ta g\u1ecdi m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng l\u00e0 \u0111\u1ec7 quy (recursion) n\u1ebfu n\u00f3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a qua ch\u00ednh n\u00f3 ho\u1eb7c m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f9ng d\u1ea1ng v\u1edbi ch\u00ednh n\u00f3 b\u1eb1ng quy n\u1ea1p.</p> <p>V\u00ed d\u1ee5: - V\u1edbi \\(n!\\) th\u00ec ta c\u00f3 \\(n! = (n - 1)! \\times n\\) - G\u1ecdi \\(gcd(a, b)\\) l\u00e0 \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a \\(a\\) v\u00e0 \\(b\\) (\\(a \\geq b\\)) th\u00ec ta c\u00f3 \\(gcd(a, b) = gcd(b, a \\bmod b)\\) v\u1edbi \\(\\bmod\\) l\u00e0 ph\u00e9p l\u1ea5y ph\u1ea7n d\u01b0</p> <p>N\u1ebfu m\u1ed9t b\u00e0i to\u00e1n \\(P\\) c\u00f3 l\u1eddi gi\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng m\u1ed9t b\u00e0i to\u00e1n con \\(P'\\) c\u00f3 d\u1ea1ng gi\u1ed1ng \\(P\\) th\u00ec \u0111\u00f3 l\u00e0 m\u1ed9t gi\u1ea3i thu\u1eadt \u0111\u1ec7 quy. \u1ede \u0111\u00e2y, \\(P'\\) c\u1ea7n l\u00e0 m\u1ed9t b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n h\u01a1n \\(P\\) (c\u00f3 k\u00edch c\u1ee1 d\u1eef li\u1ec7u nh\u1ecf h\u01a1n, ho\u1eb7c \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u1ecf h\u01a1n, ...), v\u00e0 \u0111\u01b0\u01a1ng nhi\u00ean kh\u00f4ng c\u1ea7n \u0111\u1ebfn \\(P\\) \u0111\u1ec3 gi\u1ea3i n\u00f3. </p> <p>V\u1ec1 c\u01a1 b\u1ea3n th\u00ec ta c\u00f3 th\u1ec3 g\u1ecdi m\u1ed9t h\u00e0m l\u00e0 \u0111\u1ec7 quy n\u1ebfu h\u00e0m \u0111\u00f3 t\u1ef1 g\u1ecdi ch\u00ednh n\u00f3, v\u1edbi c\u00e1c bi\u1ebfn \u0111\u1ea7u v\u00e0o c\u00f3 th\u1ec3 kh\u00e1c.</p> <p>M\u1ed9t b\u00e0i to\u00e1n \u0111\u1ec7 quy c\u00f3 l\u1eddi gi\u1ea3i g\u1ed3m 2 ph\u1ea7n: - Ph\u1ea7n neo/tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf (anchor/base case): \u0110\u00e2y l\u00e0 ph\u1ea7n c\u00f3 th\u1ec3 gi\u1ea3i tr\u1ef1c ti\u1ebfp m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i d\u1ef1a v\u00e0o m\u1ed9t b\u00e0i to\u00e1n con n\u00e0o, v\u00e0 c\u0169ng ch\u00ednh l\u00e0 \u0111i\u1ec3m d\u1eebng c\u1ee7a l\u1eddi gi\u1ea3i \u0111\u1ec7 quy. Ph\u1ea7n n\u00e0y th\u01b0\u1eddng l\u00e0 c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u1ee5 th\u1ec3, nh\u01b0 <code>x == 0</code>, <code>x == n</code>, ... - Ph\u1ea7n \u0111\u1ec7 quy: \u0110\u00e2y ch\u00ednh l\u00e0 ph\u1ea7n m\u00e0 b\u1ea1n ph\u1ea3i g\u1ecdi ra b\u00e0i to\u00e1n con v\u00e0 gi\u1ea3i n\u00f3, c\u0169ng ch\u00ednh l\u00e0 g\u1ecdi h\u00e0m \u0111\u1ec7 quy. Ph\u1ea7n n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u0111\u1ebfn khi n\u00e0o b\u00e0i to\u00e1n \u0111\u01b0a \u0111\u01b0\u1ee3c v\u1ec1 tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf.</p> <p>N\u1ebfu ta \u0111em so s\u00e1nh v\u1edbi con Matryoska, th\u00ec tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf l\u00e0 con b\u00e9 nh\u1ea5t \u1edf trong c\u00f9ng, c\u00f2n \u0111\u1ec7 quy ch\u00ednh l\u00e0 th\u1ef1c hi\u1ec7n vi\u1ec7c m\u1edf m\u1ed9t con to li\u00ean t\u1ee5c \u0111\u1ebfn l\u00fac n\u00e0o kh\u00f4ng th\u1ec3 m\u1edf \u0111\u01b0\u1ee3c n\u1eefa.</p> <p>L\u00fd thuy\u1ebft su\u00f4ng th\u00ec qu\u00e1 kh\u00f3 hi\u1ec3u, h\u00e3y c\u00f9ng xem m\u1ed9t s\u1ed1 v\u00ed d\u1ee5:</p>"},{"location":"algo/basic/backtracking/#tinh-giai-thua","title":"T\u00ednh giai th\u1eeba","text":"<p>B\u00e0i to\u00e1n: Cho s\u1ed1 t\u1ef1 nhi\u00ean \\(n\\) (\\(n \\leq 15\\)). T\u00ednh \\(n!\\)</p> <p>Ph\u00e2n t\u00edch: \u1ede ph\u1ea7n tr\u00ean, ch\u00fang ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c \u0111\u1ec7 quy c\u1ee7a b\u00e0i to\u00e1n n\u00e0y: \\(n! = (n - 1)! \\times n\\). Khi l\u1eadp tr\u00ecnh \u0111\u1ec7 quy, c\u01a1 b\u1ea3n thu\u1eadt to\u00e1n s\u1ebd ho\u1ea1t \u0111\u1ed9ng nh\u01b0 sau v\u1edbi \\(n = 2\\): \u0111\u1ec3 t\u00ednh \\(2!\\), ch\u00fang ta ph\u1ea3i t\u00ednh n\u00f3 qua \\(1!\\); \u0111\u1ec3 t\u00ednh \\(1!\\) ch\u00fang ta ph\u1ea3i t\u00ednh \\(0!\\). L\u00fac n\u00e0y, ta c\u00f3 hai l\u1ef1a ch\u1ecdn: - Ti\u1ebfp t\u1ee5c v\u1edbi \\(0! = (-1)! \\times 0\\) - Thay \\(0! = 1\\) v\u00e0o v\u00e0 t\u00ednh ti\u1ebfp</p> <p>L\u1ef1a ch\u1ecdn th\u1ee9 nh\u1ea5t c\u00f3 v\u1ebb kh\u00f4ng kh\u1ea3 thi, ph\u1ea7n v\u00ec \\((-1)!\\) kh\u00f4ng x\u00e1c \u0111\u1ecbnh, m\u1eb7t kh\u00e1c n\u1ebfu thay ti\u1ebfp th\u00ec ch\u00fang ta c\u0169ng ch\u1eb3ng bi\u1ebft d\u1eebng \u1edf \u0111\u00e2u c\u1ea3. V\u1edbi \\(0! = 1\\), ta c\u00f3 th\u1ec3 thay v\u00e0o \u0111\u1ec3 t\u00ednh \\(1!\\) r\u1ed3i. C\u00f3 \\(1!\\) ta l\u1ea1i thay n\u00f3 v\u00e0o ti\u1ebfp \u0111\u1ec3 t\u00ednh \\(2!\\), v\u00e0 ch\u00fang ta c\u00f3 th\u1ee9 ch\u00fang ta c\u1ea7n.</p> <p></p> <p>Ph\u00e2n t\u00edch th\u00ec d\u00e0i d\u00f2ng v\u1eady th\u00f4i, c\u00f2n c\u00e0i \u0111\u1eb7t th\u00ec r\u1ea5t \u0111\u01a1n gi\u1ea3n: <pre><code>void factorial(int n)\n{\n    if (n == 0) return 1;    //tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf\n    return factorial(n - 1) * n;    //ph\u1ea7n \u0111\u1ec7 quy\n}\n</code></pre></p> <p>N\u1ebfu b\u1ea1n ch\u01b0a quen v\u1edbi c\u00fa ph\u00e1p \u0111\u1ec7 quy nh\u01b0 v\u1eady th\u00ec c\u00f3 th\u1ec3 hi\u1ec3u h\u00e0m tr\u00ean t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi h\u00e0m <code>factorial_2()</code> trong \u0111o\u1ea1n code sau v\u1edbi \\(n = 2\\): <pre><code>//n = 0\nvoid factorial_0()\n{\n    return 1;    \n}\n\n//n = 1\nvoid factorial_1()\n{   \n    return factorial_0() * 1;    \n}\n\n//n = 2\nvoid factorial_2()\n{   \n    return factorial_1() * 2;    \n}\n</code></pre></p>"},{"location":"algo/basic/backtracking/#tinh-so-fibonacci","title":"T\u00ednh s\u1ed1 Fibonacci","text":"<p>D\u00e3y Fibonacci l\u00e0 d\u00e3y s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a theo c\u00f4ng th\u1ee9c truy h\u1ed3i sau: $$ f_n = \\begin{cases} 0 &amp; \\text{v\u1edbi } n = 0\\ 1 &amp; \\text{v\u1edbi } n = 1\\ f_{n - 2} + f_{n - 1} &amp; \\text{v\u1edbi } n &gt; 1 \\end{cases} $$ V\u0103n v\u1ebb h\u01a1n th\u00ec trong d\u00e3y n\u00e0y, m\u1ed7i s\u1ed1 h\u1ea1ng b\u1eb1ng t\u1ed5ng c\u1ee7a hai s\u1ed1 h\u1ea1ng li\u1ec1n tr\u01b0\u1edbc n\u00f3. C\u00e1c gi\u00e1 tr\u1ecb \\(f_0\\), \\(f_1\\) c\u00f3 th\u1ec3 kh\u00e1c m\u1ed9t ch\u00fat tu\u1ef3 t\u00e0i li\u1ec7u.</p> <p>B\u00e0i to\u00e1n: T\u00ecm s\u1ed1 Fibonacci th\u1ee9 \\(n\\) (\\(n \\leq 20\\)).</p> <p>D\u1ef1a v\u00e0o c\u00f4ng th\u1ee9c truy h\u1ed3i \u0111\u00e3 cho v\u00e0 l\u1eadp lu\u1eadn ki\u1ec3u \"\u0111\u1ec3 t\u00ednh \\(f\\) n\u00e0y th\u00ec ta c\u1ea7n c\u00f3 \\(f\\) kia\" nh\u01b0 tr\u00ean, ch\u00fang ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>void fibo(int n)\n{\n    if (n == 0) return 0;    //tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf\n    if (n == 1) return 1;    //tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf\n    return fibo(n - 2) + fibo(n - 1);    //ph\u1ea7n \u0111\u1ec7 quy\n}\n</code></pre> <p>C\u1ea7n ch\u00fa \u00fd r\u1eb1ng \u1edf ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y c\u1ea7n c\u00f3 t\u1edbi 2 tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf, v\u00ec \u0111\u00f3 c\u0169ng l\u00e0 hai tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng th\u1ec3 \u00e1p d\u1ee5ng c\u00f4ng th\u1ee9c truy h\u1ed3i.</p> <p>M\u1edf r\u1ed9ng: H\u00e3y th\u1eed s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u1ec3 c\u00e0i \u0111\u1eb7t m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec7 quy t\u00ednh \u01afCLN d\u1ef1a v\u00e0o c\u00f4ng th\u1ee9c \u1edf v\u00ed d\u1ee5 ph\u00eda tr\u00ean.</p> <p>\u0110\u01b0\u01a1ng nhi\u00ean, kh\u00f4ng ph\u1ea3i b\u00e0i to\u00e1n \u0111\u1ec7 quy n\u00e0o c\u0169ng \u0111\u1ec3 ch\u00fang ta nh\u00ecn th\u1ea5y m\u1ed9t c\u00f4ng th\u1ee9c \u0111\u1ec7 quy \u0111\u01a1n gi\u1ea3n nh\u01b0 v\u1eady. Th\u1eadm ch\u00ed, \u0111\u00f4i khi ch\u00fang ta c\u00f2n ch\u1eb3ng c\u00f3 m\u1ed9t c\u00f4ng th\u1ee9c c\u1ee5 th\u1ec3, m\u00e0 ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\u00e0 c\u00f4ng vi\u1ec7c \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n sau \u0111\u00f3 c\u00f3 \u0111i\u1ec3m t\u01b0\u01a1ng \u0111\u1ed3ng v\u1edbi ph\u1ea7n tr\u01b0\u1edbc th\u00f4i. L\u00fac n\u00e0y, ta c\u1ea7n gi\u1ea3i \u0111\u00e1p nh\u1eefng c\u00e2u h\u1ecfi: - B\u00e0i to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gi\u1ea3i qua nh\u1eefng b\u00e0i to\u00e1n con n\u00e0o t\u01b0\u01a1ng t\u1ef1 kh\u00f4ng? N\u1ebfu \u0111\u01b0\u1ee3c, \u0111\u00f3 l\u00e0 g\u00ec? - T\u1edbi tr\u1ea1ng th\u00e1i n\u00e0o, ch\u00fang ta s\u1ebd d\u1eebng l\u1ea1i? </p>"},{"location":"algo/basic/backtracking/#thuat-toan-quay-lui","title":"Thu\u1eadt to\u00e1n quay lui","text":""},{"location":"algo/basic/backtracking/#khai-niem_1","title":"Kh\u00e1i ni\u1ec7m","text":"<p>Thu\u1eadt to\u00e1n quay lui (backtracking) d\u00f9ng \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n li\u1ec7t k\u00ea c\u00e1c c\u1ea5u h\u00ecnh. M\u1ed7i c\u1ea5u h\u00ecnh \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng b\u1eb1ng c\u00e1ch x\u00e2y d\u1ef1ng t\u1eebng ph\u1ea7n t\u1eed, m\u1ed7i ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\u1ecdn b\u1eb1ng c\u00e1ch th\u1eed t\u1ea5t c\u1ea3 c\u00e1c kh\u1ea3 n\u0103ng.</p> <p>T\u00f3m g\u1ecdn l\u1ea1i, ch\u00fang ta \u0111ang x\u00e2y d\u1ef1ng m\u1ed9t danh s\u00e1ch g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp h\u1ee3p (hay d\u00e3y, ...), m\u00e0 m\u1ed7i ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f3 th\u1ec3 c\u1ee7a n\u00f3. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y c\u0169ng g\u1ecdi l\u00e0 duy\u1ec7t v\u00e9t c\u1ea1n.</p> <p>\u0110\u1ec3 cho kh\u1ecfi \"l\u00fa\", trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta th\u1ed1ng nh\u1ea5t s\u1ebd d\u00f9ng c\u1ee5m t\u1eeb danh s\u00e1ch c\u00e1c t\u1eadp h\u1ee3p/d\u00e3y/x\u00e2u.</p> <p>V\u00ed d\u1ee5: khi t\u00ecm danh s\u00e1ch c\u00e1c d\u00e3y nh\u1ecb ph\u00e2n (c\u00e1c d\u00e3y g\u1ed3m to\u00e0n c\u00e1c k\u00fd t\u1ef1 \\(0\\), \\(1\\) nh\u01b0 d\u00e3y \\(0001011\\)) \u0111\u1ed9 d\u00e0i \\(3\\), ta s\u1ebd: - X\u00e9t m\u1ecdi tr\u01b0\u1eddng h\u1ee3p k\u00fd t\u1ef1 th\u1ee9 nh\u1ea5t. Ta \u0111\u01b0\u1ee3c <code>0</code> ho\u1eb7c <code>1</code>. - V\u1edbi m\u1ed7i tr\u01b0\u1eddng h\u1ee3p c\u1ee7a k\u00fd t\u1ef1 th\u1ee9 nh\u1ea5t, x\u00e9t ti\u1ebfp m\u1ecdi tr\u01b0\u1eddng h\u1ee3p k\u00fd t\u1ef1 th\u1ee9 hai. Ta \u0111\u01b0\u1ee3c <code>00</code>, <code>01</code> t\u1eeb <code>0</code> \u1edf b\u01b0\u1edbc tr\u01b0\u1edbc v\u00e0 <code>10</code>, <code>11</code> t\u1eeb <code>1</code> \u1edf b\u01b0\u1edbc tr\u01b0\u1edbc. - T\u01b0\u01a1ng t\u1ef1, v\u1edbi m\u1ed7i tr\u01b0\u1eddng h\u1ee3p c\u1ee7a k\u00fd t\u1ef1 th\u1ee9 hai, ta x\u00e9t n\u1ed1t m\u1ecdi tr\u01b0\u1eddng h\u1ee3p \u1edf k\u00fd t\u1ef1 th\u1ee9 ba. C\u00e1c d\u00e3y nh\u1eadn \u0111\u01b0\u1ee3c l\u00e0 <code>000</code>, <code>001</code>, <code>010</code>, <code>011</code>, <code>100</code>, <code>101</code>, <code>110</code>, <code>111</code> N\u1ebfu b\u1ea1n v\u1eabn ch\u01b0a hi\u1ec3u c\u00e1c d\u00e3y n\u00e0y \u0111\u01b0\u1ee3c t\u1ea1o d\u1ef1ng theo th\u1ee9 t\u1ef1 nh\u01b0 th\u1ebf n\u00e0o, h\u00e3y xem s\u01a1 \u0111\u1ed3 \u1edf ph\u1ea7n d\u01b0\u1edbi.</p> <p>Tr\u00ean ph\u01b0\u01a1ng di\u1ec7n quy n\u1ea1p, n\u1ebfu c\u1ea7n d\u1ef1ng danh s\u00e1ch c\u00e1c t\u1eadp h\u1ee3p m\u00e0 m\u1ed7i t\u1eadp c\u00f3 d\u1ea1ng \\(\\{x_1, x_2, ..., x_n\\}\\), ta x\u00e9t m\u1ecdi gi\u00e1 tr\u1ecb c\u1ee7a \\(x_1\\), r\u1ed3i sau \u0111\u00f3 duy\u1ec7t ti\u1ebfp \\(\\{x_2, x_3, ..., x_n\\}\\), ti\u1ebfp t\u1ee5c x\u00e9t m\u1ecdi gi\u00e1 tr\u1ecb \\(x_2\\), r\u1ed3i l\u1ea1i duy\u1ec7t \\(\\{x_3, x_4, ..., x_n\\}\\), ..., cho \u0111\u1ebfn khi n\u00e0o t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ec1u \u0111\u00e3 x\u00e1c \u0111\u1ecbnh. L\u00fac n\u00e0y, ta l\u01b0u t\u1eadp v\u1eeba t\u1ea1o l\u1ea1i v\u00e0o danh s\u00e1ch v\u00e0 ti\u1ebfp t\u1ee5c chuy\u1ec3n sang t\u1eadp kh\u00e1c t\u1eeb c\u00e1c gi\u00e1 tr\u1ecb kh\u00e1c c\u1ee7a c\u00e1c \\(x_i\\)</p> <pre><code>void backtrack(int pos)\n{   \n    // Tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf\n    if (&lt;pos l\u00e0 v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng&gt;)\n    {\n        &lt;output/l\u01b0u l\u1ea1i t\u1eadp h\u1ee3p \u0111\u00e3 d\u1ef1ng n\u1ebfu tho\u1ea3 m\u00e3n&gt;\n        return;\n    }\n\n    //Ph\u1ea7n \u0111\u1ec7 quy\n    for (&lt;t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb i c\u00f3 th\u1ec3 \u1edf v\u1ecb tr\u00ed pos&gt;)\n    {\n        &lt;th\u00eam gi\u00e1 tr\u1ecb i v\u00e0o t\u1eadp \u0111anh x\u00e9t&gt;\n        backtrack(pos + 1);\n        &lt;xo\u00e1 b\u1ecf gi\u00e1 tr\u1ecb i kh\u1ecfi t\u1eadp \u0111ang x\u00e9t&gt;\n    }\n}\n</code></pre> <p>Vi\u1ec7c th\u00eam gi\u00e1 tr\u1ecb m\u1edbi v\u00e0o t\u1eadp \u0111ang x\u00e9t r\u1ed3i cu\u1ed1i c\u00f9ng xo\u00e1 b\u1ecf n\u00f3 ra kh\u1ecfi t\u1eadp gi\u1ea3i th\u00edch cho t\u00ean g\u1ecdi \"quay lui\" c\u1ee7a thu\u1eadt to\u00e1n. \u0110\u00f3 l\u00e0 vi\u1ec7c kh\u00f4i ph\u1ee5c l\u1ea1i tr\u1ea1ng th\u00e1i c\u0169 c\u1ee7a t\u1eadp h\u1ee3p sau khi k\u1ebft th\u00fac vi\u1ec7c g\u1ecdi \u0111\u1ec7 quy.</p> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 th\u1eed v\u1ebd s\u01a1 \u0111\u1ed3 t\u00ednh to\u00e1n gi\u1ed1ng nh\u01b0 b\u00e0i giai th\u1eeba \u1edf tr\u00ean v\u00e0 quen s\u00e1t xem c\u00e1c h\u00e0m \u0111\u1ec7 quy \u0111\u01b0\u1ee3c g\u1ecdi ra theo th\u1ee9 t\u1ef1 nh\u01b0 th\u1ebf n\u00e0o.</p> <p>B\u1ea1n v\u1eeba ti\u1ebfp thu m\u1ed9t l\u01b0\u1ee3ng kh\u00e1 l\u1edbn ki\u1ebfn th\u1ee9c, v\u00e0 c\u00f3 th\u1ec3 s\u1ebd g\u1eb7p ch\u00fat v\u1ea5n \u0111\u1ec1. Kh\u00f4ng sao, ch\u00fang ta h\u00e3y \u0111i v\u00e0o v\u00ed d\u1ee5 \u0111\u1ec3 hi\u1ec3u h\u01a1n.</p>"},{"location":"algo/basic/backtracking/#sinh-cac-day-nhi-phan","title":"Sinh c\u00e1c d\u00e3y nh\u1ecb ph\u00e2n","text":"<p>B\u00e0i to\u00e1n: Li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c d\u00e3y nh\u1ecb ph\u00e2n \u0111\u1ed9 d\u00e0i \\(n\\), l\u00e0 d\u00e3y c\u00f3 t\u1ea5t c\u1ea3 \\(n\\) k\u00fd t\u1ef1 v\u00e0 g\u1ed3m to\u00e0n c\u00e1c k\u00fd t\u1ef1 \\(0\\) v\u00e0 \\(1\\). V\u00ed d\u1ee5, v\u1edbi \\(n = 3\\) ta c\u00f3 c\u00e1c d\u00e3y \\(000, 001, 010, 011, 100, 101, 110, 111\\).</p> <p>Ph\u00e2n t\u00edch: \u1ede v\u00ed d\u1ee5 ph\u00eda tr\u00ean, ch\u00fang ta \u0111\u00e3 n\u00f3i v\u1ec1 vi\u1ec7c x\u00e9t m\u1ecdi tr\u01b0\u1eddng h\u1ee3p \u0111\u1ec3 x\u00e2y d\u1ef1ng c\u00e1c d\u00e3y n\u00e0y nh\u01b0 th\u1ebf n\u00e0o. Khi c\u00e0i \u0111\u1eb7t \u0111\u1ec7 quy, s\u1eed d\u1ee5ng t\u01b0 duy quy n\u1ea1p \"x\u00e2y t\u1eadp sau t\u1eeb t\u1eadp tr\u01b0\u1edbc\", thu\u1eadt to\u00e1n s\u1ebd ho\u1ea1t \u0111\u1ed9ng nh\u01b0 sau:</p> <p></p> <p>T\u1ea1i h\u00e0m <code>gen(1)</code>, ta x\u00e9t t\u1eebng gi\u00e1 tr\u1ecb c\u1ee7a k\u00fd t\u1ef1 hi\u1ec7n t\u1ea1i, sau \u0111\u00f3 g\u1ecdi <code>gen(2)</code> v\u1edbi t\u1eebng k\u00fd t\u1ef1 \u0111\u00f3. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady, ta g\u1ecdi <code>gen(3)</code> t\u1eeb c\u00e1c k\u00fd t\u1ef1 \u1edf <code>gen(2)</code> v\u00e0 r\u1ed3i <code>gen(4)</code>. T\u1edbi <code>gen(4)</code>, ta \u0111\u00e3 duy\u1ec7t h\u1ebft c\u00e1c v\u1ecb tr\u00ed v\u00e0 kh\u00f4ng th\u1ec3 th\u1eed th\u00eam n\u1eefa, n\u00ean c\u00f3 th\u1ec3 in ra x\u00e2u.</p> <p><pre><code>int n;\nstring curString;\n\nvoid genString(int pos)\n{\n    if (pos &gt; n)\n    {\n        cout &lt;&lt; curString &lt;&lt; \"\\n\";\n        return;\n    }\n    for (char i = '0'; i &lt;= '1'; i ++)\n    {\n        curString.push_back(i);    //th\u00eam k\u00fd t\u1ef1 m\u1edbi v\u00e0o d\u00e3y\n        genString(pos + 1);\n        curString.pop_back();      //b\u1ecf k\u00fd t\u1ef1 n\u00e0y \u0111i\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    curString = \"\";\n    genString(1);\n\n    return 0;\n}\n</code></pre> Ch\u00fa \u00fd r\u1eb1ng, c\u00e1ch sinh n\u00e0y c\u0169ng ch\u01b0a ph\u1ea3i l\u00e0 t\u1ed1t nh\u1ea5t n\u1ebfu x\u00e9t v\u1ec1 \u0111\u1ed9 d\u00e0i c\u1ee7a code. S\u1eed d\u1ee5ng c\u00e1c ph\u00e9p to\u00e1n tr\u00ean bit c\u1ee7a C++ s\u1ebd gi\u00fap li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c d\u00e3y tr\u00ean v\u1edbi m\u1ed9t \u0111o\u1ea1n code \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u m\u00e0 th\u1eddi gian ch\u1ea1y v\u1eabn kh\u00f4ng ch\u1eadm h\u01a1n (t\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng c\u1ea7n s\u1eed d\u1ee5ng \u0111\u1ec7 quy).</p>"},{"location":"algo/basic/backtracking/#sinh-to-hop-tap-hop-con","title":"Sinh t\u1ed5 h\u1ee3p (t\u1eadp h\u1ee3p con)","text":"<p>B\u00e0i to\u00e1n: Cho t\u1eadp \\(S = \\{1, 2, 3, ..., n\\}\\). In ra t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con c\u00f3 ch\u00ednh x\u00e1c \\(k\\) ph\u1ea7n t\u1eed c\u1ee7a \\(S\\). Hai t\u1eadp con l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a nhau ch\u1ec9 t\u00ednh l\u00e0 m\u1ed9t.</p> <p>Ph\u00e2n t\u00edch: C\u00f3 m\u1ed9t s\u1ed1 \u00fd t\u01b0\u1edfng cho b\u00e0i n\u00e0y, nh\u01b0 bi\u1ec3u di\u1ec5n t\u1eadp h\u1ee3p b\u1eb1ng m\u1ed9t d\u00e3y nh\u1ecb ph\u00e2n r\u1ed3i t\u00ecm c\u00e1c d\u00e3y c\u00f3 \u0111\u00fang \\(k\\) k\u00fd t\u1ef1 \\(1\\), hay l\u1ea7n l\u01b0\u1ee3t x\u00e2y d\u1ef1ng c\u00e1c s\u1ed1 trong d\u00e3y sao cho s\u1ed1 sau l\u1edbn h\u01a1n s\u1ed1 tr\u01b0\u1edbc \u0111\u1ebfn khi \u0111\u1ee7 \\(k\\). M\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y h\u01b0\u1edbng th\u1ee9 hai.</p> <p>\u0110\u1ec3 tr\u00e1nh tr\u00f9ng l\u1eb7p, ta lu\u00f4n lu\u00f4n d\u1ef1ng c\u00e1c t\u1eadp con \\(P\\) l\u00e0 c\u00e1c d\u00e3y tho\u1ea3 m\u00e3n \\(P_i &gt; P_{i - 1}\\), hay m\u1ecdi ph\u1ea7n t\u1eed \u0111\u1ec1u l\u1edbn h\u01a1n h\u1eb3n ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c d\u1ef1ng tr\u01b0\u1edbc \u0111\u00f3. Gi\u1ea3 s\u1eed ta \u0111\u00e3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c d\u00e3y \u0111\u1ebfn v\u1ecb tr\u00ed th\u1ee9 \\(i\\), v\u00e0 \\(P_i\\) l\u00e0 gi\u00e1 tr\u1ecb cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c th\u00eam v\u00e0o. T\u1ea1i v\u1ecb tr\u00ed th\u1ee9 \\(i+1\\), do c\u00f3 \\(P_{i + 1} &gt; P_i\\), n\u00ean ta ch\u1ec9 th\u1eed c\u00e1c s\u1ed1 t\u1eeb \\(P_{i} + 1\\) \u0111\u1ebfn \\(n\\).</p> <p>Ph\u1ea7n \u0111\u1ec7 quy s\u1ebd k\u1ebft th\u00fac khi t\u1eadp con \u0111\u00e3 c\u00f3 \u0111\u1ee7 \\(k\\) ph\u1ea7n t\u1eed.</p> <p>S\u1eed d\u1ee5ng \u00fd t\u01b0\u1edfng tr\u00ean ta c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>int n, k;\nvector &lt;int&gt; curSubset;\n\n//H\u00e0m \u0111\u1ec7 quy\nvoid printSubset()\n{\n    for (int i : curSubset) cout &lt;&lt; i &lt;&lt; \" \";\n    cout &lt;&lt; \"\\n\";\n}\n\nvoid genSubset(int pos)\n{\n    int lastNum = (curSubset.empty() ? 0 : curSubset.back());  //s\u1ed1 cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c ch\u1ecdn\n    for (int i = lastNum + 1; i &lt;= n; i ++)\n    {\n        curSubset.push_back(i);\n        if (curSubset.size() == k) printSubset();\n        else genSubset(pos + 1);\n        curSubset.pop_back();\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; k;\n    curSubset.clear();\n    genSubset(1);\n\n    return 0;\n}\n</code></pre> <p>M\u1edf r\u1ed9ng: V\u1eabn \u0111\u1ec1 b\u00e0i tr\u00ean nh\u01b0ng gi\u1edd b\u1ecf \u0111i \u0111i\u1ec1u ki\u1ec7n \"Hai t\u1eadp con l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a nhau ch\u1ec9 t\u00ednh l\u00e0 m\u1ed9t.\" th\u00ec ch\u00fang ta s\u1ebd l\u00e0m nh\u01b0 th\u1ebf n\u00e0o? (g\u1ee3i \u00fd: l\u00fac n\u00e0y thay v\u00ec c\u00f3 m\u1ecdi s\u1ed1 l\u1edbn h\u01a1n s\u1ed1 li\u1ec1n tr\u01b0\u1edbc, ta ch\u1ec9 c\u1ea7n c\u00e1c s\u1ed1 trong t\u1eadp h\u1ee3p kh\u00e1c nhau l\u00e0 \u0111\u1ee7)</p> <p>C\u00f2n v\u1ec1 h\u01b0\u1edbng bi\u1ec3u di\u1ec5n d\u00e3y nh\u1ecb ph\u00e2n, b\u1ea1n \u0111\u1ecdc h\u00e3y th\u1eed t\u1ef1 suy ngh\u0129 v\u00e0 c\u00e0i \u0111\u1eb7t. Trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, khi ph\u1ea3i duy\u1ec7t m\u1ecdi t\u1eadp con, c\u00e1ch n\u00e0y d\u1ec5 \u0111\u1ecdc v\u00e0 hi\u1ec7u qu\u1ea3 h\u01a1n h\u1eb3n. Nh\u01b0ng \u0111\u00e2y l\u00e0 b\u00e0i gi\u1edbi thi\u1ec7u v\u1ec1 \u0111\u1ec7 quy n\u00ean l\u00e0... </p>"},{"location":"algo/basic/backtracking/#bai-toan-phan-tich-so","title":"B\u00e0i to\u00e1n ph\u00e2n t\u00edch s\u1ed1","text":"<p>B\u00e0i to\u00e1n: \u1ede m\u1ed9t qu\u1ed1c gia c\u00f3 \\(n\\) lo\u1ea1i ti\u1ec1n g\u1ed3m c\u00e1c m\u1ec7nh gi\u00e1 \\(a_1, a_2, ..., a_n\\) (\\(n \\leq 10\\)). C\u00f3 nh\u1eefng c\u00e1ch n\u00e0o \u0111\u1ec3 l\u1ea5y c\u00e1c t\u1edd ti\u1ec1n sao cho t\u1ed5ng m\u1ec7nh gi\u00e1 c\u1ee7a ch\u00fang l\u00e0 \\(S\\)? Bi\u1ebft r\u1eb1ng m\u1ed7i m\u1ec7nh gi\u00e1 ti\u1ec1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c l\u1ea5y nhi\u1ec1u l\u1ea7n v\u00e0 hai c\u00e1ch l\u1ea5y l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a nhau ch\u1ec9 t\u00ednh l\u00e0 m\u1ed9t. V\u00ed d\u1ee5: v\u1edbi 3 lo\u1ea1i ti\u1ec1n m\u1ec7nh gi\u00e1 \\(10, 20, 50\\), c\u00f3 \\(10\\) c\u00e1ch l\u1ea5y ti\u1ec1n \u0111\u1ec3 c\u00f3 t\u1ed5ng l\u00e0 \\(100\\), bao g\u1ed3m \\(10\\) t\u1edd \\(10\\), ho\u1eb7c \\(2\\) t\u1edd \\(50\\), ho\u1eb7c \\(3\\) t\u1edd \\(10\\), \\(1\\) t\u1edd \\(20\\) v\u00e0 \\(1\\) t\u1edd \\(50\\), ...</p> <p>M\u1ed9t c\u00e1ch r\u1ea5t t\u1ef1 nhi\u00ean, ch\u00fang ta s\u1ebd ti\u1ebfp t\u1ee5c l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i tr\u01b0\u1edbc: l\u01b0u c\u00e1c t\u1edd ti\u1ec1n \u0111\u00e3 c\u00f3 v\u00e0o m\u1ed9t t\u1eadp h\u1ee3p, sau \u0111\u00f3 l\u1ea5y ti\u1ec1n sao cho t\u1edd sau c\u00f3 m\u1ec7nh gi\u00e1 kh\u00f4ng nh\u1ecf h\u01a1n t\u1edd tr\u01b0\u1edbc. H\u00e0m \u0111\u1ec7 quy nh\u01b0 th\u1ebf s\u1ebd c\u00f3 d\u1ea1ng <code>genMoneySet(int pos)</code>.</p> <p>V\u1eady th\u00ec khi n\u00e0o ch\u00fang ta d\u1eebng l\u1ea1i? \u0110\u00f3 l\u00e0 khi t\u1ed5ng s\u1ed1 ti\u1ec1n ch\u00fang ta \u0111\u00e3 l\u1ea5y \u0111\u01b0\u1ee3c \u0111\u1ea1t m\u1ee9c y\u00eau c\u1ea7u, ho\u1eb7c l\u1edbn h\u01a1n. Khi \u0111\u00f3, k\u1ebft qu\u1ea3 h\u1ee3p l\u1ec7 s\u1ebd l\u00e0 tr\u01b0\u1eddng h\u1ee3p s\u1ed1 ti\u1ec1n \u0111\u1ea1t m\u1ee9c y\u00eau c\u1ea7u.</p> <p>Trong qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t, song song v\u1edbi vi\u1ec7c duy tr\u00ec m\u1ed9t t\u1eadp h\u1ee3p ti\u1ec1n \u0111ang x\u00e2y d\u1ef1ng <code>curMoneySet</code>, ch\u00fang ta s\u1ebd c\u1ea7n l\u01b0u th\u00eam m\u1ed9t gi\u00e1 tr\u1ecb t\u1ed5ng <code>curMoneySum</code> \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n t\u00ednh to\u00e1n.</p> <pre><code>int n, a[15];\nlong long S, curMoneySum;\nvector &lt;int&gt; curMoneySet;\n\nvoid printMoneySet()\n{\n    for (auto i : curMoneySet) cout &lt;&lt; a[i] &lt;&lt; \" \";\n    cout &lt;&lt; \"\\n\";\n}\n\n//H\u00e0m \u0111\u1ec7 quy\nvoid genMoneySet(int pos)\n{\n    int lastIndex = (curMoneySet.empty() ? 1 : curMoneySet.back());\n    for (int i = lastIndex; i &lt;= n; i ++)\n    {\n        //L\u1ea5y th\u00eam 1 t\u1edd ti\u1ec1n m\u1edbi v\u00e0o t\u1eadp h\u1ee3p\n        curMoneySet.push_back(i);\n        curMoneySum += a[i];\n\n        //G\u1ecdi \u0111\u1ec7 quy\n        if (curMoneySum &gt;= S)\n        {\n            if (curMoneySum == S) printMoneySet();\n        }\n        else genMoneySet(pos + 1);\n\n        //B\u1ecf t\u1edd ti\u1ec1n n\u00e0y ra kh\u1ecfi t\u1eadp h\u1ee3p\n        curMoneySet.pop_back();\n        curMoneySum -= a[i];\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; S;\n    for (int i = 1; i &lt;= n; i ++) cin &gt;&gt; a[i];\n    curMoneySet.clear();\n    curMoneySum = 0;\n    genMoneySet(1);\n\n    return 0;\n}\n</code></pre> <p>N\u1ebfu b\u1ea1n \u0111\u1ecdc \u0111\u1ec3 \u00fd k\u1ef9 th\u00ec ch\u00fang ta kh\u00f4ng s\u1eed d\u1ee5ng tham s\u1ed1 <code>pos</code> trong h\u00e0m <code>genMoneySet</code> v\u00e0o m\u1ee5c \u0111\u00edch g\u00ec c\u1ea3. C\u00f3 th\u1ec3 b\u1ecf tham s\u1ed1 n\u00e0y \u0111i, v\u00e0 ch\u00fang ta c\u00f3 m\u1ed9t h\u00e0m \u0111\u1ec7 quy kh\u00f4ng tham s\u1ed1. Tham s\u1ed1 n\u00e0y \u1edf \u0111\u00e2y ch\u1ec9 gi\u00fap ch\u00fang ta hi\u1ec3u h\u00e0m n\u00e0y h\u01a1n th\u00f4i.</p>"},{"location":"algo/basic/backtracking/#bai-toan-xep-hau","title":"B\u00e0i to\u00e1n x\u1ebfp h\u1eadu","text":"<p>X\u1ebfp h\u1eadu l\u00e0 b\u00e0i to\u00e1n r\u1ea5t kinh \u0111i\u1ec3n, c\u00f3 l\u1ebd n\u1ebfu b\u1ea1n h\u1ecdc \u0111\u1ec7 quy quay lui \u1edf \u0111\u00e2u th\u00ec c\u0169ng s\u1ebd g\u1eb7p.</p> <p>B\u00e0i to\u00e1n: T\u00ecm t\u1ea5t c\u1ea3 c\u00e1c c\u00e1ch x\u1ebfp \\(n\\) (\\(n \\leq 12\\)) qu\u00e2n H\u1eadu l\u00ean m\u1ed9t b\u00e0n c\u1edd \\(n \\times n\\) sao cho kh\u00f4ng c\u00f3 hai qu\u00e2n H\u1eadu n\u00e0o c\u00f3 th\u1ec3 \u0103n \u0111\u01b0\u1ee3c nhau. N\u1ebfu c\u00f3 hai c\u00e1ch l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a nhau (v\u1ec1 v\u1ecb tr\u00ed) th\u00ec ch\u1ec9 t\u00ednh l\u00e0 m\u1ed9t, v\u00ed d\u1ee5 hai t\u1eadp h\u1ee3p \\(\\{(1, 2), (3, 4), (5, 6)\\}\\) v\u00e0 \\(\\{(1, 2), (5, 6), (3, 4)\\}\\) ch\u1ec9 l\u1ea5y \\(1\\). Hai qu\u00e2n H\u1eadu \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00f3 th\u1ec3 \u0103n \u0111\u01b0\u1ee3c nhau n\u1ebfu ch\u00fang n\u1eb1m c\u00f9ng h\u00e0ng, c\u1ed9t ho\u1eb7c \u0111\u01b0\u1eddng ch\u00e9o c\u1ee7a b\u00e0n c\u1edd.</p> H\u00ecnh \u1ea3nh t\u00ecm tr\u00ean Google Images <p>Ph\u00e2n t\u00edch: Gi\u1ea3 s\u1eed qu\u00e2n H\u1eadu th\u1ee9 \\(i\\) n\u1eb1m \u1edf h\u00e0ng \\(x_i\\) v\u00e0 c\u1ed9t \\(y_i\\). C\u00e1ch g\u1ecdi n\u00e0y h\u01a1i ng\u01b0\u1ee3c m\u1ed9t ch\u00fat so v\u1edbi h\u1ec7 to\u1ea1 \u0111\u1ed9 Decartes th\u00f4ng th\u01b0\u1eddng nh\u01b0ng n\u00f3 s\u1ebd r\u1ea5t h\u1ee3p cho nh\u1eefng b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn b\u1ea3ng.</p> <p>Khi n\u00e0o th\u00ec hai qu\u00e2n H\u1eadu \\(A\\) v\u00e0 \\(B\\) \u0103n nhau? - Khi \\(A\\) v\u00e0 \\(B\\) n\u1eb1m c\u00f9ng h\u00e0ng, t\u1ee9c l\u00e0 \\(x_A = x_B\\). - Khi \\(A\\) v\u00e0 \\(B\\) n\u1eb1m c\u00f9ng c\u1ed9t, t\u1ee9c l\u00e0 \\(y_A = y_B\\). - Khi \\(A\\) v\u00e0 \\(B\\) n\u1eb1m tr\u00ean c\u00f9ng \u0111\u01b0\u1eddng ch\u00e9o. L\u00fac n\u00e0y c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p:      - \\(x_A + y_A = x_B + y_B\\)     - \\(x_A - y_A = x_B - y_B\\)</p> <p>\u0110\u1ed1i v\u1edbi \u0111\u01b0\u1eddng ch\u00e9o, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 t\u1ef1 ki\u1ec3m ch\u1ee9ng th\u1ea5y r\u1eb1ng, hi\u1ec7u ho\u1eb7c t\u1ed5ng c\u1ee7a ch\u1ec9 s\u1ed1 h\u00e0ng v\u00e0 ch\u1ec9 s\u1ed1 c\u1ed9t lu\u00f4n lu\u00f4n l\u00e0 m\u1ed9t s\u1ed1 kh\u00f4ng \u0111\u1ed5i \u0111\u1ed1i v\u1edbi hai ph\u1ea7n t\u1eed c\u00f9ng \u0111\u01b0\u1eddng ch\u00e9o, l\u1ea7n l\u01b0\u1ee3t \u1ee9ng v\u1edbi \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh (h\u01b0\u1edbng t\u00e2y b\u1eafc - \u0111\u00f4ng nam) v\u00e0 \u0111\u01b0\u1eddng ch\u00e9o ph\u1ee5 (h\u01b0\u1edbng \u0111\u00f4ng b\u1eafc - t\u00e2y nam). </p> <p>V\u1eady th\u00ec, vi\u1ec7c c\u1ee7a ch\u00fang ta b\u00e2y gi\u1edd ch\u1ec9 l\u00e0 sinh ra nh\u1eefng b\u1ed9 to\u1ea1 \u0111\u1ed9 \u0111\u00f4i m\u1ed9t tho\u1ea3 m\u00e3n c\u00e1c \u0111i\u1ec1u ki\u1ec7n tr\u00ean th\u00f4i. Ch\u00fang ta s\u1ebd sinh c\u00e1c b\u1ed9 to\u1ea1 \u0111\u1ed9 n\u00e0y l\u1ea7n l\u01b0\u1ee3t theo t\u1eebng h\u00e0ng, v\u00e0 \u0111\u1ea3m b\u1ea3o r\u1eb1ng qu\u00e2n H\u1eadu sau s\u1ebd kh\u00f4ng c\u00f9ng c\u1ed9t v\u00e0 c\u00f9ng \u0111\u01b0\u1eddng ch\u00e9o v\u1edbi qu\u00e2n H\u1eadu tr\u01b0\u1edbc. \u0110\u1ec3 kh\u1ecfi ph\u1ea3i <code>for</code> l\u1ea1i t\u1eeb \u0111\u1ea7u t\u1eadp \u0111\u00e3 sinh \u0111\u1ec3 ki\u1ec3m tra tr\u00f9ng l\u1eb7p, ch\u00fang ta s\u1ebd duy tr\u00ec m\u1ed9t s\u1ed1 m\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u1ed9t, \u0111\u01b0\u1eddng ch\u00e9o ph\u1ee5, \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh: <code>isInCol[]</code>, <code>isInDiag1[]</code>, <code>isInDiag2[]</code> - <code>isInCol[k]</code> nh\u1eadn gi\u00e1 tr\u1ecb <code>true</code> n\u1ebfu \u0111\u00e3 c\u00f3 m\u1ed9t qu\u00e2n H\u1eadu \u0111\u00e3 n\u1eb1m \u1edf c\u1ed9t \\(k\\). -  <code>isInDiag1[k]</code> nh\u1eadn gi\u00e1 tr\u1ecb <code>true</code> n\u1ebfu \u0111\u00e3 c\u00f3 m\u1ed9t qu\u00e2n H\u1eadu \u0111\u00e3 n\u1eb1m \u1edf \u0111\u01b0\u1eddng ch\u00e9o ph\u1ee5 c\u00f3 t\u1ed5ng to\u1ea1 \u0111\u1ed9 \\(x\\) v\u00e0 \\(y\\) l\u00e0 \\(k\\) -  <code>isInDiag2[k]</code> nh\u1eadn gi\u00e1 tr\u1ecb <code>true</code> n\u1ebfu \u0111\u00e3 c\u00f3 m\u1ed9t qu\u00e2n H\u1eadu \u0111\u00e3 n\u1eb1m \u1edf \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh c\u00f3 hi\u1ec7u to\u1ea1 \u0111\u1ed9 \\(x\\) v\u00e0 \\(y\\) l\u00e0 \\(k\\)</p> <p>M\u1ed9t v\u00f2ng \u0111\u1ec7 quy s\u1ebd k\u1ebft th\u00fac n\u1ebfu ta sinh th\u00e0nh c\u00f4ng \\(n\\) qu\u00e2n H\u1eadu. L\u00fac n\u00e0y, ta ch\u1ec9 vi\u1ec7c in k\u1ebft qu\u1ea3, v\u00e0 \u0111i ti\u1ebfp t\u1edbi c\u00e1c tr\u01b0\u1eddng h\u1ee3p kh\u00e1c.</p> <pre><code>int n;\n\n//m\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u1ed9t, \u0111\u01b0\u1eddng ch\u00e9o ph\u1ee5 v\u00e0 \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh\nbool isInCol[13], isInDiag1[26], isInDiag2[26];\n\n//g\u1ecdi 2 t\u1eadp ri\u00eang chi h\u00e0ng v\u00e0 c\u1ed9t\n//t\u1eadp X c\u00f3 th\u1ec3 b\u1ecf qua do c\u00e1c qu\u00e2n H\u1eadu \u0111\u01b0\u1ee3c sinh l\u1ea7n l\u01b0\u1ee3t theo t\u1eebng h\u00e0ng\nvector &lt;int&gt; curQueensSetX, curQueensSetY;\n\n//In k\u1ebft qu\u1ea3 d\u1ea1ng (X, Y)\nvoid printQueensSet()\n{\n    for (int i = 0; i &lt; n; i ++)\n    {\n        cout &lt;&lt; \"(\" &lt;&lt; curQueensSetX[i] &lt;&lt; \", \" &lt;&lt; curQueensSetY[i] &lt;&lt; \")\";\n        if (i &lt; n - 1) cout &lt;&lt; \", \";\n    }\n    cout &lt;&lt; \"\\n\";\n}\n\n//H\u00e0m \u0111\u1ec7 quy\nvoid genQueensSet(int curRow)\n{\n    for (int curCol = 1; curCol &lt;= n; curCol ++)\n    {\n        //X\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1eddng ch\u00e9o ph\u1ee5 v\u00e0 ch\u00ednh hi\u1ec7n t\u1ea1i\n        int curDiag1 = curRow + curCol;\n        int curDiag2 = curRow - curCol + 13;    //+13 \u0111\u1ec3 tr\u00e1nh ch\u1ec9 s\u1ed1 \u00e2m\n\n        //Ki\u1ec3m tra to\u1ea1 \u0111\u1ed9 m\u1edbi xem c\u00f3 tho\u1ea3 m\u00e3n kh\u00f4ng\n        if (isInCol[curCol] == true) continue;\n        if (isInDiag1[curDiag1] == true) continue;\n        if (isInDiag2[curDiag2] == true) continue;\n\n        //Th\u00eam n\u00f3 v\u00e0o t\u1eadp h\u1ee3p hi\u1ec7n t\u1ea1i n\u1ebfu tho\u1ea3 m\u00e3n\n        curQueensSetX.push_back(curRow);\n        curQueensSetY.push_back(curCol);\n        isInCol[curCol] = true;\n        isInDiag1[curDiag1] = true;\n        isInDiag2[curDiag2] = true;\n\n        //G\u1ecdi \u0111\u1ec7 quy th\u00eam qu\u00e2n ti\u1ebfp theo ho\u1eb7c in k\u1ebft qu\u1ea3\n        if (curQueensSetX.size() == n) printQueensSet();\n        else genQueensSet(curRow + 1);\n\n        //Xo\u00e1 qu\u00e2n v\u1eeba th\u00eam v\u00e0o kh\u1ecfi t\u1eadp h\u1ee3p\n        curQueensSetX.pop_back();\n        curQueensSetY.pop_back();\n        isInCol[curCol] = false;\n        isInDiag1[curDiag1] = false;\n        isInDiag2[curDiag2] = false;\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n\n    memset(isInCol, 0, sizeof(isInCol));\n    memset(isInDiag1, 0, sizeof(isInDiag1));\n    memset(isInDiag2, 0, sizeof(isInDiag2));\n\n    genQueensSet(1);\n\n    return 0;\n}\n</code></pre> <p>N\u1ebfu b\u1ea1n th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c, v\u1edbi \\(n = 8\\) b\u1ea1n s\u1ebd thu \u0111\u01b0\u1ee3c \\(92\\) c\u00e1ch x\u1ebfp tho\u1ea3 m\u00e3n. \\(92\\) c\u00e1ch c\u00f3 v\u1ebb nhi\u1ec1u, nh\u01b0ng n\u1ebfu kh\u00f4ng code, li\u1ec7u b\u1ea1n c\u00f3 x\u1ebfp \u0111\u01b0\u1ee3c kh\u00f4ng? :)).</p>"},{"location":"algo/basic/backtracking/#ky-thuat-nhanh-can","title":"K\u1ef9 thu\u1eadt Nh\u00e1nh c\u1eadn","text":"<p>Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p, thay v\u00ec y\u00eau c\u1ea7u li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c c\u00e1ch ch\u1ecdn tho\u1ea3 m\u00e3n, ta s\u1ebd ph\u1ea3i t\u00ecm xem c\u00e1ch n\u00e0o l\u00e0 c\u00e1ch ch\u1ecdn t\u1ed1t nh\u1ea5t. Khi \u0111\u00f3, vi\u1ec7c d\u00f9ng ph\u01b0\u01a1ng ph\u00e1p nh\u00e1nh c\u1eadn (branch and bound) s\u1ebd gi\u00fap ch\u00fang ta gi\u1ea3i nh\u1eefng b\u00e0i to\u00e1n d\u1ea1ng nh\u01b0 v\u1eady.</p> <p>Th\u1ef1c ch\u1ea5t, \u0111\u00e2y v\u1eabn l\u00e0 thu\u1eadt to\u00e1n quay lui, nh\u01b0ng thay v\u00ec in ra ho\u1eb7c l\u01b0u l\u1ea1i t\u1ea5t c\u1ea3 k\u1ebft qu\u1ea3 trong m\u1ed7i l\u1ea7n t\u00ednh to\u00e1n, ta c\u1eadp nh\u1eadt l\u1ea1i tr\u1ea1ng th\u00e1i t\u1ed1t nh\u1ea5t. \u0110\u1ec3 thu\u1eadt to\u00e1n t\u1ed1i \u01b0u h\u01a1n, n\u1ebfu t\u1ea1i m\u1ed9t b\u01b0\u1edbc, b\u1ea5t k\u1ef3 b\u01b0\u1edbc n\u00e0o ti\u1ebfp theo c\u0169ng kh\u00f4ng th\u1ec3 l\u00e0m cho k\u1ebft qu\u1ea3 t\u1ed1t h\u01a1n k\u1ebft qu\u1ea3 hi\u1ec7n c\u00f3, ta c\u00f3 th\u1ec3 b\u1ecf qua n\u00f3 lu\u00f4n.</p> <p>Ph\u01b0\u01a1ng ph\u00e1p nh\u00e1nh c\u1eadn th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n m\u00e0 t\u1ea1i m\u1ed9t v\u00f2ng \u0111\u1ec7 quy, m\u1ecdi c\u00e1ch \u0111i ti\u1ebfp \u0111\u1ec1u kh\u00f4ng th\u1ec3 \u0111\u01b0a ra m\u1ed9t tr\u01b0\u1eddng h\u1ee3p tho\u1ea3 m\u00e3n. T\u1eeb \u0111\u00f3, ta lo\u1ea1i b\u1ecf nh\u1eefng c\u00f4ng \u0111o\u1ea1n kh\u00f4ng c\u1ea7n thi\u1ebft.</p> <p>Quay tr\u1edf l\u1ea1i b\u00e0i to\u00e1n ph\u00e2n t\u00edch s\u1ed1 \u1edf tr\u00ean. L\u1ea7n n\u00e0y, ta s\u1ebd th\u00eam v\u00e0o \u0111\u1ec1 b\u00e0i m\u1ed9t \u0111i\u1ec1u ki\u1ec7n: \"S\u1ed1 t\u1edd ti\u1ec1n \u0111\u01b0\u1ee3c x\u1ebfp ra l\u00e0 nh\u1ecf nh\u1ea5t. N\u1ebfu c\u00f3 nhi\u1ec1u c\u00e1ch x\u1ebfp tho\u1ea3 m\u00e3n, ch\u1ecdn c\u00e1ch b\u1ea5t k\u1ef3.\"</p> <p>V\u1eabn v\u1edbi \u00fd t\u01b0\u1edfng \u0111\u1ec7 quy nh\u01b0 tr\u00ean, ch\u00fang ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1ch x\u1ebfp r\u1ed3i l\u1ea5y c\u00e1ch t\u1ed1t nh\u1ea5t. Tuy nhi\u00ean, r\u00f5 r\u00e0ng t\u1ea1i m\u1ed9t s\u1ed1 c\u00e1ch, s\u1ed1 ti\u1ec1n c\u00f2n l\u1ea1i khi duy\u1ec7t t\u1edbi nh\u1eefng t\u1edd gi\u1eefa \u0111\u00e3 h\u01a1i \"c\u1ea5n\" r\u1ed3i. V\u00ed d\u1ee5 \u0111\u00e3 c\u00f3 m\u1ed9t c\u00e1ch x\u1ebfp \\(2 \\times 20 + 1 \\times 10 + 1 \\times 50 = 100\\), trong m\u1ed9t b\u01b0\u1edbc kh\u00e1c m\u1edbi x\u00e9t t\u1edbi \\(5 \\times 10\\) th\u00f4i \u0111\u00e3 ch\u1eb3ng c\u00f2n \u00fd ngh\u0129a g\u00ec. Nh\u1eefng c\u00e1ch \u0111\u00f3 c\u00f3 th\u1ec3 b\u1ecf \u0111i \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y nhanh h\u01a1n.</p> <pre><code>int n, a[15];\nlong long S, curMoneySum;\nvector &lt;int&gt; curMoneySet, bestSet;\n\nvoid genMoneySet(int pos)\n{\n    int lastIndex = (curMoneySet.empty() ? 1 : curMoneySet.back());\n    for (int i = lastIndex; i &lt;= n; i ++)\n    {\n        curMoneySet.push_back(i);\n        curMoneySum += a[i];\n\n        if (curMoneySum &gt;= S)\n        {\n            if (curMoneySum == S)\n            {\n                bestSet.clear();\n                for (int i : curMoneySet) bestSet.push_back(i);\n            }\n        }\n        else if (bestSet.empty() || curMoneySet.size() &lt; bestSet.size())    //lo\u1ea1i ngay n\u1ebfu kh\u00f4ng t\u1ed1i \u01b0u\n            genMoneySet(pos + 1);\n\n        curMoneySet.pop_back();\n        curMoneySum -= a[i];\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; S;\n    for (int i = 1; i &lt;= n; i ++) cin &gt;&gt; a[i];\n    curMoneySet.clear();\n    curMoneySum = 0;\n    bestSet.clear();\n    genMoneySet(1);\n\n    for (int i : bestSet) cout &lt;&lt; a[i] &lt;&lt; \" \";\n    cout &lt;&lt; \"\\n\";\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/basic/backtracking/#chu-y-them","title":"Ch\u00fa \u00fd th\u00eam","text":""},{"location":"algo/basic/backtracking/#vi-sao-lai-dung-e-quy","title":"V\u00ec sao l\u1ea1i d\u00f9ng \u0111\u1ec7 quy?","text":"<p>\u01afu \u0111i\u1ec3m m\u00e0 ch\u00fang ta th\u1ea5y ngay \u0111\u01b0\u1ee3c c\u1ee7a vi\u1ec7c s\u1eed d\u1ee5ng \u0111\u1ec7 quy l\u00e0 vi\u1ebft code ng\u1eafn g\u1ecdn h\u01a1n. L\u1ea5y v\u00ed d\u1ee5, khi t\u00ednh s\u1ed1 Fibonacci m\u00e0 kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy, ta s\u1ebd ph\u1ea3i t\u1ea1o hai bi\u1ebfn nh\u1edb cho s\u1ed1 g\u1ea7n th\u1ee9 nh\u00ec v\u00e0 g\u1ea7n nh\u1ea5t, c\u1ed9ng ch\u00fang l\u1ea1i, l\u01b0u v\u00e0o bi\u1ebfn m\u1edbi r\u1ed3i c\u1eadp nh\u1eadt hai bi\u1ebft nh\u1edb; ho\u1eb7c c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ea3ng r\u1ed3i c\u1eadp nh\u1eadt l\u1ea1i sao m\u1ed7i l\u1ea7n t\u00ednh. Ch\u00fang \u0111\u1ec1u l\u00e0m cho \u0111o\u1ea1n code tr\u1edf n\u00ean d\u00e0i h\u01a1n m\u1ed9t ch\u00fat so v\u1edbi vi\u1ec7c d\u00f9ng \u0111\u1ec7 quy \u1edf tr\u00ean. Nh\u01b0ng \u1edf nh\u1eefng b\u00e0i to\u00e1n l\u1edbn h\u01a1n, v\u00ed d\u1ee5 nh\u01b0 nh\u1eefng b\u00e0i to\u00e1n sinh d\u00e3y \u1edf tr\u00ean, vi\u1ec7c kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy s\u1ebd l\u00e0m b\u00e0i l\u1eddi gi\u1ea3i c\u1ee7a ch\u00fang ta c\u1ed3ng k\u1ec1nh h\u01a1n r\u1ea5t nhi\u1ec1u.</p> <p>M\u1ed9t \u01b0u \u0111i\u1ec3m kh\u00e1c c\u1ee7a \u0111\u1ec7 quy gi\u00fap gi\u1ea3i d\u1ec5 d\u00e0ng c\u00e1c b\u00e0i to\u00e1n c\u00f3 d\u1ea1ng m\u1ed9t ph\u1ea7n nh\u1ecf h\u01a1n c\u1ee7a c\u00f4ng vi\u1ec7c c\u1ed9ng th\u00eam m\u1ed9t v\u00e0i l\u1ec7nh kh\u00e1c, v\u00ed d\u1ee5 nh\u01b0 c\u00e1c b\u00e0i to\u00e1n duy\u1ec7t c\u00e2y v\u00e0 \u0111\u1ed3 th\u1ecb.</p> <p>T\u1ea5t nhi\u00ean, \u0111\u1ec7 quy kh\u00f4ng ph\u1ea3i c\u00f4ng c\u1ee5 to\u00e0n n\u0103ng. \u0110\u1ec7 quy l\u00e0m cho thu\u1eadt to\u00e1n tr\u1edf n\u00ean kh\u00f3 hi\u1ec3u h\u01a1n khi \u0111\u1ecdc tr\u1ef1c ti\u1ebfp, \u0111\u1eb7c bi\u1ec7t l\u00e0 v\u1edbi nh\u1eefng thu\u1eadt to\u00e1n d\u00e0i. \u0110\u1ec7 quy c\u0169ng s\u1eed d\u1ee5ng th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb h\u01a1n so v\u1edbi ph\u01b0\u01a1ng ph\u00e1p duy\u1ec7t tr\u1ef1c ti\u1ebfp, do b\u1ed9 nh\u1edb c\u1ea7n ph\u1ea3i l\u01b0u tr\u1eef l\u1ea1i stack c\u00e1c h\u00e0m \u0111\u1ec7 quy.</p>"},{"location":"algo/basic/backtracking/#mot-so-ung-dung-cua-e-quy","title":"M\u1ed9t s\u1ed1 \u1ee9ng d\u1ee5ng c\u1ee7a \u0111\u1ec7 quy","text":"<p>Ngo\u00e0i c\u00e1c b\u00e0i to\u00e1n sinh ho\u1eb7c duy\u1ec7t v\u00e9t c\u1ea1n, \u0111\u1ec7 quy c\u00f2n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 bi\u1ebfn trong c\u00e1c b\u00e0i to\u00e1n duy\u1ec7t c\u00e2y, duy\u1ec7t \u0111\u1ed3 th\u1ecb v\u00e0 quy ho\u1ea1ch \u0111\u1ed9ng. R\u1ea5t nhi\u1ec1u b\u00e0i to\u00e1n \"chia \u0111\u1ec3 tr\u1ecb\" kh\u00e1c c\u0169ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy, \u0111i\u1ec3n h\u00ecnh l\u00e0 thu\u1eadt to\u00e1n QuickSort.</p>"},{"location":"algo/basic/backtracking/#o-phuc-tap-cua-e-quy","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a \u0111\u1ec7 quy","text":"<p>M\u1ed9t h\u00e0m \u0111\u1ec7 quy c\u00f3 d\u1ea1ng nh\u01b0 sau: <pre><code>void recursive(int x)\n{\n    if (x &gt; n) return;\n    for (int i = 1; i &lt;= m; i ++) \n        recursive(x + 1);\n}\n</code></pre> H\u00e0m tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ec7 quy \\(n\\) l\u1ea7n, m\u1ed7i l\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n \\(m\\) l\u1ea7n v\u00f2ng l\u1eb7p n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(m^n)\\).</p> <p>C\u00f3 th\u1ec3 th\u1ea5y, c\u00e1c thu\u1eadt to\u00e1n \u0111\u1ec7 quy c\u00f3 th\u1ec3 c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p r\u1ea5t l\u1edbn, nhi\u1ec1u khi l\u00ean t\u1edbi h\u00e0m m\u0169, tuy v\u1eady l\u1ea1i c\u00f3 l\u00fac nh\u1ecf c\u1ee1 \\(log\\) nh\u01b0 h\u00e0m t\u00ednh \u01afCLN. Do v\u1eady, vi\u1ec7c x\u00e1c \u0111\u1ecbnh s\u1ed1 l\u1ea7n b\u1ecb g\u1ecdi c\u1ee7a h\u00e0m \u0111\u1ec7 quy r\u1ea5t quan tr\u1ecdng. </p> <p>Nh\u1eefng b\u00e0i to\u00e1n y\u00eau c\u1ea7u duy\u1ec7t v\u00e9t c\u1ea1n nh\u01b0 \u1edf tr\u00ean th\u01b0\u1eddng \u0111\u00f2i h\u1ecfi ph\u1ea3i duy\u1ec7t tr\u00ean m\u1ecdi tr\u1ea1ng th\u00e1i ch\u01b0a bi\u1ebft, v\u00e0 v\u00ec th\u1ebf d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o r\u1ea5t nh\u1ecf.</p> <p>C\u00f3 m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c h\u00e0m \u0111\u1ec7 quy l\u00e0 \u0111\u1ecbnh l\u00fd th\u1ee3 (Master Theorem) (t\u00ean g\u1ecdi ti\u1ebfng Vi\u1ec7t c\u00f3 th\u1ec3 kh\u00e1c tu\u1ef3 t\u00e0i li\u1ec7u). Ch\u00fang ta s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o n\u00f3 trong b\u00e0i vi\u1ebft n\u00e0y.</p> <p>Ngo\u00e0i ra, trong m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n y\u00eau c\u1ea7u t\u00ednh to\u00e1n ta c\u0169ng c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 c\u1ee7a m\u1ed9t v\u00e0i v\u00f2ng \u0111\u1ec7 quy \u0111\u1ec3 kh\u00f4ng ph\u1ea3i duy\u1ec7t l\u1ea1i nh\u1eefng ph\u1ea7n \u0111\u00e3 duy\u1ec7t r\u1ed3i. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y g\u1ecdi l\u00e0 \u0111\u1ec7 quy c\u00f3 nh\u1edb.</p>"},{"location":"algo/basic/backtracking/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<ul> <li>M\u1ed9t s\u1ed1 b\u00e0i t\u1eadp tr\u00ean VNOI</li> <li>MNS</li> <li>Bridge Crossing</li> <li>Weird Rooks</li> <li>Gi\u1ea3i Sudoku: H\u00e3y th\u1eed v\u00e0o sudoku.com, t\u00ecm m\u1ed9t b\u1ea3ng Sudoku b\u1ea5t k\u00ec r\u1ed3i th\u1eed vi\u1ebft m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh s\u1eed d\u1ee5ng \u0111\u1ec7 quy quay lui \u0111\u1ec3 gi\u1ea3i n\u00f3. </li> </ul>"},{"location":"algo/basic/backtracking/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>L\u00ea Minh Ho\u00e0ng (2003), Gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh </li> </ul>"},{"location":"algo/basic/binary-search/","title":"Thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n","text":"<p>Ngu\u1ed3n: Topcoder</p> <p>Ng\u01b0\u1eddi d\u1ecbch: - Nguy\u1ec5n Nh\u1eadt Minh Kh\u00f4i - VNU University of Science. Bi\u00ean so\u1ea1n l\u1ea1i t\u1eeb b\u1ea3n d\u1ecbch c\u1ee7a V\u0169 Th\u1ecb Thi\u00ean Anh</p> <p>Reviewer: Ho\u00e0ng Xu\u00e2n Nh\u1eadt, Tr\u1ea7n Quang L\u1ed9c</p> <p>T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n (hay c\u00f2n g\u1ecdi l\u00e0 ch\u1eb7t nh\u1ecb ph\u00e2n) l\u00e0 m\u1ed9t trong s\u1ed1 c\u00e1c thu\u1eadt to\u00e1n c\u01a1 b\u1ea3n c\u1ee7a khoa h\u1ecdc m\u00e1y t\u00ednh. Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd x\u00e2y d\u1ef1ng m\u1ed9t n\u1ec1n t\u1ea3ng l\u00fd thuy\u1ebft, sau \u0111\u00f3 \u0111\u01b0a ra c\u00e1ch c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n n\u00e0y m\u1ed9t c\u00e1ch chu\u1ea9n x\u00e1c.</p>"},{"location":"algo/basic/binary-search/#bai-toan-mo-au-tim-gia-tri-cho-truoc-trong-mot-day-a-sap-xep","title":"B\u00e0i to\u00e1n m\u1edf \u0111\u1ea7u: T\u00ecm gi\u00e1 tr\u1ecb cho tr\u01b0\u1edbc trong m\u1ed9t d\u00e3y \u0111\u00e3 s\u1eafp x\u1ebfp","text":"<p>M\u1edf \u0111\u1ea7u, ta s\u1ebd \u0111\u1ebfn v\u1edbi b\u00e0i to\u00e1n s\u1eed d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n \u0111\u01a1n gi\u1ea3n nh\u1ea5t. \u0110\u1ec1 b\u00e0i nh\u01b0 sau:</p> <p>Cho tr\u01b0\u1edbc m\u1ed9t d\u00e3y \\(A\\) \u0111\u01b0\u1ee3c s\u1eafp t\u0103ng d\u1ea7n, tr\u1ea3 v\u1ec1 v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb \\(x\\) trong \\(A\\). L\u01b0u \u00fd: \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n, ta gi\u1ea3 s\u1eed c\u00e1c ph\u1ea7n t\u1eed trong m\u1ea3ng \\(A\\) c\u00f3 gi\u00e1 tr\u1ecb ph\u00e2n bi\u1ec7t.</p>"},{"location":"algo/basic/binary-search/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>\u0110\u1ea7u ti\u00ean, ta s\u1ebd x\u00e9t m\u1ed9t v\u00ed d\u1ee5 \u0111\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c t\u01b0 t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n. Cho \\(A = [0, 5, 13, 19, 2, 41, 55, 68, 72, 81, 98]\\) v\u00e0 \\(x = 55\\), thu\u1eadt to\u00e1n s\u1ebd di\u1ec5n ra nh\u01b0 h\u00ecnh d\u01b0\u1edbi: </p> <p>\u1ede l\u01b0\u1ee3t t\u00ecm \u0111\u1ea7u ti\u00ean, kh\u00f4ng gian t\u00ecm ki\u1ebfm l\u00e0 t\u1eadp h\u1ee3p \\(S = \\{1,\\ldots,11\\}\\) g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng. B\u1eaft \u0111\u1ea7u v\u1edbi vi\u1ec7c ch\u1ecdn ph\u1ea7n t\u1eed trung v\u1ecb c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm hi\u1ec7n t\u1ea1i (ch\u00ednh l\u00e0 \\(6\\)), ta nh\u1eadn x\u00e9t \\(A[6]=41 &lt; 55 = x\\). Do theo \u0111\u1ec1 b\u00e0i m\u1ea3ng \\(A\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n, ta bi\u1ebft \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 \\(1,\\ldots,6\\) \u0111\u1ec1u nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm \\(x\\). Do \u0111\u00f3, ch\u00fang ch\u1eafc ch\u1eafn kh\u00f4ng th\u1ec3 l\u00e0 k\u1ebft qu\u1ea3, khi \u0111\u00f3 kh\u00f4ng gian t\u00ecm ki\u1ebfm c\u00f3 th\u1ec3 thu h\u1eb9p l\u1ea1i \\(S = \\{7,\\ldots,11\\}\\), t\u1ee9c gi\u1ea3m \u0111i m\u1ed9t n\u1eeda.</p> <p>T\u01b0\u01a1ng t\u1ef1, \u1edf l\u01b0\u1ee3t t\u00ecm th\u1ee9 hai, ta x\u00e9t ph\u1ea7n t\u1eed trung v\u1ecb c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm hi\u1ec7n t\u1ea1i (ch\u00ednh l\u00e0 \\(9\\)), nh\u1eadn th\u1ea5y \\(A[9]=72 &gt; 55 = x\\). C\u0169ng do m\u1ea3ng \\(A\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n, ta bi\u1ebft \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u00f3 v\u1ecb tr\u00ed t\u1eeb \\(9,\\ldots,11\\) \u0111\u1ec1u l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm \\(x\\). Do \u0111\u00f3, ch\u00fang ch\u1eafc ch\u1eafn kh\u00f4ng th\u1ec3 l\u00e0 k\u1ebft qu\u1ea3, khi \u0111\u00f3 kh\u00f4ng gian t\u00ecm ki\u1ebfm s\u1ebd l\u1ea1i gi\u1ea3m \u0111i m\u1ed9t n\u1eeda \\(S = \\{7,\\ldots,8\\}\\).</p> <p>\u1ede l\u01b0\u1ee3t t\u00ecm cu\u1ed1i c\u00f9ng, ta c\u0169ng x\u00e9t ph\u1ea7n t\u1eed trung v\u1ecb c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm hi\u1ec7n t\u1ea1i \u1edf v\u1ecb tr\u00ed \\(7\\) (\u1edf \u0111\u00e2y s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm l\u00e0 ch\u1eb5n, do \u0111\u00f3 c\u00f3 hai ph\u1ea7n t\u1eed trung v\u1ecb, ta c\u00f3 th\u1ec3 ch\u1ecdn m\u1ed9t trong hai \u0111\u1ec1u \u0111\u01b0\u1ee3c, \u1edf v\u00ed d\u1ee5 n\u00e0y ta ch\u1ecdn ph\u1ea7n t\u1eed trung v\u1ecb \u0111\u1ea7u ti\u00ean), Nh\u1eadn th\u1ea5y \\(A[7] = 55 = x\\), ta k\u1ebft lu\u1eadn \\(5\\) ch\u00ednh l\u00e0 v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u1ea7n t\u00ecm v\u00e0 d\u1eebng thu\u1eadt to\u00e1n.</p>"},{"location":"algo/basic/binary-search/#tong-quat-hoa-bai-toan","title":"T\u1ed5ng qu\u00e1t h\u00f3a b\u00e0i to\u00e1n","text":"<p>T\u1eeb v\u00ed d\u1ee5 tr\u00ean, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng hi\u1ec3u \u0111\u01b0\u1ee3c \u00fd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n. \u0110\u00fang nh\u01b0 t\u00ean g\u1ecdi, thu\u1eadt to\u00e1n s\u1ebd li\u00ean t\u1ee5c chia kh\u00f4ng gian t\u00ecm ki\u1ebfm th\u00e0nh hai n\u1eeda v\u00e0 lo\u1ea1i m\u1ed9t n\u1eeda \u0111i. Thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 tr\u00ecnh b\u00e0y nh\u01b0 sau:  1. Ta duy tr\u00ec m\u1ed9t kh\u00f4ng gian t\u00ecm ki\u1ebfm \\(S\\) l\u00e0 m\u1ed9t d\u00e3y con c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 l\u00e0 k\u1ebft qu\u1ea3 (\u1edf \u0111\u00e2y l\u00e0 ch\u1ec9 s\u1ed1 c\u00e1c ph\u1ea7n t\u1eed trong \\(A\\)). Ban \u0111\u1ea7u, kh\u00f4ng gian t\u00ecm ki\u1ebfm l\u00e0 to\u00e0n b\u1ed9 c\u00e1c ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng \\(S=\\{1,\\ldots,n\\}\\) v\u1edbi \\(n\\) l\u00e0 ch\u1ec9 s\u1ed1 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng c\u1ee7a \\(A\\).  2. \u1ede m\u1ed7i b\u01b0\u1edbc, thu\u1eadt to\u00e1n so s\u00e1nh gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm v\u1edbi ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 l\u00e0 trung v\u1ecb trong kh\u00f4ng gian t\u00ecm ki\u1ebfm. D\u1ef1a tr\u00ean s\u1ef1 so s\u00e1nh \u0111\u00f3, c\u1ed9ng th\u00eam vi\u1ec7c ta bi\u1ebft d\u00e3y \\(A\\) c\u00f3 th\u1ee9 t\u1ef1, ta c\u00f3 th\u1ec3 lo\u1ea1i m\u1ed9t n\u1eeda s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a \\(S\\). L\u1eb7p \u0111i l\u1eb7p l\u1ea1i qu\u00e1 tr\u00ecnh n\u00e0y, cu\u1ed1i c\u00f9ng ta s\u1ebd \u0111\u01b0\u1ee3c m\u1ed9t kh\u00f4ng gian t\u00ecm ki\u1ebfm bao g\u1ed3m m\u1ed9t ph\u1ea7n t\u1eed duy nh\u1ea5t. 3. Khi \u0111\u00f3, n\u1ebfu ph\u1ea7n t\u1eed duy nh\u1ea5t \u0111\u00f3 b\u1eb1ng v\u1edbi gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm \\(x\\) th\u00ec \u0111\u00f3 l\u00e0 nghi\u1ec7m c\u1ee7a b\u00e0i to\u00e1n, n\u1ebfu kh\u00f4ng th\u00ec b\u00e0i to\u00e1n v\u00f4 nghi\u1ec7m. </p> <p>\u1ede \u0111\u00e2y c\u00f3 hai l\u01b0u \u00fd khi c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n: - Do kh\u00f4ng gian t\u00ecm ki\u1ebfm lu\u00f4n l\u00e0 m\u1ed9t \u0111o\u1ea1n li\u00ean t\u1ee5c c\u00e1c gi\u00e1 tr\u1ecb nguy\u00ean, ta kh\u00f4ng c\u1ea7n l\u01b0u t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u1ee7a kh\u00f4ng gian khi t\u00ecm ki\u1ebfm m\u00e0 ch\u1ec9 c\u1ea7n duy tr\u00ec hai bi\u1ebfn <code>low</code> v\u00e0 <code>high</code> t\u01b0\u1ee3ng tr\u01b0ng cho ph\u1ea7n t\u1eed \u0111\u1ea7u v\u00e0 cu\u1ed1i c\u1ee7a \u0111o\u1ea1n. - Ta c\u00f3 th\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n h\u01a1n b\u1eb1ng vi\u1ec7c d\u1eebng s\u1edbm n\u1ebfu trong qu\u00e1 tr\u00ecnh so s\u00e1nh g\u1eb7p m\u1ed9t ph\u1ea7n t\u1eed trung v\u1ecb th\u1ecfa y\u00eau c\u1ea7u \u0111\u1ec1 b\u00e0i ch\u1ee9 kh\u00f4ng c\u1ea7n \u0111\u1ee3i \u0111\u1ebfn khi kh\u00f4ng gian t\u00ecm ki\u1ebfm ch\u1ec9 c\u00f2n m\u1ed9t ph\u1ea7n t\u1eed.</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 code minh h\u1ecda vi\u1ebft b\u1eb1ng ng\u00f4n ng\u1eef C++. Trong tr\u01b0\u1eddng h\u1ee3p gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm kh\u00f4ng t\u1ed3n t\u1ea1i trong kho\u1ea3ng t\u00ecm ki\u1ebfm th\u00ec thu\u1eadt to\u00e1n s\u1ebd tr\u1ea3 v\u1ec1 \\(-1\\)</p> <pre><code>int binary_search(int A[], int sizeA, int target) {\n    int lo = 1, hi = sizeA;\n    while (lo &lt;= hi) {\n        int mid = lo + (hi - lo)/2;\n        if (A[mid] == target)\n            return mid;         \n        else if (A[mid] &lt; target)\n            lo = mid+1;\n        else\n            hi = mid-1;\n    }\n    // kh\u00f4ng t\u00ecm th\u1ea5y gi\u00e1 tr\u1ecb target trong m\u1ea3ng A\n    return -1;\n}       \n</code></pre>"},{"location":"algo/basic/binary-search/#o-phuc-tap-thuat-toan","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n","text":"<p>\u1ede m\u1ed7i b\u01b0\u1edbc, k\u00edch th\u01b0\u1edbc kh\u00f4ng gian t\u00ecm ki\u1ebfm b\u1ecb gi\u1ea3m \u0111i m\u1ed9t n\u1eeda. Ta d\u1ec5 th\u1ea5y r\u1eb1ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(\\log(N))\\) v\u1edbi \\(N\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed ban \u0111\u1ea7u c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm.</p> <p>H\u00e0m \\(\\log\\) l\u00e0 m\u1ed9t h\u00e0m t\u0103ng r\u1ea5t ch\u1eadm. V\u00ed d\u1ee5 nh\u01b0 n\u1ebfu ph\u1ea3i t\u00ecm ki\u1ebfm gi\u00e1 tr\u1ecb trong 1 tri\u1ec7u ph\u1ea7n t\u1eed, v\u1edbi t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n ch\u1ec9 c\u1ea7n t\u1ed1i \u0111a l\u00e0 21 b\u01b0\u1edbc.</p>"},{"location":"algo/basic/binary-search/#tim-kiem-nhi-phan-trong-thu-vien-chuan-stl","title":"T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n trong th\u01b0 vi\u1ec7n chu\u1ea9n STL","text":"<p>C++ Standard Template Library \u0111\u00e3 c\u00e0i \u0111\u1eb7t s\u1eb5n t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n b\u1eb1ng c\u00e1c h\u00e0m lower_bound, upper_bound, binary_search, equal_range, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o t\u00f9y thu\u1ed9c v\u00e0o m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng.</p>"},{"location":"algo/basic/binary-search/#tim-kiem-nhi-phan-tong-quat","title":"T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n t\u1ed5ng qu\u00e1t","text":"<p>\u1ede ph\u1ea7n tr\u01b0\u1edbc, ta \u0111\u00e3 x\u00e9t d\u1ea1ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t c\u1ee7a t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n. Trong ph\u1ea7n n\u00e0y, ch\u00fang ta s\u1ebd t\u1ed5ng qu\u00e1t h\u00f3a thu\u1eadt t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n cho m\u1ed9t l\u1edbp b\u00e0i to\u00e1n r\u1ed9ng h\u01a1n. Ta s\u1ebd th\u1ea5y t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng \u0111\u1ec3 \u00e1p d\u1ee5ng cho b\u1ea5t k\u1ef3 lo\u1ea1i h\u00e0m s\u1ed1 \u0111\u01a1n \u0111i\u1ec7u n\u00e0o nh\u1eadn tham s\u1ed1 \u0111\u1ea7u v\u00e0o l\u00e0 s\u1ed1 nguy\u00ean. N\u00f3i m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n, m\u1ed9t h\u00e0m s\u1ed1 \u0111\u01a1n \u0111i\u1ec7u l\u00e0 m\u1ed9t h\u00e0m t\u0103ng ho\u1eb7c m\u1ed9t h\u00e0m gi\u1ea3m. Trong v\u00ed d\u1ee5 \u0111\u1ea7u b\u00e0i, hi\u1ec3n nhi\u00ean m\u1ea3ng s\u1eafp x\u1ebfp t\u0103ng c\u00f3 th\u1ec3 xem nh\u01b0 m\u1ed9t \"h\u00e0m t\u0103ng\".</p>"},{"location":"algo/basic/binary-search/#co-so-ly-thuyet-inh-ly-chinh-cua-tim-kiem-nhi-phan","title":"C\u01a1 s\u1edf l\u00fd thuy\u1ebft: \u0110\u1ecbnh l\u00fd ch\u00ednh c\u1ee7a t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n","text":"<p>Khi g\u1eb7p m\u1ed9t b\u00e0i to\u00e1n m\u00e0 ta \u0111o\u00e1n \u0111\u01b0\u1ee3c c\u00f3 th\u1ec3 d\u00f9ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n \u0111\u1ec3 gi\u1ea3i, th\u00ec ta ph\u1ea3i ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn suy lu\u1eadn c\u1ee7a ch\u00fang ta. Do \u0111\u00f3, x\u00e2y d\u1ef1ng m\u1ed9t c\u01a1 s\u1edf l\u00fd thuy\u1ebft v\u1eefng ch\u1eafc l\u00e0 v\u00f4 c\u00f9ng c\u1ea7n thi\u1ebft. Sau \u0111\u00e2y, t\u00f4i s\u1ebd tr\u00ecnh b\u00e0y m\u1ed9t l\u1edbp t\u1ed5ng qu\u00e1t h\u00f3a n\u1eefa cho c\u00e1c b\u00e0i to\u00e1n c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n, song song \u0111\u00f3 l\u00e0 v\u00ed d\u1ee5 th\u1ef1c t\u1ebf v\u1edbi b\u00e0i to\u00e1n m\u1edf \u0111\u1ea7u.</p> <p>Cho kh\u00f4ng gian t\u00ecm ki\u1ebfm \\(S\\) bao g\u1ed3m c\u00e1c \u1ee9ng c\u1eed vi\u00ean cho k\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n. Ta \u0111\u1ecbnh ngh\u0129a m\u00f4t h\u00e0m ki\u1ec3m tra \\(P: S \\rightarrow \\{\\texttt{true}, \\texttt{false}\\}\\) l\u00e0 h\u00e0m nh\u1eadn m\u1ed9t \u1ee9ng c\u1eed vi\u00ean \\(x \\in S\\) v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb \\(\\texttt{true}/\\texttt{false}\\) cho bi\u1ebft \\(x\\) c\u00f3 h\u1ee3p l\u1ec7 hay kh\u00f4ng (t\u00f9y v\u00e0o b\u00e0i to\u00e1n m\u00e0 \u0111\u1ecbnh ngh\u0129a h\u1ee3p l\u1ec7 s\u1ebd kh\u00e1c nhau). Hi\u1ec3u \u0111\u01a1n gi\u1ea3n, h\u00e0m \\(P\\) l\u00e0 h\u00e0m \"ki\u1ec3m tra\" m\u1ed9t t\u00ednh ch\u1ea5t n\u00e0o \u0111\u00f3, xem m\u1ed9t \u1ee9ng c\u1eed vi\u00ean cho k\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n c\u00f3 th\u1ecfa t\u00ednh ch\u1ea5t \u0111\u00f3 kh\u00f4ng.</p> <p>V\u1edbi v\u00ed d\u1ee5 \u1edf \u0111\u1ea7u b\u00e0i, thay v\u00ec t\u00ecm ch\u1ec9 s\u1ed1 c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb \\(55\\), ta c\u00f3 th\u1ec3 vi\u1ebft l\u1ea1i \u0111\u1ec1 b\u00e0i th\u00e0nh \"t\u00ecm ch\u1ec9 s\u1ed1 nh\u1ecf nh\u1ea5t sao cho ph\u1ea7n t\u1eed \u1edf ch\u1ec9 s\u1ed1 \u0111\u00f3 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(55\\)\". Khi \u0111\u00f3, kh\u00f4ng gian t\u00ecm ki\u1ebfm ban \u0111\u1ea7u \\(S = \\{1,\\ldots,11\\}\\) (ban \u0111\u1ea7u m\u1ecdi ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng \u0111\u1ec1u c\u00f3 th\u1ec3 l\u00e0 k\u1ebft qu\u1ea3) v\u00e0 \\(P(x) = boolean(a[x] \\geq 55)\\) tr\u1ea3 v\u1ec1 \\(\\texttt{true}\\) n\u1ebfu \\(a[x] \\geq 55\\) v\u00e0 \\(\\texttt{false}\\) n\u1ebfu \\(a[x] &lt; 55\\).</p> <p>\u0110\u1ecbnh l\u00fd ch\u00ednh (Main Theorem) cho bi\u1ebft r\u1eb1ng: m\u1ed9t b\u00e0i to\u00e1n ch\u1ec9 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu h\u00e0m ki\u1ec3m tra \\(P\\) c\u1ee7a b\u00e0i to\u00e1n th\u1ecfa m\u00e3n \\begin{equation} \\forall x, y \\in S, y &gt; x \\wedge P(x) = \\texttt{true} \\Rightarrow P(y) = \\texttt{true} \\tag{*} \\label{eq:1} \\end{equation}</p> <p>L\u01b0u \u00fd r\u1eb1ng t\u00ednh ch\u1ea5t tr\u00ean c\u1ee7a h\u00e0m ki\u1ec3m tra \\(P\\) c\u0169ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi t\u00ednh ch\u1ea5t sau: \\begin{equation} \\forall x, y \\in S, y &lt; x \\wedge P(x) = \\texttt{false} \\Rightarrow P(y) = \\texttt{false} \\tag{**} \\label{eq:2} \\end{equation}</p> <p>S\u1ef1 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng \u1edf \u0111\u00e2y c\u00f3 th\u1ec3 ch\u1ee9ng minh b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p ph\u1ea3n ch\u1ee9ng, \u0111\u1ec3 tr\u00e1nh b\u00e0i vi\u1ebft qu\u00e1 d\u00e0i d\u00f2ng, ph\u1ea7n ch\u1ee9ng minh \u0111\u1ec3 l\u1ea1i cho b\u1ea1n \u0111\u1ecdc.</p> <p>\u0110\u1ecbnh l\u00fd ch\u00ednh mang cho ch\u00fang ta m\u1ed9t th\u00f4ng tin r\u1ea5t quan tr\u1ecdng, \u0111\u00f3 l\u00e0 \u0111i\u1ec1u ki\u1ec7n c\u1ea7n v\u00e0 \u0111\u1ee7 \u0111\u1ec3 m\u1ed9t b\u00e0i to\u00e1n c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n. \u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c t\u1ea1i sao, ch\u00fang ta h\u00e3y ph\u00e2n t\u00edch k\u0129 h\u01a1n \u00fd ngh\u0129a t\u00ednh ch\u1ea5t c\u1ee7a h\u00e0m \\(P\\) m\u00e0 \u0111\u1ecbnh l\u00fd y\u00eau c\u1ea7u </p> <ul> <li>T\u00ednh ch\u1ea5t \\(\\eqref{eq:1}\\) c\u00f3 th\u1ec3 gi\u1ea3i th\u00edch nh\u01b0 sau: n\u1ebfu \\(x\\) h\u1ee3p l\u1ec7 th\u00ec m\u1ecdi ph\u1ea7n t\u1eed \\(y &gt; x\\) \u0111\u1ec1u h\u1ee3p l\u1ec7. T\u00ednh ch\u1ea5t n\u00e0y gi\u00fap ch\u00fang ta lo\u1ea1i \u0111i n\u1eeda sau c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm do \u0111\u00e3 bi\u1ebft ch\u1eafc \\(x\\) l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong n\u1eeda sau h\u1ee3p l\u1ec7, ta ghi nh\u1eadn \\(x\\) l\u00e0 k\u1ebft qu\u1ea3 t\u1ea1m th\u1eddi v\u00e0 ti\u1ebfp t\u1ee5c t\u00ecm xem c\u00f3 ph\u1ea7n t\u1eed n\u00e0o \u1edf n\u1eeda \u0111\u1ea7u (nh\u1ecf h\u01a1n \\(x\\)) h\u1ee3p l\u1ec7 hay kh\u00f4ng.</li> <li>T\u01b0\u01a1ng t\u1ef1, t\u00ednh ch\u1ea5t \\(\\eqref{eq:2}\\) c\u00f3 th\u1ec3 gi\u1ea3i th\u00edch nh\u01b0 sau: n\u1ebfu \\(x\\) kh\u00f4ng h\u1ee3p l\u1ec7 th\u00ec m\u1ecdi ph\u1ea7n t\u1eed \\(y &lt; x\\) \u0111\u1ec1u kh\u00f4ng h\u1ee3p l\u1ec7. T\u00ednh ch\u1ea5t n\u00e0y gi\u00fap ch\u00fang ta lo\u1ea1i \u0111i n\u1eeda tr\u01b0\u1edbc c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm do \u0111\u00e3 bi\u1ebft ch\u1eafc ch\u00fang kh\u00f4ng h\u1ee3p l\u1ec7, ta ch\u1ec9 quan t\u00e2m nh\u1eefng ph\u1ea7n t\u1eed \u1edf n\u1eeda sau (l\u1edbn h\u01a1n \\(x\\)) m\u00e0 ta ch\u01b0a bi\u1ebft th\u00f4ng tin ch\u00fang c\u00f3 h\u1ee3p l\u1ec7 hay kh\u00f4ng.</li> </ul> <p>N\u1ebfu ta t\u00ednh gi\u00e1 tr\u1ecb \\(P(x)\\) cho t\u1eebng ph\u1ea7n t\u1eed trong \\(S\\) ban \u0111\u1ea7u, ta s\u1ebd \u0111\u01b0\u1ee3c m\u1ed9t d\u00e3y li\u00ean ti\u1ebfp c\u00e1c gi\u00e1 tr\u1ecb \\(\\texttt{false}\\) li\u1ec1n k\u1ec1 m\u1ed9t d\u00e3y li\u00ean ti\u1ebfp c\u00e1c gi\u00e1 tr\u1ecb \\(\\texttt{true}\\) (t\u1eeb nay g\u1ecdi l\u00e0 d\u00e3y \\(P(S)\\)). D\u1ec5 th\u1ea5y ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n tr\u00ean d\u00e3y \\(P(S)\\) m\u1edbi n\u00e0y \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb \\(x\\) nh\u1ecf nh\u1ea5t th\u1ecfa m\u00e3n \\(P(x) = \\texttt{true}\\) (ho\u1eb7c c\u0169ng c\u00f3 th\u1ec3 l\u00e0m c\u00e1ch t\u00ecm gi\u00e1 tr\u1ecb \\(x\\) l\u1edbn nh\u1ea5t m\u00e0 \\(P(x) = \\texttt{false}\\), tuy nhi\u00ean \u1edf \u0111\u00e2y ta kh\u00f4ng ch\u1ecdn c\u00e1ch n\u00e0y).</p> <p>V\u1edbi v\u00ed d\u1ee5 \u0111\u1ea7u b\u00e0i, nh\u01b0 \u0111\u00e3 n\u00f3i \\(P(x) = boolean(A[x] \\geq 55)\\). D\u1ec5 th\u1ea5y \\(P\\) th\u1ecfa m\u00e3n t\u00ednh ch\u1ea5t \u0111\u1ea7u ti\u00ean, do \\(A\\) \u0111\u01b0\u1ee3c s\u1eafp t\u0103ng d\u1ea7n n\u00ean n\u1ebfu \\(A[x] \\geq 55\\) th\u00ec ch\u1eafc ch\u1eafn c\u00e1c ph\u1ea7n t\u1eed \\(y\\) sau \\(x\\) \u0111\u1ec1u th\u1ecfa \\(A[y] \\geq A[x] \\geq 55\\). T\u01b0\u01a1ng t\u1ef1 ta c\u0169ng suy ra \u0111\u01b0\u1ee3c, n\u1ebfu \\(A[x] &lt; 55\\) th\u00ec ch\u1eafc ch\u1eafn c\u00e1c ph\u1ea7n t\u1eed \\(y\\) tr\u01b0\u1edbc \\(x\\) \u0111\u1ec1u th\u1ecfa \\(A[y] \\leq A[x] &lt; 55\\). \u00c1p d\u1ee5ng h\u00e0m \\(P(x) = boolean(A[x] \\geq 55)\\) cho t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a \\(S=\\{1,\\ldots,11\\}\\) ta c\u00f3 h\u00ecnh sau </p> <p>Ch\u00fa \u00fd r\u1eb1ng ta th\u1ea5y c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng x\u00e2y d\u1ef1ng \u0111\u1ecbnh l\u00fd ch\u00ednh d\u1ef1a tr\u00ean m\u1ed9t h\u00e0m ki\u1ec3m tra \\(P\\) ng\u01b0\u1ee3c l\u1ea1i, t\u1ee9c \\(P(S)\\) s\u1ebd l\u00e0 m\u1ed9t d\u00e3y \\(\\texttt{true}\\) li\u00ean ti\u1ebfp theo sau b\u1edfi \\(\\texttt{false}\\) li\u00ean ti\u1ebfp. Tuy nhi\u00ean, \u1edf \u0111\u00e2y ta s\u1ebd ch\u1ec9 x\u00e9t m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1ec3 b\u00e0i vi\u1ebft ng\u1eafn g\u1ecdn h\u01a1n, tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i c\u00f3 th\u1ec3 l\u00e0m t\u01b0\u01a1ng t\u1ef1.</p> <p>T\u1eeb \u0111\u1ecbnh l\u00fd tr\u00ean, ta r\u00fat ra \u0111\u01b0\u1ee3c m\u1ea5u ch\u1ed1t \u0111\u1ec3 gi\u1ea3i m\u1ed9t b\u00e0i to\u00e1n d\u00f9ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n l\u00e0 ta c\u1ea7n thi\u1ebft k\u1ebf \u0111\u01b0\u1ee3c h\u00e0m \\(P\\) h\u1ee3p l\u00fd sao cho th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n trong \u0111\u1ecbnh l\u00fd ch\u00ednh.</p> <p>Cu\u1ed1i c\u00f9ng, t\u1ea1i sao ta ph\u1ea3i t\u1ed1n c\u00f4ng t\u1ed5ng qu\u00e1t h\u00f3a thu\u1eadt to\u00e1n n\u00e0y thay v\u00ec d\u00f9ng c\u00e1ch l\u00e0m \u0111\u01a1n gi\u1ea3n \u1edf v\u00ed d\u1ee5 \u0111\u1ea7u? \u0110\u00f3 l\u00e0 v\u00ec nhi\u1ec1u b\u00e0i to\u00e1n kh\u00f4ng th\u1ec3 \u1edf d\u01b0\u1edbi d\u1ea1ng t\u00ecm ki\u1ebfm m\u1ed9t gi\u00e1 tr\u1ecb c\u1ee5 th\u1ec3, nh\u01b0ng ta l\u1ea1i c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a m\u1ed9t h\u00e0m ki\u1ec3m tra th\u1ecfa y\u00eau c\u1ea7u \u0111\u1ecbnh l\u00fd ch\u00ednh \u0111\u1ec3 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n. B\u1eb1ng c\u00e1ch \u0111\u00f3, ta c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng l\u1edbp b\u00e0i to\u00e1n c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n. </p> <p>V\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho vi\u1ec7c \u00e1p d\u1ee5ng \u0111\u1ecbnh l\u00fd l\u00e0 v\u1edbi b\u00e0i to\u00e1n T\u00ecm c\u0103n b\u1eadc hai, thay v\u00ec h\u1ecfi \"S\u1ed1 \\(x\\) n\u00e0o b\u00ecnh ph\u01b0\u01a1ng l\u00ean th\u00ec b\u1eb1ng \\(a\\)?\" v\u00e0 t\u00ecm ki\u1ebfm tu\u1ea7n t\u1ef1 t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p, ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a h\u00e0m \\(P(x)\\) tr\u1ea3 l\u1eddi cho c\u00e2u h\u1ecfi \"\\(x^2\\) c\u00f3 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(a\\) hay kh\u00f4ng?\" sau \u0111\u00f3 d\u00f9ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n \u0111\u1ec3 t\u00ecm \\(x\\) nh\u1ecf nh\u1ea5t th\u1ecfa m\u00e3n. V\u1edbi c\u00e1ch l\u00e0m n\u00e0y ta c\u00f3 th\u1ec3 \u0111\u01a1n gi\u1ea3n h\u00f3a b\u00e0i to\u00e1n th\u00e0nh m\u1ed9t b\u00e0i to\u00e1n yes/no, h\u01a1n th\u1ebf c\u00f2n gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n t\u1eeb \\(O(n)\\) xu\u1ed1ng ch\u1ec9 c\u00f2n \\(O(\\log(n))\\).</p>"},{"location":"algo/basic/binary-search/#cai-at-thuat-toan-tong-quat","title":"C\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n t\u1ed5ng qu\u00e1t","text":"<p>Tr\u01b0\u1edbc khi c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n, ta ph\u1ea3i tr\u1ea3 l\u1eddi nh\u1eefng c\u00e2u h\u1ecfi sau: 1. D\u00e3y \\(P(S)\\) c\u1ee7a b\u1ea1n c\u00f3 d\u1ea1ng \\(\\texttt{false}-\\texttt{true}\\) (\\(\\texttt{false}\\) li\u00ean ti\u1ebfp r\u1ed3i \\(\\texttt{true}\\) li\u00ean ti\u1ebfp) hay \\(\\texttt{true}-\\texttt{false}\\) (ng\u01b0\u1ee3c l\u1ea1i)? \u1ede c\u00e0i \u0111\u1eb7t ph\u00eda d\u01b0\u1edbi s\u1ebd m\u1eb7c \u0111\u1ecbnh d\u00e3y \\(P(S)\\) c\u00f3 d\u1ea1ng \\(\\texttt{false}-\\texttt{true}\\), v\u00ec v\u1eady n\u1ebfu d\u00e3y \\(P(S)\\) c\u1ee7a b\u1ea1n c\u00f3 d\u1ea1ng \\(\\texttt{true}-\\texttt{false}\\), h\u00e3y \u0111\u1ea3o h\u00e0m \\(P(x)\\) c\u1ee7a b\u1ea1n ng\u01b0\u1ee3c l\u1ea1i. 2. B\u00e0i c\u1ee7a b\u1ea1n c\u00f3 lu\u00f4n c\u00f3 nghi\u1ec7m kh\u00f4ng? N\u1ebfu kh\u00f4ng h\u00e3y ki\u1ec3m tra tr\u01b0\u1edbc khi t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n \u0111\u1ec3 ti\u1ebft ki\u1ec7m chi ph\u00ed t\u00ednh to\u00e1n. 3. M\u1ee5c ti\u00eau c\u1ee7a b\u1ea1n l\u00e0 t\u00ecm ph\u1ea7n t\u1eed \\(\\texttt{false}\\) l\u1edbn nh\u1ea5t hay t\u00ecm ph\u1ea7n t\u1eed \\(\\texttt{true}\\) nh\u1ecf nh\u1ea5t? \u1ede \u0111\u00e2y s\u1ebd tr\u00ecnh b\u00e0y c\u1ea3 hai c\u00e1ch. 4. N\u1ebfu b\u00e0i to\u00e1n c\u00f3 nghi\u1ec7m, h\u00e3y \u0111\u1ea3m b\u1ea3o gi\u00e1 tr\u1ecb ch\u1eb7n d\u01b0\u1edbi v\u00e0 ch\u1eb7n tr\u00ean c\u1ee7a kho\u1ea3ng t\u00ecm ki\u1ebfm (bi\u1ebfn <code>lo</code> v\u00e0 <code>hi</code>) l\u00e0 b\u1eaft \u0111\u1ea7u v\u00e0 k\u1ebft th\u00fac c\u1ee7a m\u1ed9t kho\u1ea3ng \u0111\u00f3ng m\u00e0 ch\u1eafc ch\u1eafn ch\u1ee9a k\u1ebft qu\u1ea3 c\u1ea7n t\u00ecm (ph\u1ea7n t\u1eed \\(x\\) \u0111\u1ea7u ti\u00ean m\u00e0 \\(P(x) = \\texttt{true}\\)). H\u00e3y \u0111\u1ea3m b\u1ea3o \u0111i\u1ec1u ki\u1ec7n n\u00e0y trong l\u00fac thu h\u1eb9p kh\u00f4ng gian t\u00ecm ki\u1ebfm \u0111\u1ec3 tr\u00e1nh x\u1ea3y ra l\u1ed7i. 5. Ph\u1ea1m vi t\u00ecm ki\u1ebfm \u0111\u00e3 \u0111\u1ee7 r\u1ed9ng ch\u01b0a? S\u1ebd c\u00f3 nhi\u1ec1u l\u00fac ch\u1ea5m xong b\u1ea1n nh\u1eadn ra l\u00e0 m\u00ecnh thi\u1ebfu v\u00e0i tr\u01b0\u1eddng h\u1ee3p bi\u00ean. V\u00ec th\u1eddi gian ch\u1ea1y ch\u1ec9 t\u0103ng theo h\u00e0m logarit \\(O(\\log(N))\\), b\u1ea1n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 n\u00e2ng r\u1ed9ng kho\u1ea3ng t\u00ecm ki\u1ebfm ra m\u00e0 \u00edt khi lo b\u1ecb qu\u00e1 th\u1eddi gian. Tuy nhi\u00ean, ph\u1ea3i \u0111\u1ec3 \u00fd c\u00e1c l\u1ed7i nh\u01b0 tr\u00e0n m\u1ea3ng, tr\u00e0n s\u1ed1,... 6. Lu\u00f4n ki\u1ec3m tra tr\u01b0\u1eddng h\u1ee3p \\(P(S) = [\\texttt{false},\\texttt{true}]\\). \u0110\u1ec3 hi\u1ec3u l\u00fd do t\u1ea1i sao h\u00e3y \u0111\u1ecdc Tr\u01b0\u1eddng h\u1ee3p 2 c\u1ee7a c\u00e0i \u0111\u1eb7t.</p> <p>TH1: t\u00ecm \\(x\\) nh\u1ecf nh\u1ea5t m\u00e0 \\(P(x) = \\texttt{true}\\). D\u01b0\u1edbi \u0111\u00e2y l\u00e0 \u0111o\u1ea1n code m\u1eabu vi\u1ebft b\u1eb1ng C++. <pre><code>bool P(int x) {\n    // Logic c\u1ee7a h\u00e0m P \u1edf \u0111\u00e2y\n    return true;  // thay gi\u00e1 tr\u1ecb n\u00e0y b\u1eb1ng gi\u00e1 tr\u1ecb \u0111\u00fang logic.\n}\n\nint binary_search(int lo, int hi) {\n    while (lo &lt; hi) {\n        int mid = lo + (hi-lo)/2;\n        if (P(mid) == true)\n            hi = mid;\n        else\n            lo = mid+1;\n    }\n\n    if (P(lo) == false)\n        return -1; // P(x) = false v\u1edbi m\u1ecdi x thu\u1ed9c S, b\u00e0i to\u00e1n v\u00f4 nghi\u1ec7m.\n\n   return lo; // lo l\u00e0 gi\u00e1 tr\u1ecb x nh\u1ecf nh\u1ea5t m\u00e0 P(x) = true\n}\n</code></pre> Hai d\u00f2ng quan tr\u1ecdng l\u00e0 \\(hi = mid\\) v\u00e0 \\(lo = mid+1\\), ch\u00fang gi\u00fap ta thu h\u1eb9p kh\u00f4ng gian t\u00ecm ki\u1ebfm d\u1ea7n. </p> <p>Khi \\(P(mid) = \\texttt{true}\\), ta c\u00f3 th\u1ec3 b\u1ecf n\u1eeda sau c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm v\u00ec \u0111\u00e3 bi\u1ebft ph\u1ea7n t\u1eed trong \u0111\u00f3 lu\u00f4n h\u1ee3p l\u1ec7. Tuy nhi\u00ean ta v\u1eabn ph\u1ea3i gi\u1eef \\(mid\\) trong kh\u00f4ng gian t\u00ecm ki\u1ebfm m\u1edbi v\u00ec n\u00f3 c\u00f3 th\u1ec3 l\u00e0 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean m\u00e0 \\(P = \\texttt{true}\\). Do \u0111\u00f3 kh\u00f4ng gian t\u00ecm ki\u1ebfm m\u1edbi s\u1ebd l\u00e0 \\(S=\\{lo, mid\\}\\), ta g\u00e1n \\(hi = mid\\).</p> <p>T\u01b0\u01a1ng t\u1ef1, khi \\(P(mid) = \\texttt{false}\\), ta c\u00f3 th\u1ec3 b\u1ecf n\u1eeda \u0111\u1ea7u (bao g\u1ed3m c\u1ea3 ph\u1ea7n t\u1eed \\(mid\\)) v\u00ec t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed n\u00e0y \u0111\u1ec1u kh\u00f4ng h\u1ee3p l\u1ec7. L\u00fac n\u00e0y kh\u00f4ng gian t\u00ecm ki\u1ebfm m\u1edbi s\u1ebd l\u00e0 \\(S=\\{mid + 1, hi\\}\\), ta g\u00e1n \\(lo  = mid+1\\).</p> <p>TH2: t\u00ecm \\(x\\) l\u1edbn nh\u1ea5t m\u00e0 \\(P(x) = \\texttt{false}\\), suy lu\u1eadn t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean, ta c\u00f3 \u0111o\u1ea1n code nh\u01b0 sau:</p> <pre><code>bool P(int x) {\n    // Logic c\u1ee7a h\u00e0m P \u1edf \u0111\u00e2y\n    return true;  // thay gi\u00e1 tr\u1ecb n\u00e0y b\u1eb1ng gi\u00e1 tr\u1ecb \u0111\u00fang logic.\n}\n\nint binary_search(int lo, int hi) {\n    while (lo &lt; hi) {\n        int mid = lo + (hi-lo+1)/2;\n        if (P(mid) == true)\n            hi = mid - 1;\n        else\n            lo = mid;\n    }\n\n    if (P(lo) == true)\n        return -1; // P(x) = true v\u1edbi m\u1ecdi x thu\u1ed9c S, b\u00e0i to\u00e1n v\u00f4 nghi\u1ec7m.\n\n   return lo; // lo l\u00e0 gi\u00e1 tr\u1ecb x l\u1edbn nh\u1ea5t m\u00e0 P(x) = false\n}\n</code></pre> <p>B\u1ea1n s\u1ebd th\u1eafc m\u1eafc r\u1eb1ng t\u1ea1i sao c\u00e1ch t\u00ednh \\(mid\\) l\u1ea1i c\u00f3 m\u1ed9t t\u00ed kh\u00e1c bi\u1ec7t so v\u1edbi thu\u1eadt to\u00e1n \u0111\u1ea7u ti\u00ean. \u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c t\u1ea1i sao ta ph\u1ea3i l\u00e0m th\u1ebf, ta s\u1ebd x\u00e9t tr\u01b0\u1eddng h\u1ee3p sau:  trong qu\u00e1 tr\u00ecnh t\u00ecm ki\u1ebfm, n\u1ebfu t\u1ea1i m\u1ed9t th\u1eddi di\u1ec3m n\u00e0o \u0111\u00f3 m\u00e0 d\u00e3y \\(P(S)\\) t\u1ea1o ra b\u1edfi c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm c\u00f3 d\u1ea1ng nh\u01b0 sau</p> false true <p>N\u1ebfu ta t\u00ednh \\(mid = lo + (hi-lo)/2\\), \u0111o\u1ea1n code s\u1ebd l\u1eb7p v\u00f4 h\u1ea1n. N\u00f3 s\u1ebd lu\u00f4n ch\u1ecdn ph\u1ea7n t\u1eed trung v\u1ecb l\u00e0 \\(mid = lo\\), nh\u01b0ng c\u1eadn d\u01b0\u1edbi \\(lo\\) s\u1ebd kh\u00f4ng di chuy\u1ec3n v\u00ec n\u00f3 mu\u1ed1n gi\u1eef l\u1ea1i ph\u1ea7n t\u1eed c\u00f3 \\(p = \\texttt{false}\\) th\u1ecfa y\u00eau c\u1ea7u t\u00ecm ki\u1ebfm \u0111\u00f3. Do \u0111\u00f3, ta thay \u0111\u1ed5i c\u00f4ng th\u1ee9c t\u00ednh \\(mid\\) th\u00e0nh \\(mid = lo + (hi-lo+1)/2\\), l\u00e0m nh\u01b0 v\u1eady s\u1ebd khi\u1ebfn c\u1eadn d\u01b0\u1edbi s\u1ebd \u0111\u01b0\u1ee3c l\u00e0m tr\u00f2n l\u00ean thay v\u00ec l\u00e0m tr\u00f2n xu\u1ed1ng, khi \u0111\u00f3 n\u00f3 c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \\(\\texttt{true}\\) tr\u01b0\u1edbc khi x\u00e9t ph\u1ea7n t\u1eed \\(\\texttt{false}\\). C\u00f3 nhi\u1ec1u c\u00e1ch l\u00e0m kh\u00e1c \u0111\u1ec3 th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y, tuy nhi\u00ean, \u0111\u00e2y l\u00e0 c\u00e1ch d\u1ec5 hi\u1ec3u nh\u1ea5t. Do v\u1eady, h\u00e3y lu\u00f4n lu\u00f4n ki\u1ec3m tra th\u1eed tr\u01b0\u1eddng h\u1ee3p \\(P(S) = [\\texttt{false}, \\texttt{true}]\\).</p> <p>M\u1ed9t \u0111i\u1ec1u c\u00f3 th\u1ec3 b\u1ea1n \u0111ang th\u1eafc m\u1eafc n\u1eefa l\u00e0 t\u1ea1i sao \u0111\u1ec3 t\u00ecm trung v\u1ecb ta t\u00ednh \\(mid = lo + (hi-lo)/2\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i \\(mid = (hi+lo)/2\\). S\u1edf d\u0129 ph\u1ea3i l\u00e0m nh\u01b0 v\u1eady l\u00e0 \u0111\u1ec3 tr\u00e1nh kh\u1ea3 n\u0103ng x\u1ea3y ra l\u1ed7i l\u00e0m tr\u00f2n s\u1ed1 nguy\u00ean, ta mu\u1ed1n ph\u00e9p chia \u0111\u01b0\u1ee3c l\u00e0m tr\u00f2n xu\u1ed1ng, v\u1ec1 g\u1ea7n v\u1edbi c\u1eadn d\u01b0\u1edbi, tuy nhi\u00ean ph\u00e9p chia l\u00e0m tr\u00f2n kh\u00e1c khi c\u00f3 s\u1ed1 \u00e2m, n\u00ean n\u1ebfu \\((lo+hi)\\) l\u00e0 s\u1ed1 \u00e2m th\u00ec k\u1ebft qu\u1ea3 s\u1ebd b\u1ecb l\u00e0m tr\u00f2n l\u00ean. Code nh\u01b0 trong m\u1eabu kia gi\u00fap qu\u00e1 tr\u00ecnh t\u00ednh to\u00e1n \u0111\u1ec1u \u0111\u01b0\u1ee3c l\u00e0m tr\u00f2n \u0111\u00fang theo logic. \u0110\u1ed1i v\u1edbi c\u00e1c b\u00e0i to\u00e1n m\u00e0 ch\u1ec9 c\u1ea7n x\u1eed l\u00fd gi\u00e1 tr\u1ecb d\u01b0\u01a1ng th\u00ec l\u1ed7i n\u00e0y kh\u00f4ng x\u1ea3y ra.</p>"},{"location":"algo/basic/binary-search/#cai-at-thuat-toan-voi-nua-khoang","title":"C\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n v\u1edbi n\u1eeda kho\u1ea3ng","text":"<p>C\u00e0i \u0111\u1eb7t v\u1edbi \u0111o\u1ea1n \u0111\u00f3ng \\([lo, hi]\\) nh\u01b0 tr\u00ean c\u00f3 \u01b0u \u0111i\u1ec3m l\u00e0 d\u1ec5 hi\u1ec3u. Tuy nhi\u00ean, quay l\u1ea1i m\u1ed9t ch\u00fat v\u1edbi c\u01a1 s\u1edf l\u00fd thuy\u1ebft: v\u1edbi d\u00e3y \\(P(S)\\) c\u00f3 d\u1ea1ng \\(\\texttt{false}-\\texttt{true}\\), th\u1ef1c t\u1ebf ta n\u00ean ch\u1ecdn gi\u00e1 tr\u1ecb \\(lo\\) v\u00e0 \\(hi\\) m\u00e0 \\(P(lo) = \\texttt{false}\\) v\u00e0 \\(P(hi) = \\texttt{true}\\) \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o lu\u00f4n t\u00ecm \u0111\u01b0\u1ee3c nghi\u1ec7m. Do \u0111\u00f3 s\u1ebd kh\u00f4ng \u1ed5n n\u1ebfu nh\u01b0 d\u00e3y \\(P(S)\\) c\u1ee7a ta \u0111\u1ec1u to\u00e0n gi\u00e1 tr\u1ecb \\(\\texttt{false}\\) (t\u1ee9c v\u00f4 nghi\u1ec7m). Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, c\u00e0i \u0111\u1eb7t v\u1edbi \u0111o\u1ea1n \u0111\u00f3ng c\u00f3 th\u00eam \u0111o\u1ea1n ki\u1ec3m tra \u0111\u1ec3 <code>return - 1</code>.</p> <p>Gi\u1ea3i ph\u00e1p cho tr\u01b0\u1eddng h\u1ee3p n\u00e0y ch\u00ednh l\u00e0 c\u00e0i \u0111\u1eb7t v\u1edbi n\u1eeda kho\u1ea3ng. \u0110\u1ec3 \u00fd r\u1eb1ng trong tr\u01b0\u1eddng h\u1ee3p v\u00f4 nghi\u1ec7m, c\u00e1ch c\u00e0i \u0111\u1eb7t v\u1edbi kho\u1ea3ng \u0111\u00f3ng s\u1ebd tr\u1ea3 v\u1ec1 c\u1eadn tr\u00ean \\(hi\\) c\u1ee7a \u0111o\u1ea1n t\u00ecm ki\u1ebfm ban \u0111\u1ea7u (do ch\u1ec9 c\u00f3 c\u1eadn d\u01b0\u1edbi \\(lo\\) li\u00ean t\u1ee5c d\u1ecbch chuy\u1ec3n l\u00ean v\u00e0 ch\u1ea1m t\u1edbi \\(hi\\)). H\u01a1n n\u1eefa, thu\u1eadt to\u00e1n c\u1ee7a ta kh\u00f4ng bao gi\u1edd g\u1ecdi \\(P(hi)\\) v\u00ec \u0111\u1ec3 c\u00f3 \\(mid = hi\\), ta \u0111\u00e3 ph\u1ea3i c\u00f3 \\(lo = hi\\), nh\u01b0ng l\u00fac \u0111\u00f3 thu\u1eadt to\u00e1n ch\u1eafc ch\u1eafn \u0111\u00e3 d\u1eebng do \u0111i\u1ec1u ki\u1ec7n <code>while (lo &lt; hi)</code> trong c\u00e0i \u0111\u1eb7t.</p> <p>\u0110i\u1ec1u n\u00e0y cho ta m\u1ed9t \u00fd t\u01b0\u1edfng: t\u1ea1o m\u1ed9t gi\u00e1 tr\u1ecb \\(hi' = hi + 1\\) \u1ea3o v\u00e0 m\u1eb7c \u0111\u1ecbnh coi \\(P(hi') = \\texttt{true}\\). Ta s\u1ebd t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n tr\u00ean \u0111o\u1ea1n \\([lo, hi']\\) m\u1edbi v\u00e0 n\u1ebfu b\u00e0i to\u00e1n v\u00f4 nghi\u1ec7m th\u00ec k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 s\u1ebd l\u00e0 \\(hi'\\), ta kh\u00f4ng c\u1ea7n ph\u1ea3i ki\u1ec3m tra \u0111\u1ec3 <code>return -1</code>. S\u1edf d\u0129 g\u1ecdi l\u00e0 c\u00e0i \u0111\u1eb7t v\u1edbi n\u1eeda kho\u1ea3ng v\u00ec khi truy\u1ec1n tham s\u1ed1 cho h\u00e0m l\u00e0 \\(lo\\) v\u00e0 \\(hi\\), th\u1ef1c ra ta ch\u1ec9 mu\u1ed1n k\u1ebft qu\u1ea3 trong n\u1eeda kho\u1ea3ng \\([lo, hi)\\), c\u00f2n \\(hi\\) ch\u1ec9 l\u00e0 gi\u00e1 tr\u1ecb \u1ea3o cho bi\u1ebft tr\u01b0\u1eddng h\u1ee3p v\u00f4 nghi\u1ec7m.</p> <p>C\u00e0i \u0111\u1eb7t c\u0169ng t\u01b0\u01a1ng t\u1ef1 v\u1edbi \u0111o\u1ea1n \u0111\u00f3ng, ngo\u1ea1i tr\u1eeb vi\u1ec7c ta lo\u1ea1i b\u1ecf \u0111i \u0111o\u1ea1n code ki\u1ec3m tra v\u00f4 nghi\u1ec7m: <pre><code>bool P(int x) {\n    // Logic c\u1ee7a h\u00e0m P \u1edf \u0111\u00e2y\n    return true;  // thay gi\u00e1 tr\u1ecb n\u00e0y b\u1eb1ng gi\u00e1 tr\u1ecb \u0111\u00fang logic.\n}\n\n// nh\u1edb r\u1eb1ng ta ph\u1ea3i truy\u1ec1n hi l\u1edbn h\u01a1n m\u1ed9t \u0111\u01a1n v\u1ecb \n// so v\u1edbi \u0111o\u1ea1n t\u00ecm ki\u1ebfm th\u1ef1c s\u1ef1\nint binary_search(int lo, int hi) {\n    while (lo &lt; hi) {\n        int mid = lo + (hi-lo)/2;\n        if (P(mid) == true)\n            hi = mid;\n        else\n            lo = mid+1;\n    }\n\n   return lo; // lo l\u00e0 gi\u00e1 tr\u1ecb x nh\u1ecf nh\u1ea5t m\u00e0 P(x) = true\n}\n</code></pre> C\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y c\u00f2n c\u00f3 m\u1ed9t \u01b0u \u0111i\u1ec3m kh\u00e1c, \u0111\u00f3 l\u00e0 trong C++ v\u00e0 r\u1ea5t nhi\u1ec1u ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c th\u00ec m\u1ea3ng b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\), v\u00ec v\u1eady n\u1ebfu c\u1ea7n t\u00ecm m\u1ed9t ph\u1ea7n t\u1eed n\u00e0o \u0111\u00f3 trong m\u1ea3ng th\u00ec v\u1edbi c\u00e0i \u0111\u1eb7t b\u1eb1ng n\u1eeda kho\u1ea3ng tham s\u1ed1 truy\u1ec1n v\u00e0o s\u1ebd r\u1ea5t \u0111\u1eb9p, \u0111\u00f3 l\u00e0 <code>binary_search(0, N)</code> v\u1edbi \\(N\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng. To\u00e0n b\u1ed9 th\u01b0 vi\u1ec7n STL, <code>lower_bound</code>, <code>upper_bound</code> \u0111\u1ec1u nh\u1eadn n\u1eeda kho\u1ea3ng, v\u00e0 th\u1ef1c t\u1ebf nguy\u00ean l\u00fd c\u1ee7a c\u00e1c h\u00e0m \u0111\u00f3 c\u0169ng nh\u01b0 tr\u00ean: kh\u00f4ng t\u00ecm ra \u0111\u00e1p \u00e1n th\u00ec tr\u1ea3 v\u1ec1 <code>iterator end</code>.</p> <p>L\u01b0u \u00fd: V\u1edbi tr\u01b0\u1eddng h\u1ee3p ta mu\u1ed1n t\u00ecm v\u1ecb tr\u00ed ph\u1ea7n t\u1eed \\(\\texttt{false}\\) cu\u1ed1i c\u00f9ng th\u00ec n\u1eeda kho\u1ea3ng c\u1ea7n t\u00ecm s\u1ebd l\u00e0 <code>(lo, hi]</code> v\u00e0 h\u00e0m s\u1ebd t\u1ef1 \u0111\u1ed9ng tr\u1ea3 v\u1ec1 <code>lo</code> n\u1ebfu m\u1ecdi gi\u00e1 tr\u1ecb trong kho\u1ea3ng l\u00e0 \\(\\texttt{true}\\).</p>"},{"location":"algo/basic/binary-search/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>\u0110\u1ebfn \u0111\u00e2y ta s\u1ebd \u00e1p d\u1ee5ng nh\u1eefng \u0111i\u1ec1u v\u1eeba h\u1ecdc v\u00e0o m\u1ed9t b\u00e0i c\u1ee5 th\u1ec3 Leetcode 1011.</p> <p>Trong b\u00e0i n\u00e0y, m\u1ed9t b\u0103ng chuy\u1ec1n ph\u1ea3i v\u1eadn chuy\u1ec3n c\u00e1c g\u00f3i h\u00e0ng theo th\u1ee9 t\u1ef1 cho tr\u01b0\u1edbc trong \\(days\\) ng\u00e0y. G\u00f3i h\u00e0ng th\u1ee9 \\(i\\) c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng \\(weights[i]\\). Bi\u1ebft m\u1ed7i ng\u00e0y b\u0103ng chuy\u1ec1n ch\u1ec9 c\u00f3 th\u1ec3 v\u1eadn chuy\u1ec3n t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng t\u1ed1i \u0111a l\u00e0 \\(MAX\\). \u0110\u1ec1 b\u00e0i y\u00eau c\u1ea7u t\u00ecm \\(MAX\\) nh\u1ecf nh\u1ea5t \u0111\u1ec3 b\u0103ng chuy\u1ec1n c\u00f3 th\u1ec3 ho\u00e0n th\u00e0nh nhi\u1ec7m v\u1ee5 \u0111\u01b0\u1ee3c giao.</p> <p>\u0110\u1ec3 \u00fd th\u1ea5y r\u1eb1ng, v\u1edbi m\u1ed9t s\u1ed1 \\(MAX\\), ta c\u00f3 th\u1ec3 t\u00ednh to\u00e1n \u0111\u01b0\u1ee3c s\u1ed1 ng\u00e0y \u0111\u1ec3 chuy\u1ec3n h\u1ebft c\u00e1c g\u00f3i h\u00e0ng sao cho m\u1ed7i ng\u00e0y t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng v\u1eadn chuy\u1ec3n kh\u00f4ng qu\u00e1 \\(MAX\\). Ban \u0111\u1ea7u, giao g\u00f3i h\u00e0ng \\(1\\) \u0111\u1ec3 ng\u00e0y \\(1\\) chuy\u1ec3n. N\u1ebfu v\u1eadn chuy\u1ec3n g\u00f3i h\u00e0ng \\(2\\) trong ng\u00e0y \\(1\\) kh\u00f4ng l\u00e0m t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng trong ng\u00e0y v\u01b0\u1ee3t \\(MAX\\), th\u00ec ta s\u1ebd chuy\u1ec3n lu\u00f4n g\u00f3i \u0111\u00f3 trong ng\u00e0y \\(1\\). N\u1ebfu kh\u00f4ng, ta s\u1ebd chuy\u1ec3n g\u00f3i \u0111\u00f3 trong ng\u00e0y \\(2\\). L\u00e0m l\u1ea7n l\u01b0\u1ee3t nh\u01b0 th\u1ebf t\u1edbi khi m\u1ecdi g\u00f3i h\u00e0ng \u0111\u1ec1u \u0111\u01b0\u1ee3c chuy\u1ec3n, ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c s\u1ed1 ng\u00e0y t\u1ed1i thi\u1ec3u c\u1ea7n \u0111\u1ec3 chuy\u1ec3n h\u1ebft g\u00f3i h\u00e0ng v\u1edbi t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng m\u1ed7i ng\u00e0y kh\u00f4ng qu\u00e1 \\(MAX\\).</p> <p>Quay l\u1ea1i \u0111\u1ec1 b\u00e0i, ta th\u1ea5y r\u1eb1ng th\u1ef1c ra v\u1ea5n \u0111\u1ec1 c\u1ee7a b\u00e0i to\u00e1n l\u00e0 t\u00ecm s\u1ed1 \\(MAX\\) nh\u1ecf nh\u1ea5t sao cho s\u1ed1 ng\u00e0y t\u1ed1i thi\u1ec3u \u0111\u1ec3 chuy\u1ec3n h\u1ebft g\u00f3i h\u00e0ng kh\u00f4ng qu\u00e1 \\(days\\) ng\u00e0y. Nh\u01b0 v\u1eady, ta c\u00f3 th\u1ec3 d\u00f9ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n v\u1edbi h\u00e0m ki\u1ec3m tra \\(P\\) \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng b\u1eb1ng thu\u1eadt to\u00e1n tham lam \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf tr\u00ean \u0111\u1ec3 ki\u1ec3m tra c\u00e1c gi\u00e1 tr\u1ecb \\(MAX\\). \u0110\u1ec3 \u00fd t\u00ednh ch\u1ea5t \u0111\u01a1n \u0111i\u1ec7u \u1edf \u0111\u00e2y th\u1ec3 hi\u1ec7n \u1edf ch\u1ed7 n\u1ebfu \\(MAX\\) t\u0103ng l\u00ean th\u00ec s\u1ed1 l\u01b0\u1ee3ng ng\u00e0y c\u1ea7n d\u00f9ng ch\u1ec9 c\u00f3 th\u1ec3 gi\u1eef nguy\u00ean ho\u1eb7c gi\u1ea3m \u0111i n\u00ean h\u00e0m \\(P\\) th\u1ecfa \u0111\u1ecbnh l\u00fd ch\u00ednh v\u00e0 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n.</p> <p>Sau \u0111\u00e2y l\u00e0 \u0111o\u1ea1n code m\u1eabu b\u1eb1ng C++:</p> <pre><code>// h\u00e0m ki\u1ec3m tra P\n bool check(int capacity, const vector&lt;int&gt;&amp; weights, int days) {\n    int current_weight = 0; --days;\n    for(int i = 0; i &lt; weights.size(); ++i) {\n        if (current_weight + weights[i] &lt;= capacity)\n            current_weight += weights[i];\n        else {\n            --days;\n            current_weight = weights[i];\n        }\n    }\n    return days &gt;= 0;\n}\n\n// h\u00e0m t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n\nint shipWithinDays(const vector&lt;int&gt;&amp; weights, int days) {\n    int lo = 0, hi = 0;\n    for (int i = 0; i &lt; weights.size(); ++i) {\n        lo = max(lo, weights[i]);\n        hi += weights[i];\n    }\n\n    while (lo &lt; hi) {\n        int mid = lo + (hi - lo)/2;\n        if (check(mid, weights, days))\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n\n    return lo;\n}\n</code></pre> <p>H\u00e0m t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n ch\u00ednh l\u00e0 h\u00e0m <code>shipWithinDays</code> v\u00e0 h\u00e0m ki\u1ec3m tra l\u00e0 h\u00e0m <code>check</code>. C\u00f3 m\u1ed9t l\u01b0u \u00fd v\u1ec1 vi\u1ec7c ch\u1ecdn c\u1eadn d\u01b0\u1edbi v\u00e0 c\u1eadn tr\u00ean. C\u1eadn tr\u00ean c\u00f3 th\u1ec3 l\u00e0 b\u1ea5t c\u1ee9 s\u1ed1 nguy\u00ean n\u00e0o \u0111\u1ee7 l\u1edbn, \u1edf \u0111\u00e2y ch\u1ecdn l\u00e0 t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c g\u00f3i h\u00e0ng (cho tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t c\u1ea7n v\u1eadn chuy\u1ec3n trong \u0111\u00fang m\u1ed9t ng\u00e0y). Tuy nhi\u00ean c\u1eadn d\u01b0\u1edbi ph\u1ea3i b\u1eb1ng \u00edt nh\u1ea5t l\u00e0 kh\u1ed1i l\u01b0\u1ee3ng c\u1ee7a g\u00f3i h\u00e0ng n\u1eb7ng nh\u1ea5t \u0111\u1ec3 tr\u00e1nh tr\u01b0\u1eddng h\u1ee3p g\u00f3i h\u00e0ng qu\u00e1 l\u1edbn \u0111\u1ec3 chuy\u1ec3n trong m\u1ed9t ng\u00e0y.</p> <p>\u0110\u1ec3 ki\u1ec3m tra thu\u1eadt to\u00e1n kh\u00f4ng b\u1ecb l\u1eb7p v\u00f4 h\u1ea1n v\u1edbi tr\u01b0\u1eddng h\u1ee3p \\([\\texttt{false}, \\texttt{true}]\\), ta th\u1eed m\u1ed9t test nh\u01b0 sau: \\(weights = [1,1], days = 1\\) v\u00e0 th\u1ea5y thu\u1eadt to\u00e1n ho\u1ea1t \u0111\u1ed9ng t\u1ed1t.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(n \\cdot \\log(SIZE))\\) v\u1edbi \\(SIZE = hi -lo + 1\\) l\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm v\u00e0 \\(n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng g\u00f3i h\u00e0ng, do \u0111\u00f3 thu\u1eadt to\u00e1n ch\u1ea1y r\u1ea5t nhanh.</p>"},{"location":"algo/basic/binary-search/#tim-kiem-nhi-phan-tren-so-thuc","title":"T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n tr\u00ean s\u1ed1 th\u1ef1c","text":"<p>T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng khi kh\u00f4ng gian t\u00ecm ki\u1ebfm l\u00e0 m\u1ed9t \u0111o\u1ea1n s\u1ed1 th\u1ef1c. Th\u01b0\u1eddng th\u00ec vi\u1ec7c x\u1eed l\u00fd s\u1ebd \u0111\u01a1n gi\u1ea3n h\u01a1n v\u1edbi s\u1ed1 nguy\u00ean do ta kh\u00f4ng ph\u1ea3i b\u1eadn t\u00e2m v\u1ec1 vi\u1ec7c d\u1ecbch chuy\u1ec3n c\u1eadn: ```cpp bool P(double x) {     // Logic c\u1ee7a h\u00e0m P \u1edf \u0111\u00e2y     return true;  // thay gi\u00e1 tr\u1ecb n\u00e0y b\u1eb1ng gi\u00e1 tr\u1ecb \u0111\u00fang logic. }</p> <p>bool isTerminated(double lo, double hi) {     // tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c ki\u1ec3m tra     // lo v\u00e0 hi c\u00f3 th\u1ecfa \u0111i\u1ec1u ki\u1ec7n d\u1eebng ch\u01b0a  }</p> <p>double binary_search(double lo, double hi) {     while (isTerminated(lo, hi) == false) {         double mid = lo + (hi-lo)/2;         if (P(mid) == true)             hi = mid;         else             lo = mid;     }     // trung b\u00ecnh c\u1ed9ng lo v\u00e0 hi x\u1ea5p x\u1ec9      // ranh gi\u1edbi gi\u1eefa false v\u00e0 true     return lo + (hi-lo)/2;  }</p> <p><code>`` Ta th\u01b0\u1eddng kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb m\u1ee5c ti\u00eau m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c m\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 x\u1ea5p x\u1ec9 k\u1ebft qu\u1ea3, \u0111\u00f3 l\u00e0 l\u00fd do c\u00f3 h\u00e0m \u0111i\u1ec1u ki\u1ec7n d\u1eebng</code>isTerminated`. Th\u00f4ng th\u01b0\u1eddng c\u00f3 2 c\u00e1ch quy\u1ebft \u0111\u1ecbnh khi n\u00e0o d\u1eebng v\u00f2ng l\u1eb7p: 1. D\u1eebng sau m\u1ed9t s\u1ed1 v\u00f2ng l\u1eb7p c\u1ed1 \u0111\u1ecbnh (fixed): th\u00f4ng th\u01b0\u1eddng khi l\u00e0m b\u00e0i t\u1eadp tr\u00ean TopCoder, ch\u1ec9 c\u1ea7n l\u1eb7p kho\u1ea3ng 100 l\u1ea7n l\u00e0 \u0111\u1ee7 (nhi\u1ec1u khi l\u00e0 th\u1eeba) \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ch\u00ednh x\u00e1c mong mu\u1ed1n cho nh\u1eefng b\u00e0i d\u1ea1ng th\u1ebf n\u00e0y. 2. Sai s\u1ed1 tuy\u1ec7t \u0111\u1ed1i (absolute error): d\u1eebng khi \\(hi - lo \\leq \\epsilon\\) (\\(\\epsilon\\) th\u01b0\u1eddng r\u1ea5t nh\u1ecf, kho\u1ea3ng \\(10^{-8}\\)). C\u00e1ch n\u00e0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng n\u1ebfu th\u1eddi gian ch\u1eb7t v\u00e0 b\u1ea1n ph\u1ea3i ti\u1ebft ki\u1ec7m s\u1ed1 l\u1ea7n l\u1eb7p. </p>"},{"location":"algo/basic/binary-search/#mot-so-bai-toan-ve-tim-kiem-nhi-phan","title":"M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n v\u1ec1 t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n","text":""},{"location":"algo/basic/binary-search/#on-gian","title":"\u0110\u01a1n gi\u1ea3n","text":"<ul> <li>Power</li> <li>Sushi for Two</li> </ul>"},{"location":"algo/basic/binary-search/#nang-cao","title":"N\u00e2ng cao","text":"<ul> <li>ACOW - USACO21 Open Silver</li> <li>Wooden Sticks</li> <li>c11cave</li> <li>Increase and Copy</li> <li>Prime Matrix</li> </ul>"},{"location":"algo/basic/bitwise-operators/","title":"Ph\u00e9p to\u00e1n bit","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: Nguy\u1ec5n Minh Nh\u1eadt - HUS High School for Gifted Students</p> <p>Reviewer: - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM - University of Science - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean - VNU - University of Engineering and Technology - L\u00ea Minh Ho\u00e0ng - VNUHCM - University of Science</p>"},{"location":"algo/basic/bitwise-operators/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e1c ph\u00e9p to\u00e1n v\u1edbi bit (Bitwise Operators) l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c to\u00e1n t\u1eed v\u00e0 h\u00e0m d\u00e0nh ri\u00eang cho vi\u1ec7c th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c bi\u1ebfn \u0111\u1ed5i v\u00e0 t\u00ednh to\u00e1n tr\u00ean c\u00e1c bit c\u1ee7a m\u1ed9t s\u1ed1 nguy\u00ean (v\u00ed d\u1ee5 nh\u01b0 <code>int</code> hay <code>long long</code> trong C++).</p>"},{"location":"algo/basic/bitwise-operators/#luu-y-truoc-khi-oc-bai-viet","title":"L\u01b0u \u00fd tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i vi\u1ebft","text":"<p>Tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i vi\u1ebft n\u00e0y, b\u1ea1n c\u1ea7n trang b\u1ecb ki\u1ebfn th\u1ee9c v\u1ec1 c\u00e1c ch\u1ee7 \u0111\u1ec1 sau:</p> <ul> <li>Bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a s\u1ed1 nguy\u00ean.</li> <li>C\u00e1ch s\u1eed d\u1ee5ng AND (&amp;&amp;) v\u00e0 OR (||) \u0111\u1ed1i v\u1edbi c\u00e1c to\u00e1n h\u1ea1ng bool trong C++.</li> </ul> <p>C\u00e1c kh\u00e1i ni\u1ec7m sau \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng xuy\u00ean su\u1ed1t b\u00e0i vi\u1ebft:</p> <ul> <li> <p>B\u1ea3ng ch\u00e2n tr\u1ecb (Truth Table) c\u1ee7a m\u1ed9t to\u00e1n t\u1eed bit c\u00f3 th\u1ec3 hi\u1ec3u n\u00f4m na l\u00e0 t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u v\u00e0o/\u0111\u1ea7u ra c\u1ee7a ph\u00e9p to\u00e1n \u0111\u00f3.</p> </li> <li> <p>Bi\u1ec3u di\u1ec5n d\u1ea1ng nh\u1ecb ph\u00e2n c\u1ee7a m\u1ed9t s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1eb1ng ti\u1ec1n t\u1ed1 <code>0b</code>. Ch\u1eb3ng h\u1ea1n, v\u1edbi s\u1ed1 <code>12</code> c\u00f3 bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n l\u00e0 <code>1100</code>, ta vi\u1ebft <code>12 = 0b1100</code>. \u0110\u00e2y c\u0169ng l\u00e0 c\u00e1ch vi\u1ebft \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn trong code C++.</p> </li> <li> <p>Bitmask l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c ch\u1eef s\u1ed1 \\(0\\), \\(1\\), hay c\u00e1c bit. Trong \u0111\u00f3, vi\u1ec7c bit th\u1ee9 \\(i\\) \u0111\u01b0\u1ee3c b\u1eadt t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c m\u1ed9t ph\u1ea7n t\u1eed/\u0111\u1ea1i l\u01b0\u1ee3ng th\u1ee9 \\(i\\) n\u00e0o \u0111\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.</p> <p>V\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n nh\u1ea5t c\u1ee7a bitmask l\u00e0 bi\u1ec3u di\u1ec5n m\u1ed9t t\u1eadp con c\u1ee7a m\u1ed9t t\u1eadp h\u1ee3p \\(A\\) cho tr\u01b0\u1edbc. Ch\u1eb3ng h\u1ea1n, \\(A = \\{5, 1, 2, 3, 0, 4\\}\\), bitmask <code>0b110010</code> bi\u1ec3u di\u1ec5n cho t\u1eadp con \\(\\{1, 0, 4\\}\\) c\u1ee7a \\(A\\).</p> <p>Ch\u00fa \u00fd: Trong b\u00e0i vi\u1ebft n\u00e0y, th\u1ee9 t\u1ef1 c\u00e1c bit c\u1ee7a bitmask \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb ph\u1ea3i sang tr\u00e1i, b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\). \u0110i\u1ec1u n\u00e0y t\u01b0\u01a1ng t\u1ef1 nh\u01b0 ch\u1eef s\u1ed1 h\u00e0ng \u0111\u01a1n v\u1ecb, h\u00e0ng ch\u1ee5c, h\u00e0ng tr\u0103m, h\u00e0ng ngh\u00ecn trong s\u1ed1 th\u1eadp ph\u00e2n l\u1ea7n l\u01b0\u1ee3t \u0111\u01b0\u1ee3c vi\u1ebft t\u1eeb tr\u00e1i sang ph\u1ea3i, t\u1eeb th\u1ea5p \u0111\u1ebfn cao.</p> <p>Tr\u00ean th\u1ef1c t\u1ebf, ta s\u1ebd th\u01b0\u1eddng bi\u1ec3u di\u1ec5n bitmask b\u1eb1ng c\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean (v\u00ed d\u1ee5 nh\u01b0 c\u00e1c ki\u1ec3u <code>int</code> hay <code>long long</code> trong C++).</p> </li> <li> <p>Trong m\u1ed9t bitmask, bit th\u1ee9 \\(i\\) b\u1eadt c\u00f3 ngh\u0129a l\u00e0 bit th\u1ee9 \\(i\\) c\u1ee7a bitmask n\u00e0y c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(1\\). T\u01b0\u01a1ng t\u1ef1, bit th\u1ee9 \\(i\\) t\u1eaft c\u00f3 ngh\u0129a l\u00e0 bit th\u1ee9 \\(i\\) c\u1ee7a bitmask n\u00e0y c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(0\\).</p> </li> <li> <p>Undefined Behaviour (UB) \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 ch\u1ec9 m\u1ed9t \u0111o\u1ea1n code kh\u00f4ng c\u00f3 h\u00e0nh vi c\u1ed1 \u0111\u1ecbnh. N\u00f3i c\u00e1ch kh\u00e1c, ta kh\u00f4ng bi\u1ebft \u0111o\u1ea1n code \u0111\u00f3 s\u1ebd l\u00e0m g\u00ec. M\u1ed9t \u0111o\u1ea1n code UB c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 sai, l\u00e0m ch\u01b0\u01a1ng tr\u00ecnh g\u1eb7p l\u1ed7i, hay tr\u1ea3 v\u1ec1 c\u00e1c k\u1ebft qu\u1ea3 kh\u00e1c nhau v\u1edbi hai l\u1ea7n ch\u1ea1y kh\u00e1c nhau, ho\u1eb7c th\u1eadm ch\u00ed l\u00e0 v\u1edbi compiler kh\u00e1c nhau.</p> </li> <li> <p>K\u00fd hi\u1ec7u \\(L\\) \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 ch\u1ec9 s\u1ed1 l\u01b0\u1ee3ng Bit c\u1ee7a ki\u1ec3u s\u1ed1 hi\u1ec7n t\u1ea1i \u0111ang s\u1eed d\u1ee5ng (\\(32\\) v\u1edbi <code>int</code> v\u00e0 \\(64\\) v\u1edbi <code>long long</code>).</p> </li> </ul>"},{"location":"algo/basic/bitwise-operators/#cac-toan-tu-thao-tac-bit-bitwise-operators-co-ban","title":"C\u00e1c to\u00e1n t\u1eed thao t\u00e1c bit (Bitwise Operators) c\u01a1 b\u1ea3n","text":""},{"location":"algo/basic/bitwise-operators/#toan-tu-bitwise-and-or-va-xor","title":"To\u00e1n t\u1eed Bitwise AND (&amp;), OR (|) v\u00e0 XOR (^)","text":"<p>C\u00e1c to\u00e1n t\u1eed n\u00e0y thu\u1ed9c lo\u1ea1i \"To\u00e1n t\u1eed Bit Logic\". Vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1c to\u00e1n t\u1eed lo\u1ea1i n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c hi\u1ec3u n\u00f4m na l\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c t\u01b0\u01a1ng \u1ee9ng tr\u00ean t\u1eebng bit c\u1ee7a c\u00e1c to\u00e1n h\u1ea1ng (operands). N\u00f3i c\u00e1ch kh\u00e1c, n\u1ebfu k\u00fd hi\u1ec7u \\(a_i\\) l\u00e0 bit th\u1ee9 \\(i\\) c\u1ee7a bitmask \\(a\\), vi\u1ec7c th\u1ef1c hi\u1ec7n ph\u00e9p to\u00e1n \\(c := a \\oplus b\\) trong \u0111\u00f3 \\(a, b, c\\) l\u00e0 c\u00e1c bitmask v\u00e0 \\(\\oplus\\) l\u00e0 m\u1ed9t ph\u00e9p to\u00e1n n\u00e0o \u0111\u00f3 s\u1ebd t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c th\u1ef1c hi\u1ec7n \\(c_i := a_i \\oplus b_i \\forall 0 \\leq i\\).</p> <p>\u0110\u1ecbnh ngh\u0129a c\u1ee7a c\u00e1c ph\u00e9p to\u00e1n n\u00e0y nh\u01b0 sau:</p> <ol> <li> <p>AND tr\u1ea3 v\u1ec1 True khi v\u00e0 ch\u1ec9 khi c\u1ea3 hai to\u00e1n h\u1ea1ng l\u00e0 True.</p> <p>V\u00ed d\u1ee5, ta c\u00f3:</p> <pre><code>  0b11100010\n&amp; 0b10101111\n= 0b10100010\n</code></pre> </li> <li> <p>OR tr\u1ea3 v\u1ec1 True khi v\u00e0 ch\u1ec9 khi \u00edt nh\u1ea5t m\u1ed9t to\u00e1n h\u1ea1ng l\u00e0 True.</p> <p>V\u00ed d\u1ee5, ta c\u00f3:</p> <pre><code>  0b11100010\n| 0b10101111\n= 0b11101111\n</code></pre> </li> <li> <p>XOR tr\u1ea3 v\u1ec1 True khi v\u00e0 ch\u1ec9 khi hai to\u00e1n h\u1ea1ng c\u00f3 gi\u00e1 tr\u1ecb kh\u00e1c nhau. M\u1ed9t c\u00e1ch hi\u1ec3u kh\u00e1c cho XOR l\u00e0 ph\u00e9p c\u1ed9ng theo modulo 2.</p> <p>V\u00ed d\u1ee5, ta c\u00f3:</p> <pre><code>  0b11100010\n^ 0b10101111\n= 0b01001101\n</code></pre> </li> </ol> <p>Sau \u0111\u00e2y l\u00e0 b\u1ea3ng ch\u00e2n tr\u1ecb c\u1ee7a c\u00e1c to\u00e1n t\u1eed n\u00e0y</p> a b AND OR XOR 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 0 0 0"},{"location":"algo/basic/bitwise-operators/#toan-tu-bitwise-not","title":"To\u00e1n t\u1eed Bitwise NOT (~)","text":"<p>To\u00e1n t\u1eed Bitwise NOT c\u00f3 l\u1ebd l\u00e0 to\u00e1n t\u1eed \u0111\u01a1n gi\u1ea3n nh\u1ea5t. To\u00e1n t\u1eed n\u00e0y nh\u1eadn v\u00e0o m\u1ed9t to\u00e1n h\u1ea1ng \\(A\\) v\u00e0 tr\u1ea3 v\u1ec1 ph\u1ea7n b\u00f9 c\u1ee7a to\u00e1n h\u1ea1ng n\u00e0y. N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u1ecbnh ngh\u0129a c\u1ee7a NOT l\u00e0 tr\u1ea3 v\u1ec1 False khi v\u00e0 ch\u1ec9 khi to\u00e1n h\u1ea1ng l\u00e0 True.</p> <p>V\u00ed d\u1ee5, ta c\u00f3:</p> <pre><code> ~0b10100100\n= 0b01011011\n</code></pre> <p>Ch\u00fa \u00fd r\u1eb1ng bi\u1ec3u th\u1ee9c tr\u00ean ch\u1ec9 \u0111\u00fang trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u v\u00e0o l\u00e0 ki\u1ec3u s\u1ed1 c\u00f3 8 bit. C\u1ee5 th\u1ec3 h\u01a1n, c\u1ea7n ch\u00fa \u00fd:</p> <p>Khi s\u1eed d\u1ee5ng ph\u00e9p NOT, nh\u1eefng bit kh\u00f4ng s\u1eed d\u1ee5ng \u1edf b\u00ean tr\u00e1i c\u0169ng s\u1ebd \u0111\u01b0\u1ee3c b\u1eadt l\u00ean. Ch\u1eb3ng h\u1ea1n, khi th\u1ef1c hi\u1ec7n ph\u00e9p <code>0b10</code> v\u1edbi ki\u1ec3u s\u1ed1 <code>char</code> (8 bit), ta nh\u1eadn \u0111\u01b0\u1ee3c <code>0b11111101</code> thay v\u00ec <code>0b01</code>. Trong \u0111a s\u1ed1 tr\u01b0\u1eddng h\u1ee3p, ta s\u1ebd c\u1ea7n ph\u1ea3i t\u1eaft c\u00e1c bit \u0111\u01b0\u1ee3c b\u1eadt th\u1eeba n\u00e0y \u0111i.</p>"},{"location":"algo/basic/bitwise-operators/#toan-tu-bitshift-left","title":"To\u00e1n t\u1eed BITSHIFT LEFT (&lt;&lt;)","text":"<p>\u0110\u1ecbnh ngh\u0129a c\u1ee7a to\u00e1n t\u1eed Bitshift Left l\u00e0 d\u1ecbch t\u1ea5t c\u1ea3 c\u00e1c bit trong m\u1ed9t s\u1ed1 nguy\u00ean sang tr\u00e1i m\u1ed9t l\u01b0\u1ee3ng n\u00e0o \u0111\u00f3. N\u00f3i c\u00e1ch kh\u00e1c, trong ph\u00e9p to\u00e1n <code>a &lt;&lt; b</code>, c\u00e1c bit c\u1ee7a <code>a</code> \u0111\u01b0\u1ee3c d\u1ecbch sang tr\u00e1i <code>b</code> l\u1ea7n.</p> <p>V\u00ed d\u1ee5, x\u00e9t s\u1ed1 <code>5 = 0b101</code>, n\u1ebfu th\u1ef1c hi\u1ec7n ph\u00e9p to\u00e1n <code>0b101&lt;&lt;2</code>, ta nh\u1eadn \u0111\u01b0\u1ee3c <code>0b10100 = 20</code>.</p> <p>N\u1ebfu quan s\u00e1t k\u1ef9, b\u1ea1n s\u1ebd nh\u1eadn th\u1ea5y m\u1ed9t t\u00ednh ch\u1ea5t th\u00fa v\u1ecb sau c\u1ee7a ph\u00e9p to\u00e1n Bitshift Left: <code>a &lt;&lt; b</code> \\(= a * 2^b\\). Ta c\u00f3 t\u00ednh ch\u1ea5t n\u00e0y do ph\u00e9p to\u00e1n Bitshift Left <code>a &lt;&lt; b</code> c\u00f3 th\u1ec3 hi\u1ec3u l\u00e0 th\u00eam <code>b</code> ch\u1eef s\u1ed1 \\(0\\) v\u00e0o cu\u1ed1i bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a s\u1ed1 <code>a</code>. \u0110i\u1ec1u n\u00e0y t\u01b0\u01a1ng t\u1ef1 nh\u01b0 vi\u1ec7c th\u00eam m\u1ed9t ch\u1eef s\u1ed1 \\(0\\) v\u00e0o cu\u1ed1i bi\u1ec3u di\u1ec5n th\u1eadp ph\u00e2n c\u1ee7a m\u1ed9t s\u1ed1 s\u1ebd nh\u00e2n s\u1ed1 \u0111\u00f3 th\u00eam 10 l\u1ea7n.</p>"},{"location":"algo/basic/bitwise-operators/#chu-y","title":"Ch\u00fa \u00fd","text":"<p>V\u1edbi C++, kh\u00f4ng n\u00ean \u0111\u1ec3 ph\u00e9p to\u00e1n <code>a &lt;&lt; b</code> c\u1ee7a b\u1ea1n b\u1ecb tr\u00e0n s\u1ed1 (bit \\(1\\) \u0111\u01b0\u1ee3c left shift \u0111\u1ebfn qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a ki\u1ec3u s\u1ed1 \u0111ang s\u1eed d\u1ee5ng) v\u00ec s\u1ebd c\u00f3 tr\u01b0\u1eddng h\u1ee3p code c\u1ee7a b\u1ea1n b\u1ecb UB. \u0110\u1ec3 bi\u1ebft c\u1ee5 th\u1ec3 v\u1ec1 c\u00e1c tr\u01b0\u1eddng h\u1ee3p n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o ph\u1ea7n Ph\u00e9p Left Shift tr\u00e0n s\u1ed1.</p> <p>Ngo\u00e0i ra, n\u1ebfu \\(b &lt; 0\\) ho\u1eb7c \\(b \\geq L\\), k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 c\u1ee7a ph\u00e9p to\u00e1n l\u00e0 kh\u00f4ng x\u00e1c \u0111\u1ecbnh.</p>"},{"location":"algo/basic/bitwise-operators/#toan-tu-bitshift-right","title":"To\u00e1n t\u1eed BITSHIFT RIGHT (&gt;&gt;)","text":"<p>N\u1ebfu nh\u01b0 Left Shift l\u00e0 th\u00eam ch\u1eef s\u1ed1 \\(0\\) v\u00e0o b\u00ean ph\u1ea3i c\u1ee7a m\u1ed9t s\u1ed1 nguy\u00ean \u1edf d\u1ea1ng nh\u1ecb ph\u00e2n, ta c\u00f3 th\u1ec3 hi\u1ec3u Right Shift l\u00e0 x\u00f3a c\u00e1c ch\u1eef s\u1ed1 \u1edf b\u00ean ph\u1ea3i.</p> <p>V\u00ed d\u1ee5, x\u00e9t s\u1ed1 <code>13 = 0b1101</code>, ta c\u00f3 <code>0b1101 &gt;&gt; 2 = 0b11</code>.</p> <p>T\u01b0\u01a1ng t\u1ef1 v\u1edbi Bitshift Left, ta c\u0169ng c\u00f3 t\u00ednh ch\u1ea5t <code>a &gt;&gt; b</code> \\(= \\lfloor \\frac{a}{2^b} \\rfloor\\) v\u1edbi \\(a\\) nguy\u00ean kh\u00f4ng \u00e2m. N\u1ebfu \\(b &lt; 0\\) ho\u1eb7c \\(b \\geq L\\), k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 c\u1ee7a ph\u00e9p to\u00e1n l\u00e0 kh\u00f4ng x\u00e1c \u0111\u1ecbnh. D\u00f9 tr\u00ean th\u1ef1c t\u1ebf kh\u00f4ng s\u1eed d\u1ee5ng nhi\u1ec1u, nh\u01b0ng n\u1ebfu b\u1ea1n \u0111\u1ecdc c\u1ea3m th\u1ea5y t\u00f2 m\u00f2 v\u1ec1 tr\u01b0\u1eddng h\u1ee3p \\(a &lt; 0\\) th\u00ec c\u00f3 th\u1ec3 tham kh\u1ea3o ph\u1ea7n Ph\u00e2n bi\u1ec7t LRS v\u00e0 ARS.</p>"},{"location":"algo/basic/bitwise-operators/#cac-ham-thao-tac-bit","title":"C\u00e1c h\u00e0m thao t\u00e1c Bit","text":"<p>Compiler GCC (l\u00e0 Compiler \u0111i k\u00e8m v\u1edbi Codeforces, Dev-C++, v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng tr\u00ean c\u00e1c OJ ph\u1ed5 bi\u1ebfn) hi\u1ec7n nay h\u1ed7 tr\u1ee3 m\u1ed9t s\u1ed1 c\u00e1c h\u00e0m li\u00ean quan t\u1edbi x\u1eed l\u00fd bit gi\u00fap ta th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 c\u00e1c ph\u00e9p t\u00ednh th\u00f4ng d\u1ee5ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \\(O(1)\\).</p> <p>N\u1ebfu b\u1ea1n t\u1edbi \u0111\u00e2y \u0111\u1ec3 \u0111\u1ecdc l\u1ea1i t\u00ean h\u00e0m, \u0111\u00e2y l\u00e0 b\u1ea3ng TL;DR:</p> T\u00ean thao t\u00e1c T\u00ean h\u00e0m Gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 Tr\u01b0\u1eddng h\u1ee3p UB Population Count <code>std::__builtin_popcountll(x)</code> S\u1ed1 Bit b\u1eadt Parity <code>std::__builtin_parityll(x)</code> S\u1ed1 Bit b\u1eadt modulo \\(2\\) Count Leading Zeroes <code>std::__builtin_clzll(x)</code> S\u1ed1 Bit \\(0\\) \u1edf \u0111\u1ea7u <code>x == 0</code> Log2 <code>std::__lg(x)</code> \\(\\lfloor\\log_2(x)\\rfloor\\) Count Trailing Zeroes <code>std::__builtin_ctzll(x)</code> S\u1ed1 Bit \\(0\\) \u1edf cu\u1ed1i <code>x == 0</code> Find First Set <code>std::__builtin_ffsll(x)</code> S\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a Bit \\(1\\) \u0111\u1ea7u ti\u00ean <p>Ch\u00fa \u00fd: \u0110\u1ed1i v\u1edbi c\u00e1c h\u00e0m c\u00f3 d\u1ea1ng <code>std::__builtin</code>, th\u00eam \u0111u\u00f4i <code>ll</code> s\u1ebd g\u1ecdi h\u00e0m \u0111\u00f3 v\u1edbi ki\u1ec3u \u0111\u1ea7u v\u00e0o l\u00e0 <code>unsigned long long</code>. \u0110\u1ec3 thu\u1eadn ti\u1ec7n, ng\u01b0\u1eddi vi\u1ebft s\u1ebd b\u1ecf qua \u0111u\u00f4i n\u00e0y trong ph\u1ea7n ti\u1ebfp theo.</p>"},{"location":"algo/basic/bitwise-operators/#ham-population-count-va-parity","title":"H\u00e0m Population Count v\u00e0 Parity","text":"<p>GCC cung c\u1ea5p h\u00e0m <code>std::__builtin_popcount(x)</code> (population count) tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng bit b\u1eadt trong bitmask \\(x\\). Ch\u1eb3ng h\u1ea1n, <code>std::__builtin_popcount(0b100101) = 3</code>.</p> <p>Ngo\u00e0i ra, c\u0169ng c\u00f3 h\u00e0m <code>std::__builtin_parity(x)</code> tr\u1ea3 v\u1ec1 <code>std::__builtin_popcount(x) % 2</code>. H\u00e0m n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n li\u00ean quan t\u1edbi bao h\u00e0m lo\u1ea1i tr\u1eeb.</p>"},{"location":"algo/basic/bitwise-operators/#ham-count-leading-zeroes-va-log2","title":"H\u00e0m Count Leading Zeroes v\u00e0 Log2","text":"<p>GCC cung c\u1ea5p h\u00e0m <code>std::__builtin_clz(x)</code>Tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng bit \\(0\\) \u1edf b\u00ean tr\u00e1i bit \\(1\\) cao nh\u1ea5t c\u1ee7a bi\u1ebfn \u0111\u1ea7u v\u00e0o. Ch\u00fa \u00fd, h\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 kh\u00f4ng x\u00e1c \u0111\u1ecbnh \u0111\u1ed1i v\u1edbi <code>x == 0</code>.</p> <p>Ch\u1eb3ng h\u1ea1n, <code>std::__builtin_clz(0b10) == 30</code>. K\u1ebft qu\u1ea3 n\u00e0y l\u00e0 do ki\u1ec3u <code>int</code> c\u00f3 32 bit. C\u1ee5 th\u1ec3, s\u1ed1 <code>0b10</code> khi l\u01b0u d\u01b0\u1edbi d\u1ea1ng <code>int</code> s\u1ebd c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n l\u00e0:</p> <p><code>0b 0000 0000 0000 0000 0000 0000 0000 0010</code></p> <p>Ngo\u00e0i ra c\u0169ng c\u00f3 h\u00e0m <code>std::__lg(x) == 31 - std::__builtin_clz(x) == 63 - std::__builtin_clzll(x)</code>. H\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 \\(\\lfloor \\log_2(x) \\rfloor\\), th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e0i \u0111\u1eb7t c\u1ee7a B\u1ea3ng th\u01b0a (Sparse Table).</p>"},{"location":"algo/basic/bitwise-operators/#ham-count-trailing-zeroes-va-find-first-set","title":"H\u00e0m Count Trailing Zeroes v\u00e0 Find First Set","text":"<p>GCC cung c\u1ea5p h\u00e0m <code>std::__builtin_ctz(x)</code> tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng bit \\(0\\) \u1edf b\u00ean ph\u1ea3i bit \\(1\\) th\u1ea5p nh\u1ea5t c\u1ee7a bi\u1ebfn \u0111\u1ea7u v\u00e0o. Ch\u00fa \u00fd, h\u00e0m n\u00e0y c\u0169ng tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 kh\u00f4ng x\u00e1c \u0111\u1ecbnh \u0111\u1ed1i v\u1edbi <code>x == 0</code>. Ch\u1eb3ng h\u1ea1n, <code>std::__builtin_ctz(0b100100) = 2</code>.</p> <p>GCC c\u0169ng cung c\u1ea5p m\u1ed9t h\u00e0m kh\u00e1c l\u00e0 <code>std::__builtin_ffs(x) == std::__builtin_ctz(x) + 1</code>. Trong tr\u01b0\u1eddng h\u1ee3p <code>x == 0</code>, h\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 \\(0\\).</p>"},{"location":"algo/basic/bitwise-operators/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/basic/bitwise-operators/#truy-cap-bit","title":"Truy c\u1eadp Bit","text":"<p>M\u1ed9t \u1ee9ng d\u1ee5ng th\u01b0\u1eddng th\u1ea5y c\u1ee7a c\u00e1c ph\u00e9p to\u00e1n bit l\u00e0 \u0111\u1ecdc v\u00e0 s\u1eeda t\u1eebng bit trong m\u1ed9t bitmask.</p> <p>Ch\u1eb3ng h\u1ea1n, \u0111\u1ec3 truy c\u1eadp bit th\u1ee9 \\(i\\) trong bitmask \\(A\\), ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ph\u00e9p to\u00e1n <code>A &amp; (1LL&lt;&lt;i)</code>. Tr\u01b0\u1edbc khi \u0111\u1ecdc gi\u1ea3i th\u00edch c\u1ee7a ph\u00e9p to\u00e1n n\u00e0y, h\u00e3y t\u1ef1 m\u00ecnh ch\u1ea1y th\u1eed m\u1ed9t s\u1ed1 v\u00ed d\u1ee5.</p> <p>X\u00e9t <code>A = 0b1010010</code>. \u0110\u1ec3 truy c\u1eadp bit th\u1ee9 \\(4\\), ta th\u1ef1c hi\u1ec7n ph\u00e9p to\u00e1n <code>0b1010010 &amp; (1&lt;&lt;4)</code> nh\u01b0 sau:</p> <pre><code>  0b1010010\n&amp; 0b0010000\n= 0b0010000\n</code></pre> <p>X\u00e9t ph\u1ea7n th\u1ee9 hai c\u1ee7a ph\u00e9p to\u00e1n, <code>1&lt;&lt;i</code>, ta nh\u1eadn th\u1ea5y ph\u1ea7n n\u00e0y th\u1ef1c hi\u1ec7n thao t\u00e1c t\u1ea1o ra m\u1ed9t bitmask ch\u1ec9 c\u00f3 bit th\u1ee9 \\(i\\) b\u1eadt. Bitmask n\u00e0y khi \u0111\u01b0\u1ee3c AND v\u1edbi bitmask ban \u0111\u1ea7u s\u1ebd lo\u1ea1i b\u1ecf th\u00f4ng tin c\u1ee7a t\u1ea5t c\u1ea3 m\u1ecdi bit ngo\u1ea1i tr\u1eeb bit th\u1ee9 \\(i\\).</p> <p>Ngo\u00e0i ra c\u0169ng c\u00f3 m\u1ed9t s\u1ed1 c\u00e1c c\u00e1ch kh\u00e1c \u0111\u1ec3 truy c\u1eadp bit, v\u00ed d\u1ee5 nh\u01b0 <code>(A &gt;&gt; i) % 2</code> hay <code>(A &gt;&gt; i) &amp; 1</code>.</p> <p>Ch\u00fa \u00fd: M\u1ed9t l\u1ed7i r\u1ea5t hay g\u1eb7p ph\u1ea3i khi s\u1eed d\u1ee5ng bitshift \u0111\u1ec3 truy c\u1eadp v\u00e0 ch\u1ec9nh s\u1eeda bit l\u00e0 tr\u00e0n s\u1ed1. Ch\u1eb3ng h\u1ea1n, x\u00e9t d\u00f2ng code sau \u0111\u00e2y:</p> <pre><code>bool get_bit(unsigned long long mask, int pos){\n    return mask &amp; (1&lt;&lt;pos)\n}\n</code></pre> <p>Trong tr\u01b0\u1eddng h\u1ee3p \\(pos \\geq 32\\), bi\u1ec3u th\u1ee9c <code>1&lt;&lt;pos</code> s\u1ebd b\u1ecb tr\u00e0n s\u1ed1 do c\u1ea3 <code>1</code> v\u00e0 <code>pos</code> \u0111\u1ec1u c\u00f3 ki\u1ec3u <code>int</code>. \u0110\u1ec3 tr\u00e1nh b\u1ecb tr\u00e0n s\u1ed1, ta \u0111\u1ed5i \u0111o\u1ea1n code tr\u00ean th\u00e0nh nh\u01b0 sau:</p> <pre><code>bool get_bit(unsigned long long mask, int pos){\n    return mask &amp; (1ULL &lt;&lt; pos);\n}\n</code></pre> <p>H\u1eadu t\u1ed1 <code>ULL</code> \u0111\u00e1nh d\u1ea5u cho compiler bi\u1ebft r\u1eb1ng <code>1ULL</code> c\u1ea7n \u0111\u01b0\u1ee3c coi l\u00e0 m\u1ed9t s\u1ed1 <code>unsigned long long</code>. Nh\u01b0 v\u1eady, ph\u00e9p <code>1ULL &lt;&lt; pos</code> s\u1ebd kh\u00f4ng c\u00f2n b\u1ecb tr\u00e0n s\u1ed1. M\u1ed9t s\u1ed1 c\u00e1c h\u1eadu t\u1ed1 th\u01b0\u1eddng d\u00f9ng bao g\u1ed3m: <code>ULL</code> cho <code>unsigned long long</code>, <code>LL</code> cho <code>long long</code>, <code>L</code> cho <code>long</code>,...</p>"},{"location":"algo/basic/bitwise-operators/#chinh-sua-bit","title":"Ch\u1ec9nh s\u1eeda Bit","text":"<p>S\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p t\u01b0\u01a1ng t\u1ef1 nh\u01b0 ph\u1ea7n tr\u00ean, ta c\u00f3 m\u1ed9t s\u1ed1 ph\u00e9p s\u1eeda bit nh\u01b0 sau:</p> <ol> <li>G\u00e1n m\u1ed9t bit b\u1eb1ng \\(0\\) v\u1edbi <code>A &amp; ~(1&lt;&lt;i)</code>.</li> <li>G\u00e1n m\u1ed9t bit b\u1eb1ng \\(1\\) v\u1edbi <code>A | (1&lt;&lt;i)</code>.</li> <li>L\u1eadt (flip) m\u1ed9t bit (t\u1eeb \\(0\\) sang \\(1\\) ho\u1eb7c t\u1eeb \\(1\\) sang \\(0\\)) v\u1edbi <code>A ^ (1&lt;&lt;i)</code>.</li> </ol>"},{"location":"algo/basic/bitwise-operators/#tat-cac-bit-cao-nhat-cua-mot-bitmask","title":"T\u1eaft c\u00e1c bit cao nh\u1ea5t c\u1ee7a m\u1ed9t bitmask","text":"<p>Ph\u00e9p to\u00e1n <code>((1&lt;&lt;i) - 1)</code> t\u1ea1o ra bitmask m\u00e0 trong \u0111\u00f3 ch\u1ec9 c\u00e1c bit t\u1eeb \\(0\\) t\u1edbi \\(i-1\\) \u0111\u01b0\u1ee3c b\u1eadt l\u00ean.</p> <p>Nh\u01b0 v\u1eady, \u0111\u1ec3 t\u1eaft t\u1ea5t c\u1ea3 c\u00e1c bit t\u1eeb v\u1ecb tr\u00ed \\(i\\) tr\u1edf \u0111i, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng <code>A &amp; ((1&lt;&lt;i)-1)</code>. \u0110\u00e2y l\u00e0 c\u00e1ch ta lo\u1ea1i b\u1ecf c\u00e1c bit th\u1eeba sau khi th\u1ef1c hi\u1ec7n ph\u00e9p bitwise NOT.</p>"},{"location":"algo/basic/bitwise-operators/#bieu-dien-tap-hop","title":"Bi\u1ec3u di\u1ec5n t\u1eadp h\u1ee3p","text":"<p>\u1ee8ng d\u1ee5ng c\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a bitmask l\u00e0 bi\u1ec3u di\u1ec5n m\u1ed9t t\u1eadp con c\u1ee7a m\u1ed9t t\u1eadp \\(A\\) cho tr\u01b0\u1edbc n\u00e0o \u0111\u00f3. T\u1eeb \u1ee9ng d\u1ee5ng n\u00e0y, ta c\u00f3 m\u1ed9t d\u1ea1ng b\u00e0i t\u00ean l\u00e0 quy ho\u1ea1ch \u0111\u1ed9ng tr\u1ea1ng th\u00e1i (dp bitmask).</p> <p>T\u1eeb c\u00e1c ph\u1ea7n Truy c\u1eadp Bit, Ch\u1ec9nh s\u1eeda Bit v\u00e0 T\u1eaft c\u00e1c Bit cao nh\u1ea5t, ta c\u00f3 m\u1ed9t s\u1ed1 ph\u00e9p to\u00e1n c\u01a1 b\u1ea3n tr\u00ean t\u1eadp h\u1ee3p nh\u01b0 sau:</p> H\u00e0m K\u00fd hi\u1ec7u to\u00e1n Code Giao \\(A\\cap B\\) <code>A &amp; B</code> H\u1ee3p \\(A\\cup B\\) <code>A | B</code> Hi\u1ec7u \\(A\\backslash B\\) <code>(A ^ B) &amp; A</code> Hi\u1ec7u \u0111\u1ed1i x\u1ee9ng \\(A\\Delta B\\) <code>A ^ B</code> Ph\u1ea7n b\u00f9 \\(A^C\\) hay \\(A'\\) <code>~A &amp; (1&lt;&lt;n)-1</code> Ki\u1ec3m tra t\u1eadp con \\(A \\subseteq B\\) <code>(A &amp; B) == A</code> T\u1eadp h\u1ee3p ch\u1ec9 c\u00f3 ph\u1ea7n t\u1eed \\(i\\) \\(\\{i\\}\\) <code>1 &lt;&lt; i</code>"},{"location":"algo/basic/bitwise-operators/#lap-qua-moi-tap-con-cua-tap-cho-truoc","title":"L\u1eb7p qua m\u1ecdi t\u1eadp con c\u1ee7a t\u1eadp cho tr\u01b0\u1edbc","text":"<p>\u0110\u1ec3 l\u1eb7p qua m\u1ecdi t\u1eadp con \\(A\\) c\u1ee7a m\u1ed9t t\u1eadp \\(S\\) cho tr\u01b0\u1edbc, ta vi\u1ebft v\u00f2ng <code>for</code> nh\u01b0 sau:</p> <pre><code>void loop_subset(const vector&lt;int&gt; &amp;s){\n    for (int mask=0; mask&lt;(1&lt;&lt;s.size()); mask++){\n        vector&lt;int&gt; a;\n        for (int i=0; i&lt;s.size(); i++){\n            if (mask &amp; (1&lt;&lt;i))\n                a.push_back(s[i]);\n        }\n        // Th\u1ef1c hi\u1ec7n thao t\u00e1c g\u00ec \u0111\u00f3 v\u1edbi t\u1eadp con A\n    }\n}\n</code></pre>"},{"location":"algo/basic/bitwise-operators/#cai-at-cau-truc-du-lieu-fenwick-tree","title":"C\u00e0i \u0111\u1eb7t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Fenwick Tree","text":"<p>C\u00e1ch c\u00e0i \u0111\u1eb7t Fenwick Tree t\u1ed1i \u01b0u c\u0169ng l\u00e0 m\u1ed9t trong nh\u1eefng \u1ee9ng d\u1ee5ng th\u00fa v\u1ecb c\u1ee7a c\u00e1c to\u00e1n t\u1eed Bit.</p>"},{"location":"algo/basic/bitwise-operators/#giai-cac-bai-toan-bao-ham-loai-tru","title":"Gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n bao h\u00e0m lo\u1ea1i tr\u1eeb","text":""},{"location":"algo/basic/bitwise-operators/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t t\u1eadp \\(S\\) g\u1ed3m c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 ph\u00e2n bi\u1ec7t. G\u1ecdi \\(a\\) l\u00e0 t\u00edch c\u00e1c s\u1ed1 trong t\u1eadp \\(S\\). Trong c\u00e1c s\u1ed1 thu\u1ed9c kho\u1ea3ng \\([0, n]\\), \u0111\u1ebfm s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(a\\).</p>"},{"location":"algo/basic/bitwise-operators/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>Ta l\u1eb7p qua m\u1ecdi t\u1eadp con \\(T\\) c\u1ee7a \\(S\\). G\u1ecdi \\(b\\) l\u00e0 t\u00edch c\u00e1c s\u1ed1 trong t\u1eadp \\(T\\), v\u00e0 \\(x\\) l\u00e0 s\u1ed1 s\u1ed1 trong kho\u1ea3ng \\([0, n]\\) chia h\u1ebft cho \\(b\\). N\u1ebfu \\(T\\) c\u00f3 ch\u1eb5n ph\u1ea7n t\u1eed, ta c\u1ed9ng \\(x\\) v\u00e0o \u0111\u00e1p \u00e1n. Ng\u01b0\u1ee3c l\u1ea1i, ta tr\u1eeb \\(x\\) v\u00e0o \u0111\u00e1p \u00e1n.</p> <p>Ph\u1ea7n ch\u1ee9ng minh cho b\u00e0i to\u00e1n n\u00e0y b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o \u1edf b\u00e0i vi\u1ebft v\u1ec1 bao h\u00e0m lo\u1ea1i tr\u1eeb.</p>"},{"location":"algo/basic/bitwise-operators/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>unsigned long long solve(const vector&lt;unsigned long long&gt; &amp;a, unsigned long long n){\n    unsigned long long result = 0;\n    for (int i = 0; i &lt; 1&lt;&lt;a.size(); i++){\n        unsigned long long b = 1;\n        for (int j=0; j&lt;a.size(); j++){\n            if (i &amp; 1&lt;&lt;j) b *= a[j];\n        }\n        unsigned long long x = result / b + 1;\n        if (__builtin_parity(i)) result -= x;\n        else result += x;\n    }\n    return result;\n}\n</code></pre> <p>Ch\u00fa \u00fd: \u0110o\u1ea1n code n\u00e0y ch\u1ec9 mang t\u00ednh ch\u1ea5t minh h\u1ecda, do tr\u00ean th\u1ef1c t\u1ebf k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 tr\u00e0n <code>unsigned long long</code>. Tuy nhi\u00ean, k\u1ebft qu\u1ea3 c\u1ee7a c\u00e1c thao t\u00e1c t\u00ednh to\u00e1n tr\u00e0n s\u1ed1 tr\u00ean c\u00e1c ki\u1ec3u <code>unsigned</code> \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh, n\u00ean n\u1ebfu t\u00edch c\u00e1c s\u1ed1 trong t\u1eadp \\(A\\) kh\u00f4ng tr\u00e0n s\u1ed1, code n\u00e0y s\u1ebd tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 theo mod \\(2^{64}\\).</p>"},{"location":"algo/basic/bitwise-operators/#tong-hop-mot-so-ieu-can-chu-y-trong-c","title":"T\u1ed5ng h\u1ee3p m\u1ed9t s\u1ed1 \u0111i\u1ec1u c\u1ea7n ch\u00fa \u00fd trong C++","text":"<p>C\u00e1c thao t\u00e1c bit trong C++ l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 r\u1ea5t m\u1ea1nh v\u00e0 c\u00f3 hi\u1ec7u su\u1ea5t c\u1ef1c \u0111\u1ec9nh. T\u1ea5t nhi\u00ean, \"with great power comes great responsibility\". Khi s\u1eed d\u1ee5ng b\u1ed9 c\u00f4ng c\u1ee5 n\u00e0y, r\u1ea5t nhi\u1ec1u nh\u1eefng bug th\u00fa v\u1ecb \u0111ang ch\u1edd \u0111\u1ee3i b\u1ea1n.</p>"},{"location":"algo/basic/bitwise-operators/#thu-tu-tinh-toan-operator-precendence","title":"Th\u1ee9 t\u1ef1 t\u00ednh to\u00e1n (Operator Precendence)","text":"<p>Th\u1ee9 t\u1ef1 t\u00ednh to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c hi\u1ec3u l\u00e0 th\u1ee9 t\u1ef1 m\u00e0 C++ s\u1ebd t\u00ednh to\u00e1n c\u00e1c bi\u1ec3u th\u1ee9c c\u1ee7a b\u1ea1n, v\u00ed d\u1ee5 nh\u01b0 nh\u00e2n chia tr\u01b0\u1edbc, c\u1ed9ng tr\u1eeb sau. Trang cppreference.com c\u00f3 d\u00e0nh h\u1eb3n m\u1ed9t b\u00e0i vi\u1ebft \u0111\u1ec3 n\u00f3i v\u1ec1 th\u1ee9 t\u1ef1 n\u00e0y.</p> <p>M\u1ed9t s\u1ed1 \u0111i\u1ec3m c\u1ea7n ch\u00fa \u00fd trong th\u1ee9 t\u1ef1 t\u00ednh to\u00e1n c\u1ee7a C++ bao g\u1ed3m:</p> <ul> <li>C\u00e1c ph\u00e9p bitshift <code>&lt;&lt;, &gt;&gt;</code> \u0111\u1ee9ng sau ph\u00e9p <code>+, -</code>.</li> <li>Ph\u00e9p <code>&amp;, ^, |</code> \u0111\u1ee9ng sau ph\u00e9p <code>==</code> v\u00e0 c\u00e1c ph\u00e9p <code>+, -, *, /, &lt;&lt;, &gt;&gt;</code>.</li> </ul> <p>Trong m\u1ecdi tr\u01b0\u1eddng h\u1ee3p, k\u1ec3 c\u1ea3 khi \u0111\u00e3 nh\u1edb k\u1ef9 th\u1ee9 t\u1ef1 t\u00ednh to\u00e1n c\u1ee7a c\u00e1c to\u00e1n t\u1eed, b\u1ea1n v\u1eabn n\u00ean s\u1eed d\u1ee5ng d\u1ea5u <code>()</code> khi l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c to\u00e1n t\u1eed bit \u0111\u1ec3 gi\u00fap code d\u1ec5 \u0111\u1ecdc h\u01a1n v\u00e0 h\u1ea1n ch\u1ebf bug.</p>"},{"location":"algo/basic/bitwise-operators/#toan-tu-bitshift","title":"To\u00e1n t\u1eed Bitshift","text":"<p>Trong ph\u00e9p Bitshift Left, n\u1ebfu to\u00e1n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a b\u1ea1n l\u00e0 m\u1ed9t s\u1ed1 \u00e2m, ho\u1eb7c k\u1ebft qu\u1ea3 t\u00ednh to\u00e1n c\u1ee7a b\u1ea1n tr\u00e0n s\u1ed1, th\u00ec code c\u1ee7a b\u1ea1n s\u1ebd b\u1ecb UB.</p> <p>\u0110\u1ed1i v\u1edbi t\u1ea5t c\u1ea3 m\u1ecdi ph\u00e9p bitshift, n\u1ebfu to\u00e1n t\u1eed th\u1ee9 hai c\u1ee7a b\u1ea1n l\u00e0 m\u1ed9t s\u1ed1 \u00e2m, ho\u1eb7c c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng s\u1ed1 l\u01b0\u1ee3ng bit c\u00f3 trong ki\u1ec3u s\u1ed1 c\u1ee7a k\u1ebft qu\u1ea3, th\u00ec code c\u1ee7a b\u1ea1n b\u1ecb UB. Trong g\u1ea7n nh\u01b0 h\u1ea7u h\u1ebft tr\u01b0\u1eddng h\u1ee3p, ch\u1ec9 c\u00f3 \\(5\\) ho\u1eb7c \\(6\\) bit cu\u1ed1i c\u00f9ng (l\u1ea7n l\u01b0\u1ee3t v\u1edbi hai tr\u01b0\u1eddng h\u1ee3p <code>int</code> v\u00e0 <code>long long</code>) trong to\u00e1n t\u1eed th\u1ee9 hai \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, n\u00ean ch\u00fang ta c\u00f3 th\u1ec3 \u0111o\u00e1n tr\u01b0\u1edbc \u0111\u01b0\u1ee3c code s\u1ebd l\u00e0m g\u00ec. Tuy nhi\u00ean, kh\u00f4ng n\u00ean d\u1ef1a v\u00e0o t\u00ednh ch\u1ea5t n\u00e0y \u0111\u1ec3 vi\u1ebft code.</p>"},{"location":"algo/basic/bitwise-operators/#tran-so-khi-truy-cap-bit","title":"Tr\u00e0n s\u1ed1 khi truy c\u1eadp bit","text":"<p>M\u1ed9t l\u1ed7i th\u01b0\u1eddng g\u1eb7p c\u1ee7a nh\u1eefng b\u1ea1n m\u1edbi l\u00e0m quen v\u1edbi c\u00e1c to\u00e1n t\u1eed bit l\u00e0 tr\u00e0n s\u1ed1 khi th\u1ef1c hi\u1ec7n ph\u00e9p <code>1 &lt;&lt; pos</code> \u0111\u1ec3 truy c\u1eadp bit. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 xem ph\u1ea7n Truy c\u1eadp bit \u0111\u1ec3 r\u00f5 h\u01a1n.</p>"},{"location":"algo/basic/bitwise-operators/#mo-rong","title":"M\u1edf r\u1ed9ng","text":""},{"location":"algo/basic/bitwise-operators/#lap-qua-moi-tap-con-cua-mot-bitmask","title":"L\u1eb7p qua m\u1ecdi t\u1eadp con c\u1ee7a m\u1ed9t bitmask","text":"<p>\u0110\u1ec3 l\u1eb7p qua m\u1ecdi t\u1eadp con c\u1ee7a \\(S\\), ta vi\u1ebft v\u00f2ng l\u1eb7p <code>for</code> nh\u01b0 sau:</p> <pre><code>void loop_mask_subset(int S){\n    for (int mask=S; true; mask = (mask-1) &amp; S){\n        // Th\u1ef1c hi\u1ec7n thao t\u00e1c n\u00e0o \u0111\u00f3 v\u1edbi t\u1eadp con mask c\u1ee7a S\n        if (mask == 0) break;\n    }\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a v\u00f2ng l\u1eb7p tr\u00ean l\u00e0 \\(2^{\\|S\\|}\\) v\u1edbi \\(\\|S\\|\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng bit b\u1eadt c\u1ee7a \\(S\\), ch\u00ednh l\u00e0 s\u1ed1 t\u1eadp con c\u1ee7a \\(S\\).</p> <p>Nh\u01b0 v\u1eady, ta c\u00f3 c\u00e1ch \u0111\u1ec3 l\u1eb7p m\u1ecdi t\u1eadp \\(S\\) t\u1eeb \\(0\\) t\u1edbi \\(2^n\\), sau \u0111\u00f3 l\u1eb7p m\u1ecdi t\u1eadp con \\(T\\) c\u1ee7a \\(S\\) m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3.</p> <pre><code>void loop_subset_of_all_masks(int n){\n    for (int S = 0; S &lt; 1&lt;&lt;n; S++){\n        // Th\u1ef1c hi\u1ec7n thao t\u00e1c n\u00e0o \u0111\u00f3 v\u1edbi t\u1eadp con S\n        for (int T=S; true; T = (T-1) &amp; S){\n            // Th\u1ef1c hi\u1ec7n thao t\u00e1c n\u00e0o \u0111\u00f3 v\u1edbi t\u1eadp con T c\u1ee7a S\n        }\n    }\n}\n</code></pre> <p>C\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian t\u1ed1i \u01b0u do t\u1ea5t c\u1ea3 c\u00e1c l\u1ea7n l\u1eb7p \u0111\u1ec1u t\u1ea1o ra m\u1ed9t b\u1ed9 \\((S, T)\\) th\u1ecfa m\u00e3n, v\u00e0 \u0111\u00f4i m\u1ed9t ph\u00e2n bi\u1ec7t. Ta s\u1ebd ch\u1ee9ng minh t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a hai v\u00f2ng l\u1eb7p n\u00e0y l\u00e0 \\(O(3^n)\\), thay v\u00ec \\(O(4^n)\\).</p> <p>D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y, s\u1ed1 b\u01b0\u1edbc l\u1eb7p c\u1ee7a hai v\u00f2ng l\u1eb7p tr\u00ean c\u00f3 th\u1ec3 vi\u1ebft l\u00e0: $$ \\begin{align} \\sum_{S \\subseteq 2^n} \\sum_{T \\subseteq S} 1 &amp;= \\sum_{S \\subseteq 2^n} 2^{|S|} \\ &amp;= \\sum_{k = 0}^n \\sum_{S \\subseteq 2^n, |S| = k} 2^k \\ &amp;= \\sum_{k = 0}^n \\binom{n}{k} 2^k \\ &amp;= 3^n \\end{align} $$</p> <p>N\u1ebfu b\u1ea1n th\u1ea5y ch\u1ee9ng minh tr\u00ean kh\u00f3 hi\u1ec3u, h\u00e3y xem ch\u1ee9ng minh c\u1ee7a \u1ee8ng d\u1ee5ng ti\u1ebfp theo.</p>"},{"location":"algo/basic/bitwise-operators/#lap-qua-moi-bo-x-tap-con-phan-biet","title":"L\u1eb7p qua m\u1ecdi b\u1ed9 \\(x\\) t\u1eadp con ph\u00e2n bi\u1ec7t","text":""},{"location":"algo/basic/bitwise-operators/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t t\u1eadp \\(S\\) \u0111\u1ed9 d\u00e0i \\(n\\) v\u00e0 m\u1ed9t s\u1ed1 \\(x\\). H\u00e3y in ra t\u1ea5t c\u1ea3 c\u00e1c c\u00e1ch chia c\u00e1c ph\u1ea7n t\u1eed trong \\(S\\) v\u00e0o \\(x\\) t\u1eadp h\u1ee3p kh\u00f4ng giao nhau, sao cho m\u1ed7i ph\u1ea7n t\u1eed n\u1eb1m trong \u0111\u00fang m\u1ed9t t\u1eadp h\u1ee3p.</p>"},{"location":"algo/basic/bitwise-operators/#nhan-xet","title":"Nh\u1eadn x\u00e9t","text":"<p>R\u00f5 r\u00e0ng, c\u00f3 \\(O(x^n)\\) t\u1eadp h\u1ee3p th\u1ecfa m\u00e3n. Nh\u01b0 v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1t nh\u1ea5t c\u1ee7a b\u00e0i to\u00e1n n\u00e0y l\u00e0 \\(O(x^n)\\).</p>"},{"location":"algo/basic/bitwise-operators/#truong-hop-x-2","title":"Tr\u01b0\u1eddng h\u1ee3p \\(x = 2\\)","text":"<p>R\u00f5 r\u00e0ng, trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta ch\u1ec9 c\u1ea7n l\u1eb7p qua m\u1ecdi t\u1eadp con \\(S\\) c\u1ee7a \\(A\\). V\u1edbi m\u1ed7i l\u1ea7n l\u1eb7p n\u00e0y, ta nh\u1eadn \u0111\u01b0\u1ee3c c\u1eb7p t\u1eadp h\u1ee3p \\((S, A \\backslash S)\\).</p>"},{"location":"algo/basic/bitwise-operators/#truong-hop-x-3","title":"Tr\u01b0\u1eddng h\u1ee3p \\(x = 3\\)","text":"<p>Ta s\u1ebd c\u1ed1 g\u1eafng m\u1edf r\u1ed9ng t\u1eeb tr\u01b0\u1eddng h\u1ee3p \\(x = 2\\) \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n cho tr\u01b0\u1eddng h\u1ee3p n\u00e0y.</p> <p>B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean, ta s\u1ebd l\u1eb7p nh\u01b0 tr\u01b0\u1eddng h\u1ee3p \\(x = 2\\) \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c c\u1eb7p t\u1eadp h\u1ee3p \\((A, B)\\).</p> <p>B\u01b0\u1edbc th\u1ee9 hai, ta s\u1ebd l\u1eb7p m\u1ecdi t\u1eadp con \\(C\\) c\u1ee7a t\u1eadp \\(A\\) \u0111\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c hai t\u1eadp \\((C, A \\backslash C)\\). Nh\u01b0 v\u1eady, b\u1ed9 t\u1eadp h\u1ee3p th\u1ecfa m\u00e3n \u0111\u1ec1 b\u00e0i m\u00e0 ta nh\u1eadn \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 \\((B, A \\backslash C, C)\\). Ch\u00fa \u00fd, \u1edf b\u01b0\u1edbc n\u00e0y, ta s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt \u1edf \u1ee8ng d\u1ee5ng tr\u01b0\u1edbc.</p> <p>C\u00e0i \u0111\u1eb7t cho tr\u01b0\u1eddng h\u1ee3p n\u00e0y nh\u01b0 sau:</p> <pre><code>void loop_triplets(int n){\n    int S = (1&lt;&lt;n) - 1;\n    for (int A = S; true; A = (A - 1) &amp; S){\n        int B = S ^ A;\n        for (int C = A; true; C = (C - 1) &amp; A){\n            // In ra B, A^C, C\n            if (C == 0) break;\n        }\n        if (A == 0) break;\n    }\n}\n</code></pre> <p>\u0110\u1ec3 \u00fd r\u1eb1ng v\u00f2ng l\u1eb7p \u0111\u1ea7u ti\u00ean t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c l\u1eb7p \\(A\\) trong kho\u1ea3ng \\([0, 2^n)\\). N\u1ebfu th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i n\u00e0y, ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi h\u00e0m <code>void loop_subset_of_all_masks(int n)</code> \u1edf tr\u00ean. \u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t c\u00e1ch hi\u1ec3u cho \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(3^n)\\) c\u1ee7a h\u00e0m n\u00e0y.</p>"},{"location":"algo/basic/bitwise-operators/#truong-hop-tong-quat-x-in-z","title":"Tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t \\(x \\in Z^+\\)","text":"<pre><code>void generate_partitions(vector&lt;int&gt; &amp;sets, int mask, int x){\n    if (x == 1){\n        sets.push_back(mask);\n        // H\u00e0m th\u1ef1c hi\u1ec7n thao t\u00e1c g\u00ec \u0111\u00f3 \u0111\u1ed1i v\u1edbi sets\n        solve_for_sets(sets);\n        sets.pop_back();\n        return;\n    }\n    for (int s = mask; true; s = (s - 1) &amp; mask){\n        sets.push_back(s);\n        generate_partitions(sets, mask ^ s, x-1);\n        sets.pop_back();\n        if (s == 0) break;\n    }\n}\nint main(){\n    int n = 10, parts = 5;\n    vector&lt;int&gt; sets;\n    generate_partitions(sets, (1&lt;&lt;n)-1, parts);\n}\n</code></pre>"},{"location":"algo/basic/bitwise-operators/#tang-toc-cho-code","title":"T\u0103ng t\u1ed1c cho code","text":"<p>N\u1ebfu s\u1eed d\u1ee5ng ki\u1ec3u d\u1eef li\u1ec7u <code>unsigned long long</code>, ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n 64 ph\u00e9p AND, OR, XOR, ho\u1eb7c NOT trong m\u1ed9t thao t\u00e1c. Tr\u00ean th\u1ef1c t\u1ebf, khi d\u1ecbch, m\u1ed9t s\u1ed1 c\u00e1c compiler c\u00f3 th\u1ec3 gi\u00fap b\u1ea1n th\u1ef1c hi\u1ec7n \\(256\\) hay th\u1eadm ch\u00ed \\(512\\) ph\u00e9p to\u00e1n nh\u01b0 v\u1eady c\u00f9ng m\u1ed9t l\u00fac. Nh\u01b0 v\u1eady, m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n v\u1edbi gi\u1edbi h\u1ea1n nh\u01b0 \\(n \\leq 5*10^4\\) hay th\u1eadm ch\u00ed \\(n \\leq 10^5\\) c\u00f3 th\u1ec3 ch\u1ea1y qua \u0111\u01b0\u1ee3c v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\). Tuy nhi\u00ean, do gi\u1edbi h\u1ea1n c\u1ee7a b\u00e0i vi\u1ebft, ch\u1ee7 \u0111\u1ec1 n\u00e0y s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c b\u00e0n \u0111\u1ebfn \u1edf \u0111\u00e2y.</p>"},{"location":"algo/basic/bitwise-operators/#phan-biet-logical-right-shift-va-arithmetic-right-shift","title":"Ph\u00e2n bi\u1ec7t Logical Right Shift v\u00e0 Arithmetic Right Shift","text":"<p>Ri\u00eang \u0111\u1ed1i v\u1edbi Right Shift, h\u1ea7u h\u1ebft c\u00e1c c\u1ea5u tr\u00fac m\u00e1y t\u00ednh cung c\u1ea5p hai lo\u1ea1i ph\u00e9p to\u00e1n kh\u00e1c nhau l\u00e0 Logical Right Shift v\u00e0 Arithmetic Right Shift.</p> <p>Kh\u00e1c bi\u1ec7t duy nh\u1ea5t gi\u1eefa hai lo\u1ea1i ph\u00e9p to\u00e1n n\u00e0y l\u00e0 Logical Right Shift \u0111i\u1ec1n c\u00e1c bit b\u00ean tr\u00e1i m\u1edbi \u0111\u01b0\u1ee3c th\u00eam b\u1eb1ng \\(0\\), trong khi Arithmetic Right Shift \u0111i\u1ec1n c\u00e1c bit n\u00e0y l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a bit tr\u00e1i c\u00f9ng trong s\u1ed1 ban \u0111\u1ea7u (bit th\u1ee9 \\(31\\) \u0111\u1ed1i v\u1edbi ki\u1ec3u <code>int</code>, v\u00e0 bit th\u1ee9 \\(63\\) \u0111\u1ed1i v\u1edbi ki\u1ec3u <code>long long</code>).</p> <p>Ch\u1eb3ng h\u1ea1n, ta s\u1eed d\u1ee5ng ki\u1ec3u s\u1ed1 <code>char</code> c\u00f3 8 bit, v\u00e0 th\u1ef1c hi\u1ec7n ph\u00e9p to\u00e1n <code>0b</code><code>101</code><code>01101 &gt;&gt; 5</code>. Logical Right Shift s\u1ebd tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 <code>0b00000</code><code>101</code>, nh\u01b0ng Arithmetic Right Shift s\u1ebd tr\u1ea3 v\u1ec1 <code>0b11111</code><code>101</code>.</p> <p>Ch\u1eafc ch\u1eafn khi \u0111\u1ecdc \u0111\u1ebfn \u0111\u00e2y, c\u00e1c b\u1ea1n s\u1ebd t\u1ef1 h\u1ecfi v\u1ec1 \u00fd ngh\u0129a c\u1ee7a ph\u00e9p Arithmetic Right Shift. Trong tr\u01b0\u1eddng h\u1ee3p to\u00e1n h\u1ea1ng <code>a</code> l\u00e0 s\u1ed1 kh\u00f4ng \u00e2m, hai ph\u00e9p to\u00e1n ho\u1ea1t \u0111\u1ed9ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng. Tuy nhi\u00ean, trong tr\u01b0\u1eddng h\u1ee3p <code>a</code> \u00e2m, ph\u00e9p Logical Right Shift kh\u00f4ng c\u00f3 \u00fd ngh\u0129a v\u1ec1 m\u1eb7t to\u00e1n h\u1ecdc, m\u00e0 \u0111\u01a1n gi\u1ea3n ch\u1ec9 l\u00e0 \u0111\u1ea9y c\u00e1c bit sang ph\u1ea3i. Trong khi \u0111\u00f3, ph\u00e9p Arithmetic Right Shift s\u1ebd v\u1eabn \u0111\u1ea3m b\u1ea3o t\u00ednh ch\u1ea5t <code>a &gt;&gt; b</code> \\(= \\lfloor \\frac{a}{2^b} \\rfloor\\). Ch\u00fa \u00fd r\u1eb1ng k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p to\u00e1n s\u1ebd \u0111\u01b0\u1ee3c l\u00e0m tr\u00f2n xu\u1ed1ng, ch\u1eb3ng h\u1ea1n nh\u01b0 <code>-7 &gt;&gt; 2</code> \\(= \\frac{-7}{2^2} = -1.75\\) \u0111\u01b0\u1ee3c l\u00e0m tr\u00f2n xu\u1ed1ng \\(-2\\).</p> <p>L\u00fd do ph\u00e9p to\u00e1n tr\u00ean ho\u1ea1t \u0111\u1ed9ng l\u00e0 v\u00ec c\u00e1c s\u1ed1 nguy\u00ean \u00e2m \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng two's complement. Do gi\u1edbi h\u1ea1n c\u1ee7a b\u00e0i vi\u1ebft, ng\u01b0\u1eddi vi\u1ebft s\u1ebd kh\u00f4ng \u0111i s\u00e2u h\u01a1n v\u00e0o lo\u1ea1i bi\u1ec3u di\u1ec5n n\u00e0y.</p> <p>Trong C++, ph\u00e9p Logical Right Shift s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng n\u1ebfu to\u00e1n t\u1eed \u0111\u1ea7u ti\u00ean l\u00e0 m\u1ed9t s\u1ed1 thu\u1ed9c lo\u1ea1i <code>unsigned</code>, c\u00f2n n\u1ebfu kh\u00f4ng th\u00ec ph\u00e9p Arithmetic Right Shift s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.</p>"},{"location":"algo/basic/bitwise-operators/#su-dung-pragma","title":"S\u1eed d\u1ee5ng Pragma","text":"<p>\u0110\u1ed1i v\u1edbi g\u1ea7n nh\u01b0 t\u1ea5t c\u1ea3 (\\(&gt;99\\%\\)) nh\u1eefng m\u00e1y t\u00ednh m\u00e0 b\u1ea1n s\u1ebd g\u1eb7p trong \u0111\u1eddi, c\u00e1c h\u00e0m ph\u00eda tr\u00ean c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u1edbi ch\u1ec9 \\(1\\) instruction, hay n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 trong \\(O(1)\\). Tuy nhi\u00ean, \u0111\u1ec3 h\u1ed7 tr\u1ee3 nh\u1eefng m\u00e1y t\u00ednh r\u1ea5t c\u0169 ho\u1eb7c r\u1ea5t low-end, compiler GCC m\u1eb7c \u0111\u1ecbnh c\u00e0i \u0111\u1eb7t c\u00e1c h\u00e0m tr\u00ean b\u1eb1ng to\u00e1n t\u1eed bit, ch\u1ea1y trong \\(O(\\log_2 \\log_2 n)\\), v\u1edbi \\(n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng bit trong ki\u1ec3u s\u1ed1 c\u1ee7a b\u1ea1n.</p> <p>\u0110\u1ec3 m\u1edf kh\u00f3a c\u00e1c instruction m\u1edbi, c\u00e1c b\u1ea1n c\u1ea7n ph\u1ea3i s\u1eed d\u1ee5ng \u0111\u1ecbnh h\u01b0\u1edbng bi\u00ean d\u1ecbch <code>#pragma GCC target</code>.</p> <p>H\u1ea7u h\u1ebft m\u1ed7i h\u00e0m \u0111\u1ec1u c\u00f3 m\u1ed9t \"flag\" ri\u00eang bi\u1ec7t m\u00e0 khi b\u1eadt l\u00ean s\u1ebd m\u1edf kh\u00f3a instruction cho h\u00e0m \u0111\u00f3. Tuy nhi\u00ean, n\u1ebfu b\u1ea1n m\u1edf kh\u00f3a th\u1eeba th\u00ec code b\u1ea1n v\u1eabn ch\u1ea1y. V\u00ec v\u1eady, \u0111\u1ec3 code ch\u1ea1y nhanh h\u01a1n, b\u1ea1n ch\u1ec9 c\u1ea7n paste d\u00f2ng sau v\u00e0o \u0111\u1ea7u code (tr\u01b0\u1edbc d\u00f2ng <code>#include</code>):</p> <pre><code>## pragma GCC target(\"popcnt,lzcnt,bmi,bmi2,abm\")\n</code></pre>"},{"location":"algo/basic/bitwise-operators/#ieu-gi-xay-ra-neu-phep-left-shift-tran-so","title":"\u0110i\u1ec1u g\u00ec x\u1ea3y ra n\u1ebfu ph\u00e9p Left Shift tr\u00e0n s\u1ed1?","text":"<p>V\u1edbi C++, n\u1ebfu ph\u00e9p to\u00e1n <code>a &lt;&lt; b</code> c\u1ee7a b\u1ea1n b\u1ecb tr\u00e0n s\u1ed1 (bit \\(1\\) \u0111\u01b0\u1ee3c left shift \u0111\u1ebfn qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a ki\u1ec3u s\u1ed1 \u0111ang s\u1eed d\u1ee5ng), s\u1ebd c\u00f3 2 tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra:</p> <ol> <li>N\u1ebfu ki\u1ec3u s\u1ed1 c\u1ee7a k\u1ebft qu\u1ea3 l\u00e0 m\u1ed9t s\u1ed1 <code>unsigned</code>, c\u00e1c bit b\u1ecb tr\u00e0n s\u1ebd \u0111\u01b0\u1ee3c coi nh\u01b0 l\u00e0 \\(0\\), v\u00e0 bi\u1ebfn m\u1ea5t. N\u00f3i c\u00e1ch kh\u00e1c, g\u1ecdi s\u1ed1 bit c\u1ee7a ki\u1ec3u s\u1ed1 k\u1ebft qu\u1ea3 l\u00e0 \\(c\\) (\\(c\\) l\u00e0 \\(32\\) v\u1edbi <code>unsigned int</code>, v\u00e0 \\(64\\) v\u1edbi <code>unsigned long long</code>), k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh theo modulo <code>2^c</code>.</li> <li>N\u1ebfu ki\u1ec3u s\u1ed1 c\u1ee7a k\u1ebft qu\u1ea3 l\u00e0 m\u1ed9t s\u1ed1 <code>signed</code>, ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n s\u1ebd b\u1ecb UB. Tuy nhi\u00ean, trong h\u1ea7u h\u1ebft tr\u01b0\u1eddng h\u1ee3p, code c\u1ee7a b\u1ea1n s\u1ebd kh\u00f4ng b\u1ecb l\u1ed7i, m\u00e0 ch\u1ec9 tr\u1ea3 v\u1ec1 m\u1ed9t k\u1ebft qu\u1ea3 kh\u00f4ng x\u00e1c \u0111\u1ecbnh n\u00e0o \u0111\u00f3. \u0110i\u1ec1u t\u01b0\u01a1ng t\u1ef1 x\u1ea3y ra n\u1ebfu to\u00e1n h\u1ea1ng <code>a</code> c\u1ee7a b\u1ea1n l\u00e0 m\u1ed9t s\u1ed1 \u00e2m.</li> </ol>"},{"location":"algo/basic/bitwise-operators/#thu-vien-bit-cua-c20","title":"Th\u01b0 vi\u1ec7n <code>&lt;bit&gt;</code> c\u1ee7a <code>C++20</code>","text":"<p>Ch\u00fa \u00fd: T\u1ea1i th\u1eddi \u0111i\u1ec3m vi\u1ebft b\u00e0i, h\u1ea7u h\u1ebft c\u00e1c k\u1ef3 thi ch\u00ednh th\u1ee9c ch\u01b0a cho ph\u00e9p s\u1eed d\u1ee5ng chu\u1ea9n <code>C++20</code>. N\u1ebfu kh\u00f4ng ch\u1eafc ch\u1eafn, c\u00e1c b\u1ea1n vui l\u00f2ng ch\u1ec9 s\u1eed d\u1ee5ng nh\u1eefng bi\u1ebfn th\u1ec3 kh\u00f4ng thu\u1ed9c <code>C++20</code> c\u1ee7a c\u00e1c h\u00e0m n\u00e0y.</p> <p>M\u1ed9t trong nh\u1eefng \u0111i\u1ec3m m\u1edbi c\u1ee7a phi\u00ean b\u1ea3n <code>C++20</code> l\u00e0 th\u01b0 vi\u1ec7n <code>&lt;bit&gt;</code>. Th\u01b0 vi\u1ec7n n\u00e0y ch\u1ee9a c\u00e1c h\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 C\u00e1c h\u00e0m thao t\u00e1c Bit. \u0110i\u1ec3m l\u1ee3i c\u1ee7a c\u00e1c h\u00e0m trong th\u01b0 vi\u1ec7n <code>&lt;bit&gt;</code> l\u00e0 c\u00f3 kh\u1ea3 n\u0103ng ch\u1ea1y tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c Compiler C++ kh\u00e1c nhau, nh\u01b0ng \u0111i\u1ec3m tr\u1eeb l\u00e0 ch\u1ec9 ch\u1ea1y \u0111\u01b0\u1ee3c v\u1edbi chu\u1ea9n <code>C++20</code> tr\u1edf l\u00ean.</p>"},{"location":"algo/basic/computational-complexity/","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: - Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN</p> <p>Reviewer: - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN - Ph\u1ea1m Ho\u00e0ng Hi\u1ec7p - University of Georgia - Ng\u00f4 Nh\u1eadt Quang - The University of Texas at Dallas</p>"},{"location":"algo/basic/computational-complexity/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Th\u00f4ng th\u01b0\u1eddng khi vi\u1ebft m\u1ed9t thu\u1eadt to\u00e1n, ta th\u01b0\u1eddng quan t\u00e2m n\u00f3 ch\u1ea1y nhanh hay ch\u1eadm, t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb hay kh\u00f4ng.</p> <p>\u0110\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng th\u1eddi gian ch\u1ea1y c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n d\u1ef1a  tr\u00ean k\u00edch th\u01b0\u1edbc \u0111\u1ea7u v\u00e0o, ch\u00fang ta s\u1eed d\u1ee5ng kh\u00e1i ni\u1ec7m: \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n.</p>"},{"location":"algo/basic/computational-complexity/#khai-niem-o-phuc-tap-thoi-gian-pt","title":"Kh\u00e1i ni\u1ec7m \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian (\u0110PT)","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 m\u1ed9t h\u00e0m \\(f\\) \u0111o s\u1ed1 thao t\u00e1c c\u01a1 b\u1ea3n m\u00e0 m\u1ed9t thu\u1eadt to\u00e1n th\u1ef1c thi, v\u1edbi tham bi\u1ebfn \\(n\\) l\u00e0 k\u00edch th\u01b0\u1edbc \u0111\u1ea7u v\u00e0o: \\(y = f(n)\\)</p> <p>Tr\u00ean th\u1ef1c t\u1ebf, \u0111a ph\u1ea7n c\u00e1c thu\u1eadt to\u00e1n s\u1ebd \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 theo tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t (worst case) v\u00ec s\u1ef1 \u0111\u01a1n gi\u1ea3n v\u00e0 th\u1ef1c t\u1ebf c\u1ee7a n\u00f3.</p> <p>M\u1ed9t s\u1ed1 kh\u00e1c v\u1eabn \u0111\u01b0\u1ee3c \u0111\u00e1nh theo tr\u01b0\u1eddng h\u1ee3p trung b\u00ecnh (average case). V\u00ed d\u1ee5 nh\u01b0 khi: - Tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t \u00edt x\u1ea3y ra. V\u00ed d\u1ee5 v\u1edbi thu\u1eadt to\u00e1n Quick Sort.  Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t l\u00e0 khi ta lu\u00f4n ch\u1ecdn ph\u1ea3i ph\u1ea7n t\u1eed ch\u1ed1t l\u00e0 ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t hay nh\u1ecf nh\u1ea5t c\u1ee7a d\u00e3y, v\u00e0 \u0110PT s\u1ebd l\u00e0 \\(O(n^2)\\), nh\u01b0ng x\u00e1c su\u1ea5t tr\u01b0\u1eddng h\u1ee3p n\u00e0y x\u1ea3y ra r\u1ea5t nh\u1ecf. C\u00f2n trong ph\u1ea7n l\u1edbn c\u00e1c tr\u01b0\u1eddng h\u1ee3p kh\u00e1c, \u0110PT l\u00e0 \\(O(n \\log n)\\). - Thu\u1eadt to\u00e1n c\u00f3 y\u1ebfu t\u1ed1 ng\u1eabu nhi\u00ean. V\u00ed d\u1ee5 nh\u01b0 vi\u1ec7c s\u1eed d\u1ee5ng sinh s\u1ed1 ng\u1eabu nhi\u00ean.</p> <p>Trong t\u1eebng tr\u01b0\u1eddng h\u1ee3p kh\u00e1c nhau c\u1ee7a d\u1eef li\u1ec7u v\u00e0o, vi\u1ec7c t\u00ednh to\u00e1n ch\u00ednh x\u00e1c h\u00e0m \\(f(n)\\) (v\u1edbi \\(x\\) t\u1ed5ng qu\u00e1t) th\u01b0\u1eddng r\u1ea5t kh\u00f3. V\u00e0 \u1edf \u0111\u00e2y, ch\u00fang ta s\u1eed d\u1ee5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p BigO hay O-l\u1edbn thay th\u1ebf.</p>"},{"location":"algo/basic/computational-complexity/#o-phuc-tap-bigo","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p BigO","text":"<p>X\u00e9t 2 h\u00e0m s\u1ed1 d\u01b0\u01a1ng \\(f(n)\\) v\u00e0 \\(g(n)\\) Ta k\u00fd hi\u1ec7u: \\(f(n) = O(g(n))\\)</p> <p>Theo \u0111\u1ecbnh ngh\u0129a gi\u1ea3i t\u00edch, k\u00fd hi\u1ec7u tr\u00ean t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi:</p> \\[\\lim\\limits_{n \\rightarrow \\infty} \\sup\\dfrac{f(n)}{g(n)} &lt; \\infty\\] <p>G\u1ecdi l\u00e0 \"h\u00e0m \\(f\\) kh\u00f4ng t\u0103ng (ti\u1ec7m c\u1eadn) nhanh h\u01a1n \\(g\\)\".</p> <p>N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u: \\(f(n) = O(g(n))\\) th\u00ec t\u1ed3n t\u1ea1i h\u1eb1ng s\u1ed1 \\(c &gt; 0\\) \u0111\u1ec3 khi \\(n\\) \u0111\u1ee7 to \\((\\)v\u1edbi m\u1ecdi \\(n \\ge n_0\\) n\u00e0o \u0111\u00f3\\()\\) th\u00ec \\(f(n) \\le c\\times g(n)\\).</p> <p>V\u00ed d\u1ee5: * \\(f(n) = 2n + 10\\) l\u00e0 \\(O(n)\\) v\u00ec khi ch\u1ecdn \\(c = 3\\), ch\u1ec9 c\u1ea7n \\(n \\ge 10\\) th\u00ec \\(f(n) = 2n + 10 \\le 3n = c \\times n\\) * \\(2n^2 + 10\\) th\u00ec kh\u00f4ng ph\u1ea3i l\u00e0 \\(O(n)\\) n\u1eefa, m\u00e0 s\u1ebd l\u00e0 \\(O(n^2)\\) (ch\u1ecdn \\(c = 3\\) v\u00e0 \\(n \\ge 4\\))</p>"},{"location":"algo/basic/computational-complexity/#mot-so-quy-tac-tinh-toan-pt","title":"M\u1ed9t s\u1ed1 quy t\u1eafc t\u00ednh to\u00e1n \u0110PT","text":""},{"location":"algo/basic/computational-complexity/#cac-quy-tac-co-ban","title":"C\u00e1c quy t\u1eafc c\u01a1 b\u1ea3n","text":"<ul> <li>C\u00e1c ph\u00e9p sau \u0111\u01b0\u1ee3c t\u00ednh l\u00e0 l\u1ec7nh \u0111\u01a1n: ph\u00e9p \u0111\u1ecdc, vi\u1ebft, g\u00e1n v\u00e0 c\u00e1c to\u00e1n t\u1eed c\u01a1 b\u1ea3n (to\u00e1n t\u1eed s\u1ed1 h\u1ecdc, quan h\u1ec7, logic, bit, g\u00e1n, h\u1ed7n h\u1ee3p)  C\u00e1c ph\u00e9p n\u00e0y c\u00f3 \u0110PT \\(O(1)\\)</li> <li>X\u00e9t c\u00e1c l\u1ec7nh <code>S1, S2, ..., Sm</code> v\u00e0 \u0110PT t\u01b0\u01a1ng \u1ee9ng c\u1ee7a ch\u00fang l\u00e0 \\(O(f_1), O(f_2), \\ldots, O(f_m)\\) v\u1edbi \\(f_i\\) l\u00e0 c\u00e1c h\u00e0m c\u1ee7a d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o. \\(E\\) l\u00e0 m\u1ed9t bi\u1ec3u th\u1ee9c logic.<ul> <li>Chu\u1ed7i c\u00e1c l\u1ec7nh li\u00ean ti\u1ebfp: <code>S1; S2; ...; Sm;</code> c\u00f3 \u0110PT \\(O(f_1+f_2+ \\ldots+f_m)\\)</li> <li>Kh\u1ed1i l\u1ec7nh r\u1ebd nh\u00e1nh <code>if E then S1 else S2</code> c\u00f3 \u0110PT \\(O\\left(\\max(f_1,f_2)\\right)\\)</li> <li>C\u00e1c kh\u1ed1i l\u1eb7p: <code>while E do S1</code> <code>do S1 while E</code> <code>for i := E1 to E2 do S1</code> T\u00ednh \u0110PT s\u1ebd t\u01b0\u01a1ng t\u1ef1 chu\u1ed7i c\u00e1c l\u1ec7nh li\u00ean ti\u1ebfp. Gi\u1ea3 s\u1eed \\(S_1\\) \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i \\(g\\) l\u1ea7n th\u00ec \u0110PT s\u1ebd l\u00e0 \\(O(g \\times f_1)\\) v\u1edbi \\(g\\) c\u0169ng l\u00e0 h\u00e0m c\u1ee7a d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o.</li> </ul> </li> </ul>"},{"location":"algo/basic/computational-complexity/#mot-so-chu-y-quan-trong","title":"M\u1ed9t s\u1ed1 ch\u00fa \u00fd quan tr\u1ecdng","text":"<ul> <li>T\u1ea5t c\u1ea3 c\u00e1c b\u00e0i to\u00e1n c\u00f3 \u0110PT \u0111a th\u1ee9c b\u1eadc \\(k\\) th\u00ec c\u00f3 \u0110PT l\u00e0 \\(O(n^k)\\). C\u00e1c h\u1eb1ng s\u1ed1, h\u1ec7 s\u1ed1 \u0111a th\u1ee9c th\u01b0\u1eddng (kh\u00f4ng ph\u1ea3i lu\u00f4n lu\u00f4n) \u0111\u01b0\u1ee3c b\u1ecf qua. <p>K\u00fd hi\u1ec7u \\(\\log n\\) l\u00e0 logarit c\u1ee7a \\(n\\) theo c\u01a1 s\u1ed1 \\(X\\) (v\u1edbi \\(X\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng \\(2, e, 10\\) t\u00f9y s\u00e1ch). Tuy nhi\u00ean v\u1edbi ph\u00e9p chuy\u1ec3n c\u01a1 s\u1ed1 \\(\\log_ab = \\dfrac{\\log b}{\\log a}\\) v\u00e0 \\(\\log b\\) l\u00e0 m\u1ed9t h\u1eb1ng s\u1ed1 nh\u1ecf n\u00ean ta s\u1ebd kh\u00f4ng c\u1ea7n qu\u00e1 quan t\u00e2m \\(X\\) l\u00e0 c\u01a1 s\u1ed1 bao nhi\u00eau n\u1eefa).</p> </li> <li>Coi \\(\\log n \\sim n^\\alpha\\) v\u1edbi \\(0 &lt; \\alpha &lt; 1\\)</li> <li>D\u1ef1a v\u00e0o \u0111\u1ecbnh ngh\u0129a BigO, khi g\u1eb7p m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 \u0110PT l\u00e0 \\(O(n)\\), th\u00ec n\u00f3i \"thu\u1eadt to\u00e1n \u0111\u00f3 c\u00f3 \u0110PT \\(O(n^2)\\)\" kh\u00f4ng h\u1ec1 sai. Hay t\u1ed5ng qu\u00e1t h\u01a1n l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 \u0110PT l\u00e0 \\(O(n^k)\\) m\u00e0 ta b\u1ea3o \"n\u00f3 c\u00f3 \u0110PT \\(O(n^{k + \\alpha})\\)\" c\u0169ng kh\u00f4ng h\u1ec1 sai \\((\\alpha &gt; 0\\) t\u00f9y \u00fd\\()\\). Tuy nhi\u00ean, khi t\u00ednh to\u00e1n \u0110PT, ta n\u00ean ch\u1ecdn \\(k\\) nh\u1ecf nh\u1ea5t sao cho thu\u1eadt to\u00e1n c\u00f3 \u0110PT \\(O(n^k)\\). \u0110i\u1ec1u n\u00e0y s\u1ebd gi\u00fap ta c\u00f3 c\u00e1i nh\u00ecn ch\u00ednh x\u00e1c h\u01a1n \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 thu\u1eadt to\u00e1n.</li> <li>Khi g\u1eb7p c\u00e1c h\u00e0m nhi\u1ec1u bi\u1ebfn, ta v\u1eabn t\u00ednh to\u00e1n nh\u01b0 th\u01b0\u1eddng. V\u00ed d\u1ee5: \\(n\\log^2 n + n^2 + m\\log n + 1 +q^2 = O(n^2+m\\log n +q^2)\\)</li> <li>M\u1ed9t s\u1ed1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u01b0\u1eddng g\u1eb7p trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u v\u00e0 c\u00e1c d\u1eef li\u1ec7u ph\u00f9 h\u1ee3p \u0111\u1ec3 thu\u1eadt to\u00e1n ch\u1ea1y trong kho\u1ea3ng \\(1s\\) (kho\u1ea3ng \\(10^8\\) l\u1ec7nh):</li> </ul> \u0110PT T\u00ean g\u1ecdi n \\(O(1)\\) H\u1eb1ng s\u1ed1 (Constant) T\u00f9y y\u00eau c\u1ea7u b\u00e0i to\u00e1n \\(O(\\sqrt n)\\) \\(10^{12}\\) \\(O(n)\\) Tuy\u1ebfn t\u00ednh (Linear) \\(10^{8}\\) \\(O(n\\log n)\\) Linearithmic \\(10^6\\) \\(O(n\\sqrt n)\\) \\(2 \\times 10^5\\) \\(O(n^2)\\) B\u1eadc 2 (Quadratic) \\(10^{4}\\) \\(O(n^3)\\) B\u1eadc 3 (Cubic) \\(500\\) \\(O(n^4)\\) B\u1eadc 4 (Quartic) \\(100\\) \\(O(2^n)\\) Exponential \\(20\\) \\(O(n!)\\) Giai th\u1eeba (factorial) \\(11\\) <p>Tuy nhi\u00ean, vi\u1ec7c c\u00f3 \u0110PT \u0111\u00e1p \u1ee9ng b\u1ed9 d\u1eef li\u1ec7u nh\u01b0 trong b\u1ea3ng tr\u00ean, kh\u00f4ng c\u00f3 ngh\u0129a thu\u1eadt to\u00e1n s\u1ebd ch\u1ea1y nhanh (trong kho\u1ea3ng \\(1s\\)). B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 xem chi ti\u1ebft trong ph\u1ea7n M\u1edf r\u1ed9ng. H\u1eb1ng s\u1ed1 \u0110PT</p>"},{"location":"algo/basic/computational-complexity/#vi-du","title":"V\u00ed d\u1ee5","text":""},{"location":"algo/basic/computational-complexity/#vong-lap","title":"V\u00f2ng l\u1eb7p","text":"<p>D\u1ef1a v\u00e0o c\u00e1c quy t\u1eafc, ta r\u00fat ra \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 <code>m\u1eb9o</code> khi t\u00ednh \u0110PT c\u00e1c v\u00f2ng l\u1eb7p:</p> <pre><code>1. T\u00ednh s\u1ed1 l\u1ea7n l\u1eb7p t\u1ed1i \u0111a c\u1ee7a m\u1ed9t v\u00f2ng l\u1eb7p\n2. N\u1ebfu c\u00e1c v\u00f2ng l\u1eb7p n\u1ed1i ti\u1ebfp nhau th\u00ec c\u1ed9ng c\u00e1c c\u1eadn \u0111\u00f3 v\u1edbi nhau\n3. N\u1ebfu c\u00e1c v\u00f2ng l\u1eb7p l\u1ed3ng nhau th\u00ec nh\u00e2n c\u00e1c c\u1eadn v\u1edbi nhau\n</code></pre> <p>V\u00ed d\u1ee5 1: <pre><code>int sum = 0;\nfor (int i = 0; i &lt; n; i++) sum += i;\nfor (int j = 0; j &lt; n; j++) sum += j;\n</code></pre> Hai v\u00f2ng c\u00f3 t\u1ed5ng c\u1ed9ng \\(n \\times 2\\) ph\u00e9p c\u1ed9ng, n\u00ean \u0110PT s\u1ebd l\u00e0 \\(\\boldsymbol{O(n)}\\) </p> <p>V\u00ed d\u1ee5 2: <pre><code>int sum = 0;\nfor (int i = 0; i &lt; n; i++){\n    int j = 0;\n    while (j &lt; n){\n        sum += j;\n        j++;\n    }\n}\n</code></pre> Hai v\u00f2ng l\u1eb7p l\u1ed3ng nhau, m\u1ed7i v\u00f2ng l\u1eb7p c\u00f3 \u0110PT \\(O(n)\\) n\u00ean \u0110PT s\u1ebd l\u00e0 \\(\\boldsymbol{O(n^2)}\\) </p> <p>V\u00ed d\u1ee5 3: <pre><code>int sum = 0;\nfor (int i = 0; i &lt; n; i++){\n    for (int j = 0; j &lt; i; j++){\n        sum += j;\n    }\n}\n</code></pre> V\u00f2ng <code>i</code> l\u1eb7p <code>n</code> l\u1ea7n, v\u00f2ng <code>j</code> l\u1eb7p t\u1ed5ng c\u1ed9ng \\(1 + 2 + \\ldots + n = \\dfrac{n \\times (n + 1)}{2}\\) l\u1ea7n, n\u00ean \u0110PT chung v\u1eabn s\u1ebd l\u00e0 \\(\\boldsymbol{O(n^2)}\\) d\u00f9 s\u1ed1 ph\u00e9p t\u00ednh \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1ea3m \u0111i kh\u00e1 nhi\u1ec1u.    </p>"},{"location":"algo/basic/computational-complexity/#hai-con-tro","title":"Hai con tr\u1ecf","text":"<p>Cho m\u1ed9t m\u1ea3ng <code>a[]</code> \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp. X\u00e1c \u0111\u1ecbnh xem li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i \\(2\\) ph\u1ea7n t\u1eed trong m\u1ea3ng m\u00e0 c\u00e1ch nhau \\(d\\) \u0111\u01a1n v\u1ecb hay kh\u00f4ng. X\u00e9t l\u1eddi gi\u1ea3i sau: <pre><code>int j = 0;\nfor (int i = 0; i &lt; n; i++) {\n    while ((j &lt; n-1) &amp;&amp; (a[i] - a[j] &gt; d))\n        j++;\n    if (a[i] - a[j] == d){\n        cout &lt;&lt; \"Ton tai!\";\n        return 0;\n    }\n}\ncout &lt;&lt; \"Khong ton tai\";\n</code></pre></p> <p>Tho\u1ea1t nh\u00ecn, n\u00f3 kh\u00e1 gi\u1ed1ng v\u1edbi v\u00f2ng l\u1eb7p l\u1ed3ng \u1edf V\u00ed d\u1ee5 i.2. v\u00e0 cho ra \u0110PT \\(O(n^2)\\) nh\u01b0ng th\u1ef1c ch\u1ea5t, \u0110PT nh\u1ecf h\u01a1n v\u1eady. Ph\u00e2n t\u00edch: Ta x\u00e9t tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t l\u00e0 khi <code>\"Khong ton tai\"</code>: - Trong V\u00ed d\u1ee5 i.2. bi\u1ebfn <code>j</code> nh\u1eadn gi\u00e1 tr\u1ecb t\u1eeb <code>1</code> \u0111\u1ebfn <code>n</code>, m\u1ed7i gi\u00e1 tr\u1ecb <code>n</code> l\u1ea7n, v\u00e0 \u0110PT chung s\u1ebd l\u00e0 \\(O(n^2)\\). - Tuy nhi\u00ean trong L\u1eddi gi\u1ea3i tr\u00ean th\u00ec bi\u1ebfn <code>i</code> ch\u1ea1y t\u1eeb <code>1</code> \u0111\u1ebfn <code>n</code>, m\u1ed7i gi\u00e1 tr\u1ecb x\u00e9t \\(1\\) l\u1ea7n. C\u00f2n bi\u1ebfn <code>j</code> ch\u1ea1y t\u1eeb <code>1</code> \u0111\u1ebfn <code>n</code>, m\u1ed7i gi\u00e1 tr\u1ecb x\u00e9t t\u1ed1i \u0111a \\(1\\) l\u1ea7n. N\u00ean \u0110PT trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t l\u00e0 \\(O(2n)\\) hay \\(\\boldsymbol{O(n)}\\).</p> <p>Nh\u1eadn x\u00e9t: - Thu\u1eadt to\u00e1n tr\u00ean s\u1edf d\u0129 g\u1ecdi l\u00e0 \\(2\\) con tr\u1ecf b\u1edfi \\(2\\) bi\u1ebfn \\(i\\) v\u00e0 \\(j\\) \u0111\u1ed9c l\u1eadp, d\u00f9 cho v\u00f2ng l\u1eb7p \\(j\\) n\u1eb1m trong v\u00f2ng l\u1eb7p \\(i\\). - Khi g\u1eb7p v\u00f2ng l\u1eb7p l\u1ed3ng, ta c\u1ea7n ch\u00fa \u00fd h\u01a1n, ho\u1eb7c \u0111\u1ec3 ch\u00ednh x\u00e1c th\u00ec n\u00ean c\u1ed9ng t\u1eebng v\u00f2ng l\u1eb7p con b\u00ean trong. Sau n\u00e0y ta s\u1ebd g\u1eb7p c\u00e1c thu\u1eadt to\u00e1n t\u1ed1i \u01b0u kh\u00e1 \u1ea3o nh\u01b0 <code>Knuth's Optimization</code> hay <code>Knapsack on tree</code>, th\u00ec ta ph\u1ea3i d\u00f9ng c\u00e1ch n\u00e0y \u0111\u1ec3 t\u00ednh \u0110PT m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c h\u01a1n.</p>"},{"location":"algo/basic/computational-complexity/#tim-kiem-nhi-phan","title":"T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n","text":"<p>Cho m\u1ed9t d\u00e3y \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n, ki\u1ec3m tra xem d\u00e3y c\u00f3 t\u1ed3n t\u1ea1i gi\u00e1 tr\u1ecb <code>target</code> kh\u00f4ng. X\u00e9t l\u1eddi gi\u1ea3i b\u1eb1ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n nh\u01b0 sau: <pre><code>int binary_search(int a[], int sizeA, int target) {\n    int lo = 1, hi = sizeA;\n    while (lo &lt;= hi) {\n        int mid = lo + (hi - lo)/2;\n        if (a[mid] == target)\n            return mid;         \n        else if (a[mid] &lt; target)\n            lo = mid+1;\n        else\n            hi = mid-1;\n    }\n    // kh\u00f4ng t\u00ecm th\u1ea5y gi\u00e1 tr\u1ecb target trong m\u1ea3ng A\n    return -1;\n} \n</code></pre></p> <p>\u1ede m\u1ed7i b\u01b0\u1edbc, k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ea3ng c\u1ea7n t\u00ecm ki\u1ebfm b\u1ecb gi\u1ea3m \u0111i m\u1ed9t n\u1eeda. Sau \\(\\lceil \\log_2 n \\rceil\\) b\u01b0\u1edbc, th\u00ec s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng l\u00e0 \\(1\\) v\u00e0 d\u1eebng t\u00ecm ki\u1ebfm. T\u1eeb \u0111\u00f3 \u0110PT c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\boldsymbol{O(\\log n)}\\) v\u1edbi \\(n\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed ban \u0111\u1ea7u c\u1ee7a kh\u00f4ng gian t\u00ecm ki\u1ebfm.</p>"},{"location":"algo/basic/computational-complexity/#e-quy","title":"\u0110\u1ec7 quy","text":""},{"location":"algo/basic/computational-complexity/#thuat-toan-quay-lui-sinh-cau-hinh-to-hop","title":"Thu\u1eadt to\u00e1n quay lui sinh c\u1ea5u h\u00ecnh t\u1ed5 h\u1ee3p","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t \u0111o\u1ea1n code sinh t\u1ea5t c\u1ea3 c\u00e1c ho\u00e1n v\u1ecb t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) v\u1edbi \\((n \\le 10)\\) <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 10;\n\nint n, a[N + 5];\nbool used[N + 5];\n\nvoid print(){\n    for (int i = 1; i &lt;= n; i++)\n        cout &lt;&lt; a[i];\n    cout &lt;&lt; '\\n';\n}\n\nvoid backtrack(int i){\n    if (i == n + 1){\n        print();\n        return;\n    }\n    for (int j = 1; j &lt;= n; j++) if (used[j] == false) {\n        a[i] = j;\n        used[j] = true;\n        backtrack(i + 1);\n        used[j] = 0;\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    backtrack(1);\n}\n</code></pre></p> <p>Ph\u00e2n t\u00edch:     Ta g\u1ecdi h\u00e0m <code>backtrack(1)</code> n\u00ean <code>i</code> s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb <code>1</code>.     T\u1ea1i v\u00f2ng l\u1eb7p <code>j</code> \u0111\u1ea7u ti\u00ean, ta x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 g\u00e1n cho <code>a[1]</code> (s\u1ed1 h\u1ea1ng th\u1ee9 <code>1</code>) v\u00e0 \u0111\u00e1nh d\u1ea5u \u0111\u00e3 s\u1eed d\u1ee5ng gi\u00e1 tr\u1ecb \u0111\u00f3.     V\u00e0 ta s\u1ebd g\u00e1n l\u1ea7n l\u01b0\u1ee3t <code>a[2], ..., a[n]</code>.      \u0110\u1ebfn <code>i = n + 1</code>, ch\u00fang ta s\u1ebd in ra k\u1ebft qu\u1ea3 v\u00e0 x\u00e9t \u0111\u1ebfn c\u1ea5u h\u00ecnh ti\u1ebfp. Vi\u1ec7c in k\u1ebft qu\u1ea3 s\u1ebd t\u1ed1n 1 v\u00f2ng \\(O(n)\\)     V\u00ec th\u1ebf ta c\u00f3 t\u1ed5ng c\u1ed9ng \\(n \\times (n - 1) \\times \\ldots \\times 1 \\times n = n \\times n!\\) ph\u00e9p to\u00e1n. Hay \u0110PT b\u00e0i to\u00e1n l\u00e0 \\(\\boldsymbol{O(n \\times n!)}\\).</p>"},{"location":"algo/basic/computational-complexity/#chia-e-tri","title":"Chia \u0111\u1ec3 tr\u1ecb","text":"<p>\u0110\u00f4i khi \u0110PT c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n \u0111\u1ec7 quy kh\u00f4ng qu\u00e1 l\u1edbn nh\u01b0 \\(O(n!)\\). B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 th\u1ea5y r\u00f5 v\u1edbi thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp Merge Sort (S\u1eafp x\u1ebfp tr\u1ed9n) sau \u0111\u00e2y:</p> <pre><code>MergeSort(m\u1ea3ng S) {\n    1. if (s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a S &lt;= 1)\n        return S;\n    2. chia \u0111\u00f4i S th\u00e0nh hai m\u1ea3ng con S1 v\u00e0 S2 v\u1edbi s\u1ed1 ph\u1ea7n t\u1eed g\u1ea7n b\u1eb1ng nhau;\n    3. MergeSort(S1);\n    4. MergeSort(S2);\n    5. tr\u1ed9n S1 v\u00e0 S2 \u0111\u00e3 s\u1eafp x\u1ebfp \u0111\u1ec3 thu \u0111\u01b0\u1ee3c S m\u1edbi \u0111\u00e3 s\u1eafp x\u1ebfp;\n    6. return S m\u1edbi;\n}\n</code></pre> <p>Minh h\u1ecda v\u1ec1 c\u00e1ch thu\u1eadt to\u00e1n Merge Sort ho\u1ea1t \u0111\u1ed9ng:</p> <p></p> <p>Ph\u00e2n t\u00edch: G\u1ecdi \\(f(n)\\) l\u00e0 \u0110PT c\u1ee7a h\u00e0m <code>MergeSort(S)</code> v\u1edbi \\(n = |S|\\) D\u1ec5 th\u1ea5y: - B\u01b0\u1edbc \\(1, 2, 6\\) \u0111\u1ec1u m\u1ea5t \\(O(1)\\) - B\u01b0\u1edbc \\(5\\) s\u1ebd m\u1ea5t \\(n\\) b\u01b0\u1edbc v\u1edbi hai con tr\u1ecf - B\u01b0\u1edbc \\(3, 4\\) s\u1ebd m\u1ea5t \\(f\\left(\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\\right)\\) v\u00e0 \\(f\\left(\\left\\lceil\\dfrac{n}{2}\\right\\rceil\\right)\\)</p> <p>Trong \u0111\u00f3: \\(\\lfloor x \\rfloor\\) l\u00e0 s\u1ed1 nguy\u00ean l\u1edbn nh\u1ea5t \\(\\le x\\) (ph\u1ea7n nguy\u00ean d\u01b0\u1edbi). \\(\\lceil x \\rceil\\) l\u00e0 s\u1ed1 nguy\u00ean nh\u1ecf nh\u1ea5t \\(\\ge x\\) (ph\u1ea7n nguy\u00ean tr\u00ean).</p> <p>T\u1eeb \u0111\u00f3, ta c\u00f3 : \\(\\begin{align} \\begin{cases} f(1) = 1\\\\ f(n)= f\\left(\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\\right) + f\\left(\\left\\lceil\\dfrac{n}{2}\\right\\rceil\\right)+ \\alpha n \\, (\\alpha \\ge 1) \\end{cases} \\end{align}\\)</p> <p>\u0110PT thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(f(n) = \\boldsymbol{O(n\\log n)}\\) trong c\u1ea3 worst case v\u00e0 average case.</p> <p>\u0110\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c k\u1ebft lu\u1eadn tr\u00ean, ta \u0111i ch\u1ee9ng minh ph\u00e1t bi\u1ec3u sau: </p> <p>T\u1ed3n t\u1ea1i h\u1eb1ng s\u1ed1 \\(c &gt; 1\\) n\u00e0o \u0111\u00f3 m\u00e0 v\u1edbi \\(\\forall n \\le T\\) ta c\u00f3 \\(f(n)\u2264 n\\log_2n + c\\times n\\)</p> <p>B\u1eb1ng quy n\u1ea1p, ta c\u00f3: - V\u1edbi \\(n = 1\\), r\u00f5 r\u00e0ng lu\u00f4n t\u1ed3n t\u1ea1i \\(c''&gt;1\\) \u0111\u1ec3 \\(f(1)&lt;c'' \\times 1\\) - Gi\u1ea3 s\u1eed \u0111i\u1ec1u n\u00e0y \u0111\u00fang \u0111\u1ebfn \\(n = k - 1\\) \\((k \\ge 2)\\), ta c\u1ea7n ch\u1ee9ng minh \u0111\u00fang v\u1edbi \\(n = k\\): - Th\u1eadt v\u1eady, \\(\\begin{align} f(k) &amp;= f\\left(\\left\\lfloor\\frac{k}{2}\\right\\rfloor\\right)+f\\left(\\left\\lceil\\frac{k}{2}\\right\\rceil\\right) + \\alpha k\\\\ \\Rightarrow f(k) &amp;\\le 2f\\left(\\left\\lceil\\frac{k}{2}\\right\\rceil\\right) + \\alpha k\\\\ &amp;\\le \\left( 2 \\left\\lceil\\frac{k}{2}\\right\\rceil \\times \\log_2\\left(\\left\\lceil\\frac{k}{2}\\right\\rceil\\right) + c' k \\right) + \\alpha k\\\\ &amp;\\le \\left( 2 \\times\\frac{k}{2}\\times \\log_2\\left(\\frac{k}{2}\\right) + \\beta k \\right) + (c'+\\alpha) k\\\\ &amp;= k \\log_2 k - k + (c' + \\alpha + \\beta)\\times k\\\\ &amp;= k \\log_2 k + c''\\times k\\\\ \\end{align}\\)</p> <p>Ch\u1ecdn \\(c = \\max\\limits_{n \\le T}(c'')\\), ta \u0111\u01b0\u1ee3c \u0111pcm.</p> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o d\u1ea1ng t\u1ed5ng qu\u00e1t c\u1ee7a b\u00e0i to\u00e1n: Master theorem (\u0110\u1ecbnh l\u00fd th\u1ee3)</p>"},{"location":"algo/basic/computational-complexity/#pt-va-chuoi-nghich-ao","title":"\u0110PT v\u00e0 chu\u1ed7i ngh\u1ecbch \u0111\u1ea3o","text":""},{"location":"algo/basic/computational-complexity/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>T\u00ednh \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a \u0111o\u1ea1n code sau: <pre><code>int cnt = 0;\nfor (int i = 1; i &lt;= n; i++){\n    for (int j = i; j &lt;= n; j += i){\n        cnt++;\n    }\n}\n</code></pre> Gi\u1ea3i:  R\u00f5 r\u00e0ng, v\u1edbi m\u1ed7i bi\u1ebfn \\(i\\), v\u00f2ng l\u1eb7p \\(j\\) s\u1ebd ch\u1ea1y \\(\\left\\lfloor\\dfrac{n}{i}\\right\\rfloor\\) l\u1ea7n. V\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O\\left( n \\times \\left(\\dfrac{1}{1} + \\dfrac{1}{2} +\\ldots+\\dfrac{1}{n} \\right) \\right) = O\\left(n \\cdot \\sum\\limits_{i = 1}^{n} \\dfrac{1}{i}\\right)\\). V\u00e0 \u0111\u1ebfn \u0111\u00e2y r\u00fat g\u1ecdn th\u1ebf n\u00e0o nh\u1ec9?</p> <ul> <li> <p>\\(x &gt; \\log(1 + x)\\) v\u1edbi m\u1ecdi \\(x &gt; 0\\) n\u00ean \\(\\(\\dfrac{1}{1} + \\dfrac{1}{2} +\\ldots+\\dfrac{1}{n} \\ge \\log\\dfrac{2}{1} + \\log\\dfrac{3}{2} +\\ldots+ \\log\\dfrac{n+1}{n} = \\log(n+1)\\)\\)</p> </li> <li> <p>L\u1ea1i c\u00f3: \\(\\(\\underbrace{\\dfrac{1}{1}}_{=1} + \\underbrace{\\dfrac{1}{2} + \\dfrac{1}{3}}_{&lt; 2 \\times \\frac{1}{2} = 1} +  \\underbrace{\\dfrac{1}{4} + \\ldots + \\dfrac{1}{7}}_{&lt; 4 \\times \\frac{1}{4} = 1} + \\ldots + \\underbrace{\\dfrac{1}{2^{\\lfloor \\log_2n \\rfloor}} + \\ldots + \\dfrac{1}{n}}_{&lt;1}  &lt; \\lfloor\\log_2n\\rfloor + 1\\)\\)</p> </li> <li>Ch\u1eb7n \u0111\u01b0\u1ee3c th\u1ebf n\u00e0y th\u00ec ta \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 l\u00e0 \\(O\\left(n \\cdot \\sum\\limits_{i = 1}^{n} \\dfrac{1}{i}\\right) = \\boldsymbol{O( n\\log n)}\\)</li> </ul> <p>Nh\u1eadn x\u00e9t: R\u00f5 r\u00e0ng, \\(\\left\\lfloor \\dfrac{n}{i} \\right\\rfloor\\) l\u00e0 s\u1ed1 s\u1ed1 \\(\\le n\\) v\u00e0 chia h\u1ebft cho \\(i\\). V\u00ec th\u1ebf v\u1edbi \\(\\tau(n)\\) l\u00e0 s\u1ed1 \u01b0\u1edbc d\u01b0\u01a1ng c\u1ee7a \\(n\\) th\u00ec b\u1ea3n ch\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n tr\u00ean l\u00e0: \\(\\(f(n) = \\tau(1) + \\tau(2) + \\ldots + \\tau(n) = \\sum\\limits_{i = 1}^{n} \\left\\lfloor \\dfrac{n}{i} \\right\\rfloor \\sim n\\log n\\)\\) \\(f(n)\\) c\u0169ng ch\u00ednh l\u00e0 s\u1ed1 c\u1eb7p s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\((i, j)\\) th\u1ecfa m\u00e3n: \\(i \\cdot j \\le n\\).</p>"},{"location":"algo/basic/computational-complexity/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>T\u00ednh \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a gi\u1ea3i thu\u1eadt s\u00e0ng nguy\u00ean t\u1ed1 Erathosenes: <pre><code>for (int i = 2; i * i &lt;= n; i++) is_prime[i] = true;\nfor (int i = 2; i &lt;= n; i++) if (is_prime[i]){\n    for (int j = i * 2; j &lt;= n; j += i){\n        is_prime[j] = false;\n    }\n}\n</code></pre> Gi\u1ea3i: T\u01b0\u01a1ng t\u1ef1 b\u00e0i tr\u00ean, nh\u01b0ng ch\u1ec9 khi bi\u1ebfn \\(i\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec bi\u1ebfn \\(j\\) s\u1ebd ch\u1ea1y \\(n/i\\) l\u1ea7n, ng\u01b0\u1ee3c l\u1ea1i bi\u1ebfn \\(j\\) kh\u00f4ng ph\u1ea3i ch\u1ea1y 1 v\u00f2ng n\u00e0o. V\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O\\left( n \\times \\left(\\dfrac{1}{2} + \\dfrac{1}{3} +\\ldots+\\dfrac{1}{p} \\right) \\right)\\) v\u1edbi \\(p \\style{font-family:Cambria Math}{\\large\\text{ l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1}}\\le  n\\).  \u0110\u1ebfn \u0111\u00e2y vi\u1ec7c t\u00ednh to\u00e1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd ph\u1ea3i d\u00f9ng \u0111\u1ebfn ki\u1ebfn th\u1ee9c L\u00fd thuy\u1ebft s\u1ed1 gi\u1ea3i t\u00edch. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam \u0110\u1ecbnh l\u00fd Merten 2. \\(\\(O\\left( n \\times \\left(\\dfrac{1}{2} + \\dfrac{1}{3} +\\ldots+\\dfrac{1}{p} \\right) \\right) = O\\left(n \\cdot \\underset{{p \\le n}}{\\sum\\limits_{p \\style{font-family:Cambria Math}{\\large\\text{ nguy\u00ean t\u1ed1}}}}\\dfrac{1}{p}\\right) = \\boldsymbol{O( n \\log (\\log n))}\\)\\)</p>"},{"location":"algo/basic/computational-complexity/#mo-rong","title":"M\u1edf r\u1ed9ng","text":""},{"location":"algo/basic/computational-complexity/#ho-ham-on","title":"H\u1ecd h\u00e0m O(n)","text":"<p>\\(O(n)\\) thu\u1ed9c m\u1ed9t h\u1ecd h\u00e0m Bachmann\u2013Landau. V\u00e0 trong h\u1ecd h\u00e0m n\u00e0y, c\u00f3 m\u1ed9t s\u1ed1 h\u00e0m c\u0169ng \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 \u0110PT l\u00e0 \\(\\Omega(n)\\) (Omega l\u1edbn) v\u00e0 \\(\\Theta(n)\\) (Theta l\u1edbn).</p> <p>Tuy \\(\\Theta(n)\\) \u0111\u00e1nh gi\u00e1 c\u1eadn ch\u00ednh x\u00e1c \\((\\)kh\u00f4ng ph\u1ea3i c\u1eadn tr\u00ean nh\u01b0 \\(O(n))\\), nh\u01b0ng ta v\u1eabn s\u1eed d\u1ee5ng \\(O(n)\\) v\u00ec s\u1ef1 ph\u1ed5 bi\u1ebfn v\u00e0 d\u1ec5 vi\u1ebft c\u1ee7a n\u00f3.</p>"},{"location":"algo/basic/computational-complexity/#hang-so-pt","title":"H\u1eb1ng s\u1ed1 \u0110PT","text":"<ul> <li> <p>V\u1edbi h\u1ea7u h\u1ebft c\u00e1c thu\u1eadt to\u00e1n th\u01b0\u1eddng g\u1eb7p trong th\u1ef1c t\u1ebf, gi\u00e1 tr\u1ecb h\u1eb1ng s\u1ed1 c\u1ee7a \\(O\\) (ho\u1eb7c \\(\u0398\\)) th\u01b0\u1eddng l\u00e0 kh\u00e1 nh\u1ecf. N\u1ebfu m\u1ed9t thu\u1eadt to\u00e1n l\u00e0 \\(O(n^2)\\), \u0110PT ch\u00ednh x\u00e1c l\u00e0 v\u00e0o kho\u1ea3ng \\(10n^2\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i \\(10^3n^2\\). N\u00f3i c\u00e1ch kh\u00e1c: n\u1ebfu h\u1eb1ng s\u1ed1 qu\u00e1 l\u1edbn th\u00ec th\u01b0\u1eddng l\u00e0 c\u00e1c h\u1eb1ng s\u1ed1 \u0111\u00f3 c\u00f3 li\u00ean quan t\u1edbi c\u00e1c \u0111\u1ea1i l\u01b0\u1ee3ng c\u00f3 s\u1eb5n trong \u0111\u1ec1 b\u00e0i. Khi \u0111\u00f3, ta c\u1ea7n g\u00e1n m\u1ed9t t\u00ean g\u1ecdi cho h\u1eb1ng s\u1ed1 \u0111\u00f3 v\u00e0 th\u00eam n\u00f3 v\u00e0o \u0111\u00e1nh gi\u00e1 \u0110PT, thay v\u00ec b\u1ecf qua.</p> <ul> <li>V\u00ed d\u1ee5: thay v\u00ec \u0111\u1ec3 \\(O(1000 \\times n)\\) r\u1ed3i suy ra \u0110PT l\u00e0 \\(O(n)\\) th\u00ec n\u00ean vi\u1ebft th\u00e0nh \\(O(q\\times n)\\) v\u1edbi \\(q = 1000\\)</li> <li>Trong to\u00e1n h\u1ecdc, \\(O(10^9)\\) v\u1eabn l\u00e0 \\(O(1)\\). Tuy nhi\u00ean \u0111i\u1ec1u n\u00e0y ch\u1ec9 \u0111\u00fang khi \\(n\\) c\u1ef1c l\u1edbn \\((\\infty)\\).</li> <li>C\u00f2n trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, ta hay g\u1eb7p b\u1ed9 d\u1eef li\u1ec7u \\(n \\le 10^8\\), n\u00ean r\u00f5 r\u00e0ng \\(O(10^9)\\) s\u1ebd ch\u1ea1y l\u00e2u h\u01a1n \\(O(n)\\). V\u00ec th\u1ebf trong V\u00ed d\u1ee5, vi\u1ec7c \u0111\u1eb7t \\(q = 1000\\) l\u00e0 ho\u00e0n to\u00e0n ph\u00f9 h\u1ee3p.</li> </ul> </li> <li> <p>C\u0169ng nh\u01b0 v\u1eeba \u0111\u1ec1 c\u1eadp, h\u1eb1ng s\u1ed1 c\u1ee7a thu\u1eadt to\u00e1n trong \u0110PT c\u0169ng c\u00f3 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn th\u1eddi gian th\u1ef1c thi.</p> <ul> <li> <p>Hai thu\u1eadt to\u00e1n c\u00f3 \u0110PT ngang nhau kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 ch\u00fang ch\u1ea1y nhanh nh\u01b0 nhau.</p> <ul> <li>V\u00ed d\u1ee5 khi x\u00e9t vi\u1ec7c s\u1eafp x\u1ebfp \\(n\\) s\u1ed1 nguy\u00ean, <code>std::sort</code>, <code>std::priority_queue</code>, <code>std::set</code>/<code>std::map</code> \u0111\u1ec1u c\u00f3 \u0110PT \\(O(n\\log n)\\).</li> <li>Tuy nhi\u00ean khi so s\u00e1nh v\u1ec1 th\u1eddi gian ch\u1ea1y th\u00ec <code>std::sort</code> \\(&lt;\\) <code>std::priority_queue</code> \\(&lt;\\) <code>std::set</code>/<code>std::map</code></li> </ul> </li> <li> <p>Thu\u1eadt to\u00e1n c\u00f3 \u0110PT b\u1eadc cao h\u01a1n kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 ch\u00fang ch\u1ea1y ch\u1eadm h\u01a1n trong m\u1ecdi b\u1ed9 d\u1eef li\u1ec7u.</p> <ul> <li>V\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh l\u00e0 h\u00e0m <code>std::sort</code> c\u1ee7a C++. Thu\u1eadt to\u00e1n ch\u1ee7 y\u1ebfu v\u1eabn l\u00e0 <code>Quick-sort</code> - \\(O(n\\log n)\\). V\u00e0 \u0111\u1ec3 t\u1ed1i \u01b0u, th\u00ec v\u1edbi b\u1ed9 d\u1eef li\u1ec7u nh\u1ecf, h\u00e0m s\u1ebd s\u1eed d\u1ee5ng <code>Insert-Sort</code> - \\(O(n^2)\\). C\u00f2n khi ch\u1ecdn ph\u1ea7n t\u1eed ch\u1ed1t c\u1ee7a <code>Quick-sort</code> kh\u00f4ng \u0111\u1eb9p, th\u00ec s\u1ebd s\u1eed d\u1ee5ng <code>Heap-Sort</code> - \\(O(n\\log n)\\) thay th\u1ebf.</li> </ul> </li> <li>V\u00ec th\u1ebf, trong t\u1eebng tr\u01b0\u1eddng h\u1ee3p, ta n\u00ean ch\u00fa \u00fd ch\u1ecdn thu\u1eadt to\u00e1n cho ph\u00f9 h\u1ee3p nh\u1ea5t \u0111\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh. V\u00e0 \u0111\u1eb7c bi\u1ec7t khi s\u1eed d\u1ee5ng c\u00e1c h\u00e0m trong th\u01b0 vi\u1ec7n s\u1eb5n c\u00f3 hay c\u00e1c code s\u1eb5n c\u00f3 th\u00ec n\u00ean hi\u1ec3u c\u01a1 b\u1ea3n c\u00e1ch ho\u1ea1t \u0111\u1ed9ng v\u00e0 t\u1ed1c \u0111\u1ed9 c\u1ee7a n\u00f3.</li> </ul> </li> </ul>"},{"location":"algo/basic/computational-complexity/#loi-ket","title":"L\u1eddi k\u1ebft","text":"<p>V\u1edbi l\u1eadp tr\u00ecnh vi\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 h\u1eefu \u00edch \u0111\u1ec3 \u01b0\u1edbc ch\u1eebng th\u1eddi gian th\u1ef1c thi c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n, hay so s\u00e1nh gi\u1eefa c\u00e1c thu\u1eadt to\u00e1n v\u1edbi nhau. Trong c\u00e1c k\u1ef3 thi l\u1eadp tr\u00ecnh, k\u00edch c\u1ee1 c\u1ee7a t\u1eadp d\u1eef li\u1ec7u th\u01b0\u1eddng \u0111\u01b0\u1ee3c cho tr\u01b0\u1edbc trong \u0111\u1ec1 b\u00e0i. D\u1ef1a v\u00e0o \u0111i\u1ec1u \u0111\u00f3, th\u00ed sinh c\u00f3 th\u1ec3 \u01b0\u1edbc ch\u1eebng \u0111\u1ed9 ph\u1ee9c t\u1ea1p r\u1ed3i t\u00ecm ra thu\u1eadt to\u00e1n ph\u00f9 h\u1ee3p. Ho\u1eb7c l\u00e0 khi \u0111\u00e3 ngh\u0129 ra m\u1ed9t v\u00e0i thu\u1eadt to\u00e1n th\u00ec li\u1ec7u thu\u1eadt to\u00e1n n\u00e0o \u0111\u00e1ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t? N\u00ean ch\u1ecdn nh\u1eefng thu\u1eadt to\u00e1n n\u00e0o \u0111\u1ec3 c\u00e0i \u0111\u1eb7t? \u0110PT BigO - ph\u00e2n t\u00edch d\u1ef1a tr\u00ean ti\u1ec7m c\u1eadn l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 m\u1ea1nh m\u1ebd. Nh\u01b0ng Big O b\u1ecf qua c\u00e1c h\u1eb1ng s\u1ed1, v\u00e0 \u0111\u00f4i khi c\u00e1c h\u1eb1ng s\u1ed1 l\u1ea1i quan tr\u1ecdng. V\u00ec th\u1ebf ph\u1ea3i s\u1eed d\u1ee5ng n\u00f3 m\u1ed9t c\u00e1ch kh\u00f4n kh\u00e9o nh\u1ea5t \u0111\u1ec3 \u0111\u1ea1t hi\u1ec7u qu\u1ea3 cao trong l\u1eadp tr\u00ecnh.</p>"},{"location":"algo/basic/hoc-tin-the-nao-1/","title":"T\u00f4i \u0111\u00e3 h\u1ecdc tin h\u1ecdc nh\u01b0 th\u1ebf n\u00e0o? Ph\u1ea7n 1: v\u00f2ng l\u1eb7p","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n Xu\u00e2n Kh\u00e1nh</p> <p>Bi\u1ec3n h\u1ecdc l\u00e0 v\u00f4 b\u1edd. Hai ch\u1eef \u201cv\u00f4 b\u1edd\u201d b\u1ea3n th\u00e2n n\u00f3 v\u1ed1n \u00e1m ch\u1ec9 r\u1eb1ng kh\u00f4ng c\u00f3 \u0111\u00edch \u0111\u1ebfn r\u1ed3i. B\u1ea1n rong ru\u1ed5i tr\u00ean m\u1ed9t con t\u00e0u theo n\u0103m th\u00e1ng tr\u00ean \u0111\u1ea1i d\u01b0\u1ee3ng tri th\u1ee9c. V\u1eady th\u00ec \u00fd ngh\u0129a c\u1ee7a m\u1ed9t cu\u1ed9c s\u1ed1ng nh\u01b0 v\u1eady n\u1eb1m \u1edf \u0111\u00e2u? L\u00e0 v\u1ebb \u0111\u1eb9p c\u1ee7a nh\u1eefng h\u00f2n \u0111\u1ea3o b\u1ea1n gh\u00e9 th\u0103m, nh\u1eefng tr\u1ea3i nghi\u1ec7m v\u1ec1 phong ba b\u00e3o t\u00e1p c\u1ee7a \u0111\u1ea1i d\u01b0\u01a1ng, nh\u1eefng cu\u1ed9c g\u1eb7p g\u1ee1 duy\u00ean ph\u1eadn v\u1edbi nh\u1eefng con t\u00e0u kh\u00e1c, nh\u1eefng cu\u1ed9c \u0111ua v\u00e0 nh\u1eefng khi t\u1ea3n m\u1ea1n.</p> <p>N\u0103m 2007, t\u00f4i n\u1ed9p \u0111\u01a1n thi v\u00e0o tr\u01b0\u1eddng Ph\u1ed5 Th\u00f4ng N\u0103ng Khi\u1ebfu-\u0110\u1ea1i h\u1ecdc qu\u1ed1c gia th\u00e0nh ph\u1ed1 H\u1ed3 Ch\u00ed Minh. T\u00f4i kh\u00f4ng h\u1ec1 bi\u1ebft g\u00ec v\u1ec1 tr\u01b0\u1eddng n\u00e0y tr\u01b0\u1edbc \u0111\u00f3, ch\u1ec9 bi\u1ebft r\u1eb1ng h\u1ecdc sinh tr\u01b0\u1eddng n\u00e0y \u1eaft h\u1eb3n ph\u1ea3i l\u00e0 si\u00eau nh\u00e2n sau khi t\u00f4i xem qua \u0111\u1ec1 tuy\u1ec3n sinh m\u00f4n to\u00e1n. T\u00f4i l\u00fac \u1ea5y c\u0169ng \u0111ang h\u1ecdc chuy\u00ean m\u00f4n to\u00e1n. T\u00f4i kh\u00f4ng bi\u1ebft g\u00ec v\u1ec1 l\u1eadp tr\u00ecnh d\u00f9 \u0111\u00e3 \u0111\u01b0\u1ee3c h\u1ecdc \u0111\u01b0\u1ee3c h\u01a1n th\u00e1ng v\u1ec1 Pascal (ng\u01b0\u1eddi d\u1ea1y t\u00f4i khi \u1ea5y ch\u1ec9 ch\u00e9p l\u00ean b\u1ea3ng code t\u1eeb s\u00e1ch ra, b\u1ea3o t\u00f4i g\u00f5 l\u1ea1i v\u00e0 kh\u00f4ng gi\u1ea3ng g\u00ec th\u00eam). T\u00f4i n\u1ed9p \u0111\u01a1n v\u00e0o l\u1edbp chuy\u00ean to\u00e1n c\u1ee7a PTNK. K\u1ebft q\u1ee7a l\u00e0 t\u00f4i thi\u1ebfu 0.25 \u0111i\u1ec3m \u0111\u1ec3 \u0111\u1eadu v\u00e0o l\u1edbp chuy\u00ean to\u00e1n. May m\u1eafn thay l\u1edbp chuy\u00ean Tin c\u1ee7a tr\u01b0\u1eddng v\u1eabn l\u1ea5y m\u1ed9t n\u1eeda ch\u1ec9 ti\u00eau t\u1eeb s\u1ed1 h\u1ecdc sinh c\u00f3 nguy\u1ec7n v\u1ecdng v\u00e0o l\u1edbp to\u00e1n. T\u00f4i \u0111\u1ee7 \u0111i\u1ec3m \u0111\u1ec3 v\u00e0o chuy\u00ean Tin nh\u01b0ng t\u00f4i c\u1ea3m th\u1ea5y r\u1ea5t lo: xa nh\u00e0, h\u1ecdc \u1edf m\u1ed9t tr\u01b0\u1eddng q\u00faa s\u1ee9c, chuy\u00ean m\u1ed9t m\u00f4n h\u1ecdc b\u00ed \u1ea9n. T\u00f4i n\u00f3i: \u201cCon kh\u00f4ng h\u1ecdc chuy\u00ean Tin \u0111\u00e2u!\u201d. Nh\u01b0ng r\u1ed3i t\u00f4i c\u0169ng \u0111i. M\u1eb9 t\u00f4i kh\u00f3c nhi\u1ec1u. Ba t\u00f4i ch\u1ea1y kh\u1eafp n\u01a1i \u0111\u1ec3 lo ch\u1ed7 \u1edf, xe c\u1ed9, ch\u1ed7 \u0103n u\u1ed1ng cho t\u00f4i \u1edf m\u1ed9t th\u00e0nh ph\u1ed1 l\u1edbn, nh\u01b0ng l\u1ea1.</p> <p>Ng\u00e0y \u0111\u1ea7u ti\u00ean t\u00f4i b\u01b0\u1edbc v\u00e0o l\u1edbp, t\u00f4i b\u1ecb s\u1ed1c. B\u1ea1n t\u00f4i \u0111\u1ed1 nhau v\u1ec1 to\u00e1n h\u1ecdc v\u00e0 tin h\u1ecdc. \u0110i \u0111\u00e2u t\u00f4i c\u0169ng nghe c\u00e1i t\u1eeb \u201cl\u1ec7 quy\u201d. B\u00e0i n\u00e0o c\u0169ng gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng \u201cl\u1ec7 quy\u201d. T\u00f4i th\u1ea5y c\u00e1i t\u1eeb n\u00e0y sao n\u00f3 hay, n\u00f3 \u0111\u1eb9p th\u1ebf. M\u00e3i sau n\u00e0y t\u00f4i m\u1edbi bi\u1ebft l\u00e0 t\u00f4i nghe nh\u1ea7m t\u1eeb \u201c\u0111\u1ec7 quy\u201d.</p> <p>Tr\u01b0\u1eddng ch\u00fang t\u00f4i n\u0103m \u1ea5y nh\u1eadp h\u1ecdc s\u1edbm, l\u1edbp t\u00f4i \u0111\u01b0\u1ee3c h\u1ecdc th\u00eam m\u1ed9t v\u00e0i tu\u1ea7n v\u1ec1 to\u00e1n r\u1eddi r\u1ea1c tr\u01b0\u1edbc khi v\u00e0o ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a n\u0103m h\u1ecdc. V\u00e0i tu\u1ea7n \u0111\u1ea7u, ch\u00fang t\u00f4i \u0111\u01b0\u1ee3c h\u1ecdc c\u01a1 b\u1ea3n v\u1ec1 ng\u00f4n ng\u1eef PASCAL: d\u00f9ng v\u00f2ng l\u1eb7p for \u0111\u1ec3 v\u1ebd sao. R\u1ed3i ti\u1ebfp theo l\u00e0 v\u1ebd nh\u1eefng h\u00ecnh ph\u1ee9c t\u1ea1p h\u01a1n, bu\u1ed9c t\u00f4i ph\u1ea3i h\u1ecdc \u201c\u0111\u1ec7 quy\u201d v\u00e0 \u201cv\u00f2ng l\u1eb7p\u201d m\u1edbi gi\u1ea3i \u0111\u01b0\u1ee3c. V\u00f2ng l\u1eb7p v\u00e0 \u0111\u1ec7 quy, hai kh\u00e1i ni\u1ec7m r\u1ea5t kh\u00f3 nu\u1ed1t cho m\u1ed9t h\u1ecdc sinh chuy\u00ean to\u00e1n nh\u01b0 t\u00f4i. D\u1eabu r\u1eb1ng trong to\u00e1n h\u1ecdc v\u1eabn c\u00f3 nh\u1eefng c\u00f4ng th\u1ee9c truy h\u1ed3i nh\u01b0ng t\u00f4i th\u01b0\u1eddng ngh\u0129 v\u1ec1 ch\u00fang nh\u01b0 m\u1ed9t c\u00f4ng th\u1ee9c to\u00e1n ho\u1eb7c m\u1ed9t h\u00e0m s\u1ed1, t\u1ee9c l\u00e0 ta c\u1ee9 th\u1ebf s\u1ed1 v\u00e0o, tr\u1ea3i qua m\u1ed9t s\u1ed1 c\u00f4ng \u0111o\u1ea1n t\u00ednh nh\u1ea5t \u0111\u1ecbnh \u0111\u1ec3 ra k\u1ebft qu\u1ea3. V\u00f2ng l\u1eb7p l\u1ea1i kh\u00e1c, ta l\u00e0m \u0111i l\u00e0m l\u1ea1i c\u00f9ng m\u1ed9t th\u1ee9, nh\u01b0ng k\u1ebft qu\u1ea3 c\u1ee7a ta bi\u1ebfn \u0111\u1ed5i d\u1ea7n d\u1ea7n r\u1ed3i \u0111i \u0111\u1ebfn gi\u00e1 tr\u1ecb cu\u1ed1i c\u00f9ng khi v\u00f2ng l\u1eb7p k\u1ebft th\u00fac. Trong c\u00e1ch hi\u1ec3u v\u1ec1 To\u00e1n h\u1ecdc c\u1ee7a t\u00f4i, t\u00f4i quan t\u00e2m \u0111\u1ebfn b\u00ean trong h\u00e0m c\u1ee7a t\u00f4i bao g\u1ed3m nh\u1eefng ph\u00e9p t\u00ednh g\u00ec (c\u1ed9ng tr\u1eeb nh\u00e2n chia ra sao), nh\u01b0ng trong t\u01b0 duy Tin h\u1ecdc m\u1edbi, t\u00f4i c\u00f3 th\u1ec3 xem h\u00e0m c\u1ee7a t\u00f4i nh\u01b0 nh\u1eefng chi\u1ebfc h\u1ed9p \u0111en. T\u00f4i quan t\u00e2m nhi\u1ec1u h\u01a1n v\u1ec1 th\u1ee9 n\u00f3 nh\u1eadn v\u00e0o (input) v\u00e0 th\u1ee9 n\u00f3 tr\u1ea3 ra (output). H\u00e3y l\u1ea5y d\u00e3y Fibonacci l\u00e0m v\u00ed d\u1ee5:</p> <pre><code>1, 1, 2, 3, 5, 8, ...\n</code></pre> <p>Gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t s\u1ed1 b\u1eb1ng t\u1ed5ng c\u1ee7a hai s\u1ed1 li\u1ec1n tr\u01b0\u1edbc n\u00f3 tr\u1eeb hai s\u1ed1 \u0111\u1ea7u. Ta t\u1ea1m g\u1ecdi \\(F(n)\\) l\u00e0 s\u00f4 Fibonacci th\u1ee9 \\(n\\). T\u00f4i r\u1ea5t mu\u1ed1n t\u00ednh nhanh gi\u00e1 tr\u1ecb c\u1ee7a s\u1ed1 n\u00e0y.</p> <p>Trong to\u00e1n h\u1ecdc ph\u1ed5 th\u00f4ng m\u00e0 t\u00f4i \u0111\u01b0\u1ee3c h\u1ecdc, t\u00f4i s\u1ebd c\u1ed1 g\u1eafng t\u00ecm ra m\u1ed9t c\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t cho s\u1ed1 Fibonacci th\u1ee9 \\(N\\):</p> <p>\\(F(n) = \\frac{\\phi ^n - \\psi ^ n}{\\phi - \\psi} = \\frac{\\phi ^n - \\psi ^n}{\\sqrt{5}}\\),</p> <p>v\u1edbi:</p> <p>\\(\\phi = \\frac{1 + \\sqrt{5} }{2}\\)</p> <p>v\u00e0</p> <p>\\(\\psi = -\\frac{1}{\\phi}\\)</p> <p>M\u1ee5c \u0111\u00edch c\u1ee7a \u0111i\u1ec1u n\u00e0y l\u00e0 \u0111\u1ec3 gi\u1ea3m thi\u1ec3u s\u1ed1 ph\u00e9p t\u00ednh. V\u00ed d\u1ee5 t\u00f4i mu\u1ed1n t\u00ednh s\u1ed1 th\u1ee9 1000 c\u1ee7a d\u00e3y tr\u00ean, vi\u1ec7c thay gi\u00e1 tr\u1ecb \\(n = 1000\\) v\u00e0 c\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t tr\u00ean c\u1ee7a d\u00e3y s\u1ebd nhanh h\u01a1n vi\u1ec7c \u00e1p d\u1ee5ng s\u1ed1 c\u00f4ng th\u1ee9c truy h\u1ed3i:</p> <p>\\(F_n = F_{n \u2013 1} + F_{n \u2013 2}\\)</p> <p>v\u00e0 t\u00ednh ra 999 s\u1ed1 tr\u01b0\u1edbc \u0111\u00f3!</p> <p>Khi t\u00f4i h\u1ecdc to\u00e1n \u1edf c\u1ea5p hai, nh\u00ecn v\u00e0o c\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t c\u1ee7a s\u1ed1 Fibinacci t\u00f4i ch\u1ec9 th\u1ea5y m\u1ed9t ph\u00e9p tr\u1eeb, m\u1ed9t ph\u00e9p chia, v\u00e0i ph\u00e9p c\u0103n b\u1eadc hai v\u00e0 l\u0169y th\u1eeba. T\u00f4i tr\u00f4ng c\u1eady v\u00e0o m\u00e1y t\u00ednh c\u1ea7m tay \u0111\u1ec3 th\u1ef1c hi\u1ec7n nh\u1eefng ph\u00e9p t\u00ednh \u0111\u00f3. Nh\u01b0ng t\u00f4i kh\u00f4ng \u0111\u1ec3 \u00fd r\u1eb1ng th\u1ef1c hi\u1ec7n ph\u00e9p c\u0103n b\u1eadc hai kh\u00f3 h\u01a1n r\u1ea5t nhi\u1ec1u so v\u1edbi ph\u00e9p tr\u1eeb. \u201cKh\u00f3\u201d \u1edf \u0111\u00e2y kh\u00f4ng nh\u1eefng l\u00e0 v\u1ec1 th\u1eddi gian m\u00e0 c\u00f2n v\u1ec1 \u0111\u1ed9 ch\u00ednh x\u00e1c. Gi\u00e1 tr\u1ecb c\u1ee7a c\u0103n b\u1eadc hai c\u1ee7a 5 m\u00e0 m\u00e1y t\u00ednh c\u1ea7m tay hi\u1ec3n th\u1ecb ra lu\u00f4n ch\u1ee9a sai s\u1ed1 v\u00ec ch\u00fang ta \u0111\u1ec1u bi\u1ebft r\u1eb1ng \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 v\u00f4 t\u1ec9 trong khi \u0111\u1ed9 d\u00e0i m\u00e0n h\u00ecnh m\u00e1y t\u00ednh th\u00ec h\u1eefu h\u1ea1n. Trong c\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t tr\u00ean c\u00f2n ch\u1ee9a nhi\u1ec1u ph\u00e9p t\u00ednh ph\u1ee9c t\u1ea1p nh\u01b0 ph\u00e9p l\u0169y th\u1eeba m\u1ed9t s\u1ed1 th\u1eadp ph\u00e2n ch\u1eb3ng h\u1ea1n. Th\u1ef1c t\u1ebf r\u1ea5t \u00edt ng\u01b0\u1eddi s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c \u1ea5y v\u00ec n\u00f3 lu\u00f4n cho sai s\u1ed1. H\u00e3y d\u00f9ng s\u1ed1 nguy\u00ean khi c\u00f2n c\u00f3 th\u1ec3!</p> <p>Ng\u01b0\u1ee3c l\u1ea1i, trong c\u00f4ng th\u1ee9c truy h\u1ed3i, t\u00f4i ch\u1ec9 th\u1ea5y m\u1ed9t ph\u00e9p c\u1ed9ng \u0111\u01a1n gi\u1ea3n. T\u00f4i g\u00f5 ra m\u1ed9t h\u00e0m s\u1ed1 nh\u1eadn input l\u00e0 hai s\u1ed1 nguy\u00ean v\u00e0 tr\u1ea3 output l\u00e0 t\u1ed5ng c\u1ee7a hai s\u1ed1 \u0111\u00f3. T\u00f4i l\u1ea1i ti\u1ebfp t\u1ee5c n\u00e2ng c\u1ea5p h\u00e0m s\u1ed1 \u0111\u00f3 l\u00ean th\u00e0nh m\u1ed9t quy tr\u00ecnh nh\u01b0 sau: t\u00f4i lo\u1ea1i s\u1ed1 nh\u1ecf h\u01a1n trong input ra kh\u1ecfi h\u00e0m s\u1ed1 v\u00e0 thay n\u00f3 b\u1eb1ng output t\u00f4i v\u1eeba nh\u1eadn \u0111\u01b0\u1ee3c. T\u00f4i c\u00f3 m\u1ed9t b\u1ed9 input m\u1edbi, v\u00e0 t\u1eeb \u0111\u00f3 l\u1ea1i t\u00ednh ra m\u1ed9t output m\u1edbi. Khi t\u00f4i ch\u1ea1y quy tr\u00ecnh \u0111\u00f3, b\u1ea1n \u0111\u1ea7u t\u00f4i cho v\u00e0o hai s\u1ed1 (1, 1). T\u00f4i l\u1eb7p l\u1ea1i quy tr\u00ecnh nhi\u1ec1u l\u1ea7n (bao nhi\u00eau l\u1ea7n \u0111\u1ed1 b\u1ea1n?) cho \u0111\u1ebfn khi t\u00f4i nh\u1eadn \u0111\u01b0\u1ee3c s\u1ed1 Fibonacci th\u1ee9 \\(N\\). N\u00f3i c\u00e1ch kh\u00e1c, t\u00f4i \u0111ang s\u1eed d\u1ee5ng m\u1ed9t v\u00f2ng l\u1eb7p:</p> <pre><code>F[0] = 1\nF[1] = 1\nfor n = 2 to 1000:\n    F[n] = F[n-1] + F[n-2] \n</code></pre> <p>H\u00e3y nh\u1edb l\u1ea1i v\u00ec sao t\u00f4i l\u1ea1i kh\u00f4ng d\u00f9ng c\u00f4ng th\u1ee9c n\u00e0y ngay t\u1eeb \u0111\u1ea7u? V\u00ec mu\u1ed1n t\u00ednh s\u1ed1 th\u1ee9 1000 t\u00f4i ph\u1ea3i t\u00ednh tay ra 999 s\u1ed1 tr\u01b0\u1edbc \u0111\u00f3. \u0110\u1ea5y l\u00e0 khi t\u00f4i ch\u01b0a bi\u1ebft l\u1eadp tr\u00ecnh. Khi t\u00f4i bi\u1ebft l\u1eadp tr\u00ecnh, t\u00f4i \u1edf trong m\u1ed9t t\u00ecnh hu\u1ed1ng kh\u00e1c h\u1eb3n. T\u00f4i ch\u1ec9 c\u1ea7n g\u00f5 m\u1ed9t v\u00f2ng l\u1eb7p, v\u00e0 g\u00f5 m\u1ed9t l\u1ea7n duy nh\u1ea5t. M\u00e1y t\u00ednh s\u1ebd gi\u00fap t\u00f4i th\u1ef1c hi\u1ec7n ph\u1ea7n t\u00ednh to\u00e1n. B\u1ea1n c\u00f3 th\u1ea5y \u0111i\u1ec1u kh\u00e1c bi\u1ec7t kh\u00f4ng? L\u1ea7n tr\u01b0\u1edbc c\u00f4ng s\u1ee9c t\u00f4i b\u1ecf ra l\u00e0 ph\u1ea3i ng\u1ed3i t\u00ednh tay 1000 gi\u00e1 tr\u1ecb nh\u01b0ng b\u00e2y gi\u1edd th\u00ec ch\u1ec9 vi\u1ec7c ng\u1ed3i g\u00f5 ra m\u1ed9t c\u00f4ng th\u1ee9c tr\u1eebu t\u01b0\u1ee3ng v\u00e0 \u0111\u1ec3 m\u00e1y t\u00ednh th\u1ef1c hi\u1ec7n ph\u1ea7n t\u00ednh to\u00e1n v\u1edbi gi\u00e1 tr\u1ecb c\u1ee5 th\u1ec3. \u0110i\u1ec1u n\u00e0y \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ef1a ch\u1ecdn c\u1ee7a t\u00f4i nh\u01b0 th\u1ebf n\u00e0o? Gi\u1edd t\u00f4i s\u1ebd th\u00edch c\u00f4ng th\u1ee9c truy h\u1ed3i h\u01a1n v\u00ec n\u00f3 ng\u1eafn h\u01a1n \u0111\u1ec3 g\u00f5 so v\u1edbi c\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t.</p> <p>M\u00e1y t\u00ednh l\u00e0m t\u1ed1t nh\u1eefng vi\u1ec7c con ng\u01b0\u1eddi l\u00e0m kh\u00f4ng t\u1ed1t, v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. Con ng\u01b0\u1eddi c\u00f3 th\u1ec3 l\u00e0m nh\u1eefng vi\u1ec7c ph\u1ee9c t\u1ea1p nh\u01b0ng \u1edf t\u1ed1c \u0111\u1ed9 th\u1ea5p; c\u00f2n m\u00e1y t\u00ednh l\u1ea1i c\u00f3 th\u1ec3 l\u00e0m nh\u1eefng vi\u1ec7c \u0111\u01a1n gi\u1ea3n nh\u01b0ng \u1edf t\u1ed1c \u0111\u1ed9 cao v\u00e0 c\u00f3 th\u1ec3 l\u1eb7p l\u1ea1i nhi\u1ec1u l\u1ea7n m\u00e0 kh\u00f4ng bi\u1ebft ch\u00e1n. H\u1ecdc thu\u1eadt to\u00e1n t\u1ee9c l\u00e0 k\u1ebft h\u1ee3p s\u1ef1 s\u1eafp \u0111\u1eb7t kh\u00e9o l\u00e9o c\u1ee7a con ng\u01b0\u1eddi v\u1edbi t\u1ed1c \u0111\u1ed9 v\u00e0 s\u1ef1 b\u1ec1n b\u1ec9 c\u1ee7a m\u00e1y t\u00ednh. H\u1ecdc thu\u1eadt to\u00e1n kh\u00f4ng ph\u1ea3i l\u00e0 h\u1ecdc ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, kh\u00f4ng ph\u1ea3i l\u00e0 h\u1ecdc Pascal, h\u1ecdc C, h\u1ecdc Java. H\u1ecdc thu\u1eadt to\u00e1n t\u1ee9c l\u00e0 ngh\u0129 v\u1ec1 qu\u00e1 tr\u00ecnh chuy\u1ec3n \u0111\u1ed9ng, s\u1ef1 thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c th\u00e0nh ph\u1ea7n trong su\u1ed1t m\u1ed9t qu\u00e1 tr\u00ecnh, b\u1ea3n ch\u1ea5t c\u0169ng gi\u1ed1ng y nh\u01b0 h\u1ecdc V\u1eadt l\u00fd, Sinh h\u1ecdc, H\u00f3a h\u1ecdc v\u1eady. Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ch\u1ec9 l\u00e0 ph\u1ee5 tr\u1ee3. T\u00f4i vi\u1ebft v\u00f2ng l\u1eb7p \u1edf tr\u00ean kh\u00f4ng ph\u1ea3i theo m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh n\u00e0o c\u1ea3. B\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o ra m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh mang t\u00ean b\u1ea1n. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 l\u00e0m n\u00f3 ch\u1ea1y \u0111\u01b0\u1ee3c v\u00f2ng l\u1eb7p t\u00f4i vi\u1ebft \u1edf tr\u00ean.</p> <p>Quay l\u1ea1i v\u1ea5n \u0111\u1ec1, t\u1ea1i sao t\u00f4i l\u1ea1i n\u00f3i v\u00f2ng l\u1eb7p l\u00e0 m\u1ed9t trong nh\u1eefng kh\u00e1i ni\u1ec7m quan tr\u1ecdng nh\u1ea5t. C\u00f3 hai l\u00fd do. Th\u1ee9 nh\u1ea5t l\u00e0 t\u00f4i c\u1ea3m th\u1ea5y t\u01b0 duy c\u1ee7a Tin h\u1ecdc, c\u1ee7a l\u1eadp tr\u00ecnh, tinh t\u00fay nh\u1ea5t \u1edf nh\u1eefng thu\u1eadt to\u00e1n m\u00e0 ta ch\u1ec9 th\u1ea5y c\u00f3 m\u1ed9t qu\u00e1 tr\u00ecnh \u0111\u01b0\u1ee3c l\u1eb7p \u0111i l\u1eb7p l\u1ea1i m\u00e3i, v\u00e0 b\u1ea5t ng\u1edd cu\u1ed1i c\u00f9ng ch\u00fang ta l\u1ea1i \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 nh\u01b0ng mong mu\u1ed1n. Thu\u1eadt to\u00e1n Euclid t\u00ecm \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a hai s\u1ed1, thu\u1eadt to\u00e1n chia nh\u1ecb ph\u00e2n t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a m\u1ed9t h\u00e0m s\u1ed1 l\u1ed3i l\u00e0 m\u1ed9t s\u1ed1 v\u00ed d\u1ee5. Th\u1ef1c t\u1ebf th\u00ec kh\u00e1 kh\u00f3 t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n m\u00e0 kh\u00f4ng c\u00f3 v\u00f2ng l\u1eb7p. B\u1ea1n c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng s\u1ef1 v\u1eadn h\u00e0nh c\u1ee7a thu\u1eadt to\u00e1n nh\u01b0 m\u1ed9t v\u00e1n c\u1edd: b\u00e0n c\u1edd l\u00e0 m\u1ed9t th\u1ee9 c\u1ed1 \u0111\u1ecbnh v\u00e0 c\u00e1c qu\u00e2n c\u1edd s\u1ebd di chuy\u1ec3n, s\u1ed1 l\u01b0\u1ee3ng qu\u00e2n c\u1edd s\u1ebd \u00edt d\u1ea7n \u0111i theo th\u1eddi gian \u0111\u1ebfn khi \u0111\u1ea1t \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac l\u00e0 chi\u1ebfu b\u00ed. L\u00fd do th\u1ee9 hai, vi\u1ec7c l\u1eb7p m\u1ed9t qu\u00e1 tr\u00ecnh nh\u01b0 trong v\u00f2ng l\u1eb7p m\u1edf ra m\u1ed9t l\u1ed1i t\u01b0 duy m\u1edbi trong vi\u1ec7c gi\u1ea3i quy\u1ebft m\u1ed9t v\u1ea5n \u0111\u1ec1. Kh\u00f4ng nh\u1ea5t thi\u1ebft r\u1eb1ng b\u1ea1n ph\u1ea3i ngay t\u00ednh ra k\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n ngay l\u1eadp t\u1ee9c. B\u1ea1n th\u1eed t\u00ednh l\u1ea7n th\u1ee9 nh\u1ea5t, \u0111\u00e1p s\u1ed1 c\u00f3 th\u1ec3 sai, nh\u01b0ng l\u1eb7p l\u1ea1i d\u1ea7n th\u00ec k\u1ebft qu\u1ea3 s\u1ebd \u0111i g\u1ea7n h\u01a1n \u0111\u1ebfn \u0111\u00e1p \u00e1n. \u0110\u1ea7u \u00f3c b\u1ea1n s\u1ebd ph\u1ea3i l\u00e0m quen v\u1edbi nh\u1eefng th\u1ee9 tr\u1eebu t\u01b0\u1ee3ng c\u00f3 gi\u00e1 tr\u1ecb lu\u00f4n lu\u00f4n thay \u0111\u1ed5i (bi\u1ebfn s\u1ed1), v\u00e0 b\u1ea1n ph\u1ea3i nh\u1ea9m l\u1ea5y s\u1ef1 v\u1eadn \u0111\u1ed9ng c\u1ee7a ch\u00fang. C\u0169ng c\u00f9ng l\u00e0 m\u1ed9t d\u00f2ng l\u1ec7nh \u0111\u00f3 nh\u01b0ng v\u1ee1i nh\u1eefng gi\u00e1 tr\u1ecb kh\u00e1c nhau s\u1ebd t\u1ea1o ra nh\u1eefng k\u1ebft qu\u1ea3 kh\u00e1c nhau.</p> <p>L\u00fac m\u1edbi h\u1ecdc tin, t\u00f4i th\u1ea5y h\u1ee9ng th\u00fa v\u1edbi l\u1ed1i t\u01b0 duy m\u1edbi n\u00e0y. T\u00f4i th\u1ea5y n\u00f3 gi\u00fap t\u00f4i ti\u1ebfp c\u1eadn g\u1ea7n h\u01a1n v\u1edbi nh\u1eefng g\u00ec \u0111ang x\u1ea3y ra trong cu\u1ed9c s\u1ed1ng. N\u1ebfu nh\u01b0 l\u00fac tr\u01b0\u1edbc t\u00f4i ch\u1ec9 bi\u1ebft b\u1ea5m m\u00e1y t\u00ednh th\u00ec b\u00e2y gi\u1edd t\u00f4i \u0111\u00e3 bi\u1ebft quan t\u00e2m xem n\u00f3 th\u1ef1c hi\u1ec7n nh\u1eefng ph\u00e9p t\u00ednh th\u1ebf n\u00e0o. Hi\u1ec3u th\u00eam v\u1ec1 th\u1ebf gi\u1edbi xung quanh l\u00e0m t\u00f4i th\u1ea5y h\u1ea1nh ph\u00fac. M\u1ecdi m\u00f4n h\u1ecdc kh\u00e1c \u0111\u1ec1u c\u00f3 c\u00e1i hay c\u1ee7a n\u00f3 v\u00e0 \u0111\u1ec1u c\u00f3 th\u1ec3 d\u1eabn t\u00f4i \u0111\u1ebfn c\u00e1i c\u1ea3m gi\u00e1c \u0111\u00f3 nh\u01b0ng t\u00f4i \u0111\u1ebfn v\u1edbi Tin h\u1ecdc l\u00e0 m\u1ed9t c\u00e1i duy\u00ean. V\u00ec th\u1ebf khi b\u1ea3o t\u00f4i n\u00f3i ra l\u00fd do c\u1ea7n ph\u1ea3i h\u1ecdc Tin h\u1ecdc, t\u00f4i kh\u00f4ng ngh\u0129 ra l\u00fd do n\u00e0o. M\u1ed9t ng\u00e0y n\u1ecd t\u00f4i \u0103n \u0111\u01b0\u1ee3c m\u1ed9t m\u00f3n ngon, th\u1ebf l\u00e0 t\u00f4i l\u00e0 v\u1ec1 quy\u1ebft \u0111\u1ecbnh h\u1ecdc c\u00e1ch n\u1ea5u m\u00f3n \u0111\u00f3. Ch\u1ec9 v\u1eady th\u00f4i.</p> <p>\u0110\u1ecdc ti\u1ebfp ph\u1ea7n 2</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/","title":"T\u00f4i \u0111\u00e3 h\u1ecdc tin h\u1ecdc nh\u01b0 th\u1ebf n\u00e0o? Ph\u1ea7n 2: b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u00e2u","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n Xu\u00e2n Kh\u00e1nh</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd c\u1ed1 g\u1eafng tr\u1ea3 l\u1eddi ng\u1eafn g\u1ecdn v\u00e0 \u0111\u01a1n gi\u1ea3n nh\u1eefng c\u00e2u h\u1ecfi m\u00e0 m\u00ecnh ngh\u0129 r\u1eb1ng s\u1ebd c\u00f3 \u00edch \u0111\u1ed1i v\u1edbi c\u00e1c b\u1ea1n \u0111\u1eb7c bi\u1ec7t c\u00f3 \u0111am m\u00ea \u0111\u1ed1i v\u1edbi Tin h\u1ecdc, nh\u01b0ng m\u1edbi ti\u1ebfp x\u00fac v\u00e0 kh\u00f4ng bi\u1ebft ph\u1ea3i b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u00e2u. Tr\u1ecdng t\u00e2m c\u1ee7a m\u00ecnh s\u1ebd l\u00e0 vi\u1ec7c h\u1ecdc thu\u1eadt to\u00e1n \u0111\u1ec3 tham gia c\u00e1c k\u00ec thi qu\u1ed1c gia, tuy nhi\u00ean m\u00ecnh c\u0169ng s\u1ebd c\u1ed1 g\u1eafng g\u1ee3i m\u1edf th\u00eam nhi\u1ec1u h\u01b0\u1edbng kh\u00e1c trong ph\u1ea1m tr\u00f9 kinh nghi\u1ec7m c\u1ee7a m\u00ecnh.</p> <p>L\u01b0u \u00fd: Xu\u1ea5t x\u1ee9 c\u1ee7a m\u00ecnh l\u00e0 m\u1ed9t ng\u01b0\u1eddi h\u1ecdc Tin \u0111\u1ec3 thi qu\u1ed1c gia, sau \u0111\u00f3 chuy\u1ec3n d\u1ea7n sang nghi\u00ean c\u1ee9u khoa h\u1ecdc v\u1ec1 Machine Learning. V\u00ec th\u1ebf, nh\u1eefng g\u00ec \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi \u0111\u00e2y xu\u1ea5t ph\u00e1t t\u1eeb kinh nghi\u1ec7m c\u1ee7a ri\u00eang b\u1ea3n th\u00e2n m\u00ecnh, v\u00e0 ch\u1ec9 th\u1ec3 hi\u1ec7n g\u00f3c nh\u00ecn t\u1eeb con \u0111\u01b0\u1eddng m\u00ecnh \u0111\u00e3 \u0111i. M\u00ecnh khuy\u00ean c\u00e1c b\u1ea1n n\u00ean ch\u1eeba ra m\u1ed9t kho\u1ea3ng tr\u1ed1ng trong t\u00e2m h\u1ed3n \u0111\u1ec3 thu nh\u1eb7t c\u00e1c \u00fd ki\u1ebfn t\u1eeb c\u00e1c g\u00f3c nh\u00ecn kh\u00e1c.</p> <p>Sau \u0111\u00e2y l\u00e0 c\u00e1c c\u00e2u h\u1ecfi\u2026</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#tai-sao-phai-hoc-tin-hoc","title":"T\u1ea1i sao ph\u1ea3i h\u1ecdc Tin h\u1ecdc?","text":"<p>V\u1ec1 c\u01a1 duy\u00ean \u0111\u1ebfn v\u1edbi Tin h\u1ecdc c\u1ee7a m\u00ecnh, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft tr\u01b0\u1edbc. Hy v\u1ecdng c\u00e1c b\u1ea1n s\u1ebd t\u00ecm th\u1ea5y \u0111i\u1ec3m chung n\u00e0o \u0111\u00f3. M\u1ed9t \u0111i\u1ec1u m\u00ecnh mu\u1ed1n n\u00f3i th\u00eam l\u00e0 Tin h\u1ecdc hi\u1ec7n nay gi\u1ed1ng nh\u01b0 m\u1ed9t m\u00f4n To\u00e1n th\u1ee9 hai v\u1eady. N\u1ebfu sau cu\u1ed9c c\u00e1ch m\u1ea1ng c\u00f4ng nghi\u1ec7p, nh\u00e2n lo\u1ea1i b\u1eaft \u0111\u1ea7u g\u1eafn \u0111\u1ed9ng c\u01a1 v\u00e0o b\u1ea5t c\u1ee9 m\u1ecdi th\u1ee9 xung quanh, th\u00ec \u0111\u1ebfn cu\u1ed9c c\u00e1ch m\u1ea1ng m\u00e1y t\u00ednh hi\u1ec7n t\u1ea1i, con ng\u01b0\u1eddi b\u1eaft \u0111\u1ea7u d\u00f9ng m\u00e1y t\u00ednh v\u00e0o m\u1ecdi vi\u1ec7c c\u00f3 th\u1ec3. M\u1ed9t c\u00f4ng vi\u1ec7c trong th\u1ebf gi\u1edbi hi\u1ec7n \u0111\u1ea1i kh\u00f3 m\u00e0 c\u00f3 th\u1ec3 v\u1eadn h\u00e0nh hi\u1ec7u qu\u1ea3 m\u00e0 kh\u00f4ng c\u1ea7n d\u00f9ng \u0111\u1ebfn m\u00e1y t\u00ednh. V\u00ec th\u1ebf, m\u1ed9t con ng\u01b0\u1eddi trong th\u1ebf gi\u1edbi hi\u1ec7n \u0111\u1ea1i kh\u00f3 m\u00e0 c\u00f3 th\u1ec3 th\u00e0nh c\u00f4ng m\u00e0 kh\u00f4ng c\u00f3 k\u1ef9 n\u0103ng s\u1eed \bd\u1ee5ng c\u00f4ng c\u1ee5 n\u00e0y. B\u1ea1n b\u00e8 c\u1ee7a m\u00ecnh l\u00e0m nhi\u1ec1u ng\u00e0nh kh\u00e1c nhau, t\u1eeb to\u00e1n h\u1ecdc, ho\u00e1 h\u1ecdc, v\u1eadt l\u00fd, \u0111\u1ebfn ki\u1ec3m to\u00e1n. H\u1ecd \u0111\u1ec1u ph\u1ea3i ch\u00ed \u00edt ph\u1ea3i c\u00f3 k\u1ef9 n\u0103ng l\u1eadp tr\u00ecnh \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho c\u00f4ng vi\u1ec7c c\u1ee7a m\u00ecnh.</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#hoc-tin-hoc-nhu-the-nao-cho-ung","title":"H\u1ecdc Tin h\u1ecdc nh\u01b0 th\u1ebf n\u00e0o cho \u0111\u00fang?","text":"<p>R\u1ea5t kh\u00f3 \u0111\u1ec3 \u0111\u01b0a \u0111\u01b0\u1ee3c m\u1ed9t c\u00e2u tr\u1ea3 l\u1eddi tr\u1ecdn v\u1eb9n. Thay v\u00ec \u0111\u00f3 m\u00ecnh s\u1ebd n\u00f3i v\u1ec1 m\u1ed9t c\u00e1ch h\u1ecdc m\u00ecnh cho l\u00e0 ch\u01b0a \u0111\u00fang. \u0110\u00f3 l\u00e0 quan ni\u1ec7m h\u1ecdc Tin h\u1ecdc t\u1ee9c l\u00e0 h\u1ecdc m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh. C\u00e1c c\u00e1ch n\u00f3i d\u00e2n gian nh\u01b0 \u201ch\u1ecdc Pascal\u201d kh\u00f4ng th\u1ec3 hi\u1ec7n \u0111\u01b0\u1ee3c h\u1ebft tinh th\u1ea7n c\u1ee7a vi\u1ec7c h\u1ecdc Tin. \u0110\u1ed1i v\u1edbi ph\u1ea1m tr\u00f9 Tin h\u1ecdc c\u1ea5p 3, \u0111i\u1ec1u quan tr\u1ecdng nh\u1ea5t b\u1ea1n r\u00fat ra \u0111\u01b0\u1ee3c sau 3 n\u0103m h\u1ecdc ph\u1ea3i m\u1ed9t t\u01b0 duy thu\u1eadt to\u00e1n. B\u1ea1n c\u1ea7n l\u00e0m cho b\u1ed9 n\u00e3o quen thu\u1ed9c v\u1edbi l\u1ed1i suy ngh\u0129 theo c\u00e1c c\u1ea5u tr\u00fac \u0111i\u1ec1u ki\u1ec7n, c\u1ea5u tr\u00fac l\u1eb7p l\u1ea1i, c\u00e1ch chia ch\u01b0\u01a1ng tr\u00ecnh ra th\u00e0nh c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh nh\u1ecf h\u01a1n r\u1ed3i t\u1eadp trung gi\u1ea3i quy\u1ebft t\u1eebng ph\u1ea7n m\u1ed9t. V\u00ec \u0111a ph\u1ea7n c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean c\u00e1c y\u1ebfu t\u1ed1 c\u01a1 b\u1ea3n tr\u00ean, vi\u1ec7c b\u1ea1n th\u00e0nh th\u1ea1o v\u1ec1 t\u01b0 duy l\u1eadp tr\u00ecnh s\u1ebd gi\u00fap b\u1ea1n h\u1ecdc m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh r\u1ea5t nhanh. H\u00e3y l\u00e0m ch\u1ee7 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ch\u1ee9 \u0111\u1eebng b\u1ecb ph\u1ee5 thu\u1ed9c v\u00e0o ch\u00fang.</p> <p>M\u00ecnh kh\u00f4ng ph\u1ea3n \u0111\u1ed1i vi\u1ec7c th\u00e0nh th\u1ee5c m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh. Th\u1eadm ch\u00ed vi\u1ec7c th\u00e0nh th\u1ea1o m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh l\u00e0 quan tr\u1ecdng s\u1ed1ng c\u00f2n sau n\u00e0y khi b\u1ea1n mu\u1ed1n l\u00e0m ra nh\u1eefng s\u1ea3n ph\u1ea9m th\u1ef1c th\u1ee5. Nh\u01b0ng h\u00e3y \u0111\u1ec3 vi\u1ec7c \u0111\u00f3 sau khi b\u1ea1n \u0111\u00e3 c\u00f3 m\u1ed9t n\u1ec1n t\u1ea3ng t\u01b0 duy v\u1eefng ch\u1eafc.</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#nhung-van-phai-chon-mot-ngon-ngu-e-bat-au-hoc-chu","title":"Nh\u01b0ng v\u1eabn ph\u1ea3i ch\u1ecdn m\u1ed9t ng\u00f4n ng\u1eef \u0111\u1ec3 b\u1eaft \u0111\u1ea7u h\u1ecdc ch\u1ee9?","text":"<p>Ch\u00ednh x\u00e1c. C\u00e2u tr\u1ea3 l\u1eddi n\u00e0y m\u00ecnh xin chia ra d\u00e0nh cho hai \u0111\u1ed1i t\u01b0\u1ee3ng:</p> <ol> <li> <p>C\u00e1c b\u1ea1n luy\u1ec7n thi tin h\u1ecdc qu\u1ed1c gia: theo m\u00ecnh bi\u1ebft th\u00ec hai l\u1ef1a ch\u1ecdn ch\u00ednh d\u00e0nh cho c\u00e1c b\u1ea1n l\u00e0 Pascal v\u00e0 C++. Vi\u1ec7c \u0111\u01b0a C++ v\u00e0o danh s\u00e1ch l\u00e0 m\u1ed9t thay \u0111\u1ed5i l\u1edbn v\u00ec 6 n\u0103m tr\u01b0\u1edbc khi m\u00ecnh h\u1ecdc Tin, Pascal l\u00e0 s\u1ef1 l\u1ef1a ch\u1ecdn duy nh\u1ea5t cho c\u00e1c v\u00f2ng thi trong n\u01b0\u1edbc. Trong t\u01b0\u01a1ng lai m\u00ecnh d\u1ef1 \u0111o\u00e1n C++ s\u1ebd thay th\u1ebf h\u1eb3n cho Pascal. M\u00ecnh kh\u00f4ng r\u00e0nh v\u1ec1 Pascal b\u1eb1ng C++ n\u00ean s\u1ebd kh\u00f4ng so s\u00e1nh t\u00ednh n\u0103ng c\u1ee7a ch\u00fang chi ti\u1ebft. Tuy nhi\u00ean, C++ \u0111\u01b0a ra \u01b0u th\u1ebf r\u00f5 r\u1ec7t v\u1ec1 t\u1ed1c \u0111\u1ed9, bao g\u1ed3m c\u1ea3 t\u1ed1c \u0111\u1ed9 ch\u1ea1y c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh v\u00e0 t\u1ed1c \u0111\u1ed9 l\u1eadp tr\u00ecnh ra ch\u01b0\u01a1ng tr\u00ecnh \u0111\u00f3. N\u00f3i \u0111\u01a1n gi\u1ea3n l\u00e0 code C++ ch\u1ea1y nhanh v\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i ng\u1eafn g\u1ecdn (kh\u00f4ng qu\u00e1 ng\u1eafn g\u1ecdn \u0111\u1ebfn m\u1ee9c kh\u00f3 hi\u1ec3u). \u0110\u1eb7c bi\u1ec7t, khi h\u1ecdc C++ b\u1ea1n c\u00f3 th\u1ec3 tham gia \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u k\u1ef3 thi l\u1eadp tr\u00ecnh thu\u1eadt to\u00e1n tr\u1ef1c tuy\u1ebfn tr\u00ean m\u1ea1ng. \u0110\u00e2y l\u00e0 m\u1ea5u ch\u1ed1t trong vi\u1ec7c th\u00e0nh c\u00f4ng trong k\u1ef3 thi qu\u1ed1c gia. M\u1ed9t l\u1ee3i th\u1ebf kh\u00e1c khi h\u1ecdc C++ l\u00e0 n\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong c\u00f4ng nghi\u1ec7p. V\u00ec s\u1edbm mu\u1ed9n g\u00ec b\u1ea1n c\u0169ng ph\u1ea3i h\u1ecdc \u0111\u1ebfn n\u00f3 chi b\u1eb1ng h\u1ecdc s\u1edbm t\u1eeb \u0111\u1ea7u.</p> </li> <li> <p>C\u00e1c b\u1ea1n h\u1ecdc tin v\u1edbi m\u1ee5c \u0111\u00edch chung kh\u00e1c: ngo\u00e0i C++ ra, theo m\u00ecnh ng\u00f4n ng\u1eef Python l\u00e0 m\u1ed9t s\u1ef1 kh\u1edfi \u0111\u1ea7u tuy\u1ec7t v\u1eddi. C\u00fa ph\u00e1p c\u1ee7a Python c\u1ef1c k\u1ef3 \u0111\u01a1n gi\u1ea3n, gi\u1ed1ng nh\u01b0 l\u00e0 \u0111ang vi\u1ebft nh\u1eefng ph\u00e9p to\u00e1n trong s\u00e1ch gi\u00e1o khoa v\u1eady. D\u00f9 \u0111\u01a1n gi\u1ea3n, Python l\u1ea1i r\u1ea5t \u0111a n\u0103ng v\u00e0 \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 m\u1ea1nh m\u1ebd t\u1eeb c\u1ed9ng \u0111\u1ed3ng ng\u01b0\u1eddi s\u1eed d\u1ee5ng. Java l\u00e0 m\u1ed9t s\u1ef1 l\u1ef1a ch\u1ecdn t\u1ed1t cho nh\u1eefng b\u1ea1n mu\u1ed1n h\u1ecdc v\u1ec1 l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng m\u1ed9t c\u00e1ch b\u00e0i b\u1ea3n. D\u00f9 c\u1ea3 Python v\u00e0 C++ \u0111\u00e8u h\u1ed7 tr\u1ee3 l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng, Java theo m\u00ecnh l\u00e0 ng\u00f4n ng\u1eef bi\u1ec3u hi\u1ec7n \u0111i\u1ec1u n\u00e0y r\u00f5 r\u1ec7t nh\u1ea5t. B\u1ea1n kh\u00f4ng th\u1ec3 vi\u1ebft m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh ho\u00e0n ch\u1ec9nh trong Java m\u00e0 kh\u00f4ng \u0111\u1eb7t n\u00f3 v\u00e0o trong m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng (class), trong khi n\u1ebfu s\u1eed d\u1ee5ng Python v\u00e0 C++ ta c\u00f3 th\u1ec3 qu\u00ean b\u1eb5ng \u0111i kh\u00e1i ni\u1ec7m n\u00e0y. Ng\u00f4n ng\u1eef Java ch\u1eb7t ch\u1ebd v\u00e0 d\u1ea1y cho b\u1ea1n nh\u1eefng th\u00f3i quen t\u1ed1t v\u1ec1 c\u00e1ch thi\u1ebft k\u1ebf ch\u01b0\u01a1ng tr\u00ecnh.</p> </li> </ol>"},{"location":"algo/basic/hoc-tin-the-nao-2/#hoc-ngon-ngu-lap-trinh-nhu-the-nao","title":"H\u1ecdc ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh nh\u01b0 th\u1ebf n\u00e0o?","text":"<p>M\u00ecnh s\u1ebd gi\u1ea3 s\u1eed l\u00e0 c\u00e1c b\u1ea1n mu\u1ed1n h\u1ecdc C++. Theo m\u00ecnh th\u00ec vi\u1ec7c ch\u1ea1y ra nh\u00e0 s\u00e1ch v\u00e0 mua ngay m\u1ed9t cu\u1ed1n s\u00e1ch gi\u00e1o khoa d\u00e0y c\u1ed9m v\u1ec1 C++ kh\u00f4ng gi\u00fap \u00edch g\u00ec m\u1ea5y (v\u00ec m\u00ecnh \u0111\u00e3 t\u1eebng l\u00e0m \u0111i\u1ec1u n\u00e0y). H\u1ed3i m\u00ecnh m\u1edbi h\u1ecdc C++, m\u00ecnh th\u01b0\u1eddng l\u00ean c\u00e1c trang gi\u1ea3i b\u00e0i tr\u1ef1c tuy\u1ebfn ho\u1eb7c c\u00e1ch trang k\u1ef3 thi v\u00e0 xem code C++ c\u1ee7a c\u00e1c cao th\u1ee7 kh\u00e1c \u0111\u1ec3 h\u1ecdc theo c\u00e1ch code c\u1ee7a h\u1ecdc. \u0110i\u1ec1u n\u00e0y c\u00f3 hai l\u1ee3i \u00edch. Th\u1ee9 nh\u1ea5t, v\u00ec m\u00ecnh \u0111\u00e3 bi\u1ebft tr\u01b0\u1edbc l\u1eddi gi\u1ea3i, n\u00ean m\u00ecnh c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c t\u1eebng ph\u1ea7n ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd l\u00e0m nhi\u1ec7m v\u1ee5 g\u00ec, sau \u0111\u00f3 \u0111i sau v\u00e0o xem c\u1ee5 th\u1ec3 nhi\u1ec7m v\u1ee5 \u0111\u00f3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n th\u1ebf n\u00e0o. Th\u1ee9 hai, v\u00ec l\u00e0 cao th\u1ee7 n\u00ean code c\u1ee7a h\u1ecd s\u1ebd r\u1ea5t t\u1ed1i \u01b0u, c\u00f3 th\u1ec3 h\u1ecdc \u0111\u01b0\u1ee3c nhi\u1ec1u m\u1eb9o v\u1eb7t m\u00e0 s\u00e1ch gi\u00e1o khoa kh\u00f4ng d\u1ea1y. M\u1ed9t c\u00e1ch kh\u00e1c l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 google t\u1eeb kho\u00e1 \u201cC++ interactive tutorial\u201d \u0111\u1ec3 t\u00ecm ki\u1ebfm c\u00e1ch trang d\u1ea1y ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh m\u1ed9t c\u00e1ch t\u01b0\u01a1ng t\u00e1c. C\u00e1c trang n\u00e0y th\u01b0\u1eddng s\u1ebd \u0111\u01b0a b\u1ea1n \u0111i qua c\u00e1c kh\u00e1i ni\u1ec7m t\u1eeb d\u1ec5 \u0111\u1ebfn kh\u00f3. B\u1ea1n v\u1eeba h\u1ecdc v\u1eeba th\u1ef1c h\u00e0nh ngay \bn\u00ean s\u1ebd b\u1edbt nh\u00e0m ch\u00e1m h\u01a1n l\u00e0 ng\u1ed3i c\u00e0y s\u00e1ch. Tuy nhi\u00ean, v\u1ec1 l\u00e2u v\u1ec1 d\u00e0i b\u1ea1n v\u1eabn ph\u1ea3i \u0111\u1ecdc s\u00e1ch ho\u1eb7c t\u00e0i li\u1ec7u ch\u00ednh th\u1ed1ng \u0111\u1ec3 hi\u1ec3u bi\u1ebft c\u00e1c kh\u00e1i ni\u1ec7m c\u1ed1t l\u00f5i c\u1ee7a m\u1ed9t ng\u00f4n ng\u1eef. V\u00ed d\u1ee5 nh\u01b0 l\u00e0 trong C++ b\u1ea1n c\u00f3 th\u1ec3 truy\u1ec1n tham s\u1ed1 b\u1eb1ng c\u1ea3 reference ho\u1eb7c value, trong khi \u0111\u00f3 Java ch\u1ec9 cho ph\u00e9p truy\u1ec1n tham s\u1ed1 b\u1eb1ng value m\u00e0 th\u00f4i. Nh\u1eefng \u0111i\u1ec1u \u201cbehind-the-scenes\u201d nh\u01b0 v\u1eady kh\u00f4ng th\u1ec3 h\u1ecdc \u0111\u01b0\u1ee3c n\u1ebfu ch\u1ec9 nh\u00ecn v\u00e0o code c\u1ee7a ng\u01b0\u1eddi kh\u00e1c.</p> <p>StackOverflow \u2013 The definitive C++ book guide and list</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#nen-dung-cong-cu-gi-e-lap-trinh","title":"N\u00ean d\u00f9ng c\u00f4ng c\u1ee5 g\u00ec \u0111\u1ec3 l\u1eadp tr\u00ecnh?","text":"<p>Tr\u00ean Windows, Free Pascal l\u00e0 s\u1ef1 l\u1ef1a ch\u1ecdn t\u1ed1t cho Pascal. Ngo\u00e0i ra c\u00f2n c\u00f3 m\u1ed9t s\u1ed1 c\u00f4ng c\u1ee5 kh\u00e1c nh\u01b0 Lazarus, Codeblocks, Delphi,... \u0110\u1ed1i C++ th\u00ec h\u1ed3i tr\u01b0\u1edbc m\u00ecnh hay d\u00f9ng nh\u1ea5t l\u00e0 Dev-C++.</p> <p>Tuy nhi\u00ean, m\u00ecnh khuy\u00ean l\u00e0 c\u00e1c b\u1ea1n n\u00ean t\u1eeb b\u1ecf Windows v\u00e0 chuy\u1ec3n sang m\u1ed9t h\u1ec7 \u0111i\u1ec1u kh\u00e1c d\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng Unix nh\u01b0 l\u00e0 Ubuntu. Hi\u1ec7n t\u1ea1i th\u00ec m\u00e0n h\u00ecnh l\u1eadp tr\u00ecnh c\u1ee7a m\u00ecnh tr\u00f4ng gi\u1ed1ng nh\u01b0 th\u1ebf n\u00e0y:</p> <p></p> <p>\u1ede c\u1eeda s\u1ed5 tr\u00e1i m\u00ecnh s\u1eed d\u1ee5ng vim, ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\u00e0 m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh so\u1ea1n th\u1ea3o v\u0103n b\u1ea3n (text editor) c\u1ee7a Ubuntu. \u1ede c\u1eeda s\u1ed5 ph\u1ea3i m\u00ecnh s\u1eed d\u1ee5ng terminal, n\u00f3i n\u00f4m na l\u00e0 n\u01a1i b\u1ea1n c\u00f3 th\u1ec3 \u0111i\u1ec1u khi\u1ec3n m\u00e1y t\u00ednh b\u1eb1ng c\u00e1c c\u00e2u l\u1ec7nh thay v\u00ec d\u00f9ng chu\u1ed9t (gi\u1ed1ng nh\u01b0 l\u00e0 MS-DOS th\u1eddi xa x\u01b0a). L\u01b0u \u00fd l\u00e0 hai c\u00f4ng c\u1ee5 n\u00e0y \u0111\u1ec1u c\u00f3 s\u1eb5n trong Ubuntu, b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i c\u00e0i \u0111\u1eb7t g\u00ec c\u1ea3. Trong h\u00ecnh, m\u00ecnh c\u00f3 c\u00e0i th\u00eam m\u1ed9t s\u1ed1 Plugins cho vim \u0111\u1ec3 th\u00eam m\u00e0u m\u00e8, m\u00e0n h\u00ecnh \u0111en, hi\u1ec3n th\u1ecb d\u00f2ng c\u1ed9t (c\u1ea3m \u01a1n b\u1ea1n m\u00ecnh l\u00e0 RR!). M\u00ecnh c\u0169ng c\u00e0i th\u00eam theme Macbook cho m\u00e1y n\u00ean m\u00e0n h\u00ecnh tr\u00f4ng gi\u1ed1ng MacOS m\u1eb7c d\u00f9 th\u1eadt ra n\u00f3 v\u1eabn l\u00e0 Ubuntu.</p> <p>Khi l\u1eadp tr\u00ecnh, m\u00ecnh vi\u1ebft code v\u00e0o vim r\u1ed3i s\u1eed d\u1ee5ng c\u00e2u l\u1ec7nh n\u00e0y \u0111\u1ec3 bi\u00ean d\u1ecbch (compile) ch\u01b0\u01a1ng tr\u00ecnh.</p> <pre><code>g++ test.cpp -o a -O2 -Wall\n</code></pre> <p>L\u1ef1a ch\u1ecdn \u201c-o a\u201d s\u1ebd bi\u00ean d\u1ecbch file test.cpp th\u00e0nh m\u1ed9t file excutable t\u01b0\u01a1ng t\u1ef1 nh\u01b0 file .exe c\u1ee7a Windows c\u00f3 t\u00ean l\u00e0 a trong c\u00f9ng th\u01b0 m\u1ee5c c\u1ee7a file test.cpp. V\u00ec th\u1ebf, mu\u1ed1n ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh, m\u00ecnh ch\u1ec9 c\u1ea7n ch\u1ea1y file a b\u1eb1ng c\u00e2u l\u1ec7nh sau:</p> <pre><code>./a\n</code></pre> <p>N\u1ebfu b\u1ea1n kh\u00f4ng th\u00edch vim, c\u00f3 th\u1ec3 x\u00e0i gedit ho\u1eb7c l\u00e0 emacs ho\u1eb7c b\u1ea5t c\u1ee9 tr\u00ecnh so\u1ea1n th\u1ea3o v\u0103n b\u1ea3n n\u00e0o kh\u00e1c \u0111\u1ec1u \u0111\u01b0\u1ee3c. B\u1ed9 \u0111\u00f4i (text editor + terminal) r\u1ea5t \u0111a n\u0103ng v\u00ec b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng n\u00f3 cho nhi\u1ec1u ng\u00f4n ng\u1eef kh\u00e1c nhau. H\u01a1n n\u1eefa, trong m\u1ed9t s\u1ea3n ph\u1ea9m l\u1eadp tr\u00ecnh th\u1eadt s\u1ef1, b\u1ea1n kh\u00f4ng ph\u1ea3i compile m\u1ed9t l\u00fac m\u1ed9t file n\u1eefa m\u00e0 c\u00f3 th\u1ec3 l\u00e0 c\u1ea3 ng\u00e0n files. L\u00fac \u0111\u00f3, b\u1ea1n s\u1ebd c\u1ea7n \u0111\u1ebfn c\u00e1c c\u00f4ng c\u1ee5 ch\u1ea1y t\u1eeb terminal. Cho n\u00ean, l\u00e0m quen v\u1edbi terminal s\u1edbm l\u00e0 m\u1ed9t l\u1ee3i th\u1ebf. Ngo\u00e0i ra, trong t\u01b0\u01a1ng lai g\u1ea7n, n\u1ebfu thi tin h\u1ecdc qu\u1ed1c t\u1ebf (IOI), c\u00e1c b\u1ea1n s\u1ebd thi tr\u00ean h\u1ec7 \u0111i\u1ec1u h\u00e0nh Ubuntu.</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#tim-thay-noi-au","title":"T\u00ecm th\u1ea7y n\u01a1i \u0111\u00e2u?","text":"<p>Mu\u1ed1n h\u1ecdc gi\u1ecfi c\u1ea7n ph\u1ea3i c\u00f3 th\u1ea7y gi\u1ecfi. Cho d\u00f9 c\u00f3 t\u1ed1 ch\u1ea5t \u0111\u1ebfn m\u1ea5y m\u00e0 kh\u00f4ng bi\u1ebft c\u00e1ch khai ph\u00e1 th\u00ec c\u0169ng s\u1ebd kh\u00f4ng th\u1ec3 \u0111\u1ea1t \u0111\u1ec9nh cao. N\u1ebfu ai \u0111\u00f3 b\u1ea3o b\u1ea1n r\u1eb1ng ch\u1ec9 c\u00f3 t\u1ef1 h\u1ecdc m\u1edbi gi\u1ecfi \u0111\u01b0\u1ee3c, th\u00ec ng\u01b0\u1eddi \u0111\u00f3 n\u00f3i \u0111\u00fang. Nh\u01b0ng n\u1ebfu b\u1ea1n ch\u1ec9 ng\u1ed3i trong gi\u1ebfng nh\u00e0 t\u1ef1 m\u00e0y m\u00f2 t\u1ea5t c\u1ea3 th\u00ec theo m\u00ecnh \u0111\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 t\u1ef1 h\u1ecdc, m\u00e0 ch\u1ec9 l\u00e0 h\u1ecdc m\u1ed9t m\u00ecnh. T\u1ef1 h\u1ecdc bao g\u1ed3m c\u1ea3 vi\u1ec7c t\u1ef1 t\u00ecm th\u1ea7y \u0111\u1ec3 m\u00e0 h\u1ecdc.</p> <p>Khi m\u00ecnh \u0111\u1eb7t ch\u00e2n v\u00e0o tr\u01b0\u1eddng Ph\u1ed5 Th\u00f4ng N\u0103ng Khi\u1ebfu, n\u01a1i c\u00f3 \u0111\u1ed9i tuy\u1ec3n tin thu\u1ed9c h\u00e0ng top c\u1ee7a \u0111\u1ea5t n\u01b0\u1edbc th\u1eddi b\u1ea5y gi\u1edd, m\u00ecnh c\u1ee9 ng\u1ee1 s\u1ebd \u0111\u01b0\u1ee3c d\u1ea1y d\u1ed7 b\u1edfi nh\u1eefng s\u01b0 t\u1ed5 tu luy\u1ec7n l\u00e2u n\u0103m, l\u00e0 nh\u1eefng gi\u00e1o s\u01b0 ti\u1ebfn s\u0129 \u0111\u1ea7u t\u00f3c b\u1ea1c ph\u01a1. Tuy nhi\u00ean, N\u0103ng Khi\u1ebfu x\u00e2y d\u1ef1ng cho m\u00ecnh m\u1ed9t h\u00ecnh t\u01b0\u1ee3ng kh\u00e1c v\u1ec1 ng\u01b0\u1eddi th\u1ea7y. Ng\u01b0\u1eddi \u201cth\u1ea7y\u201d c\u1ee7a m\u00ecnh \u1edf N\u0103ng Khi\u1ebfu ngo\u00e0i th\u1ea7y ch\u1ee7 nhi\u1ec7m, c\u00f2n l\u00e0 c\u00e1c anh kh\u00f3a tr\u00ean \u0111i tr\u01b0\u1edbc v\u00e0 c\u00e1c b\u1ea1n trong c\u00f9ng \u0111\u1ed9i tuy\u1ec3n. Ngo\u00e0i ra, m\u00ecnh c\u0169ng ch\u1ee7 \u0111\u1ed9ng l\u00e0m quen c\u00e1c anh h\u1ecdc gi\u1ecfi trong c\u1ea3 n\u01b0\u1edbc th\u1eddi \u1ea5y nh\u01b0 Kh\u00fac Anh Tu\u1ea5n ho\u1eb7c Ph\u1ea1m Quang V\u0169 \u0111\u1ec3 h\u1ecfi b\u00e0i. Khi h\u1ecfi m\u00ecnh c\u0169ng th\u1ea5y h\u01a1i ng\u1ea1i nh\u01b0ng m\u00e0 th\u00f4ng qua \u0111\u00f3 m\u00ecnh h\u1ecdc \u0111\u01b0\u1ee3c c\u00e1ch suy ngh\u0129 r\u1ea5t hay c\u1ee7a c\u00e1c anh. C\u00f3 nh\u1eefng b\u00e0i t\u1eadp \u0111\u00f2i h\u1ecfi nh\u1eefng k\u1ef9 thu\u1eadt m\u00e0 m\u00ecnh th\u1eadt s\u1ef1 kh\u00f4ng th\u1ec3 n\u00e0o bi\u1ebft \u0111\u01b0\u1ee3c n\u1ebfu ch\u1ec9 ng\u1ed3i h\u1ecdc trong gi\u1ebfng nh\u00e0. Sau n\u00e0y, di\u1ec5n \u0111\u00e0n VNOI \u0111\u01b0\u1ee3c c\u00e1c \u0111\u00e0n anh l\u1eadp ra c\u0169ng v\u00ec m\u1ee5c \u0111\u00edch \u0111\u1ec3 m\u1ecdi ng\u01b0\u1eddi t\u00ecm \u0111\u01b0\u1ee3c nh\u1eefng ng\u01b0\u1eddi th\u1ea7y nh\u01b0 v\u1eady.</p> <p>Tuy nhi\u00ean, m\u00ecnh khuy\u1ebfn c\u00e1o c\u00e1c b\u1ea1n kh\u00f4ng n\u00ean qu\u00e1 l\u1ea1m d\u1ee5ng c\u00e1c \u201cth\u1ea7y\u201d, kh\u00f4ng n\u00ean coi c\u00e1c th\u1ea7y nh\u01b0 l\u00e0 m\u1ed9t c\u1ed7 m\u00e1y tr\u1ea3 l\u1eddi. C\u00e1c \u201cth\u1ea7y\u201d th\u01b0\u1eddng s\u1ebd t\u1eadn t\u00ecnh \u0111\u1ee1 c\u00e1c b\u1ea1n h\u01a1n n\u1ebfu c\u00e1c b\u1ea1n th\u1ec3 hi\u1ec7n \u0111\u01b0\u1ee3c m\u00ecnh l\u00e0 ng\u01b0\u1eddi ch\u1ecbu kh\u00f3 t\u01b0 duy v\u00e0 t\u00ecm t\u00f2i h\u01a1n l\u00e0 ch\u1ec9 bi\u1ebft v\u00f2i v\u0129nh c\u00e2u tr\u1ea3 l\u1eddi. C\u00e1c b\u1ea1n coi phim ch\u1eafc c\u0169ng bi\u1ebft l\u00e0 cao nh\u00e2n ch\u1ec9 truy\u1ec1n b\u00ed k\u00edp cho k\u1ebb c\u00f3 t\u1ed1 ch\u1ea5t. M\u1ed9t m\u1eb9o nh\u1ecf l\u00e0 nh\u1edb l\u1ecbch s\u1ef1 n\u00f3i \u201cc\u1ea3m \u01a1n\u201d sau m\u1ed7i l\u1ea7n h\u1ecfi.</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#tim-bai-noi-au","title":"T\u00ecm b\u00e0i n\u01a1i \u0111\u00e2u?","text":"<p>Khi h\u1ecdc Tin h\u1ecdc b\u1ea1n c\u00f3 m\u1ed9t l\u1ee3i th\u1ebf \u0111\u00f3 l\u00e0 b\u00e0i t\u1eadp d\u01b0\u1eddng nh\u01b0 l\u00e0 v\u00f4 bi\u00ean (SPOJ, Timus, POJ). Nh\u01b0ng b\u1ea1n kh\u00f4ng c\u1ea7n thi\u1ebft l\u00e0m h\u1ebft t\u1ea5t c\u1ea3 ch\u00fang \u0111\u1ec3 gi\u1ecfi. V\u00ec th\u1ebf ta thay v\u00ec h\u1ecfi t\u00ecm b\u00e0i \u1edf \u0111\u00e2u, th\u00ec n\u00ean h\u1ecfi:</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#nen-lam-nhung-bai-gi","title":"N\u00ean l\u00e0m nh\u1eefng b\u00e0i g\u00ec?","text":"<p>M\u00ecnh g\u1ee3i \u00fd m\u1ed9t s\u1ed1 c\u00e1ch l\u00e0m b\u00e0i c\u01a1 b\u1ea3n nh\u01b0 sau:</p> <ol> <li> <p>L\u00e0m h\u1ebft nh\u1eefng b\u00e0i c\u01a1 b\u1ea3n: v\u00e0o trang SPOJ ho\u1eb7c VNOJ, m\u1edf list \u0111\u1ec1 b\u00e0i ra. \u1ede ti\u00eau \u0111\u1ec1 c\u1ee7a c\u1ed9t \u201cUsers\u201d khi b\u1ea1n b\u1ea5m v\u00e0o \u0111\u00f3 m\u1ed9t l\u1ea7n, th\u00ec c\u00e1c b\u00e0i t\u1eadp s\u1ebd \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n s\u1ed1 l\u01b0\u1ee3ng ng\u01b0\u1eddi l\u00e0m \u0111\u01b0\u1ee3c. B\u00e0i \u1edf nh\u1eefng trang \u0111\u1ea7u ti\u00eau l\u00e0 nh\u1eefng b\u00e0i c\u01a1 b\u1ea3n nh\u1ea5t, h\u1ea7u nh\u01b0 ai c\u0169ng l\u00e0m \u0111\u01b0\u1ee3c. B\u1ea1n n\u00ean l\u00e0m kho\u1ea3ng v\u00e0i trang \u0111\u1ea7u \u0111\u1ec3 luy\u1ec7n c\u00e1c k\u1ef9 thu\u1eadt c\u01a1 b\u1ea3n.</p> </li> <li> <p>L\u00e0m theo ch\u1ee7 \u0111\u1ec1: khi b\u1ea1n \u0111ang l\u00e0m nh\u1eefng b\u00e0i c\u01a1 b\u1ea3n s\u1ebd g\u1eb7p nh\u1eefng b\u00e0i b\u1ea1n ngh\u0129 m\u00e3i v\u1eabn kh\u00f4ng ra. Kh\u00f4ng ph\u1ea3i l\u00e0 b\u1ea1n k\u00e9m th\u00f4ng minh g\u00ec m\u00e0 v\u00ec nh\u1eefng thu\u1eadt to\u00e1n \u0111\u00f3 qu\u00e1 xa l\u1ea1 v\u1edbi b\u1ea1n. V\u1eady th\u00ec b\u1ea1n n\u00ean t\u00ecm t\u00f2i l\u00e0m nh\u1eefng d\u1ea1ng b\u00e0i t\u01b0\u01a1ng t\u1ef1 \u0111\u1ec3 bi\u1ebft c\u00e1ch \u00e1p d\u1ee5ng c\u00e1c thu\u1eadt to\u00e1n m\u1edbi h\u1ecdc. Sau khi google m\u00ecnh t\u00ecm th\u1ea5y trang n\u00e0y Problem classifier c\u00f3 l\u1ebd kh\u00e1 h\u1eefu d\u1ee5ng.</p> <p>M\u00ecnh mu\u1ed1n d\u1eebng \u1edf \u0111\u00e2y m\u1ed9t ch\u00fat \u0111\u1ec3 l\u01b0u \u00fd l\u00e0 c\u00e1ch 1 v\u00e0 c\u00e1ch 2 ph\u1ea3i n\u00ean \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng b\u1ed5 tr\u1ee3 cho nhau b\u1edfi v\u00ec m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p ch\u00fa tr\u1ecdng v\u00e0o m\u1edf r\u1ed9ng ki\u1ebfn th\u1ee9c theo chi\u1ec1u r\u1ed9ng, c\u00f2n ph\u01b0\u01a1ng ph\u00e1p c\u00f2n l\u1ea1i m\u1edf r\u1ed9ng theo chi\u1ec1u s\u00e2u. Ch\u1ec9 l\u00e0m theo ki\u1ec3u g\u1eb7p b\u00e0i n\u00e0o l\u00e0m b\u00e0i \u0111\u00f3 th\u00ec kh\u00f3 th\u1ec3 \u0111\u00fac k\u1ebft \u0111\u01b0\u1ee3c nh\u1eefng kinh nghi\u1ec7m s\u00e2u s\u1eafc. Ng\u01b0\u1ee3c l\u1ea1i, l\u00e0m theo ch\u1ee7 \u0111\u1ec1 cho c\u00e1c b\u1ea1n th\u1eddi gian \u0111\u1ec3 t\u1eadp trung suy ngh\u0129 v\u1ec1 m\u1ed9t v\u1ea5n \u0111\u1ec1, nh\u01b0ng c\u1ea9n th\u1eadn tr\u00e1nh \u0111am m\u00ea qu\u00e1 m\u1ed9t d\u1ea1ng b\u00e0i m\u00e0 tr\u1edf n\u00ean kh\u00f4ng tho\u1ea3i m\u00e1i khi l\u00e0m nh\u1eefng d\u1ea1ng b\u00e0i kh\u00e1c.</p> </li> <li> <p>Tham gia c\u00e1c k\u00ec thi tr\u1ef1c tuy\u1ebfn: n\u1ebfu hai ph\u01b0\u01a1ng ph\u00e1p tr\u00ean s\u1ebd cho b\u1ea1n n\u1ec1n t\u1ea3ng t\u1ed1t th\u00ec ph\u01b0\u01a1ng ph\u00e1p n\u00e0y s\u1ebd \u0111\u01b0a b\u1ea1n \u0111\u1ebfn \u0111\u1ec9nh cao. V\u00ec m\u1ee5c \u0111\u00edch cu\u1ed1i c\u1ee7a b\u1ea1n l\u00e0 tham gia c\u00e1c k\u00ec thi qu\u1ed1c gia qu\u1ed1c t\u1ebf, n\u00ean vi\u1ec7c ng\u1ed3i c\u1ea3 ng\u00e0y tr\u1eddi \u0111\u1ec3 l\u00e0m m\u1ed9t b\u00e0i t\u1eadp tr\u00ean c\u00e1c trang Online Judge m\u1ed9t l\u00fac n\u00e0o \u0111\u00f3 s\u1ebd tr\u1edf th\u00e0nh m\u1ed9t th\u00f3i quen v\u00f4 c\u00f9ng nguy h\u1ea1i. L\u00fac \u0111\u00f3, b\u1ea1n n\u00ean chuy\u1ec3n qua l\u00e0m b\u00e0i theo th\u1eddi gian th\u1ef1c. C\u00f3 c\u1ea3m nh\u1eadn v\u1ec1 \u00e1p l\u1ef1c th\u1eddi gian, \u0111\u1ea7u \u00f3c b\u1ea1n s\u1ebd tr\u1edf n\u00ean nhanh nh\u1eb9n h\u01a1n nhi\u1ec1u. H\u01a1n n\u1eefa, khi th\u1eadt s\u1ef1 thi \u0111\u1ea5u v\u1edbi nh\u1eefng con ng\u01b0\u1eddi kh\u00e1c, b\u1ea1n c\u0169ng s\u1ebd c\u00f3 c\u1ea3m x\u00fac luy\u1ec7n t\u1eadp h\u01a1n l\u00e0 ch\u1ec9 ng\u1ed3i c\u00e0y Online Judge m\u1ed9t m\u00ecnh. Hi\u1ec7n nay, c\u00e1c k\u00ec thi tr\u1ef1c tuy\u1ebfn m\u1ecdc l\u00ean nh\u01b0 n\u1ea5m (Codeforces, TopCoder, Hackerrank, USACO, COCI). C\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 l\u1ea5y b\u00e0i t\u1eeb c\u00e1c cu\u1ed9c thi kh\u00e1c v\u00e0o t\u1ea1o ra cu\u1ed9c thi c\u1ee7a ri\u00eang r\u1ed3i m\u1eddi b\u1ea1n b\u00e8 tham gia (HUSTOJ).</p> </li> </ol>"},{"location":"algo/basic/hoc-tin-the-nao-2/#lam-sao-e-lam-bai-it-ma-van-gioi","title":"L\u00e0m sao \u0111\u1ec3 l\u00e0m b\u00e0i \u00edt m\u00e0 v\u1eabn gi\u1ecfi?","text":"<p>Kh\u00f4ng c\u00f3 c\u00e1ch n\u00e0o c\u1ea3. Ph\u1ea3i l\u00e0m b\u00e0i nhi\u1ec1u m\u1edbi gi\u1ecfi \u0111\u01b0\u1ee3c. Nghi\u00ean c\u1ee9u v\u1ec1 c\u00e1c ki\u1ec7n t\u01b0\u1edbng \u1edf nhi\u1ec1u b\u1ed9 m\u00f4n cho th\u1ea5y h\u1ecd \u0111\u1ec1u luy\u1ec7n t\u1eadp \u00edt nh\u1ea5t 10 ng\u00e0n gi\u1edd \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c tr\u00ecnh \u0111\u1ed9 \u0111\u00f3.</p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#lam-sao-e-khong-can-lam-qua-nhieu-bai-ma-van-gioi","title":"L\u00e0m sao \u0111\u1ec3 kh\u00f4ng c\u1ea7n l\u00e0m qu\u00e1 nhi\u1ec1u b\u00e0i m\u00e0 v\u1eabn gi\u1ecfi?","text":"<p>\u0110i\u1ec1u n\u00e0y th\u00ec c\u00f3 th\u1ec3. Th\u1eadm ch\u00ed m\u00ecnh c\u1ea3m th\u1ea5y l\u00e0m qu\u00e1 nhi\u1ec1u s\u1ebd d\u1eabn \u0111\u1ebfn ho\u1eb7c l\u00e0 qu\u00e1 t\u1ea3i ho\u1eb7c l\u00e0 s\u1ebd tr\u1edf m\u1ed9t c\u1ed7 m\u00e1y gi\u1ea3i b\u00e0i, gi\u1ea3i b\u00e0i xong th\u00ec b\u1ecf qua ngay m\u00e0 kh\u00f4ng suy ngh\u0129 th\u00eam g\u00ec n\u1eefa. N\u00ean nh\u1edb l\u00e0 th\u1eddi gian luy\u1ec7n t\u1eadp c\u1ee7a c\u00e1c b\u1ea1n c\u00f3 h\u1ea1n, n\u00ean c\u00e1c b\u1ea1n ph\u1ea3i khai th\u00e1c h\u1ebft gi\u00e1 tr\u1ecb c\u1ee7a t\u1eebng b\u00e0i t\u1eadp b\u1ea1n gi\u1ea3i. Gi\u1ea3i m\u1ed9t b\u00e0i t\u1eadp xong r\u1ed3i qu\u0103ng sang m\u1ed9t b\u00ean l\u00e0 v\u00f4 c\u00f9ng ph\u00ed ph\u1ea1m. Vi\u1ec7c c\u00e1c b\u1ea1n gi\u1ea3i \u0111\u01b0\u1ee3c nhi\u1ec1u b\u00e0i tr\u01b0\u1edbc k\u00ec thi ch\u1eb3ng c\u00f3 ngh\u0129a l\u00fd g\u00ec n\u1ebfu b\u1ea1n kh\u00f4ng r\u00fat ra \u0111\u01b0\u1ee3c nhi\u1ec1u gi\u00e1 tr\u1ecb t\u1eeb ch\u00fang.</p> <p>Suy cho c\u00f9ng, th\u00ec nguy\u00ean l\u00fd \u201cmu\u1ed1n gi\u1ecfi ph\u1ea3i l\u00e0m nhi\u1ec1u b\u00e0i t\u1eadp\u201d v\u1eabn kh\u00f4ng \u0111\u1ed5i. Tuy nhi\u00ean, thay v\u00ec l\u00e0m c\u00e1c b\u00e0i t\u1eadp m\u1ed9t c\u00e1ch tu\u1ea7n t\u1ef1, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 c\u00f9ng m\u1ed9t l\u00fac gi\u1ea3i nhi\u1ec1u b\u00e0i t\u1eadp b\u1eb1ng c\u00e1ch suy ngh\u0129 v\u1ec1 nh\u1eefng bi\u1ebfn th\u1ec3 c\u1ee7a m\u1ed9t b\u00e0i t\u1eadp v\u1eeba gi\u1ea3i \u0111\u01b0\u1ee3c. H\u00e3y xem xem trong b\u00e0i to\u00e1n c\u00f3 nh\u1eefng \u0111i\u1ec1u ki\u1ec7n n\u00e0o th\u1ec3 thay \u0111\u1ed5i \u0111\u01b0\u1ee3c, c\u00f3 th\u1ec3 t\u1ed5ng qu\u00e1t h\u00f3a l\u00ean \u0111\u01b0\u1ee3c. B\u00e0i to\u00e1n n\u00e0y c\u00f3 t\u00ednh ch\u1ea5t g\u00ec \u0111\u1eb7c bi\u1ec7t m\u00e0 thu\u1eadt to\u00e1n c\u1ee7a b\u1ea1n l\u1ea1i gi\u1ea3i \u0111\u01b0\u1ee3c? T\u00ednh ch\u1ea5t \u0111\u00f3 c\u00f3 th\u1ec3 xu\u1ea5t hi\u1ec7n d\u01b0\u1edbi d\u1ea1ng kh\u00e1c hay kh\u00f4ng? Ch\u1ec9 c\u1ea7n b\u1ecf m\u1ed9t \u00edt th\u1eddi gian \u0111\u1eb7t ra nh\u1eefng c\u00e2u h\u1ecfi d\u1ea1ng n\u00e0y v\u00e0 \u0111\u00e0o s\u00e2u kh\u00e1m ph\u00e1, gi\u00e1 tr\u1ecb thu \u0111\u01b0\u1ee3c khi gi\u1ea3i m\u1ed9t b\u00e0i t\u1eadp s\u1ebd \u0111\u01b0\u1ee3c nh\u00e2n l\u00ean nhi\u1ec1u l\u1ea7n. Gi\u1ea3i m\u1ed9t b\u00e0i m\u00e0 nh\u01b0 gi\u1ea3i 10 b\u00e0i l\u00e0 nh\u01b0 v\u1eady.</p> <p>M\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n l\u00e0 trong l\u00fac l\u00e0m b\u00e0i t\u1eadp, m\u00ecnh nh\u1eadn ra r\u1eb1ng thu\u1eadt to\u00e1n chia nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 chuy\u00ean tr\u1ecb nh\u1eefng b\u00e0i t\u1eadp \u0111\u00f2i h\u1ecfi \u201cc\u1ef1c ti\u1ec3u h\u00f3a m\u1ed9t gi\u00e1 tr\u1ecb c\u1ef1c \u0111\u1ea1i\u201d (ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i, v\u00ed d\u1ee5 nh\u01b0 l\u00e0 t\u00ecm t\u1eadp h\u1ee3p sao cho s\u1ed1 l\u1edbn nh\u1ea5t trong t\u1eadp nh\u1ecf nh\u1ea5t trong t\u1ea5t c\u1ea3 c\u00e1c c\u00e1ch ch\u1ecdn). Trong m\u1ed9t v\u00ed d\u1ee5 kh\u00e1c, v\u1edbi b\u00e0i QBDIVSEQ, nh\u1eadn x\u00e9t m\u1ea5u ch\u1ed1t l\u00e0 \u201c\u0111\u1ed9 d\u00e0i d\u00e3y con t\u0103ng d\u00e0i nh\u1ea5t l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u00edt nh\u1ea5t c\u00e1c d\u00e3y con gi\u1ea3m m\u00e0 ta c\u00f3 th\u1ec3 ph\u00e2n chia d\u00e3y ban \u0111\u1ea7u th\u00e0nh\u201d. Khi ch\u1ee9ng minh nh\u1eadn x\u00e9t n\u00e0y, m\u00ecnh nh\u1eadn th\u1ea5y m\u1ed9t t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t c\u1ee7a m\u1ed1i quan h\u1ec7 \u201cl\u1edbn b\u00e9\u201d gi\u00fap cho ch\u1ee9ng minh tr\u1edf n\u00ean kh\u1ea3 thi. \u0110\u00f3 l\u00e0 t\u00ednh ch\u1ea5t b\u1eafc c\u1ea7u: \\(a &lt; b, b &lt; c\\) suy ra \\(a &lt; c\\). T\u1eeb \u0111\u00f3, m\u00ecnh suy ngh\u0129 ra r\u1eb1ng thay v\u00ec s\u1eed d\u1ee5ng m\u1ed1i quan h\u1ec7 \u201cl\u1edbn b\u00e9\u201d th\u00f4ng th\u01b0\u1eddng khi so s\u00e1nh c\u00e1c s\u1ed1, ta c\u00f3 ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng nh\u1eadn x\u00e9t c\u1ee7a b\u00e0i n\u00e0y cho m\u1ed9t m\u1ed1i quan h\u1ec7 \u201cl\u1edbn b\u00e9\u201d kh\u00e1c (v\u00ed d\u1ee5 quan h\u1ec7 chia h\u1ebft), mi\u1ec5n l\u00e0 t\u00ednh ch\u1ea5t b\u1eafc c\u1ea7u \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n. </p>"},{"location":"algo/basic/hoc-tin-the-nao-2/#cuoi-cung-nhung-quan-trong-nhat-tieng-anh","title":"Cu\u1ed1i c\u00f9ng nh\u01b0ng quan tr\u1ecdng nh\u1ea5t\u2026 ti\u1ebfng Anh!","text":"<p>Theo m\u00ecnh, c\u00f3 M\u1ed8T th\u1ee9 t\u00e1ch bi\u1ec7t ng\u01b0\u1eddi h\u1ecdc gi\u1ecfi v\u00e0 ng\u01b0\u1eddi h\u1ecdc kh\u00f4ng gi\u1ecfi trong c\u00e1c k\u00ec thi Tin h\u1ecdc qu\u1ed1c gia v\u00e0 qu\u1ed1c t\u1ebf, \u0111\u00f3 l\u00e0 vi\u1ec7c ng\u01b0\u1eddi h\u1ecdc \u0111\u00f3 c\u00f3 tho\u1ea3i m\u00e1i v\u1edbi ti\u1ebfng Anh hay kh\u00f4ng. Vi\u1ec7c tho\u1ea3i m\u00e1i v\u1edbi ti\u1ebfng Anh gi\u00fap cho b\u1ea1n c\u00f3 th\u1ec3 v\u01b0\u01a1n ra kh\u1ecfi c\u1ed9ng \u0111\u1ed3ng trong n\u01b0\u1edbc \u0111\u1ec3 ti\u1ebfp c\u1eadn v\u1edbi nhi\u1ec1u lu\u1ed3ng tri th\u1ee9c c\u1ee7a nh\u00e2n lo\u1ea1i. H\u1ed3i m\u00ecnh m\u1edbi h\u1ecdc Tin, t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t cu\u1ed1n s\u00e1ch d\u1ea1y thu\u1eadt to\u00e1n b\u1eb1ng ti\u1ebfng Vi\u1ec7t gi\u1ed1ng nh\u01b0 l\u00e0 t\u00ecm c\u00e1 m\u1eadp trong v\u1ecbnh Th\u00e1i Lan v\u1eady. Th\u1ef1c t\u1ebf, ch\u1ec9 c\u00f3 m\u1ed9t cu\u1ed1n s\u00e1ch v\u1ec1 thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c vi\u1ebft s\u00e1t v\u1edbi n\u1ed9i dung thi qu\u1ed1c gia, do th\u1ea7y L\u00ea Minh Ho\u00e0ng bi\u00ean so\u1ea1n. Nh\u01b0ng ch\u1ec9 luy\u1ec7n c\u00e1c thu\u1eadt to\u00e1n c\u01a1 b\u1ea3n trong s\u00e1ch th\u1ea7y Ho\u00e0ng th\u00ec kh\u00f4ng \u0111\u1ee7 \u0111\u1ec3 c\u00f3 th\u1ec3 c\u1ea1nh tranh tr\u00ean \u0111\u1ea5u tr\u01b0\u1eddng qu\u1ed1c t\u1ebf (em xin l\u1ed7i th\u1ea7y :( ). L\u00fac \u1ea5y, mu\u1ed1n h\u1ecdc th\u00eam c\u00e1c k\u1ef9 thu\u1eadt n\u00e2ng cao v\u1ec1 quy ho\u1ea1ch \u0111\u1ed9ng hay c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, m\u00ecnh ph\u1ea3i t\u00ecm \u0111\u1ebfn trang d\u1ea1y thu\u1eadt to\u00e1n c\u1ee7a Topcoder ho\u1eb7c \u0111\u1ecdc l\u1eddi gi\u1ea3i b\u1eb1ng ti\u1ebfng Anh c\u1ee7a c\u00e1c k\u00ec thi qu\u1ed1c t\u1ebf. Hi\u1ec7n nay, c\u00e1c th\u00e0nh vi\u00ean c\u1ee7a Codeforces c\u00f3 vi\u1ebft nhi\u1ec1u trang blog m\u00f4 t\u1ea3 \u0111\u1ee7 lo\u1ea1i k\u1ef9 x\u1ea3o l\u1eadp tr\u00ecnh ti\u00ean ti\u1ebfn nh\u1ea5t. \u0110\u00f3 l\u00e0 m\u1ed9t m\u1ecf v\u00e0ng c\u1ea7n \u0111\u01b0\u1ee3c khai th\u00e1c.</p> <p>Tho\u00e1i m\u00e1i v\u1edbi ti\u1ebfng Anh c\u0169ng gi\u00fap b\u1ea1n h\u00f2a nh\u1eadp v\u1edbi c\u1ed9ng \u0111\u1ed3ng luy\u1ec7n thi l\u1eadp tr\u00ecnh tr\u00ean th\u1ebf gi\u1edbi th\u00f4ng qua vi\u1ec7c tham gia c\u00e1c k\u00ec thi tr\u1ef1c tuy\u1ebfn (\u0111\u1ec1 ti\u1ebfng Anh). B\u1ea1n t\u1eeb m\u1ed9t con c\u00e1 nh\u1ecf trong c\u00e1i ao l\u00e0ng, v\u01b0\u01a1n ra bi\u1ec3n l\u1edbn. B\u1ea1n s\u1ebd th\u1ea5y r\u1eb1ng con c\u00e1 l\u1edbn nh\u1ea5t trong c\u00e1i ao c\u1ee7a b\u1ea1n ch\u1eb3ng to b\u1eb1ng m\u1ed9t ph\u1ea7n tr\u0103m con c\u00e1 l\u1edbn c\u1ee7a \u0111\u1ea1i d\u01b0\u01a1ng. Khi \u0111\u01b0\u1ee3c t\u00f4i luy\u1ec7n v\u1edbi con nh\u1eefng con c\u00e1 \u0111\u00f3, d\u00f9 c\u1ed1 t\u00ecnh hay v\u00f4 \u00fd, kh\u1ea3 n\u0103ng sinh t\u1ed3n c\u1ee7a b\u1ea1n r\u1ed3i c\u0169ng s\u1ebd \u0111\u01b0\u1ee3c n\u00e2ng cao. </p> <p>B\u00e0i vi\u1ebft \u0111\u1ebfn \u0111\u00e2y l\u00e0 h\u1ebft, ch\u00fac c\u00e1c b\u1ea1n t\u00ecm \u0111\u01b0\u1ee3c nhi\u1ec1u ni\u1ec1m vui v\u1edbi m\u00f4n Tin h\u1ecdc :)</p>"},{"location":"algo/basic/meet-in-the-middle/","title":"Meet In The Middle (MITM)","text":"<p>T\u00e1c gi\u1ea3: - L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM</p> <p>Reviewer: - Ng\u00f4 Nh\u1eadt Quang - The University of Texas at Dallas - Ph\u1ea1m C\u00f4ng Minh - THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/basic/meet-in-the-middle/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>MITM l\u00e0 m\u1ed9t k\u1ef9 thu\u1eadt t\u00ecm ki\u1ebfm \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi \u0111\u1ea7u v\u00e0o nh\u1ecf nh\u01b0ng kh\u00f4ng \u0111\u1ee7 nh\u1ecf \u0111\u1ec3 c\u00f3 th\u1ec3 quay lui (backtracking). Tr\u01b0\u1edbc khi ti\u1ebfp t\u1ee5c v\u1ec1 k\u1ef9 thu\u1eadt MITM, ch\u00fang ta c\u1ea7n xem x\u00e9t b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n sau:</p>"},{"location":"algo/basic/meet-in-the-middle/#cses-meet-in-the-middle","title":"CSES - Meet in the Middle","text":""},{"location":"algo/basic/meet-in-the-middle/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ea3ng \\(t\\) c\u00f3 \\(N\\) ph\u1ea7n t\u1eed. H\u1ecfi c\u00f3 bao nhi\u00eau c\u00e1ch ch\u1ecdn t\u1eadp con sao cho t\u1ed5ng b\u1eb1ng \\(x\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le N\\le40\\) - \\(1\\le x\\le10^9\\) - \\(1\\le t_i\\le10^9\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#thuat-toan-ngay-tho-quay-lui-backtracking","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1: Quay lui (Backtracking)","text":""},{"location":"algo/basic/meet-in-the-middle/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>Ta duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con c\u00f3 th\u1ec3 c\u00f3 r\u1ed3i c\u1eadp nh\u1eadt k\u1ebft qu\u1ea3 b\u1eb1ng \u0111\u1ec7 quy (m\u1ed9t c\u00e1ch kh\u00e1c \u0111\u1ec3 duy\u1ec7t qua c\u00e1c t\u1eadp con l\u00e0 s\u1eed d\u1ee5ng bitmask )."},{"location":"algo/basic/meet-in-the-middle/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>long long cnt;\n// quay lui \u0111\u1ebfn ph\u1ea7n t\u1eed th\u1ee9 i\n// trong i-1 ph\u1ea7n t\u1eed \u0111\u1ea7u, t\u1ed5ng c\u00e1c t[i] trong t\u1eadp l\u00e0 sum\nvoid Try(int i, int sum) {\n    // ti\u1ebfp t\u1ee5c quay lui v\u1edbi t\u1eadp c\u00f3 sum &gt; x l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft\n    if (sum &gt; x) return;\n\n    if (i &gt; n) {\n        if (sum == x) ++cnt;\n    }\n    else {\n        // kh\u00f4ng l\u1ea5y ph\u1ea7n t\u1eed th\u1ee9 i\n        Try(i + 1, sum);\n        // l\u1ea5y ph\u1ea7n t\u1eed th\u1ee9 i\n        Try(i + 1, sum + t[i]);\n    }\n}\nlong long solve() {\n    cnt = 0;\n    Try(1, 0);\n    return cnt;\n}\n</code></pre> <p>Thu\u1eadt to\u00e1n tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(2^N)\\), kh\u00f4ng \u0111\u1ee7 nhanh \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n b\u1edfi v\u00ec \\(2^{40}\\) kh\u00e1 l\u1edbn. Do \u0111\u00f3, ta c\u1ea7n t\u00ecm m\u1ed9t ph\u01b0\u01a1ng \u00e1n t\u1ed1i \u01b0u h\u01a1n.</p>"},{"location":"algo/basic/meet-in-the-middle/#thuat-toan-toi-uu-ky-thuat-mitm","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u: k\u1ef9 thu\u1eadt MITM","text":"<p>K\u1ef9 thu\u1eadt MITM \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 nh\u01b0 sau: - \u0110\u1eb7t \\(K=N/2\\) - Chia \\(N\\) ph\u1ea7n t\u1eed th\u00e0nh \\(2\\) t\u1eadp:     - T\u1eadp \\(X\\) bao g\u1ed3m \\(K\\) ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean.     - T\u1eadp \\(Y\\) bao g\u1ed3m t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i. - Quay lui \u1edf t\u1eadp \\(X\\) v\u00e0 l\u01b0u t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 t\u1eadp con v\u00e0o m\u1ea3ng \\(A\\). T\u01b0\u01a1ng t\u1ef1, quay lui \u1edf t\u1eadp \\(Y\\) v\u00e0 l\u01b0u t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 t\u1eadp con v\u00e0o m\u1ea3ng \\(B\\). Do \u0111\u00f3, k\u00edch th\u01b0\u1edbc t\u1ed1i \u0111a c\u1ee7a m\u1ed7i m\u1ea3ng \\(A\\) v\u00e0 \\(B\\) l\u00e0 \\(2^K\\). - B\u00e2y gi\u1edd, ta c\u1ea7n k\u1ebft h\u1ee3p \\(2\\) m\u1ea3ng \\(A\\) v\u00e0 \\(B\\):     - C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 l\u1eb7p qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a \\(A\\), v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed, ta duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u1ee7a \\(B\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(2^K\\times2^K)=\\mathcal{O}(2^{N})\\) (kh\u00f4ng \u0111\u1ee7 nhanh)     - \u0110\u1ec3 t\u1ed1i \u01b0u, ta s\u1eafp x\u1ebfp m\u1ea3ng \\(B\\) tr\u01b0\u1edbc. Sau \u0111\u00f3, l\u1eb7p qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a \\(A\\), v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed, ta s\u1eed d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n trong m\u1ea3ng \\(B\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(2^K\\times\\log_2{2^K})=\\mathcal{O}(2^KK)\\)     - M\u1ed9t c\u00e1ch t\u1ed1i \u01b0u kh\u00e1c l\u00e0 ta s\u1eafp x\u1ebfp c\u1ea3 \\(2\\) m\u1ea3ng \\(A\\) v\u00e0 \\(B\\) tr\u01b0\u1edbc, sau \u0111\u00f3 s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt hai con tr\u1ecf. \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(\\text{sort algorithm})+\\mathcal{O}(2^K)\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#cai-at-su-dung-tim-kiem-nhi-phan","title":"C\u00e0i \u0111\u1eb7t (s\u1eed d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n)","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 40 + 2;\nint n, x;\nint t[N];\nvector&lt;int&gt; A, B;\n\nvoid TryX(int i, int sum) {\n    if (sum &gt; x) return;\n\n    if (i &gt; n / 2) A.push_back(sum);\n    else {\n        TryX(i + 1, sum);\n        TryX(i + 1, sum + t[i]);\n    }\n}\nvoid TryY(int i, int sum) {\n    if (sum &gt; x) return;\n\n    if (i &gt; n) B.push_back(sum);\n    else {\n        TryY(i + 1, sum);\n        TryY(i + 1, sum + t[i]);\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; x;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; t[i];\n\n    // Quay lui 2 t\u1eadp X v\u00e0 Y\n    TryX(1, 0);\n    TryY(n / 2 + 1, 0);\n\n    // S\u1eafp x\u1ebfp m\u1ea3ng B\n    sort(B.begin(), B.end());\n\n    // L\u1eb7p qua m\u1ea3ng A v\u00e0 t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n:\n    // - \u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed trong B c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng x - A[i]\n    long long cnt = 0;\n    for (int sum : A) {\n        cnt += upper_bound(B.begin(), B.end(), x - sum)\n             - lower_bound(B.begin(), B.end(), x - sum);\n    }\n    cout &lt;&lt; cnt &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"algo/basic/meet-in-the-middle/#cai-at-su-dung-ky-thuat-hai-con-tro","title":"C\u00e0i \u0111\u1eb7t (s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt hai con tr\u1ecf)","text":"<pre><code>    // Quay lui 2 t\u1eadp X v\u00e0 Y\n    TryX(1, 0);\n    TryY(n / 2 + 1, 0);\n\n    // S\u1eafp x\u1ebfp m\u1ea3ng A v\u00e0 B\n    sort(A.begin(), A.end(), greater&lt;int&gt;());\n    sort(B.begin(), B.end());\n\n    // S\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt 2 con tr\u1ecf\n    long long cnt = 0;\n    for (int i = 0, j1 = 0, j2 = 0; i &lt; A.size(); ++i) {\n        int s = x - A[i]; // c\u1ea7n \u0111\u1ebfm l\u01b0\u1ee3ng B[j] tho\u1ea3 B[j] = s\n        while (j1 &lt; B.size() &amp;&amp; B[j1] &lt; s) ++j1;\n        while (j2 &lt; B.size() &amp;&amp; B[j2] &lt;= s) ++j2;\n        cnt += j2 - j1;\n    }\n    cout &lt;&lt; cnt &lt;&lt; '\\n';\n</code></pre>"},{"location":"algo/basic/meet-in-the-middle/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/basic/meet-in-the-middle/#bai-toan-1-vnoj-cai-tui-1","title":"B\u00e0i to\u00e1n 1: VNOJ - C\u00e1i t\u00fai 1","text":"<p>C\u00f3 \\(N\\) c\u1ee5c v\u00e0ng, m\u1ed7i c\u1ee5c v\u00e0ng c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng \\(W_i\\) v\u00e0 gi\u00e1 tr\u1ecb \\(V_i\\). B\u1ea1n c\u00f3 m\u1ed9t c\u00e1i t\u00fai c\u00f3 t\u1ea3i tr\u1ecdng t\u1ed1i \u0111a l\u00e0 \\(M\\). H\u1ecfi t\u1ed5ng gi\u00e1 tr\u1ecb v\u00e0ng l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u00e0 kh\u00f4ng l\u00e0m r\u00e1ch t\u00fai.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le N\\le40\\) - \\(1\\le M\\le10^9\\) - \\(1\\le W_i, V_i\\le10^8\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u00c1p d\u1ee5ng MITM, ta t\u00e1ch \\(N\\) c\u1ee5c v\u00e0ng th\u00e0nh \\(2\\) t\u1eadp \\(X\\) v\u00e0 \\(Y\\), t\u1eadp \\(X\\) ch\u1ee9a \\(N/2\\) c\u1ee5c v\u00e0ng \u0111\u1ea7u ti\u00ean v\u00e0 t\u1eadp \\(Y\\) ch\u1ee9a ph\u1ea7n c\u00f2n l\u1ea1i.</p> <p>B\u00e2y gi\u1edd, quay lui cho v\u1edbi m\u1ed7i t\u1eadp \\(X\\) v\u00e0 \\(Y\\), ta \u0111\u01b0\u1ee3c \\(2\\) t\u1eadp \\(A\\) v\u00e0 \\(B\\) ch\u1ee9a c\u00e1c c\u1eb7p (t\u1ed5ng tr\u1ecdng l\u01b0\u1ee3ng \\(sumW\\), t\u1ed5ng gi\u00e1 tr\u1ecb \\(sumV\\)) c\u1ee7a c\u00e1c t\u1eadp con.</p> <p>\u0110\u1ec3 k\u1ebft h\u1ee3p \\(2\\) t\u1eadp \\(A\\) v\u00e0 \\(B\\), ta c\u1ea7n gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n con: V\u1edbi m\u1ed7i c\u1eb7p \\((sumW_i, sumV_i)\\) c\u1ee7a t\u1eadp \\(A\\), ta c\u1ea7n t\u00ecm m\u1ed9t c\u1eb7p \\((sumW_j, sumV_j)\\) trong t\u1eadp \\(B\\) sao cho \\(sumW_j\\le M-sumW_i\\) v\u00e0 \\(sumV_j\\) l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n con n\u00e0y, g\u1ee3i \u00fd l\u00e0 s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng \\(B\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a \\(sumW_j\\) v\u00e0 \u0111\u1eb7t \\(maxSumV_j=max(sumV_1, \\ldots,sumV_j)\\) (ph\u1ea7n n\u00e0y c\u00f3 th\u1ec3 t\u00ednh nhanh b\u1eb1ng m\u1ea3ng c\u1ed9ng d\u1ed3n).</p>"},{"location":"algo/basic/meet-in-the-middle/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 40 + 2, MaxSize = (1 &lt;&lt; 20) + 10;\nint n, m;\nint w[N], v[N];\n\nlong long sumVA[MaxSize];\nint sumWA[MaxSize];\nint sizeA;\n\npair&lt;int, long long&gt; B[MaxSize];\nint sizeB;\nint sumWB[MaxSize];\nlong long maxSumVB[MaxSize];\n\nvoid TryX(int i, int sumW, long long sumV) {\n    if (sumW &gt; m) return;\n    if (i &gt; n / 2) {\n        ++sizeA;\n        sumWA[sizeA] = sumW;\n        sumVA[sizeA] = sumV;\n        return;\n    }\n    TryX(i + 1, sumW, sumV);\n    TryX(i + 1, sumW + w[i], sumV + v[i]);\n}\n\nvoid TryY(int i, int sumW, long long sumV) {\n    if (sumW &gt; m) return;\n    if (i &gt; n) {\n        ++sizeB;\n        B[sizeB].first  = sumW;\n        B[sizeB].second = sumV;\n        return;\n    }\n    TryY(i + 1, sumW, sumV);\n    TryY(i + 1, sumW + w[i], sumV + v[i]);\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; w[i] &gt;&gt; v[i];\n\n    TryX(1, 0, 0);\n    TryY(n / 2 + 1, 0, 0);\n    sort(B + 1, B + sizeB + 1);\n    for (int i = 1; i &lt;= sizeB; ++i) {\n        sumWB[i]    = B[i].first;\n        maxSumVB[i] = max(maxSumVB[i - 1], B[i].second);\n    }\n\n    long long maxValue = 0;\n    for (int i = 1; i &lt;= sizeA; ++i) {\n        int j    = upper_bound(sumWB + 1, sumWB + sizeB + 1, m - sumWA[i]) - sumWB - 1;\n        maxValue = max(maxValue, sumVA[i] + maxSumVB[j]);\n    }\n    cout &lt;&lt; maxValue;\n}\n</code></pre>"},{"location":"algo/basic/meet-in-the-middle/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Cho m\u1ea3ng \\(a\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean, \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng d\u00e3y con t\u0103ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(3\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le n\\le2000\\) - \\(1\\le a_i\\le10^9\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#y-tuong_2","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u0110\u1eb7t \\(a_i, a_j, a_k (i&lt;j&lt;k)\\) \u1ee9ng v\u1edbi m\u1ed9t d\u00e3y con t\u0103ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(3\\).</p> <p>Theo c\u00e1ch l\u00e0m ng\u00e2y th\u01a1, v\u1edbi m\u1ed7i \\(i\\), ta \u0111\u1ebfm s\u1ed1 c\u1eb7p \\((j,k)\\) tho\u1ea3 m\u00e3n trong \\(\\mathcal{O}(n^2)\\), t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian s\u1ebd l\u00e0 \\(\\mathcal{O}(n^3)\\).</p> <p>Ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng \"middle\" nh\u01b0 sau: thay v\u00ec x\u00e9t \\(i\\) \u0111\u1ea7u ti\u00ean, ta x\u00e9t \\(j\\) \u0111\u1ea7u ti\u00ean. V\u1edbi m\u1ed7i \\(j\\), ta \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng \\(i&lt;j\\) tho\u1ea3 \\(a_i &lt; a_j\\) v\u00e0 \\(k&gt;j\\) tho\u1ea3 \\(a_k&gt;a_j\\) trong \\(\\mathcal{O}(n)\\), t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00fac n\u00e0y s\u1ebd l\u00e0 \\(\\mathcal{O}(n^2)\\).</p>"},{"location":"algo/basic/meet-in-the-middle/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>for (int j = 0; j &lt; n; ++j) {\n    int smaller = 0, bigger = 0;\n    for (int i = 0; i &lt; j; ++i) {\n        if (a[i] &lt; a[j]) ++smaller;\n    }\n    for (int k = j + 1; k &lt; n; ++k) {\n        if (a[k] &gt; a[j]) ++bigger;\n    }\n    answer += smaller * bigger;\n}\n</code></pre>"},{"location":"algo/basic/meet-in-the-middle/#bai-toan-3-cses-sum-of-four-values","title":"B\u00e0i to\u00e1n 3: CSES - Sum of Four Values","text":"<p>Cho m\u1ea3ng \\(a\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean v\u00e0 s\u1ed1 nguy\u00ean \\(x\\). Ta c\u1ea7n t\u00ecm \\(4\\) v\u1ecb tr\u00ed ph\u00e2n bi\u1ec7t sao cho t\u1ed5ng gi\u00e1 tr\u1ecb \u1edf \\(4\\) v\u1ecb tr\u00ed \u0111\u00f3 b\u1eb1ng \\(x\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le n\\le1000\\) - \\(1\\le x,a_i\\le10^9\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#y-tuong_3","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u0110\u1eb7t \\(i,j,k,l\\) \\((i&lt;j&lt;k&lt;l)\\) l\u00e0 \\(4\\) v\u1ecb tr\u00ed tho\u1ea3 m\u00e3n \\(a_i+a_j+a_k+a_l=x\\).</p> <p>Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 c\u1ee7a b\u00e0i to\u00e1n n\u00e0y l\u00e0 s\u1eed d\u1ee5ng \\(4\\) v\u00f2ng l\u1eb7p l\u1ed3ng nhau v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n^4)\\). <pre><code>for (int i = 1; i &lt;= n; ++i)\n    for (int j = i + 1; j &lt;= n; ++j)\n        for (int k = j + 1; k &lt;= n; ++k)\n            for (int l = k + 1; l &lt;= n; ++l)\n                if (a[i] + a[j] + a[k] + a[l] == x) { ... }\n</code></pre> Ta c\u00f3 nh\u1eadn x\u00e9t: trong v\u00f2ng l\u1eb7p th\u1ee9 \\(2\\) (bi\u1ebfn \\(j\\)), ta \u0111ang gi\u1ea3i b\u00e0i to\u00e1n: t\u00ecm \\(2\\) v\u1ecb tr\u00ed ph\u00e2n bi\u1ec7t l\u1edbn h\u01a1n \\(j\\) sao cho t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a \\(2\\) v\u1ecb tr\u00ed \u0111\u00f3 b\u1eb1ng \\(x-a_i-a_j\\).</p> <p>Ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y tr\u01b0\u1edbc b\u1eb1ng c\u00e1ch: - Duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u1eb7p \\(2\\) v\u1ecb tr\u00ed (\u0111\u1eb7t \\(2\\) v\u1ecb tr\u00ed n\u00e0y l\u00e0 \\(k\\) v\u00e0 \\(l\\), \\(k &lt; l\\)), v\u1edbi m\u1ed7i c\u1eb7p v\u1ecb tr\u00ed, ta c\u00f3 m\u1ed9t t\u1ed5ng \\(a_k+a_l\\). - V\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb t\u1ed5ng, c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u c\u1eb7p v\u1ecb tr\u00ed kh\u00e1c nhau tho\u1ea3 m\u00e3n, ta ch\u1ec9 c\u1ea7n l\u01b0u l\u1ea1i c\u1eb7p c\u00f3 \\(k\\) l\u1edbn nh\u1ea5t (v\u00ec \\(k\\) c\u00e0ng l\u1edbn th\u00ec c\u00e0ng c\u00f3 nhi\u1ec1u \\(j\\) tho\u1ea3 m\u00e3n).</p>"},{"location":"algo/basic/meet-in-the-middle/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>S\u1eed d\u1ee5ng <code>std::map</code> \u0111\u1ec3 l\u01b0u c\u1eb7p v\u1ecb tr\u00ed c\u1ee7a m\u1ed7i gi\u00e1 tr\u1ecb t\u1ed5ng.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 1000 + 3;\nint n, x;\nint a[N];\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; x;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n\n    // preprocess\n    map&lt;int, pair&lt;int, int&gt;&gt; mp;\n    for (int i = 1; i &lt;= n; ++i)\n        for (int j = i + 1; j &lt;= n; ++j)\n            mp[a[i] + a[j]] = make_pair(i, j);\n\n    // solve\n    for (int i = 1; i &lt;= n; ++i)\n        for (int j = i + 1; j &lt;= n; ++j) {\n            // thay v\u00ec 2 v\u00f2ng for, b\u00e2y gi\u1edd ta ch\u1ec9 c\u1ea7n \n            // truy v\u1ea5n tr\u00ean std::map\n            int X = x - a[i] - a[j];\n            if (mp.count(X)) {\n                pair&lt;int, int&gt; arr = mp[X];\n                if (j &lt; arr.first) {\n                    cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; j &lt;&lt; ' ' &lt;&lt; arr.first &lt;&lt; ' ' &lt;&lt; arr.second;\n                    return 0;\n                }\n            }\n        }\n\n    cout &lt;&lt; \"IMPOSSIBLE\";\n}\n</code></pre>"},{"location":"algo/basic/meet-in-the-middle/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(n^2\\log(n^2))\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\log(n^2))\\) C\u00f3 \\(\\mathcal{O}(n^2)\\) truy v\u1ea5n, v\u00ec th\u1ebf, t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0: \\(\\mathcal{O}(n^2\\log(n^2))\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#bai-toan-4-kattis-playlist","title":"B\u00e0i to\u00e1n 4: Kattis - Playlist","text":"<p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(n\\) \u0111\u1ec9nh (\\(n\\le100\\)) v\u00e0 b\u1eadc ngo\u00e0i c\u1ee7a m\u1ed7i \u0111\u1ec9nh kh\u00f4ng qu\u00e1 \\(40\\). T\u1ea5t c\u1ea3 \u0111\u1ec9nh \u0111\u1ec1u \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u. T\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(9\\) sao cho \\(9\\) \u0111\u1ec9nh trong \u0111\u01b0\u1eddng \u0111i c\u00f3 m\u00e0u ph\u00e2n bi\u1ec7t. N\u1ebfu c\u00f3 nhi\u1ec1u c\u00e1ch ch\u1ecdn, in ra b\u1ea5t k\u1ef3, ng\u01b0\u1ee3c l\u1ea1i, in ra \"fail\".</p> <p>Gi\u1edbi h\u1ea1n th\u1eddi gian l\u00e0 r\u1ea5t l\u1edbn (12 gi\u00e2y).</p>"},{"location":"algo/basic/meet-in-the-middle/#y-tuong_4","title":"\u00dd t\u01b0\u1edfng","text":"<p>T\u01b0\u01a1ng t\u1ef1 B\u00e0i to\u00e1n 2, ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng \"middle\" nh\u01b0 sau: - \u0110\u1eb7t \u0111\u1ec9nh th\u1ee9 \\(5\\) trong \u0111\u01b0\u1eddng \u0111i l\u00e0 \\(u\\). - V\u1edbi m\u1ed7i \\(u\\):     - Ta c\u00f3 t\u1eadp \\(A\\) g\u1ed3m c\u00e1c \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) \u1ee9ng v\u1edbi \\(4\\) \u0111\u1ec9nh \\(1,2,3,4\\) tho\u1ea3 m\u00e3n c\u00e1c m\u00e0u l\u00e0 ph\u00e2n bi\u1ec7t v\u00e0 kh\u00e1c m\u00e0u c\u1ee7a \\(u\\) (b\u1eb1ng DFS ho\u1eb7c 4 v\u00f2ng for t\u1eeb \\(u\\) trong \u0111\u1ed3 th\u1ecb ng\u01b0\u1ee3c)     - Ta c\u00f3 t\u1eadp \\(B\\) g\u1ed3m c\u00e1c \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) \u1ee9ng v\u1edbi \\(4\\) \u0111\u1ec9nh \\(6,7,8,9\\) tho\u1ea3 m\u00e3n c\u00e1c m\u00e0u l\u00e0 ph\u00e2n bi\u1ec7t v\u00e0 kh\u00e1c m\u00e0u c\u1ee7a \\(u\\) (b\u1eb1ng DFS ho\u1eb7c 4 v\u00f2ng for t\u1eeb \\(u\\))     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\mathcal{O}(40^4)\\) - B\u00e2y gi\u1edd, \u0111\u1ec3 k\u1ebft h\u1ee3p \\(2\\) t\u1eadp, ta c\u1ea7n gi\u1ea3i b\u00e0i to\u00e1n:     - V\u1edbi m\u1ed7i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) trong \\(A\\), \u0111\u1eb7t l\u00e0 \\(X\\), ta ki\u1ec3m tra xem c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) trong \\(B\\) sao cho m\u00e0u c\u1ee7a \\(8\\) \u0111\u1ec9nh l\u00e0 ph\u00e2n bi\u1ec7t.     - Ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y b\u1eb1ng Bao h\u00e0m - lo\u1ea1i tr\u1eeb: S\u1ed1 \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) trong \\(B\\) c\u00f3 m\u00e0u ph\u00e2n bi\u1ec7t v\u1edbi \\(X\\) = \\(|B|\\) - (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng \u00edt nh\u1ea5t \\(1\\) m\u00e0u) + (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng \u00edt nh\u1ea5t \\(2\\) m\u00e0u) - (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng \u00edt nh\u1ea5t \\(3\\) m\u00e0u) + (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng c\u1ea3 \\(4\\) m\u00e0u)     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\mathcal{O}(2^4\\times40^4)\\) - \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(N\\times2^4\\times40^4)\\)</p>"},{"location":"algo/basic/meet-in-the-middle/#cai-at_4","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 100 + 2;\nint n;\nint c[N];\nvector&lt;int&gt; g[2][N];\n\nint cntbit[16];\nvoid init() {\n    for (int msk = 1; msk &lt; 16; ++msk) {\n        cntbit[msk] = cntbit[msk &gt;&gt; 1] + (msk &amp; 1);\n    }\n}\n\nvoid readData() {\n    cin &gt;&gt; n;\n    map&lt;string, int&gt; artist;\n    for (int i = 1; i &lt;= n; ++i) {\n        string name;\n        cin &gt;&gt; name;\n        c[i] = artist.count(name) ? artist[name] : (artist[name] = artist.size() + 1);\n\n        int k, to;\n        cin &gt;&gt; k;\n        while (k--) {\n            cin &gt;&gt; to;\n            g[0][i].push_back(to);\n            g[1][to].push_back(i);\n        }\n    }\n}\n\nvector&lt;int&gt; getAns(vector&lt;int&gt; res) {\n    set&lt;int&gt; s;\n    for (int u : res) s.insert(c[u]);\n\n    for (int v0 : g[0][res.back()]) {\n        if (s.count(c[v0])) continue;\n        s.insert(c[v0]);\n        for (int v1 : g[0][v0]) {\n            if (s.count(c[v1])) continue;\n            s.insert(c[v1]);\n            for (int v2 : g[0][v1]) {\n                if (s.count(c[v2])) continue;\n                s.insert(c[v2]);\n                for (int v3 : g[0][v2]) {\n                    if (s.count(c[v3])) continue;\n\n                    res.push_back(v0);\n                    res.push_back(v1);\n                    res.push_back(v2);\n                    res.push_back(v3);\n                    return res;\n                }\n                s.erase(c[v2]);\n            }\n            s.erase(c[v1]);\n        }\n        s.erase(c[v0]);\n    }\n    return {};\n}\n\nint cnt[N * N * N * N];\nint getHash(const array&lt;int, 4&gt; &amp;a, int msk) {\n    int hsh = 0;\n    for (int i = 0; i &lt; 4; ++i) {\n        if (msk &gt;&gt; i &amp; 1) hsh = hsh * N + c[a[i]];\n    }\n    return hsh;\n}\nvector&lt;int&gt; solve(int u) {\n    vector&lt;int&gt; sav(1, 0);\n\n    for (int v0 : g[0][u]) {\n        if (c[v0] == c[u]) continue;\n        for (int v1 : g[0][v0]) {\n            if (c[v1] == c[v0] || c[v1] == c[u]) continue;\n            for (int v2 : g[0][v1]) {\n                if (c[v2] == c[v1] || c[v2] == c[v0] || c[v2] == c[u]) continue;\n                for (int v3 : g[0][v2]) {\n                    if (c[v3] == c[v2] || c[v3] == c[v1] || c[v3] == c[v0] || c[v3] == c[u]) continue;\n\n                    array&lt;int, 4&gt; a = { c[v0], c[v1], c[v2], c[v3] };\n                    sort(a.begin(), a.end());\n                    for (int msk = 0; msk &lt; 16; ++msk) {\n                        int hsh = getHash(a, msk);\n                        ++cnt[hsh];\n                        sav.push_back(hsh);\n                    }\n                }\n            }\n        }\n    }\n\n    for (int v0 : g[1][u]) {\n        if (c[v0] == c[u]) continue;\n        for (int v1 : g[1][v0]) {\n            if (c[v1] == c[v0] || c[v1] == c[u]) continue;\n            for (int v2 : g[1][v1]) {\n                if (c[v2] == c[v1] || c[v2] == c[v0] || c[v2] == c[u]) continue;\n                for (int v3 : g[1][v2]) {\n                    if (c[v3] == c[v2] || c[v3] == c[v1] || c[v3] == c[v0] || c[v3] == c[u]) continue;\n\n                    array&lt;int, 4&gt; a = { c[v0], c[v1], c[v2], c[v3] };\n                    sort(a.begin(), a.end());\n                    int sum = 0;\n                    for (int msk = 0; msk &lt; 16; ++msk) {\n                        int hsh = getHash(a, msk);\n                        sum += cnt[hsh] * (cntbit[msk] &amp; 1 ? -1 : 1);\n                    }\n                    if (sum &gt; 0) {\n                        vector&lt;int&gt; res = { v3, v2, v1, v0, u };\n                        return getAns(res);\n                    }\n                }\n            }\n        }\n    }\n\n    for (int x : sav) cnt[x] = 0;\n    return vector&lt;int&gt;();\n}\n\nvoid solve() {\n    for (int i = 1; i &lt;= n; ++i) {\n        vector&lt;int&gt; vec = solve(i);\n        if (!vec.empty()) {\n            for (int x : vec) cout &lt;&lt; x &lt;&lt; ' ';\n            return;\n        }\n    }\n    cout &lt;&lt; \"fail\";\n}\n\nint main() {\n    init();\n    readData();\n    solve();\n}\n</code></pre>"},{"location":"algo/basic/meet-in-the-middle/#bai-tap-ap-dung-khac","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng kh\u00e1c","text":"<ul> <li>VNOJ - Chia v\u00e0ng </li> <li>VNOJ - Ph\u00e2n t\u1eadp </li> <li>VNOJ - Bipalindrome </li> <li>Codeforces - 888E (Maximum Subsequence) </li> <li>Codeforces - 1006F (Xor-Paths) </li> <li>Codeforces - 995E (Number Clicker) </li> <li>Atcoder - ARC135F (Delete 1, 4, 7, ...)</li> </ul>"},{"location":"algo/basic/sorting/","title":"Thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp","text":""},{"location":"algo/basic/sorting/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>\u1ee8ng d\u1ee5ng v\u1ec1 s\u1eafp x\u1ebfp c\u00f3 \u1edf kh\u1eafp m\u1ecdi n\u01a1i:</p> <ul> <li>M\u1ed9t danh s\u00e1ch l\u1edbp v\u1edbi c\u00e1c h\u1ecdc sinh \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 b\u1ea3ng ch\u1eef c\u00e1i.</li> <li>M\u1ed9t danh b\u1ea1 \u0111i\u1ec7n tho\u1ea1i.</li> <li>Danh s\u00e1ch c\u00e1c truy v\u1ea5n \u0111\u01b0\u1ee3c t\u00ecm ki\u1ebfm nhi\u1ec1u nh\u1ea5t tr\u00ean Google.</li> </ul> <p>Thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp c\u0169ng \u0111\u01b0\u1ee3c d\u00f9ng k\u1ebft h\u1ee3p v\u1edbi nh\u1eefng thu\u1eadt to\u00e1n kh\u00e1c, nh\u01b0 t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n, thu\u1eadt to\u00e1n Kruskal \u0111\u1ec3 t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>V\u00ec sao ch\u00fang ta ph\u1ea3i h\u1ecdc nhi\u1ec1u thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp? Khi code, b\u1ea1n ch\u1ec9 c\u1ea7n bi\u1ebft c\u00e0i m\u1ed9t thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp l\u00e0 \u0111\u1ee7. Ho\u1eb7c n\u1ebfu b\u1ea1n code C++ hay Java, b\u1ea1n ch\u1ec9 c\u1ea7n bi\u1ebft c\u00e1ch g\u1ecdi th\u01b0 vi\u1ec7n. Tuy nhi\u00ean, c\u00e1c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp kh\u00e1c nhau cho ta nhi\u1ec1u \u00fd t\u01b0\u1edfng hay v\u00e0 \u0111\u1ed9c \u0111\u00e1o - \u0111i\u1ec1u n\u00e0y v\u00f4 c\u00f9ng h\u1eefu \u00edch khi c\u00e1c b\u1ea1n h\u1ecdc c\u00e1c thu\u1eadt to\u00e1n kh\u00e1c.</p>"},{"location":"algo/basic/sorting/#nhung-iem-can-chu-y","title":"Nh\u1eefng \u0111i\u1ec3m c\u1ea7n ch\u00fa \u00fd","text":"<p>H\u00e3y th\u1eed t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n c\u00f3 m\u1ed9t b\u1ed9 b\u00e0i \u0111\u00e3 \u0111\u01b0\u1ee3c x\u00e1o, v\u00e0 b\u1ea1n mu\u1ed1n s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c l\u00e1 b\u00e0i theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n. B\u1ea1n s\u1ebd l\u00e0m nh\u01b0 n\u00e0o? C\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c nhau:</p> <ul> <li>Chia b\u1ed9 b\u00e0i theo gi\u00e1 tr\u1ecb: 2, 3, 4... R\u1ed3i g\u1ed9p l\u1ea1i.</li> <li>Tr\u1ea3i t\u1ea5t c\u1ea3 c\u00e1c l\u00e1 b\u00e0i ra, r\u1ed3i l\u1ea7n l\u01b0\u1ee3t l\u1ea5y l\u00e1 b\u00e0i nh\u1ecf nh\u1ea5t.</li> <li>Chia b\u1ed9 b\u00e0i ra th\u00e0nh nhi\u1ec1u nh\u00f3m nh\u1ecf. V\u1edbi m\u1ed7i nh\u00f3m, s\u1eafp x\u1ebfp l\u1ea1i, sau \u0111\u00f3 g\u1ed9p c\u00e1c nh\u00f3m l\u1ea1i v\u1edbi nhau theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n.</li> </ul> <p>B\u1ea1n s\u1ebd th\u1ea5y nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c nhau s\u1ebd c\u00f3 th\u1eddi gian nhanh ch\u1eadm kh\u00e1c nhau. C\u00e1c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp c\u0169ng v\u1eady. C\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch ti\u1ebfp c\u1eadn, v\u1edbi \u01b0u, nh\u01b0\u1ee3c \u0111i\u1ec3m kh\u00e1c nhau.</p> <p>Khi so s\u00e1nh gi\u1eefa c\u00e1c thu\u1eadt to\u00e1n n\u00e0y v\u1edbi nhau, c\u00f3 nhi\u1ec1u v\u1ea5n \u0111\u1ec1 ph\u1ea3i quan t\u00e2m.</p> <ol> <li>Th\u1eddi gian ch\u1ea1y. \u0110\u1ed1i v\u1edbi c\u00e1c d\u1eef li\u1ec7u r\u1ea5t l\u1edbn, c\u00e1c thu\u1eadt to\u00e1n kh\u00f4ng hi\u1ec7u qu\u1ea3 s\u1ebd ch\u1ea1y r\u1ea5t ch\u1eadm v\u00e0 kh\u00f4ng th\u1ec3 \u1ee9ng d\u1ee5ng trong th\u1ef1c t\u1ebf.</li> <li>B\u1ed9 nh\u1edb. C\u00e1c thu\u1eadt to\u00e1n nhanh \u0111\u00f2i h\u1ecfi \u0111\u1ec7 quy s\u1ebd c\u00f3 th\u1ec3 ph\u1ea3i t\u1ea1o ra c\u00e1c b\u1ea3n copy c\u1ee7a d\u1eef li\u1ec7u \u0111ang x\u1eed l\u00ed. V\u1edbi nh\u1eefng h\u1ec7 th\u1ed1ng m\u00e0 b\u1ed9 nh\u1edb c\u00f3 gi\u1edbi h\u1ea1n (v\u00ed d\u1ee5 embedded system), m\u1ed9t v\u00e0i thu\u1eadt to\u00e1n s\u1ebd kh\u00f4ng th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c.</li> <li>\u0110\u1ed9 \u1ed5n \u0111\u1ecbnh (stability). \u0110\u1ed9 \u1ed5n \u0111\u1ecbnh \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a d\u1ef1a tr\u00ean \u0111i\u1ec1u g\u00ec s\u1ebd x\u1ea3y ra v\u1edbi c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb gi\u1ed1ng nhau.<ul> <li>\u0110\u1ed1i v\u1edbi thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp \u1ed5n \u0111\u1ecbnh, c\u00e1c ph\u1ea7n t\u1eed b\u1eb1ng v\u1edbi gi\u00e1 tr\u1ecb b\u1eb1ng nhau s\u1ebd gi\u1eef nguy\u00ean th\u1ee9 t\u1ef1 trong m\u1ea3ng tr\u01b0\u1edbc khi s\u1eafp x\u1ebfp.</li> <li>\u0110\u1ed1i v\u1edbi thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp kh\u00f4ng \u1ed5n \u0111\u1ecbnh, c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng nhau s\u1ebd c\u00f3 th\u1ec3 c\u00f3 th\u1ee9 t\u1ef1 b\u1ea5t k\u1ef3.</li> </ul> </li> </ol> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ta gi\u1ea3 s\u1eed c\u1ea7n s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n c\u00e1c ph\u1ea7n t\u1eed. \u0110\u1ec3 s\u1eafp x\u1ebfp gi\u1ea3m d\u1ea7n, ta c\u00f3 nhi\u1ec1u c\u00e1ch:</p> <ul> <li>S\u1eeda \u0111\u1ed5i thu\u1eadt to\u00e1n m\u1ed9t c\u00e1ch ph\u00f9 h\u1ee3p.</li> <li>S\u1eafp x\u1ebfp, sau \u0111\u00f3 \u0111\u1ea3o ng\u01b0\u1ee3c th\u1ee9 t\u1ef1 c\u00e1c ph\u1ea7n t\u1eed.</li> <li>\u0110\u1ecbnh ngh\u0129a l\u1ea1i vi\u1ec7c so s\u00e1nh nh\u1ecf h\u01a1n.</li> </ul>"},{"location":"algo/basic/sorting/#sap-xep-noi-bot-bubble-sort","title":"S\u1eafp x\u1ebfp n\u1ed5i b\u1ecdt (Bubble sort)","text":"<p>\u0110\u00e2y l\u00e0 thu\u1eadt to\u00e1n c\u01a1 b\u1ea3n nh\u1ea5t cho vi\u1ec7c s\u1eafp x\u1ebfp.</p>"},{"location":"algo/basic/sorting/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<ul> <li>X\u00e9t l\u1ea7n l\u01b0\u1ee3t c\u00e1c c\u1eb7p 2 ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp. N\u1ebfu ph\u1ea7n t\u1eed \u0111\u1ee9ng sau nh\u1ecf h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc, ta \u0111\u1ed5i ch\u1ed7 2 ph\u1ea7n t\u1eed. N\u00f3i c\u00e1ch kh\u00e1c, ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t s\u1ebd n\u1ed5i l\u00ean tr\u00ean.</li> <li>L\u1eb7p l\u1ea1i \u0111\u1ebfn khi kh\u00f4ng c\u00f2n 2 ph\u1ea7n t\u1eed n\u00e0o th\u1ecfa m\u00e3n. C\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c s\u1ed1 l\u1ea7n l\u1eb7p kh\u00f4ng qu\u00e1 \\(N - 1\\), do m\u1ed9t ph\u1ea7n t\u1eed ch\u1ec9 c\u00f3 th\u1ec3 n\u1ed5i l\u00ean tr\u00ean kh\u00f4ng qu\u00e1 \\(N-1\\) l\u1ea7n.</li> </ul>"},{"location":"algo/basic/sorting/#uu-iem","title":"\u01afu \u0111i\u1ec3m","text":"<ul> <li>Code \u0111\u01a1n gi\u1ea3n, d\u1ec5 hi\u1ec3u</li> <li>Kh\u00f4ng t\u1ed1n th\u00eam b\u1ed9 nh\u1edb</li> </ul>"},{"location":"algo/basic/sorting/#nhuoc-iem","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N^2)\\), kh\u00f4ng \u0111\u1ee7 nhanh v\u1edbi d\u1eef li\u1ec7u l\u1edbn.</li> </ul>"},{"location":"algo/basic/sorting/#code","title":"Code","text":"<pre><code>for (int i = 0; i &lt; n; i++)\n    for (int j = 0; j &lt; n - 1; j++)\n        if (a[j] &gt; a[j+1]) {\n            swap(a[j], a[j+1]);\n        }\n</code></pre>"},{"location":"algo/basic/sorting/#minh-hoa","title":"Minh h\u1ecda","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 v\u00e0o VisuAlgo.</p> <ul> <li>Ch\u1ecdn Bubble \u1edf thanh menu b\u00ean tr\u00ean.</li> <li>\u1ea4n v\u00e0o n\u00fat <code>Create</code> \u1edf ph\u00eda d\u01b0\u1edbi trang \u0111\u1ec3 t\u1ea1o m\u1ed9t d\u00e3y m\u1edbi</li> <li>\u1ea4n v\u00e0o <code>Sort</code>, r\u1ed3i <code>Go</code> \u0111\u1ec3 ch\u1ea1y thu\u1eadt to\u00e1n.</li> </ul>"},{"location":"algo/basic/sorting/#sap-xep-chen-insertion-sort","title":"S\u1eafp x\u1ebfp ch\u00e8n (Insertion Sort)","text":""},{"location":"algo/basic/sorting/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 ta s\u1ebd s\u1eafp x\u1ebfp l\u1ea7n l\u01b0\u1ee3t t\u1eebng \u0111o\u1ea1n g\u1ed3m 1 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean, 2 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean, ..., \\(N\\) ph\u1ea7n t\u1eed.</p> <p>Gi\u1ea3 s\u1eed ta \u0111\u00e3 s\u1eafp x\u1ebfp xong \\(i\\) ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng. \u0110\u1ec3 s\u1eafp x\u1ebfp \\(i+1\\) ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean, ta t\u00ecm v\u1ecb tr\u00ed ph\u00f9 h\u1ee3p c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 \\(i+1\\) v\u00e0 \"ch\u00e8n\" n\u00f3 v\u00e0o \u0111\u00f3.</p>"},{"location":"algo/basic/sorting/#uu-iem_1","title":"\u01afu \u0111i\u1ec3m","text":"<ul> <li>N\u1ebfu danh s\u00e1ch \u0111\u00e3 g\u1ea7n \u0111\u00fang th\u1ee9 t\u1ef1, Insertion Sort s\u1ebd ch\u1ea1y r\u1ea5t nhanh. V\u00ed d\u1ee5 b\u1ea1n c\u1ea7n s\u1eafp x\u1ebfp Highscore trong game.</li> </ul>"},{"location":"algo/basic/sorting/#nhuoc-iem_1","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N^2)\\), kh\u00f4ng \u0111\u1ee7 nhanh v\u1edbi d\u1eef li\u1ec7u l\u1edbn.</li> </ul>"},{"location":"algo/basic/sorting/#code_1","title":"Code","text":"<pre><code>for (int i = 1; i &lt; n; i++) {\n    // T\u00ecm v\u1ecb tr\u00ed ph\u00f9 h\u1ee3p cho i\n    int j = i;\n    while (j &gt; 0 &amp;&amp; data[i] &lt; data[j-1]) --j;\n\n    // \u0110\u01b0a i v\u1ec1 \u0111\u00fang v\u1ecb tr\u00ed\n    int tmp = data[i];\n    for (int k = i; k &gt; j; k--)\n        data[k] = data[k-1];\n    data[j] = tmp;\n}\n</code></pre>"},{"location":"algo/basic/sorting/#minh-hoa_1","title":"Minh h\u1ecda","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 v\u00e0o VisuAlgo.</p> <ul> <li>Ch\u1ecdn Insert \u1edf thanh menu b\u00ean tr\u00ean.</li> <li>\u1ea4n v\u00e0o n\u00fat <code>Create</code> \u1edf ph\u00eda d\u01b0\u1edbi trang \u0111\u1ec3 t\u1ea1o m\u1ed9t d\u00e3y m\u1edbi</li> <li>\u1ea4n v\u00e0o <code>Sort</code>, r\u1ed3i <code>Go</code> \u0111\u1ec3 ch\u1ea1y thu\u1eadt to\u00e1n.</li> </ul>"},{"location":"algo/basic/sorting/#sap-xep-tron-merge-sort","title":"S\u1eafp x\u1ebfp tr\u1ed9n (Merge sort)","text":""},{"location":"algo/basic/sorting/#y-tuong_2","title":"\u00dd t\u01b0\u1edfng","text":"<p>S\u1eafp x\u1ebfp tr\u1ed9n ho\u1ea1t \u0111\u1ed9ng ki\u1ec3u \u0111\u1ec7 quy:</p> <ul> <li>\u0110\u1ea7u ti\u00ean chia d\u1eef li\u1ec7u th\u00e0nh 2 ph\u1ea7n, v\u00e0 s\u1eafp x\u1ebfp t\u1eebng ph\u1ea7n.</li> <li>Sau \u0111\u00f3 g\u1ed9p 2 ph\u1ea7n l\u1ea1i v\u1edbi nhau. \u0110\u1ec3 g\u1ed9p 2 ph\u1ea7n, ta l\u00e0m nh\u01b0 sau:<ul> <li>T\u1ea1o m\u1ed9t d\u00e3y \\(A\\) m\u1edbi \u0111\u1ec3 ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed \u0111\u00e3 s\u1eafp x\u1ebfp.</li> <li>So s\u00e1nh 2 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a 2 ph\u1ea7n. Ph\u1ea7n t\u1eed nh\u1ecf h\u01a1n ta cho v\u00e0o \\(A\\) v\u00e0 x\u00f3a kh\u1ecfi ph\u1ea7n t\u01b0\u01a1ng \u1ee9ng.</li> <li>Ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady \u0111\u1ebfn khi ta cho h\u1ebft c\u00e1c ph\u1ea7n t\u1eed v\u00e0o d\u00e3y \\(A\\).</li> </ul> </li> </ul>"},{"location":"algo/basic/sorting/#uu-iem_2","title":"\u01afu \u0111i\u1ec3m","text":"<ul> <li>Ch\u1ea1y nhanh, \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N*logN)\\).</li> <li>\u1ed4n \u0111\u1ecbnh</li> </ul>"},{"location":"algo/basic/sorting/#nhuoc-iem_2","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>C\u1ea7n d\u00f9ng th\u00eam b\u1ed9 nh\u1edb \u0111\u1ec3 l\u01b0u m\u1ea3ng A.</li> </ul>"},{"location":"algo/basic/sorting/#code_2","title":"Code","text":"<pre><code>int a[MAXN]; // m\u1ea3ng trung gian cho vi\u1ec7c s\u1eafp x\u1ebfp\n\n// S\u1eafp x\u1ebfp c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 t\u1eeb left \u0111\u1ebfn right c\u1ee7a m\u1ea3ng data.\nvoid mergeSort(int data[MAXN], int left, int right) {\n    if (data.length == 1) {\n        // D\u00e3y ch\u1ec9 g\u1ed3m 1 ph\u1ea7n t\u1eed, ta kh\u00f4ng c\u1ea7n s\u1eafp x\u1ebfp.\n        return ;\n    }\n    int mid = (left + right) / 2;\n    // S\u1eafp x\u1ebfp 2 ph\u1ea7n\n    mergeSort(data, left, mid);\n    mergeSort(data, mid+1, right);\n\n    // Tr\u1ed9n 2 ph\u1ea7n \u0111\u00e3 s\u1eafp x\u1ebfp l\u1ea1i\n    int i = left, j = mid + 1; // ph\u1ea7n t\u1eed \u0111ang x\u00e9t c\u1ee7a m\u1ed7i n\u1eeda\n    int cur = 0; // ch\u1ec9 s\u1ed1 tr\u00ean m\u1ea3ng a\n\n    while (i &lt;= mid || j &lt;= right) { // ch\u1eebng n\u00e0o c\u00f2n 1 ph\u1ea7n ch\u01b0a h\u1ebft ph\u1ea7n t\u1eed.\n        if (i &gt; mid) {\n            // b\u00ean tr\u00e1i kh\u00f4ng c\u00f2n ph\u1ea7n t\u1eed n\u00e0o\n            a[cur++] = data[j++];\n        } else if (j &gt; right) {\n            // b\u00ean ph\u1ea3i kh\u00f4ng c\u00f2n ph\u1ea7n t\u1eed n\u00e0o\n            a[cur++] = data[i++];\n        } else if (data[i] &lt; data[j]) {\n            // ph\u1ea7n t\u1eed b\u00ean tr\u00e1i nh\u1ecf h\u01a1n\n            a[cur++] = data[i++];\n        } else {\n            a[cur++] = data[j++];\n        }\n    }\n\n    // copy m\u1ea3ng a v\u1ec1 m\u1ea3ng data\n    for (int i = 0; i &lt; cur; i++)\n        data[left + i] = a[i];\n}\n</code></pre>"},{"location":"algo/basic/sorting/#minh-hoa_2","title":"Minh h\u1ecda","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 v\u00e0o VisuAlgo.</p> <ul> <li>Ch\u1ecdn Merge \u1edf thanh menu b\u00ean tr\u00ean.</li> <li>\u1ea4n v\u00e0o n\u00fat <code>Create</code> \u1edf ph\u00eda d\u01b0\u1edbi trang \u0111\u1ec3 t\u1ea1o m\u1ed9t d\u00e3y m\u1edbi</li> <li>\u1ea4n v\u00e0o <code>Sort</code>, r\u1ed3i <code>Go</code> \u0111\u1ec3 ch\u1ea1y thu\u1eadt to\u00e1n.</li> </ul>"},{"location":"algo/basic/sorting/#sap-xep-vun-ong-heapsort","title":"S\u1eafp x\u1ebfp vun \u0111\u1ed1ng (HeapSort)","text":""},{"location":"algo/basic/sorting/#y-tuong_3","title":"\u00dd t\u01b0\u1edfng","text":"<p>Ta l\u01b0u m\u1ea3ng v\u00e0o CTDL Heap.</p> <p>\u1ede m\u1ed7i b\u01b0\u1edbc, ta l\u1ea5y ra ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong heap, cho v\u00e0o m\u1ea3ng \u0111\u00e3 s\u1eafp x\u1ebfp.</p>"},{"location":"algo/basic/sorting/#uu-iem_3","title":"\u01afu \u0111i\u1ec3m","text":"<ul> <li>C\u00e0i \u0111\u1eb7t \u0111\u01a1n gi\u1ea3n n\u1ebfu \u0111\u00e3 c\u00f3 s\u1eb5n th\u01b0 vi\u1ec7n Heap.</li> <li>Ch\u1ea1y nhanh, \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N*logN)\\).</li> </ul>"},{"location":"algo/basic/sorting/#nhuoc-iem_3","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>Kh\u00f4ng \u1ed5n \u0111\u1ecbnh</li> </ul>"},{"location":"algo/basic/sorting/#code_3","title":"Code","text":"<pre><code>Heap h = Heap();\nfor (int i = 0; i &lt; n; i++) {\n    // th\u00eam ph\u1ea7n t\u1eed v\u00e0o heap\n    h.push(data[i]);\n}\nint a[MAXN];\nfor (int i = 0; i &lt; n; i++) {\n    // l\u1ea5y ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t v\u00e0 cho v\u00e0o m\u1ea3ng \u0111\u00e3 s\u1eafp x\u1ebfp\n    a[i] = h.pop();\n}\n</code></pre>"},{"location":"algo/basic/sorting/#sap-xep-nhanh-quicksort","title":"S\u1eafp x\u1ebfp nhanh (QuickSort)","text":""},{"location":"algo/basic/sorting/#y-tuong_4","title":"\u00dd t\u01b0\u1edfng","text":"<ul> <li>Chia d\u00e3y th\u00e0nh 2 ph\u1ea7n, m\u1ed9t ph\u1ea7n \"l\u1edbn\" v\u00e0 m\u1ed9t ph\u1ea7n \"nh\u1ecf\".<ul> <li>Ch\u1ecdn m\u1ed9t kh\u00f3a pivot</li> <li>Nh\u1eefng ph\u1ea7n t\u1eed l\u1edbn h\u01a1n pivot chia v\u00e0o ph\u1ea7n l\u1edbn</li> <li>Nh\u1eefng ph\u1ea7n t\u1eed nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng pivot chia v\u00e0o ph\u1ea7n nh\u1ecf.</li> </ul> </li> <li>G\u1ecdi \u0111\u1ec7 quy \u0111\u1ec3 s\u1eafp x\u1ebfp 2 ph\u1ea7n.</li> </ul>"},{"location":"algo/basic/sorting/#uu-iem_4","title":"\u01afu \u0111i\u1ec3m","text":"<ul> <li>Ch\u1ea1y nhanh (nhanh nh\u1ea5t trong c\u00e1c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp d\u1ef1a tr\u00ean vi\u1ec7c s\u00f3 s\u00e1nh c\u00e1c ph\u1ea7n t\u1eed). Do \u0111\u00f3 quicksort \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong nhi\u1ec1u th\u01b0 vi\u1ec7n c\u1ee7a c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 Java, C++ (h\u00e0m <code>sort</code> c\u1ee7a C++ d\u00f9ng Intro sort, l\u00e0 k\u1ebft h\u1ee3p c\u1ee7a Quicksort v\u00e0 Insertion Sort).</li> </ul>"},{"location":"algo/basic/sorting/#nhuoc-iem_4","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>T\u00f9y thu\u1ed9c v\u00e0o c\u00e1ch chia th\u00e0nh 2 ph\u1ea7n, n\u1ebfu chia kh\u00f4ng t\u1ed1t, \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t c\u00f3 th\u1ec3 l\u00e0 \\(\\mathcal{O}(N^2)\\). N\u1ebfu ta ch\u1ecdn pivot ng\u1eabu nhi\u00ean, thu\u1eadt to\u00e1n ch\u1ea1y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh l\u00e0 \\(\\mathcal{O}(N*logN)\\) (trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t v\u1eabn l\u00e0 \\(\\mathcal{O}(N^2)\\), nh\u01b0ng ta s\u1ebd kh\u00f4ng bao gi\u1edd g\u1eb7p ph\u1ea3i tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3).</li> <li>Kh\u00f4ng \u1ed5n \u0111\u1ecbnh.</li> </ul>"},{"location":"algo/basic/sorting/#code_4","title":"Code","text":"<pre><code>void quickSort(int a[], int left, int right) {\n    int i = left, j = right;\n    int pivot = a[left + rand() % (right - left)];\n    // chia d\u00e3y th\u00e0nh 2 ph\u1ea7n\n    while (i &lt;= j) {\n        while (a[i] &lt; pivot) ++i;\n        while (a[j] &gt; pivot) --j;\n\n        if (i &lt;= j) {\n            swap(a[i], a[j]);\n            ++i;\n            --j;\n        }\n    }\n    // G\u1ecdi \u0111\u1ec7 quy \u0111\u1ec3 s\u1eafp x\u1ebfp c\u00e1c n\u1eeda\n    if (left &lt; j) quickSort(a, left, j);\n    if (i &lt; right) quickSort(a, i, right);\n}\n</code></pre>"},{"location":"algo/basic/sorting/#minh-hoa_3","title":"Minh h\u1ecda","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 v\u00e0o VisuAlgo.</p> <ul> <li>Ch\u1ecdn Quick \u1edf thanh menu b\u00ean tr\u00ean.</li> <li>\u1ea4n v\u00e0o n\u00fat <code>Create</code> \u1edf ph\u00eda d\u01b0\u1edbi trang \u0111\u1ec3 t\u1ea1o m\u1ed9t d\u00e3y m\u1edbi</li> <li>\u1ea4n v\u00e0o <code>Sort</code>, r\u1ed3i <code>Go</code> \u0111\u1ec3 ch\u1ea1y thu\u1eadt to\u00e1n.</li> </ul>"},{"location":"algo/basic/sorting/#sap-xep-co-so-radixsort","title":"S\u1eafp x\u1ebfp c\u01a1 s\u1ed1 (RadixSort)","text":""},{"location":"algo/basic/sorting/#y-tuong_5","title":"\u00dd t\u01b0\u1edfng","text":"<p>Kh\u00e1c v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c thu\u1eadt to\u00e1n n\u00eau tr\u00ean, RadixSort kh\u00f4ng s\u1eed d\u1ee5ng vi\u1ec7c so s\u00e1nh 2 ph\u1ea7n t\u1eed.</p> <ul> <li>\u0110\u1ea7u ti\u00ean, thu\u1eadt to\u00e1n s\u1ebd chia c\u00e1c ph\u1ea7n t\u1eed th\u00e0nh c\u00e1c nh\u00f3m, d\u1ef1a tr\u00ean ch\u1eef s\u1ed1 cu\u1ed1i c\u00f9ng (ho\u1eb7c d\u1ef1a theo bit cu\u1ed1i c\u00f9ng, ho\u1eb7c v\u00e0i bit cu\u1ed1i c\u00f9ng).</li> <li>Sau \u0111\u00f3 ta \u0111\u01b0a c\u00e1c nh\u00f3m l\u1ea1i v\u1edbi nhau, v\u00e0 \u0111\u01b0\u1ee3c danh s\u00e1ch s\u1eafp x\u1ebfp theo ch\u1eef s\u1ed1 cu\u1ed1i c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed. Qu\u00e1 tr\u00ecnh n\u00e0y l\u1eb7p \u0111i l\u1eb7p l\u1ea1i v\u1edbi ch\u1eef s\u1ed1 \u00e1t cu\u1ed1i cho t\u1edbi khi t\u1ea5t c\u1ea3 v\u1ecb tr\u00ed ch\u1eef s\u1ed1 \u0111\u00e3 s\u1eafp x\u1ebfp.</li> </ul>"},{"location":"algo/basic/sorting/#uu-iem_5","title":"\u01afu \u0111i\u1ec3m","text":"<ul> <li>C\u00f3 th\u1ec3 ch\u1ea1y nhanh h\u01a1n c\u00e1c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp s\u1eed d\u1ee5ng so s\u00e1nh. V\u00ed d\u1ee5 n\u1ebfu ta s\u1eafp x\u1ebfp c\u00e1c s\u1ed1 nguy\u00ean 32 bit, v\u00e0 chia nh\u00f3m theo 1 bit, th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N)\\). Trong tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N*log(max(a_i)))\\)</li> </ul>"},{"location":"algo/basic/sorting/#nhuoc-iem_5","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>Kh\u00f4ng th\u1ec3 s\u1eafp x\u1ebfp s\u1ed1 th\u1ef1c.</li> </ul>"},{"location":"algo/basic/sorting/#minh-hoa_4","title":"Minh h\u1ecda","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 v\u00e0o VisuAlgo.</p> <ul> <li>Ch\u1ecdn Radix \u1edf thanh menu b\u00ean tr\u00ean.</li> <li>\u1ea4n v\u00e0o n\u00fat <code>Create</code> \u1edf ph\u00eda d\u01b0\u1edbi trang \u0111\u1ec3 t\u1ea1o m\u1ed9t d\u00e3y m\u1edbi</li> <li>\u1ea4n v\u00e0o <code>Sort</code>, r\u1ed3i <code>Go</code> \u0111\u1ec3 ch\u1ea1y thu\u1eadt to\u00e1n.</li> </ul>"},{"location":"algo/basic/sorting/#nguon-tham-khao","title":"Ngu\u1ed3n tham kh\u1ea3o","text":"<ul> <li>Topcoder</li> <li>VisuAlgo</li> <li>Wikipedia</li> </ul>"},{"location":"algo/basic/two-pointers/","title":"K\u0129 thu\u1eadt hai con tr\u1ecf","text":"<p>T\u00e1c gi\u1ea3: Phan \u0110\u00ecnh Kh\u00f4i - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa \u0110\u00e0 N\u1eb5ng</p> <p>Reviewer: Nguy\u1ec5n Kh\u00e1nh</p>"},{"location":"algo/basic/two-pointers/#loi-mo-au","title":"L\u1eddi m\u1edf \u0111\u1ea7u","text":"<p>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 k\u1ef9 thu\u1eadt hai con tr\u1ecf. K\u1ef9 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng kh\u00e1 ph\u1ed5 bi\u1ebfn, gi\u00fap ch\u01b0\u01a1ng tr\u00ecnh ti\u1ebft ki\u1ec7m th\u1eddi gian v\u00e0 kh\u00f4ng gian x\u1eed l\u00fd.  </p>"},{"location":"algo/basic/two-pointers/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>Cho hai d\u00e3y s\u1ed1 nguy\u00ean \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp kh\u00f4ng gi\u1ea3m \\(a\\) v\u00e0 \\(b\\) l\u1ea7n l\u01b0\u1ee3t c\u00f3 \\(n\\) v\u00e0 \\(m\\) ph\u1ea7n t\u1eed. H\u00e3y gh\u00e9p ch\u00fang th\u00e0nh d\u00e3y \\(c\\) \u0111\u01b0\u1ee3c b\u1ed1 tr\u00ed theo th\u1ee9 t\u1ef1 kh\u00f4ng gi\u1ea3m.</p> <p>Gi\u1edbi h\u1ea1n: \\(n, m \\leq 10^5\\) v\u00e0 \\(0 \\leq a_i, b_i \\leq 10^{9}\\).</p>"},{"location":"algo/basic/two-pointers/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>H\u00e3y c\u00f9ng xem v\u00ed d\u1ee5 sau \u0111\u00e2y. </p> <p>Cho tr\u01b0\u1edbc hai d\u00e3y s\u1ed1 \\(a\\) v\u00e0 \\(b\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp kh\u00f4ng gi\u1ea3m:</p> \\[a=[1,3,6,8,10]\\] \\[b=[2,6,7,12,14,15]\\] <p>L\u00e0m c\u00e1ch n\u00e0o \u0111\u1ec3 c\u00f3 th\u1ec3 gh\u00e9p ch\u00fang th\u00e0nh m\u1ed9t d\u00e3y s\u1ed1 \\(c\\) c\u0169ng \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp kh\u00f4ng gi\u1ea3m ?</p> <p>Tr\u01b0\u1edbc ti\u00ean, h\u00e3y c\u00f9ng x\u00e1c \u0111\u1ecbnh ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y \\(c\\). </p> <p>V\u00ec d\u00e3y \\(c\\) \u0111\u01b0\u1ee3c b\u1ed1 tr\u00ed theo th\u1ee9 t\u1ef1 kh\u00f4ng gi\u1ea3m, cho n\u00ean ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y \\(c\\) ph\u1ea3i l\u00e0 ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong c\u1ea3 hai d\u00e3y \\(a\\) v\u00e0 \\(b\\). </p> <p>Ta c\u00f3 th\u1ec3 so s\u00e1nh hai ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t c\u1ee7a hai d\u00e3y \\(a\\), \\(b\\) v\u00e0 \u0111\u01b0a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n v\u00e0o v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y \\(c\\).</p> <p>D\u00e3y \\(a\\) v\u00e0 \\(b\\) \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp kh\u00f4ng gi\u1ea3m, v\u00ec th\u1ebf hai ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t \u1edf \u0111\u00e2y ch\u00ednh l\u00e0 hai ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean \u1edf m\u1ed7i d\u00e3y (\\(a[1]\\) v\u00e0 \\(b[1]\\)). </p> \\[a=[\\overset{\\downarrow}{\\color{red}1},3,6,8,10]\\] \\[b=[\\overset{\\downarrow}{2},6,7,12,14,15]\\] \\[c=[{\\color{red}1}]\\] <p>B\u00e2y gi\u1edd, ph\u1ea7n t\u1eed ti\u1ebfp theo c\u1ee7a d\u00e3y \\(c\\) s\u1ebd l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong c\u00e1c ph\u1ea7n t\u1eed ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\).</p> <p>D\u00e3y \\(a\\) v\u00e0 \\(b\\) \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp kh\u00f4ng gi\u1ea3m, v\u00ec th\u1ebf sau khi \u0111\u01b0a \\(a[1]\\) v\u00e0o d\u00e3y \\(c\\), \\(a[2]\\) l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn \u1edf d\u00e3y \\(a\\) v\u00e0 \\(b[1]\\) l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn \u1edf d\u00e3y \\(b\\).</p> <p>So s\u00e1nh \\(a[2]\\) v\u00e0 \\(b[1]\\), ch\u1ecdn ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n v\u00e0 \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\).</p> \\[a=[1,\\overset{\\downarrow}{3},6,8,10]\\] \\[b=[\\overset{\\downarrow}{\\color{red}2},6,7,12,14,15]\\] \\[c=[1,{\\color{red}2}]\\] <p>Sau khi \u0111\u01b0a \\(b[1]\\) v\u00e0o d\u00e3y \\(c\\), \\(b[2]\\) tr\u1edf th\u00e0nh ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn \u1edf d\u00e3y \\(b\\).</p> <p>V\u1eabn nh\u01b0 th\u1ebf, ph\u1ea7n t\u1eed ti\u1ebfp theo c\u1ee7a d\u00e3y \\(c\\) s\u1ebd l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong c\u00e1c ph\u1ea7n t\u1eed ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\).</p> <p>So s\u00e1nh \\(b[2]\\) v\u00e0 \\(a[2]\\), ch\u1ecdn ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n d\u00e3y v\u00e0 \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\).</p> \\[a=[1,\\overset{\\downarrow}{\\color{red}3},6,8,10]\\] \\[b=[2,\\overset{\\downarrow}{6},7,12,14,15]\\] \\[c=[1,2,{\\color{red}3}]\\] <p>Sau khi \u0111\u01b0a \\(a[2]\\) v\u00e0o d\u00e3y \\(c\\), \\(a[3]\\) tr\u1edf th\u00e0nh ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn \u1edf d\u00e3y \\(a\\).</p> <p>Ta nh\u1eadn th\u1ea5y r\u1eb1ng</p> <ul> <li> <p>T\u1ea1i m\u1ecdi th\u1eddi \u0111i\u1ec3m, ph\u1ea7n t\u1eed ti\u1ebfp theo \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\) s\u1ebd l\u00e0 ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong c\u00e1c ph\u1ea7n t\u1eed ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn.</p> </li> <li> <p>B\u1eb1ng c\u00e1ch so s\u00e1nh ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn \u1edf d\u00e3y \\(a\\) v\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn \u1edf d\u00e3y \\(b\\), ph\u1ea7n t\u1eed nh\u1ecf h\u01a1n s\u1ebd \u0111\u01b0\u1ee3c ch\u1ecdn v\u00e0o d\u00e3y \\(c\\).  </p> </li> <li> <p>Ban \u0111\u1ea7u, l\u00fac d\u00e3y \\(c\\) ch\u01b0a c\u00f3 ph\u1ea7n t\u1eed n\u00e0o</p> </li> <li> <p>\\(a[1]\\) l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(a\\).</p> </li> <li> <p>\\(b[1]\\) l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(b\\).</p> </li> <li> <p>Khi \u0111\u01b0a ph\u1ea7n t\u1eed \\(a[i]\\) v\u00e0o d\u00e3y \\(c\\) th\u00ec ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(a\\) s\u1ebd l\u00e0 \\(a[i+1]\\).</p> </li> <li> <p>Khi \u0111\u01b0a ph\u1ea7n t\u1eed \\(b[j]\\) v\u00e0o d\u00e3y \\(c\\) th\u00ec ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(b\\) s\u1ebd l\u00e0 \\(b[j+1]\\).</p> </li> </ul>"},{"location":"algo/basic/two-pointers/#giai-phap","title":"Gi\u1ea3i ph\u00e1p","text":"<p>D\u1ef1a v\u00e0o nh\u1eefng ph\u00e2n t\u00edch ta c\u00f3 gi\u1ea3i ph\u00e1p s\u1eed d\u1ee5ng hai con tr\u1ecf nh\u01b0 sau:</p> <ul> <li>D\u00e3y \\(a\\) c\u00f3 con tr\u1ecf \\(i\\), con tr\u1ecf n\u00e0y b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed \u0111\u1ea7u d\u00e3y \\(a\\).<ul> <li>Con tr\u1ecf \\(i\\) n\u00e0y \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n nh\u01b0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(a\\).</li> </ul> </li> <li>D\u00e3y \\(b\\) c\u00f3 con tr\u1ecf \\(j\\), con tr\u1ecf n\u00e0y b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed \u0111\u1ea7u d\u00e3y \\(b\\).<ul> <li>Con tr\u1ecf \\(j\\) n\u00e0y \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n nh\u01b0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(b\\). </li> </ul> </li> <li>Ta s\u1ebd l\u1eb7p l\u1ea1i c\u00f4ng vi\u1ec7c n\u00e0y, cho \u0111\u1ebfn khi \u0111\u01b0a h\u1ebft c\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y \\(a\\) v\u00e0 \\(b\\) v\u00e0o d\u00e3y \\(c\\):<ul> <li>Khi c\u00e1c ph\u1ea7n t\u1eed trong m\u1ed9t d\u00e3y n\u00e0o \u0111\u00f3, d\u00e3y \\(a\\) ho\u1eb7c d\u00e3y \\(b\\), \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\): \u0111\u01b0a l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y c\u00f2n l\u1ea1i v\u00e0o d\u00e3y \\(c\\).</li> <li>Ng\u01b0\u1ee3c l\u1ea1i: <ul> <li>So s\u00e1nh hai ph\u1ea7n t\u1eed \u1edf hai con tr\u1ecf.</li> <li>\u0110\u01b0a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n v\u00e0o d\u00e3y \\(c\\), n\u1ebfu hai ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u01b0 nhau th\u00ec ch\u1ecdn m\u1ed9t trong hai.</li> <li>T\u0103ng v\u1ecb tr\u00ed con tr\u1ecf \u1edf ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb.</li> </ul> </li> </ul> </li> </ul> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, ta h\u00e3y c\u00f9ng xem qua v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> <p>\\(a = [1, 3, 6, 8, 10], b = [2, 6, 7, 12, 14,15]\\)</p> <ul> <li>\u0110\u1eb7t \\(i = 1\\) v\u00e0 \\(j = 1\\). </li> </ul> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}1}, 3, 6, 8, 10]\\)</p> <p>\\(b = [\\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}2}, 6, 7, 12, 14,15]\\)</p> <p>\\(c = []\\)</p> <ul> <li>V\u00ec \\(a[i]&lt;b[j]\\) n\u00ean ta \u0111\u01b0a \\(a[i]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1,\\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}3}, 6, 8, 10]\\)</p> <p>\\(b = [\\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}2}, 6, 7, 12, 14,15]\\)</p> <p>\\(c = [1]\\)</p> <ul> <li>V\u00ec \\(b[j]&lt;a[i]\\) n\u00ean ta \u0111\u01b0a \\(b[j]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(j\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}3}, 6, 8, 10]\\)</p> <p>\\(b = [2, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}6}, 7, 12, 14,15]\\)</p> <p>\\(c = [1, 2]\\)</p> <ul> <li>V\u00ec \\(a[i]&lt;b[j]\\) n\u00ean ta \u0111\u01b0a \\(a[i]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1, 3, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}6}, 8, 10]\\)</p> <p>\\(b = [2, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}6}, 7, 12, 14,15]\\)</p> <p>\\(c = [1, 2, 3]\\)</p> <ul> <li>V\u00ec \\(a[i]=b[j]\\) n\u00ean ta c\u00f3 th\u1ec3 \u0111\u01b0a b\u1ea5t k\u1ef3 m\u1ed9t trong hai ph\u1ea7n t\u1eed. \u1ede \u0111\u00e2y ta \u0111\u01b0a ph\u1ea7n t\u1eed \\(a[i]\\) v\u00e0o \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t.</li> </ul> <p>\\(a = [1, 3, 6, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}8}, 10]\\)</p> <p>\\(b = [2, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}6}, 7, 12, 14,15]\\)</p> <p>\\(c = [1, 2, 3, 6]\\)</p> <ul> <li>V\u00ec \\(b[j]&lt;a[i]\\) n\u00ean ta \u0111\u01b0a \\(b[j]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(j\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1, 3, 6, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}8}, 10]\\)</p> <p>\\(b = [2, 6, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}7}, 12, 14,15]\\)</p> <p>\\(c = [1, 2, 3, 6, 6]\\)</p> <ul> <li>V\u00ec \\(b[j]&lt;a[i]\\) n\u00ean ta \u0111\u01b0a \\(b[j]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(j\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1, 3, 6, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}8}, 10]\\)</p> <p>\\(b = [2, 6, 7, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 14,15]\\)</p> <p>\\(c = [1, 2, 3, 6, 6, 7]\\)</p> <ul> <li>V\u00ec \\(a[i]&lt;b[j]\\) n\u00ean ta \u0111\u01b0a \\(a[i]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1, 3, 6, 8, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}10}]\\)</p> <p>\\(b = [2, 6, 7, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 14,15]\\)</p> <p>\\(c = [1, 2, 3, 6, 6, 7, 8]\\)</p> <ul> <li>V\u00ec \\(a[i]&lt;b[j]\\) n\u00ean ta \u0111\u01b0a \\(a[i]\\) v\u00e0o m\u1ea3ng \\(c\\) v\u00e0 t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t. </li> </ul> <p>\\(a = [1, 3, 6, 8, 10]\\overset{\\underset{\\downarrow}{\\color{red}i}}{ }\\)</p> <p>\\(b = [2, 6, 7, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 14,15]\\)</p> <p>\\(c = [1, 2, 3, 6, 6, 7, 8, 10]\\)</p> <ul> <li>V\u00ec t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y \\(a\\) \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o d\u00e3y \\(c\\) n\u00ean t\u1eeb \u0111\u01b0a l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed ch\u01b0a \u0111\u01b0\u1ee3c ch\u1ecdn trong d\u00e3y \\(b\\) v\u00e0o trong d\u00e3y \\(c\\) \\(c = [1, 2, 3, 6, 6, 7, 8, 10, 12, 14,15]\\)</li> </ul> <p></p> <p>C\u00e0i \u0111\u1eb7t <pre><code>int i = 1, j = 1;\nvector&lt;int&gt; c;\nwhile (i &lt;= n || j &lt;= m){\n    if (j == m + 1 || (i &lt;= n &amp;&amp; a[i] &lt;= b[j]))\n        c.push_back(a[i++]);\n    else \n        c.push_back(b[j++]);\n}\nfor (auto it: c)\n    cout &lt;&lt; it &lt;&lt; \" \";\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1ecb tr\u00ed con tr\u1ecf \\(i\\) lu\u00f4n t\u0103ng v\u00e0 t\u0103ng qu\u00e1 kh\u00f4ng qu\u00e1 \\(n\\) l\u1ea7n, v\u1ecb tr\u00ed con tr\u1ecf \\(j\\) c\u0169ng lu\u00f4n t\u0103ng v\u00e0 t\u0103ng kh\u00f4ng qu\u00e1 \\(m\\) l\u1ea7n. </p> <p>V\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a gi\u1ea3i ph\u00e1p l\u00e0 \\(O(n+m)\\).</p>"},{"location":"algo/basic/two-pointers/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>VNOJ - NKSGAME</p> <p>CODEFORCES - 1251C</p> <p>CODEFORCES - 1036D</p>"},{"location":"algo/basic/two-pointers/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Cho m\u1ed9t m\u1ea3ng s\u1ed1 nguy\u00ean \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed, m\u1ea3ng n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n. H\u00e3y t\u00ecm hai v\u1ecb tr\u00ed kh\u00e1c nhau b\u1ea5t k\u1ef3 sao cho t\u1ed5ng c\u1ee7a hai ph\u1ea7n t\u1eed \u1edf hai v\u1ecb tr\u00ed \u0111\u00f3 c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(x\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(2 \\leq n \\leq 10^6\\) v\u00e0 \\(0 \\leq a_i, x \\leq 10^9\\)</p>"},{"location":"algo/basic/two-pointers/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>H\u00e3y c\u00f9ng xem v\u00ed d\u1ee5 sau \u0111\u00e2y. </p> <p>Cho tr\u01b0\u1edbc m\u1ea3ng s\u1ed1 \\(a\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n v\u00e0 \\(x=16\\):</p> \\[a=[2,5,6,8,10,12,15]\\] <p>L\u00e0m c\u00e1ch n\u00e0o \u0111\u1ec3 c\u00f3 th\u1ec3 t\u00ecm hai v\u1ecb tr\u00ed kh\u00e1c nhau m\u00e0 t\u1ed5ng hai ph\u1ea7n t\u1eed \u1edf hai v\u1ecb tr\u00ed \u0111\u00f3 c\u00f3 t\u1ed5ng l\u00e0 \\(x\\) ?</p> <p>Tr\u01b0\u1edbc ti\u00ean, ta c\u00f3 m\u1ed9t ch\u00fat nh\u1eadn x\u00e9t sau:</p> <ul> <li> <p>\\(a[1]&lt;a[2]&lt;a[3]&lt;a[4]&lt;a[5]&lt;a[6]&lt;a[7]\\) v\u00ec d\u00e3y \\(a\\) t\u0103ng d\u1ea7n.</p> </li> <li> <p>\\(a[1]+a[7]=17&gt;X \\Rightarrow X&lt;a[1]+a[7]&lt;a[2]+a[7]&lt;a[3]+a[7]&lt;a[4]+a[7]&lt;a[5]+a[7]&lt;a[6]+a[7]\\).</p> </li> </ul> <p>C\u00f3 th\u1ec3 th\u1ea5y, t\u1ed5ng c\u1ee7a \\(a[7]\\) v\u1edbi c\u00e1c ph\u1ea7n t\u1eed kh\u00e1c trong d\u00e3y \u0111\u1ec1u l\u1edbn h\u01a1n \\(X\\). V\u00ec th\u1ebf ta kh\u00f4ng quan t\u00e2m \u0111\u1ebfn \\(a[7]\\) n\u1eefa.</p> \\[a=[2,5,6,8,10,12,{\\color{red}15}]\\] <ul> <li>\\(a[1]+a[6]=14&lt;X \\Rightarrow a[1]+a[2]&lt;a[1]+a[3]&lt;a[1]+a[4]&lt;a[1]+a[5]&lt;a[1]+a[6]&lt;X\\).</li> </ul> <p>C\u00f3 th\u1ec3 th\u1ea5y, t\u1ed5ng c\u1ee7a \\(a[1]\\) v\u1edbi c\u00e1c ph\u1ea7n t\u1eed kh\u00e1c trong c\u00e1c ph\u1ea7n t\u1eed ta quan t\u00e2m \u0111\u1ec1u nh\u1ecf h\u01a1n \\(x\\). V\u00ec th\u1ebf ta kh\u00f4ng quan t\u00e2m \u0111\u1ebfn \\(a[1]\\) n\u1eefa.</p> \\[a=[{\\color{red}2},5,6,8,10,12,{\\color{red}15}]\\] <ul> <li>\\(a[2]+a[6]=17&gt;X \\Rightarrow X&lt;a[2]+a[6]&lt;a[3]+a[6]&lt;a[4]+a[6]&lt;a[5]+a[6]\\).</li> </ul> <p>C\u00f3 th\u1ec3 th\u1ea5y, t\u1ed5ng c\u1ee7a \\(a[6]\\) v\u1edbi c\u00e1c ph\u1ea7n t\u1eed kh\u00e1c trong c\u00e1c ph\u1ea7n t\u1eed ta quan t\u00e2m \u0111\u1ec1u l\u1edbn h\u01a1n \\(x\\). V\u00ec th\u1ebf ta kh\u00f4ng quan t\u00e2m \u0111\u1ebfn \\(a[6]\\) n\u1eefa.</p> \\[a=[{\\color{red}2},5,6,8,10,{\\color{red}12},{\\color{red}15}]\\] <p>Nh\u01b0 v\u1eady, t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m b\u1ea5t k\u1ef3, nh\u1eefng ph\u1ea7n t\u1eed ch\u00fang ta c\u1ea7n quan t\u00e2m \u0111\u1ebfn s\u1ebd l\u00e0 c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([i,j]\\) n\u00e0o \u0111\u00f3.</p> <p>Ta c\u00f3 m\u1ed9t s\u1ed1 nh\u1eadn x\u00e9t sau:</p> <ul> <li> <p>N\u1ebfu \\(i=j\\), trong m\u1ea3ng \\(A\\) kh\u00f4ng t\u1ed3n t\u1ea1i hai v\u1ecb tr\u00ed kh\u00e1c nhau m\u00e0 t\u1ed5ng hai ph\u1ea7n t\u1eed \u1edf \u0111\u00f3 c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(X\\).</p> </li> <li> <p>Ng\u01b0\u1ee3c l\u1ea1i:</p> </li> <li> <p>N\u1ebfu \\(a[i]+a[j]=X\\), ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c hai v\u1ecb tr\u00ed c\u1ea7n t\u00ecm (\\(i\\) v\u00e0 \\(j\\)).</p> </li> <li> <p>N\u1ebfu \\(a[i]+a[j]&lt;X\\), kh\u00f4ng quan t\u00e2m \u0111\u1ebfn \\(a[i]\\) n\u1eefa v\u00e0 c\u00e1c ph\u1ea7n t\u1eed ch\u00fang ta c\u1ea7n quan t\u00e2m \u0111\u00f3 l\u00e0 c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([i+1,j]\\).</p> </li> <li> <p>N\u1ebfu \\(a[i]+a[j]&gt;X\\), kh\u00f4ng quan t\u00e2m \u0111\u1ebfn \\(a[j]\\) n\u1eefa v\u00e0 c\u00e1c ph\u1ea7n t\u1eed ch\u00fang ta c\u1ea7n quan t\u00e2m \u0111\u00f3 l\u00e0 c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([i,j-1]\\).</p> </li> </ul>"},{"location":"algo/basic/two-pointers/#giai-phap_1","title":"Gi\u1ea3i ph\u00e1p","text":"<p>T\u1eeb nh\u1eefng ph\u00e2n t\u00edch v\u1eeba r\u1ed3i ta c\u00f3 gi\u1ea3i ph\u00e1p s\u1eed d\u1ee5ng hai con tr\u1ecf nh\u01b0 sau:</p> <ul> <li> <p>M\u1ed9t con tr\u1ecf \\((i)\\) \u0111\u01b0\u1ee3c \u0111\u1eb7t \u1edf \u0111\u1ea7u m\u1ea3ng \\(A\\), con tr\u1ecf c\u00f2n l\u1ea1i \\((j)\\) \u0111\u01b0\u1ee3c \u0111\u1eb7t \u1edf cu\u1ed1i m\u1ea3ng \\(A\\).</p> </li> <li> <p>N\u1ebfu t\u1ed5ng c\u1ee7a hai ph\u1ea7n t\u1eed \u1edf hai v\u1ecb tr\u00ed con tr\u1ecf </p> </li> <li> <p>Nh\u1ecf h\u01a1n \\(X\\): t\u0103ng v\u1ecb tr\u00ed con tr\u1ecf \\(i\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb.</p> </li> <li> <p>L\u1edbn h\u01a1n \\(X\\): gi\u1ea3m v\u1ecb tr\u00ed con tr\u1ecf \\(j\\) \u0111i m\u1ed9t \u0111\u01a1n v\u1ecb.</p> </li> <li> <p>Ti\u1ebfp t\u1ee5c di chuy\u1ec3n cho \u0111\u1ebfn khi hai con tr\u1ecf g\u1eb7p nhau.</p> </li> <li> <p>Khi con tr\u1ecf ch\u01b0a g\u1eb7p nhau m\u00e0 t\u1ed5ng \u1edf hai v\u1ecb tr\u00ed con tr\u1ecf c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(X\\) th\u00ec ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c hai v\u1ecb tr\u00ed c\u1ea7n t\u00ecm (\\(i\\) v\u00e0 \\(j\\)), k\u1ebft th\u00fac ch\u01b0\u01a1ng tr\u00ecnh.</p> </li> </ul> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, ta h\u00e3y c\u00f9ng xem qua m\u1ed9t s\u1ed1 v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> <p>V\u00ed d\u1ee5 1: \\(a = [2, 5, 6, 8, 10, 12, 15]\\) v\u00e0 \\(x = 16\\).</p> <ul> <li>\u0110\u1eb7t \\(i=1\\) v\u00e0 \\(j=N\\). </li> </ul> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}2}, 5, 6, 8, 10, 12,  \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}15}]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=2+15=17&gt;x\\) n\u00ean gi\u1ea3m v\u1ecb tr\u00ed \\(j\\) \u0111i m\u1ed9t \u0111\u01a1n v\u1ecb.</li> </ul> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}2}, 5, 6, 8, 10, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=2+12=14&lt;x\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb.</li> </ul> <p>\\(a = [2, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}5}, 6, 8, 10, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=5+12=17&gt;x\\) n\u00ean gi\u1ea3m v\u1ecb tr\u00ed \\(j\\) \u0111i m\u1ed9t \u0111\u01a1n v\u1ecb.</li> </ul> <p>\\(a = [2, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}5}, 6, 8, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}10}, 12, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=5+10&lt;x\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb.</li> </ul> <p>\\(a = [2, 5, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}6}, 8, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}10}, 12, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=6+10=x\\) n\u00ean hai v\u1ecb tr\u00ed c\u1ea7n t\u00ecm l\u00e0 hai v\u1ecb tr\u00ed \\(i\\) v\u00e0 \\(j\\).</li> </ul> <p></p> <p>V\u00ed d\u1ee5 2: \\(a = [2, 3, 7, 8, 10, 12, 15]\\) v\u00e0 \\(x = 16\\).</p> <ul> <li>\u0110\u1eb7t \\(i=1\\) v\u00e0 \\(j=N\\). </li> </ul> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}2}, 3, 7, 8, 10, 12,  \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}15}]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=5+12=17&gt;x\\) n\u00ean gi\u1ea3m v\u1ecb tr\u00ed \\(j\\) \u0111i m\u1ed9t \u0111\u01a1n v\u1ecb. </li> </ul> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}2}, 3, 7, 8, 10,  \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=2+12=14&lt;x\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb. </li> </ul> <p>\\(a = [2, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}3}, 7, 8, 10,  \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=3+12=15&lt;x\\) t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb. </li> </ul> <p>\\(a = [2, 3, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}7}, 8, 10,  \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}12}, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=7+12=19&gt;x\\) gi\u1ea3m v\u1ecb tr\u00ed \\(j\\) \u0111i m\u1ed9t \u0111\u01a1n v\u1ecb. </li> </ul> <p>\\(a = [2, 3, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}7}, 8, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}10}, 12, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=7+10=17&gt;x\\) gi\u1ea3m v\u1ecb tr\u00ed \\(j\\) \u0111i m\u1ed9t \u0111\u01a1n v\u1ecb. </li> </ul> <p>\\(a = [2, 3, \\overset{\\underset{\\downarrow}{\\color{red}i}}{\\color{red}7}, \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{blue}8}, 10, 12, 15]\\)</p> <ul> <li>V\u00ec \\(a[i]+a[j]=7+8=15&lt;x\\) t\u0103ng v\u1ecb tr\u00ed \\(i\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb. </li> </ul> <p>\\(a = [2, 3, 7, \\overset{\\underset{\\downarrow}{\\color{red}i}}{ \\underset{\\overset{\\uparrow}{\\color{blue}j}}{\\color{purple}8}}, 10, 12, 15]\\)</p> <ul> <li>V\u00ec \\(i=j\\) n\u00ean kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c hai v\u1ecb tr\u00ed c\u1ea7n t\u00ecm.</li> </ul> <p></p> <p>C\u00e0i \u0111\u1eb7t <pre><code>int i = 1, j = N;\nwhile (i &lt; j) {\n    if (a[i] + a[j] == x) {\n        cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; j;\n        return 0;\n    }\n    if (a[i] + a[j] &lt; x)\n        i += 1;\n    else\n        j -= 1;\n}\ncout &lt;&lt; \"No solution\";\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1ecb tr\u00ed con tr\u1ecf \\(i\\) lu\u00f4n t\u0103ng, v\u1ecb tr\u00ed con tr\u1ecf \\(j\\) th\u00ec lu\u00f4n gi\u1ea3m. </p> <p>H\u01a1n n\u1eefa, s\u1ef1 thay \u0111\u1ed5i v\u1ecb tr\u00ed hai con tr\u1ecf n\u00e0y s\u1ebd d\u1eebng l\u1ea1i khi t\u1ed5ng hai ph\u1ea7n t\u1eed \u1edf hai v\u1ecb tr\u00ed con tr\u1ecf c\u00f3 t\u1ed5ng l\u00e0 \\(X\\) hay khi v\u1ecb tr\u00ed \\(i\\) b\u1eb1ng v\u1ecb tr\u00ed \\(j\\). </p> <p>V\u00ec th\u1ebf, vi\u1ec7c thay \u0111\u1ed5i v\u1ecb tr\u00ed hai con tr\u1ecf s\u1ebd kh\u00f4ng qu\u00e1 \\(n\\) l\u1ea7n, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a gi\u1ea3i ph\u00e1p l\u00e0 \\(O(n)\\).</p>"},{"location":"algo/basic/two-pointers/#luyen-tap_1","title":"Luy\u1ec7n t\u1eadp","text":"<p>LQDOJ - FINDPAIR </p> <p>LQDOJ - CNTPAIR02 </p> <p>VNOJ - NDCCARD </p> <p>VNOJ - TWOSUM</p>"},{"location":"algo/basic/two-pointers/#bai-toan-3","title":"B\u00e0i to\u00e1n 3","text":"<p>Cho d\u00e3y s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed. H\u00e3y t\u00ecm \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n con d\u00e0i nh\u1ea5t trong d\u00e3y sao cho t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n n\u00e0y kh\u00f4ng qu\u00e1 \\(s\\).</p> <p>D\u1eef li\u1ec7u \u0111\u1ea3m b\u1ea3o c\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y \\(a\\) \u0111\u1ec1u c\u00f3 gi\u00e1 tr\u1ecb kh\u00f4ng qu\u00e1 \\(s\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(1\\leq n \\leq 10^6\\), \\(1 \\leq a_i \\leq 10^9\\) v\u00e0 \\(s \\leq 10^{18}\\).</p>"},{"location":"algo/basic/two-pointers/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ec3 d\u1ec5 d\u00e0ng ph\u00e2n t\u00edch, ta t\u1ea1m g\u1ecdi </p> <ul> <li> <p>\\(sum(l,r)\\) l\u00e0 t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([l,r]\\).</p> </li> <li> <p>M\u1ed9t \u0111o\u1ea1n con \\([l,r]\\) l\u00e0 \u0111o\u1ea1n con \"t\u1ed1t\" n\u1ebfu \\(sum(l,r) \\leq s\\)</p> </li> </ul> <p>Qua \u0111\u00e2y, b\u00e0i to\u00e1n c\u1ee7a ch\u00fang ta s\u1ebd l\u00e0 t\u00ecm \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t.</p> <p>V\u00ec d\u00e3y \\(a\\) l\u00e0 m\u1ed9t d\u00e3y s\u1ed1 nguy\u00ean d\u01b0\u01a1ng cho n\u00ean</p> <ul> <li> <p>\\(sum(1,r)&gt;sum(2,r)&gt;...&gt;sum(r-1,r)&gt;sum(r,r)\\).</p> </li> <li> <p>N\u1ebfu \u0111o\u1ea1n con \\([l,r]\\) l\u00e0 \u0111o\u1ea1n con \"t\u1ed1t\" th\u00ec v\u1edbi m\u1ecdi \\(x\\geq l\\), \u0111o\u1ea1n \\([x,r]\\) l\u00e0 \u0111o\u1ea1n con \"t\u1ed1t\".</p> </li> <li> <p>N\u1ebfu \u0111o\u1ea1n con \\([l,r]\\) kh\u00f4ng l\u00e0 \u0111o\u1ea1n con \"t\u1ed1t\" th\u00ec v\u1edbi m\u1ecdi \\(x \\leq l\\), \u0111o\u1ea1n \\([x,r]\\) kh\u00f4ng l\u00e0 \u0111o\u1ea1n con \"t\u1ed1t\".</p> </li> </ul> <p>V\u1edbi \\(r\\) l\u00e0 m\u1ed9t v\u1ecb tr\u00ed b\u1ea5t k\u1ef3, n\u1ebfu nh\u01b0 \\(l\\) l\u00e0 v\u1ecb tr\u00ed nh\u1ecf nh\u1ea5t sao cho \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n \"t\u1ed1t\" th\u00ec</p> <ul> <li> <p>m\u1ecdi \\(x \\geq l\\) th\u00ec \u0111o\u1ea1n con \\([x,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n \"t\u1ed1t\".</p> </li> <li> <p>m\u1ecdi \\(x &lt; l\\) th\u00ec \u0111o\u1ea1n con \\([x,r]\\) kh\u00f4ng l\u00e0 m\u1ed9t \u0111o\u1ea1n \"t\u1ed1t\".</p> </li> <li> <p>\u0111o\u1ea1n con \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t trong c\u00e1c \u0111o\u1ea1n con \"t\u1ed1t\" c\u00f3 v\u1ecb tr\u00ed k\u1ebft th\u00fac t\u1ea1i \\(r\\).</p> </li> </ul> <p>T\u1eeb \u0111\u00f3, v\u1edbi m\u1ed7i \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\), n\u1ebfu ta x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed \\(l\\), ta c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t c\u1ee7a d\u00e3y \\(a\\).</p> <p>H\u00e3y c\u00f9ng nh\u1eadn x\u00e9t v\u1ecb tr\u00ed c\u1ee7a \\(l\\) v\u1edbi m\u1ed7i \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) qua v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> <p>Cho tr\u01b0\u1edbc d\u00e3y \\(a = [2, 6, 5, 3, 6, 8, 9]\\) v\u00e0 \\(s=20\\)</p> <ul> <li> <p>\\(r=1 \\rightarrow l=1\\)</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{{\\color{red}l},{\\color{blue}r}}}{\\color{green}2}, 6, 5, 3, 6, 8, 9]\\)</p> </li> <li> <p>\\(sum(l,r)=2\\)</p> </li> <li> <p>\\(r=2 \\rightarrow l=1\\)</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}2}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}6}, 5, 3, 6, 8, 9]\\)</p> </li> <li> <p>\\(sum(l,r)=8\\)</p> </li> <li> <p>\\(r=3 \\rightarrow l=1\\)</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}2}, {\\color{green}6},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}5}, 3, 6, 8, 9]\\)</p> </li> <li> <p>\\(sum(l,r)=13\\)</p> </li> <li> <p>\\(r=4 \\rightarrow l=1\\)</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}2}, {\\color{green}6}, {\\color{green}5},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}3}, 6, 8, 9]\\)</p> </li> <li> <p>\\(sum(l,r)=16\\)</p> </li> <li> <p>\\(r=5 \\rightarrow l=2\\)</p> </li> <li> <p>\\(a = [2, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}6}, {\\color{green}5}, {\\color{green}3},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}6}, 8, 9]\\)</p> </li> <li> <p>\\(sum(l,r)=20\\)</p> </li> <li> <p>\\(r=6 \\rightarrow l=4\\)</p> </li> <li> <p>\\(a = [2, 6, 5, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}3}, {\\color{green}6},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}8}, 9]\\)</p> </li> <li> <p>\\(sum(l,r)=17\\)</p> </li> <li> <p>\\(r=7 \\rightarrow l=6\\)</p> </li> <li> <p>\\(a = [2, 6, 5, 3, 6, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}8}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}9}]\\)</p> </li> <li> <p>\\(sum(l,r)=17\\)</p> </li> </ul> \\(r\\) \\(l\\) \u0110\u1ed9 d\u00e0i \u0111o\u1ea1n con \\(1\\) \\(1\\) \\(1\\) \\(2\\) \\(1\\) \\(2\\) \\(3\\) \\(1\\) \\(3\\) \\(4\\) \\(1\\) \\(4\\) \\(5\\) \\(2\\) \\(4\\) \\(6\\) \\(4\\) \\(3\\) \\(7\\) \\(6\\) \\(2\\) <p>\u0110\u1ed9 d\u00e0i c\u1ee7a \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t c\u1ee7a d\u00e3y l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a \u0111\u1ed9 d\u00e0i c\u00e1c \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t v\u1edbi v\u1ecb tr\u00ed k\u1ebft th\u00fac t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\).</p> <p>\u1ede \u0111\u00e2y, \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t c\u1ee7a d\u00e3y l\u00e0 \\(4\\).</p> <p>Qua v\u00ed d\u1ee5 v\u1eeba r\u1ed3i, ta th\u1ea5y r\u1eb1ng, v\u1ecb tr\u00ed \\(l\\) \u0111\u1ed1i v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) c\u00f3 gi\u00e1 tr\u1ecb kh\u00f4ng gi\u1ea3m.</p> <p>Th\u1eadt v\u1eady, v\u1edbi m\u1ecdi \\(x&lt;l\\) th\u00ec \\(sum(x,r)&gt;s \\Rightarrow sum(x,r+1)&gt;s\\), v\u00ec th\u1ebf gi\u00e1 tr\u1ecb \\(l\\) \u0111\u1ed1i v\u1edbi \\(r+1\\) ph\u1ea3i kh\u00f4ng qu\u00e1 gi\u00e1 tr\u1ecb \\(l\\) \u0111\u1ed1i v\u1edbi \\(r\\).</p> <p>H\u01a1n n\u1eefa v\u00ec c\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y \\(a\\) \u0111\u1ec1u c\u00f3 gi\u00e1 tr\u1ecb kh\u00f4ng qu\u00e1 \\(s\\) cho n\u00ean lu\u00f4n t\u1ed3n t\u1ea1i v\u1ecb tr\u00ed \\(l \\leq r\\) sao cho \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n \"t\u1ed1t\". </p>"},{"location":"algo/basic/two-pointers/#giai-phap_2","title":"Gi\u1ea3i ph\u00e1p","text":"<p>V\u1edbi nh\u1eefng ph\u00e2n t\u00edch nh\u01b0 tr\u00ean, ta c\u00f3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n v\u1edbi ph\u01b0\u01a1ng ph\u00e1p hai con tr\u1ecf nh\u01b0 sau:</p> <ul> <li> <p>Hai con tr\u1ecf \\(l\\) v\u00e0 \\(r\\) s\u1ebd \u0111\u1eb7t \u1edf v\u1ecb tr\u00ed \\(1\\).</p> </li> <li> <p>Hai con tr\u1ecf n\u00e0y \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n nh\u01b0 hai v\u1ecb tr\u00ed \\(l\\), \\(r\\) nh\u01b0 \u1edf tr\u00ean ph\u1ea7n ph\u00e2n t\u00edch. </p> </li> <li> <p>Di chuy\u1ec3n l\u1ea7n l\u01b0\u1ee3t con tr\u1ecf \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\).</p> </li> <li> <p>Sau m\u1ed7i l\u1ea7n di chuy\u1ec3n con tr\u1ecf \\(r\\), n\u1ebfu</p> </li> <li> <p>\\(sum(l,r) \\leq s\\): gi\u1eef nguy\u00ean v\u1ecb tr\u00ed con tr\u1ecf \\(l\\).</p> </li> <li> <p>\\(sum(l,r) &gt; s\\): t\u0103ng d\u1ea7n v\u1ecb tr\u00ed con tr\u1ecf \\(l\\) cho \u0111\u1ebfn khi \\(sum(l,r) \\leq s\\).</p> </li> <li> <p>Hi\u1ec7n t\u1ea1i v\u1edbi v\u1ecb tr\u00ed con tr\u1ecf \\(l\\) v\u00e0 \\(r\\), ta bi\u1ebft \u0111o\u1ea1n \"t\u1ed1t\" d\u00e0i nh\u1ea5t v\u1edbi v\u1ecb tr\u00ed k\u1ebft th\u00fac t\u1ea1i \\(r\\) l\u00e0 \u0111o\u1ea1n \\([l,r]\\).</p> </li> <li> <p>\u0110\u1ed9 d\u00e0i \u0111o\u1ea1n con \"t\u1ed1t\" d\u00e0i nh\u1ea5t ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a c\u00e1c \u0111o\u1ea1n \"t\u1ed1t\" d\u00e0i nh\u1ea5t v\u1edbi v\u1ecb tr\u00ed k\u1ebft th\u00fac t\u1ea1i \\(r\\), v\u1edbi m\u1ed7i \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\).</p> </li> </ul> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, ta h\u00e3y c\u00f9ng xem qua m\u1ed9t s\u1ed1 v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> <p>\\(a = [2, 6, 5, 3, 6, 8, 9]\\) v\u00e0 \\(s=20\\)</p> <ul> <li> <p>S\u1eed d\u1ee5ng bi\u1ebfn \\(ans\\) \u0111\u1ec3 l\u01b0u l\u1ea1i gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n \"t\u1ed1t\" c\u00f3 v\u1ecb tr\u00ed k\u1ebft th\u00fac t\u1ea1i \\(r\\), v\u1edbi \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\).</p> </li> <li> <p>\u0110\u1eb7t \\(l=1\\) v\u00e0 \\(r=1\\)</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{{\\color{red}l},{\\color{blue}r}}}{\\color{green}2}, 6, 5, 3, 6, 8, 9]\\)</p> </li> <li> <p>v\u00ec \\(a[1] \\leq s\\) n\u00ean \u0111o\u1ea1n \\([1,1]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n \"t\u1ed1t\".</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(r\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}2}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}6}, 5, 3, 6, 8, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 8 \\leq s\\) n\u00ean \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n t\u1ed1t.</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(r\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}2}, {\\color{green}6},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}5}, 3, 6, 8, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 13 \\leq s\\) n\u00ean \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n t\u1ed1t.</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(r\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}2}, {\\color{green}6}, {\\color{green}5},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}3}, 6, 8, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 16 \\leq s\\) n\u00ean \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n t\u1ed1t.</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(r\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [\\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{orange}2}, {\\color{orange}6}, {\\color{orange}5}, {\\color{orange}3}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{orange}6}, 8, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 22 &gt; s\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(l\\).</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(l\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}6}, {\\color{green}5}, {\\color{green}3},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}6}, 8, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 20 \\leq s\\) n\u00ean \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n t\u1ed1t.</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(r\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{orange}6}, {\\color{orange}5}, {\\color{orange}3}, {\\color{orange}6},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{orange}8}, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 28 &gt; s\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(l\\).</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(l\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, 6, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{orange}5}, {\\color{orange}3}, {\\color{orange}6},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{orange}8}, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 22 &gt; s\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(l\\).</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(l\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, 6, 5, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}3}, {\\color{green}6},  \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}8}, 9]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 17 \\leq s\\) n\u00ean \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n t\u1ed1t.</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(r\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, 6, 5, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{orange}3}, {\\color{orange}6}, {\\color{orange}8}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{orange}9}]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 26 &gt; s\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(l\\).</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(l\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, 6, 5, 3, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{orange}6}, {\\color{orange}8}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{orange}9}]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 23 &gt; s\\) n\u00ean t\u0103ng v\u1ecb tr\u00ed \\(l\\).</p> </li> <li> <p>T\u0103ng v\u1ecb tr\u00ed \\(l\\) l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb</p> </li> <li> <p>\\(a = [2, 6, 5, 3, 6, \\overset{\\underset{\\downarrow}{\\color{red}l}}{\\color{green}8}, \\overset{\\underset{\\downarrow}{\\color{blue}r}}{\\color{green}9}]\\)</p> </li> <li> <p>v\u00ec \\(sum(l,r) = 17 \\leq s\\) n\u00ean \u0111o\u1ea1n \\([l,r]\\) l\u00e0 m\u1ed9t \u0111o\u1ea1n t\u1ed1t.</p> </li> <li> <p>\\(ans = max(ans, r - l + 1)\\)</p> </li> </ul> <p></p> <p>C\u00e0i \u0111\u1eb7t</p> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) trong khi \\(l\\) v\u00e0 \\(r\\) \u0111ang di \u0111\u1ed9ng, ta s\u1ebd s\u1eed d\u1ee5ng bi\u1ebfn \\(sum\\) \u0111\u1ec3 l\u01b0u l\u1ea1i t\u1ed5ng c\u1ee7a \u0111o\u1ea1n \\([l,r]\\) hi\u1ec7n t\u1ea1i. </p> <p>Sau khi di chuy\u1ec3n \\(r\\) sang ph\u1ea3i, bi\u1ebfn \\(sum\\) s\u1ebd c\u1ed9ng th\u00eam gi\u00e1 tr\u1ecb \\(a[r]\\). </p> <p>Tr\u01b0\u1edbc khi di chuy\u1ec3n \\(l\\) sang ph\u1ea3i, bi\u1ebfn \\(sum\\) s\u1ebd tr\u1eeb \u0111i gi\u00e1 tr\u1ecb \\(a[l]\\).</p> <p><pre><code>int ans = 0, sum = 0;\nfor (int l = 1, r = 1; r &lt;= n; r++) {\n    sum += a[r];\n    while (sum &gt; s) {\n      sum -= a[l];\n      l++;\n    }\n    ans = max(ans, r - l + 1);\n}\ncout &lt;&lt; ans;\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1ecb tr\u00ed con tr\u1ecf \\(r\\) lu\u00f4n t\u0103ng, v\u1ecb tr\u00ed con tr\u1ecf \\(l\\) lu\u00f4n t\u0103ng v\u00e0 lu\u00f4n t\u0103ng kh\u00f4ng gi\u00e1 tr\u1ecb \\(r\\). </p> <p>H\u01a1n n\u1eefa, m\u1ed7i v\u1ecb tr\u00ed \\(l\\) v\u00e0 \\(r\\) t\u0103ng kh\u00f4ng qu\u00e1 \\(n\\) l\u1ea7n. </p> <p>V\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a gi\u1ea3i ph\u00e1p l\u00e0 \\(O(n)\\).</p>"},{"location":"algo/basic/two-pointers/#luyen-tap_2","title":"Luy\u1ec7n t\u1eadp","text":"<p>VNOJ - SOPENP</p> <p>VNOJ - PRODUCT</p> <p>VNOJ - KRECT</p> <p>VNOJ - VMQUABEO</p>"},{"location":"algo/basic/two-pointers/#bai-toan-4","title":"B\u00e0i to\u00e1n 4","text":"<p>B\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t d\u00e3y s\u1ed1 nguy\u00ean nh\u01b0 sau:</p> <ul> <li> <p>\\(x_0=1\\)</p> </li> <li> <p>\\(x_{i+1} = (a \\cdot x_i + x_i \\ div \\ b) \\  mod \\ c\\).</p> </li> </ul> <p>T\u00ecm \\(n\\) nh\u1ecf nh\u1ea5t sao cho t\u1ed3n t\u1ea1i \\(m &lt; n\\) v\u00e0 \\(x_m = x_n\\). D\u1eef li\u1ec7u \u0111\u1ea3m b\u1ea3o \\(n\\) kh\u00f4ng qu\u00e1 \\(2 \\cdot 10^7\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(1 \\leq a \\leq 10^4\\) v\u00e0 \\(1 \\leq b,c \\leq 10^{14}\\).</p>"},{"location":"algo/basic/two-pointers/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ec3 d\u1ec5 d\u00e0ng ph\u00e2n t\u00edch ta \u0111\u1ecbnh ngh\u0129a h\u00e0m \\(f\\) nh\u01b0 sau:</p> \\[f(x) = (a \\cdot x + x \\ div \\ b) \\  mod \\ c\\] <p>D\u00e3y s\u1ed1 c\u1ee7a ch\u00fang ta s\u1ebd c\u00f3 d\u1ea1ng</p> \\[x_0 = 1, x_1=f(x_0), x_2=f(x_1),...,x_i=f(x_{i-1}),...\\] <p>V\u1edbi ph\u00e9p chia l\u1ea5y d\u01b0 cho \\(c\\) th\u00ec m\u1ecdi \\(i &gt; 0\\), gi\u00e1 tr\u1ecb c\u1ee7a \\(x_i\\) s\u1ebd c\u00f3 gi\u00e1 tr\u1ecb n\u1eb1m trong kho\u1ea3ng $[0, c-1] $. </p> <p>V\u00ec th\u1ebf, d\u00e3y s\u1ed1 v\u1edbi v\u00f4 h\u1ea1n ph\u1ea7n t\u1eed n\u00e0y s\u1ebd t\u1ed3n t\u1ea1i \\(x_m = x_n\\) v\u1edbi \\(m &lt; n\\). (theo nguy\u00ean l\u00fd Dirichlet) </p> <p>C\u00f3 th\u1ec3 th\u1ea5y, khi d\u00e3y t\u1ed3n t\u1ea1i \\(x_m = x_n\\), d\u00e3y s\u1ebd xu\u1ea5t hi\u1ec7n chu k\u1ef3. C\u1ee5 th\u1ec3 nh\u01b0 sau:</p> <p>G\u1ecdi \\(n\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t th\u1ecfa m\u00e3n t\u1ed3n t\u1ea1i \\(m &lt; n\\) sao cho \\(x_m=x_n\\).</p> \\[x_0,x_1, x_2,...,\\underset{\\uparrow}{x_m},x_{m+1},...,x_{n-1},\\underset{\\uparrow}{x_n},...\\] <p>Khi \u0111\u00f3, d\u00e3y s\u1ebd c\u00f3 chu k\u1ef3 l\u1eb7p l\u1ea1i c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(x_m\\) \u0111\u1ebfn \\(x_{n-1}\\)</p> \\[{\\color{blue}\\underbrace{\\color{black}x_0,x_1,...,x_{m-1}}_{}},{\\color{red}\\underbrace{\\color{black}x_m,x_{m+1},...,x_{n-1}}_{}}, {\\color{red}\\underbrace{\\color{black}x_m,x_{m+1},...,x_{n-1}}_{}}, {\\color{red}\\underbrace{\\color{black}x_m,x_{m+1},...,x_{n-1}}_{}},...\\] <p>D\u00e3y s\u1ed1 c\u00f3 th\u1ec3 bi\u1ec5u di\u1ec5n nh\u01b0 h\u00ecnh sau \u0111\u00e2y:</p> <p></p> <p>B\u00e0i to\u00e1n c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft n\u1ebfu ch\u00fang ta ph\u1ea7n t\u1eed b\u1eaft \u0111\u1ea7u chu k\u1ef3 (\\(x_{\\mu}\\)) v\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a chu k\u1ef3 \\(\\lambda\\).</p> <p>C\u1ee5 th\u1ec3, xem v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> \\[a = 8, b = 2, c = 31\\] <p>Ta c\u00f3 d\u00e3y s\u1ed1 </p> \\[{\\color{blue}\\underbrace{\\color{black}1, 8, 6, 20, 15}_{}},{\\color{red}\\underbrace{\\color{black}3, 25, 26, 4}_{}}, {\\color{red}\\underbrace{\\color{black}3, 25, 26, 4}_{}}, {\\color{red}\\underbrace{\\color{black}3, 25, 26, 4}_{}},...\\] <p>Gi\u00e1 tr\u1ecb \\(n\\) c\u1ea7n t\u00ecm c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(n = 9\\).</p> <p>Ta c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb n\u00e0y b\u1eb1ng c\u00e1ch x\u00e1c \u0111\u1ecbnh</p> <ul> <li> <p>ph\u1ea7n t\u1eed b\u1eaft \u0111\u1ea7u chu k\u1ef3 \\(x_{\\mu}\\).</p> </li> <li> <p>\u0111\u1ed9 d\u00e0i chu k\u1ef3 \\(\\lambda\\).</p> </li> </ul> <p>\u1ede \u0111\u00e2y, ph\u1ea7n t\u1eed b\u1eaft \u0111\u1ea7u chu k\u1ef3 l\u00e0 \\(x_5\\) v\u00e0 \u0111\u1ed9 d\u00e0i chu k\u1ef3 l\u00e0 \\(4\\).</p> <p>Gi\u00e1 tr\u1ecb \\(n = \\mu + \\lambda = 5 + 4 = 9\\).</p>"},{"location":"algo/basic/two-pointers/#giai-phap_3","title":"Gi\u1ea3i ph\u00e1p","text":"<p>\u0110\u1ec3 x\u00e1c \u0111\u1ecbnh gi\u00e1 tr\u1ecb \\(\\mu\\) v\u00e0 \\(\\lambda\\), ta s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Floyd's tortoise and hare</p>"},{"location":"algo/basic/two-pointers/#rua-va-tho","title":"R\u00f9a v\u00e0 Th\u1ecf","text":"<p>Kh\u1edfi t\u1ea1o hai con tr\u1ecf, \\(toroise\\) (r\u00f9a) v\u00e0 \\(hare\\) (th\u1ecf).</p> <p>T\u1ea1i m\u1ed7i th\u1eddi \u0111i\u1ec3m, ta t\u1ecbnh ti\u1ebfn hai con tr\u1ecf n\u00e0y nh\u01b0 sau:</p> <ul> <li> <p>Tortoise (r\u00f9a): t\u1ecbnh ti\u1ebfn m\u1ed9t \"b\u01b0\u1edbc\"</p> </li> <li> <p>N\u1ebfu hi\u1ec7n t\u1ea1i con tr\u1ecf \\(tortoise\\) \u0111ang l\u00e0 \\(x\\), n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c t\u1ecbnh ti\u1ebfn \u0111\u1ebfn \\(f(x)\\).</p> </li> <li> <p>\\(x_0 \\rightarrow x_1 \\rightarrow x_2 \\rightarrow x_3 \\rightarrow x_4 \\rightarrow ...\\)</p> </li> <li> <p>V\u00ec d\u00e3y s\u1ed1 c\u1ee7a ch\u00fang ta c\u00f3 chu k\u1ef3 n\u00ean ta c\u00f3 c\u00f4ng th\u1ee9c t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a con tr\u1ecf \\(tortoise\\) sau \\(t\\) l\u1ea7n t\u1ecbnh ti\u1ebfn:</p> </li> <li> <p>\\(t &lt; \\mu\\): \\(x_t\\)</p> </li> <li> <p>\\(t \\geq \\mu\\): \\(x_{\\mu+(t-\\mu) \\ mod \\ \\lambda}\\)</p> </li> <li> <p>Hare (th\u1ecf): t\u1ecbnh ti\u1ebfn hai \"b\u01b0\u1edbc\"</p> </li> <li> <p>N\u1ebfu hi\u1ec7n t\u1ea1i con tr\u1ecf \\(hare\\) \u0111ang l\u00e0 \\(x\\), n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c t\u1ecbnh ti\u1ebfn \u0111\u1ebfn \\(f(f(x))\\).</p> </li> <li> <p>\\(x_0 \\rightarrow x_2 \\rightarrow x_4 \\rightarrow x_6 \\rightarrow x_8 \\rightarrow ...\\)</p> </li> <li> <p>V\u00ec d\u00e3y s\u1ed1 c\u1ee7a ch\u00fang ta c\u00f3 chu k\u1ef3 n\u00ean ta c\u00f3 c\u00f4ng th\u1ee9c t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a con tr\u1ecf \\(hare\\) sau \\(t\\) l\u1ea7n t\u1ecbnh ti\u1ebfn:</p> </li> <li> <p>\\(2t &lt; \\mu\\): \\(x_{2t}\\)</p> </li> <li> <p>\\(2t \\geq \\mu\\): \\(x_{\\mu+(2t-\\mu) \\ mod \\ \\lambda}\\)</p> </li> </ul> <p>Ngo\u00e0i l\u00fac ban \u0111\u1ea7u, hai con tr\u1ecf \\(tortoise\\) v\u00e0 \\(hare\\) s\u1ebd lu\u00f4n g\u1eb7p nhau t\u1ea1i th\u1eddi \u0111i\u1ec3m n\u00e0o \u0111\u00f3. Th\u1eadt v\u1eady:</p> <ul> <li> <p>\\(2t &lt; \\mu\\): </p> </li> <li> <p>Sau \\(t\\) l\u1ea7n t\u1ecbnh ti\u1ebfn, \\(tortoise\\) = \\(x_t\\) v\u00e0 \\(hare\\) = \\(x_{2t}\\). </p> </li> <li> <p>Tuy nhi\u00ean, \\(\\mu + \\lambda\\) m\u1edbi b\u1eaft \u0111\u1ea7u l\u1ea1i chu k\u1ef3 cho n\u00ean c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(x_0\\) \u0111\u1ebfn \\(x_{\\mu + \\lambda - 1}\\) ph\u1ea3i \u0111\u00f4i m\u1ed9t kh\u00e1c nhau. </p> </li> <li> <p>V\u00ec th\u1ebf \\(x_t \\neq x_{2t}\\), \\(tortoise\\) v\u00e0 \\(hare\\) ch\u01b0a g\u1eb7p nhau l\u00fac n\u00e0y.</p> </li> <li> <p>\\(2t \\geq \\mu\\) v\u00e0 \\(t &lt; \\mu\\)</p> </li> <li> <p>Sau \\(t\\) l\u1ea7n t\u1ecbnh ti\u1ebfn, \\(tortoise\\) = \\(x_t\\) v\u00e0 \\(hare\\) = \\(x_{\\mu+(2t-\\mu) \\ mod \\ \\lambda}\\).</p> </li> <li> <p>Tuy nhi\u00ean, \\(\\mu + \\lambda\\) m\u1edbi b\u1eaft \u0111\u1ea7u l\u1ea1i chu k\u1ef3 cho n\u00ean c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(x_0\\) \u0111\u1ebfn \\(x_{\\mu + \\lambda - 1}\\) ph\u1ea3i \u0111\u00f4i m\u1ed9t kh\u00e1c nhau. </p> </li> <li> <p>V\u00ec th\u1ebf \\(x_t \\neq x_{\\mu+(2t-\\mu) \\ mod \\ \\lambda}\\), \\(tortoise\\) v\u00e0 \\(hare\\) ch\u01b0a g\u1eb7p nhau l\u00fac n\u00e0y.</p> </li> <li> <p>\\(t \\geq \\mu\\)</p> </li> <li> <p>Sau \\(t\\) l\u1ea7n t\u1ecbnh ti\u1ebfn, \\(tortoise\\) = \\(x_{\\mu+(t-\\mu) \\ mod \\ \\lambda}\\) v\u00e0 \\(hare\\) = \\(x_{\\mu+(2t-\\mu) \\ mod \\ \\lambda}\\).</p> </li> <li> <p>Gi\u1ea3 s\u1eed \\(tortoise\\) v\u00e0 \\(hare\\) g\u1eb7p nhau th\u00ec \\(\\mu+(t-\\mu) \\ mod \\ \\lambda = {\\mu+(2t-\\mu) \\ mod \\ \\lambda} \\Leftrightarrow t \\ mod \\ \\lambda = 0\\).</p> </li> <li> <p>V\u1eady, \\(tortoise\\) v\u00e0 \\(hare\\) s\u1ebd g\u1eb7p nhau sau \\(t\\) l\u1ea7n t\u1ecbnh ti\u1ebfn, trong \u0111\u00f3 \\(t\\) l\u00e0 s\u1ed1 nguy\u00ean c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(\\mu\\) v\u00e0 chia h\u1ebft cho \\(\\lambda\\).</p> </li> <li> <p>Tr\u1eeb l\u00fac kh\u1edfi t\u1ea1o, hai con tr\u1ecf \\(tortoise\\) v\u00e0 \\(hare\\) s\u1ebd g\u1eb7p nhau khi gi\u00e1 tr\u1ecb c\u1ee7a c\u1ea3 hai con tr\u1ecf l\u00e0 \\(x_{\\mu+(\\lambda -\\mu \\ mod \\ \\lambda) \\ mod \\ \\lambda}\\).</p> </li> </ul> <p>C\u00e1ch c\u00e0i \u0111\u1eb7t \u0111\u1ec3 \\(tortoise\\) v\u00e0 \\(hare\\) g\u1eb7p nhau:</p> <pre><code>int tortoise = 1, hare = 1;\nwhile (true) {\n    tortoise = f(tortoise);\n    hare = f(f(hare));\n    if (tortoise == hare)\n      break;\n}\n</code></pre>"},{"location":"algo/basic/two-pointers/#tim-mu","title":"T\u00ecm \\(\\mu\\)","text":"<p>Kh\u1edfi t\u1ea1o m\u1ed9t con tr\u1ecf m\u1edbi \\(p=x_0\\), con tr\u1ecf n\u00e0y \u0111\u01b0\u1ee3c t\u1ecbnh ti\u1ebfn gi\u1ed1ng nh\u01b0 con tr\u1ecf \\(tortoise\\).</p> <p>T\u1ecbnh ti\u1ebfn c\u00f9ng l\u00fac hai con tr\u1ecf \\(p\\) v\u00e0 \\(tortoise\\) v\u00e0 d\u1eebng l\u1ea1i cho \u0111\u1ebfn khi ch\u00fang g\u1eb7p nhau.</p> <p>S\u1ed1 l\u1ea7n t\u1ecbnh ti\u1ebfn \u1edf \u0111\u00e2y ch\u00ednh l\u00e0 \\(\\mu\\).</p> <p>Ch\u1ee9ng minh:</p> <ul> <li> <p>Trong nh\u1eefng l\u1ea7n t\u1ecbnh ti\u1ebfn t\u1eeb \\(0\\) \u0111\u1ebfn \\(\\mu - 1\\), con tr\u1ecf \\(p\\) nh\u1eadn gi\u00e1 tr\u1ecb t\u1eeb \\(x_0\\) \u0111\u1ebfn \\(x_{\\mu -1}\\) (c\u00e1c gi\u00e1 tr\u1ecb kh\u00f4ng c\u00f3 trong chu k\u1ef3) . C\u00f2n con tr\u1ecf \\(tortoise\\), v\u00ec \u0111\u00e3 n\u1eb1m \u1edf chu k\u1ef3, n\u00ean gi\u00e1 tr\u1ecb c\u1ee7a \\(tortoise\\) s\u1ebd nh\u1eadn gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed c\u00f3 trong chu k\u1ef3. V\u00ec th\u1ebf \\(tortoise\\) v\u00e0 \\(p\\) ch\u01b0a g\u1eb7p nhau.</p> </li> <li> <p>Hai con tr\u1ecf \\(p\\) v\u00e0 \\(tortoise\\) g\u1eb7p nhau t\u1ea1i l\u1ea7n t\u1ecbnh ti\u1ebfn th\u1ee9 \\(\\mu\\):</p> </li> <li> <p>Con tr\u1ecf \\(p\\) c\u00f3 gi\u00e1 tr\u1ecb \\(x_{\\mu}\\).</p> </li> <li> <p>L\u00fac ch\u01b0a t\u1ecbnh ti\u1ebfn \\(p\\), con tr\u1ecf \\(tortoise\\) c\u00f3 gi\u00e1 tr\u1ecb \\(x_{\\mu+(t-\\mu) \\ mod \\ \\lambda}\\) (\u0111\u00e3 n\u00eau \u1edf m\u1ee5c R\u00f9a v\u00e0 Th\u1ecf). V\u00ec \u0111\u00e3 \u1edf trong chu k\u1ef3 cho n\u00ean, sau khi t\u1ecbnh ti\u1ebfn \\(\\mu\\) l\u1ea7n con tr\u1ecf \\(tortoise\\) s\u1ebd c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(x_{\\mu+(t) \\ mod \\ \\lambda}\\). M\u00e0 \\(t\\) l\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng chia h\u1ebft cho \\(\\lambda\\), cho n\u00ean con tr\u1ecf \\(tortoise\\) c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(x_{\\mu}\\).</p> </li> </ul> <p>C\u00e1ch c\u00e0i \u0111\u1eb7t t\u00ecm \\(\\mu\\):</p> <pre><code>int mu = 0, p = 1;\nwhile (p != tortoise) {\n    p = f(p);\n    tortoise = f(tortoise);\n    mu++;\n}\n</code></pre>"},{"location":"algo/basic/two-pointers/#tim-lambda","title":"T\u00ecm \\(\\lambda\\)","text":"<p>B\u00e2y gi\u1edd c\u1ea3 hai con tr\u1ecf \\(tortoise\\) v\u00e0 \\(p\\) \u0111ang c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(x_{\\mu}\\).</p> <p>Ch\u00fang ta gi\u1eef nguy\u00ean gi\u00e1 tr\u1ecb \\(tortoise\\), v\u00e0 t\u1ecbnh ti\u1ebfn \\(p\\) cho \u0111\u1ebfn khi \\(p\\) c\u00f3 gi\u00e1 tr\u1ecb \\(x_{\\mu}\\) l\u1ea1i.</p> <p>V\u00ec \\(p\\) \u0111\u00e3 \u1edf trong chu k\u1ef3 cho n\u00ean, sau khi tinh ti\u1ebfn \\(\\lambda\\) l\u1ea7n, \\(p\\) s\u1ebd l\u1ea1i c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(x_{\\mu}\\).</p> <p><pre><code>int lambda = 0;\nwhile (true) {\n    lambda++;\n    p = f(p);\n    if (tortoise == p)\n      break;\n}\n</code></pre> \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, ta h\u00e3y c\u00f9ng xem qua m\u1ed9t s\u1ed1 v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> \\[a = 2, b = 2, c = 32\\] <p>Ta c\u00f3 d\u00e3y s\u1ed1 </p> \\[{\\color{blue}\\underbrace{\\color{black}1, 2, 5, 12}_{}},{\\color{red}\\underbrace{\\color{black}30, 11, 27, 3, 7, 17, 10, 25}_{}}, {\\color{red}\\underbrace{\\color{black}30, 11, 27, 3, 7, 17, 10, 25}_{}}, {\\color{red}\\underbrace{\\color{black}30, 11, 27, 3, 7, 17, 10, 25}_{}},...\\] <p>Gi\u00e1 tr\u1ecb \\(n\\) c\u1ea7n t\u00ecm c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(n = 12\\).</p> <p>Ta c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb n\u00e0y b\u1eb1ng c\u00e1ch x\u00e1c \u0111\u1ecbnh</p> <ul> <li> <p>ph\u1ea7n t\u1eed b\u1eaft \u0111\u1ea7u chu k\u1ef3 \\(x_{\\mu}\\).</p> </li> <li> <p>\u0111\u1ed9 d\u00e0i chu k\u1ef3 \\(\\lambda\\).</p> </li> </ul> <p>\u1ede \u0111\u00e2y, ph\u1ea7n t\u1eed b\u1eaft \u0111\u1ea7u chu k\u1ef3 l\u00e0 \\(x_4\\) v\u00e0 \u0111\u1ed9 d\u00e0i chu k\u1ef3 l\u00e0 \\(8\\).</p> <p>Gi\u00e1 tr\u1ecb \\(n = \\mu + \\lambda = 4 + 8 = 12\\).</p> <p></p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>Khi kh\u1edfi t\u1ea1o hai con tr\u1ecf \\(tortoise\\) v\u00e0 \\(hare\\) \u1edf \\(x_0\\), hai con tr\u1ecf s\u1ebd g\u1eb7p l\u1ea1i nhau l\u1ea7n \u0111\u1ea7u ti\u00ean sau \\(t\\) b\u01b0\u1edbc.</p> <p>C\u1ee5 th\u1ec3 \\(t\\) l\u00e0 s\u1ed1 nguy\u00ean nh\u1ecf nh\u1ea5t sao cho \\(t\\) c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(\\mu\\) v\u00e0 chia ch\u1ebft cho \\(\\lambda\\).</p> <p>V\u00ec th\u1ebf vi\u1ec7c x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed \\(tortoise\\) v\u00e0 \\(hare\\) g\u1eb7p nhau s\u1ebd m\u1ea5t kh\u00f4ng qu\u00e1 \\(\\mu + \\lambda\\) b\u01b0\u1edbc. H\u01a1n n\u1eefa, vi\u1ec7c x\u00e1c \u0111\u1ecbnh \\(\\mu\\) m\u1ea5t \\(\\mu\\) b\u01b0\u1edbc, x\u00e1c \u0111\u1ecbnh \\(\\lambda\\) m\u1ea5t \\(\\lambda\\) b\u01b0\u1edbc.</p> <p>K\u1ebft lu\u1eadn: \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(\\mu + \\lambda)\\). (trong \u0111\u00f3 \\(\\mu + \\lambda \\leq 2 \\cdot 10^7\\))</p>"},{"location":"algo/basic/two-pointers/#luyen-tap_3","title":"Luy\u1ec7n t\u1eadp","text":"<p>LODOJ - TORHAR</p> <p>CODEFORCES - Sequence analysis</p> <p>CODEFORCES - Pseudo-Random Number Generator</p> <p>CODEFORCES - Cooperative Game</p>"},{"location":"algo/data-structures/C%C3%A2y-Palindrome/","title":"C\u1ea5u tr\u00fac c\u1ee7a c\u00e2y Palindrome","text":"<p>C\u00e2y Palindrome (hay c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Eertree) l\u00e0 m\u1ed9t lo\u1ea1i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 gi\u1ea3i m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn Palindrome.</p> <p>Nh\u01b0 m\u1ecdi lo\u1ea1i c\u00e2y kh\u00e1c, c\u00e2y Palindrome c\u0169ng c\u00f3 n\u00fat.</p> <p></p> <p>Ngo\u00e0i n\u00fat ra c\u00e2y c\u00f2n c\u00f3 c\u00e1c cung \u0111\u1ec3 n\u1ed1i c\u00e1c n\u00fat. Cung n\u1ed1i gi\u1eefa hai n\u00fat \\(u\\) v\u00e0 \\(v\\) \u0111\u01b0\u1ee3c g\u00e1n m\u1ed9t ch\u1eef c\u00e1i - v\u00ed d\u1ee5 ch\u1eef \\(X\\) - ngh\u0129a l\u00e0 ta c\u00f3 \u0111\u01b0\u1ee3c palindrome ch\u1ee9a \u1edf n\u00fat \\(v\\) b\u1eb1ng c\u00e1ch th\u00eam ch\u1eef \\(X\\) v\u00e0o hai b\u00ean c\u1ee7a palindrome ch\u1ee9a \u1edf n\u00fat \\(u\\).</p> <p></p> <p>Trong v\u00ed d\u1ee5 tr\u00ean, ta c\u00f3 \u0111\u01b0\u1ee3c x\u00e2u palindrome \\(aba\\) b\u1eb1ng c\u00e1ch th\u00eam ch\u1eef \\(a\\) v\u00e0o hai b\u00ean ch\u1eef \\(b\\)</p> <p>Cu\u1ed1i c\u00f9ng, ta c\u00f3 th\u00eam c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1. N\u00fat \\(u\\) c\u00f3 li\u00ean k\u1ebft h\u1eadu t\u1ed1 \u0111\u1ebfn n\u00fat \\(w\\), n\u1ebfu palindrome ch\u1ee9a \u1edf n\u00fat \\(w\\) l\u00e0 h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng l\u1edbn nh\u1ea5t c\u1ee7a palindrome ch\u1ee9a \u1edf n\u00fat \\(u\\). (h\u1eadu t\u1ed1 l\u00e0 m\u1ed9t x\u00e2u con ch\u1ee9a c\u00e1c ch\u1eef c\u00e1i cu\u1ed1i c\u00f9ng c\u1ee7a x\u00e2u, h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng (proper suffix) l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a m\u1ed9t x\u00e2u v\u00e0 ng\u1eafn h\u01a1n x\u00e2u \u0111\u00f3). T\u1eeb b\u00e2y gi\u1edd ta s\u1ebd g\u1ecdi palindrome l\u1edbn nh\u1ea5t m\u00e0 l\u00e0 h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng c\u1ee7a m\u1ed9t x\u00e2u l\u00e0 palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a m\u1ed9t x\u00e2u.</p> <p></p> <p>Trong v\u00ed d\u1ee5 tr\u00ean, v\u00ec \\(a\\) l\u00e0 palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a \\(aba\\) n\u00ean c\u00f3 m\u1ed9t li\u00ean k\u1ebft h\u1eadu t\u1ed1 t\u1eeb n\u00fat ch\u1ee9a x\u00e2u \\(aba\\) \u0111\u1ebfn n\u00fat ch\u1ee9a x\u00e2u \\(a\\).</p> <p>\u0110\u1eb7t t\u00ean c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0y l\u00e0 c\u00e2y Palindrome c\u00f3 v\u1ebb kh\u00f4ng h\u1ee3p l\u00ed l\u1eafm, v\u00ec n\u00f3 c\u00f3 t\u1eadn 2 g\u1ed1c. M\u1ed9t s\u1ebd ch\u1ee9a x\u00e2u palindrome gi\u1ea3 \u0111\u1ed9 d\u00e0i -1. G\u1ed1c n\u00e0y gi\u00fap ta c\u00e0i \u0111\u1eb7t c\u00e2y d\u1ec5 d\u00e0ng h\u01a1n, v\u00ec khi ta th\u00eam hai ch\u1eef c\u00e1i b\u1ea5t k\u00ec v\u00e0o hai b\u00ean x\u00e2u \u0111\u1ed9 d\u00e0i -1 th\u00ec ta s\u1ebd \u0111\u01b0\u1ee3c x\u00e2u \u0111\u1ed9 d\u00e0i 1 v\u00e0 n\u00f3 lu\u00f4n l\u00e0 palindrome. G\u1ed1c th\u1ee9 hai ch\u1ee9a m\u1ed9t x\u00e2u r\u1ed7ng (x\u00e2u c\u00f3 \u0111\u1ed9 d\u00e0i 0), v\u00e0 x\u00e2u n\u00e0y c\u0169ng l\u00e0 palindrome. Ta cho th\u00eam m\u1ed9t li\u00ean k\u1ebft h\u1eadu t\u1ed1 t\u1eeb hai g\u1ed1c n\u1ed1i \u0111\u1ebfn g\u1ed1c ch\u1ee9a palindrome \u0111\u1ed9 d\u00e0i -1.</p> <p>L\u01b0u \u00fd r\u1eb1ng ta kh\u00f4ng ch\u1ee9a x\u00e2u palindrome v\u00e0o n\u00fat khi c\u00e0i \u0111\u1eb7t th\u1ef1c t\u1ebf, n\u1ebfu l\u00e0m v\u1eady ta s\u1ebd ti\u00eau t\u1ed1n qu\u00e1 nhi\u1ec1u b\u1ed9 nh\u1edb. N\u00fat th\u1ef1c t\u1ebf s\u1ebd ch\u1ee9a \u0111\u1ed9 d\u00e0i x\u00e2u palindrome, ch\u1eef c\u00e1i \u0111\u01b0\u1ee3c g\u00e1n v\u00e0o c\u00e1c cung, v\u00e0 c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1.</p>"},{"location":"algo/data-structures/C%C3%A2y-Palindrome/#xay-dung-cay-palindrome","title":"X\u00e2y d\u1ef1ng c\u00e2y Palindrome","text":"<p>\u1ede \u0111\u00e2y m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn t\u1ea1o c\u00e2y Palindrome ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c palindrome con c\u1ee7a m\u1ed9t x\u00e2u \\(s\\). Ta th\u1ea5y: M\u1ed9t x\u00e2u \u0111\u1ed9 d\u00e0i \\(n\\) s\u1ebd kh\u00f4ng c\u00f3 qu\u00e1 \\(n\\) x\u00e2u palindrome con, v\u00ec v\u1eady c\u00e2y Palindrome s\u1ebd kh\u00f4ng c\u00f3 qu\u00e1 \\(n + 2\\) n\u00fat (do ph\u1ea3i th\u00eam 2 g\u1ed1c n\u1eefa).</p> <p>Ta s\u1ebd x\u1eed l\u00ed t\u1eebng ch\u1eef c\u00e1i m\u1ed9t trong x\u00e2u. Gi\u1ea3 s\u1eed ta \u0111\u00e3 x\u1eed l\u00ed \u0111\u01b0\u1ee3c ti\u1ec1n t\u1ed1 \\(p\\) c\u1ee7a x\u00e2u, v\u00e0 gi\u1edd ta ph\u1ea3i x\u00e9t \u0111\u1ebfn ch\u1eef c\u00e1i \\(x\\) ti\u1ebfp theo.</p> <p></p> <p>Ta l\u01b0u l\u1ea1i \\(t\\) l\u00e0 palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a ti\u1ec1n t\u1ed1 \\(p\\).</p> <p></p> <p>V\u00ec \\(t\\) \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00ed, n\u00ean n\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9a trong m\u1ed9t n\u00fat n\u00e0o \u0111\u00f3 c\u1ee7a c\u00e2y Palindrome. N\u00fat n\u00e0y s\u1ebd c\u00f3 li\u00ean k\u1ebft h\u1eadu t\u1ed1 \u0111\u1ebfn m\u1ed9t n\u00fat n\u00e0o \u0111\u00f3, n\u00fat n\u00e0o \u0111\u00f3 l\u1ea1i c\u00f3 m\u1ed9t li\u00ean k\u1ebft h\u1eadu t\u1ed1 \u0111\u1ebfn m\u1ed9t n\u00fat kh\u00e1c v\u00e0 c\u1ee9 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady.</p> <p></p> <p>B\u00e2y gi\u1edd ta h\u00e3y t\u00ecm h\u1eadu t\u1ed1 palindrome c\u1ee7a ti\u1ec1n t\u1ed1 m\u1edbi \\(p+x\\). H\u1eadu t\u1ed1 \u0111\u00f3 s\u1ebd c\u00f3 d\u1ea1ng \\(xAx\\), v\u1edbi \\(A\\) l\u00e0 m\u1ed9t x\u00e2u n\u00e0o \u0111\u00f3, c\u00f3 th\u1ec3 r\u1ed7ng ho\u1eb7c c\u00f3 \u0111\u1ed9 d\u00e0i -1. V\u00ec \\(xAx\\) l\u00e0 palindrome, n\u00ean \\(A\\) c\u0169ng l\u00e0 palindrome, v\u00e0 n\u00f3 l\u00e0 m\u1ed9t h\u1eadu t\u1ed1 c\u1ee7a \\(p\\), v\u00ec v\u1eady ta c\u00f3 th\u1ec3 t\u00ecm \\(A\\) t\u1eeb \\(t\\) b\u1eb1ng c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1.</p> <p></p> <p>X\u00e2u \\(xAx\\) s\u1ebd l\u00e0 x\u00e2u palindrome con duy nh\u1ea5t c\u1ee7a x\u00e2u \\(p + x\\) m\u00e0 kh\u00f4ng xu\u1ea5t hi\u1ec7n \u1edf x\u00e2u \\(p\\). Th\u1eadt v\u1eady, ta th\u1ea5y t\u1ea5t c\u1ea3 x\u00e2u palindrome con m\u1edbi m\u00e0 ta ch\u01b0a th\u1ea5y trong x\u00e2u \\(p\\) ph\u1ea3i k\u1ebft th\u00fac b\u1eb1ng ch\u1eef \\(x\\), v\u00e0 do \u0111\u00f3 tr\u1edf th\u00e0nh h\u00e2u t\u1ed1 c\u1ee7a x\u00e2u \\(p + x\\). V\u00ec \\(xAx\\) l\u00e0 h\u1eadu t\u1ed1 palindrome l\u1edbn nh\u1ea5t c\u1ee7a \\(p + x\\), t\u1ea5t c\u1ea3 c\u00e1c h\u1eadu t\u1ed1 palindrome nh\u1ecf h\u01a1n n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y trong m\u1ed9t s\u1ed1 ti\u1ec1n t\u1ed1 c\u1ee7a \\(xAx\\) (v\u00ec \u0111\u1ed1i v\u1edbi b\u1ea5t k\u00ec h\u1eadu t\u1ed1 c\u1ee7a palindrome c\u00f3 m\u1ed9t ti\u1ec1n t\u1ed1 t\u01b0\u01a1ng t\u1ef1 t\u01b0\u01a1ng \u1ee9ng), v\u00e0 v\u00ec th\u1ebf ta \u0111\u00e3 th\u1ea5y ch\u00fang trong \\(p\\).</p> <p>V\u00ec v\u1eady, \u0111\u1ec3 x\u1eed l\u00ed ch\u1eef c\u00e1i \\(x\\) th\u00eam v\u00e0o, ta ph\u1ea3i \u0111i theo c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 c\u1ee7a t cho \u0111\u1ebfn khi ta t\u00ecm th\u1ea5y A th\u00edch h\u1ee3p (x\u00e2u \\(A\\) th\u00edch h\u1ee3p c\u00f3 th\u1ec3 c\u00f3 \u0111\u1ed9 d\u00e0i -1 n\u1ebfu ta ph\u1ea3i \u0111i \u0111\u1ebfn g\u1ed1c). Sau \u0111\u00f3 ta ki\u1ec3m tra xem c\u00f3 cung n\u00e0o \u0111\u01b0\u1ee3c g\u00e1n ch\u1eef \\(x\\) m\u00e0 t\u01b0\u01a1ng \u1ee9ng v\u1edbi n\u00fat ch\u1ee9a x\u00e2u \\(A\\), n\u1ebfu kh\u00f4ng, th\u00eam m\u1ed9t cung \u0111\u01b0\u1ee3c g\u00e1n ch\u1eef \\(x\\) n\u1ed1i t\u1eeb n\u00fat ch\u1ee9a x\u00e2u \\(A\\) \u0111\u1ebfn n\u00fat m\u1edbi ch\u1ee9a x\u00e2u \\(xAx\\).</p> <p>B\u00e2y gi\u1edd ta x\u00e9t \u0111\u1ebfn c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 n\u1ed1i t\u1eeb n\u00fat \\(xAx\\). N\u1ebfu n\u00fat n\u00e0y \u0111\u00e3 c\u00f3 t\u1eeb tr\u01b0\u1edbc, n\u00fat n\u00e0y \u0111\u00e3 c\u00f3 c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 v\u00e0 ta kh\u00f4ng ph\u1ea3i l\u00e0m g\u00ec c\u1ea3. N\u1ebfu kh\u00f4ng, ta c\u1ea7n ph\u1ea3i t\u00ecm palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a \\(xAx\\), c\u00f3 d\u1ea1ng \\(xBx\\), m\u00e0 \\(B\\) l\u00e0 m\u1ed9t x\u00e2u c\u00f3 th\u1ec3 r\u1ed7ng. B\u1eb1ng l\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean, \\(B\\) l\u00e0 palindrome h\u1eadu t\u1ed1 c\u1ee7a \\(p\\) v\u00e0 c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(t\\) b\u1eb1ng c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1.</p> <p>V\u1eady ta \u0111\u00e3 c\u00f3 \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n x\u00e2y d\u1ef1ng c\u00e2y Palindrome. X\u1eed l\u00ed t\u1eebng ch\u1eef c\u00e1i m\u1ed9t, l\u01b0u tr\u1eef palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t \\(t\\) c\u1ee7a ti\u1ec1n t\u1ed1 \u0111\u00e3 x\u1eed l\u00ed (kh\u1edfi t\u1ea1o \\(t\\) l\u00e0 x\u00e2u r\u1ed7ng). Khi x\u1eed l\u00ed th\u00eam ch\u1eef \\(x\\), ta ph\u1ea3i \u0111i qua c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 xu\u1ea5t ph\u00e1t t\u1eeb \\(t\\), cho \u0111\u1ebfn khi ta t\u00ecm \u0111\u01b0\u1ee3c palindrome A th\u00edch h\u1ee3p. X\u00e2u \\(xAx\\) s\u1ebd tr\u1edf th\u00e0nh s\u1ebd tr\u1edf th\u00e0nh h\u1eadu t\u1ed1 palindrome l\u1edbn nh\u1ea5t v\u00e0 tr\u1edf th\u00e0nh n\u00fat duy nh\u1ea5t c\u00f3 th\u1ec3 ch\u00e8n v\u00e0o c\u00e2y. \u0110\u1ec3 t\u1ea1o th\u00eam c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 ta ph\u1ea3i \u0111i theo c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 cho \u0111\u1ebfn khi t\u00ecm th\u1ea5y x\u00e2u palindrome \\(B\\), c\u00f3 th\u1ec3 th\u00eam \u0111\u01b0\u1ee3c hai ch\u1eef \\(x\\) \u1edf hai b\u00ean, r\u1ed3i ta th\u00eam li\u00ean k\u1ebft h\u1eadu t\u1ed1 t\u1eeb n\u00fat ch\u1ee9a x\u00e2u \\(xAx\\) \u0111\u1ebfn x\u00e2u \\(xBx\\).</p> <p>\u0110\u1ec3 bi\u1ebft th\u00eam th\u00f4ng tin chi ti\u1ebft, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o code. (b\u1ea1n kh\u00f4ng c\u1ea7n ch\u00fa \u00fd \u0111\u1ebfn bi\u1ebfn num v\u00ec n\u00f3 \u0111\u01b0\u1ee3c cho th\u00eam v\u00e0o \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n c\u1ee5 th\u1ec3). B\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y code kh\u00f4ng qu\u00e1 d\u00e0i c\u0169ng nh\u01b0 vi\u1ec7c c\u00e0i \u0111\u1eb7t r\u1ea5t \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"algo/data-structures/Deque/","title":"Deque - h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u","text":"<p>H\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u (deque) l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u ch\u1ee9a 0 ho\u1eb7c nhi\u1ec1u ph\u1ea7n t\u1eed c\u00f3 c\u00f9ng ki\u1ec3u d\u1eef li\u1ec7u v\u00e0 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t h\u00e0ng c\u00f3 ph\u1ea7n t\u1eed \u0111\u1ea7u (front) v\u00e0 ph\u1ea7n t\u1eed cu\u1ed1i (last). Deque h\u1ed7 tr\u1ee3 4 thao t\u00e1c nh\u01b0 sau:</p> <ul> <li>Th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i deque. (Push back)</li> <li>Th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ea7u deque. (Push front)</li> <li>B\u1ecf \u0111i ph\u1ea7n t\u1eed \u1edf cu\u1ed1i deque, tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u00f3. (Pop back)</li> <li>B\u1ecf \u0111i ph\u1ea7n t\u1eed \u1edf \u0111\u1ea7u deque, tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u00f3. (Pop front)</li> </ul> <p>V\u1ec1 \u1ee9ng d\u1ee5ng, ta s\u1ebd b\u1ed5 sung th\u00eam m\u1ed9t s\u1ed1 thao t\u00e1c sau:</p> <ul> <li>X\u00e2y d\u01b0ng m\u1ed9t deque r\u1ed7ng. (Construct)</li> <li>Sao ch\u00e9p deque n\u00e0y sang m\u1ed9t deque kh\u00e1c. (Copy)</li> <li>L\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i m\u00e0 kh\u00f4ng x\u00f3a n\u00f3. (Peek back)</li> <li>L\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u m\u00e0 kh\u00f4ng x\u00f3a n\u00f3. (Peek front)</li> <li>X\u00f3a s\u1ea1ch m\u1ed9t deque \u0111ang c\u00f3 ph\u1ea7n t\u1eed. (Empty)</li> <li>T\u00ecm s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed trong deque. (Find size)</li> <li>Ki\u1ec3m tra xem deque c\u00f3 r\u1ed7ng hay kh\u00f4ng. (Test empty)</li> </ul> <p>Hai thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb th\u1eadt s\u1ef1 kh\u00f4ng c\u1ea7n thi\u1ebft, b\u1edfi l\u1ea5y gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed \u0111\u1ea7u deque (peek front) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c x\u00f3a \u0111i ph\u1ea7n t\u1eed \u0111\u00f3 (pop front) r\u1ed3i l\u1ea1i th\u00eam n\u00f3 v\u00e0o (push front), v\u00e0 t\u01b0\u01a1ng t\u1ef1 v\u1edbi l\u1ea5y gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed cu\u1ed1i (peek last). C\u0169ng nh\u01b0  ki\u1ec3m tra r\u1ed7ng (Test empty) th\u1eadt ra c\u0169ng ch\u1ec9 l\u00e0 ki\u1ec3m tra xem s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ee7a deque c\u00f3 b\u1eb1ng 0 hay kh\u00f4ng.</p>"},{"location":"algo/data-structures/Deque/#thuat-ngu","title":"Thu\u1eadt ng\u1eef","text":"<p>Thu\u1eadt ng\u1eef deque l\u00e0 c\u00e1ch g\u1ecdn ng\u1eafn t\u1eaft c\u1ee7a double-ended queue (h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u). S\u1edf d\u0129 l\u00e0 v\u00ec n\u00f3 c\u00f3 th\u1ec3 th\u00eam, b\u1edbt ph\u1ea7n t\u1eed \u1edf c\u1ea3 hai \u0111\u1ea7u; c\u00f2n thu\u1eadt ng\u1eef queue \u1edf \u0111\u00e2y l\u00e0 m\u1ed9t l\u1edbp c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p th\u00eam, b\u1edbt ph\u1ea7n t\u1eed (nh\u01b0ng kh\u00f4ng th\u1ec3 t\u00ecm ki\u1ebfm). M\u1ed9t ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c xem l\u00e0 \u0111\u1ee9ng tr\u01b0\u1edbc m\u1ed9t ph\u1ea7n t\u1eed kh\u00e1c n\u1ebfu n\u00f3 g\u1ea7n v\u1edbi ph\u1ea7n t\u1eed \u0111\u1ea7u (front) h\u01a1n l\u00e0 ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i; ng\u01b0\u1ee3c, l\u1ea1i, m\u1ed9t ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c xem l\u00e0 \u0111\u1ee9ng sau m\u1ed9t ph\u1ea7n t\u1eed kh\u00e1c n\u1ebfu n\u00f3 xa v\u1edbi ph\u1ea7n t\u1eed \u0111\u1ea7u (front) h\u01a1n l\u00e0 ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i. Push m\u1ed9t ph\u1ea7n t\u1eed l\u00e0 th\u00eam ph\u1ea7n t\u1eed \u0111\u00f3 v\u00e0o h\u00e0ng \u0111\u1ee3i, pop \u0111\u1ea9y ra m\u1ed9t ph\u1ea7n t\u1eed. L\u01b0u \u00fd r\u1eb1ng \u0111i\u1ec3m \u0111\u1ea7u (front) v\u00e0 \u0111i\u1ec3m cu\u1ed1i (last) l\u00e0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng nhau, khi thay \u0111\u1ed5i to\u00e0n b\u1ed9 \u0111i\u1ec3m cu\u1ed1i v\u00e0 \u0111\u1ea7u trong gi\u1ea3i thu\u1eadt c\u1ee7a ch\u00fang ta th\u00ec n\u00f3 v\u1eabn ho\u1ea1t \u0111\u1ed9ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u01b0\u1edbc \u0111\u00f3.</p>"},{"location":"algo/data-structures/Deque/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":""},{"location":"algo/data-structures/Deque/#cai-at-bang-mang","title":"C\u00e0i \u0111\u1eb7t b\u1eb1ng m\u1ea3ng","text":"<ul> <li> <p>Khi s\u1eed d\u1ee5ng m\u1ea3ng \u0111\u1ec3 bi\u1ec3n di\u1ec5n deque, th\u00ec gi\u00e1 tr\u1ecb c\u1ee7a deque s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u gi\u1eef b\u1eb1ng nh\u1eefng ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp trong m\u1ea3ng. Tuy nhi\u00ean, \u0111\u1ed1i v\u1ea5n c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y, th\u00ec n\u1ebfu ta mu\u1ed1n \u0111\u1eb7t ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 th\u1ea5p nh\u1ea5t (front) lu\u00f4n lu\u00f4n c\u1ed1 \u0111\u1ecbnh \u1edf m\u1ed9t ch\u1ec9 s\u1ed1 (v\u00ed d\u1ee5 \\(0\\) ho\u1eb7c \\(1\\)), hay n\u00f3i c\u00e1ch kh\u00e1c, ch\u1ec9 s\u1ed1 th\u1ea5p nh\u1ea5t lu\u00f4n l\u00e0 c\u1ed1 \u0111\u1ecbnh th\u00ec: Khi ta mu\u1ed1n pop front (th\u00eam ph\u1ea7n t\u1eed ph\u00eda tr\u01b0\u1edbc v\u00e0o \u0111\u1ea7u h\u00e0ng \u0111\u1ee3i), ta s\u1ebd ph\u1ea3i t\u1ecbnh ti\u1ebfn to\u00e0n b\u1ed9 c\u00e1c ph\u1ea7n t\u1eed v\u1ec1 b\u00ean tr\u00e1i sao cho ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 th\u1ea5p nh\u1ea5t (front) s\u1ebd l\u01b0u gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed ti\u1ebfp theo (next) v\u00e0 t\u01b0\u01a1ng t\u1ef1 v\u1edbi c\u00e1c ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i. C\u0169ng nh\u01b0 \u0111\u1ed1i v\u1edbi vi\u1ec7c push front (th\u00eam ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ea7u h\u00e0ng \u0111\u1ee3i), to\u00e0n b\u1ed9 nh\u1eefng ph\u1ea7n t\u1eed hi\u1ec7n t\u1ea1i trong deque s\u1ebd ph\u1ea3i t\u1ecbnh ti\u1ebfn v\u1ec1 b\u00ean ph\u1ea3i \u0111\u1ec3 ph\u1ea7n t\u1eed ch\u1ec9 s\u1ed1 th\u1ea5p nh\u1ea5t (front) s\u1ebd l\u01b0u gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed v\u1eeba th\u00eam v\u00e0o, trong khi c\u00e1c ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i s\u1ebd l\u01b0u ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc. Th\u1ebf n\u00ean, v\u1edbi c\u00e1ch c\u00e0i \u0111\u1eb7t th\u1ebf n\u00e0y, m\u1ed7i thao t\u00e1c th\u1ef1c hi\u1ec7n s\u1ebd t\u1ed1n chi ph\u00ed l\u00e0 \\(O(n)\\) - v\u1edbi \\(n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed hi\u1ec7n \u0111ang c\u00f3 c\u1ee7a deque. </p> </li> <li> <p>Tuy nhi\u00ean, \u0111\u1ec3 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n quan tr\u1ecdng nh\u01b0 BFS trong th\u1eddi gian tuy\u1ebfn t\u00ednh, c\u00e1c thao t\u00e1c push, pop ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u1edbi chi ph\u00ed l\u00e0 \\(O(1)\\). \u0110\u1ed1i v\u1edbi v\u1ea5n \u0111\u1ec1 n\u00e0y, thay v\u00ec ph\u1ea3i thay th\u1ebf ph\u1ea7n t\u1eed b\u1ecb pop, ta ch\u1ec9 \u0111\u01a1n thu\u1ea7n thay \u0111\u1ed5i ch\u1ec9 s\u1ed1 c\u1ee7a front, v\u00e0 khi push v\u00e0o m\u1ed9t ph\u1ea7n t\u1eed, ta ch\u1ec9 c\u1ea7n g\u00e1n ph\u1ea7n t\u1eed v\u00e0o ch\u1ec9 s\u1ed1 li\u1ec1n k\u1ec1 v\u1edbi ph\u1ea7n t\u1eed \u0111\u1ee9ng \u0111\u1ea7u v\u00e0 thay \u0111\u1ed5i ch\u1ec9 s\u1ed1 c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u. T\u1ee9c l\u00e0, ta ch\u1ec9 c\u1ea7n quan t\u00e2m \u0111\u1ebfn hai ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng, \u0111\u1ea7u (front) v\u00e0 cu\u1ed1i (back). Khi ta th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ea7u (push front), ta ch\u1ec9 c\u1ea7n gi\u1ea3m ch\u1ec9 s\u1ed1 \u0111\u1ea7u (front index) r\u1ed3i g\u00e1n ph\u1ea7n t\u1eed \u1ea5y v\u00e0o ch\u1ec9 s\u1ed1 m\u1edbi. Ng\u01b0\u1ee3c l\u1ea1i khi ta th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i (push back), ta ch\u1ec9 c\u1ea7n t\u0103ng ch\u1ec9 s\u1ed1 \u0111\u1ea7u (back index) r\u1ed3i g\u00e1n ph\u1ea7n t\u1eed \u1ea5y v\u00e0o. C\u00f2n khi ta ta x\u00f3a m\u1ed9t ph\u1ea7n t\u1eed \u1edf \u0111\u1ea7u (pop front), ta ch\u1ec9 vi\u1ec7c t\u0103ng ch\u1ec9 s\u1ed1 \u0111\u1ea7u, c\u00f2n x\u00f3a ph\u1ea7n t\u1eed \u1edf cu\u1ed1i (pop back) th\u00ec ta s\u1ebd gi\u1ea3m ch\u1ec9 s\u1ed1 cu\u1ed1i.</p> </li> <li> <p>H\u00e3y th\u1eed ngh\u0129 xem, trong tr\u01b0\u1eddng h\u1ee3p ta th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ea7u (push front), r\u1ed3i l\u1ea1i x\u00f3a \u0111i ph\u1ea7n t\u1eed cu\u1ed1i (pop back), r\u1ed3i th\u00eam l\u1ea1i ph\u1ea7n t\u1eed \u0111\u1ea7u (push front), ... Ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady, deque m\u00e0 ta x\u00e2y d\u1ef1ng v\u1eabn lu\u00f4n lu\u00f4n ch\u1ec9 c\u00f3 t\u1ed1i \u0111a m\u1ed9t ph\u1ea7n t\u1eed, th\u1ebf nh\u01b0ng hai ch\u1ec9 s\u1ed1 \u0111\u1ea7u v\u00e0 ch\u1ec9 s\u1ed1 cu\u1ed1i l\u1ea1i t\u0103ng l\u00ean li\u00ean t\u1ee5c d\u1eabn t\u1edbi vi\u1ec7c b\u1ecb tr\u00e0n gi\u1edbi h\u1ea1n m\u1ea3ng. \u0110\u1ec3 kh\u1eafc ph\u1ee5c v\u1ea5n \u0111\u1ec1 n\u00e0y, ta s\u1ebd cho ph\u00e9p c\u00e1c ch\u1ec9 s\u1ed1 \u0111\u01b0\u1ee3c xoay v\u00f2ng (h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u xoay v\u00f2ng). Th\u1ebf n\u00ean, khi t\u0103ng ch\u1ec9 s\u1ed1 c\u1ef1c h\u1ea1n l\u00ean, ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c ch\u1ec9 s\u1ed1 c\u1ef1c ti\u1ec3u v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, khi gi\u1ea3m ch\u1ec9 s\u1ed1 c\u1ef1c ti\u1ec3u ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c ch\u1ec9 s\u1ed1 c\u1ef1c \u0111\u1ea1i. Vi\u1ec7c n\u00e0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng to\u00e1n t\u1eed mod (modulo - %). D\u01b0\u1edbi \u0111\u00e2y s\u1ebd l\u00e0 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t m\u1eabu b\u1eb1ng m\u00e3 gi\u1ea3:</p> </li> </ul> <pre><code>c\u1ea5u tr\u00fac deque\n     th\u1ee7 t\u1ee5c construct(max_size)\n          g\u00e1n A l\u00e0 m\u1ed9t m\u1ea3ng c\u00f3 t\u1ed1i \u0111a max_size+1 ph\u1ea7n t\u1eed\n          g\u00e1n N = max_size+1\n          g\u00e1n first = 0\n          g\u00e1n last = 0\n     th\u1ee7 t\u1ee5c push_front(x)\n          first = (first - 1) mod N\n          A[first] = x\n     th\u1ee7 t\u1ee5c push_back(x)\n          A[last] = x\n          last = (last + 1) mod N\n     h\u00e0m pop_front\n          return_val = A[first]\n          first = (first + 1) mod N\n          tr\u1ea3 v\u1ec1 return_val\n     h\u00e0m pop_back\n          last = (last - 1) mod N\n          tr\u1ea3 v\u1ec1 A[last]\n     h\u00e0m peek_front\n          tr\u1ea3 v\u1ec1 A[first]\n     h\u00e0m peek_back\n          tr\u1ea3 v\u1ec1 A[(last-1) mod N]\n     h\u00e0m size\n          tr\u1ea3 v\u1ec1 (last-first) mod N\n     th\u1ee7 t\u1ee5c make_empty\n          last = first\n</code></pre> <ul> <li>L\u01b0u \u00fd r\u1eb1ng, n\u1ebfu deque \u0111\u00e3 \u0111\u1ea7y r\u1ed3i nh\u01b0ng ta v\u1eabn push th\u00eam c\u00e1c ph\u1ea7n t\u1eed v\u00e0o th\u00ec k\u00edch th\u01b0\u1edbc c\u1ee7a deque l\u00fac n\u00e0y s\u1ebd l\u00e0 \\(0\\), v\u00e0 m\u1ed9t s\u1ed1 ph\u1ea7n t\u1eed c\u0169 s\u1ebd b\u1ecb ghi \u0111\u00e8 l\u00ean b\u1eb1ng c\u00e1c ph\u1ea7n t\u1eed m\u1edbi. Ngo\u00e0i ra, khi k\u00edch th\u01b0\u1edbc c\u1ee7a deque l\u00e0 \\(0\\) nh\u01b0ng ta l\u1ea1i mu\u1ed1n x\u00f3a \u0111i ph\u1ea7n t\u1eed th\u00ec l\u00fac n\u00e0y, k\u00edch th\u01b0\u1edbc c\u1ee7a deque s\u1ebd l\u00e0 c\u1ef1c \u0111\u1ea1i. Vi\u1ec7c th\u00eam v\u00e0o c\u00e1c \u0111o\u1ea1n m\u00e3 ki\u1ec3m tra l\u1ed7i, ki\u1ec3m tra r\u1ed7ng v\u00e0 copy deque \u0111\u01b0\u1ee3c l\u01b0\u1ee3c b\u1ecf \u0111i nh\u1eb1m m\u1ee5c \u0111\u00edch ng\u1eafn g\u1ecdn code.</li> </ul>"},{"location":"algo/data-structures/Deque/#cai-at-bang-danh-sach-lien-ket","title":"C\u00e0i \u0111\u1eb7t b\u1eb1ng danh s\u00e1ch li\u00ean k\u1ebft","text":"<ul> <li>C\u00e0i \u0111\u1eb7t b\u1eb1ng m\u1ea3ng xoay v\u00f2ng h\u1ea7u nh\u01b0 \u0111\u00e3 l\u00e0 ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u, tuy nhi\u00ean trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p, khi m\u00e0 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ea7n kh\u00f4ng th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c, l\u00fac n\u00e0y ta s\u1ebd s\u1eed d\u1ee5ng danh s\u00e1ch li\u00ean k\u1ebft (linked list) \u0111\u1ec3 bi\u1ec3u di\u1ec5n deque. Chi ti\u1ebft cho c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 b\u1eb1ng \u0111o\u1ea1n m\u00e3 gi\u1ea3 nh\u01b0 sau:</li> </ul> <pre><code>c\u1ea5u tr\u00fac deque\n     th\u1ee7 t\u1ee5c construct\n          g\u00e1n L l\u00e0 m\u1ed9t danh s\u00e1ch r\u1ed7ng\n     th\u1ee7 t\u1ee5c push_front(x)\n          ch\u00e8n x v\u00e0o \u0111\u1ea7u c\u1ee7a L\n     th\u1ee7 t\u1ee5c push_back(x)\n          ch\u00e8n x v\u00e0o cu\u1ed1i L\n     h\u00e0m pop_front\n          x\u00f3a ph\u1ea7n t\u1eed \u0111\u1ea7u c\u1ee7a L, tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u00f3\n     h\u00e0m pop_back\n          x\u00f3a ph\u1ea7n t\u1eed cu\u1ed1i c\u1ee7a L, tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u00f3 \n     h\u00e0m peek_front\n          tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u L\n     h\u00e0m peek_back\n          tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i L\n     h\u00e0m size\n          tr\u1ea3 v\u1ec1 k\u00edch th\u01b0\u1edbc c\u1ee7a L\n     th\u1ee7 t\u1ee5c make_empty\n          l\u00e0m r\u1ed7ng L\n</code></pre> <ul> <li>Ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng nh\u1eadn ra, deque \u0111\u01a1n thu\u1ea7n ch\u1ec9 l\u00e0 ch\u1ee9a c\u00e1c thao t\u00e1c c\u1ee7a list s\u1eb5n c\u00f3. (\u1ede \u0111\u00e2y ta gi\u1ea3 \u0111\u1ecbnh r\u1eb1ng list bao g\u1ed3m c\u1ea3 h\u00e0m tr\u1ea3 v\u1ec1 k\u00edch th\u01b0\u1edbc, n\u1ebfu kh\u00f4ng th\u00ec ta s\u1ebd th\u00eam h\u00e0m tr\u1ea3 v\u1ec1 k\u00edch th\u01b0\u1edbc trong deque).</li> </ul>"},{"location":"algo/data-structures/Deque/#lop-deque-trong-std-c","title":"L\u1edbp deque trong STD C++","text":"<ul> <li> <p>Trong STD C++, l\u1edbp <code>deque</code> n\u1eb1m trong ti\u00eau \u0111\u1ec1 <code>&lt;deque&gt;</code>, l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00f3 kh\u1ea3 n\u0103ng ch\u1ee9a m\u1ecdi ki\u1ec3u d\u1eef li\u1ec7u (c\u1ed1 \u0111\u1ecbnh), v\u00e0 ki\u1ec3u d\u1eef li\u1ec7u n\u00e0y xem \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t th\u00f4ng s\u1ed1 m\u1eabu. Do \u0111\u00f3, v\u00ed d\u1ee5 nh\u01b0 <code>deque&lt;char&gt;</code> l\u00e0 m\u1ed9t h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u ch\u1ee9a c\u00e1c k\u00fd t\u1ef1. C\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0y cho ph\u00e9p s\u1eed d\u1ee5ng c\u00e1c h\u00e0m sau: (l\u01b0u \u00fd r\u1eb1ng <code>T</code> l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u m\u00e0 h\u00e0ng \u0111\u1ee3i \u0111\u00f3 l\u01b0u tr\u1eef)</p> </li> <li> <p><code>void push_front(const T&amp; x)</code>: th\u00eam x v\u00e0o \u0111\u1ea7u deque.</p> </li> <li><code>void push_back(const T&amp; x)</code>: th\u00eam x v\u00e0o cu\u1ed1i deque.</li> <li><code>void pop_front()</code>: x\u00f3a ph\u1ea7n t\u1eed \u0111\u1ea7u kh\u1ecfi deque.</li> <li><code>void pop_back()</code>: x\u00f3a ph\u1ea7n t\u1eed cu\u1ed1i kh\u1ecfi deque.</li> <li><code>T&amp; front()</code>: tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb \u0111\u1ea7u deque.</li> <li><code>T&amp; back()</code>: tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb cu\u1ed1i deque.</li> <li><code>size_type size()</code>: tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed hi\u1ec7n t\u1ea1i trong deque.</li> <li><code>bool empty()</code>: tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb <code>true</code> n\u1ebfu deque r\u1ed7ng v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, <code>false</code> n\u1ebfu deque c\u00f3 ph\u1ea7n t\u1eed.</li> <li> <p><code>void clear()</code>: x\u00f3a to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed trong deque.</p> </li> <li> <p>Ngo\u00e0i ra, kh\u00f4ng gi\u1ed1ng nh\u01b0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u STD <code>queue</code> v\u00e0 <code>stack</code>, c\u1ea5u tr\u00fac d\u1eef li\u1ec7u <code>deque</code> l\u01b0u \u0111\u1ecba ch\u1ec9 c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean: do \u0111\u00f3, D[0] s\u1ebd \u0111\u1ea1i di\u1ec7n cho ph\u1ea7n t\u1eed \u0111\u1ee9ng \u0111\u1ea7u D, v\u00e0 t\u01b0\u01a1ng t\u1ef1 nh\u01b0 th\u1ebf v\u1edbi c\u00e1c ph\u1ea7n t\u1eed ti\u1ebfp theo.</p> </li> <li> <p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u <code>deque</code> n\u00ean d\u00f9ng b\u1ea5t c\u1ee9 khi n\u00e0o m\u00e0 n\u00f3 c\u00f3 th\u1ec3 ch\u1ee9 \u0111\u1ee7 c\u00e1c ph\u1ea7n t\u1eed c\u1ea7n thi\u1ebft; b\u1edfi s\u1eed d\u1ee5ng n\u00f3 s\u1ebd nhanh v\u00e0 \u00edt l\u1ed7i h\u01a1n so v\u1edbi vi\u1ec7c b\u1ea1n t\u1ef1 c\u00e0i \u0111\u1eb7t l\u1ea1i. Trong khi \u0111\u00f3, h\u1ea7u nh\u01b0 b\u1ea1n kh\u00f4ng bao gi\u1edd ph\u1ea3i \u0111\u1ed1i m\u1eb7t v\u1edbi m\u1ed9t v\u1ea5n \u0111\u1ec1 g\u00ec m\u00e0 STD <code>deque</code> v\u1eabn kh\u00f4ng ch\u1ea1y \u0111\u1ee7 nhanh.</p> </li> <li> <p>L\u01b0u \u00fd r\u1eb1ng thao t\u00e1c <code>pop</code> \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong c\u1ea5u tr\u00fac d\u1eef li\u1ec7u <code>deque</code> ch\u1ec9 x\u00f3a \u0111i ph\u1ea7n t\u1eed \u0111\u00f3 nh\u01b0ng kh\u00f4ng tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3. \u0110\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 r\u1ed3i x\u00f3a, ta s\u1ebd th\u1ef1c hi\u1ec7n c\u1ea3 hai thao t\u00e1c g\u1ecdi <code>front</code> ho\u1eb7c <code>back</code> v\u00e0 sau \u0111\u00f3 th\u00ec <code>pop_front</code> ho\u1eb7c <code>pop_back</code>.</p> </li> <li> <p>C\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u STD <code>queue</code> v\u00e0 <code>stack</code>, tr\u1eeb khi b\u1ecb ghi \u0111\u00e8 l\u00ean c\u00e1c \u0111\u1ed1i s\u1ed1, th\u00ec ch\u1ec9 l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a c\u1ea5u tr\u00fac d\u1eef li\u1ec7u <code>deque</code> th\u00f4i. B\u1edfi v\u00ec c\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a <code>stack</code> v\u00e0 <code>queue</code> ch\u1ec9 l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a <code>deque</code>, n\u00ean ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u1ea1o ra n\u00f3 b\u1eb1ng c\u00e1ch gi\u1edbi h\u1ea1n nh\u1eefng thao t\u00e1c <code>deque</code>.</p> </li> </ul>"},{"location":"algo/data-structures/Skip-Lists/","title":"Skip Lists","text":"<p>T\u00e1c gi\u1ea3: V\u0169 chipchip Ph\u00fac Ho\u00e0ng</p> <p>A: \"M\u00e0y AC b\u00e0i Z ki\u1ec3u g\u00ec th\u1ebf? Tao d\u00f9ng set kh\u00f4ng \u0111\u01b0\u1ee3c.\" B: \"D\u1ec5 m\u00e0 m\u00e0y, tao code Splay th\u00f4i. 400 d\u00f2ng 20 ph\u00fat ez gg.\" A: \"-_-\"</p> <p>C\u00e2u chuy\u1ec7n th\u1eadt t\u01b0\u1edfng nh\u01b0 \u0111\u00f9a tr\u00ean c\u0169ng kh\u00f4ng ph\u1ea3i l\u00e0 hi\u1ebfm g\u1eb7p. Splay Tree (hay n\u00f3i r\u1ed9ng h\u01a1n, Balanced Binary Search Tree) l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u to\u00e0n n\u0103ng c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft r\u1ea5t nhi\u1ec1u b\u00e0i to\u00e1n, tuy nhi\u00ean n\u00f3 c\u0169ng l\u00e0 m\u1ed9t th\u1ee9 \u0111\u00e1ng khi\u1ebfp s\u1ee3 \u0111\u1ed1i v\u1edbi d\u00e2n competitive programmers v\u00ec \u0111\u1ed9 kh\u00f3 code c\u1ee7a n\u00f3. Trong m\u1ed9t contest v\u1edbi \u00e1p l\u1ef1c th\u1eddi gian c\u0103ng th\u1eb3ng, ch\u1eb3ng m\u1ea5y ai d\u00e1m code Balanced Binary Search Tree v\u00e0 c\u00f2n \u0111\u1ea3m b\u1ea3o code kh\u00f4ng b\u1ecb bug n\u1eefa. Tuy nhi\u00ean, b\u1ea1n kh\u00f4ng th\u1ec3 ho\u00e0n to\u00e0n tr\u00e1nh \u0111\u01b0\u1ee3c n\u00f3, v\u1eabn c\u00f3 nh\u1eefng b\u00e0i m\u00e0 nh\u1eefng th\u01b0 vi\u1ec7n c\u00f3 s\u1eb5n nh\u01b0 std::set hay nh\u1eefng c\u1ea5u tr\u00fac \u0111\u01a1n gi\u1ea3n nh\u01b0 Segment Tree, Fenwick Tree kh\u00f4ng th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c, v\u00e0 b\u1ea1n v\u1eabn ph\u1ea3i nh\u1edd c\u1eady \u0111\u1ebfn Splay Tree trong n\u1ed7i tuy\u1ec7t v\u1ecdng.</p> <p>May m\u1eafn thay, d\u00e2n competitive programmers \u0111\u00e3 t\u00ecm ra c\u00e1ch s\u1eed d\u1ee5ng Skip Lists nh\u01b0 m\u1ed9t s\u1ef1 thay th\u1ebf cho Balanced Binary Search Tree. Skip Lists v\u1edbi \u00fd t\u01b0\u1edfng h\u1ebft s\u1ee9c \u0111\u01a1n gi\u1ea3n d\u1ec5 nh\u1edb, c\u1ed9ng th\u00eam v\u1edbi kh\u1ea3 n\u0103ng t\u00f9y bi\u1ebfn tuy\u1ec7t v\u1eddi \u0111\u00e3 ph\u1ea7n n\u00e0o l\u00e0m xua tan \u0111i n\u1ed7i s\u1ee3 code kh\u00f3 bug nhi\u1ec1u (tr\u1eeb khi b\u1ea1n c\u00f3 tr\u00ecnh \u0111\u1ed9 Da xua th\u01b0\u1ee3ng th\u1eeba nh\u01b0 nh\u00e2n v\u1eadt B trong \u0111o\u1ea1n h\u1ed9i tho\u1ea1i tr\u00ean; trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, b\u1ea1n c\u00f3 th\u1ec3 b\u1ecf qua b\u00e0i vi\u1ebft n\u00e0y). B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u cho c\u00e1c b\u1ea1n nh\u1eefng \u00fd t\u01b0\u1edfng v\u00e0 c\u00e1ch s\u1eed d\u1ee5ng Skip Lists c\u01a1 b\u1ea3n nh\u1ea5t.</p>"},{"location":"algo/data-structures/Skip-Lists/#bai-toan-co-ban","title":"B\u00e0i to\u00e1n c\u01a1 b\u1ea3n","text":"<p>H\u00e3y l\u1eadp tr\u00ecnh m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u S c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c sau:</p> <ul> <li>Ch\u00e8n m\u1ed9t ph\u1ea7n t\u1eed \\(x\\) v\u00e0o \\(S\\).</li> <li>X\u00f3a m\u1ed9t ph\u1ea7n t\u1eed \\(x\\) kh\u1ecfi \\(S\\).</li> <li>Cho m\u1ed9t ph\u1ea7n t\u1eed \\(x\\), t\u00ecm m\u1ed9t ph\u1ea7n t\u1eed g\u1ea7n \\(x\\) nh\u1ea5t trong \\(S\\).</li> </ul>"},{"location":"algo/data-structures/Skip-Lists/#cac-huong-tiep-can","title":"C\u00e1c h\u01b0\u1edbng ti\u1ebfp c\u1eadn","text":"<p>Ta s\u1ebd x\u00e9t m\u1ed9t s\u1ed1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u (ch\u01b0a \u0111\u1ec1 c\u1eadp \u0111\u1ebfn Skip Lists) s\u1eed d\u1ee5ng \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n c\u01a1 b\u1ea3n tr\u00ean:</p> <ul> <li>Sorted Array: Bi\u1ec3u di\u1ec5n \\(S\\) l\u00e0 m\u1ed9t m\u1ea3ng c\u00e1c ph\u1ea7n t\u1eed. C\u00e1c ph\u1ea7n t\u1eed trong m\u1ea3ng \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n.</li> <li>Ch\u00e8n: D\u1ecbch t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed b\u00ean ph\u1ea3i v\u1ecb tr\u00ed c\u1ea7n ch\u00e8n sang ph\u1ea3i m\u1ed9t ch\u1ec9 s\u1ed1, r\u1ed3i ch\u00e8n ph\u1ea7n t\u1eed c\u1ea7n ch\u00e8n v\u00e0o v\u1ecb tr\u00ed \u0111\u00f3.</li> <li>X\u00f3a: D\u1ecbch t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed b\u00ean ph\u1ea3i ph\u1ea7n t\u1eed b\u1ecb x\u00f3a sang tr\u00e1i m\u1ed9t ch\u1ec9 s\u1ed1.</li> <li>T\u00ecm: T\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n ph\u1ea7n t\u1eed. </li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(N*log(N))\\) v\u1edbi thao t\u00e1c kh\u1edfi t\u1ea1o, \\(O(N)\\) v\u1edbi thao t\u00e1c ch\u00e8n/x\u00f3a, \\(O(log(N))\\) v\u1edbi thao t\u00e1c t\u00ecm ki\u1ebfm.</li> <li>Sorted Linked List: Bi\u1ec3u di\u1ec5n \\(S\\) l\u00e0 m\u1ed9t danh s\u00e1ch li\u00ean k\u1ebft ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed. C\u00e1c ph\u1ea7n t\u1eed trong danh s\u00e1ch li\u00ean k\u1ebft \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n.</li> <li>Ch\u00e8n: Thay \u0111\u1ed5i li\u00ean k\u1ebft gi\u1eefa ph\u1ea7n t\u1eed c\u1ea7n ch\u00e8n, ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc, v\u00e0 ph\u1ea7n t\u1eed \u0111\u1ee9ng sau.</li> <li>X\u00f3a: Thay \u0111\u1ed5i li\u00ean k\u1ebft gi\u1eefa ph\u1ea7n t\u1eed c\u1ea7n ch\u00e8n, ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc, v\u00e0 ph\u1ea7n t\u1eed \u0111\u1ee9ng sau.</li> <li>T\u00ecm: Duy\u1ec7t \\(S\\) t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i.</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(N)\\) v\u1edbi c\u00e1c thao t\u00e1c ch\u00e8n/x\u00f3a/t\u00ecm. \\(O(N*log(N))\\) v\u1edbi thao t\u00e1c kh\u1edfi t\u1ea1o.</li> <li>Binary Search Tree: Bi\u1ec3u di\u1ec5n \\(S\\) l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed. C\u00e2y n\u00e0y c\u00f3 t\u00ednh ch\u1ea5t t\u1ea5t c\u1ea3 c\u00e1c n\u00fat thu\u1ed9c c\u00e2y con b\u00ean tr\u00e1i \u0111\u1ec1u nh\u1ecf h\u01a1n n\u00fat cha, v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c n\u00fat thu\u1ed9c c\u00e2y con b\u00ean ph\u1ea3i \u0111\u1ec1u l\u1edbn h\u01a1n n\u00fat cha.</li> <li>Ch\u00e8n (Nhi\u1ec1u c\u00e1ch l\u00e0m): \u0110i t\u1eeb tr\u00ean g\u1ed1c xu\u1ed1ng, so s\u00e1nh ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\u00e8n v\u1edbi hai n\u00fat con, n\u1ebfu c\u00f3 th\u00ec \u0111i v\u00e0o n\u00fat con, c\u00f2n kh\u00f4ng th\u00ec th\u00eam m\u1ed9t n\u00fat v\u00e0o c\u00e2y ch\u1ee9a ph\u1ea7n t\u1eed c\u1ea7n ch\u00e8n.</li> <li>X\u00f3a (Nhi\u1ec1u c\u00e1ch l\u00e0m): Thay n\u00fat b\u1ecb x\u00f3a b\u1eb1ng n\u00fat l\u1edbn nh\u1ea5t c\u1ee7a c\u00e2y con b\u00ean tr\u00e1i (v\u00e0 x\u00f3a n\u00fat \u0111\u00f3 \u0111i), n\u1ebfu kh\u00f4ng c\u00f3 c\u00e2y con b\u00ean tr\u00e1i th\u00ec thay b\u1eb1ng n\u00fat nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e2y con b\u00ean ph\u1ea3i, n\u1ebfu kh\u00f4ng c\u00f3 con th\u00ec \u0111\u01a1n gi\u1ea3n l\u00e0 x\u00f3a \u0111i.</li> <li>T\u00ecm: \u0110i t\u1eeb tr\u00ean g\u1ed1c xu\u1ed1ng, so s\u00e1nh ph\u1ea7n t\u1eed c\u1ea7n t\u00ecm v\u1edbi hai n\u00fat con, \u0111i v\u00e0o c\u00e2y con ch\u1ee9a n\u00fat c\u1ea7n t\u00ecm, c\u1ee9 th\u1ebf \u0111\u1ebfn khi t\u00ecm \u0111\u01b0\u1ee3c. </li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: V\u1edbi tr\u01b0\u1eddng h\u1ee3p trung b\u00ecnh, c\u00e1c thao t\u00e1c n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(log(N))\\). C\u00f2n v\u1edbi tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t l\u00e0 \\(O(N)\\).</li> <li>Balanced Binary Search Tree: Gi\u1ed1ng Binary Search Tree, nh\u01b0ng c\u00e2y c\u00f3 th\u00eam c\u01a1 ch\u1ebf t\u1ef1 c\u1ea7n b\u1eb1ng \u0111\u1ec3 tr\u00e1nh vi\u1ec7c c\u00e2y b\u1ecb suy bi\u1ebfn, lu\u00f4n gi\u1eef chi\u1ec1u cao c\u00e2y \u1edf m\u1ee9c \u1ed5n \u0111\u1ecbnh (th\u01b0\u1eddng l\u00e0 \\(O(log(N)\\)).</li> </ul> <p>L\u01b0u \u00fd: Thao t\u00e1c ch\u00e8n v\u00e0 x\u00f3a \u0111\u1ec1u ph\u1ea3i \u0111i qua thao t\u00e1c t\u00ecm.</p> <p>Ta nh\u1eadn th\u1ea5y m\u1ed7i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u k\u1ec3 tr\u00ean \u0111\u1ec1u c\u00f3 nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a n\u00f3. Sorted Array c\u00f3 thao t\u00e1c ch\u00e8n x\u00f3a ch\u1eadm, Sorted Linked List c\u00f3 thao t\u00e1c t\u00ecm ch\u1eadm, Binary Search Tree c\u00f3 th\u1ec3 b\u1ecb suy bi\u1ebfn v\u1ec1 chi\u1ec1u cao l\u00e0m cho c\u1ea3 3 thao t\u00e1c \u0111\u1ec1u ch\u1eadm, Balanced Binary Search Tree ho\u00e0n h\u1ea3o nh\u01b0ng l\u1ea1i qu\u00e1 ph\u1ee9c t\u1ea1p \u0111\u1ec3 c\u00e0i \u0111\u1eb7t trong gi\u1edbi h\u1ea1n th\u1eddi gian c\u1ee7a competitive programming.</p> <p>T\u1eeb \u0111\u00f3, Skip Lists, m\u1ed9t phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p c\u1ee7a Sorted Linked List, \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong competitive programming nh\u01b0 m\u1ed9t s\u1ef1 thay th\u1ebf cho Balanced Binary Search Tree. V\u1ec1 t\u1ed9c \u0111\u1ed9 v\u00e0 b\u1ed9 nh\u1edb, Skip Lists kh\u00f4ng thua g\u00ec Balanced Binary Search Tree, tuy nhi\u00ean l\u1ea1i d\u1ec5 c\u00e0i \u0111\u1eb7t h\u01a1n r\u1ea5t nhi\u1ec1u.</p>"},{"location":"algo/data-structures/Skip-Lists/#y-tuong-skip-lists","title":"\u00dd t\u01b0\u1edfng Skip Lists","text":"<p>Skip Lists l\u00e0 m\u1ed9t phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p c\u1ee7a Sorted Linked Lists. Ta h\u00e3y b\u1eaft \u0111\u1ea7u v\u1edbi m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 Sorted Linked List ch\u1ee9a 8 s\u1ed1 v\u00e0 ngh\u0129 c\u00e1ch c\u1ea3i thi\u1ec7n v\u1ea5n \u0111\u1ec1 c\u1ee7a n\u00f3.</p> <p></p> <p>Sorted Linked List c\u00f3 \u01b0u \u0111i\u1ec3m l\u1edbn khi thao t\u00e1c ch\u00e8n x\u00f3a ch\u1ec9 m\u1ea5t \\(O(1)\\) (ta ch\u1ec9 vi\u1ec7c ch\u1ec9nh s\u1eeda li\u00ean k\u1ebft gi\u1eefa ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\u00e8n/x\u00f3a v\u00e0 c\u00e1c ph\u1ea7n t\u1eed \u0111\u1eb1ng tr\u01b0\u1edbc/sau). Tuy nhi\u00ean thao t\u00e1c t\u00ecm ki\u1ebfm l\u1ea1i m\u1ea5t \\(O(N)\\) do ph\u1ea3i duy\u1ec7t t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i.</p> <p></p> <p>M\u1ed9t \u00fd t\u01b0\u1edfng \u0111\u1ec3 c\u00e2n b\u1eb1ng \u0111i\u1ec1u n\u00e0y l\u00e0 ta th\u00eam nhi\u1ec1u t\u1ea7ng li\u00ean k\u1ebft, c\u1ee9 l\u00ean m\u1ed9t t\u1ea7ng s\u1ed1 li\u00ean k\u1ebft l\u1ea1i gi\u1ea3m c\u00f2n m\u1ed9t n\u1eeda. Khi t\u00ecm ph\u1ea7n t\u1eed, ta s\u1ebd duy\u1ec7t t\u1eeb tr\u00e1i sang ph\u1ea3i nh\u01b0ng s\u1ebd nh\u1ea3y xa h\u01a1n nh\u1edd nh\u1eefng li\u00ean k\u1ebft tr\u00ean c\u00e1c t\u1ea7ng cao, khi n\u00e0o kh\u00f4ng nh\u1ea3y \u0111\u01b0\u1ee3c m\u1edbi xu\u1ed1ng t\u1ea7ng th\u1ea5p h\u01a1n. \u00dd t\u01b0\u1edfng n\u00e0y kh\u00e1 gi\u1ed1ng v\u1edbi ph\u01b0\u01a1ng ph\u00e1p nh\u1ea3y l\u00ean t\u1ed5 ti\u00ean th\u1ee9 \\(2^K\\) khi t\u00ecm Lowest Common Ancestor (LCA).</p> <p></p> <p>Trong h\u00ecnh tr\u00ean, \u0111\u1ec3 t\u00ecm s\u1ed1 \\(7\\), ta s\u1ebd nh\u1ea3y th\u1eb3ng t\u1eeb \\(0\\) \u0111\u1ebfn \\(5\\) b\u1eb1ng li\u00ean k\u1ebft tr\u00ean t\u1ea7ng th\u1ee9 ba, sau \u0111\u00f3 nh\u1ea3y t\u1eeb \\(5\\) \u0111\u1ebfn \\(6\\) b\u1eb1ng li\u00ean k\u1ebft tr\u00ean t\u1ea7ng th\u1ee9 nh\u1ea5t. Ta t\u00ecm \u0111\u01b0\u1ee3c \\(6\\) l\u00e0 s\u1ed1 g\u1ea7n nh\u1ea5t v\u1edbi \\(7\\).</p> <p>V\u1edbi c\u1ea5u tr\u00fac n\u00e0y, ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c t\u00ecm trong \\(O(log(N))\\). Tuy nhi\u00ean vi\u1ec7c ch\u00e8n v\u00e0 x\u00f3a m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o s\u1ebd l\u00e0m thay \u0111\u1ed5i c\u1ea5u tr\u00fac n\u00e0y. Ch\u1eb3ng h\u1ea1n n\u1ebfu ta ch\u00e8n s\u1ed1 \\(7\\):</p> <p></p> <p>Nh\u01b0 h\u00ecnh tr\u00ean, c\u1ea5u tr\u00fac c\u1ee7a ta kh\u00f4ng c\u00f2n \"chu\u1ea9n\", c\u00f3 ngh\u0129a l\u00e0 ch\u00ednh x\u00e1c t\u1ea7ng th\u1ee9 nh\u1ea5t li\u00ean k\u1ebft c\u00e1ch \\(2^0\\), t\u1ea7ng th\u1ee9 hai li\u00ean k\u1ebft c\u00e1ch \\(2^1\\), t\u1ea7ng th\u1ee9 ba li\u00ean k\u1ebft c\u00e1ch \\(2^2\\), ... Tuy nhi\u00ean, v\u1edbi c\u1ea5u tr\u00fac nh\u01b0 h\u00ecnh tr\u00ean v\u1eabn ch\u1ea1y t\u1ed1t - ch\u1ec9 c\u00f3 \u0111i\u1ec1u \u1edf m\u1ed7i t\u1ea7ng ta c\u00f3 th\u1ec3 ph\u1ea3i nh\u1ea3y nhi\u1ec1u h\u01a1n m\u1ed9t l\u1ea7n (ch\u1eb3ng h\u1ea1n, mu\u1ed1n t\u00ecm s\u1ed1 \\(7\\), \u1edf t\u1ea7ng th\u1ee9 nh\u1ea5t ta ph\u1ea3i nh\u1ea3y \u0111\u1ebfn hai l\u1ea7n \\(5\\) ~&gt; \\(6\\) ~&gt; \\(7\\)).</p> <p>T\u1eeb \u0111\u00f3 ta c\u00f3 nh\u1eadn x\u00e9t sau: C\u00e1c li\u00ean k\u1ebft tr\u00ean m\u1ed7i t\u1ea7ng kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i chu\u1ea9n, tuy nhi\u00ean, n\u1ebfu c\u00e1c \u0111\u1ed9 d\u00e0i gi\u1eefa c\u00e1c li\u00ean k\u1ebft x\u1ea5p x\u1ec9 nhau v\u00e0 s\u1ed1 li\u00ean k\u1ebft \u1edf t\u1ea7ng tr\u00ean x\u1ea5p x\u1ec9 b\u1eb1ng n\u1eeda s\u1ed1 li\u00ean k\u1ebft \u1edf t\u1ea7ng d\u01b0\u1edbi, thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm v\u1eabn ch\u1ea1y t\u1ed1t v\u00e0 kh\u00f4ng m\u1ea5t qu\u00e1 nhi\u1ec1u l\u1ea7n nh\u1ea3y \u1edf m\u1ed7i t\u1ea7ng. Ta s\u1ebd duy tr\u00ec c\u1ea5u tr\u00fac n\u00e0y b\u1eb1ng k\u0129 thu\u1eadt tung \u0111\u1ed3ng xu ng\u1eabu nhi\u00ean:</p> <p>M\u1ed7i l\u1ea7n ch\u00e8n m\u1ed9t n\u00fat v\u00e0o, \u0111\u1ea7u ti\u00ean ta x\u00e2y d\u1ef1ng li\u00ean k\u1ebft \u1edf t\u1ea7ng th\u1ee9 nh\u1ea5t cho n\u00f3. Sau \u0111\u00f3 ta tung \u0111\u1ed3ng xu, n\u1ebfu ng\u1eeda th\u00ec ta x\u00e2y d\u1ef1ng li\u00ean k\u1ebft \u1edf t\u1ea7ng tr\u00ean v\u00e0 ti\u1ebfp t\u1ee5c tung \u0111\u1ed3ng xu, c\u00f2n n\u1ebfu s\u1ea5p ta d\u1eebng vi\u1ec7c x\u00e2y d\u1ef1ng li\u00ean k\u1ebft l\u1ea1i.</p> <p></p> <p>\u0110\u00e2y ch\u00ednh l\u00e0 Skip Lists - m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng b\u1eb1ng nhi\u1ec1u t\u1ea7ng Sorted Linked List \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean, trong \u0111\u00f3 t\u1ea7ng cao ch\u1ee9a nh\u1eefng b\u01b0\u1edbc nh\u1ea3y d\u00e0i h\u01a1n v\u00e0 t\u1ea7ng th\u1ea5p ch\u1ee9a nh\u1eefng b\u01b0\u1edbc nh\u1ea3y ng\u1eafn h\u01a1n. Skip Lists cho ph\u00e9p ta th\u1ef1c hi\u1ec7n thao t\u00e1c t\u00ecm ki\u1ebfm v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p x\u1ea5p x\u1ec9 \\(O(log(N))\\).</p>"},{"location":"algo/data-structures/Skip-Lists/#so-sanh-cac-cau-truc-du-lieu","title":"So s\u00e1nh c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u","text":""},{"location":"algo/data-structures/Skip-Lists/#huong-dan-chi-tiet","title":"H\u01b0\u1edbng d\u1eabn chi ti\u1ebft","text":"<p>H\u1ecdc ph\u1ea3i \u0111i \u0111\u00f4i v\u1edbi h\u00e0nh. C\u00e1ch hi\u1ec3u l\u00fd thuy\u1ebft nhanh nh\u1ea5t l\u00e0 \u0111\u1eadp ngay v\u00e0o b\u00e0i t\u1eadp. Ta s\u1ebd \u0111i chi ti\u1ebft v\u00e0o c\u00e1ch s\u1eed d\u1ee5ng Skip Lists \u0111\u1ec3 gi\u1ea3i b\u00e0i CPPSET. B\u1ea1n h\u00e3y \u0111\u1ecdc \u0111\u1ec1 v\u00e0 ng\u1eabm ngh\u0129 m\u1ed9t l\u00fac tr\u01b0\u1edbc khi \u0111\u1ecdc ti\u1ebfp b\u00e0i vi\u1ebft n\u00e0y. B\u00e0i gi\u1ea3i \u1edf d\u01b0\u1edbi \u0111\u01b0\u1ee3c code b\u1eb1ng ng\u00f4n ng\u1eef C++98.</p> <p>CPPSET, \u0111\u00fang nh\u01b0 t\u00ean g\u1ecdi c\u1ee7a n\u00f3, b\u1ea1n c\u00f3 th\u1ec3 AC trong m\u1ed9t n\u1ed1t nh\u1ea1c n\u1ebfu s\u1eed d\u1ee5ng std::set c\u1ee7a C++, m\u1ed9t container \u0111\u00e3 \u0111\u01b0\u1ee3c code s\u1eb5n b\u1eb1ng Reb-Black Tree (m\u1ed9t lo\u1ea1i Balanced Binary Search Tree) \u0111\u1ec3 th\u1ef1c hi\u1ec7n b\u00e0i to\u00e1n c\u01a1 b\u1ea3n n\u00eau \u1edf \u0111\u1ea7u. \u0110\u1ec3 luy\u1ec7n t\u1eadp, ta s\u1ebd t\u1ef1 code m\u1ed9t c\u00e1i set \"d\u1ecfm\" b\u1eb1ng Skip Lists.</p> <p>Tr\u01b0\u1edbc ti\u00ean ta c\u1ea7n x\u00e2y d\u1ef1ng c\u00e1c struct bi\u1ec3u di\u1ec5n Skip Lists. Ta s\u1ebd c\u00f3 3 struct: <code>SkipLists</code>, <code>Column</code>, <code>Cell</code>. <code>SkipLists</code> l\u00e0 m\u1ed9t danh s\u00e1ch c\u00e1c <code>Column</code> li\u00ean k\u1ebft v\u1edbi nhau. <code>Column</code> l\u00e0 m\u1ed9t c\u1ed9t g\u1ed3m c\u00e1c <code>Cell</code>, bi\u1ec3u di\u1ec5n cho c\u1ed9t li\u00ean k\u1ebft c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed trong set c\u1ee7a ta v\u1edbi c\u00e1c ph\u1ea7n t\u1eed \u0111\u1eb1ng tr\u01b0\u1edbc v\u00e0 \u0111\u1eb1ng sau. <code>Cell</code> l\u00e0 m\u1ed9t li\u00ean k\u1ebft c\u01a1 b\u1ea3n nh\u1ea5t tr\u00ean m\u1ed9t t\u1ea7ng c\u1ee7a <code>Column</code>, ch\u1ee9a hai li\u00ean k\u1ebft \u0111\u1ebfn <code>Column</code> \u0111\u1eb1ng tr\u01b0\u1edbc v\u00e0 \u0111\u1eb1ng sau. \u0110\u1ec3 cho d\u1ec5 hi\u1ec3u, b\u1ea1n h\u00e3y xem h\u00ecnh d\u01b0\u1edbi.</p> <p></p> <pre><code>struct SkipLists {\n    static const int MAX_LEVEL = 20; // Gi\u1edbi h\u1ea1n s\u1ed1 t\u1ea7ng, n\u00ean ch\u1ecdn m\u1ed9t s\u1ed1 kho\u1ea3ng log(N)\n    Column *head, *tail; // th\u00eam 2 c\u1ed9t kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb v\u00e0o \u0111\u1ea7u v\u00e0 cu\u1ed1i \u0111\u1ec3 d\u1ec5 x\u1eed l\u00ed\n};\n\nstruct Column {\n    int value;\n    vector&lt;Cell&gt; cells;\n};\n\nstruct Cell {\n    Column *previous_column, *next_column; // M\u1ed7i Cell c\u00f3 hai li\u00ean k\u1ebft \u0111\u1ebfn Column \u0111\u1eb1ng tr\u01b0\u1edbc v\u00e0 \u0111\u1eb1ng sau (kh\u00f4ng gi\u1ed1ng trong h\u00ecnh ch\u1ec9 v\u1ebd m\u1ed9t li\u00ean k\u1ebft v\u1ec1 \u0111\u1eb1ng sau cho \u0111\u01a1n gi\u1ea3n)\n};\n</code></pre> <p>Sau khi \u0111\u00e3 bi\u1ebft c\u00e1ch bi\u1ec3u di\u1ec5n d\u1eef li\u1ec7u, ta s\u1ebd code c\u00e1c h\u00e0m cho <code>SkipLists</code>. Set \"d\u1ecfm\" c\u1ee7a ch\u00fang ta s\u1ebd g\u1ed3m 6 h\u00e0m sau:</p> <pre><code>struct SkipLists {\n    static const int MAX_LEVEL = 20;\n    Column *head, *tail;\n\n    SkipLists(); // Kh\u1edfi t\u1ea1o\n    bool empty(); // Ki\u1ec3m tra SkipLists c\u00f3 r\u1ed7ng kh\u00f4ng\n    Column *lower_bound(int); // T\u00ecm v\u1ecb tr\u00ed Column ch\u1ee9a gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t kh\u00f4ng nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm\n    Column *upper_bound(int); // T\u00ecm v\u1ecb tr\u00ed Column ch\u1ee9a gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm\n    void insert(int); // Ch\u00e8n m\u1ed9t ph\u1ea7n t\u1eed mang gi\u00e1 tr\u1ecb cho tr\u01b0\u1edbc v\u00e0o SkipLists\n    void erase(int); // X\u00f3a m\u1ed9t ph\u1ea7n t\u1eed mang gi\u00e1 tr\u1ecb cho tr\u01b0\u1edbc kh\u1ecfi SkipLists\n};\n</code></pre> <p>Ta s\u1ebd b\u1eaft \u0111\u1ea7u v\u1edbi constructor <code>SkipLists()</code>. \u0110\u1ec3 kh\u1edfi t\u1ea1o <code>SkipLists</code>, ta s\u1ebd t\u1ea1o ra hai c\u1ed9t <code>head</code> v\u00e0 <code>tail</code> c\u00f3 chi\u1ec1u cao l\u00e0 s\u1ed1 t\u1ea7ng t\u1ed1i \u0111a, v\u00e0 t\u1ea1i li\u00ean k\u1ebft gi\u1eefa <code>head</code> v\u00e0 <code>tail</code> tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c <code>Cell</code>.</p> <pre><code>SkipLists::SkipLists() {\n    head = new Column;\n    tail = new Column;\n    head-&gt;value = 0;\n    tail-&gt;value = 0;\n    for(int i = 0; i &lt; MAX_LEVEL; i++) {\n        head-&gt;cells.push_back((Cell){NULL, tail});\n        tail-&gt;cells.push_back((Cell){head, NULL});\n    }\n}\n</code></pre> <p>V\u1edbi h\u00e0m <code>empty()</code>, ta ch\u1ec9 \u0111\u01a1n gi\u1ea3n ki\u1ec3m tra li\u00ean k\u1ebft c\u1ea5p 0 (li\u00ean k\u1ebft tr\u1ef1c ti\u1ebfp) c\u1ee7a <code>head</code> c\u00f3 n\u1ed1i v\u1edbi <code>tail</code> kh\u00f4ng.</p> <pre><code>bool SkipLists::empty() {\n    return head-&gt;cells[0].next_column == tail;\n}\n</code></pre> <p>V\u1edbi h\u00e0m <code>lower_bound()</code>, ta s\u1ebd \u0111i t\u1eeb t\u1ea7ng cao nh\u1ea5t \u0111\u1ebfn t\u1ea7ng th\u1ea5p nh\u1ea5t, ch\u1eebng n\u00e0o nh\u1ea3y v\u1ec1 ph\u00eda tr\u01b0\u1edbc v\u1eabn v\u00e0o m\u1ed9t ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm th\u00ec ta c\u1ee9 nh\u1ea3y. Sau khi duy\u1ec7t, ta s\u1ebd \u0111\u1ee9ng \u1edf ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n t\u00ecm. Ta nh\u1ea3y tr\u00ean li\u00ean k\u1ebft c\u1ea5p 0 m\u1ed9t l\u1ea7n n\u1eefa \u0111\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c <code>lower_bound()</code>.</p> <pre><code>Column *SkipLists::lower_bound(int value) {\n    Column *iter = head;\n    for(int level = MAX_LEVEL - 1; level &gt;= 0; level--) {\n        while(iter-&gt;cells[level].next_column != tail &amp;&amp; iter-&gt;cells[level].next_column-&gt;value &lt; value) {\n            iter = iter-&gt;cells[level].next_column;\n        }\n    }\n    return iter-&gt;cells[0].next_column;\n}\n</code></pre> <p>H\u00e0m <code>upper_bound()</code> kh\u00f4ng kh\u00e1c g\u00ec <code>lower_bound()</code>, ngo\u1ea1i tr\u1eeb vi\u1ec7c thay d\u1ea5u &lt; th\u00e0nh &lt;= l\u00fac so s\u00e1nh v\u1edbi <code>value</code>.</p> <pre><code>Column *SkipLists::upper_bound(int value) {\n    Column *iter = head;\n    for(int level = MAX_LEVEL - 1; level &gt;= 0; level--) {\n        while(iter-&gt;cells[level].next_column != tail &amp;&amp; iter-&gt;cells[level].next_column-&gt;value &lt;= value) {\n            iter = iter-&gt;cells[level].next_column;\n        }\n    }\n    return iter-&gt;cells[0].next_column;\n}\n</code></pre> <p>V\u1edbi h\u00e0m <code>insert()</code>, ta s\u1ebd chia th\u00e0nh 3 b\u01b0\u1edbc sau: * S\u1eed d\u1ee5ng <code>lower_bound()</code> \u0111\u1ec3 ki\u1ec3m tra gi\u00e1 tr\u1ecb \u0111\u00e3 t\u1ed3n t\u1ea1i trong <code>SkipLists</code> ch\u01b0a. N\u1ebfu \u0111\u00e3 t\u1ed3n t\u1ea1i, tho\u00e1t kh\u1ecfi h\u00e0m. * T\u1ea1o ra m\u1ed9t <code>Column</code> m\u1edbi \u0111\u1ec3 ch\u00e8n v\u00e0o <code>SkipLists</code>. Ta s\u1ebd s\u1eed d\u1ee5ng h\u00e0m <code>rand()</code> \u0111\u1ec3 tung \u0111\u1ed3ng xu, x\u00e2y d\u1ef1ng chi\u1ec1u cao cho <code>Column</code> n\u00e0y. * Ch\u00e8n <code>Column</code> v\u00e0o <code>SkipLists</code>. Ta duy\u1ec7t y nh\u01b0 trong <code>lower_bound()</code> v\u00e0 <code>upper_bound()</code>, \u1edf m\u1ed7i t\u1ea7ng ch\u00e8n li\u00ean k\u1ebft v\u1edbi <code>Column</code> v\u00e0o hai c\u1ed9t \u0111\u1eb1ng sau v\u00e0 \u0111\u1eb1ng tr\u01b0\u1edbc <code>Column</code>.</p> <pre><code>void SkipLists::insert(int value) {\n    // Ki\u1ec3m tra value \u0111\u00e3 t\u1ed3n t\u1ea1i ch\u01b0a\n    Column *temp = lower_bound(value);\n    if(temp != tail &amp;&amp; temp-&gt;value == value) {\n        return;\n    }\n    // T\u1ea1o inserted_column l\u00e0 c\u1ed9t ch\u1ee9a value \u0111\u1ec3 ch\u00e8n v\u00e0o SkipLists\n    Column *inserted_column = new Column;\n    inserted_column-&gt;value = value;\n    inserted_column-&gt;cells.push_back((Cell){NULL, NULL});\n    // Tung \u0111\u1ed3ng xu t\u0103ng chi\u1ec1u cao\n    while(inserted_column-&gt;cells.size() &lt; MAX_LEVEL &amp;&amp; rand() % 2 == 0) {\n        inserted_column-&gt;cells.push_back((Cell){NULL, NULL});\n    }\n    // Duy\u1ec7t \u0111\u1ec3 ch\u00e8n\n    Column *iter = head;\n    for(int level = MAX_LEVEL - 1; level &gt;= 0; level--) {\n        while(iter-&gt;cells[level].next_column != tail &amp;&amp; iter-&gt;cells[level].next_column-&gt;value &lt; value) {\n            iter = iter-&gt;cells[level].next_column;\n        }\n        if(level &lt; inserted_column-&gt;cells.size()) {\n            // N\u1ed1i iter v\u1edbi inserted_column, n\u1ed1i inserted_column v\u1edbi next_iter\n            Column *next_iter = iter-&gt;cells[level].next_column;\n            iter-&gt;cells[level].next_column = inserted_column;\n            next_iter-&gt;cells[level].previous_column = inserted_column;\n            inserted_column-&gt;cells[level].previous_column = iter;\n            inserted_column-&gt;cells[level].next_column = next_iter;\n        }\n    }\n}\n</code></pre> <p>V\u1edbi h\u00e0m <code>erase()</code>, ta s\u1ebd chia th\u00e0nh 3 b\u01b0\u1edbc sau: * S\u1eed d\u1ee5ng <code>lower_bound()</code> \u0111\u1ec3 ki\u1ec3m tra gi\u00e1 tr\u1ecb \u0111\u00e3 t\u1ed3n t\u1ea1i trong <code>SkipLists</code> ch\u01b0a. N\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i, tho\u00e1t kh\u1ecfi h\u00e0m. * X\u00f3a c\u1ed9t ch\u1ee9a gi\u00e1 tr\u1ecb c\u1ea7n x\u00f3a kh\u1ecfi <code>SkipLists</code> b\u1eb1ng c\u00e1ch n\u1ed1i t\u1eebng li\u00ean k\u1ebft gi\u1eefa c\u00e1c <code>Cell</code> li\u1ec1n tr\u01b0\u1edbc v\u00e0 li\u1ec1n sau n\u00f3 tr\u00ean t\u1eebng t\u1ea7ng. * X\u00f3a c\u1ed9t ch\u1ee9a gi\u00e1 tr\u1ecb c\u1ea7n x\u00f3a \u0111\u1ec3 gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb.</p> <pre><code>void SkipLists::erase(int value) {\n    // Ki\u1ec3m tra value \u0111\u00e3 t\u1ed3n t\u1ea1i ch\u01b0a\n    Column *erased_column = lower_bound(value);\n    if(erased_column == tail || erased_column-&gt;value != value) {\n        return;\n    }\n    // Duy\u1ec7t \u0111\u1ec3 x\u00f3a\n    Column *iter = head;\n    for(int level = MAX_LEVEL - 1; level &gt;= 0; level--) {\n        while(iter-&gt;cells[level].next_column != tail &amp;&amp; iter-&gt;cells[level].next_column-&gt;value &lt;= value) {\n            iter = iter-&gt;cells[level].next_column;\n        }\n        if(iter == erased_column) {\n            // N\u1ed1i previous_iter v\u1edbi next_iter\n            Column *previous_iter = iter-&gt;cells[level].previous_column, *next_iter = iter-&gt;cells[level].next_column;\n            previous_iter-&gt;cells[level].next_column = next_iter;\n            next_iter-&gt;cells[level].previous_column = previous_iter;\n        }\n    }\n    delete erased_column;\n}\n</code></pre> <p>V\u1edbi 6 h\u00e0m tr\u00ean, b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 m\u00f4 ph\u1ecfng m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n m\u1ed9t c\u00e1i set \"d\u1ecfm\" \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y. B\u1ea1n h\u00e3y th\u1eed t\u1ef1 l\u00e0m ti\u1ebfp v\u00e0 n\u1ed9p tr\u00ean SPOJ nh\u00e9. To\u00e0n b\u1ed9 code cho b\u00e0i CPPSET c\u00f3 th\u1ec3 xem \u1edf \u0111\u00e2y.</p>"},{"location":"algo/data-structures/Skip-Lists/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<ul> <li>\u1ede tr\u00ean m\u1edbi l\u00e0 m\u1ed9t code Skip Lists \u0111\u01a1n gi\u1ea3n nh\u1ea5t m\u00f4 ph\u1ecfng std::set \u0111\u1ec3 gi\u1ea3i b\u00e0i CPPSET. Li\u1ec7u b\u1ea1n c\u00f3 th\u1ec3 code l\u1ea1i m\u1ed9t std::set ho\u00e0n h\u1ea3o b\u1eb1ng Skip Lists kh\u00f4ng? H\u00e3y th\u1eed xem!</li> <li>Code tr\u00ean s\u1eed d\u1ee5ng c\u1ea3 li\u00ean k\u1ebft xu\u00f4i (<code>next_column</code>) v\u00e0 li\u00ean k\u1ebft ng\u01b0\u1ee3c (<code>previous_column</code>) \u0111\u1ec3 d\u1ec5 x\u1eed l\u00ed. B\u1ea1n c\u00f3 th\u1ec3 code l\u1ea1i CPPSET m\u00e0 kh\u00f4ng c\u1ea7n s\u1eed d\u1ee5ng li\u00ean k\u1ebft ng\u01b0\u1ee3c kh\u00f4ng?</li> <li>Khi x\u00e2y d\u1ef1ng c\u1ed9t \u0111\u1ec3 ch\u00e8n v\u00e0o Skip Lists, ta s\u1eed d\u1ee5ng k\u0129 thu\u1eadt tung \u0111\u1ed3ng xu v\u1edbi x\u00e1c su\u1ea5t 1/2 m\u1ed7i m\u1eb7t \u0111\u1ec3 x\u00e2y d\u1ef1ng chi\u1ec1u cao c\u1ed9t. T\u1ea1i sao ph\u1ea3i l\u00e0 1/2, li\u1ec7u c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t con s\u1ed1 kh\u00e1c kh\u00f4ng? B\u1ea1n h\u00e3y th\u1eed c\u00e1c con s\u1ed1 kh\u00e1c nhau, s\u1eed d\u1ee5ng c\u1ea3 ph\u00e2n t\u00edch l\u00fd thuy\u1ebft v\u00e0 th\u1ef1c nghi\u1ec7m, cho th\u1ea5y \u0111\u1ed9 hi\u1ec7u qu\u1ea3 c\u1ee7a c\u00e1c con s\u1ed1 kh\u00e1c.</li> <li>H\u1eb3n b\u1ea1n s\u1ebd th\u1eafc m\u1eafc d\u00f9ng Skip Lists l\u00e0m g\u00ec khi n\u00f3 c\u0169ng ch\u1ec9 \u0111\u1ec3 thay std::set, m\u00e0 std::set th\u00ec c\u00f3 s\u1eb5n r\u1ed3i. Skip Lists c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng v\u00e0 kh\u1ea3 n\u0103ng t\u00f9y bi\u1ebfn n\u00e2ng cao m\u00e0 s\u1ebd \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong ph\u1ea7n 2 c\u1ee7a b\u00e0i vi\u1ebft n\u00e0y, gi\u00fap n\u00f3 l\u00e0m \u0111\u01b0\u1ee3c nh\u1eefng \u0111i\u1ec1u std::set kh\u00f4ng th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c, \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 t\u00ecm ph\u1ea7n th\u1eed l\u1edbn th\u1ee9 k trong t\u1eadp h\u1ee3p. B\u1ea1n th\u1eed t\u1ef1 ngh\u0129 c\u00e1ch t\u00ecm ph\u1ea7n t\u1eed l\u1edbn th\u1ee9 k trong Skip Lists xem.</li> </ul>"},{"location":"algo/data-structures/Skip-Lists/#loi-ket","title":"L\u1eddi k\u1ebft","text":"<p>Tr\u00ean \u0111\u00e2y l\u00e0 nh\u1eefng g\u00ec c\u01a1 b\u1ea3n nh\u1ea5t c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 bi\u1ebft v\u1ec1 Skip Lists, hi v\u1ecdng c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u tuy\u1ec7t v\u1eddi n\u00e0y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 trong c\u00e1c contests. C\u00e1 nh\u00e2n m\u00ecnh th\u1ea5y Skip Lists l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u r\u1ea5t hay nh\u01b0ng \u00edt \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, competitive programmers Vi\u1ec7t Nam ch\u00fang ta th\u01b0\u1eddng th\u00edch d\u00f9ng Splay Tree h\u01a1n m\u1eb7c d\u00f9 ch\u1eb3ng m\u1ea5y ai d\u00e1m code l\u00fac \u0111i thi... M\u00ecnh r\u1ea5t mong sau b\u00e0i vi\u1ebft n\u00e0y m\u1ecdi ng\u01b0\u1eddi s\u1ebd d\u00f9ng Skip Lists nhi\u1ec1u h\u01a1n.</p> <p>Nh\u1eefng c\u00e1ch s\u1eed d\u1ee5ng Skip Lists n\u00e2ng cao s\u1ebd \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong ph\u1ea7n 2, m\u1ecdi ng\u01b0\u1eddi c\u00f9ng \u0111\u00f3n \u0111\u1ecdc nh\u00e9.</p>"},{"location":"algo/data-structures/Stack/","title":"Stack (ng\u0103n x\u1ebfp)","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n H\u00e0 Duy - THPT Chuy\u00ean H\u00e0 N\u1ed9i - Amsterdam</p> <p>Reviewer: Ho\u00e0ng Xu\u00e2n Nh\u1eadt</p>"},{"location":"algo/data-structures/Stack/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Stack l\u00e0 m\u1ed9t danh s\u00e1ch \u0111\u01b0\u1ee3c b\u1ed5 sung 2 thao t\u00e1c: th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i danh s\u00e1ch, v\u00e0 lo\u1ea1i b\u1ecf m\u1ed9t ph\u1ea7n t\u1eed \u1edf cu\u1ed1i danh s\u00e1ch. V\u00ed tr\u00ed cu\u1ed1i c\u1ee7a Stack \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ec9nh (top).</p> <p>C\u00f3 th\u1ec3 h\u00ecnh dung Stack nh\u01b0 m\u1ed9t ch\u1ed3ng s\u00e1ch. Vi\u1ec7c \u0111\u1eb7t m\u1ed9t quy\u1ec3n s\u00e1ch l\u00ean tr\u00ean c\u00f9ng ch\u00ednh l\u00e0 thao t\u00e1c th\u00eam ph\u1ea7n t\u1eed, v\u00e0 l\u1ea5y ra quy\u1ec3n s\u00e1ch \u1edf tr\u00ean \u0111\u1ea7u l\u00e0 thao t\u00e1c lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed. Nh\u01b0 v\u1eady, quy\u1ec3n s\u00e1ch \u0111\u01b0\u1ee3c \u0111\u1eb7t v\u00e0o sau c\u00f9ng s\u1ebd lu\u00f4n \u0111\u01b0\u1ee3c l\u1ea5y ra tr\u01b0\u1edbc ti\u00ean. V\u00ec t\u00ednh ch\u1ea5t n\u00e0y, Stack c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 danh s\u00e1ch LIFO (Last In - First Out, hay v\u00e0o sau - ra tr\u01b0\u1edbc).</p> <p>H\u00ecnh \u1ea3nh minh h\u1ecda cho Stack ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed ki\u1ec3u <code>char</code>: </p> <p>Stack c\u00f3 kh\u00e1 nhi\u1ec1u \u1ee9ng d\u1ee5ng trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd xem x\u00e9t c\u00e1c \u1ee9ng d\u1ee5ng \u0111i\u1ec3n h\u00ecnh c\u1ee7a Stack.</p>"},{"location":"algo/data-structures/Stack/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":""},{"location":"algo/data-structures/Stack/#cai-at-thu-cong","title":"C\u00e0i \u0111\u1eb7t th\u1ee7 c\u00f4ng","text":"<p>Ta c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n Stack b\u1eb1ng m\u1ed9t m\u1ea3ng, c\u00f9ng v\u1edbi bi\u1ebfn <code>top</code> bi\u1ec3u di\u1ec5n v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed n\u1eb1m \u1edf \u0111\u1ec9nh Stack. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t Stack ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c ki\u1ec3u <code>int</code>: <pre><code>const int MAXN = 1e5 + 2;\n\nint st[MAXN];\nint top = 0;\n\nvoid push(int x) // th\u00eam x v\u00e0o cu\u1ed1i Stack\n{\n    ++top;\n    st[top] = x;\n}\n\nvoid pop() // lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u1edf cu\u1ed1i Stack\n{\n    assert(top); // \u0111\u1ea3m b\u1ea3o Stack \u0111ang ch\u1ee9a \u00edt nh\u1ea5t 1 ph\u1ea7n t\u1eed\n    --top;\n}\n\nint peek() // tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u1edf \u0111\u1ec9nh Stack\n{\n    return st[top];\n}\n</code></pre></p>"},{"location":"algo/data-structures/Stack/#su-dung-thu-vien-chuan","title":"S\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n chu\u1ea9n","text":"<p>Th\u01b0 vi\u1ec7n chu\u1ea9n c\u1ee7a C++ cho ph\u00e9p ta s\u1eed d\u1ee5ng Stack qua ki\u1ec3u d\u1eef li\u1ec7u <code>stack</code> trong header c\u00f9ng t\u00ean. C\u00e1c thao t\u00e1c ch\u00ednh tr\u00ean <code>stack</code> l\u00e0:</p> <ul> <li><code>push</code>: th\u00eam ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i danh s\u00e1ch</li> <li><code>top</code>: tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed \u1edf cu\u1ed1i danh s\u00e1ch</li> <li><code>pop</code>: lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u1edf cu\u1ed1i danh s\u00e1ch</li> </ul> <p>Ngo\u00e0i ra, <code>stack</code> c\u0169ng h\u1ed7 tr\u1ee3 c\u00e1c thao t\u00e1c: * <code>size</code>: tr\u1ea3 v\u1ec1 s\u1ed1 ph\u1ea7n t\u1eed hi\u1ec7n c\u00f3 trong stack * <code>empty</code>: tr\u1ea3 v\u1ec1 tr\u1ea1ng th\u00e1i c\u1ee7a stack (\\(true\\) n\u1ebfu stack r\u1ed7ng, \\(false\\) n\u1ebfu stack c\u00f3 \u00edt nh\u1ea5t 1 ph\u1ea7n t\u1eed)</p> <p>V\u00ed d\u1ee5: <pre><code>## include &lt;iostream&gt;\n## include &lt;stack&gt;\n\nusing namespace std;\n\nint main()\n{\n    stack&lt;int&gt; st;\n    st.push(5); // th\u00eam 5 v\u00e0o stack\n    st.push(10); // th\u00eam 10 v\u00e0o stack\n    cout &lt;&lt; st.top() &lt;&lt; endl; // In ra 10\n    st.pop(); // lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u1edf cu\u1ed1i\n    cout &lt;&lt; st.top() &lt;&lt; endl; // In ra 5\n    return 0;\n}\n</code></pre> </p> <p>Ngo\u00e0i ra, ta c\u00f3 th\u1ec3 d\u00f9ng <code>vector</code> \u0111\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed9t Stack. C\u00e1c h\u00e0m <code>push</code>, <code>top</code> v\u00e0 <code>pop</code> s\u1ebd \u0111\u01b0\u1ee3c thay b\u1eb1ng <code>push_back</code>, <code>pop_back</code> v\u00e0 <code>back</code> khi s\u1eed d\u1ee5ng <code>vector</code>.</p>"},{"location":"algo/data-structures/Stack/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>Do Stack c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t b\u1eb1ng <code>vector</code> n\u00ean c\u00e1c thao t\u00e1c tr\u00ean Stack c\u0169ng c\u00f3 c\u00f9ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1edbi <code>vector</code>.</p>"},{"location":"algo/data-structures/Stack/#o-phuc-tap-thoi-gian","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian","text":"<p>C\u00e1c h\u00e0m <code>push</code>, <code>pop</code>, <code>top</code>, <code>size</code> v\u00e0 <code>empty</code> c\u1ee7a Stack \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng trong \\(O(1)\\). H\u01a1n n\u1eefa, nh\u01b0 ta \u0111\u00e3 th\u1ea5y \u1edf c\u00e1ch c\u00e0i \u0111\u1eb7t th\u1ee7 c\u00f4ng, b\u1ea3n ch\u1ea5t c\u1ee7a Stack ch\u00ednh l\u00e0 m\u1ea3ng, n\u00ean t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c tr\u00ean Stack \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng trong \\(O(1)\\).</p>"},{"location":"algo/data-structures/Stack/#o-phuc-tap-bo-nho","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a Stack l\u00e0 \\(O(N)\\), v\u1edbi \\(N\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o Stack.</p>"},{"location":"algo/data-structures/Stack/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/data-structures/Stack/#su-dung-stack-e-xu-ly-xau","title":"S\u1eed d\u1ee5ng Stack \u0111\u1ec3 x\u1eed l\u00fd x\u00e2u","text":""},{"location":"algo/data-structures/Stack/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>Cho x\u00e2u \\(S\\) ch\u1ec9 g\u1ed3m c\u00e1c s\u1ed1 nguy\u00ean d\u01b0\u01a1ng v\u00e0 c\u00e1c d\u1ea5u \\(+\\), \\(-\\), \\(\\times\\), \\(\\div\\), trong \\(S\\) kh\u00f4ng c\u00f3 d\u1ea5u kho\u1ea3ng tr\u1ed1ng. B\u1ea1n c\u1ea7n t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ec3u th\u1ee9c \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi x\u00e2u \u0111\u00f3.</p> <p>\u0110\u00e2y l\u00e0 b\u00e0i to\u00e1n d\u1ec5 h\u01a1n c\u1ee7a Expression Parsing.</p>"},{"location":"algo/data-structures/Stack/#cach-giai","title":"C\u00e1ch gi\u1ea3i","text":"<p>V\u1ea5n \u0111\u1ec1 ch\u00ednh c\u1ee7a b\u00e0i to\u00e1n l\u00e0 c\u00e1c to\u00e1n t\u1eed \\(+\\), \\(-\\), \\(\\times\\) v\u00e0 \\(\\div\\) kh\u00f4ng c\u00f3 c\u00f9ng \u0111\u1ed9 \u01b0u ti\u00ean. C\u1ee5 th\u1ec3, ta c\u1ea7n t\u00ednh k\u1ebft qu\u1ea3 c\u1ee7a c\u00e1c c\u1ee5m d\u1ea5u \\(\\times\\) v\u00e0 \\(\\div\\) tr\u01b0\u1edbc, do nh\u00e2n v\u00e0 chia c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean cao h\u01a1n c\u1ed9ng v\u00e0 tr\u1eeb.</p> <p>X\u00e9t b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n h\u01a1n: trong x\u00e2u \\(S\\) ch\u1ec9 c\u00f3 c\u00e1c d\u1ea5u \\(+\\) v\u00e0 \\(-\\). R\u00f5 r\u00e0ng, do \\(+\\) v\u00e0 \\(-\\) c\u00f3 c\u00f9ng \u0111\u1ed9 \u01b0u ti\u00ean n\u00ean ta c\u00f3 th\u1ec3 x\u1eed l\u00fd b\u00e0i to\u00e1n b\u1eb1ng c\u00e1ch duy\u1ec7t c\u00e1c to\u00e1n h\u1ea1ng v\u00e0 to\u00e1n t\u1eed t\u1eeb tr\u00e1i sang ph\u1ea3i v\u00e0 t\u00ednh tr\u1ef1c ti\u1ebfp k\u1ebft qu\u1ea3 sau m\u1ed7i ph\u00e9p c\u1ed9ng ho\u1eb7c tr\u1eeb. Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau: duy tr\u00ec m\u1ed9t danh s\u00e1ch ch\u1ee9a s\u1ed1 (to\u00e1n h\u1ea1ng) v\u00e0 m\u1ed9t danh s\u00e1ch ch\u1ee9a to\u00e1n t\u1eed. Duy\u1ec7t x\u00e2u t\u1eeb tr\u00e1i qua ph\u1ea3i, n\u1ebfu k\u00fd t\u1ef1 \u0111ang x\u00e9t l\u00e0 ch\u1eef s\u1ed1 th\u00ec ta \u0111\u1ea9y n\u00f3 v\u00e0o danh s\u00e1ch ch\u1ee9a s\u1ed1. N\u1ebfu \u0111\u00f3 l\u00e0 to\u00e1n t\u1eed, ta \u0111\u1ea9y k\u00fd t\u1ef1 v\u00e0o danh s\u00e1ch ch\u1ee9a to\u00e1n t\u1eed. Cu\u1ed1i c\u00f9ng, ta l\u1ea7n l\u01b0\u1ee3t t\u00ednh k\u1ebft qu\u1ea3 d\u1ef1a v\u00e0o danh s\u00e1ch to\u00e1n h\u1ea1ng v\u00e0 to\u00e1n t\u1eed \u0111\u00e3 x\u00e2y d\u1ef1ng.</p> <pre><code>// x\u1eed l\u00fd to\u00e1n t\u1eed v\u00e0 c\u1eadp nh\u1eadt tr\u1ef1c ti\u1ebfp v\u00e0o m\u1ea3ng val\nvoid process_op(vector&lt;int&gt;&amp; val, char op)\n{\n    // l, r l\u00e0 2 to\u00e1n h\u1ea1ng, op l\u00e0 d\u1ea5u gi\u1eefa ch\u00fang\n    int r = val.back(); val.pop_back();\n    int l = val.back(); val.pop_back();\n    switch(op)\n    {\n    case '+':  val.push_back(l + r); break;\n    case '-': val.push_back(l - r); break;\n    }\n}\n\n// t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ec3u th\u1ee9c bi\u1ec3u di\u1ec5n b\u1edfi s\nint evaluate(string s)\n{\n    vector&lt;int&gt; val;\n    vector&lt;char&gt; op;\n    for (int i = 0; i &lt; (int)s.size(); ++i)\n    {\n        if (isdigit(s[i]))\n        {\n            int number = 0; // gi\u00e1 tr\u1ecb c\u1ee7a to\u00e1n h\u1ea1ng \u0111ang x\u00e9t\n            while (i &lt; (int)s.size() &amp;&amp; isdigit(s[i]))\n            {\n                number = number * 10 + s[i] - '0';\n                ++i;\n            }\n            val.push_back(number);\n            --i; // c\u1ea9n th\u1eadn v\u1edbi index!\n        }\n        else\n        {\n            if (!op.empty())\n            {\n                process_op(val, op.back()); // x\u1eed l\u00fd bi\u1ec3u th\u1ee9c t\u1eeb tr\u00e1i sang ph\u1ea3i\n                op.pop_back();\n            }\n            op.push_back(s[i]);\n        }\n    }\n\n    if (!op.empty())\n    {\n        process_op(val, op.back());\n        op.pop_back();\n    }\n\n    return val.back();\n}\n</code></pre> <p>Do c\u00e1c to\u00e1n t\u1eed c\u00f3 c\u00f9ng \u0111\u1ed9 \u01b0u ti\u00ean, ta c\u00f3 th\u1ec3 x\u1eed l\u00fd ch\u00fang l\u1ea7n l\u01b0\u1ee3t theo danh s\u00e1ch \u0111\u00e3 x\u00e2y d\u1ef1ng. Tuy nhi\u00ean, n\u1ebfu danh s\u00e1ch \\(op\\) c\u00f3 c\u00e1c to\u00e1n t\u1eed kh\u00e1c \u0111\u1ed9 \u01b0u ti\u00ean, th\u00ec ta v\u1eabn c\u00f3 th\u1ec3 x\u1eed l\u00fd b\u00e0i to\u00e1n b\u1eb1ng vi\u1ec7c lu\u00f4n gi\u1eef cho danh s\u00e1ch to\u00e1n t\u1eed \\(op\\) ch\u1ee9a c\u00e1c to\u00e1n t\u1eed c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean t\u0103ng d\u1ea7n, sau \u0111\u00f3 x\u1eed l\u00fd danh s\u00e1ch to\u00e1n t\u1eed t\u1eeb d\u01b0\u1edbi l\u00ean \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o c\u00e1c d\u1ea5u c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean l\u1edbn h\u01a1n lu\u00f4n \u0111\u01b0\u1ee3c x\u1eed l\u00fd tr\u01b0\u1edbc.</p> <p>Trong b\u00e0i to\u00e1n g\u1ed1c, x\u00e2u \\(S\\) c\u00f2n ch\u1ee9a k\u00fd t\u1ef1 \\(\\times\\) v\u00e0 \\(\\div\\). Ta c\u1ea7n x\u1eed l\u00fd danh s\u00e1ch to\u00e1n t\u1eed sao cho c\u00e1c ph\u00e9p t\u00ednh c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean l\u1edbn h\u01a1n lu\u00f4n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u01b0\u1edbc.</p> <p>Ta \u0111\u1ecbnh ngh\u0129a m\u1ed9t th\u1ee9 t\u1ef1 \u01b0u ti\u00ean cho c\u00e1c d\u1ea5u: <pre><code>// Tr\u1ea3 v\u1ec1 2 n\u1ebfu l\u00e0 nh\u00e2n ho\u1eb7c chia, 1 n\u1ebfu l\u00e0 c\u1ed9ng ho\u1eb7c tr\u1eeb\nint priority(char op)\n{\n    if (op == '+' || op == '-') return 1;\n    else return 2;\n}\n</code></pre></p> <p>Gi\u1ed1ng v\u1edbi b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n, ta v\u1eabn duy\u1ec7t x\u00e2u \\(S\\) t\u1eeb tr\u00e1i sang ph\u1ea3i. Khi g\u1eb7p to\u00e1n h\u1ea1ng, ta v\u1eabn \u0111\u1ea9y ch\u00fang v\u00e0o danh s\u00e1ch. Tuy nhi\u00ean, khi g\u1eb7p to\u00e1n t\u1eed, ta c\u1ea7n xem x\u00e9t th\u1ee9 t\u1ef1 \u01b0u ti\u00ean c\u1ee7a to\u00e1n t\u1eed ngay tr\u01b0\u1edbc n\u00f3. N\u1ebfu to\u00e1n t\u1eed tr\u01b0\u1edbc c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng to\u00e1n t\u1eed \u0111ang x\u00e9tx\u00e9t, ta c\u1ea7n ph\u1ea3i x\u1eed l\u00fd n\u00f3 tr\u01b0\u1edbc, v\u00e0 lo\u1ea1i b\u1ecf to\u00e1n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc \u0111\u00f3 kh\u1ecfi danh s\u00e1ch. Ta s\u1ebd l\u1eb7p l\u1ea1i vi\u1ec7c x\u1eed l\u00fd to\u00e1n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc n\u00e0y cho \u0111\u1ebfn khi n\u00f3 c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean kh\u00f4ng l\u1edbn h\u01a1n to\u00e1n t\u1eed \u0111ang x\u00e9t. \u0110i\u1ec1u n\u00e0y \u0111\u1ea3m b\u1ea3o ph\u00e9p t\u00ednh s\u1ebd lu\u00f4n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n theo m\u1ee9c \u0111\u1ed9 \u01b0u ti\u00ean.</p> <p>\u0110\u1ec3 \u00fd r\u1eb1ng b\u1ea3n ch\u1ea5t c\u1ee7a danh s\u00e1ch ta s\u1eed d\u1ee5ng ch\u00ednh l\u00e0 Stack. Vi\u1ec7c th\u00eam to\u00e1n t\u1eed/to\u00e1n h\u1ea1ng v\u00e0o danh s\u00e1ch ch\u00ednh l\u00e0 thao t\u00e1c \\(push\\); c\u00e1ch ta x\u1eed l\u00fd to\u00e1n t\u1eed g\u1ee3i \u0111\u1ebfn vi\u1ec7c \\(top\\) v\u00e0 \\(pop\\) do trong c\u00e1c b\u01b0\u1edbc c\u1ee7a l\u1eddi gi\u1ea3i, ta ch\u1ec9 c\u1ea7n quan t\u00e2m t\u1edbi nh\u1eefng ph\u1ea7n t\u1eed \u1edf cu\u1ed1i danh s\u00e1ch. L\u1eddi gi\u1ea3i s\u1eed d\u1ee5ng <code>vector</code> \u0111\u1ec3 bi\u1ec3u di\u1ec5n Stack.</p> <pre><code>void process_op(vector&lt;int&gt;&amp; val, char op)\n{\n    int r = val.back(); val.pop_back();\n    int l = val.back(); val.pop_back();\n    switch(op)\n    {\n    case '+': val.push_back(l + r); break;\n    case '-': val.push_back(l - r); break;\n    case '*': val.push_back(l * r); break;\n    case '/': val.push_back(l / r); break;\n    }\n}\n\nint evaluate(string s)\n{\n    // ...\n    for (int i = 0; i &lt; (int)s.size(); ++i)\n    {\n        if (isdigit(s[i]))\n        {\n            // ...\n        }\n        else\n        {\n            char cur_op = s[i]; // to\u00e1n t\u1eed hi\u1ec7n t\u1ea1i\n            while (!op.empty() &amp;&amp; priority(op.back()) &gt;= priority(cur_op))\n            // x\u1eed l\u00fd c\u00e1c to\u00e1n t\u1eed ngay tr\u01b0\u1edbc n\u00f3 c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean b\u1eb1ng ho\u1eb7c l\u1edbn h\u01a1n\n            // ch\u00fa \u00fd r\u1eb1ng n\u1ebfu thay d\u1ea5u &gt;= b\u1eb1ng d\u00e1u &gt; th\u00ec \u0111\u00e1p\u0111\u00e1p\n            {\n                process_op(val, op.back());\n                op.pop_back();\n            }\n            op.push_back(cur_op);\n        }\n    }\n    // do danh s\u00e1ch to\u00e1n t\u1eed c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean t\u0103ng d\u1ea7n n\u00ean ta c\u00f3 th\u1ec3 x\u1eed l\u00fd\n    // l\u1ea7n l\u01b0\u1ee3t nh\u01b0 trong b\u00e0i to\u00e1n ch\u1ec9 c\u00f3 + v\u00e0 -\n    // ch\u00fa \u00fd l\u00e0 ta x\u1eed l\u00fd ng\u01b0\u1ee3c t\u1eeb \u0111\u00e1y v\u1ec1 \u0111\u1ea7u, n\u00ean c\u00e1c to\u00e1n t\u1eed \u0111\u01b0\u1ee3c x\u1eed l\u00fd\n    // s\u1ebd t\u1ea1o th\u00e0nh m\u1ed9t d\u00e3y gi\u1ea3m theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean\n    while (!op.empty())\n    {\n        process_op(val, op.back());\n        op.pop_back();\n    }\n    return val.back();\n}\n</code></pre> <p>X\u00e9t v\u00ed d\u1ee5: \\(S = 2 \\times 3 - 4 \\times 5\\).</p> <p>Gi\u00e1 tr\u1ecb c\u1ee7a \\(val\\) v\u00e0 \\(op\\) sau khi x\u1eed l\u00fd x\u00e2u \\(S\\): </p> <p>Qu\u00e1 tr\u00ecnh x\u1eed l\u00fd danh s\u00e1ch to\u00e1n t\u1eed \\(op\\): </p>"},{"location":"algo/data-structures/Stack/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Cho x\u00e2u \\(S\\) ch\u1ec9 g\u1ed3m k\u00fd t\u1ef1 \\((\\) v\u00e0 \\()\\). B\u1ea1n c\u1ea7n ki\u1ec3m tra xem \\(S\\) c\u00f3 ph\u1ea3i l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang kh\u00f4ng.</p> <p>N\u1ebfu \\(S\\) l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang, v\u1edbi m\u1ed7i v\u1ecb tr\u00ed trong \\(S\\) b\u1ea1n c\u1ea7n in ra v\u1ecb tr\u00ed c\u1ee7a d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng. </p> <p>\u0110\u1ecbnh ngh\u0129a: * X\u00e2u r\u1ed7ng l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang * N\u1ebfu x\u00e2u \\(A\\) l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang th\u00ec \\((A)\\) c\u0169ng l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang. Khi \u0111\u00f3, c\u1eb7p d\u1ea5u ngo\u1eb7c quanh x\u00e2u \\(A\\) n\u00e0y l\u00e0 c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng. * N\u1ebfu x\u00e2u \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang th\u00ec x\u00e2u \\(A + B\\) c\u0169ng l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang</p> <p>H\u00ecnh \u1ea3nh minh h\u1ecda cho m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang. C\u00e1c c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng \u0111\u01b0\u1ee3c t\u00f4 c\u00f9ng m\u00e0u: </p>"},{"location":"algo/data-structures/Stack/#nhan-xet","title":"Nh\u1eadn x\u00e9t","text":"<p>Ta \u0111\u1ecbnh ngh\u0129a th\u00eam: d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang kh\u00f4ng th\u1ec3 t\u00e1ch \u0111\u01b0\u1ee3c th\u00e0nh t\u1ed5ng c\u1ee7a c\u00e1c d\u00e3y ngo\u1eb7c \u0111\u00fang nh\u1ecf h\u01a1n. V\u00ed d\u1ee5, \\((()())\\) l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n, v\u00e0 \\((())()\\) kh\u00f4ng ph\u1ea3i l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n, do n\u00f3 c\u00f3 th\u1ec3 t\u00e1ch \u0111\u01b0\u1ee3c th\u00e0nh \\((()) + ()\\).</p> <p>T\u1eeb c\u00e1c \u0111\u1ecbnh ngh\u0129a, c\u00f3 th\u1ec3 r\u00fat ra c\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a d\u00e3y ngo\u1eb7c \u0111\u00fang:</p> <ul> <li>T\u00ednh ch\u1ea5t 1: Gi\u1eefa m\u1ed9t c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng l\u00e0 m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang</li> <li>T\u00ednh ch\u1ea5t 2: M\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang \u0111\u1ed9 d\u00e0i \\(2 \\times n\\) c\u00f3 \\(n\\) c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng, t\u01b0\u01a1ng \u1ee9ng v\u1edbi \\(n\\) d\u1ea5u ngo\u1eb7c m\u1edf v\u00e0 \\(n\\) d\u1ea5u ngo\u1eb7c \u0111\u00f3ng. D\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng c\u1ee7a m\u1ed9t d\u1ea5u ngo\u1eb7c m\u1edf ph\u1ea3i n\u1eb1m \u1edf sau n\u00f3 trong d\u00e3y, v\u00e0 d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng c\u1ee7a m\u1ed9t d\u1ea5u ngo\u1eb7c \u0111\u00f3ng ph\u1ea3i n\u1eb1m tr\u01b0\u1edbc n\u00f3. Do \u0111\u00f3, d\u00e3y ngo\u1eb7c \u0111\u00fang kh\u00f4ng th\u1ec3 b\u1eaft \u0111\u1ea7u b\u1eb1ng d\u1ea5u \u0111\u00f3ng ngo\u1eb7c, hay k\u1ebft th\u00fac b\u1eb1ng d\u1ea7u m\u1edf ngo\u1eb7c.</li> <li>T\u00ednh ch\u1ea5t 3: X\u00e9t m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang \\(S\\). N\u1ebfu m\u1ed9t ti\u1ec1n t\u1ed1 ho\u1eb7c h\u1eadu t\u1ed1 \\(A\\) c\u1ee7a \\(S\\) l\u00e0 m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang, th\u00ec d\u00e3y \\(S \\setminus A\\), hay d\u00e3y con c\u1ee7a \\(S\\) kh\u00f4ng ch\u1ee9a \\(A\\), c\u0169ng l\u00e0 m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang.</li> <li>T\u00ednh ch\u1ea5t 4: N\u1ebfu \\(S\\) l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang th\u00ec n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00e1ch ra th\u00e0nh t\u1ed5ng c\u1ee7a c\u00e1c d\u00e3y ngo\u1eb7c \u0111\u00fang \u0111\u1ed9c l\u1eadp nhau, hay \\(S = s_1 + s_2 + ... + s_k\\), v\u1edbi \\(s_1, s_2, ..., s_k\\) \u0111\u1ec1u l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n.</li> <li>T\u00ednh ch\u1ea5t 5: K\u00fd t\u1ef1 \u0111\u1ea7u v\u00e0 cu\u1ed1i c\u1ee7a d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n t\u1ea1o th\u00e0nh m\u1ed9t c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng.</li> </ul> <p>Ta c\u00f3 c\u00e1c b\u1ed5 \u0111\u1ec1 v\u00e0 h\u1ec7 qu\u1ea3 sau:</p>"},{"location":"algo/data-structures/Stack/#bo-e-1","title":"B\u1ed5 \u0111\u1ec1 1","text":"<p>Trong d\u00e3y ngo\u1eb7c \u0111\u00fang, m\u1ed7i d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t d\u1ea5u ngo\u1eb7c kh\u00e1c.</p>"},{"location":"algo/data-structures/Stack/#chung-minh","title":"Ch\u1ee9ng minh","text":"<p>Gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i m\u1ed9t d\u1ea5u ngo\u1eb7c c\u00f3 th\u1ec3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi nhi\u1ec1u h\u01a1n m\u1ed9t d\u1ea5u ngo\u1eb7c kh\u00e1c. Khi \u0111\u00f3, s\u1ebd c\u00f3 nhi\u1ec1u h\u01a1n m\u1ed9t c\u00e1ch chia d\u00e3y ngo\u1eb7c th\u00e0nh c\u00e1c c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng. Do \u0111\u00f3, t\u1ed3n t\u1ea1i m\u1ed9t d\u1ea5u ngo\u1eb7c \u0111\u00f3ng trong d\u00e3y t\u01b0\u01a1ng \u1ee9ng v\u1edbi nhi\u1ec1u h\u01a1n m\u1ed9t d\u1ea5u ngo\u1eb7c kh\u00e1c.</p> <p>Gi\u1ea3 s\u1eed d\u1ea5u ngo\u1eb7c \u1edf v\u1ecb tr\u00ed \\(k\\) l\u00e0 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng v\u00e0 c\u00f3 th\u1ec3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c d\u1ea5u ngo\u1eb7c m\u1edf \u1edf v\u1ecb tr\u00ed \\(i\\) v\u00e0 \\(j\\), v\u1edbi \\(i &lt; j &lt; k\\). Theo t\u00ednh ch\u1ea5t 1, ta c\u00f3:</p> <ul> <li>D\u00e3y ngo\u1eb7c con t\u1eeb v\u1ecb tr\u00ed \\(i + 1\\) \u0111\u1ebfn \\(k - 1\\) c\u1ee7a d\u00e3y g\u1ed1c l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang.</li> <li>D\u00e3y ngo\u1eb7c con t\u1eeb v\u1ecb tr\u00ed \\(j + 1\\) \u0111\u1ebfn \\(k - 1\\) c\u1ee7a d\u00e3y g\u1ed1c l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang.</li> </ul> <p>\\(......(......(...)\\)</p> <p>\\(......i......j...k\\)</p> <p>Theo t\u00ednh ch\u1ea5t 3, d\u00e3y ngo\u1eb7c t\u1eeb v\u1ecb tr\u00ed \\(i + 1\\) \u0111\u1ebfn \\(j\\) c\u0169ng l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang. M\u00e0 d\u00e3y ngo\u1eb7c t\u1eeb v\u1ecb tr\u00ed \\(i + 1\\) \u0111\u1ebfn \\(j\\) l\u1ea1i k\u1ebft th\u00fac b\u1eb1ng d\u1ea5u m\u1edf ngo\u1eb7c, tr\u00e1i v\u1edbi t\u00ednh ch\u1ea5t 2. V\u1eady gi\u1ea3 thi\u1ebft t\u1ed3n t\u1ea1i m\u1ed9t d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng v\u1edbi nhi\u1ec1u h\u01a1n m\u1ed9t d\u1ea5u ngo\u1eb7c kh\u00e1c l\u00e0 sai.</p> <p>V\u1eady ta c\u00f3 \u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh.</p>"},{"location":"algo/data-structures/Stack/#bo-e-2","title":"B\u1ed5 \u0111\u1ec1 2","text":"<p>D\u00e3y ngo\u1eb7c \u0111\u00fang khi v\u00e0 ch\u1ec9 khi s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf b\u1eb1ng s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng, v\u00e0 trong m\u1ecdi ti\u1ec1n t\u1ed1 c\u1ee7a d\u00e3y, s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf kh\u00f4ng nh\u1ecf h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng.</p>"},{"location":"algo/data-structures/Stack/#chung-minh_1","title":"Ch\u1ee9ng minh","text":"<ul> <li> <p>Chi\u1ec1u thu\u1eadn: d\u00e3y ngo\u1eb7c \u0111\u00fang c\u00f3 s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf b\u1eb1ng s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng, v\u00e0 trong m\u1ecdi ti\u1ec1n t\u1ed1 c\u1ee7a d\u00e3y, s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf kh\u00f4ng nh\u1ecf h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng. Theo t\u00ednh ch\u1ea5t 2, d\u00e3y ngo\u1eb7c m\u1edf c\u00f3 s\u1ed1 d\u1ea5u \u0111\u00f3ng ngo\u1eb7c b\u1eb1ng s\u1ed1 d\u1ea5u m\u1edf ngo\u1eb7c. M\u1eb7t kh\u00e1c, n\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t ti\u1ec1n t\u1ed1 c\u1ee7a d\u00e3y ngo\u1eb7c \u0111\u00fang c\u00f3 s\u1ed1 d\u1ea5u m\u1edf ngo\u1eb7c nh\u1ecf h\u01a1n s\u1ed1 d\u1ea5u \u0111\u00f3ng ngo\u1eb7c th\u00ec r\u00f5 r\u00e0ng t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t 1 d\u1ea5u \u0111\u00f3ng ngo\u1eb7c kh\u00f4ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi d\u1ea5u m\u1edf ngo\u1eb7c n\u00e0o, tr\u00e1i v\u1edbi b\u1ed5 \u0111\u1ec1 1. V\u1eady ta ch\u1ee9ng minh \u0111\u01b0\u1ee3c chi\u1ec1u thu\u1eadn.</p> </li> <li> <p>Chi\u1ec1u \u0111\u1ea3o: trong m\u1ecdi ti\u1ec1n t\u1ed1 c\u1ee7a d\u00e3y, s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf kh\u00f4ng nh\u1ecf h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i d\u1ea5u ngo\u1eb7c \u0111\u00f3ng \u0111\u1ec1u c\u00f3 d\u1ea5u ngo\u1eb7c m\u1edf t\u01b0\u01a1ng \u1ee9ng v\u1edbi n\u00f3. H\u01a1n n\u1eefa, s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf b\u1eb1ng s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng \u0111\u1ea3m b\u1ea3o kh\u00f4ng c\u00f3 d\u1ea5u ngo\u1eb7c m\u1edf b\u1ecb th\u1eeba ra (hay kh\u00f4ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi d\u1ea5u ngo\u1eb7c n\u00e0o) trong d\u00e3y ngo\u1eb7c. Do \u0111\u00f3, d\u00e3y c\u00f3 s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf b\u1eb1ng s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng v\u00e0 trong m\u1ecdi ti\u1ec1n t\u1ed1 c\u1ee7a d\u00e3y, s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf kh\u00f4ng nh\u1ecf h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang.</p> </li> </ul>"},{"location":"algo/data-structures/Stack/#he-qua-1","title":"H\u1ec7 qu\u1ea3 1","text":"<p>D\u00e3y ngo\u1eb7c kh\u00f4ng \u0111\u00fang s\u1ebd c\u00f3 s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf l\u1edbn h\u01a1n s\u1ed1 ngo\u1eb7c \u0111\u00f3ng, ho\u1eb7c c\u00f3 m\u1ed9t ti\u1ec1n t\u1ed1 m\u00e0 s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf nh\u1ecf h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng. </p>"},{"location":"algo/data-structures/Stack/#cach-giai_1","title":"C\u00e1ch gi\u1ea3i","text":"<p>Cho m\u1ed9t Stack ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed ki\u1ec3u <code>char</code>, \u0111ang \u1edf tr\u1ea1ng th\u00e1i r\u1ed7ng. X\u00e9t qu\u00e1 tr\u00ecnh sau: * Duy\u1ec7t x\u00e2u \\(S\\) t\u1eeb tr\u00e1i qua ph\u1ea3i * N\u1ebfu k\u00fd t\u1ef1 \u0111ang x\u00e9t l\u00e0 d\u1ea5u \\((\\), th\u00eam n\u00f3 v\u00e0o Stack * N\u1ebfu k\u00fd t\u1ef1 \u0111ang x\u00e9t l\u00e0 d\u1ea5u \\()\\), x\u00e9t ph\u1ea7n t\u1eed \u0111ang \u1edf \u0111\u1ec9nh Stack. N\u1ebfu \u0111\u00f3 l\u00e0 d\u1ea5u \\((\\), ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng, v\u00e0 lo\u1ea1i b\u1ecf d\u1ea5u ngo\u1eb7c m\u1edf kh\u1ecfi Stack. N\u1ebfu ng\u01b0\u1ee3c l\u1ea1i, ho\u1eb7c Stack r\u1ed7ng, x\u00e2u \\(S\\) kh\u00f4ng ph\u1ea3i d\u00e3y ngo\u1eb7c \u0111\u00fang. * Sau khi th\u1ef1c hi\u1ec7n qu\u00e1 tr\u00ecnh, n\u1ebfu Stack kh\u00f4ng r\u1ed7ng th\u00ec \\(S\\) kh\u00f4ng ph\u1ea3i d\u00e3y ngo\u1eb7c \u0111\u00fang.</p> <p>Tr\u01b0\u1edbc h\u1ebft, qu\u00e1 tr\u00ecnh n\u00e0y s\u1ebd lu\u00f4n x\u00e1c \u0111\u1ecbnh xem x\u00e2u \\(S\\) c\u00f3 ph\u1ea3i l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang hay kh\u00f4ng. Nh\u1eafc l\u1ea1i, qu\u00e1 tr\u00ecnh s\u1ebd k\u1ebft lu\u1eadn x\u00e2u \\(S\\) kh\u00f4ng ph\u1ea3i d\u00e3y ngo\u1eb7c \u0111\u00fang khi: * K\u00fd t\u1ef1 \u0111ang x\u00e9t l\u00e0 d\u1ea5u \u0111\u00f3ng ngo\u1eb7c v\u00e0 Stack \u0111ang r\u1ed7ng. * Sau khi x\u1eed l\u00fd, Stack kh\u00f4ng r\u1ed7ng.</p> <p>Tr\u01b0\u1eddng h\u1ee3p 1 x\u1ea3y ra khi x\u00e2u \\(S\\) c\u00f3 m\u1ed9t ti\u1ec1n t\u1ed1 m\u00e0 s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng nhi\u1ec1u h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf. Tr\u01b0\u1eddng h\u1ee3p 2 x\u1ea3y ra khi x\u00e2u \\(S\\) c\u00f3 s\u1ed1 d\u1ea5u ngo\u1eb7c m\u1edf nhi\u1ec1u h\u01a1n s\u1ed1 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng. C\u1ea3 hai tr\u01b0\u1eddng h\u1ee3p tr\u00ean \u0111\u1ec1u l\u00e0 d\u1ea5u hi\u1ec7u c\u1ee7a d\u00e3y ngo\u1eb7c kh\u00f4ng \u0111\u00fang n\u00eau trong h\u1ec7 qu\u1ea3 1. V\u1eady qu\u00e1 tr\u00ecnh s\u1ebd lu\u00f4n x\u00e1c \u0111\u1ecbnh \\(S\\) l\u00e0 d\u00e3y \u0111\u00fang hay kh\u00f4ng.</p> <p>T\u1eeb b\u00e2y gi\u1edd, ta m\u1eb7c \u0111\u1ecbnh \\(S\\) l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang, v\u00e0 ch\u1ee9ng minh r\u1eb1ng vi\u1ec7c s\u1eed d\u1ee5ng Stack s\u1ebd lu\u00f4n ch\u1ec9 ra c\u00e1c c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng.</p> <p>Quan s\u00e1t qu\u00e1 tr\u00ecnh tr\u00ean, ta c\u00f3 m\u1ed9t nh\u1eadn x\u00e9t quan tr\u1ecdng: sau khi x\u1eed l\u00fd m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u00fang tr\u00ean Stack \\(st\\) th\u00ec Stack s\u1ebd gi\u1eef nguy\u00ean tr\u1ea1ng th\u00e1i. \u0110i\u1ec1u n\u00e0y l\u00e0 \u0111\u00fang do m\u1ed7i d\u1ea5u m\u1edf ngo\u1eb7c \u0111\u01b0\u1ee3c \\(push\\) v\u00e0o Stack v\u00e0 \\(pop\\) kh\u1ecfi Stack \u0111\u00fang m\u1ed9t l\u1ea7n.</p> <p>Theo t\u00ednh ch\u1ea5t 4, \\(S\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00e1ch th\u00e0nh t\u1ed5ng c\u1ee7a c\u00e1c d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n \\(s_1 + s_2 + ... + s_k\\). Theo t\u00ednh ch\u1ea5t 5, \\(s_i = ( \\ + s' + \\ )\\), v\u1edbi \\(s'\\) l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang, c\u00f3 th\u1ec3 l\u00e0 x\u00e2u r\u1ed7ng. V\u00ec sau khi x\u1eed l\u00fd c\u00e1c d\u00e3y \\(s_1, s_2, ...\\) th\u00ec Stack s\u1ebd tr\u1edf v\u1ec1 tr\u1ea1ng th\u00e1i r\u1ed7ng, n\u00ean ta ch\u1ec9 c\u1ea7n xem x\u00e9t qu\u00e1 tr\u00ecnh v\u1edbi d\u00e3y ngo\u1eb7c \u0111\u00fang c\u01a1 b\u1ea3n \\(s_i\\):</p> <ul> <li>\u0110\u1ea9y d\u1ea5u ngo\u1eb7c m\u1edf v\u00e0o Stack</li> <li>X\u1eed l\u00fd d\u00e3y ngo\u1eb7c \u0111\u00fang \\(s'\\) \u0111\u1ec3 t\u00ecm c\u00e1c c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng trong \u0111\u00f3. Sau b\u01b0\u1edbc n\u00e0y, ta t\u00ecm \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 c\u1eb7p d\u1ea5u t\u01b0\u01a1ng \u1ee9ng trong \\(s'\\).</li> <li>X\u00e9t d\u1ea5u ngo\u1eb7c \u0111\u00f3ng \u1edf cu\u1ed1i \\(s_i\\). Do sau khi x\u1eed l\u00fd d\u00e3y ngo\u1eb7c \u0111\u00fang, Stack ch\u1ec9 c\u00f2n m\u1ed9t ph\u1ea7n t\u1eed l\u00e0 d\u1ea5u ngo\u1eb7c m\u1edf \u0111\u01b0\u1ee3c th\u00eam v\u00e0o t\u1eeb \u0111\u1ea7u, ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng, v\u00e0 x\u00f3a d\u1ea5u ngo\u1eb7c m\u1edf kh\u1ecfi Stack</li> <li>Stack tr\u1edf v\u1ec1 tr\u1ea1ng th\u00e1i r\u1ed7ng</li> </ul> <p>Nh\u01b0 v\u1eady, qu\u00e1 tr\u00ecnh s\u1ebd x\u00e1c \u0111\u1ecbnh t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"algo/data-structures/Stack/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t b\u00e0i to\u00e1n \u0111\u00fang nh\u01b0 m\u00f4 t\u1ea3 c\u1ee7a qu\u00e1 tr\u00ecnh n\u00eau tr\u00ean:</p> <pre><code>stack&lt;int&gt; st;\nvector&lt;pair&lt;int, int&gt;&gt; matches; // l\u01b0u c\u00e1c c\u1eb7p d\u1ea5u ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng\n\nbool solve(string s)\n{\n    int n = (int)s.size();\n    for (int i = 0; i &lt; n; ++i)\n    {\n        if (s[i] == '(') // ch\u1ec9 \u0111\u1ea9y d\u1ea5u ngo\u1eb7c m\u1edf v\u00e0o Stack\n            st.push(i);\n        else\n        {\n            if (st.empty()) return false; // d\u00e3y kh\u00f4ng ph\u1ea3i l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang\n            matches.push_back({st.top(), i}); // t\u00ecm th\u1ea5y m\u1ed9t c\u1eb7p t\u01b0\u01a1ng \u1ee9ng\n            st.pop();\n        }\n    }\n    if (!st.empty()) return false; // n\u1ebfu Stack kh\u00f4ng r\u1ed7ng th\u00ec d\u00e3y kh\u00f4ng \u0111\u00fang\n    return true;\n}\n</code></pre>"},{"location":"algo/data-structures/Stack/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>B\u00e0i to\u00e1n 2 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u1edf r\u1ed9ng th\u00eam: d\u00e3y c\u00f3 th\u1ec3 c\u00f3 c\u1ea3 ngo\u1eb7c vu\u00f4ng v\u00e0 ngo\u1eb7c nh\u1ecdn. R\u00f5 r\u00e0ng, ta c\u00f3 th\u1ec3 x\u1eed l\u00fd c\u00e1c lo\u1ea1i ngo\u1eb7c nh\u01b0 c\u00e1ch ta l\u00e0m v\u1edbi b\u00e0i to\u00e1n 2. L\u01b0u \u00fd duy nh\u1ea5t l\u00e0 ta c\u1ea7n ph\u1ea3i ki\u1ec3m so\u00e1t th\u00eam c\u1ea3 ki\u1ec3u lo\u1ea1i c\u1ee7a d\u1ea5u.</p> <p>Minh h\u1ecda cho qu\u00e1 tr\u00ecnh v\u1edbi \\(S = \\) \"\\(([{}])()\\)\":</p> <p></p>"},{"location":"algo/data-structures/Stack/#su-dung-stack-e-khu-e-quy","title":"S\u1eed d\u1ee5ng Stack \u0111\u1ec3 kh\u1eed \u0111\u1ec7 quy","text":"<p>V\u00ec t\u00ednh ch\u1ea5t LIFO c\u1ee7a Stack, n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 kh\u1eed c\u00e1c h\u00e0m \u0111\u1ec7 quy. Tr\u00ean th\u1ef1c t\u1ebf, khi ta d\u00f9ng h\u00e0m \u0111\u1ec7 quy, h\u1ec7 th\u1ed1ng s\u1ebd t\u1ef1 \u0111\u1ed9ng t\u1ea1o m\u1ed9t c\u1ea5u tr\u00fac LIFO nh\u01b0 Stack \u0111\u1ec3 ch\u1ee9a v\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c l\u1eddi g\u1ecdi h\u00e0m.</p> <p>X\u00e9t thu\u1eadt to\u00e1n DFS v\u1edbi c\u00e1ch c\u00e0i \u0111\u1eb7t s\u1eed d\u1ee5ng \u0111\u1ec7 quy:</p> <pre><code>void dfs(int start)\n{\n    visited[start] = true; // \u0111\u00e1nh d\u1ea7u \u0111\u1ec9nh \u0111\u00e3 th\u0103m\n    for (int u : adj[start]) // v\u1edbi c\u00e1c \u0111\u1ec9nh thu\u1ed9c danh s\u00e1ch k\u1ec1 c\u1ee7a \u0111\u1ec9nh \u0111ang x\u00e9t\n    {\n        if (visited[u])\n            continue;\n        dfs(u); // \u0111\u1ec7 quy: th\u0103m u\n    }\n}\n</code></pre> <p>Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t DFS s\u1eed d\u1ee5ng Stack:</p> <pre><code>void dfs(int start)\n{\n    stack&lt;int&gt; st;\n    st.push(start); // ta b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \"start\"\n\n    while (!st.empty())\n    {\n        int v = st.top(); // th\u0103m \u0111\u1ec9nh v \u1edf \u0111\u1ec9nh Stack\n        st.pop(); // lo\u1ea1i b\u1ecf \u0111\u1ec9nh v kh\u1ecfi Stack do \u0111\u00e3 th\u0103m\n        visited[v] = true; // \u0111\u00e1nh d\u1ea5u v \u0111\u00e3 th\u0103m\n\n        for (int u : adj[v]) // x\u00e9t c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb chung c\u1ea1nh v\u1edbi v\n        {\n            if (visited[u]) // n\u1ebfu \u0111\u00e3 th\u0103m th\u00ec th\u00f4i\n                continue;\n            st.push(u); // \u0111\u1ea9y \u0111\u1ec9nh u v\u00e0o Stack thay v\u00ec g\u1ecdi \u0111\u1ec7 quy \u0111\u1ebfn u\n        }\n    }\n}\n</code></pre> <p>Trong c\u00e1ch c\u00e0i \u0111\u1eb7t DFS \u0111\u1ec7 quy, m\u1ed9t nh\u00e1nh \u0111\u1ec7 quy lu\u00f4n ph\u1ea3i \u0111\u01b0\u1ee3c x\u1eed l\u00fd tr\u1ecdn v\u1eb9n tr\u01b0\u1edbc khi ta g\u1ecdi \u0111\u1ec7 quy \u0111\u1ebfn nh\u00e1nh kh\u00e1c. N\u00f3i c\u00e1ch kh\u00e1c, khi ta th\u0103m m\u1ed9t \u0111\u1ec9nh \\(v\\) th\u00ec ta ph\u1ea3i th\u0103m to\u00e0n b\u1ed9 nh\u1eefng \u0111\u1ec9nh k\u1ec1 v\u1edbi n\u00f3, v\u00e0 c\u1ee9 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady \u0111\u1ebfn khi kh\u00f4ng c\u00f2n \u0111\u1ec9nh n\u00e0o th\u0103m \u0111\u01b0\u1ee3c n\u1eefa. Stack ho\u1ea1t \u0111\u1ed9ng tr\u00ean nguy\u00ean l\u00fd t\u01b0\u01a1ng t\u1ef1: nh\u1eefng \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o Stack sau \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u1eed l\u00fd tr\u1ecdn v\u1eb9n tr\u01b0\u1edbc nh\u1eefng \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o s\u1edbm h\u01a1n. Do \u0111\u00f3, l\u1eddi gi\u1ea3i tr\u00ean l\u00e0 \u0111\u00fang \u0111\u1eafn.</p> <p>Vi\u1ec7c d\u00f9ng Stack \u0111\u1ec3 kh\u1eed \u0111\u1ec7 quy c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng v\u1edbi m\u1ecdi h\u00e0m c\u00f3 t\u00ednh ch\u1ea5t \u0111\u1ec7 quy. Tr\u00ean l\u00fd thuy\u1ebft, \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb c\u1ee7a 2 c\u00e1ch c\u00e0i \u0111\u1eb7t d\u00f9ng Stack v\u00e0 d\u00f9ng \u0111\u1ec7 quy l\u00e0 nh\u01b0 nhau, nh\u01b0ng tr\u00ean th\u1ef1c t\u1ebf, c\u00e1ch c\u00e0i \u0111\u1eb7t d\u00f9ng Stack th\u01b0\u1eddng hi\u1ec7u qu\u1ea3 h\u01a1n v\u1ec1 m\u1eb7t b\u1ed9 nh\u1edb, do vi\u1ec7c g\u1ecdi \u0111\u1ec7 quy ch\u1ecbu \u1ea3nh h\u01b0\u1edfng b\u1edfi Function Overhead. \u0110\u1ed5i l\u1ea1i, c\u00e1ch c\u00e0i \u0111\u1eb7t d\u00f9ng Stack th\u01b0\u1eddng khi\u1ebfn code tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p v\u00e0 thi\u1ebfu tr\u1ef1c quan h\u01a1n.</p> <p>Trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u1ec7 quy th\u00f4ng th\u01b0\u1eddng trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p. Ta ch\u1ec9 c\u1ea7n d\u00f9ng Stack khi h\u00e0m \u0111\u1ec7 quy qu\u00e1 s\u00e2u v\u00e0 c\u00f3 nguy c\u01a1 b\u1ecb tr\u00e0n b\u1ed9 nh\u1edb. Theo kinh nghi\u1ec7m c\u1ee7a ng\u01b0\u1eddi vi\u1ebft, ta c\u1ea7n kh\u1eed \u0111\u1ec7 quy khi h\u00e0m c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u1ed9 s\u00e2u kho\u1ea3ng \\(10^7\\).</p>"},{"location":"algo/data-structures/Stack/#stack-on-ieu","title":"Stack \u0111\u01a1n \u0111i\u1ec7u","text":"<p>Stack \u0111\u01a1n \u0111i\u1ec7u l\u00e0 ng\u0103n x\u1ebfp m\u00e0 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a n\u00f3 x\u00e9t t\u1eeb \u0111\u00e1y c\u1ee7a Stack \u0111\u1ebfn \u0111\u1ec9nh Stack t\u1ea1o th\u00e0nh m\u1ed9t d\u00e3y s\u1ed1 \u0111\u01a1n \u0111i\u1ec7u.</p> <p>H\u00ecnh \u1ea3nh minh h\u1ecda cho m\u1ed9t Stack \u0111\u01a1n \u0111i\u1ec7u gi\u1ea3m:</p> <p></p>"},{"location":"algo/data-structures/Stack/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ea3ng \\(A\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed \\(a_1, a_2, \\dots, a_n\\), \\(n \\leq 10^6\\). V\u1edbi m\u1ed7i \\(i\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) ta c\u1ea7n t\u00ecm \\(j\\) sao cho \\(a_j &gt; a_i\\), v\u00e0 \\(\\lvert i - j \\rvert\\) nh\u1ecf nh\u1ea5t. N\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i \\(j\\), in ra \\(-1\\).</p>"},{"location":"algo/data-structures/Stack/#nhan-xet_1","title":"Nh\u1eadn x\u00e9t","text":"<p>Ta s\u1ebd b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n h\u01a1n: v\u1edbi m\u1ed7i \\(i\\) ta ch\u1ec9 c\u1ea7n t\u00ecm \\(j\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n g\u1ed1c, m\u00e0 \\(j &lt; i\\). R\u00f5 r\u00e0ng, n\u1ebfu ta gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n n\u00e0y th\u00ec b\u00e0i to\u00e1n g\u1ed1c c\u0169ng c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng gi\u1ea3i \u0111\u01b0\u1ee3c, v\u00ec n\u1ebfu \\(j &gt; i\\) th\u00ec ta c\u00f3 th\u1ec3 duy\u1ec7t ng\u01b0\u1ee3c l\u1ea1i m\u1ea3ng \\(A\\), \u0111\u01b0a b\u00e0i to\u00e1n v\u1ec1 d\u1ea1ng \u0111\u01a1n gi\u1ea3n nh\u01b0 \u0111\u00e3 n\u00f3i.</p> <p>Do \\(n \\leq 10^6\\) n\u00ean c\u00e1ch gi\u1ea3i h\u1ed3n nhi\u00ean: v\u1edbi m\u1ed7i \\(i\\) ta l\u1ea1i x\u00e9t \\(j\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) l\u00e0 ch\u01b0a \u0111\u1ee7 \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n, do \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00ean t\u1edbi \\(O(n^2)\\).</p>"},{"location":"algo/data-structures/Stack/#mo-hinh-lai-bai-toan","title":"M\u00f4 h\u00ecnh l\u1ea1i b\u00e0i to\u00e1n","text":"<p>X\u00e9t m\u00f4 h\u00ecnh sau: * Ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) c\u1ee7a m\u1ea3ng \\(A\\) t\u01b0\u1ee3ng tr\u01b0ng cho m\u1ed9t ng\u01b0\u1eddi c\u00f3 chi\u1ec1u cao \\(a_i\\). * L\u1ea7n l\u01b0\u1ee3t ng\u01b0\u1eddi t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) x\u1ebfp th\u00e0nh m\u1ed9t h\u00e0ng. Ng\u01b0\u1eddi th\u1ee9 \\(i\\) s\u1ebd nh\u00ecn \u0111\u01b0\u1ee3c ng\u01b0\u1eddi th\u1ee9 \\(j\\) n\u1ebfu \\(j\\) \u0111\u1ee9ng tr\u01b0\u1edbc \\(i\\) trong h\u00e0ng. * H\u00e0ng lu\u00f4n nh\u00ecn t\u1eeb cu\u1ed1i v\u1ec1 \u0111\u1ea7u.</p> <p>Theo m\u00f4 h\u00ecnh n\u00e0y, gi\u00e1 tr\u1ecb \\(j\\) g\u1ea7n \\(i\\) nh\u1ea5t \\((j &lt; i)\\) m\u00e0 \\(a_i &lt; a_j\\) ch\u00ednh l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t cao h\u01a1n ng\u01b0\u1eddi \\(i\\) m\u00e0 anh ta c\u00f3 th\u1ec3 nh\u00ecn \u0111\u01b0\u1ee3c.</p> <p>H\u00ecnh \u1ea3nh minh h\u1ecda, s\u1ed1 \u1edf h\u00e0ng tr\u00ean l\u00e0 chi\u1ec1u cao m\u1ed7i ng\u01b0\u1eddi, \u1edf h\u00e0ng d\u01b0\u1edbi l\u00e0 ch\u1ec9 s\u1ed1 ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t \u1edf b\u00ean tr\u00e1i cao h\u01a1n h\u1ecd:</p> <p></p> <p>Ta c\u00f3 th\u1ec3 c\u1ea3i ti\u1ebfn m\u00f4 h\u00ecnh b\u1eb1ng vi\u1ec7c ch\u1ec9nh s\u1eeda c\u00e1ch th\u1ee9c x\u1ebfp h\u00e0ng. Khi ng\u01b0\u1eddi th\u1ee9 \\(i\\) x\u1ebfp h\u00e0ng, h\u1ecd s\u1ebd th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c sau: 1. X\u1ebfp v\u00e0o cu\u1ed1i h\u00e0ng 2. N\u1ebfu h\u1ecd \u0111\u1ee9ng \u0111\u1ea7u h\u00e0ng th\u00ec ghi l\u1ea1i s\u1ed1 \\(-1\\). M\u1eb7t kh\u00e1c, n\u1ebfu ng\u01b0\u1eddi \u0111\u1ee9ng tr\u01b0\u1edbc h\u1ecd c\u00f3 chi\u1ec1u cao th\u1ea5p h\u01a1n ho\u1eb7c b\u1eb1ng v\u1edbi \\(a_i\\), \u0111u\u1ed5i ng\u01b0\u1eddi \u0111\u00f3 ra kh\u1ecfi h\u00e0ng. L\u1eb7p l\u1ea1i qu\u00e1 tr\u00ecnh \u0111u\u1ed5i ng\u01b0\u1eddi \u0111\u1ee9ng tr\u01b0\u1edbc th\u1ea5p h\u01a1n cho t\u1edbi khi ng\u01b0\u1eddi \\(i\\) \u0111\u1ee9ng \u0111\u1ea7u h\u00e0ng, ho\u1eb7c ng\u01b0\u1eddi \u0111\u1ee9ng tr\u01b0\u1edbc c\u00f3 chi\u1ec1u cao l\u1edbn h\u01a1n. Ghi l\u1ea1i ch\u1ec9 s\u1ed1 c\u1ee7a ng\u01b0\u1eddi \u0111\u1ee9ng tr\u01b0\u1edbc, ho\u1eb7c \\(-1\\) n\u1ebfu h\u1ecd \u0111\u1ee9ng \u0111\u1ea7u h\u00e0ng.</p> <p>Ta s\u1ebd ch\u1ee9ng minh s\u1ed1 m\u00e0 m\u1ed7i ng\u01b0\u1eddi ghi l\u1ea1i ch\u00ednh l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t \u0111\u1ee9ng tr\u01b0\u1edbc m\u00e0 cao h\u01a1n h\u1ecd.</p> <p>L\u00fac \u0111\u1ea7u, cho m\u1ed9t ng\u01b0\u1eddi c\u00f3 ch\u1ec9 s\u1ed1 \\(-1\\), chi\u1ec1u cao \\(+\\infty\\). Vi\u1ec7c \u0111\u1ee9ng \u0111\u1ea7u h\u00e0ng c\u00f3 th\u1ec3 coi nh\u01b0 \u0111\u1ee9ng ngay sau ng\u01b0\u1eddi ch\u1ec9 s\u1ed1 \\(-1\\) n\u00e0y. X\u00e9t m\u1ed9t ng\u01b0\u1eddi \\(i\\) b\u1ea5t k\u1ef3 ghi l\u1ea1i s\u1ed1 \\(j\\), \\(j &lt; i\\). Tr\u01b0\u1edbc h\u1ebft, \\(a_j\\) ch\u1eafc ch\u1eafn ph\u1ea3i l\u1edbn h\u01a1n \\(a_i\\). Gi\u1ea3 s\u1eed ng\u01b0\u1ee3c l\u1ea1i, \\(j\\) kh\u00f4ng ph\u1ea3i l\u00e0 ng\u01b0\u1eddi g\u1ea7n \\(i\\) nh\u1ea5t m\u00e0 cao h\u01a1n ng\u01b0\u1eddi \\(i\\), m\u00e0 \\(k\\) m\u1edbi l\u00e0 ng\u01b0\u1eddi nh\u01b0 v\u1eady. Ta c\u00f3 \\(j &lt; k &lt; i\\) v\u00e0 \\(a_k &gt; a_i\\). T\u1ea1i th\u1eddi \u0111i\u1ec3m ng\u01b0\u1eddi \\(i\\) x\u1ebfp v\u00e0o h\u00e0ng th\u00ec ng\u01b0\u1eddi \\(k\\) n\u00e0y kh\u00f4ng c\u00f2n trong h\u00e0ng n\u1eefa (n\u1ebfu c\u00f2n th\u00ec h\u1ecd s\u1ebd ghi l\u1ea1i ng\u01b0\u1eddi \\(k\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i \\(j\\)). Do \u0111\u00f3, ng\u01b0\u1eddi \\(k\\) \u0111\u00e3 b\u1ecb \u0111u\u1ed5i kh\u1ecfi h\u00e0ng b\u1edfi m\u1ed9t ng\u01b0\u1eddi n\u00e0o \u0111\u00f3 \u0111\u1ee9ng sau \\(k\\) v\u00e0 tr\u01b0\u1edbc \\(i\\). G\u1ecdi ch\u1ec9 s\u1ed1 c\u1ee7a ng\u01b0\u1eddi \u0111\u00f3 l\u00e0 \\(l\\). \u0110\u1ec3 \u0111u\u1ed5i ng\u01b0\u1eddi \\(k\\) th\u00ec \\(a_l \\geq a_k\\). T\u1eeb \u0111\u00f3 ta c\u00f3 \\(k &lt; l &lt; i, \\ \\ a_l \\geq a_k &gt; a_i\\), tr\u00e1i v\u1edbi gi\u1ea3 thi\u1ebft \\(k\\) l\u00e0 ng\u01b0\u1eddi g\u1ea7n \\(i\\) nh\u1ea5t m\u00e0 cao h\u01a1n \\(i\\).</p> <p>Nh\u01b0 v\u1eady, s\u1ed1 m\u00e0 m\u1ed7i ng\u01b0\u1eddi nh\u1edb l\u1ea1i ch\u00ednh l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t cao h\u01a1n h\u1ecd (\\(-1\\) n\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i ng\u01b0\u1eddi nh\u01b0 v\u1eady). \u0110\u00e2y ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb \\(j\\) c\u1ea7n t\u00ecm v\u1edbi m\u1ed7i \\(i\\).</p> <p>Gi\u1ea3 s\u1eed m\u1ea3ng \\(A = [1, 2, 7, 4, 3, 6]\\). C\u00e1c b\u01b0\u1edbc di\u1ec5n ra nh\u01b0 sau:</p> <p></p> <p>D\u1ec5 th\u1ea5y chi\u1ec1u cao c\u1ee7a ng\u01b0\u1eddi trong h\u00e0ng lu\u00f4n t\u1ea1o th\u00e0nh m\u1ed9t d\u00e3y \u0111\u01a1n \u0111i\u1ec7u.</p>"},{"location":"algo/data-structures/Stack/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n m\u00f4 h\u00ecnh n\u00eau tr\u00ean d\u01b0\u1edbi d\u1ea1ng m\u1ed9t Stack \u0111\u01a1n \u0111i\u1ec7u nh\u01b0 sau: * Ng\u01b0\u1eddi x\u1ebfp v\u00e0o h\u00e0ng l\u00e0 ph\u00e9p \\(push\\) * \u0110u\u1ed5i ng\u01b0\u1eddi \u0111\u1ee9ng tr\u01b0\u1edbc l\u00e0 ph\u00e9p \\(pop\\)</p> <p>T\u1eeb c\u00e1c b\u01b0\u1edbc n\u00eau trong m\u00f4 h\u00ecnh, c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t l\u1eddi gi\u1ea3i nh\u01b0 sau: <pre><code>stack&lt;int&gt; st;\n\nfor (int i = 1; i &lt;= n; ++i)\n{\n    while (!st.empty() &amp;&amp; a[st.top()] &lt;= a[i])\n        st.pop(); \n    int ans = -1;\n    if (!st.empty())\n        ans = st.top();\n    cout &lt;&lt; ans &lt;&lt; ' ';\n    st.push(i);\n}\n</code></pre></p>"},{"location":"algo/data-structures/Stack/#anh-gia-o-phuc-tap","title":"\u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a l\u1eddi gi\u1ea3i l\u00e0 \\(O(n)\\) do s\u1eed d\u1ee5ng Stack v\u00e0 m\u1ed9t m\u1ea3ng ch\u1ee9a \\(n\\) ph\u1ea7n t\u1eed.</p> <p>Tho\u1ea1t nh\u00ecn, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n c\u1ee7a l\u1eddi gi\u1ea3i c\u00f3 v\u1ebb l\u00e0 \\(O(n^2)\\) do c\u00f3 v\u00f2ng l\u1eb7p \\(while\\) l\u1ed3ng trong v\u00f2ng \\(for\\). Tuy nhi\u00ean, \u0111\u1ec3 \u00fd r\u1eb1ng m\u1ed7i ph\u1ea7n t\u1eed \\(a_i\\) \u0111\u1ec1u \u0111\u01b0\u1ee3c \\(push()\\) v\u00e0o Stack \u0111\u00fang m\u1ed9t l\u1ea7n, v\u00e0 b\u1ecb \\(pop()\\) kh\u1ecfi Stack t\u1ed1i \u0111a 1 l\u1ea7n, n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n v\u1eabn l\u00e0 \\(O(n)\\)</p>"},{"location":"algo/data-structures/Stack/#mo-rong_1","title":"M\u1edf r\u1ed9ng","text":"<p>B\u00e0i to\u00e1n g\u1ed1c n\u00eau tr\u00ean c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng v\u00e0 m\u1edf r\u1ed9ng. Sau \u0111\u00e2y l\u00e0 m\u1ed9t v\u00e0i v\u00ed d\u1ee5.</p>"},{"location":"algo/data-structures/Stack/#hinh-chu-nhat-lon-nhat","title":"H\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t","text":"<p>Link SPOJ.</p> <p>V\u1ebd \\(n\\) c\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt s\u00e1t nhau. C\u1ed9t th\u1ee9 \\(i\\) c\u00f3 chi\u1ec1u r\u1ed9ng \\(1\\) v\u00e0 chi\u1ec1u cao \\(h_i\\). T\u00ecm h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 di\u1ec7n t\u00edch l\u1edbn nh\u1ea5t t\u1ea1o b\u1edfi c\u00e1c c\u1ed9t.</p> <p>V\u00ed d\u1ee5: \\(h = {2, 4, 4, 3, 2}\\)</p> <p>H\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t c\u00f3 di\u1ec7n t\u00edch \\(10\\)</p> <p></p>"},{"location":"algo/data-structures/Stack/#cach-giai_2","title":"C\u00e1ch gi\u1ea3i","text":"<p>\u0110\u1ec3 \u00fd r\u1eb1ng h\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t lu\u00f4n c\u00f3 chi\u1ec1u cao b\u1eb1ng v\u1edbi chi\u1ec1u cao c\u1ee7a m\u1ed9t c\u1ed9t \u0111\u00e3 c\u00f3.</p> <p>V\u1edbi m\u1ed7i c\u1ed9t \\(i\\), k\u00fd hi\u1ec7u \\(L_i\\), \\(R_i\\) l\u00e0 c\u1ed9t g\u1ea7n nh\u1ea5t \u1edf b\u00ean tr\u00e1i/ph\u1ea3i \\(i\\) c\u00f3 chi\u1ec1u cao nh\u1ecf h\u01a1n \\(i\\). Vi\u1ec7c t\u00ecm c\u1ed9t g\u1ea7n nh\u1ea5t \u1edf b\u00ean tr\u00e1i/ph\u1ea3i c\u1ed9t \\(i\\) m\u00e0 th\u1ea5p h\u01a1n \\(h_i\\) ch\u00ednh l\u00e0 b\u00e0i to\u00e1n g\u1ed1c n\u00eau \u1edf m\u1ee5c tr\u01b0\u1edbc. Ta ch\u1ec9 c\u1ea7n s\u1eeda \u0111\u1ed5i thay v\u00ec t\u00ecm c\u1ed9t cao h\u01a1n th\u00ec ph\u1ea3i t\u00ecm c\u1ed9t th\u1ea5p h\u01a1n.</p> <p>Khi \u0111\u00e3 x\u00e1c \u0111\u1ecbnh c\u00e1c m\u1ea3ng \\(L\\) v\u00e0 \\(R\\), ta c\u00f3 th\u1ec3 x\u00e9t t\u1eebng c\u1ed9t \\(i\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\). Gi\u1ea3 s\u1eed h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 chi\u1ec1u cao b\u1eb1ng v\u1edbi c\u1ed9t \u0111ang x\u00e9t. Khi \u0111\u00f3, chi\u1ec1u d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt l\u00e0 t\u1eeb c\u1ed9t g\u1ea7n nh\u1ea5t b\u00ean tr\u00e1i th\u1ea5p h\u01a1n c\u1ed9t \\(i\\) \u0111\u1ebfn c\u1ed9t g\u1ea7n nh\u1ea5t b\u00ean ph\u1ea3i th\u1ea5p h\u01a1n c\u1ed9t \\(i\\). Di\u1ec7n t\u00edch c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t qua c\u1ed9t \\(i\\) l\u00e0: \\((R_i - L_i - 1) * h_i\\).</p> <p>V\u1eady di\u1ec7n t\u00edch h\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb \\((R_i - L_i - 1) * h_i\\) l\u1edbn nh\u1ea5t v\u1edbi m\u1ecdi \\(i\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb c\u1ee7a l\u1eddi gi\u1ea3i l\u00e0 \\(O(n)\\).</p>"},{"location":"algo/data-structures/Stack/#hinh-chu-nhat-lon-nhat-trong-luoi-o-vuong","title":"H\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t trong l\u01b0\u1edbi \u00f4 vu\u00f4ng","text":"<p>Link SPOJ</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t m\u1edf r\u1ed9ng c\u1ee7a b\u00e0i to\u00e1n tr\u01b0\u1edbc. Cho l\u01b0\u1edbi \u00f4 vu\u00f4ng \\(n \\times m\\), c\u00e1c \u00f4 c\u00f3 gi\u00e1 tr\u1ecb \\(0\\) ho\u1eb7c \\(1\\). Ta c\u1ea7n t\u00ecm h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 di\u1ec7n t\u00edch l\u1edbn nh\u1ea5t c\u00f3 t\u1ea5t c\u1ea3 \u00f4 vu\u00f4ng c\u00f3 c\u00f9ng gi\u00e1 tr\u1ecb.</p>"},{"location":"algo/data-structures/Stack/#cach-giai_3","title":"C\u00e1ch gi\u1ea3i","text":"<p>Ta c\u00f3 th\u1ec3 chia b\u00e0i to\u00e1n th\u00e0nh 2 tr\u01b0\u1eddng h\u1ee3p ri\u00eang bi\u1ec7t: t\u00ecm h\u00ecnh ch\u1eef nh\u1eadt ch\u1ec9 g\u1ed3m c\u00e1c \u00f4 gi\u00e1 tr\u1ecb \\(0\\) v\u00e0 ch\u1ec9 g\u1ed3m c\u00e1c \u00f4 gi\u00e1 tr\u1ecb \\(1\\). N\u1ebfu gi\u1ea3i \u0111\u01b0\u1ee3c m\u1ed9t tr\u01b0\u1eddng h\u1ee3p, ta c\u0169ng c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng gi\u1ea3i tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i. T\u1eeb gi\u1edd, ta s\u1ebd gi\u1ea3i b\u00e0i to\u00e1n t\u00ecm h\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t ch\u1ec9 ch\u1ee9a gi\u00e1 tr\u1ecb \\(1\\).</p> <p>Ta x\u00e9t l\u01b0\u1edbi \u00f4 vu\u00f4ng con c\u1ee7a l\u01b0\u1edbi g\u1ed1c, k\u00edch th\u01b0\u1edbc \\(k \\times m\\). N\u00f3i c\u00e1ch kh\u00e1c, l\u01b0\u1edbi \u00f4 vu\u00f4ng con n\u00e0y ch\u00ednh l\u00e0 \\(k\\) h\u00e0ng \u0111\u1ea7u ti\u00ean c\u1ee7a l\u01b0\u1edbi g\u1ed1c. V\u1edbi m\u1ed7i \\(k\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\), ta x\u00e9t chi\u1ec1u cao c\u1ee7a c\u00e1c c\u1ed9t ch\u1ee9a to\u00e0n s\u1ed1 \\(1\\) d\u1ef1ng tr\u00ean t\u1eebng v\u1ecb tr\u00ed trong h\u00e0ng. Sau \u0111\u00f3, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng b\u00e0i to\u00e1n t\u00ecm h\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t t\u1ea1o b\u1edfi c\u00e1c c\u1ed9t \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1.</p> <pre><code>for (int i = 1; i &lt;= m; ++i) h[i] = 0;\nfor (int k = 1; k &lt;= n; ++k)\n{\n    for (int j = 1; j &lt;= m; ++j)\n    {\n        if (grid[k][j] == 1) ++h[j];\n        else h[j] = 0;\n    }\n    // gi\u1ea3i b\u00e0i to\u00e1n t\u00ecm h\u00ecnh ch\u1eef nh\u1eadt l\u1edbn nh\u1ea5t trong c\u00e1c c\u1ed9t...\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb c\u1ee7a l\u1eddi gi\u1ea3i l\u00e0 \\(O(n \\times m)\\).</p>"},{"location":"algo/data-structures/Stack/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>JNEXT</li> <li>STPAR</li> <li>280B - Codeforces</li> <li>1132G - Codeforces</li> <li>Tham kh\u1ea3o th\u00eam t\u1ea1i: VNOI Problem List</li> </ul>"},{"location":"algo/data-structures/array-vs-linked-lists/","title":"M\u1ea3ng v\u00e0 danh s\u00e1ch li\u00ean k\u1ebft","text":""},{"location":"algo/data-structures/array-vs-linked-lists/#bien-con-tro","title":"Bi\u1ebfn, con tr\u1ecf","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01a1n gi\u1ea3n nh\u1ea5t ch\u00ednh l\u00e0 c\u00e1c bi\u1ebfn (variable). Ch\u00fang n\u1eafm gi\u1eef duy nh\u1ea5t m\u1ed9t gi\u00e1 tr\u1ecb, h\u01a1n n\u1eefa, ph\u1ea1m vi s\u1eed d\u1ee5ng c\u00f3 gi\u1edbi h\u1ea1n. Khi nhi\u1ec1u gi\u00e1 tr\u1ecb c\u1ea7n l\u01b0u tr\u1eef, m\u1ea3ng (arrays) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.</p> <p>M\u1ed9t kh\u00e1i ni\u1ec7m h\u01a1i kh\u00f3 h\u01a1n m\u1eb7c d\u00f9 kh\u00f4ng k\u00e9m ph\u1ea7n c\u0103n b\u1ea3n l\u00e0 con tr\u1ecf (pointer). Con tr\u1ecf thay v\u00ec gi\u1eef m\u1ed9t gi\u00e1 tr\u1ecb, n\u00f3 l\u1ea1i gi\u1eef m\u1ed9t \u0111\u1ecba ch\u1ec9 v\u00f9ng nh\u1edb:</p> <p></p> <p>Trong h\u00ecnh tr\u00ean:</p> <ul> <li><code>var</code> l\u00e0 m\u1ed9t bi\u1ebfn th\u00f4ng th\u01b0\u1eddng, c\u00f3 \u0111\u1ecba ch\u1ec9 <code>1001</code> v\u00e0 gi\u00e1 tr\u1ecb <code>50</code></li> <li><code>ptr</code> l\u00e0 m\u1ed9t bi\u1ebfn ki\u1ec3u con tr\u1ecf, c\u00f3 \u0111\u1ecba ch\u1ec9 <code>2047</code> v\u00e0 gi\u00e1 tr\u1ecb <code>1001</code>. Gi\u00e1 tr\u1ecb c\u1ee7a <code>ptr</code> l\u00e0 \u0111\u1ecba ch\u1ec9 c\u1ee7a bi\u1ebfn <code>var</code>.</li> </ul>"},{"location":"algo/data-structures/array-vs-linked-lists/#mang-arrays","title":"M\u1ea3ng (Arrays)","text":"<p>M\u1ea3ng l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u1ef1c k\u1ef3 \u0111\u01a1n gi\u1ea3n v\u00e0 c\u00f3 th\u1ec3 xem nh\u01b0 m\u1ed9t danh s\u00e1ch v\u1edbi chi\u1ec1u d\u00e0i c\u1ed1 \u0111\u1ecbnh. M\u1ea3ng l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u201c\u0111\u1eb9p\u201d b\u1edfi t\u00ednh \u0111\u01a1n gi\u1ea3n c\u1ee7a n\u00f3. M\u1ea3ng \u0111\u1eb7c bi\u1ec7t th\u00edch h\u1ee3p cho c\u00e1c t\u00ecnh hu\u1ed1ng m\u00e0 ta bi\u1ebft tr\u01b0\u1edbc \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed ho\u1eb7c c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh.</p> <p>Gi\u1ea3 s\u1eed b\u1ea1n c\u1ea7n m\u1ed9t \u0111o\u1ea1n m\u00e3 \u0111\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb trung b\u00ecnh c\u1ee7a m\u1ed9t v\u00e0i con s\u1ed1. M\u1ea3ng l\u00e0 s\u1ef1 l\u1ef1a ch\u1ecdn tuy\u1ec7t v\u1eddi \u0111\u1ec3 gi\u1eef c\u00e1c gi\u00e1 tr\u1ecb b\u1edfi y\u00eau c\u1ea7u b\u00e0i to\u00e1n kh\u00f4ng \u0111\u00f2i h\u1ecfi m\u1ed9t th\u1ee9 t\u1ef1 l\u01b0u tr\u1eef c\u1ee5 th\u1ec3 v\u00e0 c\u00e1c ph\u00e9p t\u00ednh to\u00e1n c\u0169ng kh\u00f4ng \u0111\u00f2i h\u1ecfi g\u00ec kh\u00e1c ngo\u00e0i vi\u1ec7c duy\u1ec7t qua to\u00e0n b\u1ed9 c\u00e1c ph\u1ea7n t\u1eed.</p> <p>M\u1ed9t trong nh\u1eefng s\u1ee9c m\u1ea1nh kh\u00e1c c\u1ee7a m\u1ea3ng ch\u00ednh l\u00e0 ta c\u00f3 th\u1ec3 truy c\u1eadp c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean b\u1eb1ng ch\u1ec9 s\u1ed1. V\u00ed d\u1ee5 nh\u01b0, b\u1ea1n c\u00f3 m\u1ed9t danh s\u00e1ch g\u1ed3m t\u00ean c\u1ee7a c\u00e1c h\u1ecdc sinh trong l\u1edbp h\u1ecdc. M\u1ed7i h\u1ecdc sinh \u0111\u00e1nh s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(n\\). Khi \u0111\u00f3 \u0111\u1ec3 \u0111\u1ecdc ho\u1eb7c l\u01b0u t\u00ean h\u1ecdc sinh th\u1ee9 \\(i\\) b\u1ea1n ch\u1ec9 c\u1ea7n g\u1ecdi t\u1edbi <code>studentName[i]</code>. Do c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng \u1edf v\u1ecb tr\u00ed li\u00ean ti\u1ebfp nhau trong b\u1ed9 nh\u1edb m\u00e1y t\u00ednh, n\u00ean thao t\u00e1c n\u00e0y ch\u1ec9 m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\). Tuy nhi\u00ean c\u0169ng v\u00ec l\u00fd do n\u00e0y, n\u00ean vi\u1ec7c t\u0103ng k\u00edch th\u01b0\u1edbc m\u1ea3ng hay th\u00eam / x\u00f3a 1 ph\u1ea7n t\u1eed v\u00e0o v\u1ecb tr\u00ed b\u1ea5t k\u1ef3 c\u1ee7a m\u1ea3ng c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N)\\).</p> <p>M\u1ea3ng c\u00f3 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ed1 \u0111\u1ecbnh, m\u1ed7i ph\u1ea7n t\u1eed gi\u1eef c\u1ee7a m\u1ea3ng m\u1ed9t th\u00f4ng tin v\u00e0 \u1edf m\u1ed9t v\u1ecb tr\u00ed kh\u00f4ng \u0111\u1ed5i \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc \u0111\u00f3.</p>"},{"location":"algo/data-structures/array-vs-linked-lists/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":"<ul> <li>B\u1ed9 nh\u1edb c\u1ed1 \u0111\u1ecbnh, c\u1ea7n bi\u1ebft tr\u01b0\u1edbc s\u1ed1 ph\u1ea7n t\u1eed</li> <li>Truy c\u1eadp m\u1ed9t v\u1ecb tr\u00ed b\u1ea5t k\u1ef3: \\(\\mathcal{O}(1)\\).</li> <li>Th\u00eam / x\u00f3a m\u1ed9t ph\u1ea7n t\u1eed: \\(\\mathcal{O}(N)\\).</li> </ul>"},{"location":"algo/data-structures/array-vs-linked-lists/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>Trong C++ STL, c\u00f3 CTDL <code>vector</code>, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ea3ng \u0111\u1ed9ng. CTDL n\u00e0y cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c:</p> <ul> <li>Truy c\u1eadp m\u1ed9t v\u1ecb tr\u00ed b\u1ea5t k\u1ef3: \\(\\mathcal{O}(1)\\).</li> <li>Th\u00eam / X\u00f3a 1 ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i m\u1ea3ng: \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh: \\(\\mathcal{O}(1)\\).</li> <li>Th\u00eam / x\u00f3a m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3: \\(\\mathcal{O}(N)\\).</li> </ul> <p>\u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, <code>vector</code> s\u1eed d\u1ee5ng k\u0129 thu\u1eadt \"nh\u00e2n \u0111\u00f4i m\u1ea3ng\":</p> <ul> <li>M\u1ea3ng c\u1ee7a ta s\u1ebd c\u00f3 th\u1ec3 c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb t\u1ed1i \u0111a l\u00e0 2 l\u1ea7n chi\u1ec1u d\u00e0i th\u1eadt (s\u1ed1 ph\u1ea7n t\u1eed) c\u1ee7a m\u1ea3ng.</li> <li>N\u1ebfu m\u1ea3ng v\u1eabn ch\u01b0a \u0111\u1ea7y (b\u1ed9 nh\u1edb c\u1ea5p ph\u00e1t l\u1edbn h\u01a1n chi\u1ec1u d\u00e0i th\u1eadt c\u1ee7a m\u1ea3ng), ta ch\u1ec9 c\u1ea7n \u0111\u01a1n gi\u1ea3n l\u00e0 th\u00eam ph\u1ea7n t\u1eed m\u1edbi v\u00e0o cu\u1ed1i m\u1ea3ng.</li> <li>N\u1ebfu m\u1ea3ng \u0111\u1ea7y, ta l\u00e0m nh\u01b0 sau:</li> <li>C\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb m\u1edbi b\u1eb1ng 2 l\u1ea7n chi\u1ec1u d\u00e0i m\u1ea3ng</li> <li>Copy m\u1ea3ng c\u0169 qua b\u1ed9 nh\u1edb m\u1edbi c\u1ea5p ph\u00e1t. Nh\u01b0 v\u1eady ta c\u00f3 m\u1ea3ng m\u1edbi v\u1edbi d\u1eef li\u1ec7u gi\u1ed1ng v\u1edbi m\u1ea3ng c\u0169, v\u00e0 c\u00f2n d\u01b0 ra ch\u1ed7 tr\u1ed1ng \u1edf cu\u1ed1i m\u1ea3ng m\u1edbi.</li> <li>Th\u00eam ph\u1ea7n t\u1eed m\u1edbi v\u00e0o cu\u1ed1i m\u1ea3ng m\u1edbi.</li> </ul> <p>N\u1ebfu ta th\u00eam \\(N\\) ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i m\u1ea3ng, th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0:</p> <ul> <li>\\(\\mathcal{O}(1 + 2 + 4 + 8 + 16 + ...)\\) cho c\u00e1c thao t\u00e1c c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb</li> <li>\\(\\mathcal{O}(1)\\) cho vi\u1ec7c ghi ph\u1ea7n t\u1eed m\u1edbi v\u00e0o ph\u1ea7n b\u1ed9 nh\u1edb tr\u1ed1ng.</li> </ul> <p>Do \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng kh\u00f4ng qu\u00e1 \\(\\mathcal{O(N)}\\), v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh c\u1ee7a 1 thao t\u00e1c l\u00e0 \\(\\mathcal{O}(1)\\).</p>"},{"location":"algo/data-structures/array-vs-linked-lists/#danh-sach-lien-ket-linked-lists","title":"Danh s\u00e1ch li\u00ean k\u1ebft (Linked Lists)","text":"<p>Danh s\u00e1ch li\u00ean k\u1ebft l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00f3 th\u1ec3 gi\u1eef m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed t\u00f9y \u00fd v\u00e0 d\u1ec5 d\u00e0ng thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc, c\u0169ng nh\u01b0 d\u1ec5 d\u00e0ng b\u1ecf \u0111i c\u00e1c ph\u1ea7n t\u1eed b\u00ean trong n\u00f3.</p> <p>Danh s\u00e1ch li\u00ean k\u1ebft, hi\u1ec3u theo c\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf t\u1edbi m\u1ed9t n\u00fat d\u1eef li\u1ec7u. M\u1ed7i n\u00fat d\u1eef li\u1ec7u bao g\u1ed3m d\u1eef li\u1ec7u c\u1ea7n ch\u1ee9a v\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf t\u1edbi n\u00fat ti\u1ebfp theo. T\u1ea1i \u0111i\u1ec3m cu\u1ed1i c\u00f9ng, con tr\u1ecf tr\u1ecf t\u1edbi gi\u00e1 tr\u1ecb NULL.</p> <p></p> <p>V\u1edbi thi\u1ebft k\u1ebf nh\u01b0 ban \u0111\u1ea7u, m\u1ed9t danh s\u00e1ch li\u00ean k\u1ebft th\u00edch h\u1ee3p \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u khi ch\u01b0a bi\u1ebft tr\u01b0\u1edbc \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng c\u00e1c ph\u1ea7n t\u1eed ho\u1eb7c c\u00e1c ph\u1ea7n t\u1eed th\u01b0\u1eddng xuy\u00ean thay \u0111\u1ed5i. Tuy v\u1eady, ch\u00fang ta kh\u00f4ng th\u1ec3 truy c\u1eadp m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a danh s\u00e1ch li\u00ean k\u1ebft. \u0110\u1ec3 t\u00ecm ki\u1ebfm m\u1ed9t gi\u00e1 tr\u1ecb, ta ph\u1ea3i b\u1eaft \u0111\u1ea7u t\u1ea1i ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean v\u00e0 duy\u1ec7t tu\u1ea7n t\u1ef1 qua c\u00e1c ph\u1ea7n t\u1eed cho t\u1edbi khi b\u1eaft g\u1eb7p \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb m\u00e0 m\u00ecnh c\u1ea7n t\u00ecm ki\u1ebfm. \u0110\u1ec3 ch\u00e8n m\u1ed9t n\u00fat v\u00e0o danh s\u00e1ch li\u00ean k\u1ebft, b\u1ea1n c\u0169ng ph\u1ea3i th\u1ef1c hi\u1ec7n t\u01b0\u01a1ng t\u1ef1. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u1ea3 2 thao t\u00e1c n\u00e0y l\u00e0 \\(\\mathcal{O}(N)\\). Tuy nhi\u00ean, n\u1ebfu ta bi\u1ebft \u0111\u01b0\u1ee3c con tr\u1ecf tr\u1ecf \u0111\u1ebfn ph\u1ea7n t\u1eed c\u1ea7n x\u00f3a, th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u1ec9 l\u00e0 \\(\\mathcal{O}(1)\\). D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y, thao t\u00e1c t\u00ecm ki\u1ebfm v\u00e0 ch\u00e8n trong danh s\u00e1ch li\u00ean k\u1ebft kh\u00f4ng th\u1eadt s\u1ef1 hi\u1ec7u qu\u1ea3.</p> <p>Sau \u0111\u00e2y l\u00e0 c\u00e0i \u0111\u1eb7t ki\u1ec3u d\u1eef li\u1ec7u danh s\u00e1ch li\u00ean k\u1ebft th\u00f4ng th\u01b0\u1eddng:</p> <pre><code>struct ListNode {\n    int data; // d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u \u1edf n\u00fat c\u1ee7a linked list\n    ListNode* nextNode; // con tr\u1ecf tr\u1ecf t\u1edbi ph\u1ea7n t\u1eed ti\u1ebfp theo c\u1ee7a linked list.\n};\nListNode* firstNode;\n</code></pre> <p>B\u1ea1n c\u00f3 th\u1ec3 ch\u00e8n m\u1ed9t n\u00fat m\u1edbi v\u00e0o b\u1eb1ng c\u00e1ch ch\u00e8n ch\u00fang v\u00e0o \u0111\u1ea7u danh s\u00e1ch. Thao t\u00e1c n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(1)\\).</p> <pre><code>ListNode* newNode = new ListNode();\nnewNode-&gt;nextNode = firstNode;\nfirstNode = newNode;\n</code></pre> <p>Duy\u1ec7t qua to\u00e0n b\u1ed9 danh s\u00e1ch li\u00ean k\u1ebft r\u1ea5t \u0111\u01a1n gi\u1ea3n nh\u01b0 sau:</p> <pre><code>ListNode* curNode = firstNode;\nwhile (curNode != NULL) {\n   cout &lt;&lt; curNode-&gt;data &lt;&lt; endl;\n   curNode = curNode-&gt;nextNode;\n}\n</code></pre> <p>Ngo\u00e0i ra, ta c\u0169ng c\u00f3 th\u1ec3 l\u01b0u th\u00eam con tr\u1ecf tr\u1ecf v\u00e0o ph\u1ea7n t\u1eed cu\u1ed1i c\u1ee7a danh s\u00e1ch. Khi \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111\u1ec3 th\u00eam 1 ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i danh s\u00e1ch l\u00e0 \\(\\mathcal{O}(1)\\).</p>"},{"location":"algo/data-structures/array-vs-linked-lists/#tong-ket_1","title":"T\u1ed5ng k\u1ebft","text":"<ul> <li>Th\u00eam / x\u00f3a 1 ph\u1ea7n t\u1eed m\u1edbi v\u00e0o \u0111\u1ea7u / cu\u1ed1i: \\(\\mathcal{O}(1)\\)</li> <li>Truy c\u1eadp 1 ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed b\u1ea5t k\u1ef3: \\(\\mathcal{O}(N)\\).</li> </ul>"},{"location":"algo/data-structures/array-vs-linked-lists/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Topcoder</li> <li>Wikipedia</li> </ul>"},{"location":"algo/data-structures/data-structures-overview/","title":"T\u1ed5ng quan v\u1ec1 C\u1ea5u Tr\u00fac D\u1eef Li\u1ec7u","text":"<p>M\u1eb7c d\u00f9 m\u00e1y t\u00ednh \u0111\u00e3 c\u00f3 th\u1ec3 x\u1eed l\u00fd h\u00e0ng tri\u1ec7u ph\u00e9p t\u00ednh m\u1ed7i gi\u00e2y, nh\u01b0ng khi m\u1ed9t b\u00e0i to\u00e1n tr\u1edf ph\u1ee9c t\u1ea1p, c\u00e1ch t\u1ed5 ch\u1ee9c d\u1eef li\u1ec7u v\u1eabn v\u00f4 c\u00f9ng quan tr\u1ecdng.</p> <p>\u0110\u1ec3 minh h\u1ecda \u0111i\u1ec3m n\u00e0y, h\u00e3y tham kh\u1ea3o v\u00ed d\u1ee5 sau: b\u1ea1n \u0111i \u0111\u1ebfn th\u01b0 vi\u1ec7n, th\u1eed t\u00ecm ki\u1ebfm m\u1ed9t quy\u1ec3n s\u00e1ch v\u1edbi ch\u1ee7 \u0111\u1ec1 n\u00e0o \u0111\u00f3. C\u00e1c cu\u1ed1n s\u00e1ch \u0111\u01b0\u1ee3c x\u1ebfp theo l\u0129nh v\u1ef1c. Trong m\u1ed7i ch\u1ee7 \u0111\u1ec1, s\u00e1ch l\u1ea1i \u0111\u01b0\u1ee3c x\u1ebfp theo t\u00ean t\u00e1c gi\u1ea3, nh\u1edd v\u1eady m\u00e0 vi\u1ec7c l\u1ea5y v\u00e0 c\u1ea5t s\u00e1ch t\u1eeb gi\u00e1 tr\u1edf n\u00ean kh\u00e1 d\u1ec5 d\u00e0ng v\u00e0 \u0111\u01a1n gi\u1ea3n.</p> <p>B\u00e2y gi\u1edd, h\u00e3y th\u1eed t\u01b0\u1edfng t\u01b0\u1ee3ng thay v\u00ec t\u1ed5 ch\u1ee9c th\u00e0nh t\u1eebng gi\u00e1 s\u00e1ch c\u1ee5 th\u1ec3, s\u00e1ch \u0111\u01b0\u1ee3c ch\u1ea5t th\u00e0nh t\u1eebng \u0111\u1ed1ng \u1edf kh\u1eafp th\u01b0 vi\u1ec7n. \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c quy\u1ec3n s\u00e1ch c\u1ee7a m\u00ecnh, b\u1ea1n s\u1ebd ph\u1ea3i m\u1ea5t h\u00e0ng gi\u1edd, th\u1eadm ch\u00ed r\u1ea5t nhi\u1ec1u ng\u00e0y.</p> <p>T\u01b0\u01a1ng t\u1ef1, m\u1ed9t ph\u1ea7n m\u1ec1m kh\u00f4ng th\u1ec3 v\u1eadn h\u00e0nh hi\u1ec7u qu\u1ea3 khi d\u1eef li\u1ec7u kh\u00f4ng \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef m\u1ed9t c\u00e1ch ph\u00f9 h\u1ee3p v\u1edbi \u1ee9ng d\u1ee5ng.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd c\u00f9ng nhau \u0111i\u1ec3m qua c\u00e1c lo\u1ea1i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u t\u1eeb c\u01a1 b\u1ea3n \u0111\u1ebfn n\u00e2ng cao. \u0110\u1ec3 t\u00ecm hi\u1ec3u chi ti\u1ebft v\u1ec1 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc \u1edf link t\u01b0\u01a1ng \u1ee9ng. Trong b\u00e0i vi\u1ebft n\u00e0y, m\u00ecnh t\u1ea1m chia c\u00e1c CTDL \u0111\u01b0\u1ee3c chia th\u00e0nh c\u00e1c lo\u1ea1i sau:</p> <ul> <li>CTDL l\u01b0u tr\u1eef: th\u01b0\u1eddng c\u00f3 c\u00e1c thao t\u00e1c nh\u01b0 th\u00eam 1 ph\u1ea7n t\u1eed, x\u00f3a 1 ph\u1ea7n t\u1eed. C\u00f3 th\u1ec3 c\u00f3 th\u00eam c\u00e1c thao t\u00e1c nh\u01b0 t\u00ecm ki\u1ebfm 1 ph\u1ea7n t\u1eed.</li> <li>CTDL truy v\u1ea5n: th\u01b0\u1eddng d\u00f9ng cho c\u00e1c b\u00e0i to\u00e1n m\u00e0 b\u1ea1n ph\u1ea3i duy tr\u00ec m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c s\u1ed1 v\u00e0 th\u1ef1c hi\u1ec7n 1 s\u1ed1 truy v\u1ea5n tr\u00ean \u0111\u00f3.</li> <li>CTDL x\u00e2u: d\u00f9ng cho c\u00e1c b\u00e0i t\u1eadp X\u1eed l\u00fd x\u00e2u.</li> </ul>"},{"location":"algo/data-structures/data-structures-overview/#1-ctdl-luu-tru","title":"1. CTDL L\u01b0u tr\u1eef","text":""},{"location":"algo/data-structures/data-structures-overview/#11-mang-array-danh-sach-lien-ket-linked-list","title":"1.1. M\u1ea3ng (array), danh s\u00e1ch li\u00ean k\u1ebft (linked list)","text":"<p>M\u1ea3ng v\u00e0 danh s\u00e1ch li\u00ean k\u1ebft l\u00e0 2 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u1ec1n t\u1ea3ng cho t\u1ea5t c\u1ea3 c\u00e1c lo\u1ea1i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c. M\u1ea3ng v\u00e0 danh s\u00e1ch li\u00ean k\u1ebft \u0111\u1ec1u \u0111\u01b0\u1ee3c d\u00f9ng khi b\u1ea1n mu\u1ed1n l\u01b0u nhi\u1ec1u d\u1eef li\u1ec7u (th\u01b0\u1eddng c\u00f3 c\u00f9ng ki\u1ec3u d\u1eef li\u1ec7u). B\u1ea3ng d\u01b0\u1edbi \u0111\u00e2y so s\u00e1nh c\u00e1c thao t\u00e1c v\u1ec1 m\u1ea3ng v\u00e0 danh s\u00e1ch li\u00ean k\u1ebft:</p> M\u1ea3ng Danh s\u00e1ch li\u00ean k\u1ebft B\u1ed9 nh\u1edb C\u1ed1 \u0111\u1ecbnh (c\u1ea7n bi\u1ebft tr\u01b0\u1edbc s\u1ed1 ph\u1ea7n t\u1eed) C\u00f3 th\u1ec3 t\u0103ng gi\u1ea3m t\u00f9y \u00fd Th\u00eam/X\u00f3a 1 ph\u1ea7n t\u1eed $\\mathcal{O}(N)$ $\\mathcal{O}(1)$, gi\u1ea3 s\u1eed bi\u1ebft con tr\u1ecf t\u1edbi ph\u1ea7n t\u1eed \u0111\u00f3 T\u00ecm ki\u1ebfm 1 ph\u1ea7n t\u1eed $\\mathcal{O}(N)$ $\\mathcal{O}(N)$ Truy c\u1eadp ph\u1ea7n t\u1eed $\\mathcal{O}(1)$ $\\mathcal{O}(N)$ Kh\u00e1c - \u00cdt b\u1ed9 nh\u1edb h\u01a1n- Cache locality: c\u00e1c ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed g\u1ea7n nhau tr\u00ean b\u1ed9 nh\u1edb m\u00e1y t\u00ednh, n\u00ean khi truy c\u1eadp c\u00e1c ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp s\u1ebd nhanh h\u01a1n <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 m\u1ea3ng v\u00e0 danh s\u00e1ch li\u00ean k\u1ebft \u1edf \u0111\u00e2y</p>"},{"location":"algo/data-structures/data-structures-overview/#12-stack-queue-deque","title":"1.2. Stack, Queue, Deque","text":""},{"location":"algo/data-structures/data-structures-overview/#121-stack","title":"1.2.1. Stack","text":"<p>Stack l\u00e0 CTDL cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c:</p> <ul> <li>Th\u00eam 1 ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i CTDL</li> <li>X\u00f3a 1 ph\u1ea7n t\u1eed kh\u1ecfi cu\u1ed1i CTDL</li> </ul> <p>C\u1ea3 2 thao t\u00e1c tr\u00ean \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\). Ch\u00fa \u00fd ta ch\u1ec9 c\u00f3 th\u1ec3 x\u00f3a ph\u1ea7n t\u1eed \u1edf cu\u1ed1i CTDL, n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 ph\u1ea7n t\u1eed m\u00e0 m\u1edbi \u0111\u01b0\u1ee3c th\u00eam v\u00e0o g\u1ea7n nh\u1ea5t. V\u00ec v\u1eady, Stack c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 FIFO (First In First Out).</p> <p>Stack c\u00f3 c\u00e0i \u0111\u1eb7t \u0111\u01a1n gi\u1ea3n v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong nhi\u1ec1u thu\u1eadt to\u00e1n nh\u01b0 DFS, t\u00ecm chu tr\u00ecnh Euler, t\u00ecm kh\u1edbp c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>Trong C++ STL, c\u00f3 s\u1eb5n ki\u1ec3u d\u1eef li\u1ec7u <code>stack</code>.</p>"},{"location":"algo/data-structures/data-structures-overview/#122-queue","title":"1.2.2. Queue","text":"<p>Queue l\u00e0 CTDL cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c:</p> <ul> <li>Th\u00eam 1 ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i CTDL</li> <li>X\u00f3a 1 ph\u1ea7n t\u1eed kh\u1ecfi \u0111\u1ea7u CTDL.</li> </ul> <p>C\u1ea3 2 thao t\u00e1c \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\). Ch\u00fa \u00fd ta ch\u1ec9 c\u00f3 th\u1ec3 x\u00f3a ph\u1ea7n t\u1eed \u1edf \u0111\u1ea7u CTDL, n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 ph\u1ea7n t\u1eed m\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o l\u00e2u nh\u1ea5t. V\u00ec v\u1eady, Stack c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 LIFO (Last In First Out).</p> <p>Queue c\u00f3 c\u00e0i \u0111\u1eb7t \u0111\u01a1n gi\u1ea3n v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong BFS.</p> <p>Trong C++ STL, c\u00f3 s\u1eb5n ki\u1ec3u d\u1eef li\u1ec7u <code>queue</code>.</p>"},{"location":"algo/data-structures/data-structures-overview/#123-deque","title":"1.2.3. Deque","text":"<p>Deque (Double Ended Queue), l\u00e0 CTDL t\u1ed5ng qu\u00e1t h\u01a1n c\u1ee7a Stack v\u00e0 Queue. N\u00f3 cho ph\u00e9p:</p> <ul> <li>Th\u00eam 1 ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ea7u ho\u1eb7c cu\u1ed1i CTDL.</li> <li>X\u00f3a 1 ph\u1ea7n t\u1eed kh\u1ecfi \u0111\u1ea7u ho\u1eb7c cu\u1ed1i CTDL.</li> </ul> <p>C\u1ea3 2 thao t\u00e1c \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\).</p> <p>Deque \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n nh\u01b0:</p> <ul> <li>BFS 01</li> <li>T\u00ecm Min/Max tr\u00ean \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn.</li> </ul> <p>Trong C++ STL, c\u00f3 s\u1eb5n ki\u1ec3u d\u1eef li\u1ec7u <code>deque</code>.</p>"},{"location":"algo/data-structures/data-structures-overview/#13-priority-queue-heap","title":"1.3. Priority Queue - Heap","text":"<p>Heap l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c:</p> <ul> <li>Th\u00eam m\u1ed9t ph\u1ea7n t\u1eed, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{N})\\).</li> <li>X\u00f3a m\u1ed9t ph\u1ea7n t\u1eed, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{N})\\).</li> <li>T\u00ecm \\(max\\) c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\).</li> </ul> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 Heap \u1edf \u0111\u00e2y</p> <p>Fibonacci Heap l\u00e0 m\u1ed9t d\u1ea1ng heap c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u00e9 h\u01a1n. Trong C++, CTDL priority_queue \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t b\u1eb1ng Fibonacci Heap.</p>"},{"location":"algo/data-structures/data-structures-overview/#14-cay-tim-kiem-nhi-phan","title":"1.4. C\u00e2y T\u00ecm Ki\u1ebfm Nh\u1ecb Ph\u00e2n","text":"<p>C\u00e2y T\u00ecm Ki\u1ebfm Nh\u1ecb Ph\u00e2n (BST Binary Search Tree) l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n c\u00f3 t\u00ednh ch\u1ea5t: V\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb tr\u00ean \u0111\u1ec9nh \u0111ang x\u00e9t, gi\u00e1 tr\u1ecb c\u1ee7a m\u1ecdi \u0111\u1ec9nh tr\u00ean c\u00e2y con tr\u00e1i lu\u00f4n nh\u1ecf h\u01a1n \u0111\u1ec9nh \u0111ang x\u00e9t v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a m\u1ecdi \u0111\u1ec9nh tr\u00ean c\u00e2y con ph\u1ea3i lu\u00f4n l\u1edbn h\u01a1n \u0111\u1ec9nh \u0111ang x\u00e9t.</p> <p></p> <p>C\u00e2y t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c:</p> <ul> <li>Th\u00eam 1 ph\u1ea7n t\u1eed.</li> <li>X\u00f3a 1 ph\u1ea7n t\u1eed.</li> <li>Ki\u1ec3m tra 1 ph\u1ea7n t\u1eed c\u00f3 t\u1ed3n t\u1ea1i hay kh\u00f4ng.</li> <li>T\u00ecm ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng 1 gi\u00e1 tr\u1ecb \\(x\\) cho tr\u01b0\u1edbc.</li> </ul> <p>Trong tr\u01b0\u1eddng h\u1ee3p d\u1eef li\u1ec7u ng\u1eabu nhi\u00ean, c\u00e1c thao t\u00e1c tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh l\u00e0 \\(\\mathcal{O}(\\log{N})\\). Tuy nhi\u00ean trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, c\u00e2y t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n b\u1ecb suy bi\u1ebfn (th\u00e0nh 1 \"\u0111\u01b0\u1eddng th\u1eb3ng\"), th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i thao t\u00e1c l\u00e0 \\(\\mathcal{O}(N)\\).</p> <p>\u0110\u1ec3 kh\u1eafc ph\u1ee5c \u0111i\u1ec1u n\u00e0y, c\u00f3 r\u1ea5t nhi\u1ec1u CTDL c\u1ea3i ti\u1ebfn t\u1eeb c\u00e2y t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n, th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c c\u00e2y nh\u1ecb ph\u00e2n c\u00e2n b\u1eb1ng. Khi \u0111\u00f3, c\u00e1c thao t\u00e1c tr\u00ean c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{N})\\). V\u00ed d\u1ee5:</p> <ul> <li>C\u00e2y \u0110\u1ecf \u0110en (Red-Black Tree) l\u00e0 m\u1ed9t d\u1ea1ng c\u00e2y t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n (BST) m\u00e0 sau m\u1ed7i truy v\u1ea5n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n, c\u00e2y t\u1ef1 c\u00e2n b\u1eb1ng theo \u0111\u00fang t\u00ednh ch\u1ea5t c\u1ee7a n\u00f3 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(log(N))\\). CTDL set trong C++ \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t b\u1eb1ng c\u00e2y \u0111\u1ecf \u0111en.   /uploads/redblack1.png</li> <li>Splay tree, Skip list, Treap th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng trong c\u00e1c k\u1ef3 thi b\u1edfi c\u00e0i \u0111\u1eb7t \u0111\u01a1n gi\u1ea3n.</li> </ul>"},{"location":"algo/data-structures/data-structures-overview/#15-bang-bam-hash-tables","title":"1.5. B\u1ea3ng b\u0103m (Hash Tables)","text":"<p>B\u1ea3ng b\u0103m l\u00e0 m\u1ed9t CTDL th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 m\u1ed9t t\u1eeb \u0111i\u1ec3n: m\u1ed7i ph\u1ea7n t\u1eed trong b\u1ea3ng b\u0103m l\u00e0 m\u1ed9t c\u1eb7p (kh\u00f3a, gi\u00e1 tr\u1ecb). N\u1ebfu so s\u00e1nh v\u1edbi m\u1ea3ng, kh\u00f3a \u0111\u01b0\u1ee3c xem nh\u01b0 ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng, c\u00f2n gi\u00e1 tr\u1ecb gi\u1ed1ng nh\u01b0 gi\u00e1 tr\u1ecb m\u00e0 ta l\u01b0u t\u1ea1i ch\u1ec9 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng. B\u1ea3ng b\u0103m kh\u00f4ng nh\u01b0 c\u00e1c lo\u1ea1i t\u1eeb \u0111i\u1ec3n th\u00f4ng th\u01b0\u1eddng - ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb th\u00f4ng qua kh\u00f3a c\u1ee7a n\u00f3.</p> <p>B\u1ea3ng b\u0103m ho\u1ea1t \u0111\u1ed9ng d\u1ef1a tr\u00ean h\u00e0m Hash: Hash l\u00e0 qu\u00e1 tr\u00ecnh kh\u1edfi t\u1ea1o m\u1ed9t gi\u00e1 tr\u1ecb kh\u00f3a (th\u01b0\u1eddng l\u00e0 32 bit ho\u1eb7c 64 bit) t\u1eeb m\u1ed9t ph\u1ea7n d\u1eef li\u1ec7u. N\u00f3 c\u00f3 th\u1ec3 l\u00e0 \\(n\\) bit \u0111\u1ea7u ti\u00ean c\u1ee7a d\u1eef li\u1ec7u, \\(n\\) bit cu\u1ed1i c\u00f9ng, gi\u00e1 tr\u1ecb mod cho m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 n\u00e0o \u0111\u00f3. D\u1ef1a theo gi\u00e1 tr\u1ecb hash, d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c chia v\u00e0o c\u00e1c bucket:</p> <p></p> <p>Trong tr\u01b0\u1eddng h\u1ee3p h\u00e0m Hash ho\u1ea1t \u0111\u1ed9ng t\u1ed1t, m\u1ed7i bucket c\u00f3 r\u1ea5t \u00edt ph\u1ea7n t\u1eed, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thao t\u00e1c tr\u00ean Hash table nh\u01b0 sau:</p> <ul> <li>T\u00ecm 1 kh\u00f3a: \\(\\mathcal{O}(1)\\).</li> <li>Th\u00eam / x\u00f3a 1 kh\u00f3a: \\(\\mathcal{O}(1)\\).</li> </ul> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 Hash table \u1edf \u0111\u00e2y</p>"},{"location":"algo/data-structures/data-structures-overview/#2-ctdl-truy-van","title":"2. CTDL Truy v\u1ea5n","text":""},{"location":"algo/data-structures/data-structures-overview/#21-mang-cong-don-prefix-sum","title":"2.1. M\u1ea3ng c\u1ed9ng d\u1ed3n (Prefix Sum)","text":"<p>M\u1ea3ng c\u1ed9ng d\u1ed3n l\u00e0 m\u1ed9t c\u00e1ch \u00e1p d\u1ee5ng kh\u00e9o l\u00e9o m\u1ea3ng. C\u00f3 2 d\u1ea1ng b\u00e0i c\u01a1 b\u1ea3n c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch \u00e1p d\u1ee5ng Prefix Sum.</p>"},{"location":"algo/data-structures/data-structures-overview/#211-mang-cong-don-tim-tong-mot-oan-lien-tiep","title":"2.1.1. M\u1ea3ng c\u1ed9ng d\u1ed3n - T\u00ecm t\u1ed5ng m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp","text":"<p>V\u00ed d\u1ee5</p> <ul> <li>Cho m\u1ed9t m\u1ea3ng \\(a_1,a_2,a_3,...,a_N\\).</li> <li>C\u1ea7n tr\u1ea3 l\u1eddi nhi\u1ec1u truy v\u1ea5n, m\u1ed7i truy v\u1ea5n cho 2 s\u1ed1 \\(L\\) v\u00e0 \\(R\\), y\u00eau c\u1ea7u in ra t\u1ed5ng \\(a_L + a_{L+1} + ... + a_R\\).</li> </ul> <p>C\u00e1ch l\u00e0m</p> <ul> <li>T\u1ea1o m\u1ed9t m\u1ea3ng \\(S\\), v\u1edbi \\(S_i = a_1 + a_2 + ... + a_i\\). M\u1ea3ng \\(S\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ea3ng c\u1ed9ng d\u1ed3n</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n, in ra: \\(S_R \u2013 S_{L-1}\\).</li> </ul>"},{"location":"algo/data-structures/data-structures-overview/#212-mang-cong-don-tang-gia-tri-cac-oan","title":"2.1.2. M\u1ea3ng c\u1ed9ng d\u1ed3n - T\u0103ng gi\u00e1 tr\u1ecb c\u00e1c \u0111o\u1ea1n","text":"<p>V\u00ed d\u1ee5</p> <ul> <li>Cho m\u1ea3ng \\(a_1,a_2,...,a_N\\).</li> <li>C\u1ea7n th\u1ef1c hi\u1ec7n nhi\u1ec1u truy v\u1ea5n, m\u1ed7i truy v\u1ea5n cho 3 s\u1ed1 \\(L\\), \\(R\\), \\(V\\). Y\u00eau c\u1ea7u: v\u1edbi m\u1ed7i \\(i (L \\le i \\le R)\\), c\u1ed9ng \\(V\\) v\u00e0o \\(a_i\\).</li> <li>T\u00ednh m\u1ea3ng \\(a\\) sau khi th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n.</li> </ul> <p>C\u00e1ch l\u00e0m</p> <ul> <li>T\u1ea1o m\u1ed9t m\u1ea3ng \\(P\\): \\(p_1,p_2,...,p_N\\)</li> <li>Kh\u1edfi t\u1ea1o \\(p_i = 0\\).</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n, t\u0103ng \\(p_L\\) l\u00ean \\(V\\) v\u00e0 tr\u1eeb \\(p_{R+1}\\) \u0111i \\(V\\).</li> <li>Cu\u1ed1i c\u00f9ng, v\u1edbi m\u1ed7i \\(i\\) (t\u1eeb 1), \\(p_i += p_{i\u20131}\\). Ta c\u00f3 \\(a_i = a_i + p_i\\).</li> </ul>"},{"location":"algo/data-structures/data-structures-overview/#213-mang-cong-don-tren-bang-2-chieu","title":"2.1.3. M\u1ea3ng c\u1ed9ng d\u1ed3n tr\u00ean b\u1ea3ng 2 chi\u1ec1u","text":"<p>Tr\u00ean b\u1ea3ng 2 chi\u1ec1u \\(A(i, j)\\), ta \u0111\u1eb7t \\(f(i, j)\\) l\u00e0 t\u1ed5ng c\u00e1c \u00f4 trong h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 2 \u0111\u1ec9nh \u0111\u1ed1i di\u1ec7n l\u00e0 \\((1, 1)\\) v\u00e0 \\((i, j)\\).</p> <p>Khi \u0111\u00f3, ta c\u00f3: \\(f(i, j) = f(i-1, j) + f(i, j-1) - f(i-1, j-1) + A(i, j)\\).</p> <p>Gi\u1ea3i th\u00edch c\u00f4ng th\u1ee9c tr\u00ean:</p> <p></p> <p>\u0111\u1ecf = xanh da tr\u1eddi + v\u00e0ng - t\u00edm + xanh l\u00e1</p> <p>\\(f(i, j) = f(i-1, j) + f(i, j-1) - f(i-1, j-1) + A(i, j)\\)</p>"},{"location":"algo/data-structures/data-structures-overview/#22-disjoint-sets","title":"2.2. Disjoint Sets","text":"<p>Disjoint Sets l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong thu\u1eadt to\u00e1n Kruskal v\u00e0 thu\u1eadt to\u00e1n Prim - 2 thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb. Nh\u01b0 t\u00ean g\u1ecdi c\u1ee7a n\u00f3, Disjoint Set \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00e1c t\u1eadp h\u1ee3p kh\u00f4ng giao nhau.</p> <p>B\u00e0i to\u00e1n</p> <p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 \\(N\\) \u0111\u1ec9nh. Ta c\u1ea7n th\u1ef1c hi\u1ec7n 2 lo\u1ea1i truy v\u1ea5n:</p> <ul> <li>N\u1ed1i 2 \u0111\u1ec9nh \\(i\\) v\u00e0 \\(j\\)</li> <li>Ki\u1ec3m tra 2 \u0111\u1ec9nh \\(i\\) v\u00e0 \\(j\\) c\u00f3 thu\u1ed9c c\u00f9ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng hay kh\u00f4ng.</li> </ul> <p>Disjoint set cho ph\u00e9p ta th\u1ef1c hi\u1ec7n 2 thao t\u00e1c tr\u00ean v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{N})\\).</p> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 Disjoint Set \u1edf b\u00e0i vi\u1ebft n\u00e0y.</p>"},{"location":"algo/data-structures/data-structures-overview/#23-sparse-table","title":"2.3. Sparse Table","text":"<p>Sparse Table l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong b\u00e0i to\u00e1n LCA &amp; RMQ.</p> <p>V\u1edbi c\u1ea3 2 b\u00e0i to\u00e1n, Sparse Table cho ph\u00e9p:</p> <ul> <li>Kh\u1edfi t\u1ea1o v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p: \\(\\mathcal{O}(N\\* \\log{N})\\).</li> <li>Tr\u1ea3 l\u1eddi truy v\u1ea5n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\).</li> </ul>"},{"location":"algo/data-structures/data-structures-overview/#24-segment-tree","title":"2.4. Segment Tree","text":"<p>Segment Tree, c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Interval Tree trong nhi\u1ec1u t\u00e0i li\u1ec7u ti\u1ebfng Vi\u1ec7t, l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c truy v\u1ea5n tr\u00ean m\u1ed9t d\u00e3y s\u1ed1. Segment Tree r\u1ea5t linh \u0111\u1ed9ng v\u00e0 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng v\u1edbi nhi\u1ec1u lo\u1ea1i truy v\u1ea5n kh\u00e1c nhau, n\u00ean n\u00f3 xu\u1ea5t hi\u1ec7n r\u1ea5t nhi\u1ec1u trong c\u00e1c k\u1ef3 thi.</p> <p>V\u1edbi d\u00e3y s\u1ed1 \u0111\u1ed9 d\u00e0i \\(N\\), Segment Tree cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{N})\\).</p> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 Segment Tree \u1edf \u0111\u00e2y.</p> <p>Segment Tree c\u0169ng c\u00f3 m\u1ed9t m\u1edf r\u1ed9ng v\u1edbi nhi\u1ec1u \u1ee9ng d\u1ee5ng quan tr\u1ecdng l\u00e0 Segment Tree tr\u00ean t\u1eadp \u0111o\u1ea1n th\u1eb3ng.</p>"},{"location":"algo/data-structures/data-structures-overview/#25-fenwick","title":"2.5. Fenwick","text":"<p>C\u0169ng gi\u1ed1ng nh\u01b0 Segment Tree, Fenwick tree (c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Binary Indexed Tree) l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p th\u1ef1c hi\u1ec7n c\u00e1c truy v\u1ea5n tr\u00ean m\u1ed9t d\u00e3y s\u1ed1:</p> <ul> <li>\u01afu \u0111i\u1ec3m:<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i thao t\u00e1c c\u0169ng l\u00e0 \\(\\mathcal{O}(\\log{N})\\).</li> <li>H\u1eb1ng s\u1ed1 t\u1ef1 nhi\u00ean th\u1ea5p h\u01a1n Segment Tree, n\u00ean ch\u1ea1y nhanh h\u01a1n.</li> <li>D\u00f9ng \u00edt b\u1ed9 nh\u1edb h\u01a1n.</li> <li>D\u1ec5 c\u00e0i \u0111\u1eb7t h\u01a1n Segment Tree</li> </ul> </li> <li>Nh\u01b0\u1ee3c \u0111i\u1ec3m:<ul> <li>Kh\u00f4ng t\u1ed5ng qu\u00e1t b\u1eb1ng Segment Tree. T\u1ea5t c\u1ea3 nh\u1eefng b\u00e0i gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng Fenwick tree \u0111\u1ec1u c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng Segment Tree. Nh\u01b0ng chi\u1ec1u ng\u01b0\u1ee3c l\u1ea1i kh\u00f4ng \u0111\u00fang.</li> </ul> </li> </ul> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 Fenwick Tree \u1edf \u0111\u00e2y.</p>"},{"location":"algo/data-structures/data-structures-overview/#26-heavy-light-decomposition","title":"2.6. Heavy-light decomposition","text":"<p>Heavy Light Decomposition l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng nhi\u1ec1u trong nh\u1eefng b\u00e0i c\u1ea7n x\u1eed l\u00fd c\u00e1c truy v\u1ea5n tr\u00ean c\u00e2y. Heavy-light decomposition l\u00e0 k\u0129 thu\u1eadt ph\u00e2n t\u00e1ch m\u1ed9t c\u00e2y th\u00e0nh nhi\u1ec1u chu\u1ed7i \u0111\u1ec9nh (chain) r\u1eddi nhau. Sau \u0111\u00f3, ch\u00fang ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u nh\u01b0 Interval Tree hay Binary-Indexed Tree l\u00ean nh\u1eefng chu\u1ed7i n\u00e0y \u0111\u1ec3 c\u00f3 th\u1ec3 c\u1eadp nh\u1eadt d\u1eef li\u1ec7u ho\u1eb7c tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n tr\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u0111i gi\u1eefa 2 \u0111\u1ec9nh trong c\u00e2y.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam \u1edf: Thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch c\u00e2y</p>"},{"location":"algo/data-structures/data-structures-overview/#27-persistent-data-structures","title":"2.7. Persistent Data Structures","text":"<p>Persistent Data Structures l\u00e0 nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c d\u00f9ng khi ch\u00fang ta c\u1ea7n c\u00f3 to\u00e0n b\u1ed9 l\u1ecbch s\u1eed c\u1ee7a c\u00e1c thay \u0111\u1ed5i tr\u00ean 1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u.</p> <p>B\u1ea1n c\u00f3 th\u1ec3  \u0111\u1ecdc th\u00eam \u1edf: Persistent Data Structures</p>"},{"location":"algo/data-structures/data-structures-overview/#3-ctdl-xau","title":"3. CTDL x\u00e2u","text":""},{"location":"algo/data-structures/data-structures-overview/#31-cay-tien-to-trie","title":"3.1. C\u00e2y Ti\u1ec1n T\u1ed1 (Trie)","text":"<p>Trie l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u d\u00f9ng \u0111\u1ec3 qu\u1ea3n l\u00fd m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c x\u00e2u. Trie cho ph\u00e9p:</p> <ul> <li>Th\u00eam m\u1ed9t x\u00e2u v\u00e0o t\u1eadp h\u1ee3p, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(L)\\) v\u1edbi \\(L\\) l\u00e0 \u0111\u1ed9 d\u00e0i x\u00e2u c\u1ea7n th\u00eam.</li> <li>X\u00f3a m\u1ed9t x\u00e2u kh\u1ecfi t\u1eadp h\u1ee3p, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(L)\\).</li> <li>Ki\u1ec3m tra m\u1ed9t x\u00e2u c\u00f3 t\u1ed3n t\u1ea1i trong t\u1eadp h\u1ee3p hay kh\u00f4ng, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(L)\\).</li> </ul> <p>Ngo\u00e0i ra tr\u00ean th\u1ef1c t\u1ebf, trie c\u0169ng r\u1ea5t ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb khi \u00e1p d\u1ee5ng \u0111\u1ec3 l\u01b0u c\u00e1c t\u1eeb c\u00f3 ngh\u0129a, v\u00ec v\u1eady n\u00f3 l\u00e0 m\u1ed9t CTDL c\u00f3 \u1ee9ng d\u1ee5ng r\u1ea5t l\u1edbn.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam b\u00e0i vi\u1ebft v\u1ec1 trie.</p>"},{"location":"algo/data-structures/data-structures-overview/#32-aho-corasick","title":"3.2. Aho Corasick","text":"<p>B\u00e0i vi\u1ebft s\u1ebd \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt sau</p>"},{"location":"algo/data-structures/data-structures-overview/#33-mang-hau-to-suffix-array","title":"3.3. M\u1ea3ng H\u1eadu T\u1ed1 (Suffix Array)","text":"<p>Suffix Array l\u00e0 m\u1ed9t CTDL gi\u00fap s\u1eafp x\u1ebfp c\u00e1c h\u1eadu t\u1ed1 c\u1ee7a m\u1ed9t x\u00e2u theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n. CTDL n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n x\u1eed l\u00fd x\u00e2u.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 Suffix Array \u1edf \u0111\u00e2y.</p>"},{"location":"algo/data-structures/data-structures-overview/#34-suffix-automaton","title":"3.4. Suffix Automaton","text":"<p>B\u00e0i vi\u1ebft s\u1ebd \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt sau.</p>"},{"location":"algo/data-structures/data-structures-overview/#35-palindrome-tree","title":"3.5.  Palindrome Tree","text":"<p>Palindrome tree (c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Eertree), l\u00e0 m\u1ed9t CTDL m\u1edbi \u0111\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn v\u00e0o n\u0103m 2014 nh\u1edd b\u00e0i thuy\u1ebft tr\u00ecnh c\u1ee7a Mikhail Rubinchik.</p> <p>Nh\u01b0 t\u00ean g\u1ecdi c\u1ee7a n\u00f3, Palindrome tree l\u00e0 m\u1ed9t CTDL gi\u00fap gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i to\u00e1n v\u1ec1 Palindrome. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam \u1edf \u0111\u00e2y</p>"},{"location":"algo/data-structures/data-structures-overview/#cac-tai-lieu-tham-khao","title":"C\u00e1c t\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>Codeforces</li> <li>Topcoder</li> </ul>"},{"location":"algo/data-structures/deque-min-max/","title":"H\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u (deque) v\u00e0 B\u00e0i to\u00e1n t\u00ecm max-min trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn","text":"<p>T\u00e1c gi\u1ea3:  - B\u00f9i Minh Ho\u1ea1t - Hung Vuong High School for the Gifted, Phu Tho Province - Nguy\u1ec5n Ch\u00e2u Khanh - Hung Vuong High School for the Gifted, Phu Tho Province</p> <p>Reviewer: Ph\u1ea1m Tu\u1ea5n Ngh\u0129a</p>"},{"location":"algo/data-structures/deque-min-max/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Deque (Double-ended queue) l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u tr\u1eebu t\u01b0\u1ee3ng t\u1ed5ng qu\u00e1t h\u00f3a m\u1ed9t h\u00e0ng \u0111\u1ee3i. N\u00f3 l\u00e0 n\u00f3 ki\u1ec3u danh s\u00e1ch m\u00e0 c\u00f3 th\u1ec3 b\u1ed5 sung v\u00e0 lo\u1ea1i b\u1ecf m\u1ed9t ph\u1ea7n \u1edf \u0111\u1ea7u ho\u1eb7c cu\u1ed1i danh s\u00e1ch. </p> <p>C\u00e1c thao t\u00e1c deque h\u1ed7 tr\u1ee3: - push_front(\\(x\\)): \u0110\u1ea9y \\(x\\) v\u00e0o \u0111\u1ea7u deque - push_back(\\(\ud835\udc65\\)): \u0110\u1ea9y \\(x\\) v\u00e0o cu\u1ed1i deque - pop_front(): Lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u1edf \u0111\u1ea7u deque - pop_back(): Lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u1edf cu\u1ed1i deque - empty(): Ki\u1ec3m tra Deque c\u00f3 r\u1ed7ng kh\u00f4ng? - size(): Tr\u1ea3 v\u1ec1 s\u1ed1 ph\u1ea7n t\u1eed \u0111ang c\u00f3 trong deque</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p:</p> <ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c ho\u1ea1t \u0111\u1ed9ng trong deque l\u00e0 \\(O(1)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a truy c\u1eadp ng\u1eabu nhi\u00ean theo ch\u1ec9 m\u1ee5c l\u00e0 \\(O(n)\\)</li> </ul>"},{"location":"algo/data-structures/deque-min-max/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>Cho m\u1ed9t d\u00e3y \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(N\\). Ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(A[i]\\). Cho \\(k\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng (\\(k \u2264 N\\)). V\u1edbi m\u1ed7i ph\u1ea7n t\u1eed \\(i\\) (\\(k \u2264 i \u2264 N\\)), t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n t\u1eeb \\(i \u2013 k + 1\\) \u0111\u1ebfn \\(i\\) tr\u00ean d\u00e3y \\(A\\). \\(minRange[i] =\\) gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([i - k + 1 \u2026 i]\\)</p> <p>Input: - \\(D\u00f2ng\\) \\(1\\): ch\u1ee9a hai s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(N \\le 10^5 , \ud835\udc58 \\le N\\) c\u00e1ch nhau b\u1edfi d\u1ea5u c\u00e1ch  - \\(D\u00f2ng\\) \\(2\\): ch\u1ee9a \\(N\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(A_1, A_2, \u2026 , A_N\\) \\((\u2200\ud835\udc56: A_\ud835\udc56 \u2264 10^9)\\) c\u00e1ch nhau b\u1edfi d\u1ea5u c\u00e1ch </p> <p>Output: In ra \\(N \u2212 \ud835\udc58 + 1\\) d\u00f2ng:  - D\u00f2ng th\u1ee9 \\(i\\) in ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t \\(minRange[i]\\) c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n t\u1eeb \\(i - k + 1\\) \u0111\u1ebfn \\(i\\).</p> <p>V\u00ed d\u1ee5: </p> <p>Input <pre><code>8 4 \n1 3 5 7 4 5 9 5\n</code></pre></p> <p>Output <pre><code>1\n3\n4\n4\n4\n</code></pre></p>"},{"location":"algo/data-structures/deque-min-max/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>V\u1edbi b\u00e0i to\u00e1n n\u00e0y ta c\u00f3 th\u1ec3 duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c \u0111o\u1ea1n g\u1ed3m \\(k\\) ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp trong m\u1ea3ng \\(A\\) \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t. </p> <pre><code>const int MAXN = 1e5 + 105;\nconst int  INF = 1e9 + 7;\nfor (int i = K; i &lt;= N; ++i) {\n    int minRange = +INF;\n    for (int j = i; j &gt;= i - K + 1; --j)\n        minRange = min(minRange, A[j]);\n    cout &lt;&lt; minRange &lt;&lt; '\\n';\n}\n</code></pre> <p>Tuy nhi\u00ean c\u00e1ch l\u00e0m n\u00e0y kh\u00f4ng \u0111em l\u1ea1i hi\u1ec7u qu\u1ea3 cao. \u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(k \\cdot (N - k))\\)</p> <p>M\u1ed7i l\u1ea7n g\u00e1n \\(minRange = min(minRange, A[j])\\) th\u00ec m\u1ea5u ch\u1ed1t l\u00e0 nh\u1eefng v\u1ecb tr\u00ed m\u00e0 \\(minRange\\) thay \u0111\u1ed5i. V\u1eady n\u00ean ta s\u1ebd ch\u1ec9 l\u01b0u l\u1ea1i nh\u1eefng v\u1ecb tr\u00ed c\u00f3 th\u1ec3 l\u00e0m thay \u0111\u1ed5i \\(minRange\\). Ta th\u1ea5y r\u1eb1ng c\u00e1c v\u1ecb tr\u00ed l\u01b0u v\u00e0o t\u0103ng d\u1ea7n v\u1ec1 c\u1ea3 gi\u00e1 tr\u1ecb c\u0169ng nh\u01b0 v\u1ecb tr\u00ed.</p> <p>Minh h\u1ecda</p> <p></p> <p>C\u00e1c \u00f4 \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u \u0111\u1ecf l\u00e0 c\u00e1c \u00f4 l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \\(minRange\\). \u00d4 th\u1ee9 \\(2\\) c\u00f3 gi\u00e1 tr\u1ecb \\(A[2] = 2\\) ta kh\u00f4ng c\u1ea7n quan t\u00e2m v\u00ec ngay t\u1eeb \\(A[3] = 2\\) n\u00f3 \u0111\u00e3 kh\u00f4ng n\u1eb1m trong danh s\u00e1ch c\u00e1c \u00f4 m\u00e0u \u0111\u1ecf.</p> <p></p> <p>T\u01b0\u01a1ng t\u1ef1, \u0111\u1ed1i v\u1edbi \u0111o\u1ea1n \\([2 ... 5]\\) ta c\u0169ng kh\u00f4ng c\u1ea7n quan t\u00e2m \u0111\u1ebfn \u00f4 th\u1ee9 \\(2\\) c\u00f3 gi\u00e1 tr\u1ecb \\(A[2] = 2\\). Do \u0111\u00f3 ta c\u00f3 th\u1ec3 l\u00e0m nh\u01b0 sau:</p> <p>T\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t</p> <p>Minh h\u1ecda test: Cho \\(N\\) \\(=\\) \\(8\\), \\(K\\) \\(=\\) \\(4\\), d\u00e3y \\(A\\) \\(=\\) \\([1, 3, 5, 7, 4, 5, 9, 5]\\)</p> <p>\u0110\u1ea7u ti\u00ean ch\u00fang ta kh\u1edfi t\u1ea1o m\u1ed9t h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u nh\u1eb1m m\u1ee5c \u0111\u00edch l\u01b0u v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t. </p> <p>L\u00fac \u0111\u1ea7u h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u c\u1ee7a ch\u00fang ta r\u1ed7ng  \u0110\u1ed1i v\u1edbi ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean v\u00ec do h\u00e0ng \u0111\u1ee3i r\u1ed7ng n\u00ean ta s\u1ebd \u0111\u1ea9y ph\u1ea7n t\u1eed n\u00e0y v\u00e0o cu\u1ed1i h\u00e0ng \u0111\u1ee3i  Ti\u1ebfp theo ta s\u1ebd \u0111\u1ea9y l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed c\u00f3 v\u1ecb tr\u00ed \\(2\\)\\(;\\) \\(3\\) v\u00e0 \\(4\\) v\u00e0o cu\u1ed1i h\u00e0ng \u0111\u1ee3i.   V\u00ec ta ch\u1ec9 x\u00e9t c\u00e1c \u0111o\u1ea1n trong kho\u1ea3ng t\u1eeb \\([i - k + 1 \u2026 i]\\). Do \u0111\u00f3 khi ta x\u00e9t \u0111\u1ebfn ph\u1ea7n t\u1eed th\u1ee9 \\(5\\) th\u00ec ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean trong h\u00e0ng \u0111\u1ee3i c\u00f3 v\u1ecb tr\u00ed \\(i = 1\\) kh\u00f4ng c\u00f2n \u00fd ngh\u0129a g\u00ec n\u1eefa. V\u00ec v\u1eady ta s\u1ebd lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean ra kh\u1ecfi h\u00e0ng \u0111\u1ee3i. Khi ta lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean ra kh\u1ecfi h\u00e0ng \u0111\u1ee3i th\u00ec t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed \u0111\u1ee9ng sau ph\u1ea7n t\u1eed \u0111\u00f3 \u0111\u1ec3 \u0111\u01b0\u1ee3c \u0111\u1ea9y l\u00ean \\(1\\) \u00f4 v\u00e0 h\u00e0ng \u0111\u1ee3i s\u1ebd \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 l\u1ea1i. </p> <p>Ti\u1ebfp \u0111\u1ebfn khi ta chu\u1ea9n b\u1ecb \u0111\u1ea9y ph\u1ea7n t\u1eed th\u1ee9 \\(5\\) v\u00e0o h\u00e0ng \u0111\u1ee3i th\u00ec nh\u1eadn th\u1ea5y r\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i trong h\u00e0ng \u0111\u1ee3i. </p> <p>Li\u1ec7u r\u1eb1ng ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng trong h\u00e0ng \u0111\u1ee3i kia c\u00f2n \u00fd ngh\u0129a g\u00ec trong vi\u1ec7c t\u00ednh gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t n\u1eefa kh\u00f4ng?</p> <p>C\u00e2u tr\u1ea3 l\u1eddi l\u00e0 \\(kh\u00f4ng\\). V\u00ec n\u00f3 \u0111\u00e3 kh\u00f4ng ph\u1ea3i l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([i - k+ 1 ... i]\\) r\u1ed3i th\u00ec c\u00e0ng kh\u00f4ng th\u1ec3 l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([(i + 1) - k + 1 \u2026 i + 1]\\).</p> <p>V\u00ec v\u1eady ta s\u1ebd lo\u1ea1i b\u1ecf t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng trong deque n\u1ebfu n\u00f3 c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng gi\u00e1 tr\u1ecb \\(A[i]\\) \u0111ang x\u00e9t.</p> <p>Sau khi lo\u1ea1i b\u1ecf t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng v\u00e0 \u0111\u1ea9y ph\u1ea7n t\u1eed \\(i = 5\\) v\u00e0o th\u00ec h\u00e0ng \u0111\u1ee3i s\u1ebd c\u00f3 nh\u1eefng gi\u00e1 tr\u1ecb sau:</p> <p> Ta ti\u1ebfp t\u1ee5c \u0111\u1ea9y ph\u1ea7n t\u1eed th\u1ee9 \\(6\\) v\u00e0o deque  Sau \u0111\u00f3 ta ti\u1ebfp t\u1ee5c \u0111\u1ea9y ph\u1ea7n t\u1eed th\u1ee9 \\(7\\) v\u00e0o deque  Khi ta chu\u1ea9n b\u1ecb \u0111\u1ea9y ph\u1ea7n t\u1eed th\u1ee9 \\(8\\) v\u00e0o deque, ta nh\u1eadn th\u1ea5y r\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i trong h\u00e0ng \u0111\u1ee3i. Do \u0111\u00f3 ta s\u1ebd lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng trong deque cho \u0111\u1ebfn khi gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb ta chu\u1ea9n b\u1ecb \u0111\u1ea9y v\u00e0o.   Ta c\u00f3 th\u1ec3 r\u00fat ra \u0111\u01b0\u1ee3c c\u00e1c nh\u1eadn x\u00e9t quan tr\u1ecdng nh\u01b0 sau: - \u1ede m\u1ecdi th\u1eddi \u0111i\u1ec3m, gi\u00e1 tr\u1ecb \\(A[i]\\) trong deque lu\u00f4n t\u0103ng nghi\u00eam ng\u1eb7t. Khi ta \u0111\u1ea9y ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) v\u00e0o deque th\u00ec n\u00f3 lu\u00f4n l\u00e0 ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t. - V\u00ec \u0111\u00e2y l\u00e0 d\u00e3y t\u0103ng nghi\u00eam ng\u1eb7t th\u1ebf n\u00ean ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean lu\u00f4n l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t. (\u0110\u00e2y ch\u00ednh l\u00e0 min trong \u0111o\u1ea1n \\([i - k + 1 \u2026 i]\\)) - T\u1ea1i m\u1ed7i b\u01b0\u1edbc t\u00ednh \\(minRange[i]\\) ta ch\u1ec9 lo\u1ea1i b\u1ecf t\u1ed1i \u0111a \\(1\\) ph\u1ea7n t\u1eed \u0111\u1ea7u deque khi n\u00f3 kh\u00f4ng thu\u1ed9c kho\u1ea3ng \u0111ang x\u00e9t. - M\u1ed7i ph\u1ea7n t\u1eed ch\u1ec9 \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o deque t\u1ed1i \u0111a \\(1\\) l\u1ea7n duy nh\u1ea5t.</p> <p>T\u1eeb c\u00e1c nh\u1eadn x\u00e9t nh\u01b0 kia, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng h\u00ecnh th\u00e0nh thu\u1eadt to\u00e1n. Ta duy\u1ec7t qua t\u1eebng ph\u1ea7n t\u1eed: - B\u01b0\u1edbc 1: Trong khi h\u00e0ng \u0111\u1ee3i kh\u00e1c r\u1ed7ng v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng trong deque l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng gi\u00e1 tr\u1ecb \u0111ang x\u00e9t hi\u1ec7n t\u1ea1i th\u00ec ta s\u1ebd \u0111\u1ea9y h\u1ebft ra kh\u1ecfi h\u00e0ng \u0111\u1ee3i. - B\u01b0\u1edbc 2: \u0110\u1ea9y v\u1ecb tr\u00ed \\(i\\) c\u1ee7a ph\u1ea7n t\u1eed \u0111ang x\u00e9t hi\u1ec7n t\u1ea1i v\u00e0o cu\u1ed1i deque. (Ta kh\u00f4ng n\u00ean \u0111\u1ea9y gi\u00e1 tr\u1ecb \\(A[i]\\) v\u00e0o b\u00ean trong h\u00e0ng \u0111\u1ee3i. V\u00ec l\u00e0m nh\u01b0 th\u1ebf th\u00ec ta s\u1ebd r\u1ea5t kh\u00f3 trong vi\u1ec7c qu\u1ea3n l\u00fd \u0111o\u1ea1n c\u1ea7n l\u1ea5y k\u1ebft qu\u1ea3) - B\u01b0\u1edbc 3: N\u1ebfu v\u1ecb tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean trong h\u00e0ng \u0111\u1ee3i kh\u00f4ng n\u1eb1m trong kho\u1ea3ng \u0111o\u1ea1n x\u00e9t th\u00ec ta lo\u1ea1i b\u1ecf n\u00f3. - B\u01b0\u1edbc 4: \u0110\u00e1p \u00e1n c\u1ea7n t\u00ecm ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean trong deque.</p>"},{"location":"algo/data-structures/deque-min-max/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>T\u00ecm min trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn</p> <p>Ta c\u1ea7n ph\u1ea3i s\u1eed d\u1ee5ng nh\u1eefng c\u1ea5u tr\u00fac sau: - C\u1ea5u tr\u00fac d\u1eef li\u1ec7u h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u: \\(deque\\) - L\u01b0u l\u1ea1i v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t - M\u1ea3ng \\(A\\), l\u01b0u c\u00e1c ph\u1ea7n t\u1eed nh\u1eadp v\u00e0o, t\u1ed1n \\(O(N)\\) b\u1ed9 nh\u1edb - M\u1ea3ng \\(minRange\\), l\u01b0u \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n, t\u1ed1n \\(O(N)\\) b\u1ed9 nh\u1edb - \u0110\u1ec3 d\u1ec5 c\u00e0i \u0111\u1eb7t th\u00ec ta ch\u1ec9 c\u1ea7n \u0111\u1ea9y v\u1ecb tr\u00ed \\(i\\) v\u00e0o h\u00e0ng \u0111\u1ee3i. Khi ta c\u00f3 v\u1ecb tr\u1ecb \\(i\\) th\u00ec ta ho\u00e0n to\u00e0n c\u00f3 gi\u00e1 tr\u1ecb \\(A[i]\\) t\u01b0\u01a1ng \u1ee9ng.</p> <pre><code>deque &lt;int&gt; dq;\n\n/* L\u00e0m r\u1ed7ng deque */\nwhile (dq.size()) dq.pop_front();\n\n/* Duy\u1ec7t l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed t\u1eeb 1 \u0111\u1ebfn N */\nfor (int i = 1; i &lt;= N; ++i) { \n    /* Lo\u1ea1i b\u1ecf c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng A[i] */\n    while (dq.size() &amp;&amp; A[dq.back()] &gt;= A[i]) dq.pop_back();\n\n    /* \u0110\u1ea9y ph\u1ea7n t\u1eed i v\u00e0o queue */\n    dq.push_back(i); \n\n    /* N\u1ebfu ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean trong deque n\u1eb1m ngo\u00e0i kho\u1ea3ng t\u00ednh \n       th\u00ec ta s\u1ebd lo\u1ea1i b\u1ecf ra kh\u1ecfi deque */\n    if (dq.front() + k &lt;= i) dq.pop_front(); \n\n    /* minRange[i] l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n [i \u2013 k + 1 \u2026 i] */\n    if (i &gt;= k) minRange[i] = A[dq.front()]; \n}\n</code></pre>"},{"location":"algo/data-structures/deque-min-max/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<p>T\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n tr\u00ean deque (pop_back(), pop_front() v\u00e0 push_back()) c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u1edbi th\u1eddi gian ch\u1ea1y l\u00e0 \\(O(1)\\). M\u1ed7i ph\u1ea7n t\u1eed v\u00e0o deque \u0111\u00fang \\(1\\) l\u1ea7n v\u00e0 b\u1ecb lo\u1ea1i b\u1ecf \u0111\u00fang \\(1\\) l\u1ea7n n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y khi x\u00e2y d\u1ef1ng l\u00e0 \\(O(N)\\) trong m\u1ed7i l\u1ea7n t\u00ecm \\(min\\) trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn.</p>"},{"location":"algo/data-structures/deque-min-max/#mo-rong","title":"M\u1edf r\u1ed9ng","text":""},{"location":"algo/data-structures/deque-min-max/#tim-gia-tri-lon-nhat","title":"T\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t","text":"<p>\u0110\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t th\u00ec ta l\u00e0m ng\u01b0\u1ee3c l\u1ea1i qu\u00e1 tr\u00ecnh t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t.</p> <p>Ta s\u1ebd t\u1ea1o \\(1\\) deque nh\u1eb1m m\u1ee5c \u0111\u00edch l\u01b0u v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t.</p> <p>\u1ede b\u01b0\u1edbc 1, thay v\u00ec lo\u1ea1i b\u1ecf c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng ra kh\u1ecfi \u0111\u1ea7u deque th\u00ec ta s\u1ebd lo\u1ea1i b\u1ecf c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng ra kh\u1ecfi \u0111\u1ea7u deque. L\u00fac n\u00e0y, ph\u1ea7n t\u1eed \u0111\u1ea7u deque lu\u00f4n l\u00e0 ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t. V\u00e0 \u1edf m\u1ecdi th\u1eddi \u0111i\u1ec3m gi\u00e1 tr\u1ecb trong deque lu\u00f4n l\u00e0 gi\u1ea3m nghi\u00eam ng\u1eb7t.</p>"},{"location":"algo/data-structures/deque-min-max/#tai-sao-ta-khong-nen-su-dung-cau-truc-du-lieu-cay-phan-oan","title":"T\u1ea1i sao ta kh\u00f4ng n\u00ean s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00e2y ph\u00e2n \u0111o\u1ea1n?","text":"<p>Ta ch\u1ec9 c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y b\u1eb1ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \\(Segment\\) \\(Tree\\).  \u0110\u1ec3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c c\u00e2y \\(Segment\\) \\(Tree\\) th\u00ec ch\u00fang ta s\u1ebd ph\u1ea3i chu\u1ea9n b\u1ecb: - B\u1ed9 nh\u1edb: \\(O(N)\\) - Kh\u1edfi t\u1ea1o: \\(O(log_{2}N)\\) - Ta ph\u1ea3i tr\u1ea3 l\u1eddi \\(N - K + 1\\) v\u1ecb tr\u00ed. Do \u0111\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(log_{2}N + (N - K + 1) \\cdot log_{2}N)\\)</p>"},{"location":"algo/data-structures/deque-min-max/#khi-nao-thi-khong-the-dung-deque-e-tim-max-min-trong-oan-tinh-tien","title":"Khi n\u00e0o th\u00ec kh\u00f4ng th\u1ec3 d\u00f9ng deque \u0111\u1ec3 t\u00ecm max min trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn?","text":"<p>V\u1edbi ph\u01b0\u01a1ng ph\u00e1p d\u00f9ng deque \u0111\u1ec3 t\u00ecm \\(max-min\\) trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn th\u00ec b\u1ea1n s\u1ebd kh\u00f4ng th\u1ec3 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n sau:</p> <p>Cho m\u1ed9t d\u00e3y s\u1ed1 \\(A[i]\\) \\((1\u2264 A[i] \u226410^9)\\) c\u00f3 \\(N (1 \u2264 N \u226410^5)\\) ph\u1ea7n t\u1eed. Cho \\(M (1 \u2264 M \u2264 200,000)\\) truy v\u1ea5n c\u00f3 d\u1ea1ng: - \\(0\\) \\(pos\\) \\(val\\): Thay \u0111\u1ed5i gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed th\u1ee9 \\(pos\\) th\u00e0nh \\(val\\) - \\(1\\) \\(k\\) \\(i\\): T\u00ednh gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([i - k + 1 \u2026 i]\\) \\((i - k + 1 \u2265 1)\\) - \\(2\\) \\(k\\) \\(i\\): T\u00ednh gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t trong \u0111o\u1ea1n \\([i \u2026 i + k - 1]\\) \\((i + k - 1 \u2264 N)\\)</p> <p>Nh\u01b0 \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi x\u00e2y d\u1ef1ng k\u0129 thu\u1eadt t\u00ecm \\(max-min\\) trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn l\u00e0 \\(O(N)\\)</p> <p>Tuy nhi\u00ean thu\u1eadt to\u00e1n n\u00e0y ch\u1ec9 th\u1ef1c s\u1ef1 hi\u1ec7u qu\u1ea3 khi ch\u00fang ta kh\u00f4ng c\u00f3 thao t\u00e1c c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng. N\u00f3i c\u00e1ch kh\u00e1c th\u00ec v\u1edbi ph\u01b0\u01a1ng ph\u00e1p n\u00e0y ch\u00fang ta ch\u1ec9 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng khi b\u00e0i to\u00e1n l\u00e0 b\u00e0i to\u00e1n x\u1eed l\u00fd offine. L\u00fd do l\u00e0 b\u1edfi gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 M thao t\u00e1c c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb m\u00e0 m\u1ed7i khi c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb th\u00ec ta s\u1ebd ph\u1ea3i t\u00ednh l\u1ea1i max v\u00e0 min trong t\u1eebng v\u1ecb tr\u00ed \\(i\\) \\((1 \u2264 i \u2264 N)\\). L\u00fac n\u00e0y th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd l\u00e0 \\(O(M \\cdot N)\\) v\u00e0 s\u1ebd b\u1ecb qu\u00e1 th\u1eddi gian cho ph\u00e9p. </p> <p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n n\u00e0y th\u00ec ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac c\u00e2y ph\u00e2n \u0111o\u1ea1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(Mlog_{2}N)\\).</p>"},{"location":"algo/data-structures/deque-min-max/#mot-so-loi-thuong-gap","title":"M\u1ed9t s\u1ed1 l\u1ed7i th\u01b0\u1eddng g\u1eb7p","text":"<p>Khi l\u1ea5y gi\u00e1 tr\u1ecb trong deque ra th\u00ec b\u1ea1n ch\u01b0a ki\u1ec3m tra h\u00e0ng \u0111\u1ee3i c\u1ee7a m\u00ecnh c\u00f3 \u0111ang r\u1ed7ng kh\u00f4ng? N\u1ebfu h\u00e0ng \u0111\u1ee3i r\u1ed7ng m\u00e0 b\u1ea1n v\u1eabn l\u1ea5y gi\u00e1 tr\u1ecb \\(front()\\) ho\u1eb7c \\(back()\\) th\u00ec ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd sinh l\u1ed7i.</p>"},{"location":"algo/data-structures/deque-min-max/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":""},{"location":"algo/data-structures/deque-min-max/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Trong m\u1ed9t round \u0111\u1ea5u, r\u1ed3ng th\u1ea7n c\u1ee7a Ho\u1ea1t c\u00f3 th\u1ec3 kh\u1ea1c t\u1ed1i \u0111a \u0111\u1ea1t \\(N\\) ph\u00e1t ch\u00ed m\u1ea1ng v\u00e0o team \u0111\u1ecbch. S\u00e1t th\u01b0\u01a1ng ch\u00ed m\u1ea1ng c\u1ee7a l\u1ea7n kh\u1ea1c th\u1ee9 \\(i\\) g\u00e2y ra l\u00e0 \\(A_i\\). Tuy nhi\u00ean r\u1ed3ng th\u1ea7n c\u1ea7n c\u00f3 m\u1ed9t kho\u1ea3ng th\u1eddi gian \u0111\u1ec3 h\u1ed3i l\u1ea1i mana. V\u1eady n\u00ean r\u1ed3ng th\u1ea7n kh\u00f4ng th\u1ec3 kh\u1ea1c \\(K\\) l\u1ea7n ch\u00ed m\u1ea1ng li\u00ean ti\u1ebfp.  B\u1ea1n h\u00e3y ch\u1ec9 cho Ho\u1ea1t c\u00e1ch \u0111i\u1ec1u khi\u1ec3n s\u1ee9c m\u1ea1nh c\u1ee7a r\u1ed3ng th\u1ea7n sao cho t\u1ed5ng s\u00e1t th\u01b0\u01a1ng ch\u00ed m\u1ea1ng g\u00e2y ra c\u1ee7a r\u1ed3ng th\u1ea7n l\u00e0 l\u1edbn nh\u1ea5t. Input: - D\u00f2ng th\u1ee9 nh\u1ea5t: ch\u1ee9a hai s\u1ed1 nguy\u00ean \\(1 \u2264 N \u2264 10^5; 2 \u2264 K \u2264 10^5\\) - D\u00f2ng th\u1ee9 hai ch\u1ee9a N s\u1ed1 nguy\u00ean \\(A_1, A_2, \u2026, A_N\\) \\((1 \u2264 A_i \u2264 10^4)\\) \u2013 s\u00e1t th\u01b0\u01a1ng ch\u00ed m\u1ea1ng l\u1ea7n kh\u1ea1c th\u1ee9 \\(i\\) c\u1ee7a r\u1ed3ng th\u1ea7n.</p> <p>Output: T\u1ed5ng s\u00e1t th\u01b0\u01a1ng ch\u00ed m\u1ea1ng l\u1edbn nh\u1ea5t m\u00e0 r\u1ed3ng th\u1ea7n c\u00f3 th\u1ec3 g\u00e2y ra.</p> <p>Input: <pre><code>7 3\n1 4 2 3 6 5 9\n</code></pre> Output: <pre><code>23\n</code></pre> Gi\u1ea3i th\u00edch: R\u1ed3ng th\u1ea7n s\u1ebd kh\u1ea1c \u1edf nh\u1eefng th\u1eddi \u0111i\u1ec3m \\(1\\), \\(2\\) r\u1ed3i \\(4\\), \\(5\\) sau c\u00f9ng l\u00e0 \\(7\\). T\u1ed5ng s\u00e1t th\u01b0\u01a1ng s\u1ebd l\u00e0 \\(1 + 4 + 3 + 6 + 9 = 23\\).</p>"},{"location":"algo/data-structures/deque-min-max/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>Ph\u00e2n lo\u1ea1i b\u00e0i: data structures, dp</p> <p>G\u1ecdi \\(dp[i]\\) l\u00e0 t\u1ed5ng s\u00e1t th\u01b0\u01a1ng nh\u1ecf nh\u1ea5t m\u00e0 r\u1ed3ng th\u1ea7n \u0111\u00e3 b\u1ecf qua khi x\u00e9t \u0111\u1ebfn v\u1ecb tr\u00ed \\(i\\) v\u00e0 s\u1ebd ti\u1ebfp t\u1ee5c b\u1ecf qua ph\u00e1t kh\u1ea1c th\u1ee9 \\(i\\) Kh\u1edfi t\u1ea1o:  - \\(dp[0] = 0\\) - \\(dp[i] = INF;\\) v\u1edbi \\(\\forall i: 1 \u2264 i \u2264 N + 1\\)</p> <p>C\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng: V\u1edbi \\(\\forall i: 1 \u2264 i \u2264 N + 1\\) th\u00ec \\(dp[i] = min(dp[j]) + A[i]\\) \\(\\forall j: max(1, i - K) \u2264 j \u2264 i - 1\\) K\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n l\u00e0: T\u1ed5ng s\u00e1t th\u01b0\u01a1ng c\u1ee7a \\(N\\) ph\u00e1t kh\u1ea1c tr\u1eeb \u0111i \\(dp[N + 1]\\) <pre><code>dp[0] = 0;\nfor (int i = 1; i &lt;= N + 1; ++i) dp[i] = +INF;\nans = 0;\nfor (int i = 1; i &lt;= N; ++i) ans += A[i];\nfor (int i = 1; i &lt;= N + 1; ++i)\n    for (int j = max(0, i - K); j &lt;= i - 1; ++j) \n        dp[i] = min(dp[i], dp[j] + A[i]);\ncout &lt;&lt; ans - dp[N + 1] &lt;&lt; '\\n';\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(N \\cdot K)\\) Nh\u1eadn x\u00e9t:  Ta c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb \\(dp[i]\\) b\u1edfi \u0111o\u1ea1n c\u00e1c gi\u00e1 tr\u1ecb \\(dp[j]\\) li\u00ean t\u1ee5c. Do \u0111\u00f3 ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t b\u1eb1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(N \\cdot log_{2}N)\\) Tuy nhi\u00ean ta nh\u1eadn th\u1ea5y r\u1eb1ng, \u0111\u00e2y ch\u00ednh l\u00e0 b\u00e0i to\u00e1n t\u00ecm min trong \u0111o\u1ea1n t\u1ecbnh ti\u1ebfn. Ta s\u1ebd l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n \\(1\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(N)\\)</p>"},{"location":"algo/data-structures/deque-min-max/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u1ea7n ph\u1ea3i s\u1eed d\u1ee5ng nh\u1eefng c\u1ea5u tr\u00fac sau: - C\u1ea5u tr\u00fac d\u1eef li\u1ec7u h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u: \\(deque\\) - L\u01b0u l\u1ea1i v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t - M\u1ea3ng \\(A\\), l\u01b0u c\u00e1c ph\u1ea7n t\u1eed nh\u1eadp v\u00e0o, t\u1ed1n \\(O(N)\\) b\u1ed9 nh\u1edb - M\u1ea3ng \\(dp\\), l\u01b0u \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n, t\u1ed1n \\(O(N)\\) b\u1ed9 nh\u1edb - \u0110\u1ec3 d\u1ec5 c\u00e0i \u0111\u1eb7t th\u00ec ta ch\u1ec9 c\u1ea7n \u0111\u1ea9y v\u1ecb tr\u00ed \\(i\\) v\u00e0o h\u00e0ng \u0111\u1ee3i. Khi ta c\u00f3 v\u1ecb tr\u1ecb \\(i\\) th\u00ec ta ho\u00e0n to\u00e0n c\u00f3 gi\u00e1 tr\u1ecb \\(dp[i]\\) t\u01b0\u01a1ng \u1ee9ng.</p> <pre><code>int ans = 0;\ndq.push_back(0);\nfor (int i = 1; i &lt;= N + 1; ++i) {\n    while (dq.size() &amp;&amp; dq.front() &lt; i - K) dq.pop_front();\n    dp[i] = dp[dq.front()] + A[i];\n    ans += A[i];\n    while (dq.size() &amp;&amp; dp[dq.back()] &gt;= dp[i]) dq.pop_back();\n    dq.push_back(i);\n}\ncout &lt;&lt; ans - dp[N + 1] &lt;&lt; '\\n';\n</code></pre>"},{"location":"algo/data-structures/deque-min-max/#bai-toan-3","title":"B\u00e0i to\u00e1n 3","text":""},{"location":"algo/data-structures/deque-min-max/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>T\u00f2a nh\u00e0 ch\u1ecdc tr\u1eddi     C\u00f3 \\(N\\) t\u00f2a nh\u00e0 ch\u1ecdc tr\u1eddi \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). T\u00f2a nh\u00e0 th\u1ee9 \\(i\\) c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(H[i]\\). T\u1eeb t\u00f2a nh\u00e0 th\u1ee9 \\(i\\) ta c\u00f3 th\u1ec3 nh\u1ea3y \u0111\u1ebfn t\u00f2a nh\u00e0 th\u1ee9 \\(j\\) \\((i &lt; j)\\) n\u1ebfu nh\u01b0 th\u1ecfa m\u00e3n m\u1ed9t trong c\u00e1c \u0111i\u1ec1u ki\u1ec7n sau: - \\(i + 1 = j\\) - \\(max(H[i + 1], \u2026, H[j - 1]) &lt; min(H[i], H[j])\\) - \\(max(H[i], H[j]) &lt; min(H[i + 1], \u2026, H[j - 1])\\)</p> <p>Hi\u1ec7n t\u1ea1i Gnar \u0111ang \u0111\u1ee9ng tr\u00ean t\u00f2a nh\u00e0 \\(1\\). M\u1ee5c ti\u00eau c\u1ee7a anh \u1ea5y l\u00e0 nh\u1ea3y \u0111\u1ebfn t\u00f2a nh\u00e0 th\u1ee9 \\(N\\) v\u1edbi s\u1ed1 l\u1ea7n nh\u1ea3y l\u00e0 \u00edt nh\u1ea5t. H\u00e3y gi\u00fap Gnar nh\u00e9!!!  \u0110\u1ea7u v\u00e0o: - D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a m\u1ed9t s\u1ed1 nguy\u00ean duy nh\u1ea5t \\(N\\) \\((2 \u2264 N \u2264 3 \\cdot 10^5)\\) \u2013 t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng nh\u00e0 ch\u1ecdc tr\u1eddi. - D\u00f2ng th\u1ee9 hai ch\u1ee9a N s\u1ed1 nguy\u00ean \\(H_1, H_2, \u2026, H_N\\) \\((1 \u2264 H_i \u2264 10^9)\\) \u2013 chi\u1ec1u cao c\u1ee7a c\u00e1c t\u00f2a nh\u00e0 ch\u1ecdc tr\u1eddi.</p> <p>\u0110\u1ea7u ra: In ra s\u1ed1 l\u01b0\u1ee3ng b\u01b0\u1edbc nh\u1ea3y t\u1ed1i thi\u1ec3u \u0111\u1ec3 Gnar c\u00f3 th\u1ec3 nh\u1ea3y \u0111\u1ebfn t\u00f2a nh\u00e0 th\u1ee9 \\(N\\).</p> <p>V\u00ed d\u1ee5:</p> <p>Input <pre><code>5 \n1 3 1 4 5\n</code></pre> Output <pre><code>3\n</code></pre> Input <pre><code>4 \n4 2 2 4\n</code></pre> Output <pre><code>1\n</code></pre> Input <pre><code>5\n100 1 100 1 100\n</code></pre> Output <pre><code>2\n</code></pre> B\u1ea1n c\u00f3 th\u1ec3 n\u1ed9p b\u00e0i t\u1ea1i \u0111\u00e2y</p>"},{"location":"algo/data-structures/deque-min-max/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>Ph\u00e2n lo\u1ea1i b\u00e0i: data structures, dp, graph</p> <p>Tr\u01b0\u1eddng h\u1ee3p 1: N\u1ebfu \\(i + 1 = j\\) th\u00ec ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb c\u1ea1nh n\u1ed1i gi\u1eefa \\(i\\) v\u00e0 \\(j\\).</p> <p>Tr\u01b0\u1eddng h\u1ee3p 2: N\u1ebfu t\u00f2a nh\u00e0 th\u1ee9 \\(i\\) v\u00e0 \\(j\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n \\(max(H[i + 1], \u2026, H[j - 1]) &lt; min(H[i], H[j])\\) ngh\u0129a l\u00e0 t\u1ea5t c\u1ea3 c\u00e1c t\u00f2a nh\u00e0 n\u1eb1m gi\u1eefa \\(i\\) v\u00e0 \\(j\\) \u0111\u1ec1u c\u00f3 chi\u1ec1u cao nh\u1ecf h\u01a1n \\(min(H[i], H[j])\\). </p> <p>\u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 t\u1ed3n t\u1ea1i t\u00f2a nh\u00e0 \\(k\\) \\((i + 1 \\le k \\le j - 1)\\) c\u00f3 \u0111\u1ed9 cao l\u1edbn nh\u1ea5t trong c\u00e1c t\u00f2a nh\u00e0 t\u1eeb \\(i + 1\\) \u0111\u1ebfn \\(j - 1\\). N\u1ebfu \\(H[k] &lt; min(H[i], H[j])\\) th\u00ec t\u1ea5t c\u1ea3 c\u00e1c t\u00f2a nh\u00e0 t\u1eeb \\(i + 1\\) \u0111\u1ebfn \\(j - 1\\) \u0111\u1ec1u nh\u1ecf h\u01a1n \\(min(H[i], H[j])\\).</p> <p></p> <p>L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c hai bi\u00ean nh\u1eadn t\u00f2a nh\u00e0 k l\u00e0m max?  V\u00ec \\(max(H[i + 1], \u2026, H[j - 1]) &lt; min(H[i], H[j])\\) n\u00ean \\(H[k] &lt; min(H[i], H[j])\\). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 c\u1ea3 \\(2\\) t\u00f2a nh\u00e0 \\(i\\) v\u00e0 \\(j\\) \u0111\u1ec1u l\u1edbn h\u01a1n t\u00f2a nh\u00e0 \\(k\\) do \u0111\u00f3 t\u00f2a nh\u00e0 \\(i\\) v\u00e0 \\(j\\) s\u1ebd kh\u00f4ng n\u1eb1m trong kho\u1ea3ng nh\u1eadn t\u00f2a nh\u00e0 \\(k\\) l\u00e0 \\(max\\).</p> <p>G\u1ecdi \\(L[k]\\) l\u00e0 v\u1ecb tr\u00ed xa nh\u1ea5t t\u00ednh t\u1eeb v\u1ecb tr\u00ed \\(k\\) v\u1ec1 b\u00ean tr\u00e1i nh\u1eadn \u0111\u1ed9 cao \\(H[k]\\) l\u00e0 \\(max\\)</p> <p>G\u1ecdi \\(R[k]\\) l\u00e0 v\u1ecb tr\u00ed xa nh\u1ea5t t\u00ednh t\u1eeb v\u1ecb tr\u00ed \\(k\\) v\u1ec1 b\u00ean ph\u1ea3i nh\u1eadn \u0111\u1ed9 cao \\(H[k]\\) l\u00e0 \\(max\\)</p> <p>Do \u0111\u00f3 t\u00f2a nh\u00e0 \\(i\\) s\u1ebd l\u00e0 \\(L[k] - 1\\) v\u00e0 t\u00f2a nh\u00e0 \\(j\\) s\u1ebd l\u00e0 \\(R[k] + 1\\).</p> <p>V\u00ec \\(max(H[L[k]] ... H[R[k]]) = H[k]\\) n\u00ean n\u1ebfu \\(H[k] &lt; min(H[L[k] - 1], H[R[k] + 1])\\) th\u00ec t\u1eeb t\u00f2a nh\u00e0 \\(L[k] - 1\\) ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 nh\u1ea3y \u0111\u1ebfn t\u00f2a nh\u00e0 \\(R[k] + 1\\). Do \u0111\u00f3 ta x\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb c\u00f3 c\u1ea1nh n\u1ed1i gi\u1eefa t\u00f2a nh\u00e0 \\(L[k] - 1\\) v\u1edbi t\u00f2a nh\u00e0 \\(R[k] + 1\\).</p> <p>T\u1ea1i sao khi t\u00ecm t\u00f2a nh\u00e0 \\(i\\), \\(j\\) ta kh\u00f4ng t\u00ecm t\u00f2a nh\u00e0 g\u1ea7n nh\u1ea5t m\u00e0 l\u1ea1i ph\u1ea3i l\u00e0 xa nh\u1ea5t?</p> <p>Gi\u1ea3 s\u1eed t\u00f2a nh\u00e0 g\u1ea7n nh\u1ea5t b\u00ean tr\u00e1i, b\u00ean ph\u1ea3i nh\u1eadn t\u00f2a nh\u00e0 \\(k\\) l\u00e0m \\(max\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(p\\) v\u00e0 \\(q\\). Khi ta t\u00ecm \u0111\u01b0\u1ee3c 2 t\u00f2a nh\u00e0 n\u00e0y th\u00ec ta c\u0169ng ch\u1eb3ng th\u1ec3 k\u1ebft lu\u1eadn t\u00f2a nh\u00e0 \\(p - 1\\) c\u00f3 th\u1ec3 nh\u1ea3y sang t\u00f2a nh\u00e0 \\(q + 1\\). M\u00e0 gi\u1ea3 s\u1eed \\(min(H[p - 1], H[q + 1]) &gt; H[k]\\) th\u00ec \\(p\\), \\(q\\) c\u0169ng l\u00e0 t\u00f2a nh\u00e0 xa nh\u1ea5t nh\u1eadn t\u00f2a nh\u00e0 \\(k\\) l\u00e0m \\(max\\).</p> <p>V\u00ec v\u1eady ta s\u1ebd x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c t\u00f2a nh\u00e0 \\(k\\) \u0111\u1ec3 c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c t\u00f2a nh\u00e0 \\(i\\) v\u00e0 \\(j\\) th\u1ecfa m\u00e3n y\u00eau c\u1ea7u \u0111\u1ec1 b\u00e0i.</p> <p>Tr\u01b0\u1eddng h\u1ee3p 3: N\u1ebfu t\u00f2a nh\u00e0 th\u1ee9 \\(i\\) v\u00e0 \\(j\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n \\(max(H[i], H[j]) &lt; min(H[i + 1], \u2026, H[j - 1])\\) ngh\u0129a l\u00e0 t\u1ea5t c\u1ea3 c\u00e1c t\u00f2a nh\u00e0 n\u1eb1m gi\u1eefa \\(i\\) v\u00e0 \\(j\\) \u0111\u1ec1u c\u00f3 \u0111\u1ed9 cao l\u1edbn h\u01a1n h\u1eb3n \\(max(H[i], H[j])\\).  </p> <p>L\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1. \u1ede tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta s\u1ebd x\u00e2y d\u1ef1ng \\(2\\) m\u1ea3ng \\(l\\) v\u00e0 \\(r\\).</p> <p>G\u1ecdi \\(l[k]\\) l\u00e0 v\u1ecb tr\u00ed xa nh\u1ea5t t\u00ednh t\u1eeb v\u1ecb tr\u00ed \\(k\\) v\u1ec1 b\u00ean tr\u00e1i nh\u1eadn \u0111\u1ed9 cao \\(H[k]\\) l\u00e0 \\(min\\)</p> <p>G\u1ecdi \\(r[k]\\) l\u00e0 v\u1ecb tr\u00ed xa nh\u1ea5t t\u00ednh t\u1eeb v\u1ecb tr\u00ed \\(k\\) v\u1ec1 b\u00ean ph\u1ea3i nh\u1eadn \u0111\u1ed9 cao \\(H[k]\\) l\u00e0 \\(min\\)</p> <p>\u0110\u1ed1i v\u1edbi m\u1ed7i v\u1ecb tr\u00ed \\(k\\) \\((1 \u2264 k \u2264 N)\\), \\(H[k]\\) s\u1ebd l\u00e0 \u0111\u1ed9 cao nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n t\u1eeb \\(l[k]\\) \u0111\u1ebfn \\(r[k]\\). V\u00ec \\(min(H[l[k]] ... H[r[k]]) = H[k]\\) n\u00ean n\u1ebfu \\(max(H[l[k] - 1], H[r[k] + 1]) &lt; H[k]\\) th\u00ec ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 nh\u1ea3y t\u1eeb t\u00f2a nh\u00e0 \\(l[k] - 1\\) sang t\u00f2a nh\u00e0 \\(r[k] + 1\\).</p> <p>Do \u0111\u00f3 ta x\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb c\u00f3 c\u1ea1nh n\u1ed1i gi\u1eefa t\u00f2a nh\u00e0 \\(l[k] - 1\\) v\u1edbi t\u00f2a nh\u00e0 \\(r[k] + 1\\)</p> <p>Khi \u0111\u00e3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb th\u00ec c\u00f3 th\u1ec3 quy ho\u1ea1ch \u0111\u1ed9ng ho\u1eb7c s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t \\(BFS\\) \u0111\u1ec3 t\u00ednh s\u1ed1 l\u1ea7n nh\u1ea3y \u00edt nh\u1ea5t. </p>"},{"location":"algo/data-structures/deque-min-max/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>X\u00e2y d\u1ef1ng m\u1ea3ng L <pre><code>/* L[k]: Xa nh\u1ea5t v\u1ec1 b\u00ean tr\u00e1i nh\u1eadn H[k] l\u00e0 max */\ndq.clear();\nfor (int k = 1; k &lt;= N; ++k) {\n    while (dq.size() &amp;&amp; H[dq.front()] &lt;= H[k]) dq.pop_front();\n    if (dq.size()) L[k] = dq.front() + 1;\n    else L[k] = k;\n    dq.push_front(k);\n}\n</code></pre></p> <p>X\u00e2y d\u1ef1ng m\u1ea3ng R <pre><code>/* R[k]: Xa nh\u1ea5t v\u1ec1 b\u00ean ph\u1ea3i nh\u1eadn H[k] l\u00e0 max */\ndq.clear();\nfor (int k = N; k &gt;= 1; --k) {\n    while (dq.size() &amp;&amp; H[dq.front()] &lt;= H[k]) dq.pop_front();\n    if (dq.size()) R[k] = dq.front() - 1;\n    else R[k] = k;\n    dq.push_front(k);\n}\n</code></pre></p> <p>X\u00e2y d\u1ef1ng m\u1ea3ng l <pre><code>/* l[k]: Xa nh\u1ea5t v\u1ec1 b\u00ean tr\u00e1i nh\u1eadn H[k] l\u00e0 min*/\ndq.clear();\nfor (int k = 1; k &lt;= N; ++k) {\n    while (dq.size() &amp;&amp; H[dq.front()] &gt;= H[k]) dq.pop_front();\n    if (dq.size()) l[k] = dq.front() + 1;\n    else l[k] = k;\n    dq.push_front(k);\n}\n</code></pre></p> <p>X\u00e2y d\u1ef1ng m\u1ea3ng r <pre><code>    /* r[k]: Xa nh\u1ea5t v\u1ec1 b\u00ean ph\u1ea3i nh\u1eadn H[k] l\u00e0 min */\n    dq.clear();\n    for (int k = N; k &gt;= 1; --k) {\n        while (dq.size() &amp;&amp; H[dq.front()] &gt;= H[k]) dq.pop_front();\n        if (dq.size()) r[k] = dq.front() - 1;\n        else r[k] = k;\n        dq.push_front(k);\n    }\n</code></pre></p> <p>X\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb <pre><code>for (int i = 1; i &lt;= N; ++i) G[i].push_back(i + 1);\nfor (int k = 1; k &lt;= N; ++k) {\n    if (H[k] &lt; min(H[L[k] - 1], H[R[k] + 1])) {\n        G[L[k] - 1].push_back(R[k] + 1);\n    }\n}\nfor (int k = 1; k &lt;= N; ++k) {\n    if (max(H[l[k] - 1], H[r[k] + 1]) &lt; H[k]) {\n        G[l[k] - 1].push_back(r[k] + 1);\n    }\n}\n</code></pre></p>"},{"location":"algo/data-structures/deque-min-max/#anh-gia_1","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>S\u1ed1 c\u1ea1nh t\u1ed1i \u0111a trong b\u00e0i to\u00e1n n\u00e0y: \\(M = 3 \\cdot N\\)</li> <li>Chi ph\u00ed th\u1eddi gian x\u00e2y d\u1ef1ng 4 m\u1ea3ng \\(L, R, l, r\\) l\u00e0 \\(O(N)\\)</li> <li>Chi ph\u00ed th\u1eddi gian thu\u1eadt to\u00e1n \\(BFS\\) l\u00e0 \\(O(N + M)\\)</li> </ul>"},{"location":"algo/data-structures/deque-min-max/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>MINK</li> <li>QBRECT</li> <li>KAGAIN</li> <li>KPLANK</li> <li>MMASS</li> </ul>"},{"location":"algo/data-structures/disjoint-set-union/","title":"Disjoint Set Union","text":"<p>Ngu\u1eddi vi\u1ebft:  - Ng\u00f4 Nh\u1eadt Quang - HUS High School for Gifted Students</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - VNUHCM-University of Science - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM-University of Science</p>"},{"location":"algo/data-structures/disjoint-set-union/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Disjoint Set Union, hay DSU, l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u h\u1eefu d\u1ee5ng v\u00e0 th\u01b0\u1eddng xuy\u00ean \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c k\u00ec thi CP. DSU, \u0111\u00fang nh\u01b0 t\u00ean g\u1ecdi c\u1ee7a n\u00f3, l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00f3 th\u1ec3 qu\u1ea3n l\u00ed m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 m\u1ed9t t\u1eadp h\u1ee3p c\u1ee7a c\u00e1c t\u1eadp h\u1ee3p.  </p>"},{"location":"algo/data-structures/disjoint-set-union/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 \\(n\\) \u0111\u1ec9nh, ban \u0111\u1ea7u kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e0o. Ch\u00fang ta ph\u1ea3i x\u1eed l\u00ed c\u00e1c truy v\u1ea5n nh\u01b0 sau: - Th\u00eam m\u1ed9t c\u1ea1nh gi\u1eefa \u0111\u1ec9nh \\(x\\) v\u00e0 \u0111\u1ec9nh \\(y\\) trong \u0111\u1ed3 th\u1ecb. - In ra <code>YES</code> n\u1ebfu nh\u01b0 \u0111\u1ec9nh \\(x\\) v\u00e0 \u0111\u1ec9nh \\(y\\) n\u1eb1m trong c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng. In ra <code>NO</code> n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i.</p> <p>M\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng trong \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb con trong \u0111\u00f3 gi\u1eefa b\u1ea5t k\u00ec hai \u0111\u1ec9nh n\u00e0o \u0111\u1ec1u c\u00f3 \u0111\u01b0\u1eddng \u0111i \u0111\u1ebfn nhau, v\u00e0 kh\u00f4ng th\u1ec3 nh\u1eadn th\u00eam b\u1ea5t k\u00ec m\u1ed9t \u0111\u1ec9nh n\u00e0o m\u00e0 v\u1eabn duy tr\u00ec t\u00ednh ch\u1ea5t tr\u00ean.</p>"},{"location":"algo/data-structures/disjoint-set-union/#cau-truc-du-lieu-disjoint-set-union","title":"C\u1ea5u tr\u00fac d\u1eef li\u1ec7u Disjoint Set Union","text":"<p>N\u1ebfu ta coi m\u1ed7i \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t ph\u1ea7n t\u1eed v\u00e0 m\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng trong \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p, truy v\u1ea5n th\u1ee9 nh\u1ea5t s\u1ebd tr\u1edf th\u00e0nh g\u1ed9p hai t\u1eadp h\u1ee3p l\u1ea7n l\u01b0\u1ee3t ch\u1ee9a ph\u1ea7n t\u1eed \\(x\\) v\u00e0 \\(y\\) th\u00e0nh m\u1ed9t t\u1eadp h\u1ee3p m\u1edbi v\u00e0 truy v\u1ea5n th\u1ee9 hai tr\u1edf th\u00e0nh h\u1ecfi hai ph\u1ea7n t\u1eed \\(x\\) v\u00e0 \\(y\\) c\u00f3 n\u1eb1m trong c\u00f9ng m\u1ed9t t\u1eadp h\u1ee3p hay kh\u00f4ng.</p> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y, ta s\u1ebd x\u00e2y d\u1ef1ng m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00f3 ba thao t\u00e1c nh\u01b0 sau: - <code>make_set(v)</code> - t\u1ea1o ra m\u1ed9t t\u1eadp h\u1ee3p m\u1edbi ch\u1ec9 ch\u1ee9a ph\u1ea7n t\u1eed <code>v</code>. - <code>union_sets(a, b)</code> - g\u1ed9p t\u1eadp h\u1ee3p ch\u1ee9a ph\u1ea7n t\u1eed <code>a</code> v\u00e0 t\u1eadp h\u1ee3p ch\u1ee9a ph\u1ea7n t\u1eed <code>b</code> th\u00e0nh m\u1ed9t. - <code>find_set(v)</code> - cho bi\u1ebft \u0111\u1ea1i di\u1ec7n c\u1ee7a t\u1eadp h\u1ee3p c\u00f3 ch\u1ee9a ph\u1ea7n t\u1eed <code>v</code>. \u0110\u1ea1i di\u1ec7n n\u00e0y s\u1ebd l\u00e0 m\u1ed9t ph\u1ea7n t\u1eed c\u1ee7a t\u1eadp h\u1ee3p \u0111\u00f3 v\u00e0 c\u00f3 th\u1ec3 thay \u0111\u1ed5i sau m\u1ed7i l\u1ea7n g\u1ecdi thao t\u00e1c <code>union_sets</code>. Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u1ea1i di\u1ec7n \u0111\u00f3 \u0111\u1ec3 ki\u1ec3m tra hai ph\u1ea7n t\u1eed c\u00f3 n\u1eb1m trong c\u00f9ng m\u1ed9t t\u1eadp h\u1ee3p hay kh\u00f4ng. <code>a</code> v\u00e0 <code>b</code> n\u1eb1m trong c\u00f9ng m\u1ed9t t\u1eadp h\u1ee3p n\u1ebfu nh\u01b0 \u0111\u1ea1i di\u1ec7n c\u1ee7a hai t\u1eadp ch\u1ee9a ch\u00fang l\u00e0 gi\u1ed1ng nhau v\u00e0 kh\u00f4ng n\u1eb1m trong c\u00f9ng m\u1ed9t t\u1eadp h\u1ee3p n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i.</p> <p>Ta c\u00f3 th\u1ec3 x\u1eed l\u00ed c\u00e1c thao t\u00e1c m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 n\u00e0y v\u1edbi c\u00e1c t\u1eadp h\u1ee3p \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng c\u00e1c c\u00e2y, m\u1ed7i ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t \u0111\u1ec9nh v\u00e0 m\u1ed7i c\u00e2y t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t t\u1eadp h\u1ee3p. G\u1ed1c c\u1ee7a m\u1ed7i c\u00e2y s\u1ebd l\u00e0 \u0111\u1ea1i di\u1ec7n c\u1ee7a t\u1eadp h\u1ee3p \u0111\u00f3.</p> <p>C\u1ea5u tr\u00fac c\u1ee7a c\u00e2y \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n qua v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> <p></p> <p>Ban \u0111\u1ea7u, m\u1ed7i ph\u1ea7n t\u1eed thu\u1ed9c m\u1ed9t t\u1eadp h\u1ee3p ri\u00eang bi\u1ec7t, v\u1eady m\u1ed7i \u0111\u1ec9nh l\u00e0 m\u1ed9t c\u00e2y ri\u00eang bi\u1ec7t. B\u01b0\u1edbc ti\u1ebfp theo, ta g\u1ed9p hai t\u1eadp h\u1ee3p ch\u1ee9a ph\u1ea7n t\u1eed \\(1\\) v\u00e0 \\(2\\). Sau \u0111\u00f3, ta g\u1ed9p hai t\u1eadp h\u1ee3p ch\u1ee9a ph\u1ea7n t\u1eed \\(3\\) v\u00e0 \\(4\\). Cu\u1ed1i c\u00f9ng, ta g\u1ed9p hai t\u1eadp h\u1ee3p ch\u1ee9a ph\u1ea7n t\u1eed \\(1\\) v\u00e0 \\(3\\).</p> <p>V\u1edbi c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y, ta s\u1ebd l\u01b0u m\u1ed9t m\u1ea3ng <code>parent</code> v\u1edbi <code>parent[v]</code> l\u00e0 cha c\u1ee7a ph\u1ea7n t\u1eed <code>v</code>.</p>"},{"location":"algo/data-structures/disjoint-set-union/#cai-at-ngay-tho","title":"C\u00e0i \u0111\u1eb7t \"ng\u00e2y th\u01a1\"","text":"<p>\u0110\u1ec3 t\u1ea1o m\u1ed9t t\u1eadp h\u1ee3p m\u1edbi g\u1ed3m ph\u1ea7n t\u1eed <code>v</code> (hay <code>make_set(v)</code>), ta ch\u1ec9 c\u1ea7n t\u1ea1o m\u1ed9t c\u00e2y c\u00f3 g\u1ed1c l\u00e0 <code>v</code>, v\u1edbi <code>parent[v] = v</code>.</p> <p>\u0110\u1ec3 g\u1ed9p hai t\u1eadp h\u1ee3p l\u1ea7n l\u01b0\u1ee3t ch\u1ee9a ph\u1ea7n t\u1eed <code>a</code> v\u00e0 ph\u1ea7n t\u1eed <code>b</code> (hay <code>union_sets(a, b)</code>), ta s\u1ebd t\u00ecm g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 ch\u1ee9a ph\u1ea7n t\u1eed <code>a</code> v\u00e0 g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 c\u00f3 ch\u1ee9a ph\u1ea7n t\u1eed <code>b</code>. N\u1ebfu hai gi\u00e1 tr\u1ecb n\u00e0y gi\u1ed1ng nhau, ta s\u1ebd kh\u00f4ng l\u00e0m g\u00ec do hai ph\u1ea7n t\u1eed n\u00e0y \u0111\u00e3 n\u1eb1m trong c\u00f9ng m\u1ed9t t\u1eadp h\u1ee3p. C\u00f2n n\u1ebfu kh\u00f4ng, ta s\u1ebd \u0111\u1eb7t g\u1ed1c c\u00e2y n\u00e0y l\u00e0 cha c\u1ee7a g\u1ed1c c\u00e2y c\u00f2n l\u1ea1i. D\u1ec5 th\u1ea5y \u0111i\u1ec1u n\u00e0y s\u1ebd g\u1ed9p hai c\u00e2y l\u1ea1i th\u00e0nh m\u1ed9t.</p> <p>\u0110\u1ec3 t\u00ecm k\u00ed hi\u1ec7u c\u1ee7a m\u1ed9t t\u1eadp h\u1ee3p c\u00f3 ch\u1ee9a ph\u1ea7n t\u1eed <code>v</code> (hay <code>find_set(v)</code>), ta \u0111\u01a1n gi\u1ea3n nh\u1ea3y l\u00ean c\u00e1c t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh <code>v</code> cho \u0111\u1ebfn khi ta \u0111\u1ebfn g\u1ed1c c\u1ee7a c\u00e2y. Thao t\u00e1c n\u00e0y c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t b\u1eb1ng \u0111\u1ec7 quy.</p> <pre><code>void make_set(int v) {\n    parent[v] = v; // T\u1ea1o ra c\u00e2y m\u1edbi c\u00f3 g\u1ed1c l\u00e0 \u0111\u1ec9nh v\n}\n\nint find_set(int v) {\n    if (v == parent[v]) return v; // Tr\u1ea3 v\u1ec1 \u0111\u1ec9nh v n\u1ebfu nh\u01b0 \u0111\u1ec9nh v l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y\n    return find_set(parent[v]); // \u0110\u1ec7 quy l\u00ean cha c\u1ee7a \u0111\u1ec9nh v\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a); // T\u00ecm g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 ch\u1ee9a \u0111\u1ec9nh a\n    b = find_set(b); // T\u00ecm g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 ch\u1ee9a \u0111\u1ec9nh b\n    if (a != b) parent[b] = a; // G\u1ed9p hai c\u00e2y n\u1ebfu nh\u01b0 hai ph\u1ea7n t\u1eed \u1edf hai c\u00e2y kh\u00e1c nhau\n}\n</code></pre> <p>Nh\u01b0 \u0111\u00e3 n\u00f3i, \u0111\u00e2y l\u00e0 c\u00e1ch c\u00e0i \u0111\u1eb7t ng\u00e2y th\u01a1, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u1ea1o ra m\u1ed9t v\u00ed d\u1ee5 sao cho khi s\u1eed d\u1ee5ng c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y, c\u00e2y s\u1ebd tr\u1edf th\u00e0nh m\u1ed9t \u0111o\u1ea1n th\u1eb3ng g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c <code>find_set</code> s\u1ebd l\u00e0 \\(\\mathcal{O}(n)\\).</p> <p>\u0110i\u1ec1u n\u00e0y \u0111\u01b0\u01a1ng nhi\u00ean l\u00e0 kh\u00f4ng th\u1ec3 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c, v\u00ec v\u1eady ta s\u1ebd t\u00ecm hi\u1ec3u hai ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u thu\u1eadt to\u00e1n d\u01b0\u1edbi \u0111\u00e2y.</p>"},{"location":"algo/data-structures/disjoint-set-union/#toi-uu-1-gop-theo-kich-co-o-cao","title":"T\u1ed1i \u01b0u 1 - G\u1ed9p theo k\u00edch c\u1ee1 / \u0111\u1ed9 cao","text":"<p>Ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u n\u00e0y s\u1ebd thay \u0111\u1ed5i thao t\u00e1c <code>union_sets</code>. Ch\u00ednh x\u00e1c h\u01a1n, ta s\u1ebd thay \u0111\u1ed5i c\u00e1ch x\u00e9t trong hai c\u00e2y \u0111ang g\u1ed9p, g\u1ed1c c\u1ee7a c\u00e2y n\u00e0o s\u1ebd l\u00e0 cha c\u1ee7a g\u1ed1c c\u1ee7a c\u00e2y c\u00f2n l\u1ea1i.</p> <p>C\u00f3 kh\u00e1 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 x\u00e9t \u0111i\u1ec1u n\u00e0y, nh\u01b0ng hai c\u00e1ch \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u nh\u1ea5t ch\u00ednh l\u00e0 g\u1ed9p theo k\u00edch c\u1ee1 v\u00e0 g\u1ed9p theo \u0111\u1ed9 cao c\u1ee7a c\u00e2y. </p> <p>Gi\u1ea3 d\u1ee5 m\u1ed7i c\u00e2y c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb. \u1ede c\u00e1ch th\u1ee9 nh\u1ea5t, gi\u00e1 tr\u1ecb \u0111\u00f3 l\u00e0 k\u00edch c\u1ee1 c\u1ee7a c\u00e2y, v\u00e0 \u1edf c\u00e1ch th\u1ee9 hai, gi\u00e1 tr\u1ecb \u0111\u00f3 l\u00e0 \u0111\u1ed9 cao c\u1ee7a c\u00e2y. \u1ede c\u1ea3 hai c\u00e1ch n\u00e0y, ta s\u1ebd lu\u00f4n \u0111\u1eb7t g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 gi\u00e1 tr\u1ecb cao h\u01a1n l\u00e0 cha c\u1ee7a g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 gi\u00e1 tr\u1ecb th\u1ea5p h\u01a1n.</p> <p>Thao t\u00e1c <code>union_sets</code> \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u g\u1ed9p theo k\u00edch c\u1ee1: <pre><code>void make_set(int v) {\n    parent[v] = v;\n    sz[v] = 1; // Ban \u0111\u1ea7u t\u1eadp h\u1ee3p ch\u1ee9a v c\u00f3 k\u00edch c\u1ee1 l\u00e0 1\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a);\n    b = find_set(b);\n    if (a != b) {\n        if (sz[a] &lt; sz[b]) swap(a, b); // \u0110\u1eb7t bi\u1ebfn a l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 k\u00edch c\u1ee1 l\u1edbn h\u01a1n\n        parent[b] = a;\n        sz[a] += sz[b]; // C\u1eadp nh\u1eadt k\u00edch c\u1ee1 c\u1ee7a c\u00e2y m\u1edbi g\u1ed9p l\u1ea1i\n    } \n}\n</code></pre></p> <p>Thao t\u00e1c <code>union_sets</code> \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u g\u1ed9p theo \u0111\u1ed9 cao: <pre><code>void make_set(int v) {\n    parent[v] = v;\n    rank[v] = 0; // G\u1ed1c c\u1ee7a c\u00e2y c\u00f3 \u0111\u1ed9 cao l\u00e0 0\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a);\n    b = find_set(b);\n    if (a != b) {\n        if (rank[a] &lt; rank[b]) swap(a, b); // \u0110\u1eb7t bi\u1ebfn a l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 \u0111\u1ed9 cao l\u1edbn h\u01a1n\n        parent[b] = a;\n        if (rank[a] == rank[b]) rank[a]++; // N\u1ebfu nh\u01b0 hai c\u00e2y c\u00f3 c\u00f9ng m\u1ed9t \u0111\u1ed9 cao, \u0111\u1ed9 cao c\u1ee7a c\u00e2y m\u1edbi sau khi g\u1ed9p s\u1ebd t\u0103ng 1\n    } \n}\n</code></pre></p> <p>Ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u n\u00e0y, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c <code>find_set</code> s\u1ebd tr\u1edf th\u00e0nh \\(\\mathcal{O}(\\log{n})\\). Tuy nhi\u00ean, ta v\u1eabn c\u00f2n c\u00f3 th\u1ec3 l\u00e0m t\u1ed1t h\u01a1n th\u1ebf khi k\u1ebft h\u1ee3p v\u1edbi ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u th\u1ee9 hai.</p>"},{"location":"algo/data-structures/disjoint-set-union/#toi-uu-2-nen-uong-i","title":"T\u1ed1i \u01b0u 2 - N\u00e9n \u0111\u01b0\u1eddng \u0111i","text":"<p>Ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u n\u00e0y nh\u1eb1m t\u0103ng t\u1ed1c thao t\u00e1c <code>find_set</code>. </p> <p>Gi\u1ea3 d\u1ee5 ta g\u1ecdi <code>find_set(v)</code> v\u1edbi m\u1ed9t \u0111\u1ec9nh <code>v</code> b\u1ea5t k\u00ec, ch\u00fang ta t\u00ecm \u0111\u01b0\u1ee3c <code>p</code> l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y, \u0111\u1ed3ng th\u1eddi c\u0169ng l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a m\u1ecdi h\u00e0m <code>find_set(u)</code> v\u1edbi <code>u</code> l\u00e0 m\u1ed9t \u0111\u1ec9nh n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb <code>u</code> \u0111\u1ebfn <code>p</code>. C\u00e1ch t\u1ed1i \u01b0u \u1edf \u0111\u00e2y ch\u00ednh l\u00e0 l\u00e0m cho \u0111\u01b0\u1eddng \u0111i \u0111\u1ebfn g\u1ed1c c\u1ee7a c\u00e1c \u0111\u1ec9nh <code>u</code> ng\u1eafn \u0111i b\u1eb1ng c\u00e1ch g\u00e1n tr\u1ef1c ti\u1ebfp cha c\u1ee7a c\u00e1c \u0111\u1ec9nh <code>u</code> n\u00e0y th\u00e0nh <code>p</code>.</p> <p>C\u00f3 th\u1ec3 th\u1ea5y sau khi th\u1ef1c hi\u1ec7n m\u1ed9t thao t\u00e1c nh\u01b0 v\u1eady, c\u1ea5u tr\u00fac c\u1ea3 c\u00e2y c\u00f3 th\u1ec3 thay \u0111\u1ed5i. Ta c\u00f3 th\u1ec3 th\u1ea5y \u0111i\u1ec1u n\u00e0y trong v\u00ed d\u1ee5 sau \u0111\u00e2y:</p> <p> /uploads/disjoint-set-union_img2.png </p> <p>B\u00ean tr\u00e1i l\u00e0 c\u00e2y ban \u0111\u1ea7u v\u00e0 b\u00ean ph\u1ea3i l\u00e0 c\u00e2y b\u1ecb n\u00e9n sau khi ta s\u1eed d\u1ee5ng thao t\u00e1c <code>find_set(7)</code>, n\u00e9n \u0111\u01b0\u1eddng \u0111i t\u1edbi g\u1ed1c c\u1ee7a c\u00e1c \u0111\u1ec9nh \\(7, 5, 3, 2\\).</p> <p>Thao t\u00e1c <code>find_set</code> m\u1edbi n\u00e0y \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t nh\u01b0 sau: <pre><code>int find_set(int v) {\n    if (v == parent[v]) return v; // Tr\u1ea3 v\u1ec1 \u0111\u1ec9nh v n\u1ebfu nh\u01b0 \u0111\u1ec9nh v l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y\n    int p = find_set(parent[v]); // \u0110\u1ec7 quy l\u00ean cha c\u1ee7a \u0111\u1ec9nh v\n    parent[v] = p; // N\u00e9n \u0111o\u1ea1n t\u1eeb v l\u00ean g\u1ed1c c\u1ee7a c\u00e2y\n    return p;\n}\n</code></pre></p> <p>M\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c c\u1ee7a thao t\u00e1c <code>find_set</code> m\u00e0 th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u trong CP do t\u00ednh ng\u1eafn g\u1ecdn c\u1ee7a n\u00f3: <pre><code>int find_set(int v) {\n    return v == parent[v] ? v : parent[v] = find_set(parent[v]);\n}\n</code></pre></p>"},{"location":"algo/data-structures/disjoint-set-union/#o-phuc-tap-thoi-gian","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian","text":"<p>Khi k\u1ebft h\u1ee3p c\u1ea3 hai ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u b\u00ean tr\u00ean l\u1ea1i, ta s\u1ebd \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh cho thao t\u00e1c <code>find_set</code> l\u00e0 \\(\\mathcal{O}(\\alpha(n))\\) v\u1edbi \\(\\alpha(n)\\) l\u00e0 h\u00e0m Ackermann ngh\u1ecbch \u0111\u1ea3o. Tuy nhi\u00ean h\u00e0m n\u00e0y t\u0103ng r\u1ea5t ch\u1eadm (v\u1edbi \\(\\alpha(n) \\le 3\\) v\u1edbi \\(n \\le 61\\) v\u00e0 \\(\\alpha(n) \\le 4\\) v\u1edbi x\u1ea5p x\u1ec9 \\(n &lt; 10^{600}\\)).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh, \u0111\u00fang nh\u01b0 t\u00ean g\u1ecdi c\u1ee7a n\u00f3, l\u00e0 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thao t\u00e1c, chia cho s\u1ed1 l\u01b0\u1ee3ng thao t\u00e1c. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a \u1edf m\u1ed9t s\u1ed1 thao t\u00e1c, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u00f3 th\u1ec3 l\u00ean t\u1edbi \\(\\mathcal{O}(\\log{n})\\) nh\u01b0ng ta th\u1ef1c hi\u1ec7n \\(m\\) thao t\u00e1c nh\u01b0 v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd tr\u1edf th\u00e0nh \\(\\mathcal{O}(m \\cdot \\alpha(n))\\) (\\(\\approx \\mathcal{O}(m)\\) v\u1edbi \\(m\\) \u0111\u1ee7 l\u1edbn).</p> <p>M\u1ed9t \u0111i\u1ec1u \u0111\u00e1ng l\u01b0u \u00fd l\u00e0 n\u1ebfu nh\u01b0 ch\u00fang ta ch\u1ec9 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u \\(2\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh c\u1ee7a thao t\u00e1c <code>find_set</code> c\u0169ng ch\u1ec9 l\u00e0 \\(\\mathcal{O}(\\log{n})\\).</p>"},{"location":"algo/data-structures/disjoint-set-union/#chung-minh-o-phuc-tap-thoi-gian","title":"Ch\u1ee9ng minh \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian","text":"<p>T\u1ed1i \u01b0u g\u1ed9p set theo k\u00edch c\u1ee1: G\u1ecdi \\(a\\) l\u00e0 \u0111\u1ed9 l\u1edbn c\u1ee7a c\u00e2y con c\u00f3 g\u1ed1c l\u00e0 \u0111\u1ec9nh \\(v\\), \\(b\\) l\u00e0 \u0111\u1ed9 l\u1edbn c\u1ee7a c\u00e2y con c\u00f3 g\u1ed1c l\u00e0 \\(p\\) (cha c\u1ee7a \u0111\u1ec9nh \\(v\\)). D\u1ec5 th\u1ea5y r\u1eb1ng \\(b \\ge 2 \\times a\\) do s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh trong c\u00e2y con g\u1ed1c \\(p\\) m\u00e0 kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(a\\). Do v\u1eady \u0111\u1ed9 s\u00e2u t\u1ed1i \u0111a c\u1ee7a c\u00e2y s\u1ebd l\u00e0 \\(\\log_2{n}\\).</p> <p>T\u1ed1i \u01b0u g\u1ed9p set theo \u0111\u1ed9 cao: Ta s\u1ebd ch\u1ee9ng minh m\u1ed9t c\u00e2y c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(k\\) c\u00f3 \u00edt nh\u1ea5t \\(2^k\\) \u0111\u1ec9nh. C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng s\u1ed1 c\u00e2y c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(0\\) c\u00f3 ch\u00ednh x\u00e1c \\(1\\) \u0111\u1ec9nh. M\u1ed9t c\u00e2y ch\u1ec9 c\u00f3 th\u1ec3 c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(k\\) n\u1ebfu nh\u01b0 tr\u01b0\u1edbc \u0111\u00f3 \u0111\u1ed9 cao c\u1ee7a n\u00f3 l\u00e0 \\(k - 1\\) v\u00e0 n\u00f3 \u0111\u01b0\u1ee3c g\u1ed9p v\u1edbi m\u1ed9t c\u00e2y kh\u00e1c c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(k - 1\\). V\u00ec v\u1eady, s\u1ed1 \u0111\u1ec9nh trong c\u00e2y c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(k\\) s\u1ebd l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng hai l\u1ea7n s\u1ed1 \u0111\u1ec9nh trong c\u00e2y c\u00f3 \u0111\u1ed9 cao l\u00e0 \\(k - 1\\). Do \u0111\u00f3 \u0111\u1ed9 cao l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 c\u1ee7a c\u00e2y s\u1ebd l\u00e0 \\(\\log_2{n}\\).</p> <p>K\u1ebft h\u1ee3p hai ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u: Ph\u1ea7n ch\u1ee9ng minh n\u00e0y kh\u00e1 d\u00e0i d\u00f2ng v\u00e0 kh\u00f3 hi\u1ec3u, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u t\u1ea1i \u0111\u00e2y ho\u1eb7c \u0111\u00e2y.</p>"},{"location":"algo/data-structures/disjoint-set-union/#mot-cach-cai-at-khac","title":"M\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c","text":"<p>\u1ede trong m\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u nh\u01b0 Gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh (th\u1ea7y L\u00ea Minh Ho\u00e0ng) hay th\u01b0 vi\u1ec7n Atcoder, thay v\u00ec c\u00e0i \u0111\u1eb7t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU b\u1eb1ng hai m\u1ea3ng <code>parent</code> v\u00e0 <code>sz</code>, ch\u1ec9 m\u1ed9t m\u1ea3ng <code>lab</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.</p> <p>N\u1ebfu nh\u01b0 <code>lab[v]</code> \u00e2m th\u00ec \\(u\\) l\u00e0 g\u1ed1c c\u1ee7a m\u1ed9t c\u00e2y v\u00e0 <code>-lab[v]</code> l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh c\u1ee7a c\u00e2y \u0111\u00f3. C\u00f2n n\u1ebfu <code>lab[v]</code> d\u01b0\u01a1ng th\u00ec <code>lab[v]</code> l\u00e0 cha c\u1ee7a \u0111\u1ec9nh \\(u\\).</p> <pre><code>void make_set(int v) {\n    lab[u] = -1;\n}\n\nint find_set(int v) {\n    return lab[v] &lt; 0 ? v : lab[v] = find_set(lab[v]);\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a);\n    b = find_set(b);\n\n    if (a != b) {\n        if (lab[a] &gt; lab[b]) swap(a, b);\n        lab[a] += lab[b];\n        lab[b] = a;\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/disjoint-set-union/#mot-so-ung-dung-cua-dsu","title":"M\u1ed9t s\u1ed1 \u1ee9ng d\u1ee5ng c\u1ee7a DSU","text":""},{"location":"algo/data-structures/disjoint-set-union/#luu-them-thong-tin-khac-cho-moi-tap-hop","title":"L\u01b0u th\u00eam th\u00f4ng tin kh\u00e1c cho m\u1ed7i t\u1eadp h\u1ee3p","text":"<p>Ngo\u00e0i vi\u1ec7c l\u01b0u c\u00e1c th\u00f4ng tin v\u1ec1 c\u1ea5u tr\u00fac c\u00e2y, ta c\u00f3 th\u1ec3 l\u01b0u c\u00e1c h\u00e0m c\u00f3 t\u00ednh ch\u1ea5t giao ho\u00e1n v\u00e0 k\u1ebft h\u1ee3p c\u1ee7a t\u1eebng t\u1eadp h\u1ee3p. V\u00ed d\u1ee5, ta c\u00f3 th\u1ec3 l\u01b0u t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed/ gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed b\u00e9 nh\u1ea5t c\u1ee7a t\u1eebng t\u1eadp h\u1ee3p. L\u00fac n\u00e0y, c\u00e1c thao t\u00e1c c\u1ee7a dsu s\u1ebd \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>void make_set(int v) {\n    parent[v] = v;\n    sz[v] = 1;\n    mn[v] = value[v];\n    sum[v] = value[v];\n    // value[v] l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 v\n}\n\nint find_set(int v) {\n    return v == parent[v] ? v : parent[v] = find_set(parent[v]);\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a);\n    b = find_set(b);\n    if (a != b) {\n        if (sz[a] &lt; sz[b]) swap(a, b);\n        parent[b] = a;\n        sz[a] += sz[b];\n        sum[a] += sum[b];\n        mn[a] = min(mn[a], mn[b]);\n    } \n}\n</code></pre> <p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 th\u00f4ng tin v\u1ec1 \u0111\u1ed9 l\u1edbn c\u1ee7a c\u00e2y (<code>sz</code>) hay \u0111\u1ed9 cao c\u1ee7a c\u00e2y (<code>rank</code>), ta s\u1ebd l\u01b0u c\u00e1c h\u00e0m n\u00e0y t\u1ea1i g\u1ed1c c\u1ee7a t\u1eebng c\u00e2y.</p> <pre><code>int find_sum(int v) { // Tr\u1ea3 v\u1ec1 t\u1ed5ng c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong t\u1eadp h\u1ee3p ch\u1ee9a v\n    v = find_set(v);\n    return sum[v];\n}\n\nint find_min(int v) { // Tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb b\u00e9 nh\u1ea5t c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong t\u1eadp h\u1ee3p ch\u1ee9a v\n    v = find_set(v);\n    return mn[v];\n}\n</code></pre>"},{"location":"algo/data-structures/disjoint-set-union/#bai-toan-xep-hang","title":"B\u00e0i to\u00e1n x\u1ebfp h\u00e0ng","text":""},{"location":"algo/data-structures/disjoint-set-union/#bai-toan_1","title":"B\u00e0i to\u00e1n","text":"<p>Cho \\(n\\) ng\u01b0\u1eddi \u0111ang x\u1ebfp h\u00e0ng \u1edf c\u00e1c v\u1ecb tr\u00ed t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\). Vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh x\u1eed l\u00ed c\u00e1c truy v\u1ea5n: - Ng\u01b0\u1eddi \u0111\u1ee9ng \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(i\\) r\u1eddi kh\u1ecfi h\u00e0ng. - T\u00ecm ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t v\u1ec1 b\u00ean ph\u1ea3i v\u1ecb tr\u00ed \\(p\\) m\u00e0 ch\u01b0a r\u1eddi kh\u1ecfi h\u00e0ng.</p>"},{"location":"algo/data-structures/disjoint-set-union/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<p>V\u1edbi m\u1ed7i v\u1ecb tr\u00ed, ta s\u1ebd c\u00f3 m\u1ed9t con tr\u1ecf. N\u1ebfu ng\u01b0\u1eddi \u0111\u1ee9ng \u1edf v\u1ecb tr\u1ecb n\u00e0y v\u1eabn \u0111ang \u0111\u1ee9ng trong h\u00e0ng, con tr\u1ecf tr\u1ecf v\u00e0o v\u1ecb tr\u1ecb \u0111\u00f3, n\u1ebfu kh\u00f4ng th\u00ec con tr\u1ecf n\u00e0y s\u1ebd tr\u1ecf v\u00e0o v\u1ecb tr\u00ed ngay b\u00ean ph\u1ea3i.</p> <p>X\u00e9t v\u00ed d\u1ee5 sau v\u1edbi \\(n = 5\\), ban \u0111\u1ea7u ta c\u00f3:</p> <p> /uploads/disjoint-set-union_img3.png </p> <p>Gi\u1ea3 d\u1ee5 ng\u01b0\u1eddi \u0111\u1ee9ng \u1edf v\u1ecb tr\u00ed \\(2\\) v\u00e0 \\(3\\) r\u1eddi kh\u1ecfi h\u00e0ng:</p> <p> /uploads/disjoint-set-union_img4.png </p> <p>D\u1ec5 th\u1ea5y \u0111\u1ec3 t\u00ecm ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t b\u00ean ph\u1ea3i m\u00e0 ch\u01b0a r\u1eddi kh\u1ecfi h\u00e0ng, ta \u0111i d\u1ea7n d\u1ea7n sang ph\u1ea3i cho \u0111\u1ebfn khi g\u1eb7p m\u1ed9t v\u1ecb tr\u00ed c\u00f3 con tr\u1ecf tr\u1ecf \u0111\u1ebfn ch\u00ednh n\u00f3.</p> <p>Ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU \u0111\u1ec3 l\u01b0u tr\u1eef c\u00e1c th\u00f4ng tin tr\u00ean v\u00e0 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u n\u00e9n \u0111o\u1ea1n \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh \\(\\mathcal{O}(\\log{n})\\) v\u1edbi m\u1ed7i truy v\u1ea5n. </p> <p>\u0110\u1ec3 \u00fd k\u0129 h\u01a1n, ta th\u1ea5y v\u1ecb tr\u00ed ta c\u1ea7n t\u00ecm ch\u00ednh l\u00e0 v\u1ecb tr\u00ed c\u00f3 th\u1ee9 t\u1ef1 l\u1edbn nh\u1ea5t trong t\u1eadp h\u1ee3p. Ta c\u00f3 th\u1ec3 l\u01b0u ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t trong m\u1ed9t t\u1eadp h\u1ee3p nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf ph\u1ea7n tr\u00ean, qua \u0111\u00f3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh \\(\\mathcal{O}(\\alpha{(n)})\\) v\u1edbi m\u1ed7i truy v\u1ea5n.</p>"},{"location":"algo/data-structures/disjoint-set-union/#code-mau","title":"Code m\u1eabu","text":"<pre><code>void make_set(int v) {\n    parent[v] = v;\n    sz[v] = 1;\n    mx[v] = v;\n}\n\nint find_set(int v) {\n    return v == parent[v] ? v : parent[v] = find_set(parent[v]);\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a);\n    b = find_set(b);\n    if (a != b) {\n        if (sz[a] &lt; sz[b]) swap(a, b);\n        parent[b] = a;\n        sz[a] += sz[b];\n        mx[a] = max(mx[a], mx[b]);\n    } \n}\n\nvoid leave(int v) { // Ng\u01b0\u1eddi th\u1ee9 v r\u1eddi kh\u1ecfi h\u00e0ng\n    union_sets(v, v + 1);\n}\n\nint find_next(int p) { // Tr\u1ea3 v\u00e8 th\u1ee9 t\u1ef1 c\u1ee7a ng\u01b0\u1eddi g\u1ea7n nh\u1ea5t v\u1ec1 b\u00ean ph\u1ea3i \n                       // v\u1ecb tr\u00ed p m\u00e0 ch\u01b0a r\u1eddi kh\u1ecfi h\u00e0ng\n    p = find_set(p);\n    return mx[p];\n}\n</code></pre>"},{"location":"algo/data-structures/disjoint-set-union/#toi-uu-thuat-toan-tim-cay-khung-nho-nhat-trong-o-thi","title":"T\u1ed1i \u01b0u thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t trong \u0111\u1ed3 th\u1ecb","text":"<p>S\u1eed d\u1ee5ng DSU, ta c\u00f3 th\u1ec3 t\u1ed1i \u01b0u \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb t\u1eeb \\(\\mathcal{O}(m \\log{n} + n^2)\\) xu\u1ed1ng \\(\\mathcal{O}(m \\log{n})\\). </p> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u k\u0129 h\u01a1n \u1edf blog t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t trong \u0111\u1ed3 th\u1ecb.</p>"},{"location":"algo/data-structures/disjoint-set-union/#ao-nguoc-truy-van","title":"\u0110\u1ea3o ng\u01b0\u1ee3c truy v\u1ea5n","text":"<p>Do t\u00ednh ch\u1ea5t m\u1ed9t chi\u1ec1u c\u1ee7a c\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU (ch\u1ec9 th\u00eam ch\u1ee9 kh\u00f4ng x\u00f3a \u0111\u01b0\u1ee3c), \u1edf m\u1ed9t s\u1ed1 b\u00e0i ta ph\u1ea3i \u0111\u1ea3o ng\u01b0\u1ee3c th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c truy v\u1ea5n trong b\u00e0i \u0111\u1ec3 gi\u1ea3i.</p>"},{"location":"algo/data-structures/disjoint-set-union/#bai-toan_2","title":"B\u00e0i to\u00e1n","text":"<p>Codeforces 722C - Destroying Array</p> <p>Cho m\u1ea3ng g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m \\(a_1, a_2, \\ldots, a_n\\) v\u00e0 m\u1ed9t ho\u00e1n v\u1ecb c\u00e1c s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\).</p> <p>C\u00e1c ph\u1ea7n t\u1eed s\u1ebd l\u1ea7n l\u01b0\u1ee3t b\u1ecb ph\u00e1 h\u1ee7y theo th\u1ee9 t\u1ef1 ho\u00e1n v\u1ecb tr\u00ean. Sau m\u1ed7i l\u1ea7n m\u1ed9t ph\u1ea7n t\u1eed b\u1ecb ph\u00e1 h\u1ee7y, h\u00e3y in ra d\u00e3y con li\u00ean ti\u1ebfp c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t m\u00e0 kh\u00f4ng c\u00f3 ph\u1ea7n t\u1eed n\u00e0o \u0111\u00e3 b\u1ecb ph\u00e1 h\u1ee7y. T\u1ed5ng c\u1ee7a m\u1ed9t \u0111o\u1ea1n con r\u1ed7ng l\u00e0 \\(0\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(1\\le n \\le 10^5, 0 \\le a_i \\le 10^9\\).</p>"},{"location":"algo/data-structures/disjoint-set-union/#loi-giai_1","title":"L\u1eddi gi\u1ea3i","text":"<p>Do c\u00e1c ph\u1ea7n t\u1eed l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m, ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng n\u1ebfu sau khi m\u1ed9t s\u1ed1 ph\u1ea7n t\u1eed b\u1ecb ph\u00e1 h\u1ee7y, d\u00e3y b\u1ecb chia th\u00e0nh \\(k\\) \u0111o\u1ea1n con li\u00ean ti\u1ebfp th\u00ec \u0111\u00e1p \u00e1n s\u1ebd l\u00e0 m\u1ed9t trong \\(k\\) \u0111o\u1ea1n con n\u00e0y.</p> <p>\u0110\u1ea3o ng\u01b0\u1ee3c th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c truy v\u1ea5n, ta c\u00f3 th\u1ec3 th\u1ea5y b\u00e0i to\u00e1n tr\u1edf n\u00ean d\u1ec5 d\u00e0ng r\u1ea5t nhi\u1ec1u: H\u1ed3i sinh m\u1ed9t s\u1ed1 b\u1ecb ph\u00e1 h\u1ee7y tr\u1edf v\u1ec1 ban \u0111\u1ea7u v\u00e0 in ra \u0111o\u1ea1n con c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t. \u0110\u1ebfn \u0111\u00e2y ta ngh\u0129 t\u1edbi c\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU \u0111\u1ec3 x\u1eed l\u00ed c\u00e1c \u0111o\u1ea1n con li\u00ean ti\u1ebfp. </p> <p>Khi m\u1ed9t s\u1ed1 \u0111\u01b0\u1ee3c h\u1ed3i sinh, ta s\u1ebd ki\u1ec3m tra b\u00ean tr\u00e1i s\u1ed1 \u0111\u00f3, n\u1ebfu c\u00f3 s\u1ed1 n\u00e0o \u0111\u00e3 \u0111\u01b0\u1ee3c h\u1ed3i sinh t\u1eeb tr\u01b0\u1edbc th\u00ec ta s\u1ebd th\u00eam c\u1ea1nh gi\u1eefa s\u1ed1 \u0111\u00f3 v\u00e0 s\u1ed1 b\u00ean tr\u00e1i s\u1ed1 \u0111\u00f3. T\u01b0\u01a1ng t\u1ef1 v\u1edbi s\u1ed1 b\u00ean ph\u1ea3i. D\u1ec5 th\u1ea5y r\u1eb1ng m\u1ecdi l\u00fac c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng trong DSU s\u1ebd th\u1ec3 hi\u1ec7n cho m\u1ed9t \u0111o\u1ea1n con li\u00ean ti\u1ebfp. Vi\u1ec7c l\u01b0u tr\u1eef t\u1ed5ng c\u1ee7a m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng \u0111\u00e3 \u0111\u01b0\u1ee3c nh\u1eafc \u0111\u1ebfn \u1edf ph\u1ea7n tr\u01b0\u1edbc.</p>"},{"location":"algo/data-structures/disjoint-set-union/#code-mau_1","title":"Code m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\n## define int long long\n\nusing namespace std;\n\nconst int N = 1e5 + 5;\nint n, ans;\nint a[N], p[N], res[N];\nbool flag[N];\n\nstruct DSU{\n    vector&lt;int&gt; parent, sz, sum;\n\n    DSU(int n) : parent(n), sz(n), sum(n) {};\n\n    void make_set(int v) {\n        parent[v] = v;\n        sz[v] = 1;\n        sum[v] = a[v];\n    }\n\n    int find_set(int v) {\n        return v == parent[v] ? v : parent[v] = find_set(parent[v]);\n    }\n\n    void join_sets(int a, int b) {\n        a = find_set(a);\n        b = find_set(b);\n        if (a != b) {\n            if (sz[a] &lt; sz[b]) swap(a,b);\n            parent[b] = a;\n            sz[a] += sz[b];\n            sum[a] += sum[b];\n        }\n    }\n};\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    cin &gt;&gt; n;\n\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; p[i];\n\n    DSU g(n + 5);\n    for (int i = 1; i &lt;= n; i++) g.make_set(i);    \n    for (int i = n; i &gt;= 1; i--) {\n        flag[p[i]] = true;\n\n        if (p[i] &gt; 1 &amp;&amp; flag[p[i] - 1]) g.join_sets(p[i], p[i] - 1);\n        if (p[i] &lt; n &amp;&amp; flag[p[i] + 1]) g.join_sets(p[i], p[i] + 1);\n\n        ans = max(ans, g.sum[g.find_set(p[i])]);\n        res[i - 1] = ans;\n    }\n\n    for (int i = 1; i &lt;= n; i++) cout &lt;&lt; res[i] &lt;&lt; \"\\n\";\n\n}\n</code></pre>"},{"location":"algo/data-structures/disjoint-set-union/#kiem-tra-tinh-chat-hai-phia-cua-o-thi-online","title":"Ki\u1ec3m tra t\u00ednh ch\u1ea5t hai ph\u00eda c\u1ee7a \u0111\u1ed3 th\u1ecb online","text":""},{"location":"algo/data-structures/disjoint-set-union/#bai-toan_3","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 \\(n\\) \u0111\u1ec9nh, ban \u0111\u1ea7u kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e0o. X\u1eed l\u00ed c\u00e1c truy v\u1ea5n th\u00eam c\u1ea1nh v\u00e0o \u0111\u1ed3 th\u1ecb. H\u1ecfi sau truy v\u1ea5n n\u00e0o th\u00ec \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f2n l\u00e0 \u0111\u1ed3 th\u1ecb hai ph\u00eda?</p>"},{"location":"algo/data-structures/disjoint-set-union/#loi-giai_2","title":"L\u1eddi gi\u1ea3i","text":"<p>D\u1ef1a v\u00e0o t\u00ednh ch\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb hai ph\u00eda, d\u1ec5 th\u1ea5y r\u1eb1ng v\u1edbi m\u1ecdi c\u1eb7p \u0111\u1ec9nh thu\u1ed9c c\u00f9ng m\u1ed9t ph\u00eda s\u1ebd c\u00f3 \u0111\u01b0\u1eddng \u0111i b\u1eaft k\u00ec gi\u1eefa ch\u00fang c\u00f3 \u0111\u1ed9 d\u00e0i ch\u1eb5n. N\u00f3i c\u00e1ch kh\u00e1c, n\u1ebfu ta ch\u1ecdn m\u1ed9t \u0111\u1ec9nh \\(l\\) trong m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng, hai \u0111\u1ec9nh \\(a\\) v\u00e0 \\(b\\) s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t ph\u00eda n\u1ebfu nh\u01b0 kho\u1ea3ng c\u00e1ch c\u1ee7a hai \u0111\u1ec9nh n\u00e0y t\u1edbi \u0111\u1ec9nh \\(l\\) c\u00f3 c\u00f9ng t\u00ednh ch\u1eb5n l\u1ebb.</p> <p>Ch\u00fang ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin n\u00e0y b\u1eb1ng c\u00e1ch l\u01b0u t\u00ednh ch\u1eb5n l\u1ebb c\u1ee7a \u0111\u01b0\u1eddng \u0111i t\u1eeb m\u1ecdi \u0111\u1ec9nh t\u1edbi g\u1ed1c c\u1ee7a c\u00e2y. L\u00fac n\u00e0y, h\u00e0m <code>find_set</code> c\u1ee7a ta s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t c\u1eb7p <code>{g\u1ed1c c\u1ee7a c\u00e2y, t\u00ednh ch\u1eb5n l\u1ebb c\u1ee7a \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i \u0111\u1ebfn g\u1ed1c c\u1ee7a c\u00e2y}</code> v\u00e0 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>pair&lt;int, int&gt; find_set(int v) {\n    if (v == parent[v]) return {v, 0};\n    pair&lt;int, int&gt; val = get(parent[v]);\n    parent[v] = val.first;\n    dist[v] = (dist[v] + val.second) % 2;\n        // \u0111\u1ed9 d\u00e0i t\u1eeb \u0111\u1ec9nh \u0111\u1ebfn cha m\u1edbi \n        // = \u0111\u1ed9 d\u00e0i \u0111\u1ebfn \u0111\u1ec9nh cha c\u0169 \n        // + \u0111\u1ed9 d\u00e0i t\u1eeb cha c\u0169 t\u1edbi cha m\u1edbi (g\u1ed1c c\u1ee7a c\u00e2y)\n    return {p[a], dist[a]};\n}\n</code></pre> <p>H\u00e0m <code>union_sets</code>, t\u01b0\u01a1ng t\u1ef1, c\u0169ng c\u1ea7n ph\u1ea3i \u0111\u01b0\u1ee3c thay \u0111\u1ed5i v\u00e0 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t nh\u01b0 sau: <pre><code>void union_sets(int a, int b) {\n    pair&lt;int, int&gt; valA = find_set(a),\n                   valB = find_set(b);\n    a = valA.first; b = valB.first;\n\n    if (a == b) {\n        if (valA.second != valB.second) {\n            // \u0110\u1ed3 th\u1ecb kh\u00f4ng c\u00f2n l\u00e0 \u0111\u1ed3 th\u1ecb hai ph\u00eda do c\u00f3\n            // c\u1ea1nh n\u1ed1i gi\u1eefa hai \u0111\u1ec9nh thu\u1ed9c hai ph\u00eda kh\u00e1c nhau.\n        }\n    }\n\n    else {\n        if (sz[a] &lt; sz[b]) swap(a, b);\n        parent[b] = a;\n        sz[a] += sz[b];\n        dist[b] = (valA.second + valB.second + 1) % 2;\n            // \u0110\u1ed9 d\u00e0i t\u1eeb \u0111\u1ec9nh b t\u1edbi g\u1ed1c c\u00e2y\n            // = \u0110\u1ed9 d\u00e0i t\u1eeb \u0111\u1ec9nh a t\u1edbi g\u1ed1c c\u00e2y ban \u0111\u1ea7u ch\u1ee9a a\n            // + D\u1ed9 d\u00e0i t\u1eeb \u0111\u1ec9nh b t\u1edbi g\u1ed1c c\u00e2y ban \u0111\u1ea7u ch\u1ee9a b\n            // + 1 (Kho\u1ea3ng c\u00e1ch gi\u1eefa hai \u0111\u1ec9nh a v\u00e0 b)\n    } \n}\n</code></pre></p>"},{"location":"algo/data-structures/disjoint-set-union/#mot-so-ki-thuat-su-dung-tinh-chat-cua-dsu","title":"M\u1ed9t s\u1ed1 k\u0129 thu\u1eadt s\u1eed d\u1ee5ng t\u00ednh ch\u1ea5t c\u1ee7a DSU","text":"<p>Ngo\u00e0i ra t\u00ednh ch\u1ea5t c\u1ee7a DSU c\u00f2n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong m\u1ed9t s\u1ed1 k\u0129 thu\u1eadt kh\u00e1 ph\u1ed5 bi\u1ebfn.</p>"},{"location":"algo/data-structures/disjoint-set-union/#ki-thuat-gop-set-small-to-large-merging","title":"K\u0129 thu\u1eadt g\u1ed9p set (Small-to-Large Merging)","text":"<p>Gi\u1ea3 s\u1eed ta c\u1ea7n l\u01b0u tr\u1ef1c ti\u1ebfp c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ed9t t\u1eadp h\u1ee3p b\u1eb1ng m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u nh\u01b0 set/map, th\u00ec li\u1ec7u c\u00f3 c\u00e1ch n\u00e0o \u0111\u1ee7 hi\u1ec7u qu\u1ea3 \u0111\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c <code>union_sets</code> hay kh\u00f4ng? C\u00e2u tr\u1ea3 l\u1eddi l\u00e0 c\u00f3 v\u00e0 k\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 g\u1ed9p set (small-to-large merging).</p>"},{"location":"algo/data-structures/disjoint-set-union/#bai-toan_4","title":"B\u00e0i to\u00e1n","text":"<p>VNOJ - colquery</p> <p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng c\u00f3 \\(n\\) \u0111\u1ec9nh, \u0111\u1ec9nh th\u1ee9 \\(i\\) c\u00f3 m\u00e0u \\(a_i\\). Ban \u0111\u1ea7u \u0111\u1ed3 th\u1ecb ch\u01b0a c\u00f3 c\u1ea1nh n\u00e0o.</p> <p>Cho \\(q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n thu\u1ed9c m\u1ed9t trong hai d\u1ea1ng sau: - \\(1\\,u\\,v\\): Th\u00eam m\u1ed9t c\u1ea1nh n\u1ed1i gi\u1eefa \\(u\\) v\u00e0 \\(v\\). - \\(2\\,u\\,c\\): T\u00ednh s\u1ed1 \u0111\u1ec9nh c\u00f3 m\u00e0u \\(c\\) trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng ch\u1ee9a \\(u\\).</p>"},{"location":"algo/data-structures/disjoint-set-union/#loi-giai_3","title":"L\u1eddi gi\u1ea3i","text":"<p>Ch\u00fang ta v\u1eabn s\u1ebd s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU trong b\u00e0i n\u00e0y, v\u00e0 l\u01b0u th\u00eam m\u1ed9t map ch\u1ee9a s\u1ed1 l\u01b0\u1ee3ng t\u1eebng m\u00e0u t\u1ea1i g\u1ed1c c\u1ee7a t\u1eebng c\u00e2y.</p> <p>Trong thao t\u00e1c <code>union_sets</code>, ta s\u1ebd chuy\u1ec3n l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed trong map c\u1ee7a t\u1eadp h\u1ee3p b\u00e9 h\u01a1n v\u00e0o map c\u1ee7a t\u1eadp h\u1ee3p l\u1edbn h\u01a1n. Tho\u1ea1t nh\u00ecn ban \u0111\u1ea7u, vi\u1ec7c l\u00e0m n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 \\(\\mathcal{O}(n ^ 2)\\), nh\u01b0ng th\u1ef1c ch\u1ea5t n\u00f3 ch\u1ec9 l\u00e0 \\(\\mathcal{O}(n \\log{n})\\). Ta s\u1ebd ch\u1ee9ng minh t\u1ea1i sao.</p> <p>G\u1ecdi s\u1ed1 ph\u1ea7n t\u1eed n\u1eb1m trong hai d\u00e3y s\u1ed1 l\u1edbn h\u01a1n v\u00e0 b\u00e9 h\u01a1n l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(a\\) v\u00e0 \\(b\\). D\u1ec5 th\u1ea5y \u0111\u01b0\u1ee3c r\u1eb1ng \\(a + b \\ge 2 \\cdot b\\), n\u00ean m\u1ed7i l\u1ea7n m\u1ed9t ph\u1ea7n t\u1eed b\u1ecb di chuy\u1ec3n, n\u00f3 s\u1ebd b\u1ecb di chuy\u1ec3n t\u1edbi m\u1ed9t d\u00e3y s\u1ed1 c\u00f3 k\u00edch th\u01b0\u1edbc l\u1edbn h\u01a1n \u00edt nh\u1ea5t hai l\u1ea7n k\u00edch th\u01b0\u1edbc d\u00e3y s\u1ed1 ban \u0111\u1ea7u n\u00f3 n\u1eb1m trong. V\u00ec v\u1eady m\u00e0 ta th\u1ea5y r\u1eb1ng m\u1ed9t ph\u1ea7n t\u1eed ch\u1ec9 b\u1ecb di chuy\u1ec3n t\u1ed1i \u0111a \\(\\log_2{n}\\) l\u1ea7n, qua \u0111\u00f3 m\u00e0 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n \\log{n})\\).</p>"},{"location":"algo/data-structures/disjoint-set-union/#code-mau_2","title":"Code m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1e5 + 5;\nint n, q;\nint a[N];\n\nstruct DSU{\n    vector&lt;map&lt;int, int&gt;&gt; color;\n    vector&lt;int&gt; parent, sz;\n\n    DSU(int n) : color(n), parent(n), sz(n) {};\n\n    void make_set(int v) {\n        color[v][a[v]] = 1;\n        parent[v] = v;\n        sz[v] = 1;\n    }\n\n    int find_set(int v) {\n        if (v == parent[v]) return v;\n        int p = find_set(parent[v]);\n        parent[v] = p;\n        return p;\n    }\n\n    void union_sets(int a, int b) {\n        a = find_set(a);\n        b = find_set(b);\n        if (a != b) {\n            if (sz[a] &lt; sz[b]) swap(a, b);\n            parent[b] = a;\n            sz[a] += sz[b];\n\n            for (auto p : color[b]) color[a][p.first] += p.second;\n            color[b].clear();\n        } \n    }\n\n    int query(int v, int c) {\n        v = find_set(v);\n        return color[v].find(c) != color[v].end() ? color[v][c] : 0;\n    }\n};\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    cin &gt;&gt; n &gt;&gt; q;\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n\n    DSU g(n + 5);\n    for (int i = 1; i &lt;= n; i++) g.make_set(i);\n    while (q--) {\n        int op, x, y;\n        cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;\n        if (op == 1) g.union_sets(x, y);\n        else cout &lt;&lt; g.query(x, y) &lt;&lt; \"\\n\";\n    }\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n: \\(\\mathcal{O}(n \\log^2{n})\\), c\u00f3 th\u00eam m\u1ed9t \\(\\log\\) do ta ph\u1ea3i l\u01b0u gi\u1eef th\u00f4ng tin b\u1eb1ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u map.</p>"},{"location":"algo/data-structures/disjoint-set-union/#ki-thuat-dsu-tren-cay-sack","title":"K\u0129 thu\u1eadt DSU tr\u00ean c\u00e2y (Sack)","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n s\u1eed d\u1ee5ng \u00fd t\u01b0\u1edfng g\u1ed9p set \u1edf ph\u1ea7n tr\u01b0\u1edbc \u0111\u1ec3 gi\u1ea3i quy\u1ebft m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n truy v\u1ea5n tr\u00ean c\u00e2y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3.</p>"},{"location":"algo/data-structures/disjoint-set-union/#bai-toan_5","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t c\u00e2y c\u00f3 \\(n\\) \u0111\u1ec9nh v\u1edbi g\u1ed1c l\u00e0 \u0111\u1ec9nh \\(1\\), \u0111\u1ec9nh th\u1ee9 \\(i\\) \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u \\(c_i\\). Cho \\(q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng \\(v\\,c\\), v\u1edbi m\u1ed7i truy v\u1ea5n in ra s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh c\u00f3 m\u00e0u \\(c\\) trong c\u00e2y con g\u1ed1c \\(v\\).</p>"},{"location":"algo/data-structures/disjoint-set-union/#loi-giai_4","title":"L\u1eddi gi\u1ea3i","text":"<p>S\u1eed d\u1ee5ng \u00fd t\u01b0\u1edfng g\u1ed9p set \u1edf ph\u1ea7n tr\u01b0\u1edbc, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n \\log^2{n} + q\\log{n})\\). Tuy nhi\u00ean, ta c\u00f2n c\u00f3 th\u1ec3 l\u00e0m t\u1ed1t h\u01a1n v\u1edbi k\u0129 thu\u1eadt DSU tr\u00ean c\u00e2y</p> <p>B\u1eb1ng c\u00e1ch thay \u0111\u1ed5i c\u00e1ch dfs, ta c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf m\u1ed9t \\(\\log\\) c\u1ee7a c\u1ea5u tr\u00fac d\u1eef li\u1ec7u map trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p, qua \u0111\u00f3 m\u00e0 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n \\log{n} + q)\\). Ta s\u1ebd tham kh\u1ea3o \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 hi\u1ec3u h\u01a1n k\u0129 thu\u1eadt n\u00e0y:</p> <pre><code>int sz[N];\nint cnt[N];\n\nvoid pre_dfs(int u, int p) { // M\u1ed9t h\u00e0m dfs ch\u1ea1y tr\u01b0\u1edbc \n                             // \u0111\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c \u0111\u1ed9 l\u1edbn c\u1ee7a t\u1eebng c\u00e2y con\n    sz[u] = 1;\n    for (auto v : g[u]) if (v != p) {\n        pre_dfs(v, u);\n        sz[u] += sz[v];\n    }\n}\n\nvoid update(int u, int p, int delta) {\n    cnt[color[u]] += delta;\n    for (auto v : g[u]) if (v != p) update(v, u, delta);\n} \n\nvoid dfs(int u, int p) {\n    int bigChild = -1;\n    for (auto v : g[u]) if (v != p) {\n        if (bigChild == -1 || sz[v] &gt; sz[bigChild]) bigChild = v;\n    } // T\u00ecm c\u00e2y con l\u1edbn nh\u1ea5t trong \n      // c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh u\n\n    for (auto v : g[u]) if (v != p &amp;&amp; v != bigChild) {\n        dfs(v, u);\n        update(v, u, -1);\n    }\n    if (bigChild != -1) dfs(bigChild, u);\n\n    for (auto v : g[u]) if (v != p &amp;&amp; v != bigChild) update(v, u, 1);\n    cnt[color[u]]++;\n\n    // Tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n t\u1ea1i \u0111\u1ec9nh u, v\u1edbi cnt[c] \n    // l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh c\u00f3 m\u00e0u c trong c\u00e2y con g\u1ed1c u\n}\n</code></pre> <p>V\u1edbi c\u00e2y con g\u1ed1c \\(u\\) \u0111ang x\u00e9t, ta s\u1ebd dfs xu\u1ed1ng gi\u1ea3i b\u00e0i to\u00e1n v\u1edbi \u0111\u1ec9nh \\(v\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(u\\). N\u1ebfu gi\u1ea3i nh\u01b0 b\u00e0i to\u00e1n colquery, \u1edf m\u1ed7i \u0111\u1ec9nh ta s\u1ebd l\u01b0u m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u map \u0111\u1ec3 l\u01b0u s\u1ed1 l\u01b0\u1ee3ng t\u1eebng m\u00e0u trong c\u00e2y con \u0111\u00f3. Sau \u0111\u00f3 ta s\u1ebd g\u1ed9p ch\u00fang l\u1ea1i \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c map ch\u1ee9a s\u1ed1 l\u01b0\u1ee3ng t\u1eebng m\u00e0u trong c\u00e2y con g\u1ed1c \\(u\\) (G\u1ed9p c\u00e1c map c\u1ee7a c\u00e2y con kh\u00f4ng ph\u1ea3i c\u00e2y con l\u1edbn nh\u1ea5t v\u00e0o map c\u1ee7a c\u00e2y con l\u1edbn nh\u1ea5t).</p> <p> /uploads/disjoint-set-union_img17.png </p> <p>Tuy nhi\u00ean, s\u1ef1 t\u1ed1i \u01b0u c\u1ee7a k\u1ef9 thu\u1eadt n\u00e0y ch\u00ednh l\u00e0 ta c\u00f3 th\u1ec3 \u0111\u1ea3o th\u1ee9 t\u1ef1 dfs v\u00e0 tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n offline.</p> <p> /uploads/disjoint-set-union_img16.png </p> <p>Ta s\u1ebd s\u1eed d\u1ee5ng duy nh\u1ea5t m\u1ed9t m\u1ea3ng \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng t\u1eebng m\u00e0u trong m\u1ed9t c\u00e2y con. B\u1eb1ng c\u00e1ch n\u00e0o \u0111\u00f3, \u0111\u1ebfn cu\u1ed1i h\u00e0m dfs c\u1ee7a c\u00e2y con g\u1ed1c \\(u\\), ta c\u00f3 s\u1ebd c\u00f3 m\u1ea3ng \\(cnt\\) v\u1edbi \\(cnt[c]\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh c\u00f3 m\u00e0u \\(c\\) trong c\u00e2y con g\u1ed1c \\(u\\).</p> <p>Do d\u00f9ng chung m\u1ed9t m\u1ea3ng ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u01b0u ri\u00eang t\u1eebng c\u00e2y con trong map ri\u00eang bi\u1ec7t, n\u00ean tr\u01b0\u1edbc khi ta dfs xu\u1ed1ng \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n cho c\u00e1c con ti\u1ebfp theo, ta ph\u1ea3i c\u1eadp nh\u1eadt \"x\u00f3a\" \u0111i c\u00e1c m\u00e0u c\u1ee7a c\u00e1c c\u00e2y con \u0111\u00e3 dfs t\u1eeb tr\u01b0\u1edbc kh\u1ecfi m\u1ea3ng \u0111\u1ec3 tr\u00e1nh ghi \u0111\u00e8 l\u00ean \u0111\u00e1p \u00e1n. Do \u0111\u00f3 ta th\u1ea5y ch\u1ec9 c\u00f3 m\u00e0u trong c\u00e2y con \u0111\u01b0\u1ee3c dfs cu\u1ed1i c\u00f9ng l\u00e0 kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i x\u00f3a \u0111i ngay l\u1eadp t\u1ee9c.</p> <p>G\u1ecdi \u0111\u1ec9nh \\(v\\) c\u00f3 c\u00e2y con l\u1edbn nh\u1ea5t l\u00e0 <code>bigChild</code>. V\u1edbi \u00fd t\u01b0\u1edfng g\u1ed9p m\u00e0u trong c\u00e1c c\u00e2y con kh\u00e1c v\u00e0o c\u00e2y con <code>bigChild</code>, hay n\u00f3i c\u00e1ch kh\u00e1c ta kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p di chuy\u1ec3n c\u00e1c m\u00e0u trong c\u00e2y con <code>bigChild</code>, ta s\u1ebd \u0111\u1ea3o th\u1ee9 t\u1ef1 dfs c\u1ee7a <code>bigChild</code> xu\u1ed1ng cu\u1ed1i c\u00f9ng v\u00e0 gi\u1eef l\u1ea1i c\u00e1c m\u00e0u trong m\u1ea3ng m\u00e0 kh\u00f4ng x\u00f3a \u0111i. Ti\u1ebfp \u0111\u00f3 ta s\u1ebd dfs xu\u1ed1ng c\u00e1c c\u00e2y kh\u00f4ng ph\u1ea3i <code>bigChild</code> ch\u1ec9 \u0111\u1ec3 th\u00eam l\u1ea1i c\u00e1c m\u00e0u v\u00e0o m\u1ea3ng, qua \u0111\u00f3 m\u00e0 t\u00ecm \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng t\u1eebng m\u00e0u trong c\u00e2y con g\u1ed1c \\(u\\). D\u1ec5 th\u1ea5y b\u1eb1ng c\u00e1ch n\u00e0y ta \u0111\u00e3 lo\u1ea1i b\u1ecf ho\u00e0n to\u00e0n vi\u1ec7c s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u map, qua \u0111\u00f3 m\u00e0 gi\u1ea3m \u0111\u01b0\u1ee3c m\u1ed9t \\(\\log\\) trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian.</p> <p>Ta c\u00f3 th\u1ec3 th\u1ea5y r\u00f5 h\u01a1n th\u00f4ng tin m\u00e0 m\u1ea3ng \\(cnt\\) l\u01b0u tr\u1eef trong qu\u00e1 tr\u00ecnh sau \u0111\u00e2y:</p> Ch\u00fa th\u00edch Minh h\u1ecda dfs xu\u1ed1ng c\u00e2y con \\(v_1\\), l\u00fac n\u00e0y trong m\u1ea3ng \\(cnt\\) ch\u1ee9a c\u00e1c m\u00e0u trong c\u00e2y con n\u00e0y \\(v_1\\) kh\u00f4ng ph\u1ea3i <code>bigChild</code>,  do \u0111\u00f3 ta x\u00f3a c\u00e1c m\u00e0u trong c\u00e2y con n\u00e0y ra kh\u1ecfi m\u1ea3ng \\(cnt\\) dfs xu\u1ed1ng c\u00e2y con \\(v_3\\), l\u00fac n\u00e0y trong m\u1ea3ng \\(cnt\\) ch\u1ee9a c\u00e1c m\u00e0u trong c\u00e2y con n\u00e0y \\(v_3\\) kh\u00f4ng ph\u1ea3i <code>bigChild</code>,  do \u0111\u00f3 ta x\u00f3a c\u00e1c m\u00e0u trong c\u00e2y con n\u00e0y ra kh\u1ecfi m\u1ea3ng \\(cnt\\) dfs xu\u1ed1ng c\u00e2y con \\(v_2\\), l\u00fac n\u00e0y trong m\u1ea3ng \\(cnt\\) ch\u1ee9a c\u00e1c m\u00e0u trong c\u00e2y con n\u00e0y \\(v_2\\) l\u00e0 <code>bigChild</code>,  do \u0111\u00f3 ta gi\u1eef nguy\u00ean c\u00e1c m\u00e0u trong c\u00e2y con n\u00e0y trong m\u1ea3ng \\(cnt\\) Th\u00eam c\u00e1c m\u00e0u trong c\u00e2y con \\(v_1\\) v\u00e0o m\u1ea3ng \\(cnt\\) Th\u00eam c\u00e1c m\u00e0u trong c\u00e2y con \\(v_3\\) v\u00e0o m\u1ea3ng \\(cnt\\) Th\u00eam \u0111\u1ec9nh \\(u\\) v\u00e0o m\u1ea3ng \\(cnt\\) <p>L\u00fac n\u00e0y m\u1ea3ng \\(cnt\\) \u0111\u00e3 c\u00f3 \u0111\u1ee7 c\u00e1c m\u00e0u trong c\u00e2y con g\u1ed1c \\(u\\) v\u00e0 ta c\u00f3 th\u1ec3 tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n c\u1ee7a \u0111\u1ec9nh \\(u\\).</p>"},{"location":"algo/data-structures/disjoint-set-union/#code-mau_3","title":"Code m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 5e5 + 5;\nint n, q, color[N];\nint sz[N];\nint cnt[N];\nint res[N]; // res[i] l\u00e0 \u0111\u00e1p \u00e1n c\u1ee7a truy v\u1ea5n th\u1ee9 i\nvector&lt;pair&lt;int, int&gt;&gt; queries[N]; \n        // c\u1eb7p (a, b) trong queries[v] c\u00f3 ngh\u0129a l\u00e0 \u1edf \u0111\u1ec9nh v \n        // c\u00f3 truy v\u1ea5n h\u1ecfi c\u00f3 bao nhi\u00eau \u0111\u1ec9nh trong c\u00e2y con c\u00f3 m\u00e0u a \n        // v\u00e0 s\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a truy v\u1ea5n l\u00e0 b\nvector&lt;int&gt; g[N];\n\nvoid pre_dfs(int u, int p) {\n    sz[u] = 1;\n    for (auto v : g[u]) if (v != p) {\n        pre_dfs(v, u);\n        sz[u] += sz[v];\n    }\n}\n\nvoid update(int u, int p, int delta) {\n    cnt[color[u]] += delta;\n    for (auto v : g[u]) if (v != p) update(v, u, delta);\n} \n\nvoid dfs(int u, int p) {\n    int bigChild = -1;\n    for (auto v : g[u]) if (v != p) {\n        if (bigChild == -1 || sz[v] &gt; sz[bigChild]) bigChild = v;\n    }\n\n    for (auto v : g[u]) if (v != p &amp;&amp; v != bigChild) {\n        dfs(v, u);\n        update(v, u, -1);\n    }\n    if (bigChild != -1) dfs(bigChild, u);\n\n    for (auto v : g[u]) if (v != p &amp;&amp; v != bigChild) update(v, u, 1);\n    cnt[color[u]]++;\n\n    for (auto p : queries[u]) res[p.second] = cnt[p.first];\n}\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    cin &gt;&gt; n &gt;&gt; q;\n\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; color[i];\n\n    for (int i = 1; i &lt; n; i++) {\n        int a, b;\n        cin &gt;&gt; a &gt;&gt; b;\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n\n    for (int i = 1; i &lt;= q; i++) {\n        int v, c;\n        cin &gt;&gt; v &gt;&gt; c;\n        queries[v].push_back({c, i});\n    }\n\n    pre_dfs(1, 0);\n    dfs(1, 0);\n\n    for (int i = 1; i &lt;= q; i++) cout &lt;&lt; res[i] &lt;&lt; \"\\n\";\n\n}\n</code></pre>"},{"location":"algo/data-structures/disjoint-set-union/#tham-khao","title":"Tham kh\u1ea3o","text":"<ul> <li>CP-Algorithms</li> <li>Codeforces ITMO Academy: pilot course</li> <li>Codeforces blog: DSU tr\u00ean c\u00e2y (Sack)</li> </ul>"},{"location":"algo/data-structures/disjoint-set-union/#bai-tap","title":"B\u00e0i t\u1eadp","text":""},{"location":"algo/data-structures/disjoint-set-union/#disjoint-set-union","title":"Disjoint Set Union","text":"<ul> <li>Codeforces ITMO Academy: pilot course</li> <li>Codeforces Problemset</li> <li>VNOJ ILSBIN</li> <li>VOI 2011 B\u00e0i 6</li> <li>VOI 2020 B\u00e0i 2</li> </ul>"},{"location":"algo/data-structures/disjoint-set-union/#ky-thuat-gop-set","title":"K\u1ef9 thu\u1eadt G\u1ed9p set","text":"<ul> <li>Codeforces 1380E</li> <li>SGU 507</li> <li>C\u00e1c b\u00e0i trong ph\u1ea7n DSU tr\u00ean c\u00e2y</li> </ul>"},{"location":"algo/data-structures/disjoint-set-union/#ky-thuat-dsu-tren-cay","title":"K\u1ef9 thu\u1eadt DSU tr\u00ean c\u00e2y","text":"<ul> <li>Codeforces 208E</li> <li>Codeforecs 246E</li> <li>Codeforces 600E</li> <li>Codeforces 570D</li> <li>IOI 2011 - Race</li> </ul>"},{"location":"algo/data-structures/disjoint-set/","title":"Disjoints Sets","text":"<p>Disjoint Sets l\u00e0 1 CTDL r\u1ea5t h\u1eefu d\u1ee5ng, s\u1eed d\u1ee5ng r\u1ea5t nhanh, g\u1ecdn v\u00e0 d\u1ec5 d\u00e0ng. N\u00f3 \u0111\u01b0\u1ee3c d\u00f9ng l\u00e0m n\u1ec1n t\u1ea3ng cho m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n, nh\u01b0 Kruskal\u2019s v\u00e0 Prim\u2019s, 2 thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u1ed3 th\u1ecb.</p> <p>Disjoint Sets, ho\u1eb7c DSU (Disjoint Sets Union) nh\u01b0 t\u00ean g\u1ecdi c\u1ee7a n\u00f3, l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c t\u1eadp h\u1ee3p.</p> <p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng ch\u00fang ta c\u00f3 \\(n\\) c\u00e1i h\u1ed9p v\u00e0 \\(n\\) vi\u00ean s\u1ecfi. C\u00e1c vi\u00ean s\u1ecfi ph\u00e2n bi\u1ec7t. Ban \u0111\u1ea7u m\u1ed7i vi\u00ean s\u1ecfi n\u1eb1m trong m\u1ed9t c\u00e1i h\u1ed9p. ta c\u1ea7n th\u1ef1c hi\u1ec7n 2 lo\u1ea1i truy v\u1ea5n:</p> <ol> <li>Cho h\u1ebft s\u1ecfi \u1edf 2 h\u1ed9p \\(u\\) v\u00e0 \\(v\\) v\u00e0o c\u00f9ng m\u1ed9t h\u1ed9p.</li> <li>Ki\u1ec3m tra 2 vi\u00ean s\u1ecfi \\(i\\) v\u00e0 \\(j\\) c\u00f3 thu\u1ed9c c\u00f9ng m\u1ed9t h\u1ed9p hay kh\u00f4ng</li> </ol> <p>Gi\u1ea3 s\u1eed, ch\u1ec9 c\u00f3 duy nh\u1ea5t 1 b\u1ed9 d\u1ee5ng c\u1ee5 trong 1 h\u1ed9p. Ta c\u00f3 \\(n\\) b\u1ed9 d\u1ee5ng c\u1ee5, \\(n\\) h\u1ed9p, v\u00e0 ban \u0111\u1ea7u, b\u1ed9 th\u1ee9 \\(i\\) s\u1ebd n\u1eb1m trong h\u1ed9p th\u1ee9 \\(i\\).</p> <p>V\u1edbi nh\u1eefng y\u00eau c\u1ea7u tr\u00ean, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng nhi\u1ec1u c\u1ea5u tr\u00fac, nh\u01b0:</p>"},{"location":"algo/data-structures/disjoint-set/#cai-at-disjoint-set-voi-cay","title":"C\u00e0i \u0111\u1eb7t Disjoint Set v\u1edbi C\u00e2y","text":"<p>C\u00e2y l\u00e0 c\u1ea5u tr\u00fac h\u1eefu hi\u1ec7u nh\u1ea5t d\u00f9ng cho DSU. V\u1edbi m\u1ed7i \u0111\u1ec9nh, ta l\u01b0u l\u1ea1i \u0111\u1ec9nh cha c\u1ee7a n\u00f3 (\u0111\u1ec9nh cha c\u1ee7a \u0111\u1ec9nh g\u1ed1c l\u00e0 -1). Ban \u0111\u1ea7u, m\u1ecdi \u0111\u1ec9nh cha \u0111\u01b0\u1ee3c set l\u00e0 -1. C\u00f3 c\u00e1c truy v\u1ea5n t\u00ecm \u0111\u1ec9nh g\u1ed1c c\u1ee7a m\u1ed7i h\u1ed9p (c\u00f3 \u0111\u01b0\u1ee3c g\u1ed1c, ta c\u00f3 th\u1ec3 truy ra v\u1ecb tr\u00ed c\u1ee7a h\u1ed9p) v\u00e0 c\u00e1c truy v\u1ea5n y\u00eau c\u1ea7u h\u1ee3p 2 c\u00e2y l\u1ea1i. \u0110\u1ec3 thu\u1eadt to\u00e1n nhanh h\u01a1n, m\u1ed7i l\u1ea7n t\u00ecm g\u1ed1c c\u1ee7a m\u1ed7i \u0111\u1ec9nh, ta \u0111\u1eb7t \u0111\u1ec9nh cha c\u1ee7a n\u00f3 l\u00e0 g\u1ed1c cho truy v\u1ea5n ti\u1ebfp theo. Lu\u00f4n mu\u1ed1n \u0111\u1ed9 cao c\u1ee7a c\u00e2y l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3, v\u00ec v\u1eady, m\u1ed7i khi nh\u1eadp c\u00e1c h\u1ed9p l\u1ea1i v\u1edbi nhau, ta b\u1ecf c\u00e1c b\u1ed9 d\u1ee5ng c\u1ee5 trong h\u1ed9p c\u00f3 \u00edt b\u1ed9 h\u01a1n v\u00e0o h\u1ed9p c\u00f2n l\u1ea1i.</p> <p>/uploads/tree1.png</p> <p>Code C++ (bmerry)</p> <pre><code>// par[i] = x n\u1ebfu vi\u00ean s\u1ecfi i v\u00e0 vi\u00ean s\u1ecfi x n\u1eb1m trong c\u00f9ng m\u1ed9t h\u1ed9p\n// N\u1ebfu par[i] &lt; 0 th\u00ec vi\u00ean s\u1ecfi i n\u1eb1m trong h\u1ed9p i, v\u00e0 -par[i] ch\u00ednh l\u00e0 s\u1ed1 s\u1ecfi trong h\u1ed9p \u0111\u00f3.\n// Ban \u0111\u1ea7u, kh\u1edfi t\u1ea1o par[i] = -1 v\u1edbi m\u1ecdi i.\n\nint root(int v) {\n    // Cho 1 s\u1ed1 v, t\u00ecm h\u1ed9p ch\u1ee9a vi\u00ean s\u1ecfi v\n    return par[v] &lt; 0\n            ? v\n            : (par[v] = root(par[v])); // Vi\u00ean s\u1ecfi v n\u1eb1m trong c\u00f9ng h\u1ed9p v\u1edbi vi\u00ean s\u1ecfi ch\u1ee9a par[v]\n                                       // Ch\u00fa \u00fd \u1edf \u0111\u00e2y ta g\u00e1n l\u1ea1i par[v] = root(par[v]), k\u0129 thu\u1eadt n\u00e0y\n                                       // \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Path Compression, gi\u00fap gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i\n                                       // thao t\u00e1c xu\u1ed1ng log(n)\n}\n\nvoid merge(int x, int y) {\n    // G\u1ed9p 2 h\u1ed9p ch\u1ee9a vi\u00ean s\u1ecfi x v\u00e0 y v\u00e0o c\u00f9ng 1 h\u1ed9p\n    if ((x = root(x)) == (y = root(y)) {\n        // 2 vi\u00ean s\u1ecfi x v\u00e0 y \u0111\u00e3 thu\u1ed9c c\u00f9ng 1 h\u1ed9p, ta kh\u00f4ng c\u1ea7n l\u00e0m g\u00ec c\u1ea3\n        return ;\n    }\n    if (par[y] &lt; par[x]) {\n        // Ta g\u1ed9p v\u00e0o h\u1ed9p ch\u1ee9a nhi\u1ec1u s\u1ecfi h\u01a1n. K\u0129 thu\u1eadt n\u00e0y g\u1ecdi l\u00e0 Union-by-rank, v\u00e0 c\u0169ng gi\u00fap gi\u1ea3m\n        // \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i thao t\u00e1c xu\u1ed1ng log(n).\n        // N\u1ebfu k\u1ebft h\u1ee3p c\u1ea3 Union-by-rank v\u00e0 Path-compression th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i thao t\u00e1c l\u00e0 ackerman(n),\n        // r\u1ea5t r\u1ea5t nh\u1ecf v\u1edbi n.\n        swap(x, y);\n    }\n    par[x] += par[y];\n    par[y] = x;\n}\n</code></pre>"},{"location":"algo/data-structures/disjoint-set/#cai-at-disjoint-set-voi-mang-vector","title":"C\u00e0i \u0111\u1eb7t Disjoint set v\u1edbi M\u1ea3ng &amp; Vector","text":"<p>Ta l\u01b0u v\u1ecb tr\u00ed c\u00e1c vi\u00ean s\u1ecfi trong m\u1ed9t vector (ho\u1eb7c m\u1ea3ng) v\u00e0 m\u1ed7i khi c\u00f3 truy v\u1ea5n y\u00eau c\u1ea7u nh\u1eadp hai h\u1ed9p, ta b\u1ecf c\u00e1c vi\u00ean s\u1ecfi \u1edf h\u1ed9p c\u00f3 \u00edt vi\u00ean s\u1ecfi h\u01a1n v\u00e0o h\u1ed9p c\u00f2n l\u1ea1i.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng cao v\u00ec v\u1edbi m\u1ed7i vi\u00ean s\u1ecfi, t\u1ed5ng s\u1ed1 l\u1ea7n l\u1ea5y v\u00e0 b\u1ecf n\u00f3 v\u00e0o h\u1ed9p ch\u1ec9 t\u1ed1i \u0111a l\u00e0 \\(log(n)\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p cho \\(n\\) thao t\u00e1c s\u1ebd l\u00e0 \\(O(nlog(n))\\).</p> <p>Khi c\u00e0i \u0111\u1eb7t DSU, c\u00e1ch n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng (do ph\u1ee9c t\u1ea1p h\u01a1n c\u00e1ch tr\u00ean), tuy nhi\u00ean \u00fd t\u01b0\u1edfng n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho nhi\u1ec1u b\u00e0i kh\u00e1c.</p>"},{"location":"algo/data-structures/disjoint-set/#cai-at-disjoint-set-voi-sets-cay-o-en-red-black-trees","title":"C\u00e0i \u0111\u1eb7t Disjoint Set v\u1edbi Sets (C\u00e2y \u0110\u1ecf \u0110en; Red-Black Trees)","text":"<p>M\u1ed9t c\u00e1ch kh\u00e1c l\u00e0 l\u01b0u ch\u00fang trong m\u1ed9t c\u00e2y \u0111\u1ecf \u0111en (trong C++ l\u00e0 set th\u01b0 vi\u1ec7n STL). Ta l\u00e0m y nh\u01b0 \u0111\u00e3 l\u00e0m v\u1edbi vectors, \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(nlog^2n)\\). (1 log cho vi\u1ec7c nh\u1eadp v\u00e0o).</p> <p>B\u00e0i t\u1eadp: (Ph\u1ea3i tham gia nh\u00f3m ACM-OI)</p> <ul> <li>Hamro &amp; Tools</li> <li>TROY Query</li> </ul>"},{"location":"algo/data-structures/disjoint-set/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>Codeforces</li> </ul>"},{"location":"algo/data-structures/fenwick-2d/","title":"C\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n 2 chi\u1ec1u (BIT 2 chi\u1ec1u)","text":"<p>T\u00e1c gi\u1ea3:  - Ph\u1ea1m C\u00f4ng Minh - THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean, \u0110HQGHN </p> <p>Reviewer: - L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - Ph\u1ea1m Ho\u00e0ng Hi\u1ec7p - University of Georgia - Ng\u00f4 Nh\u1eadt Quang - The University of Texas at Dallas </p>"},{"location":"algo/data-structures/fenwick-2d/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>BIT 2 chi\u1ec1u l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u m\u1edf r\u1ed9ng c\u1ee7a BIT 1 chi\u1ec1u. C\u00f4ng d\u1ee5ng ch\u00ednh c\u1ee7a BIT 2 chi\u1ec1u l\u00e0 x\u1eed l\u00fd c\u00e1c truy v\u1ea5n l\u00ean h\u00ecnh ch\u1eef nh\u1eadt con tr\u00ean m\u1ed9t m\u1ea3ng 2 chi\u1ec1u. </p> <p>B\u00e0i vi\u1ebft y\u00eau c\u1ea7u ng\u01b0\u1eddi \u0111\u1ecdc hi\u1ec3u r\u00f5 c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a BIT 1 chi\u1ec1u. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc v\u1ec1 BIT 1 chi\u1ec1u t\u1ea1i \u0111\u00e2y: VNOI - C\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n.</p>"},{"location":"algo/data-structures/fenwick-2d/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>C\u00e1c \u0111\u1ecbnh ngh\u0129a:</p> <ul> <li> <p>Trong m\u1ea3ng hai chi\u1ec1u \\(A\\), \\(A[u][v]\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed h\u00e0ng th\u1ee9 \\(u\\), c\u1ed9t th\u1ee9 \\(v\\).</p> </li> <li> <p>\\(A[u:x][v:y]\\) l\u00e0 h\u00ecnh ch\u1eef nh\u1eadt con c\u00f3 g\u00f3c tr\u00e1i tr\u00ean l\u00e0 \\((u, v)\\) v\u00e0 g\u00f3c ph\u1ea3i d\u01b0\u1edbi l\u00e0 \\((x, y)\\). N\u1ebfu \\(u &gt; x\\) ho\u1eb7c \\(v &gt; y\\) th\u00ec h\u00ecnh ch\u1eef nh\u1eadt con r\u1ed7ng.</p> </li> <li> <p>\\(\\sum A[u:x][v:y]\\) l\u00e0 t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong h\u00ecnh ch\u1eef nh\u1eadt con \\(A[u:x][v:y]\\).</p> </li> </ul> <p>\u0110\u1ec1 b\u00e0i:</p> <p>Cho m\u1ea3ng 2 chi\u1ec1u \\(A\\) c\u00f3 \\(N\\) h\u00e0ng \\(M\\) c\u1ed9t (\u0111\u00e1nh s\u1ed1 t\u1eeb 1). C\u00f3 \\(Q\\) truy v\u1ea5n thu\u1ed9c 2 lo\u1ea1i:</p> <ul> <li>\\(1\\) \\(u\\) \\(v\\) \\(x\\): C\u1ed9ng \\(x\\) v\u00e0o \\(A[u][v]\\).</li> <li>\\(2\\) \\(u\\) \\(v\\): T\u00ednh \\(\\sum A[1:u][1:v]\\).</li> </ul> <p>Gi\u1edbi h\u1ea1n: \\(1 \\leq N, M \\leq 10^3\\), \\(1 \\leq Q \\leq 2 \\times 10^5\\) </p>"},{"location":"algo/data-structures/fenwick-2d/#thuat-toan-ngay-tho-1","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 1","text":"<p>V\u1edbi truy v\u1ea5n 1, ta c\u1ed9ng tr\u1ef1c ti\u1ebfp v\u00e0o m\u1ea3ng. V\u1edbi truy v\u1ea5n 2, ta duy\u1ec7t qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a \\(A[1:u][1:v]\\) v\u00e0 c\u1ed9ng gi\u00e1 tr\u1ecb v\u00e0o k\u1ebft qu\u1ea3.</p> <pre><code>int A[N][M];\n\nvoid add(int u, int v, int x){\n    A[u][v] += x;\n}\n\nint query(int u, int v){\n    int sum = 0;\n    for(int i = 1; i &lt;= u; i++){\n        for(int j = 1; j &lt;= v; j++){\n            sum += A[i][j];\n        }\n    }\n    return sum;\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick-2d/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi c\u1eadp nh\u1eadt: \\(O(1)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(O(u \\times v) = O(N \\times M)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(Q + Q \\times N \\times M) = O(Q \\times N \\times M)\\)</li> </ul>"},{"location":"algo/data-structures/fenwick-2d/#thuat-toan-ngay-tho-2","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 2","text":"<p>Ta \u0111\u1ecbnh ngh\u0129a \\(lsb(x)\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a bit \\(1\\) nh\u1ecf nh\u1ea5t trong bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a \\(x\\). V\u00ed d\u1ee5:</p> <ul> <li>\\(lsb((11)_{10}) = lsb((1011)_2) = 1\\)</li> <li>\\(lsb((24)_{10}) = lsb((11000)_2) = 8\\)</li> </ul> <p>Ta s\u1ebd l\u01b0u \\(n\\) BIT 1 chi\u1ec1u, m\u1ed7i BIT qu\u1ea3n l\u00fd m\u1ed9t h\u00e0ng.</p> <p>Nh\u01b0 \u0111\u00e3 gi\u1edbi thi\u1ec7u trong b\u00e0i vi\u1ebft BIT 1 chi\u1ec1u, ph\u1ea7n t\u1eed th\u1ee9 \\(v\\) trong BIT 1 chi\u1ec1u s\u1ebd l\u01b0u t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([i-lsb(i)+1, i]\\). \u1ede \u0111\u00e2y, ph\u1ea7n t\u1eed th\u1ee9 \\(j\\) c\u1ee7a BIT th\u1ee9 \\(i\\) s\u1ebd l\u01b0u \\(\\sum A[i:i][j-lsb(j) + 1 : j]\\).</p> <p>\u0110\u1ed1i v\u1edbi truy v\u1ea5n 1 ta update BIT c\u1ee7a h\u00e0ng \\(u\\). C\u00f2n \u0111\u1ed1i v\u1edbi truy v\u1ea5n 2 ta duy\u1ec7t qua v\u00e0 truy v\u1ea5n tr\u00ean t\u1eebng BIT c\u1ee7a c\u00e1c h\u00e0ng t\u1eeb \\(1\\) \u0111\u1ebfn \\(u\\).</p> <pre><code>int A[N][M], BIT[N][M];\n\nvoid add(int u, int v, int x){\n    for(v; v &lt;= m; v += v&amp;(-v))BIT[u][v]+=x;\n}\n\nint query(int u, int v){\n    int sum = 0;\n    for(int i = 1; i &lt;= u; i++){\n        for(int j = v; j &gt; 0; j -= j&amp;(-j))sum += BIT[i][j];\n    }\n    return sum;\n}\n\nvoid preprocess(){\n    for(int i = 1; i &lt;= n; i++){\n        for(int j = 1; j &lt;= m; j++){\n            add(i, j, A[i][j]);\n        }\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick-2d/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(O(N \\times M \\times \\log M)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi c\u1eadp nh\u1eadt: \\(O(\\log M)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(O(u \\times \\log M) = O(N \\times \\log M)\\)</li> <li>C\u00f3 Q truy v\u1ea5n, n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(Q \\times \\log M + Q \\times N \\times \\log M) = O(Q \\times N \\times \\log M)\\)</li> </ul>"},{"location":"algo/data-structures/fenwick-2d/#bit-2-chieu","title":"BIT 2 chi\u1ec1u","text":"<p>Ta g\u1ecdi BIT trong ph\u1ea7n ng\u00e2y th\u01a1 2 l\u00e0 \\(BIT_{nt}\\). Nh\u01b0 v\u1eady \\(BIT_{nt}[i][j] = \\sum A[i:i][j-lsb(j) + 1 : j]\\)</p> <p>T\u1eeb thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 2, thay v\u00ec s\u1eed d\u1ee5ng \\(n\\) BIT 1 chi\u1ec1u \u0111\u1ed9c l\u1eadp, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t BIT 1 chi\u1ec1u l\u1edbn \u0111\u1ec3 qu\u1ea3n l\u00fd to\u00e0n b\u1ed9 \\(n\\) BIT 1 chi\u1ec1u. Nh\u01b0 v\u1eady, m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a BIT l\u1edbn l\u00e0 m\u1ed9t BIT nh\u1ecf g\u1ed3m \\(m\\) ph\u1ea7n t\u1eed, BIT nh\u1ecf th\u1ee9 \\(i\\) qu\u1ea3n l\u00fd th\u00f4ng tin v\u1ec1 c\u00e1c \\(BIT_{nt}\\) trong \u0111o\u1ea1n \\([i-lsb(i)+1, i]\\).</p> <p>Trong BIT 2 chi\u1ec1u, ph\u1ea7n t\u1eed th\u1ee9 \\(j\\) c\u1ee7a BIT nh\u1ecf th\u1ee9 \\(i\\) s\u1ebd l\u01b0u:</p> \\[\\sum_{k = i-lsb(i)+1}^iBIT_{nt}[k][j]\\] <p>V\u00ec \\(BIT_{nt}[k][j] = A[k:k][j-lsb(j) + 1 : j]\\) n\u00ean t\u1ed5ng n\u00e0y t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi:</p> \\[ \\sum_{k = i-lsb(i)+1}^iA[k:k][j-lsb(j) + 1 : j] \\\\ \\] <p>Ta c\u00f3 th\u1ec3 vi\u1ebft l\u1ea1i bi\u1ec3u th\u1ee9c th\u00e0nh:</p> \\[ \\sum A[i - lsb(i) + 1:i][j-lsb(j) + 1 : j] \\] <p>Nh\u01b0 v\u1eady ph\u1ea7n t\u1eed th\u1ee9 \\(j\\) c\u1ee7a BIT th\u1ee9 \\(i\\) trong BIT 2 chi\u1ec1u l\u01b0u t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong h\u00ecnh ch\u1eef nh\u1eadt con c\u00f3 g\u00f3c tr\u00e1i tr\u00ean l\u00e0 \\((i - lsb(i) + 1, j-lsb(j) + 1)\\) v\u00e0 g\u00f3c ph\u1ea3i d\u01b0\u1edbi l\u00e0 \\((i, j)\\).</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 h\u00ecnh minh h\u1ecda cho tr\u01b0\u1eddng h\u1ee3p \\(N = 3, M = 4\\). </p> <p></p>"},{"location":"algo/data-structures/fenwick-2d/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ta khai b\u00e1o BIT 2 chi\u1ec1u d\u01b0\u1edbi d\u1ea1ng m\u1ed9t m\u1ea3ng \\(N \\times M\\) , trong \u0111\u00f3 <code>BIT[u][v]</code> l\u01b0u gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 \\(v\\) trong BIT th\u1ee9 \\(u\\);</p> <pre><code>int BIT[N][M];\n</code></pre> <p>H\u00e0m \u0111\u1ec3 update:</p> <pre><code>void add(int u, int v, int x){\n    for(int i = u; i &lt;= n; i += i&amp;(-i)){\n        for(int j = v; j &lt;= m; j += j&amp;(-j))BIT[i][j]+=x;\n    }\n}\n</code></pre> <p>H\u00e0m \u0111\u1ec3 truy v\u1ea5n:</p> <pre><code>int query(int u, int v){\n    int sum = 0;\n    for(int i = u; i &gt; 0; i -= i&amp;(-i)){\n        for(int j = v; j &gt; 0; j -= j&amp;(-j))sum += BIT[i][j];\n    }\n    return sum;\n}\n</code></pre> <p>\u0110\u1ec3 t\u00ednh t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong m\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt nh\u1ea5t \u0111\u1ecbnh, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u1ed5ng ti\u1ec1n t\u1ed1 2 chi\u1ec1u, c\u00f3 c\u00f4ng th\u1ee9c nh\u01b0 sau: $$ \\begin{align} \\sum A[a:u][b:v] &amp;= \\sum A[1:u][1:v] - \\sum A[1:a-1][1:v]\\ &amp;- \\sum A[1:u][1:b-1] + \\sum A[1:a-1][1:b-1] \\end{align} $$</p>"},{"location":"algo/data-structures/fenwick-2d/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi c\u1eadp nh\u1eadt: \\(O(\\log N \\times \\log M)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(O(\\log N \\times \\log M)\\)</li> <li>C\u00f3 Q truy v\u1ea5n, n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(Q \\times \\log N \\times \\log M)\\)</li> </ul>"},{"location":"algo/data-structures/fenwick-2d/#cap-nhat-hinh-chu-nhat-con-truy-van-phan-tu","title":"C\u1eadp nh\u1eadt h\u00ecnh ch\u1eef nh\u1eadt con, truy v\u1ea5n ph\u1ea7n t\u1eed","text":"<p>Ta thay \u0111\u1ed5i b\u00e0i to\u00e1n ban \u0111\u1ea7u nh\u01b0 sau:</p> <ul> <li>\\(1\\) \\(a\\) \\(b\\) \\(u\\) \\(v\\) \\(x\\): C\u1ed9ng \\(x\\) v\u00e0o c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \\(A[a:u][b:v]\\)</li> <li>\\(2\\) \\(u\\) \\(v\\): T\u00ednh \\(A[u][v]\\)</li> </ul> <p>T\u01b0\u01a1ng t\u1ef1 v\u1edbi BIT 1 chi\u1ec1u, ta s\u1ebd s\u1eed d\u1ee5ng m\u1ea3ng hi\u1ec7u \u0111\u1ec3 c\u1eadp nh\u1eadt.</p> <p>Ta c\u00f3: $$ \\begin{aligned} \\sum A[1:i][1:j] &amp;= \\sum A[1:i-1][1:j] + \\sum A[1:i][1:j-1] \\ &amp;- \\sum A[1:i-1][1:j-1] + \\sum A[i][j] \\end{aligned} $$</p> <p>Do \u0111\u00f3, ta c\u00f3 th\u1ec3 l\u01b0u \\(D[i][j] = A[i][j] - A[i-1][j] - A[i][j-1] + A[i-1][j-1]\\). Khi \u0111\u00f3, \\(A[i][j] = \\sum D[1:i][1:j]\\)</p> <p>Khi ta th\u1ef1c hi\u1ec7n truy v\u1ea5n \\(1\\), c\u00f3 \\(4\\) gi\u00e1 tr\u1ecb c\u1ee7a \\(D\\) thay \u0111\u1ed5i:</p> <ul> <li>\\(D[a][b]\\) t\u0103ng l\u00ean \\(x\\)</li> <li>\\(D[u+1][b]\\) gi\u1ea3m \u0111i \\(x\\)</li> <li>\\(D[a][v+1]\\) gi\u1ea3m \u0111i \\(x\\)</li> <li>\\(D[u+1][v+1]\\) t\u0103ng l\u00ean \\(x\\)</li> </ul> <p>N\u1ebfu v\u1eabn ch\u01b0a r\u00f5, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o h\u00ecnh minh h\u1ecda sau:</p> <p></p> <p></p>"},{"location":"algo/data-structures/fenwick-2d/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>H\u00e0m c\u1eadp nh\u1eadt:</p> <pre><code>void rectAdd(int a, int b, int u, int v, int x){\n    add(a, b, x);\n    add(u+1, v+1, x);\n    add(u+1, b, -x);\n    add(a, v+1, -x);\n}\n</code></pre> <p>H\u00e0m truy v\u1ea5n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 ph\u1ea7n tr\u01b0\u1edbc.</p>"},{"location":"algo/data-structures/fenwick-2d/#cap-nhat-hinh-chu-nhat-con-truy-van-hinh-chu-nhat-con","title":"C\u1eadp nh\u1eadt h\u00ecnh ch\u1eef nh\u1eadt con, truy v\u1ea5n h\u00ecnh ch\u1eef nh\u1eadt con","text":"<p>Ta thay \u0111\u1ed5i b\u00e0i to\u00e1n ban \u0111\u1ea7u:</p> <ul> <li> <p>\\(1\\) \\(a\\) \\(b\\) \\(u\\) \\(v\\) \\(x\\): C\u1ed9ng \\(x\\) v\u00e0o c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \\(A[a:u][b:v]\\)</p> </li> <li> <p>\\(2\\) \\(u\\) \\(v\\): T\u00ednh \\(\\sum A[1:u][1:v]\\)</p> </li> </ul> <p>Ta ti\u1ebfp t\u1ee5c s\u1eed d\u1ee5ng \u00fd t\u01b0\u1edfng m\u1ea3ng hi\u1ec7u. Do \\(A[i][j] = \\sum D[1:i][1:j]\\) n\u00ean ta c\u00f3:</p> \\[ \\begin{aligned} \\sum A[1:i][1:j] &amp;= \\sum_{k=1}^{i}\\sum_{l=1}^{j}A[k][l]\\\\ &amp;=\\sum_{k=1}^{i}\\sum_{l=1}^{j}\\sum D[1:k][1:l]\\\\ &amp;=\\sum_{k=1}^{i}\\sum_{l=1}^{j}\\sum_{a=1}^l\\sum_{b=1}^k D[a][b]\\\\ &amp;=\\sum_{k=1}^{i}\\sum_{l=1}^{j}(i-k+1)(j-l+1)D[k][l]\\\\ &amp;=\\sum_{k=1}^i\\sum_{l=1}^j((i+1)\\times (j+1)\\times D[k][l] - (j+1)\\times k\\times D[k][l]\\\\ &amp;-(i+1)\\times l\\times D[k][l] + k\\times l\\times D[k][l])\\\\ &amp;= \\sum_{k=1}^i\\sum_{l=1}^j (i+1)\\times(j+1)\\times D[k][l] - \\sum_{k=1}^i\\sum_{l=1}^j (j+1)\\times k \\times D[k][l] \\\\ &amp;- \\sum_{k=1}^i\\sum_{l=1}^j (i+1)\\times l \\times D[k][l] + \\sum_{k=1}^i\\sum_{l=1}^j k \\times l \\times D[k][l] \\end{aligned} \\] <p>D\u1ef1a v\u00e0o c\u00f4ng th\u1ee9c bi\u1ebfn \u0111\u1ed5i \u1edf tr\u00ean, ta c\u1ea7n duy tr\u00ec \\(D[i][j], i\\times D[i][j], j\\times D[i][j], i\\times j\\times D[i][j]\\) b\u1eb1ng b\u1ed1n BIT: <pre><code>int BIT[4][N][M]; // {D[i][j]; i*D[i][j]; j*D[i][j]; i*j*D[i][j]}\n\nvoid add(int u, int v, int x){\n    for(int i = u; i &lt;= n; i += i&amp;(-i)){\n        for(int j = v; j &lt;= m; j += j&amp;(-j)){\n            BIT[0][i][j] += x;\n            BIT[1][i][j] += u * x;\n            BIT[2][i][j] += v * x;\n            BIT[3][i][j] += u * v * x;\n        }\n    }\n}\n\nvoid rectAdd(int a, int b, int u, int v, int x){\n    add(a, b, x);\n    add(a, v + 1, -x);\n    add(u + 1, b, -x);\n    add(u + 1, v + 1, x);\n}\n</code></pre> Khi truy v\u1ea5n, ta l\u1ea5y t\u1eedng h\u1ec7 s\u1ed1 nh\u00e2n l\u00ean r\u1ed3i c\u1ed9ng tr\u1eeb \u0111\u1ec3 ra k\u1ebft qu\u1ea3</p> <pre><code>int query(int u, int v){\n    int a[4] = {0, 0, 0, 0};\n    for(int ty = 0; ty &lt; 4; ty++){\n        for(int i = u; i &gt; 0; i -= i&amp;(-i)){\n            for(int j = v; j &gt; 0; j -= j&amp;(-j)){\n                a[ty] += BIT[ty][i][j];\n            }\n        }\n    }\n    return a[0]*(u + 1)*(v + 1) - a[1]*(v + 1) - a[2]*(u + 1) + a[3];\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick-2d/#ki-thuat-nen-bit-2-chieu","title":"K\u0129 thu\u1eadt n\u00e9n BIT 2 chi\u1ec1u","text":"<p>Ph\u1ea7n n\u00e0y \u0111\u01b0\u1ee3c l\u1ea5y nhi\u1ec1u c\u1ea3m h\u1ee9ng t\u1eeb blog c\u00e1 n\u00f3c c\u1eafn c\u00e1p</p> <p>Ch\u00fa \u00fd k\u0129 thu\u1eadt n\u00e0y ch\u1ec9 d\u00f9ng \u0111\u01b0\u1ee3c khi ta bi\u1ebft tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n.</p> <p>Ta thay \u0111\u1ed5i gi\u1edbi h\u1ea1n b\u00e0i to\u00e1n ban \u0111\u1ea7u th\u00e0nh \\(1 \\leq N, M, Q \\leq 10^5\\). </p> <p>Ta s\u1ebd kh\u00f4ng th\u1ec3 l\u01b0u \u0111\u01b0\u1ee3c to\u00e0n b\u1ed9 BIT 2 chi\u1ec1u b\u1eb1ng m\u1ed9t m\u1ea3ng \\(N \\times M\\), n\u1ebfu s\u1eed d\u1ee5ng <code>std::map</code> hay <code>std::unordered_map</code> th\u00ec code s\u1ebd kh\u00f4ng \u0111\u1ee7 nhanh \u0111\u1ec3 AC.</p> <p>Tuy nhi\u00ean, ta nh\u1eadn th\u1ea5y r\u1eb1ng, v\u1edbi m\u1ed7i truy v\u1ea5n, ch\u1ec9 c\u00f3 \\(\\log N\\) BIT \u0111\u01b0\u1ee3c duy\u1ec7t qua, v\u00e0 m\u1ed7i BIT ch\u1ec9 c\u00f3 thao t\u00e1c l\u00e0 c\u1ed9ng m\u1ed9t ph\u1ea7n t\u1eed v\u00e0 t\u00ednh t\u1ed5ng m\u1ed9t ti\u1ec1n t\u1ed1. V\u00ec v\u1eady, \u0111\u1ed1i v\u1edbi m\u1ed7i BIT, ta c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed \u0111\u01b0\u1ee3c c\u1ed9ng v\u00e0 \u0111\u01b0\u1ee3c truy v\u1ea5n tr\u01b0\u1edbc, sau \u0111\u00f3 ti\u1ebfn h\u00e0nh r\u1eddi r\u1ea1c h\u00f3a c\u00e1c v\u1ecb tr\u00ed \u0111\u00f3. Do c\u00f3 \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n t\u1ea1o th\u00eam t\u1ed1i \u0111a \\(1\\)  v\u1ecb tr\u00ed tr\u00ean \\(\\log N\\) BIT n\u00ean c\u00f3 t\u1ed5ng c\u1ed9ng \\(Q \\times \\log N\\) v\u1ecb tr\u00ed c\u1ea7n l\u01b0u. \u0110\u1ec3 l\u01b0u nh\u01b0 v\u1eady, ta t\u1ea1o 2 h\u00e0m m\u1edbi ch\u1ec9 \u0111\u1ec3 l\u01b0u c\u00e1c v\u1ecb tr\u00ed \u0111\u01b0\u1ee3c truy v\u1ea5n.</p> <pre><code>vector&lt;int&gt; pos[N];\nvector&lt;int&gt; BIT[N];\n\nvoid fakeAdd(int u, int v, int x){\n    for(u; u &lt;= n; u += u&amp;(-u)){\n        pos[u].push_back(v);\n    }\n}\n\nvoid fakeQuery(int u, int v){\n    for(u; u &lt;= n; u += u&amp;(-u)){\n        pos[u].push_back(v);\n    }\n}\n</code></pre> <p>Sau khi l\u01b0u c\u00e1c v\u1ecb tr\u00ed c\u1ea7n thi\u1ebft, ta ti\u1ebfn h\u00e0nh r\u1eddi r\u1ea1c h\u00f3a tr\u00ean t\u1eebng BIT.</p> <pre><code>void compress(){\n    for(int i = 1; i &lt;= n; i++){\n        pos[i].push_back(0);\n        sort(pos[i].begin(), pos[i].end());\n        pos[i].erase(unique(pos[i].begin(), pos[i].end()), pos[i].end());\n        BIT[i].assign(pos[i].size(), 0);\n    }\n}\n</code></pre> <p>Khi \u0111\u00e3 r\u1eddi r\u1ea1c h\u00f3a xong, ta th\u1ef1c hi\u1ec7n c\u00e1c truy v\u1ea5n nh\u01b0 th\u01b0\u1eddng. L\u01b0u \u00fd l\u00fac n\u00e0y m\u1ea3ng <code>pos</code> ch\u1ec9 \u0111\u1ec3 \u00e1nh x\u1ea1 l\u1ea1i index tr\u00ean m\u1ea3ng \u0111\u00e3 \u0111\u01b0\u1ee3c r\u1eddi r\u1ea1c h\u00f3a. </p> <pre><code>void add(int u, int v, int x){\n    for(int i = u; i &lt;= n; i += i&amp;(-i)){\n        for(int j = lower_bound(pos[i].begin(), pos[i].end(), v) - pos[i].begin(); j &lt; BIT[i].size(); j += j&amp;(-j)){\n            BIT[i][j] += x;\n        }\n    }\n}\n\nvoid query(int u, int v){\n    int sum = 0;\n    for(int i = u; i &gt; 0; i -= i&amp;(-i)){\n        for(int j = lower_bound(pos[i].begin(), pos[i].end(), v) - pos[i].begin(); j &gt; 0; j -= j&amp;(-j)){\n            sum += BIT[i][j];\n        }\n    }\n    return sum;\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick-2d/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>SPOJ - MATSUM</li> <li>Codeforces - The Untended Antiquity</li> <li>DHBB 2022 - Thao t\u00e1c tr\u00ean b\u1ea3ng</li> <li>Thi th\u1eed VNOI - \u0110\u1ebfm ngh\u1ecbch th\u1ebf</li> <li>LQDOJ - Khu R\u1eebng 5</li> <li>LQDOJ - Khu R\u1eebng 6</li> <li>VNOJ - Another Longest Increasing Subsequence Problem</li> </ul>"},{"location":"algo/data-structures/fenwick/","title":"C\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n (Binary Indexed Tree)","text":"<p>T\u00e1c gi\u1ea3:  - B\u00f9i Nguy\u1ec5n \u0110\u1ee9c T\u00e2n - Ph\u1ed5 th\u00f4ng N\u0103ng khi\u1ebfu, \u0110\u1ea1i h\u1ecdc Qu\u1ed1c gia Th\u00e0nh ph\u1ed1 H\u1ed3 Ch\u00ed Minh - L\u00ea Minh Ho\u00e0ng - Ph\u1ed5 th\u00f4ng N\u0103ng khi\u1ebfu, \u0110\u1ea1i h\u1ecdc Qu\u1ed1c gia Th\u00e0nh ph\u1ed1 H\u1ed3 Ch\u00ed Minh</p> <p>Reviewer: - Nguy\u1ec5n Xu\u00e2n T\u00f9ng - \u0110\u1ea1i h\u1ecdc Qu\u1ed1c T\u1ebf, \u0110\u1ea1i h\u1ecdc Qu\u1ed1c gia Th\u00e0nh ph\u1ed1 H\u1ed3 Ch\u00ed Minh</p>"},{"location":"algo/data-structures/fenwick/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n (t\u00ean ti\u1ebfng Anh l\u00e0 Binary Indexed Tree) hay c\u00e2y Fenwick l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng kh\u00e1 ph\u1ed5 bi\u1ebfn trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u v\u00ec c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nhanh, d\u1ec5 d\u00e0ng so v\u1edbi c\u00e1c CTDL kh\u00e1c.</p>"},{"location":"algo/data-structures/fenwick/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ea3ng \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed (\u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\)). C\u00f3 \\(Q\\) truy v\u1ea5n thu\u1ed9c 2 lo\u1ea1i: - \\(1\\) \\(u\\) \\(v\\): c\u1ed9ng \\(v\\) v\u00e0o \\(A[u]\\). - \\(2\\) \\(p\\): t\u00ednh t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(A[1]\\), \\(A[2]\\), \\(A[3]\\), ..., \\(A[p]\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(N, Q \\le 2 \\cdot 10^5\\)</p>"},{"location":"algo/data-structures/fenwick/#ngay-tho-1","title":"Ng\u00e2y th\u01a1 1","text":"<p>V\u1edbi truy v\u1ea5n lo\u1ea1i 1, ta \u0111\u01a1n thu\u1ea7n t\u0103ng ph\u1ea7n t\u1eed \\(a[u]\\) th\u00eam \\(v\\). V\u1edbi truy v\u1ea5n lo\u1ea1i 2, ta duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([1 \\dots p]\\) v\u00e0 c\u1ed9ng gi\u00e1 tr\u1ecb v\u00e0o bi\u1ebfn k\u1ebft qu\u1ea3.</p> <pre><code>const int N = 200003;\nint a[N];\n\nvoid update(int u, int x) {\n    a[u] = a[u] + x;\n}\n\nint getSum(int p) {\n    int ans = 0;\n    for (int i = 1; i &lt;= p; ++i)\n        ans = ans + a[i];\n    return ans;\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi update: \\(\\mathcal{O}(1)\\).</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(\\mathcal{O}(p) = \\mathcal{O}(N)\\). </li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(Q + Q \\cdot N) = \\mathcal{O}(Q \\cdot N)\\)</li> <li>N\u1ebfu ch\u01b0a bi\u1ebft v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc \u1edf \u0111\u00e2y.</li> </ul> <p>\u0110\u1ed1i chi\u1ebfu gi\u1edbi h\u1ea1n, c\u00e1ch \"ng\u00e2y th\u01a1\" tr\u00ean t\u1ecf ra ch\u1eadm ch\u1ea1p, kh\u00f4ng \u0111\u1ee7 \u0111\u1ec3 x\u1eed l\u00ed y\u00eau c\u1ea7u b\u00e0i to\u00e1n.</p>"},{"location":"algo/data-structures/fenwick/#ngay-tho-2","title":"Ng\u00e2y th\u01a1 2","text":"<p>Nh\u1eadn th\u1ea5y \u0111\u00e2y l\u00e0 m\u1ed9t d\u1ea1ng c\u1ee7a b\u00e0i to\u00e1n Range Sum Query, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng m\u1ea3ng c\u1ed9ng d\u1ed3n (prefix sum) \u0111\u1ec3 t\u00ednh nhanh t\u1ed5ng m\u1ed9t \u0111o\u1ea1n.</p> <p>Khi c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb m\u1ed9t ph\u1ea7n t\u1eed, ta \u0111\u1ed3ng th\u1eddi c\u1eadp nh\u1eadt t\u1ea5t c\u1ea3 c\u00e1c prefix ch\u1ee9a ph\u1ea7n t\u1eed \u0111\u00f3.</p> <pre><code>int sum[N]; \n\nvoid preprocess() {\n    sum[1] = a[1];\n    for (int i = 2; i &lt;= n; ++i) {\n        sum[i] = sum[i - 1] + a[i];\n    }\n}\n\nvoid update(int u, int x) {\n    for (int i = u; i &lt;= n; ++i) {\n        sum[i] = sum[i] + x;\n    }\n}\n\nint getSum(int p) {\n    return sum[p];\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi update: \\(\\mathcal{O}(p)\\) = \\(\\mathcal{O}(N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(\\mathcal{O}(1)\\)</li> </ul> <p>N\u1ebfu b\u00e0i to\u00e1n kh\u00f4ng c\u00f3 truy v\u1ea5n c\u1eadp nh\u1eadt, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(Q + N)\\), \u0111\u1ee7 nhanh \u0111\u1ec3 gi\u1ea3i quy\u1ebft. Tuy nhi\u00ean, khi c\u00f3 thao t\u00e1c c\u1eadp nh\u1eadt, \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ecb \u0111\u1ea9y l\u00ean \\(\\mathcal{O}(Q * N)\\) - t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch ng\u00e2y th\u01a1 1.</p> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3, ta c\u1ea7n m\u1ed9t CTDL c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u00ednh ch\u1ea5t prefix sum \u0111\u1ec3 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 nhanh, \u0111\u1ed3ng th\u1eddi c\u00f3 th\u1ec3 nhanh ch\u00f3ng c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb cho prefix.</p>"},{"location":"algo/data-structures/fenwick/#cay-chi-so-nhi-phan","title":"C\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n","text":"<p>C\u1ea5u tr\u00fac prefix sum \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n qua s\u01a1 \u0111\u1ed3 sau:</p> <p></p> <p>Nh\u1eadn x\u00e9t: M\u1ed7i ph\u1ea7n t\u1eed \\(sum[i]\\) ch\u1ee9a t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed t\u1eeb \\([1\\dots i]\\); v\u00ec th\u1ebf, ph\u1ea7n t\u1eed \\(sum[i]\\) s\u1ebd ch\u1ee9a ph\u1ea7n t\u1eed \\(a[j]\\) n\u1ebfu th\u1ecfa \\(i \\ge j\\), s\u1ed1 ph\u1ea7n t\u1eed \\(sum\\) c\u1ea7n c\u1eadp nh\u1eadt l\u00e0 \\(j - i + 1\\), g\u1ea7n t\u01b0\u01a1ng \u0111\u01b0\u01a1ng \u0111\u1ed9 d\u00e0i c\u1ee7a m\u1ea3ng.</p> <p>\u0110\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9 c\u1eadp nh\u1eadt ph\u1ea7n t\u1eed, c\u1ea7n b\u1ed1 tr\u00ed l\u1ea1i ph\u1ea1m vi c\u1ee7a t\u1eebng \u0111o\u1ea1n g\u1eafn v\u1edbi \\(sum[i]\\) \u0111\u1ec3 c\u1ef1c ti\u1ec3u s\u1ed1 ph\u1ea7n t\u1eed \\(sum\\) c\u1ea7n c\u1eadp nh\u1eadt nh\u01b0ng v\u1eabn ph\u1ea3i \u0111\u1ea3m b\u1ea3o t\u00ednh li\u00ean t\u1ee5c \u0111\u1ec3 \u00e1p d\u1ee5ng t\u00ednh ch\u1ea5t c\u1ee7a prefix sum.</p>"},{"location":"algo/data-structures/fenwick/#gioi-thieu-tong-quat","title":"Gi\u1edbi thi\u1ec7u t\u1ed5ng qu\u00e1t","text":"<p>M\u1ed7i ch\u1ec9 s\u1ed1 \\(n\\) \u0111\u1ec1u c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n b\u1eb1ng t\u1ed5ng c\u1ee7a c\u00e1c l\u0169y th\u1eeba c\u01a1 s\u1ed1 \\(2\\), v\u00ec th\u1ebf, \u0111\u1ec3 t\u00ednh t\u1ed5ng c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \\([1 \\ldots n]\\), ta c\u00f3 th\u1ec3 t\u00e1ch \u0111o\u1ea1n n\u00e0y th\u00e0nh c\u00e1c \u0111o\u1ea1n nh\u1ecf h\u01a1n c\u00f3 \u0111\u1ed9 d\u00e0i \\(2^k\\) v\u00e0 c\u1ed9ng l\u1ea1i t\u1ed5ng t\u00ednh \u0111\u01b0\u1ee3c tr\u00ean t\u1eebng \u0111o\u1ea1n.</p> <p>C\u1ee5 th\u1ec3, \u0111\u1eb7t \\(n = 2^{i_1} + 2^{i_2} + \\ldots + 2^{i_k}\\) \\((i_1 &gt; i_2 &gt; \\ldots &gt; i_k \\ge 0)\\). \u0110\u1ec3 t\u00ednh t\u1ed5ng t\u1eeb \\([1 \\ldots n]\\), ta t\u00ednh t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \u0111o\u1ea1n \\([1;2^{i_1}]\\), sau \u0111\u00f3 t\u00ednh ti\u1ebfp t\u1ed5ng c\u1ee7a \u0111o\u1ea1n \\([2^{i_1} + 1;2^{i_1} + 2^{i_2}]\\), l\u1eb7p l\u1ea1i qu\u00e1 tr\u00ecnh n\u00e0y cho \u0111\u1ebfn khi ta \u0111\u1ebfn \u0111o\u1ea1n cu\u1ed1i c\u00f9ng l\u00e0 \\([2^{i_1} + 2^{i_2} + \\ldots + 2^{i_{k - 1}} + 1;n]\\). \\(n\\) c\u00f3 th\u1ec3 c\u00f3 t\u1ed1i \u0111a \\(\\log_2 n\\) bits, v\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi t\u00ednh t\u1ed5ng theo c\u00e1ch n\u00e0y l\u00e0 \\(\\mathcal{O}(C \\log n)\\), trong \u0111\u00f3 \\(\\mathcal{O}(C)\\) l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi l\u1ea5y t\u1ed5ng m\u1ed9t \u0111o\u1ea1n.</p> <p></p> <p>T\u1eeb c\u00e1ch chia block tr\u00ean, ta quan s\u00e1t \u0111\u01b0\u1ee3c r\u1eb1ng block cu\u1ed1i c\u00f9ng \u0111\u1ed1i v\u1edbi m\u1ed7i \\(n\\) (l\u00e0 block t\u1ed5ng ch\u1ee9a ph\u1ea7n t\u1eed \u1edf ch\u1ec9 s\u1ed1 \\(n\\)) c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng v\u1edbi bit nh\u1ecf nh\u1ea5t trong bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a \\(n\\). \u0110\u00e2y ch\u00ednh l\u00e0 \u00fd t\u01b0\u1edfng c\u1ee7a c\u00e2y BIT, ta s\u1ebd l\u01b0u th\u00f4ng tin v\u1ec1 block cu\u1ed1i c\u1ee7a t\u1eebng ph\u1ea7n t\u1eed v\u00e0 th\u1ef1c hi\u1ec7n thao t\u00e1c truy v\u1ea5n tr\u00ean \u0111\u1ea5y.</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 h\u00ecnh \u1ea3nh minh h\u1ecda c\u00e2y BIT: </p> <p>Trong h\u00ecnh tr\u00ean, nh\u1eefng \u0111o\u1ea1n \u0111\u01b0\u1ee3c t\u00f4 \u0111\u1eadm l\u00e0 \u0111o\u1ea1n c\u1ee7a ph\u1ea7n t\u1eed ch\u1ec9 s\u1ed1 \\(n\\) \u0111\u01b0\u1ee3c BIT l\u01b0u tr\u1eef; nh\u1eefng \u0111o\u1ea1n \u0111\u01b0\u1ee3c t\u00f4 n\u00e9t m\u1ea3nh kh\u00f4ng \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp m\u00e0 s\u1ebd \u0111\u01b0\u1ee3c truy c\u1eadp gi\u00e1n ti\u1ebfp.</p>"},{"location":"algo/data-structures/fenwick/#cai-at-bit","title":"C\u00e0i \u0111\u1eb7t BIT","text":"<p>M\u1eb7c d\u00f9 c\u00f3 b\u1ea3n ch\u1ea5t l\u00e0 c\u00e2y, t\u00ednh ch\u1ea5t \u1edf tr\u00ean cho ph\u00e9p ch\u00fang ta l\u01b0u tr\u1eef BIT d\u01b0\u1edbi d\u1ea1ng m\u1ed9t m\u1ea3ng \u0111\u01a1n gi\u1ea3n c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng v\u1edbi \u0111\u1ed9 d\u00e0i m\u1ea3ng ta \u0111ang l\u00e0m vi\u1ec7c.</p> <pre><code>int bit[N];\n</code></pre>"},{"location":"algo/data-structures/fenwick/#thao-tac-tim-tong","title":"Thao t\u00e1c t\u00ecm t\u1ed5ng","text":"<p>\u0110\u1ec3 t\u00ecm t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([1 \\ldots n]\\), ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t \u0111i qua t\u1ea5t c\u1ea3 bit c\u1ee7a \\(n\\) theo gi\u00e1 tr\u1ecb t\u0103ng d\u1ea7n. M\u1ed7i l\u1ea7n \u0111i qua \\(n\\), ta s\u1ebd c\u1ed9ng \\(bit[n]\\) v\u00e0o k\u1ebft qu\u1ea3 hi\u1ec7n t\u1ea1i, r\u1ed3i tr\u1eeb \u0111i bit nh\u1ecf nh\u1ea5t c\u1ee7a \\(n\\) kh\u1ecfi ch\u00ednh n\u00f3; qu\u00e1 tr\u00ecnh l\u1eb7p l\u1ea1i cho \u0111\u1ebfn khi \\(n = 0\\).</p> <p>\u0110\u1ec3 l\u1ea5y bit nh\u1ecf nh\u1ea5t c\u1ee7a m\u1ed9t s\u1ed1 \\(n\\), ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c <code>n &amp; ~(n - 1)</code> \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp t\u1ea1i b\u00e0i t\u1ea1i \u0111\u00e2y. Khi thao t\u00e1c bit v\u1edbi s\u1ed1 \u00e2m, C++ s\u1eed d\u1ee5ng ph\u00e9p b\u00f9 2: <code>~n = - n - 1</code>; v\u00ec v\u1eady ta c\u00f3 ph\u00e9p bi\u1ebfn \u0111\u1ed5i: <code>n &amp; ~(n - 1) = n &amp; (-(n - 1) - 1) = n &amp; (-n)</code> d\u1ec5 s\u1eed d\u1ee5ng h\u01a1n.</p> <pre><code>int getSum(int p) {\n    int idx = p, ans = 0;\n    while (idx &gt; 0) {\n        ans += bit[idx];\n        idx -= (idx &amp; (-idx));\n    }\n    return ans;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n t\u1ed5ng: \\(\\mathcal{O}(\\log n)\\).</p>"},{"location":"algo/data-structures/fenwick/#thao-tac-cap-nhat","title":"Thao t\u00e1c c\u1eadp nh\u1eadt","text":"<p>\u0110\u1ec3 c\u1eadp nh\u1eadt ph\u1ea7n t\u1eed t\u1ea1i v\u1ecb tr\u00ed \\(u\\), ta s\u1ebd th\u1ef1c hi\u1ec7n qu\u00e1 tr\u00ecnh ng\u01b0\u1ee3c l\u1ea1i so v\u1edbi khi truy v\u1ea5n t\u00ecm t\u1ed5ng: c\u1ed9ng bit nh\u1ecf nh\u1ea5t v\u00e0o \\(u\\) cho \u0111\u1ebfn khi \\(u\\) v\u01b0\u1ee3t ngo\u00e0i bi\u00ean c\u1ee7a m\u1ea3ng.</p> <pre><code>void update(int u, int v) {\n    int idx = u;\n    while (idx &lt;= n) {\n        bit[idx] += v;\n        idx += (idx &amp; (-idx));\n    }\n}\n</code></pre> <p>Ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a thu\u1eadt tr\u00ean nh\u01b0 sau: m\u1ed7i khi ta c\u1ed9ng th\u00eam 1 l\u01b0\u1ee3ng b\u1eb1ng v\u1edbi \\(2^k\\) (\\(k\\) l\u00e0 bit nh\u1ecf nh\u1ea5t c\u1ee7a \\(u\\)) th\u00ec \u0111o\u1ea1n d\u1ecbch qua ph\u1ea3i m\u1ed9t l\u01b0\u1ee3ng \\(2^k\\) th\u00e0nh \\([l + 2^k, r + 2^k]\\) (do bit nh\u1ecf nh\u1ea5t l\u00fac n\u00e0y v\u1eabn c\u00f3 th\u1ec3 t\u00ednh l\u00e0 \\(2^k\\)). \u0110\u1ed3ng th\u1eddi l\u00fac \u0111\u00f3, bit nh\u1ecf nh\u1ea5t t\u0103ng \u00edt nh\u1ea5t 2 l\u1ea7n do \\(2^k\\) (m\u1edbi c\u1ed9ng th\u00eam) + \\(2^k\\) (c\u00f3 s\u1eb5n trong u) t\u1ea1o th\u00e0nh \\(2^{k+1}\\) l\u00e0m cho bi\u00ean tr\u00e1i d\u1ecbch tr\u00e1i \u00edt nh\u1ea5t \\(2^k\\) l\u1ea7n th\u00e0nh \\([l, r + 2^k]\\) (n\u1ebfu c\u00f3 s\u1eb5n \\(2^{k+1}\\) trong \\(u\\) th\u00ec ti\u1ebfp t\u1ee5c g\u1ed9p l\u1ea1i l\u00e0m bit nh\u1ecf nh\u1ea5t t\u0103ng l\u00ean l\u00e0 \\(2^{k+2}\\), ...), do \u0111\u00f3 bi\u00ean tr\u00e1i lu\u00f4n \u0111\u01b0\u1ee3c gi\u1eef &lt;= bi\u00ean \\(l\\) ban \u0111\u1ea7u.</p> <p>M\u1ed7i l\u1ea7n c\u1ed9ng th\u00eam, bit cu\u1ed1i lu\u00f4n b\u1ecb d\u1ecbch l\u00ean \u00edt nh\u1ea5t 1 l\u1ea7n, d\u1eabn \u0111\u1ebfn c\u00f3 t\u1ed1i \u0111a \\(\\log n\\) l\u1ea7n d\u1ecbch bit. V\u00ec th\u1ebf \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi c\u1eadp nh\u1eadt l\u00e0 \\(\\mathcal{O}(\\log n)\\).</p>"},{"location":"algo/data-structures/fenwick/#luu-y","title":"L\u01b0u \u00fd","text":"<p>B\u1eb1ng c\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n (BIT), ta d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c prefix sum v\u00e0 c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb ch\u1ec9 trong \\(\\mathcal{O}(\\log n)\\), m\u1eb7t kh\u00e1c so v\u1edbi c\u00e1c CTDL kh\u00e1c, BIT d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t h\u01a1n r\u1ea5t nhi\u1ec1u v\u00e0 kh\u00f4ng t\u1ed1n qu\u00e1 nhi\u1ec1u th\u1eddi gian \u0111\u1ec3 code.</p> <p>Quay l\u1ea1i b\u00e0i to\u00e1n \u0111\u1ea7u, n\u1ebfu ch\u00fang ta thay \u0111\u1ed5i y\u00eau c\u1ea7u th\u00e0nh t\u00ecm t\u1ed5ng tr\u00ean \u0111o\u1ea1n \\([l \\ldots r]\\), t\u00ednh ch\u1ea5t c\u1ee7a prefix sum d\u1ec5 d\u00e0ng cho ta t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 th\u00f4ng qua ph\u00e9p \\(sum(r) - sum(l - 1)\\). Tuy nhi\u00ean, kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 ph\u00e9p to\u00e1n n\u00e0o \u0111\u1ec1u cho ph\u00e9p ch\u00fang ta d\u1ec5 d\u00e0ng l\u1ea5y k\u1ebft qu\u1ea3 th\u00f4ng qua ph\u00e9p hi\u1ec7u nh\u01b0 v\u1eady. \u0110\u1ed1i v\u1edbi c\u00e1c ph\u00e9p \\(min, gcd\\), kh\u00f4ng t\u1ed3n t\u1ea1i ph\u00e9p hi\u1ec7u cho ta ph\u00e9p l\u1ea5y k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t \u0111o\u1ea1n d\u1ec5 d\u00e0ng, v\u00ec th\u1ebf ta kh\u00f4ng th\u1ec3 \u00e1p d\u1ee5ng BIT \u0111\u1ed1i v\u1edbi nh\u1eefng b\u00e0i to\u00e1n lo\u1ea1i n\u00e0y. </p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t khuy\u1ebft \u0111i\u1ec3m m\u1ea5u ch\u1ed1t c\u1ee7a BIT, v\u00ec th\u1ebf c\u1ea7n n\u1eafm r\u00f5 t\u00ednh ch\u1ea5t v\u00e0 nh\u1eefng b\u00e0i to\u00e1n \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh c\u00f3 n\u00ean s\u1eed d\u1ee5ng BIT kh\u00f4ng.</p>"},{"location":"algo/data-structures/fenwick/#cap-nhat-oan","title":"C\u1eadp nh\u1eadt \u0111o\u1ea1n","text":"<p>Ta thay \u0111\u1ed5i n\u1ed9i dung b\u00e0i to\u00e1n ban \u0111\u1ea7u nh\u01b0 sau: - \\(1\\) \\(v\\) \\(l\\) \\(r\\): c\u1ed9ng \\(v\\) v\u00e0o t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed \\(A[l]\\), \\(A[l + 1]\\), \\(A[l + 2]\\), ..., \\(A[r]\\). - \\(2\\) \\(u\\): t\u00ecm gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i c\u1ee7a \\(A[u]\\). - \\(3\\) \\(l\\) \\(r\\): t\u00ednh t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(A[l]\\), \\(A[l + 1]\\), \\(A[l + 2]\\), ..., \\(A[r]\\).</p> <p>Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t \"ng\u00e2y th\u01a1\" b\u1eb1ng c\u00e1ch \u00e1p d\u1ee5ng h\u00e0m <code>update()</code> tr\u00ean t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u1ea7n \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt, \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi n\u00e0y l\u00e0 \\(\\mathcal{O}(Q \\cdot N \\log N)\\). D\u0129 nhi\u00ean c\u00e1ch n\u00e0y qu\u00e1 ch\u1eadm, \u0111\u00f2i h\u1ecfi ta c\u1ea7n t\u00ecm m\u1ed9t c\u00e1ch c\u1eadp nh\u1eadt \u0111o\u1ea1n m\u1ed9t c\u00e1ch nhanh h\u01a1n \u0111\u1ec3 gi\u1eef nguy\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N \\log N)\\).</p>"},{"location":"algo/data-structures/fenwick/#truy-van-tung-phan-tu","title":"Truy v\u1ea5n t\u1eebng ph\u1ea7n t\u1eed","text":"<p>M\u1ea3ng hi\u1ec7u (difference array) l\u00e0 m\u1ed9t lo\u1ea1i m\u1ea3ng l\u01b0u hi\u1ec7u gi\u1eefa c\u00e1c ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 v\u1edbi nhau.</p> <p>M\u1ea3ng hi\u1ec7u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng b\u1eb1ng c\u00e1ch sau:  - V\u1edbi \\(i = 1\\) th\u00ec \\(diff[i] = A[i]\\). - V\u1edbi \\(2 \\le i \\le N\\) th\u00ec \\(diff[i] = A[i] - A[i - 1]\\).</p> <p>B\u1ea1n c\u00f3 th\u1ec3 theo d\u00f5i h\u00ecnh d\u01b0\u1edbi v\u00e0 code minh h\u1ecda \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n: </p> <pre><code>int diff[N + 1];\n\ndiff[1] = a[1];\nfor (int i = 2; i &lt;= n; ++i) {\n    diff[i] = a[i] - a[i - 1]; \n    // l\u1ea5y ph\u1ea7n t\u1eed th\u1ee9 i tr\u1eeb cho ph\u1ea7n t\u1eed tr\u01b0\u1edbc n\u00f3\n}\n</code></pre> <p>Khi c\u1ed9ng t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed \\(diff\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(i\\), ta c\u00f3: $$ \\begin{align} \\displaystyle \\sum_{j = 1}^{i} diff[j] &amp;= diff[1] + diff[2] + \\ldots + diff[i] \\ &amp;= a[1] + a[2] - a[1] + a[3] - a[2] + \\ldots + a[i] - a[i - 1] \\ &amp;= a[1] - a[1] + a[2] - a[2] + \\ldots + a[i - 1] - a[i - 1] + a[i] \\ &amp;= a[i] \\end{align} $$</p> <p>T\u1eeb t\u00ednh ch\u1ea5t n\u00e0y, khi t\u00ednh \u0111\u01b0\u1ee3c m\u1ea3ng hi\u1ec7u, \u0111\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a \\(a[i]\\) ta ch\u1ec9 c\u1ea7n l\u1ea5y t\u1ed5ng c\u1ee7a \\(i\\) ph\u1ea7n t\u1eed \\(diff\\) \u0111\u1ea7u ti\u00ean. Khi n\u00e0y, b\u00e0i to\u00e1n c\u1ee7a ch\u00fang ta th\u1ef1c ch\u1ea5t \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1ec1 t\u00ednh t\u1ed5ng tr\u00ean m\u1ea3ng \\(diff\\), v\u1ea5n \u0111\u1ec1 hi\u1ec7n t\u1ea1i l\u00e0 thao t\u00e1c <code>update()</code> c\u1ea7n \u0111\u01b0\u1ee3c x\u1eed l\u00ed nh\u01b0 th\u1ebf n\u00e0o.</p> <p>H\u00ecnh d\u01b0\u1edbi \u0111\u00e2y minh h\u1ecda thao t\u00e1c c\u1eadp nh\u1eadt tr\u00ean m\u1ed9t \u0111o\u1ea1n \\([l \\ldots r]\\) - t\u1eeb m\u1ea3ng tr\u00ean, ta c\u1ed9ng \\(\\Delta = 4\\) v\u00e0o \u0111o\u1ea1n \\([4\\dots 7]\\): </p> <p>Khi c\u1eadp nh\u1eadt, do c\u00e1c ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 trong \u0111o\u1ea1n \\([l\\dots r]\\) \u0111\u1ec1u \u0111\u01b0\u1ee3c c\u1ed9ng c\u00f9ng m\u1ed9t gi\u00e1 tr\u1ecb \\(\\Delta\\) n\u00ean hi\u1ec7u gi\u1eefa ch\u00fang th\u1ef1c ch\u1ea5t v\u1eabn kh\u00f4ng \u0111\u1ed5i. Kh\u00e1c bi\u1ec7t duy nh\u1ea5t khi c\u1eadp nh\u1eadt n\u1eb1m \u1edf 2 bi\u00ean c\u1ee7a \u0111o\u1ea1n: gi\u1eefa \\((a_{l - 1}, a_l)\\) v\u00e0 \\((a_r, a_{r+1})\\); v\u00ec th\u1ebf ta ch\u1ec9 c\u1ea7n c\u1eadp nh\u1eadt \u0111i\u1ec3m t\u1ea1i 2 bi\u00ean tr\u00ean m\u1ea3ng hi\u1ec7u v\u00e0 d\u00f9ng truy v\u1ea5n l\u1ea5y t\u1ed5ng \u0111\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i c\u1ee7a \\(a_i\\).</p> <pre><code>void updatePoint(int u, int v) {\n    int idx = u;\n    while (idx &lt;= n) {\n        bit[idx] += v;\n        idx += (idx &amp; (-idx));\n    }\n}\n\nvoid updateRange(int l, int r, int v) {\n    updatePoint(l, v);\n    updatePoint(r + 1, -v);\n}\n\nint get(int u) {\n    int idx = u, ans = 0;\n    while (idx &gt; 0) {\n        ans += bit[idx];\n        idx -= (idx &amp; (-idx));\n    }\n    return ans;\n}\n</code></pre>"},{"location":"algo/data-structures/fenwick/#truy-van-tren-oan","title":"Truy v\u1ea5n tr\u00ean \u0111o\u1ea1n","text":"<p>H\u00ecnh tr\u00ean s\u1ebd gi\u00fap ta minh h\u1ecda tr\u1ef1c quan h\u01a1n m\u1ed1i quan h\u1ec7 v\u1ec1 t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed v\u1edbi m\u1ea3ng \\(A\\) v\u00e0 m\u1ea3ng hi\u1ec7u \\(diff\\).</p> <p>Nh\u1eafc l\u1ea1i: \\(A[i] = \\sum_{j=1}^{i} diff[i]\\). D\u1ef1a v\u00e0o h\u00ecnh, ta c\u00f3 th\u1ec3 t\u00ednh l\u1ea7n l\u01b0\u1ee3t t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(A_1\\) \u0111\u1ebfn \\(A_i\\) nh\u01b0 sau: - \\(sum[1] = diff[1]\\) - \\(sum[2] = 2 \\cdot diff[1] + diff[2]\\) - \\(sum[3] = 3 \\cdot diff[1] + 2 \\cdot diff[2] + diff[3]\\) - \\(\\ldots\\) - \\(sum[i] = i \\cdot diff[1] + (i - 1) \\cdot diff[2] + \\ldots + (i - j + 1) \\cdot diff[j] + \\ldots + 2 \\cdot diff[i - 1] + diff[i]\\)</p> <p>Tuy nhi\u00ean, do s\u1ef1 bi\u1ebfn \u0111\u1ed9ng c\u1ee7a h\u1ec7 s\u1ed1 khi nh\u00e2n n\u00ean c\u00e1ch n\u00e0y kh\u00f4ng thu\u1eadn ti\u1ec7n khi ta ph\u1ea3i truy v\u1ea5n li\u00ean t\u1ee5c. \u0110\u1ec3 d\u1ec5 d\u00e0ng h\u01a1n, ta s\u1ebd c\u1ed1 \u0111\u1ecbnh m\u1ed7i \\(diff[i]\\) nh\u00e2n v\u1edbi h\u1ec7 s\u1ed1 \\(n - i + 1\\), khi n\u00e0y: - \\(sum[1] = n \\cdot diff[1] - (n - 1) \\cdot diff[1]\\) - \\(sum[2] = n \\cdot diff[1] + (n - 1) \\cdot diff[2] - (n - 2) \\cdot (diff[1] + diff[2])\\) - \\(sum[3] = n \\cdot diff[1] + (n - 1) \\cdot diff[2] + (n - 2) \\cdot diff[3] - (n - 3) \\cdot (diff[1] + diff[2] + diff[3])\\) - \\(\\ldots\\) - \\(sum[i] = n \\cdot diff[1] + (n - 1) \\cdot diff[2] + \\ldots + (n - j + 1) \\cdot diff[j] + \\ldots + (n - i + 1) \\cdot diff[i] - (n - i) \\cdot (diff[1] + diff[2] + \\ldots + diff[i])\\)</p> <p>T\u00f3m l\u1ea1i, ta thu \u0111\u01b0\u1ee3c: $$ sum[i] = \\displaystyle \\sum_{j = 1}^{i} (n - j + 1) \\cdot diff[j] - (n - i) \\cdot \\sum_{j = 1}^{i} diff[j] $$ C\u1ea3 hai gi\u00e1 tr\u1ecb \\(diff[j]\\) v\u00e0 \\((n - j + 1) \\cdot diff[j]\\) \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u01a1n gi\u1ea3n h\u00f3a, l\u00fac n\u00e0y ta ch\u1ec9 c\u1ea7n l\u01b0u to\u00e0n b\u1ed9 gi\u00e1 tr\u1ecb \\((n - j + 1) \\cdot diff[j]\\) v\u00e0o m\u1ea3ng \\(S_1\\) v\u00e0 \\(diff[j]\\) v\u00e0o m\u1ea3ng \\(S_2\\) v\u00e0 d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n tr\u00ean hai m\u1ea3ng \u0111\u00f3.</p> <p>Thao t\u00e1c c\u1eadp nh\u1eadt tr\u00ean m\u1ea3ng \\(S_2\\) gi\u1ed1ng v\u1edbi thao t\u00e1c c\u1eadp nh\u1eadt \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, c\u00f2n \u1edf m\u1ea3ng \\(S_1\\) th\u00ec kh\u00e1c bi\u1ec7t duy nh\u1ea5t l\u00e0 vi\u1ec7c x\u1eed l\u00fd nh\u00e2n h\u1ec7 s\u1ed1 \\((n - j + 1)\\). Tuy v\u1eady, h\u1ec7 s\u1ed1 tr\u00ean kh\u00f4ng \u0111\u1ed5i trong qu\u00e1 tr\u00ecnh t\u00ednh to\u00e1n v\u1edbi t\u1eebng ph\u1ea7n t\u1eed n\u00ean ta ch\u1ec9 c\u1ea7n nh\u00e2n h\u1ec7 s\u1ed1 n\u00e0y v\u1edbi gi\u00e1 tr\u1ecb c\u1ea7n c\u1eadp nh\u1eadt v\u00e0 \u00e1p d\u1ee5ng ph\u01b0\u01a1ng th\u1ee9c t\u01b0\u01a1ng t\u1ef1 nh\u01b0 \u1edf c\u1eadp nh\u1eadt tr\u00ean \\(S_2\\).</p> <p>Code tham kh\u1ea3o: <pre><code>vector&lt;int&gt; bit1, bit2;\n/* \n    C\u00e1c h\u00e0m update v\u00e0 sum c\u1ea7n l\u00e0m vi\u1ec7c tr\u00ean m\u1ed9t trong hai BIT ri\u00eang bi\u1ec7t.\n    S\u1eed d\u1ee5ng vector cho ph\u00e9p truy\u1ec1n BIT v\u00e0o l\u00e0m vi\u1ec7c tr\u1ef1c ti\u1ebfp d\u1ec5 d\u00e0ng h\u01a1n.\n*/\n\nvoid updatePoint(vector&lt;int&gt;&amp; b, int u, int v) {\n    int idx = u;\n    while (idx &lt;= n) {\n        b[idx] += v;\n        idx += (idx &amp; (-idx));\n    }\n}\n\nvoid updateRange(int l, int r, int v) {\n    updatePoint(bit1, l, (n - l + 1) * v);\n    updatePoint(bit1, r + 1, -(n - r) * v);\n    updatePoint(bit2, l, v);\n    updatePoint(bit2, r + 1, -v);\n}\n\nint getSumOnBIT(vector&lt;int&gt;&amp; b, int u) {\n    int idx = u, ans = 0;\n    while (idx &gt; 0) {\n        ans += b[idx];\n        idx -= (idx &amp; (-idx));\n    }\n    return ans;\n}\n\nint prefixSum(int u) {\n    return getSumOnBIT(bit1, u) - getSumOnBIT(bit2, u) * (n - u);\n}\n\nint rangeSum(int l, int r) {\n    return prefixSum(r) - prefixSum(l - 1);\n}\n</code></pre></p>"},{"location":"algo/data-structures/fenwick/#bai-tap-ap-dung","title":"B\u00e0i t\u00e2\u0323p a\u0301p du\u0323ng","text":"<ul> <li>LQDOJ - Query-Sum</li> <li>LQDOJ - Query-Sum 2</li> <li>LQDOJ - Candies</li> <li>CSES - Range Update Queries</li> <li>CSES - Nested Range Count</li> <li>Codeforces - Moving Points</li> <li>VNOJ - NKINV</li> <li>VNOJ - INCVN</li> </ul> <p>VNOI Online Judge c\u00f3 ph\u00e2n lo\u1ea1i ri\u00eang c\u00e1c b\u00e0i t\u1eadp v\u1ec1 BIT, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/data-structures/hash-table/","title":"B\u1ea3ng b\u0103m (Hash Table)","text":""},{"location":"algo/data-structures/hash-table/#tu-tuong","title":"T\u01b0 t\u01b0\u1edfng","text":"<p>B\u1ea3ng b\u0103m l\u00e0 m\u1ed9t CTDL th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 m\u1ed9t t\u1eeb \u0111i\u1ec3n: m\u1ed7i ph\u1ea7n t\u1eed trong b\u1ea3ng b\u0103m l\u00e0 m\u1ed9t c\u1eb7p (kh\u00f3a, gi\u00e1 tr\u1ecb). N\u1ebfu so s\u00e1nh v\u1edbi m\u1ea3ng, kh\u00f3a \u0111\u01b0\u1ee3c xem nh\u01b0 ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng, c\u00f2n gi\u00e1 tr\u1ecb gi\u1ed1ng nh\u01b0 gi\u00e1 tr\u1ecb m\u00e0 ta l\u01b0u t\u1ea1i ch\u1ec9 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng. B\u1ea3ng b\u0103m kh\u00f4ng nh\u01b0 c\u00e1c lo\u1ea1i t\u1eeb \u0111i\u1ec3n th\u00f4ng th\u01b0\u1eddng - ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb th\u00f4ng qua kh\u00f3a c\u1ee7a n\u00f3.</p> <p>Kh\u00f4ng may, kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp v\u00e0o m\u1ed9t t\u1eeb \u0111i\u1ec3n \u0111\u01a1n gi\u1ea3n. \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac m\u00e0 qu\u00e1 tr\u00ecnh b\u0103m (hash) ra \u0111\u1eddi. Hash l\u00e0 qu\u00e1 tr\u00ecnh kh\u1edfi t\u1ea1o m\u1ed9t gi\u00e1 tr\u1ecb kh\u00f3a (th\u01b0\u1eddng l\u00e0 32 bit ho\u1eb7c 64 bit) t\u1eeb m\u1ed9t ph\u1ea7n d\u1eef li\u1ec7u. N\u00f3 c\u00f3 th\u1ec3 l\u00e0 \\(n\\) bit \u0111\u1ea7u ti\u00ean c\u1ee7a d\u1eef li\u1ec7u, \\(n\\) bit cu\u1ed1i c\u00f9ng, gi\u00e1 tr\u1ecb mod cho m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 n\u00e0o \u0111\u00f3. D\u1ef1a theo gi\u00e1 tr\u1ecb hash, d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c chia v\u00e0o c\u00e1c bucket:</p> <p></p> <p>Gi\u1ea3i th\u00edch h\u00ecnh minh h\u1ecda:</p> <ul> <li>Ta c\u1ea7n l\u01b0u s\u1ed1 \u0111i\u1ec7n tho\u1ea1i c\u1ee7a 3 ng\u01b0\u1eddi:<ul> <li>John Smith: 521-1234</li> <li>Lisa Smith: 521-8976</li> <li>Sandra Dee: 521-9655</li> </ul> </li> <li>Gi\u00e1 tr\u1ecb Hash c\u1ee7a 3 ng\u01b0\u1eddi n\u00e0y l\u1ea7n l\u01b0\u1ee3t l\u00e0: 1, 2 v\u00e0 14.</li> <li>Sau khi t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb Hash c\u1ee7a 3 ng\u01b0\u1eddi, ta l\u01b0u v\u00e0o c\u00e1c bucket t\u01b0\u01a1ng \u1ee9ng l\u00e0 1, 2 v\u00e0 14.</li> </ul> <p>N\u1ebfu c\u00e1c k\u1ebft qu\u1ea3 c\u1ee7a h\u00e0m hash \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 \u0111\u1ec1u, c\u00e1c bucket s\u1ebd c\u00f3 k\u00edch th\u01b0\u1edbc x\u1ea5p x\u1ec9 nhau. Gi\u1ea3 s\u1eed s\u1ed1 bucket \u0111\u1ee7 l\u1edbn, m\u1ed7i buckets s\u1ebd ch\u1ec9 c\u00f3 m\u1ed9t v\u00e0i ph\u1ea7n t\u1eed trong ch\u00fang. \u0110i\u1ec1u n\u00e0y l\u00e0m cho vi\u1ec7c t\u00ecm ki\u1ebfm r\u1ea5t hi\u1ec7u qu\u1ea3.</p>"},{"location":"algo/data-structures/hash-table/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>G\u1ecdi:</p> <ul> <li>\\(n\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed ta c\u1ea7n l\u01b0u trong Hash table</li> <li>\\(k\\) l\u00e0 s\u1ed1 bucket</li> </ul> <p>Gi\u00e1 tr\u1ecb \\(n/k\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 load factor. Khi load factor nh\u1ecf (x\u1ea5p x\u1ec9 1), v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m Hash ph\u00e2n b\u1ed1 \u0111\u1ec1u, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thao t\u00e1c tr\u00ean Hash table l\u00e0 \\(\\mathcal{O}(1)\\).</p>"},{"location":"algo/data-structures/hash-table/#hash-collision","title":"Hash collision","text":""},{"location":"algo/data-structures/hash-table/#separate-chaining","title":"Separate chaining","text":"<p>Tr\u01b0\u1eddng h\u1ee3p m\u1ed9t hash bucket ch\u1ee9a nhi\u1ec1u h\u01a1n m\u1ed9t gi\u00e1 tr\u1ecb ta g\u1ecdi \u0111\u00f3 l\u00e0 Hash collision (va ch\u1ea1m). Vi\u1ec7c x\u1eed l\u00fd hash collision r\u1ea5t quan tr\u1ecdng \u0111\u1ed1i v\u1edbi \u0111\u1ed9 hi\u1ec7u qu\u1ea3 c\u1ee7a b\u1ea3ng b\u0103m. M\u1ed9t trong nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 c\u00e0i \u0111\u1eb7t c\u00e1c danh s\u00e1ch li\u00ean k\u1ebft \u1edf c\u00e1c bucket. K\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Separate chaining:</p> <p></p> <p>Gi\u1ea3i th\u00edch h\u00ecnh minh h\u1ecda:</p> <ul> <li>M\u1ed7i bucket l\u00e0 1 danh s\u00e1ch li\u00ean k\u1ebft</li> <li>John Smith v\u00e0 Sandra Dee c\u00f9ng c\u00f3 gi\u00e1 tr\u1ecb h\u00e0m hash l\u00e0 152, n\u00ean \u1edf bucket 152, ta c\u00f3 1 danh s\u00e1ch li\u00ean k\u1ebft ch\u1ee9a 2 ph\u1ea7n t\u1eed.</li> </ul>"},{"location":"algo/data-structures/hash-table/#open-addressing","title":"Open Addressing","text":"<p>T\u01b0 t\u01b0\u1edfng c\u1ee7a Open Addressing l\u00e0, khi x\u1ea3y ra Hash collision, ta l\u01b0u v\u00e0o m\u1ed9t v\u1ecb tr\u00ed ti\u1ebfp theo trong b\u1ea3ng b\u0103m. V\u00ed d\u1ee5:</p> <p></p> <p>Trong h\u00ecnh minh h\u1ecda:</p> <ul> <li>John Smith v\u00e0 Sandra Dee \u0111\u1ec1u c\u00f3 gi\u00e1 tr\u1ecb Hash l\u00e0 152. V\u00ec ta \u0111\u00e3 l\u01b0u John Smith v\u00e0o bucket 152, n\u00ean ta bu\u1ed9c ph\u1ea3i l\u01b0u Sandra Dee v\u00e0o bucket 153.</li> <li>Ted Baker c\u00f3 gi\u00e1 tr\u1ecb Hash l\u00e0 153, nh\u01b0ng l\u00fac n\u00e0y bucket 153 \u0111\u00e3 l\u01b0u th\u00f4ng tin c\u1ee7a Sandra Dee, n\u00ean ta ph\u1ea3i l\u01b0u gi\u00e1 tr\u1ecb c\u1ee7a Ted Baker v\u00e0o bucket 154.</li> </ul> <p>Ch\u00fa \u00fd:</p> <ul> <li>\u0110\u1ec3 c\u00e0i \u0111\u1eb7t \u0111\u01b0\u1ee3c c\u00e1ch n\u00e0y, Load factor ph\u1ea3i nh\u1ecf h\u01a1n 1.</li> <li>Khi t\u00ecm ki\u1ebfm 1 ph\u1ea7n t\u1eed, ta ph\u1ea3i ki\u1ec3m tra t\u1ea5t c\u1ea3 c\u00e1c bucket b\u1eaft \u0111\u1ea7u t\u1eeb bucket c\u1ee7a gi\u00e1 tr\u1ecb Hash, \u0111\u1ebfn khi bucket tr\u1ed1ng (v\u00ed d\u1ee5 ta t\u00ecm Sandra Dee th\u00ec ph\u1ea3i t\u00ecm bucket 152, 153; t\u00ecm Ted Baker th\u00ec ph\u1ea3i t\u00ecm bucket 152, 153, 154. N\u1ebfu ta t\u00ecm 1 ng\u01b0\u1eddi kh\u00e1c c\u00f3 gi\u00e1 tr\u1ecb Hash l\u00e0 152, th\u00ec ph\u1ea3i t\u00ecm c\u1ea3 bucket 152, 153, 154 v\u00e0 155 (ch\u1ec9 khi bucket 155 tr\u1ed1ng, ta m\u1edbi ch\u1eafc ch\u1eafn ng\u01b0\u1eddi \u0111\u00f3 kh\u00f4ng c\u00f3 trong Hash table).</li> </ul>"},{"location":"algo/data-structures/hash-table/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00e0i \u0111\u1eb7t Hash table \u0111\u01a1n gi\u1ea3n, h\u1ed7 tr\u1ee3 thao t\u00e1c th\u00eam v\u00e0 t\u00ecm ki\u1ebfm. Hash table n\u00e0y s\u1eed d\u1ee5ng separate chaining, v\u00e0 d\u00f9ng vector thay cho linked list \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n.</p> <pre><code>const int P = 1e6 + 3;\n\nstruct HashTable {\n    vector&lt; pair&lt;int,int&gt; &gt; h[P];\n\npublic:\n    void insert(int key, int value) {\n        int hkey = getHash(key);\n        for (auto p : h[hkey]) {\n            if (p.first == key) {\n                // key da ton tai trong Hash table, ta bo qua\n                return;\n            }\n        }\n        // Them (key, value) vao hash table\n        h[hkey].emplace_back(key, value);\n    }\n\n    int find(int key) {\n        int hkey = getHash(key);\n        for(auto p : h[hkey]) {\n            if (p.first == key) {\n                // ton tai key trong Hash table, return value\n                return p.value;\n            }\n        }\n        // Khong tim thay\n        return 0;\n    }\n\nprivate:\n    int getHash(int key) {\n        // Cho 1 key, tra lai Hash value la key % P\n        return key % P;\n    }\n};\n</code></pre>"},{"location":"algo/data-structures/hash-table/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>Trong ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng, b\u1ea3ng hash thu\u1eadn ti\u1ec7n \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u tham kh\u1ea3o, ch\u1eb3ng h\u1ea1n nh\u01b0 ch\u1eef vi\u1ebft t\u1eaft t\u00ean \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a c\u00e1c t\u1ed5 ch\u1ee9c. Trong gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n, b\u1ea3ng hash th\u1eadt s\u1ef1 h\u1eefu \u00edch \u0111\u1ec3 ti\u1ebfp c\u1eadn h\u01b0\u1edbng gi\u1ea3i quy\u1ebft chia \u0111\u1ec3 tr\u1ecb cho b\u00e0i to\u00e1n c\u00e1i t\u00fai (knapsack-type).</p> <p>Gi\u1ea3 s\u1eed, ch\u00fang ta \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u t\u00ecm m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng \u1ed1ng nh\u1ecf nh\u1ea5t \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi chi\u1ec1u d\u00e0i c\u1ed1 \u0111\u1ecbnh v\u00e0 ch\u00fang ta c\u00f3 38 \u1ed1ng. B\u1eb1ng c\u00e1ch chia th\u00e0nh hai t\u1eadp \u2013 19 v\u00e0 t\u00ednh to\u00e1n t\u1ea5t c\u1ea3 tr\u01b0\u1eddng h\u1ee3p gh\u00e9p \u1ed1ng c\u00f3 th\u1ec3 \u1edf m\u1ed7i t\u1eadp, ch\u00fang ta t\u1ea1o ra m\u1ed9t b\u1ea3ng hash k\u1ebft n\u1ed1i gi\u1eefa \u0111\u1ed9 d\u00e0i m\u00e0 c\u00e1c t\u1ed5 h\u1ee3p \u1ed1ng t\u1ea1o th\u00e0nh v\u1edbi s\u1ed1 l\u01b0\u1ee3ng \u1ed1ng \u00edt nh\u1ea5t c\u1ea7n d\u00f9ng. Sau \u0111\u00f3, v\u1edbi m\u1ed7i t\u1ed5 h\u1ee3p \u1ed1ng \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng trong m\u1ed9t t\u1eadp, ch\u00fang ta c\u00f3 th\u1ec3 tra c\u1ee9u li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi \u0111\u1ed9 d\u00e0i ph\u00f9 h\u1ee3p \u1edf t\u1eadp b\u00ean kia \u0111\u1ec3 c\u1ea3 hai \u1ed1ng t\u1ea1o n\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi \u0111\u1ed9 d\u00e0i y\u00eau c\u1ea7u v\u1edbi s\u1ed1 \u1ed1ng l\u00e0 \u00edt nh\u1ea5t.</p>"},{"location":"algo/data-structures/hash-table/#cac-tai-lieu-tham-khao","title":"C\u00e1c t\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>Topcoder</li> <li>Wikipedia</li> </ul>"},{"location":"algo/data-structures/heavy-light-decomposition/","title":"Heavy-Light Decomposition (HLD)","text":"<p>T\u00e1c gi\u1ea3:  - Ph\u1ea1m Ho\u00e0ng Hi\u1ec7p \u2013 University of Georgia</p> <p>Reviewer: - Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng Ngh\u1ec7, \u0110HQGHN - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN - \u0110\u1eb7ng \u0110o\u00e0n \u0110\u1ee9c Trung - UT Austin</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":""},{"location":"algo/data-structures/heavy-light-decomposition/#gioi-thieu-ve-hld","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 HLD","text":"<p>Heavy-Light Decomposition (HLD), d\u1ecbch ra ti\u1ebfng Vi\u1ec7t l\u00e0 ph\u00e2n chia n\u1eb7ng nh\u1eb9 l\u00e0 m\u1ed9t k\u1ef9 thu\u1eadt th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng trong nh\u1eefng b\u00e0i to\u00e1n x\u1eed l\u00fd tr\u00ean c\u00e2y. </p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, \u0111\u1ec3 ng\u1eafn g\u1ecdn v\u00e0 d\u1ec5 nh\u1edb, ch\u00fang ta s\u1ebd g\u1ecdi t\u00ean k\u1ef9 thu\u1eadt l\u00e0 HLD. </p> <p>Tuy nghe t\u00ean c\u00f3 v\u1ebb kinh kh\u1ee7ng nh\u01b0ng tr\u00ean th\u1ef1c t\u1ebf, \u0111\u00e2y l\u00e0 m\u1ed9t k\u1ef9 thu\u1eadt c\u00f3 \u00fd t\u01b0\u1edfng kh\u00e1 t\u1ef1 nhi\u00ean v\u00e0 c\u00f3 t\u00ednh \u1ee9ng d\u1ee5ng cao, c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong nhi\u1ec1u b\u00e0i t\u1eadp.</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#kien-thuc-can-biet","title":"Ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft","text":"<ul> <li>C\u00e1c thu\u1eadt to\u00e1n duy\u1ec7t \u0111\u1ed3 th\u1ecb c\u01a1 b\u1ea3n (DFS, BFS, ...)</li> <li>C\u00e2y</li> <li>Lowest Common Ancestor (LCA) - T\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t</li> <li>Segment Tree</li> <li>Euler tour on tree (n\u00ean bi\u1ebft nh\u01b0ng kh\u00f4ng b\u1eaft bu\u1ed9c)</li> </ul>"},{"location":"algo/data-structures/heavy-light-decomposition/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>\u0110\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi HLD s\u1ebd gi\u00fap ch\u00fang ta l\u00e0m g\u00ec, ch\u00fang ta s\u1ebd c\u00f9ng gi\u1ea3i m\u1ed9t b\u00e0i to\u00e1n. </p> <p>Tr\u01b0\u1edbc h\u1ebft, ch\u00fang ta s\u1ebd \u0111\u1ebfn v\u1edbi phi\u00ean b\u1ea3n d\u1ec5 h\u01a1n c\u1ee7a b\u00e0i to\u00e1n nh\u01b0 sau. </p> <p>Cho m\u1ed9t m\u1ea3ng s\u1ed1 nguy\u00ean d\u01b0\u01a1ng g\u1ed3m t\u1ed1i \u0111a \\(10^5\\) ph\u1ea7n t\u1eed. Ch\u00fang ta c\u1ea7n x\u1eed l\u00fd t\u1ed1i \u0111a \\(10^5\\) truy v\u1ea5n thu\u1ed9c m\u1ed9t trong hai lo\u1ea1i sau: - C\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) th\u00e0nh \\(x\\) - T\u00ednh t\u1ed5ng XOR c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\)</p> <p>B\u00e0i to\u00e1n tr\u00ean l\u00e0 m\u1ed9t b\u00e0i to\u00e1n quen thu\u1ed9c v\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd \u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Segment Tree. Nh\u01b0ng, gi\u1ea3 s\u1eed thay v\u00ec m\u1ea3ng m\u1ed9t chi\u1ec1u, ch\u00fang ta c\u1ea7n x\u1eed l\u00fd b\u00e0i to\u00e1n tr\u00ean c\u00e2y th\u00ec ph\u1ea3i l\u00e0m nh\u01b0 th\u1ebf n\u00e0o? </p>"},{"location":"algo/data-structures/heavy-light-decomposition/#phat-bieu-bai-toan","title":"Ph\u00e1t bi\u1ec3u b\u00e0i to\u00e1n","text":"<p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u1ec1 b\u00e0i c\u1ee5 th\u1ec3 v\u00e0 n\u1ed9p code t\u1ea1i \u0111\u00e2y</p> <p>Cho m\u1ed9t c\u00e2y (m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 \\(n\\) \u0111\u1ec9nh v\u00e0 \\(n-1\\) c\u1ea1nh v\u00e0 gi\u1eefa hai \u0111\u1ec9nh b\u1ea5t k\u1ef3 c\u00f3 \u0111\u00fang m\u1ed9t \u0111\u01b0\u1eddng \u0111i gi\u1eefa ch\u00fang). M\u1ed7i \u0111\u1ec9nh \u0111\u01b0\u1ee3c g\u00e1n m\u1ed9t gi\u00e1 tr\u1ecb. Ch\u00fang ta c\u1ea7n x\u1eed l\u00fd hai lo\u1ea1i truy v\u1ea5n - C\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh \\(i\\) th\u00e0nh \\(x\\) - T\u00ednh t\u1ed5ng XOR c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh \\(v\\)</p> <p>\u0110\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c \u0111\u1ec9nh \\(u, w_1, w_2, ..., w_k, v\\) trong \u0111\u00f3 t\u1ed3n t\u1ea1i m\u1ed9t c\u1ea1nh n\u1ed1i gi\u1eefa \\(u\\) v\u00e0 \\(w_1\\), \\(w_1\\) v\u00e0 \\(w_2\\), ..., \\(w_{k-1}\\) \u0111\u1ebfn \\(w_k\\), \\(w_k\\) \u0111\u1ebfn \\(v\\). V\u1edbi m\u1ed7i c\u1eb7p \u0111\u1ec9nh \\(u\\), \\(v\\) b\u1ea5t k\u1ef3 tr\u00ean c\u00e2y t\u1ed3n t\u1ea1i m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\).</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#hld","title":"HLD","text":""},{"location":"algo/data-structures/heavy-light-decomposition/#y-tuong-chinh","title":"\u00dd t\u01b0\u1edfng ch\u00ednh","text":"<p>V\u1eady ch\u00ednh x\u00e1c th\u00ec HLD s\u1ebd l\u00e0m g\u00ec \u0111\u1ec3 gi\u00fap ch\u00fang ta gi\u1ea3i \u0111\u01b0\u1ee3c phi\u00ean b\u1ea3n \"tr\u00ean c\u00e2y\" c\u1ee7a b\u00e0i to\u00e1n tr\u00ean? Li\u1ec7u ch\u00fang ta c\u00f3 th\u1ec3 bi\u1ebfn c\u00e2y cho tr\u01b0\u1edbc th\u00e0nh m\u1ed9t m\u1ea3ng \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n tr\u00ean \u0111\u00f3? C\u00e2u tr\u1ea3 l\u1eddi l\u00e0 kh\u00f4ng. Tuy nhi\u00ean ch\u00fang ta c\u00f3 th\u1ec3 chia c\u00e2y th\u00e0nh m\u1ed9t s\u1ed1 ph\u1ea7n, v\u00e0 gi\u1ea3i b\u00e0i to\u00e1n tr\u00ean t\u1eebng ph\u1ea7n \u0111\u00f3. C\u1ee5 th\u1ec3 nh\u01b0 sau, gi\u1ea3 s\u1eed c\u00f3 c\u00e2y sau \u0111\u00e2y</p> <p></p> <p>Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, c\u00f3 th\u1ec3 coi \u0111\u1ec9nh \\(1\\) l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y. V\u1edbi m\u1ed7i \u0111\u1ec9nh kh\u00f4ng ph\u1ea3i l\u00e1 tr\u00ean c\u00e2y, ch\u00fang ta s\u1ebd \u0111\u00e1nh d\u1ea5u nh\u1eefng c\u1ea1nh n\u1ed1i \u0111\u1ec9nh \u0111\u00f3 v\u1edbi con c\u00f3 k\u00edch th\u01b0\u1edbc c\u00e2y con l\u1edbn nh\u1ea5t c\u1ee7a c\u1ee7a n\u00f3.</p> <p>V\u00ed d\u1ee5, x\u00e9t \u0111\u1ec9nh \\(15\\) c\u00f3 ba \u0111\u1ec9nh con l\u1ea7n l\u01b0\u1ee3t l\u00e0 \u0111\u1ec9nh \\(17\\), \\(18\\) v\u00e0 \\(19\\).  C\u00e2y con \u1edf hai \u0111\u1ec9nh \\(18\\) v\u00e0 \\(19\\) c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 \\(1\\), c\u00f2n c\u00e2y con \u1edf \u0111\u1ec9nh \\(17\\) c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 \\(2\\).</p> <p>V\u00ec v\u1eady, ch\u00fang ta s\u1ebd \u0111\u00e1nh d\u1ea5u c\u1ea1nh n\u1ed1i gi\u1eefa \u0111\u1ec9nh \\(15\\) v\u00e0 \u0111\u1ec9nh \\(17\\) (t\u00f4 m\u00e0u \u0111\u1ecf). L\u00e0m t\u01b0\u01a1ng t\u1ef1 v\u1edbi c\u00e1c \u0111\u1ec9nh c\u00f2n l\u1ea1i, ch\u00fang ta \u0111\u01b0\u1ee3c c\u00e2y nh\u01b0 h\u00ecnh v\u1ebd d\u01b0\u1edbi \u0111\u00e2y.</p> <p></p> <p>Ch\u00fang ta s\u1ebd g\u1ecdi nh\u1eefng c\u1ea1nh m\u00e0u \u0111\u1ecf l\u00e0 nh\u1eefng \"c\u1ea1nh n\u1eb7ng\" (heavy edges) v\u00ec ch\u00fang n\u1ed1i m\u1ed9t \u0111\u1ec9nh v\u1edbi \u0111\u1ec9nh con \"n\u1eb7ng nh\u1ea5t\". Nh\u1eefng c\u1ea1nh c\u00f2n l\u1ea1i s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 nh\u1eefng \"c\u1ea1nh nh\u1eb9\" (light edges)</p> <p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng, nh\u1eefng c\u1ea1nh \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u s\u1ebd t\u1ea1o th\u00e0nh c\u00e1c \"chu\u1ed7i\" \u0111i t\u1eeb tr\u00ean xu\u1ed1ng d\u01b0\u1edbi. V\u00ed d\u1ee5 nh\u01b0 chu\u1ed7i \\(1-3-8-15-17-20\\) hay chu\u1ed7i \\(5-11\\). C\u00e1c \u0111\u1ec9nh l\u00e0 l\u00e1 c\u0169ng c\u00f3 th\u1ec3 coi l\u00e0 m\u1ed9t chu\u1ed7i ri\u00eang. </p> <p>V\u1edbi c\u00e1ch quy \u01b0\u1edbc tr\u00ean, ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng hai chu\u1ed7i \"li\u1ec1n nhau\" \u0111\u01b0\u1ee3c n\u1ed1i v\u1edbi nhau b\u1edfi m\u1ed9t c\u1ea1nh nh\u1eb9. Hai chu\u1ed7i \"li\u1ec1n nhau\" l\u00e0 hai chu\u1ed7i m\u00e0 t\u1ed3n t\u1ea1i \u0111\u1ec9nh \\(u\\) n\u1eb1m \u1edf m\u1ed9t chu\u1ed7i v\u00e0 \\(v\\) n\u1eb1m \u1edf chu\u1ed7i c\u00f2n l\u1ea1i sao cho \\(u\\) v\u00e0 \\(v\\) c\u00f3 c\u1ea1nh n\u1ed1i tr\u1ef1c ti\u1ebfp v\u1edbi nhau. Do \\(u\\) v\u00e0 \\(v\\) kh\u00e1c chu\u1ed7i n\u00ean c\u1ea1nh n\u1ed1i gi\u1eefa \\(u\\) v\u00e0 \\(v\\) l\u00e0 c\u1ea1nh nh\u1eb9. Hai chu\u1ed7i kh\u00f4ng th\u1ec3 n\u1ed1i \u1edf nhi\u1ec1u h\u01a1n m\u1ed9t c\u1eb7p \u0111i\u1ec3m.</p> <p>Khi \u0111\u00f3, ch\u00fang ta c\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng \u0111\u01b0\u1eddng \u0111i gi\u1eefa hai \u0111\u1ec9nh b\u1ea5t k\u1ef3 tr\u00ean c\u00e2y \u0111i qua kh\u00f4ng qu\u00e1 \\(O(\\log(n))\\) chu\u1ed7i. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 t\u1ef1 ch\u1ee9ng minh nh\u1eadn x\u00e9t tr\u00ean tr\u01b0\u1edbc khi \u0111\u1ecdc ch\u1ee9ng minh b\u00ean d\u01b0\u1edbi.</p> Ch\u1ee9ng minh <p> X\u00e9t m\u1ed9t \u0111\u1ec9nh $v$ \u0111\u01b0\u1ee3c n\u1ed1i v\u1edbi \u0111\u1ec9nh cha c\u1ee7a n\u00f3 l\u00e0 $p$ b\u1edfi m\u1ed9t c\u1ea1nh nh\u1eb9. Gi\u1ea3 s\u1eed k\u00edch th\u01b0\u1edbc c\u00e2y con c\u1ee7a $v$ l\u00e0 $x$ v\u00e0 k\u00edch th\u01b0\u1edbc c\u00e2y con c\u1ee7a $p$ l\u00e0 $y$. Do c\u1ea1nh n\u1eb7ng \u0111i t\u1eeb $p$ kh\u00f4ng \u0111\u01b0\u1ee3c n\u1ed1i xu\u1ed1ng $v$ n\u00ean ch\u1eafc ch\u1eafn t\u1ed3n t\u1ea1i m\u1ed9t con kh\u00e1c c\u1ee7a $p$ l\u00e0 $u$ c\u00f3 k\u00edch th\u01b0\u1edbc c\u00e2y con $\\geq x$. V\u00ec v\u1eady, $y \\geq 2 * x$  Do v\u1edbi m\u1ed7i l\u1ea7n nh\u1ea3y qua c\u1ea1nh nh\u1eb9, k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e2y con \u1edf \u0111\u1ec9nh sau khi nh\u1ea3y s\u1ebd t\u0103ng \u00edt nh\u1ea5t l\u00e0 g\u1ea5p \u0111\u00f4i n\u00ean ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn r\u1eb1ng \u0111\u1ec3 \u0111i l\u00ean m\u1ed9t t\u1ed5 ti\u00ean b\u1ea5t k\u1ef3 \u1edf ph\u00eda tr\u00ean th\u00ec c\u00f3 th\u1ec3 nh\u1ea3y qua kh\u00f4ng qu\u00e1 $\\log_2(n)$ c\u1ea1nh nh\u1eb9. Do m\u1ed7i l\u1ea7n \u0111i qua c\u1ea1nh nh\u1eb9 ch\u00ednh l\u00e0 m\u1ed9t l\u1ea7n nh\u1ea3y sang chu\u1ed7i m\u1edbi n\u00ean t\u1eeb m\u1ed9t \u0111\u1ec9nh $v$ l\u00ean t\u1ed5 ti\u00ean b\u1ea5t k\u1ef3 c\u1ee7a n\u00f3 s\u1ebd ch\u1ec9 \u0111i qua $O(\\log(n))$ chu\u1ed7i.  Khi \u0111\u00f3, t\u1eeb hai \u0111\u1ec9nh $u$, $v$ b\u1ea5t k\u1ef3, ch\u00fang ta c\u00f3 th\u1ec3 t\u00ecm LCA c\u1ee7a $u$, $v$ v\u00e0 \u0111i t\u1eeb $u$, $v$ \u0111\u1ebfn LCA. S\u1ed1 chu\u1ed7i \u0111i qua s\u1ebd kh\u00f4ng qu\u00e1 $O(\\log(n))$ </p> <p>Ngo\u00e0i ra, n\u1ebfu ta duy\u1ec7t c\u00e2y b\u1eb1ng DFS \u01b0u ti\u00ean c\u00e1c \u0111\u1ec9nh li\u1ec1n trong chu\u1ed7i tr\u01b0\u1edbc, ta c\u00f3 th\u1ec3 nh\u1eadn th\u1ea5y l\u00e0 c\u00e1c \u0111\u1ec9nh tr\u00ean c\u00f9ng m\u1ed9t chu\u1ed7i s\u1ebd n\u1eb1m k\u1ebf ti\u1ebfp nhau tr\u00ean th\u1ee9 t\u1ef1 DFS, v\u00e0 v\u00ec th\u1ebf vi\u1ec7c truy v\u1ea5n m\u1ed9t \u0111o\u1ea1n con b\u1ea5t k\u00ec tr\u00ean m\u1ed9t chu\u1ed7i n\u00e0o \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean Segment tree v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(\\log(n))\\).</p> <p>Nh\u01b0 v\u1eady, ch\u00fang ta \u0111i qua kh\u00f4ng qu\u00e1 \\(O(\\log(n))\\) chu\u1ed7i, v\u1edbi m\u1ed7i chu\u1ed7i ch\u00fang ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n tr\u1ea3 l\u1eddi truy v\u1ea5n ho\u1eb7c update trong \\(O(\\log(n))\\) tr\u00ean Segment tree n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho vi\u1ec7c tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n v\u00e0 c\u1eadp nh\u1eadt tr\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u0111i gi\u1eefa hai \u0111\u1ec9nh b\u1ea5t k\u1ef3 tr\u00ean c\u00e2y l\u00e0 \\(O(\\log^2(n))\\)</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#chi-tiet-cai-at","title":"Chi ti\u1ebft c\u00e0i \u0111\u1eb7t","text":"<p>Th\u00f4ng th\u01b0\u1eddng, do vi\u1ec7c s\u1eed d\u1ee5ng HLD s\u1ebd \u0111i k\u00e8m v\u1edbi m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0o \u0111\u00f3 v\u00e0 duy\u1ec7t \u0111\u1ed3 th\u1ecb, code c\u00f3 th\u1ec3 s\u1ebd d\u00e0i v\u00e0 g\u1ed3m nhi\u1ec1u ph\u1ea7n. Tuy nhi\u00ean, n\u1ebfu n\u1eafm ch\u1eafc \u00fd t\u01b0\u1edfng ch\u00ednh th\u00ec c\u00e0i \u0111\u1eb7t HLD r\u1ea5t \u0111\u01a1n gi\u1ea3n. </p>"},{"location":"algo/data-structures/heavy-light-decomposition/#tien-xu-ly","title":"Ti\u1ec1n x\u1eed l\u00fd","text":"<p>\u0110\u1ea7u ti\u00ean, ta c\u1ea7n ph\u1ea3i t\u00ednh k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e2y con t\u1eebng \u0111\u1ec9nh \u0111\u1ec3 l\u1ea5y ra c\u00e1c con \"n\u1eb7ng\" c\u1ee7a t\u1eebng \u0111\u1ec9nh m\u1ed9t. Ngo\u00e0i ra, ta c\u1ea7n t\u00ednh th\u00eam \u0111\u1ed9 s\u00e2u c\u00e1c \u0111\u1ec9nh \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho thao t\u00e1c t\u00ednh LCA.</p> <p><pre><code>void Dfs(int s, int p = -1) {\n    Sz[s] = 1;\n    for(int u: AdjList[s]) {\n        if(u == p) continue;\n        Par[u] = s;\n        Depth[u] = Depth[s] + 1;\n        Dfs(u, s);\n        Sz[s] += Sz[u];\n    }\n}\n</code></pre> m\u1ea3ng \\(Sz, Depth\\) v\u00e0 \\(Par\\) l\u1ea7n lu\u1ee3t l\u01b0u k\u00edch thu\u1edbc c\u00e2y con, \u0111\u1ed9 s\u00e2u v\u00e0 cha (t\u1ed5 ti\u00ean tr\u1ef1c ti\u1ebfp) c\u1ee7a c\u00e1c \u0111\u1ec9nh tr\u00ean c\u00e2y m\u1ea3ng \\(AdjList\\) l\u00e0 m\u1ea3ng vector \u0111\u1ec3 l\u01b0u l\u1ea1i th\u00f4ng tin v\u1ec1 \u0111\u1ed3 th\u1ecb. \\(AdjList[s]\\) l\u00e0 vector g\u1ed3m c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi \\(s\\).</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#tim-canh-nang-canh-nhe-va-tao-cac-chuoi","title":"T\u00ecm c\u1ea1nh n\u1eb7ng, c\u1ea1nh nh\u1eb9 v\u00e0 t\u1ea1o c\u00e1c chu\u1ed7i","text":"<p>Sau \u0111\u00f3 ch\u00fang ta th\u1ef1c hi\u1ec7n ph\u00e2n chia c\u00e1c \u0111\u1ec9nh v\u00e0o c\u00e1c chu\u1ed7i. V\u1edbi m\u1ed7i \u0111\u1ec9nh, c\u1ea7n l\u01b0u l\u1ea1i chu\u1ed7i c\u1ee7a \u0111\u1ec9nh v\u00e0 v\u1ecb tr\u00ed c\u1ee7a \u0111\u1ec9nh khi \u0111\u1eb7t c\u00e1c chu\u1ed7i li\u00ean ti\u1ebfp v\u1edbi nhau (\u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00fd truy v\u1ea5n). V\u1edbi m\u1ed7i chu\u1ed7i, ch\u00fang ta c\u1ea7n bi\u1ebft \u0111\u1ec9nh \u0111\u1ea7u ti\u00ean c\u1ee7a chu\u1ed7i (\u0111\u1ec3 th\u1ef1c hi\u1ec7n vi\u1ec7c nh\u1ea3y gi\u1eefa c\u00e1c chu\u1ed7i).</p> <p><pre><code>void Hld(int s, int p = -1) {\n    if(!ChainHead[CurChain]) {\n        ChainHead[CurChain] = s;\n    }\n    ChainID[s] = CurChain;\n    Pos[s] = CurPos;\n    Arr[CurPos] = s;\n    CurPos++;\n    int nxt = 0;\n    for(int u: AdjList[s]) {\n        if(u != p) {\n            if(nxt == 0 || Sz[u] &gt; Sz[nxt]) nxt = u;\n        }\n    }\n    if(nxt) Hld(nxt, s);\n    for(int u: AdjList[s]) {\n        if(u != p &amp;&amp; u != nxt) {\n            CurChain++;\n            Hld(u, s);\n        }\n    }\n}\n</code></pre> \\(nxt\\) l\u00e0 bi\u1ebfn d\u00f9ng \u0111\u1ec3 l\u01b0u l\u1ea1i \u0111\u1ec9nh con \"n\u1eb7ng nh\u1ea5t\". \\(Arr\\) l\u00e0 m\u1ea3ng d\u00f9ng \u0111\u1ec3 l\u01b0u l\u1ea1i c\u00e1c chu\u1ed7i.  \\(ChainID\\) l\u00e0 m\u1ea3ng l\u01b0u l\u1ea1i s\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c chu\u1ed7i.  \\(ChainHead\\) l\u00e0 m\u1ea3ng l\u01b0u l\u1ea1i node \u0111\u1ea7u ti\u00ean (\\(Depth\\) b\u00e9 nh\u1ea5t) c\u1ee7a t\u1eebng chu\u1ed7i \u0111\u1ec3 bi\u1ebft khi n\u00e0o c\u1ea7n nh\u1ea3y sang chu\u1ed7i m\u1edbi qua c\u1ea1nh nh\u1eb9.  M\u1ea3ng \\(Pos\\) l\u01b0u l\u1ea1i v\u1ecb tr\u00ed c\u1ee7a c\u00e1c \u0111\u1ec9nh tr\u00ean \\(Arr\\) \u0111\u1ec3 ti\u1ec7n x\u1eed l\u00fd tr\u00ean segment tree. \\(CurChain\\) v\u00e0 \\(CurPos\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 c\u00e1c bi\u1ebfn l\u01b0u l\u1ea1i ch\u1ec9 s\u1ed1 c\u1ee7a chu\u1ed7i v\u00e0 v\u1ecb tr\u00ed trong m\u1ea3ng \\(Arr\\) \u0111\u1ec3 d\u00f9ng cho chu\u1ed7i v\u00e0 \u0111\u1ec9nh ti\u1ebfp theo</p> <p>Nh\u01b0 v\u1eady, v\u1edbi m\u1ed7i \u0111\u1ec9nh, ch\u00fang ta s\u1ebd t\u00ecm c\u1ea1nh n\u1eb7ng v\u00e0 \u0111i xu\u1ed1ng c\u1ea1nh \u0111\u00f3 tr\u01b0\u1edbc. Sau \u0111\u00f3, ch\u00fang ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t t\u1ea1o ra c\u00e1c chu\u1ed7i m\u1edbi v\u00e0 nh\u1ea3y sang c\u00e1c \u0111\u1ec9nh nh\u1eb9. Nh\u01b0 v\u1eady, th\u1ee9 t\u1ef1 duy\u1ec7t \u0111\u1ed3 th\u1ecb s\u1ebd \u0111\u1ea3m b\u1ea3o m\u1ed7i chu\u1ed7i \u0111\u01b0\u1ee3c l\u01b0u \u0111\u00fang th\u1ee9 t\u1ef1 t\u1eeb tr\u00ean xu\u1ed1ng d\u01b0\u1edbi trong m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp tr\u00ean m\u1ea3ng \\(Arr\\).</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#tim-lca","title":"T\u00ecm LCA","text":"<p>Trong ph\u1ea7n l\u1edbn c\u00e1c b\u00e0i to\u00e1n s\u1eed d\u1ee5ng HLD \u0111\u1ec3 th\u1ef1c hi\u1ec7n truy v\u1ea5n tr\u00ean \u0111\u01b0\u1eddng \u0111i, ch\u00fang ta c\u1ea7n t\u00ecm t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t v\u00e0 th\u1ef1c hi\u1ec7n thao t\u00e1c l\u1ea7n l\u01b0\u1ee3t t\u1eeb hai \u0111\u1ec9nh \u0111\u1ebfn t\u1ed5 ti\u00ean chung n\u00e0y. R\u1ea5t may l\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ch\u00ednh nh\u1eefng th\u00f4ng tin \u0111\u00e3 l\u01b0u \u0111\u1ec3 t\u00ecm ra LCA m\u1ed9t c\u00e1ch nhanh ch\u00f3ng.</p> <p>Khi nh\u1ea3y t\u1eeb m\u1ed9t node \\(v\\) qua m\u1ed9t c\u1ea1nh nh\u1eb9 l\u00ean cha c\u1ee7a n\u00f3, ch\u00fang ta lu\u00f4n nh\u1ea3y sang m\u1ed9t chu\u1ed7i c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 b\u00e9 h\u01a1n (do th\u1ee9 t\u1ef1 duy\u1ec7t \u0111\u1ed3 th\u1ecb trong h\u00e0m \\(HLD\\)) n\u00ean \u0111\u1ec3 t\u00ecm LCA c\u1ee7a hai \u0111\u1ec9nh, ch\u00fang ta s\u1ebd t\u00ecm chu\u1ed7i ch\u1ee9a LCA \u0111\u00f3.</p> <p>Li\u00ean t\u1ee5c th\u1ef1c hi\u1ec7n nh\u1ea3y t\u1eeb chu\u1ed7i c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 l\u1edbn h\u01a1n l\u00ean m\u1ed9t chu\u1ed7i c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 b\u00e9 h\u01a1n (\u0110\u1ec3 \u0111\u1ea3m b\u1ea3o kh\u00f4ng b\u1ecb nh\u1ea3y qu\u00e1, lu\u00f4n ch\u1ecdn \u0111\u1ec9nh \u0111ang \u1edf chu\u1ed7i c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 l\u1edbn h\u01a1n \u0111\u1ec3 nh\u1ea3y) cho \u0111\u1ebfn khi hai \u0111\u1ec9nh n\u1eb1m tr\u00ean c\u00f9ng m\u1ed9t chu\u1ed7i.</p> <p>\u1ede \u0111\u00f3, \u0111\u1ec9nh c\u00f3 \u0111\u1ed9 s\u00e2u th\u1ea5p h\u01a1n l\u00e0 LCA c\u1ee7a \\(u\\) v\u00e0 \\(v\\).</p> <pre><code>int LCA(int u, int v) {\n    while(ChainID[u] != ChainID[v]) {\n        if(ChainID[u] &gt; ChainID[v]) {\n            u = Par[ChainHead[ChainID[u]]];\n        }\n        else {\n            v = Par[ChainHead[ChainID[v]]];\n        }\n    }\n    if(Depth[u] &lt; Depth[v]) return u;\n    return v;\n}\n</code></pre>"},{"location":"algo/data-structures/heavy-light-decomposition/#segment-tree","title":"Segment tree","text":"<p>Du\u1edbi \u0111\u00e2y l\u00e0 c\u00e1c thao t\u00e1c x\u1eed l\u00fd tr\u00ean segment tree. Ph\u1ea7n n\u00e0y s\u1ebd \u0111\u1ee7 \u0111\u1ec3 x\u1eed l\u00fd phi\u00ean b\u1ea3n kh\u00f4ng tr\u00ean c\u00e2y c\u1ee7a b\u00e0i to\u00e1n.</p> <pre><code>int ST[MaxN * 4];\nvoid Build(int id, int l, int r) {\n    if(l == r) {\n        ST[id] = Val[Arr[l]];\n        return;\n    }\n    int mid = (l + r) / 2;\n    Build(id * 2, l, mid);\n    Build(id * 2 + 1, mid + 1, r);\n    ST[id] = ST[id * 2] ^ ST[id * 2 + 1];\n}\n\nvoid Upd(int id, int l, int r, int pos, int val) {\n    if (l &gt; pos || r &lt; pos) return;\n    if (l == r &amp;&amp; l == pos) {\n        ST[id] = val;\n        return;\n    }\n    int mid = (l + r) / 2;\n    Upd(id * 2, l, mid, pos, val);\n    Upd(id * 2 + 1, mid + 1, r, pos, val);\n    ST[id] = ST[id * 2] ^ ST[id * 2 + 1];\n}\n\nint Calc(int id, int tl, int tr, int l, int r) {\n    if (tl &gt; r || tr &lt; l) return 0;\n    if (l &lt;= tl &amp;&amp; tr &lt;= r) return ST[id];\n    int mid = (tl + tr) / 2;\n    return Calc(id * 2, tl, mid, l, r) ^ Calc(id * 2 + 1, mid + 1, tr, l, r);\n}\n</code></pre>"},{"location":"algo/data-structures/heavy-light-decomposition/#cac-thao-tac-tren-cay","title":"C\u00e1c thao t\u00e1c tr\u00ean c\u00e2y","text":"<p>V\u00e0 cu\u1ed1i c\u00f9ng, ch\u00fang ta s\u1ebd c\u00f3 c\u00e1c h\u00e0m \u0111\u1ec3 x\u1eed l\u00fd truy v\u1ea5n tr\u00ean c\u00e2y. T\u1ea5t nhi\u00ean c\u00f3 th\u1ec3 \u0111\u01b0a to\u00e0n b\u1ed9 ph\u1ea7n n\u00e0y v\u00e0o trong main m\u00e0 kh\u00f4ng t\u0103ng \u0111\u1ed9 d\u00e0i code. Tuy nhi\u00ean \u0111\u1ec3 d\u1ec5 nh\u00ecn v\u00e0 ti\u1ec7n debug, ch\u00fang ta s\u1ebd code ri\u00eang h\u00e0m \u0111\u1ec3 x\u1eed l\u00fd truy v\u1ea5n tr\u00ean \u0111u\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh \\(v\\).</p> <pre><code>void Update(int x, int val) {\n    Upd(1, 1, N, Pos[x], val);\n}\n\nint Query(int u, int v) {\n    int lca = LCA(u, v);\n    int ans = 0;\n    while(ChainID[u] != ChainID[lca]) {\n        ans ^= Calc(1, 1, N, Pos[ChainHead[ChainID[u]]], Pos[u]);\n        u = Par[ChainHead[ChainID[u]]];\n    }\n    while(ChainID[v] != ChainID[lca]) {\n        ans ^= Calc(1, 1, N, Pos[ChainHead[ChainID[v]]], Pos[v]);\n        v = Par[ChainHead[ChainID[v]]];\n    }\n    if(Depth[u] &lt; Depth[v]) {\n        ans ^= Calc(1, 1, N, Pos[u], Pos[v]);\n    }\n    else {\n        ans ^= Calc(1, 1, N, Pos[v], Pos[u]);\n    }\n    return ans;\n}\n</code></pre> <p>Do b\u00e0i to\u00e1n ch\u1ec9 y\u00eau c\u1ea7u c\u1eadp nh\u1eadt tr\u00ean \u0111i\u1ec3m n\u00ean h\u00e0m \\(Update\\) kh\u00f4ng c\u00f3 g\u00ec \u0111\u00e1ng ch\u00fa \u00fd. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a h\u00e0m n\u00e0y l\u00e0 \\(O(\\log(n))\\).</p> <p>H\u00e0m \\(Query\\) d\u00f9ng \u0111\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n t\u1ed5ng XOR c\u1ee7a c\u00e1c s\u1ed1 tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\). Sau \u0111\u00f3, ch\u00fang ta th\u1ef1c hi\u1ec7n chia \u0111\u01b0\u1eddng \u0111i n\u00e0y th\u00e0nh c\u00e1c \u0111o\u1ea1n tr\u00ean c\u00e1c chain r\u1ed3i th\u1ef1c hi\u1ec7n thao t\u00e1c t\u00ednh tr\u00ean t\u1eebng \u0111o\u1ea1n. </p> <p>C\u00f3 th\u1ec3 th\u1ea5y, c\u00e1ch nh\u1ea3y trong khi t\u00ednh to\u00e1n Query ch\u00ednh l\u00e0 c\u00e1ch nh\u1ea3y khi t\u00ecm LCA. Tr\u00ean th\u1ef1c t\u1ebf, ch\u00fang ta kh\u00f4ng c\u1ea7n t\u00ecm LCA tr\u01b0\u1edbc m\u00e0 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n vi\u1ec7c \u0111\u00f3 ngay khi t\u00ednh Query. Nh\u01b0ng trong b\u00e0i n\u00e0y, ph\u1ea7n t\u00ecm LCA \u0111\u01b0\u1ee3c code ri\u00eang m\u1ed9t h\u00e0m \u0111\u1ec3 d\u1ec5 hi\u1ec3u v\u00e0 ti\u1ec7n gi\u1ea3i th\u00edch.</p>"},{"location":"algo/data-structures/heavy-light-decomposition/#code-ay-u","title":"Code \u0111\u1ea7y \u0111\u1ee7","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 code \u0111\u1ea7y \u0111\u1ee7 cho b\u00e0i to\u00e1n (k\u1ebft h\u1ee3p c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111o\u1ea1n tr\u00ean, khai b\u00e1o bi\u1ebfn v\u00e0 h\u00e0m main) \u0111\u1ec3 b\u1ea1n \u0111\u1ecdc tham kh\u1ea3o. (Code n\u1ed9p AC)</p> Code <pre><code>## include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MaxN = 1e5 + 5;\n\nint N, Q;\nint Val[MaxN];\nvector&lt;int&gt; AdjList[MaxN]; // input\n\nint Par[MaxN]; // parent\nint Depth[MaxN]; // do sau cua node\nint Sz[MaxN]; // kich thuoc cua cay con cho cac node\nint Pos[MaxN]; // vi tri trong mang cua node\nint Arr[MaxN]; // gia tri cua cac phan tu trong mang\nint ChainID[MaxN]; // ChainID[i]: Chain ma i nam trong \nint ChainHead[MaxN]; // ChainHead[i]: Node dau tien trong chain i\nint CurChain, CurPos;\n\nvoid Dfs(int s, int p = -1) {\n    Sz[s] = 1;\n    for(int u: AdjList[s]) {\n        if(u == p) continue;\n        Par[u] = s;\n        Depth[u] = Depth[s] + 1;\n        Dfs(u, s);\n        Sz[s] += Sz[u];\n    }\n}\n\nvoid Hld(int s, int p = -1) {\n    if(!ChainHead[CurChain]) {\n        ChainHead[CurChain] = s;\n    }\n    ChainID[s] = CurChain;\n    Pos[s] = CurPos;\n    Arr[CurPos] = s;\n    CurPos++;\n    int nxt = 0;\n    for(int u: AdjList[s]) {\n        if(u != p) {\n            if(nxt == 0 || Sz[u] &gt; Sz[nxt]) nxt = u;\n        }\n    }\n    if(nxt) Hld(nxt, s);\n    for(int u: AdjList[s]) {\n        if(u != p &amp;&amp; u != nxt) {\n            CurChain++;\n            Hld(u, s);\n        }\n    }\n}\n\n// find LCA\n\nint LCA(int u, int v) {\n    while(ChainID[u] != ChainID[v]) {\n        if(ChainID[u] &gt; ChainID[v]) {\n            u = Par[ChainHead[ChainID[u]]];\n        }\n        else {\n            v = Par[ChainHead[ChainID[v]]];\n        }\n    }\n    if(Depth[u] &lt; Depth[v]) return u;\n    return v;\n}\n\n// Segment Tree\n\nint ST[MaxN * 4];\nvoid Build(int id, int l, int r) {\n    if(l == r) {\n        ST[id] = Val[Arr[l]];\n        return;\n    }\n    int mid = (l + r) / 2;\n    Build(id * 2, l, mid);\n    Build(id * 2 + 1, mid + 1, r);\n    ST[id] = ST[id * 2] ^ ST[id * 2 + 1];\n}\n\nvoid Upd(int id, int l, int r, int pos, int val) {\n    if (l &gt; pos || r &lt; pos) return;\n    if (l == r &amp;&amp; l == pos) {\n        ST[id] = val;\n        return;\n    }\n    int mid = (l + r) / 2;\n    Upd(id * 2, l, mid, pos, val);\n    Upd(id * 2 + 1, mid + 1, r, pos, val);\n    ST[id] = ST[id * 2] ^ ST[id * 2 + 1];\n}\n\nint Calc(int id, int tl, int tr, int l, int r) {\n    if (tl &gt; r || tr &lt; l) return 0;\n    if (l &lt;= tl &amp;&amp; tr &lt;= r) return ST[id];\n    int mid = (tl + tr) / 2;\n    return Calc(id * 2, tl, mid, l, r) ^ Calc(id * 2 + 1, mid + 1, tr, l, r);\n}\n\n// Update and queries\n\nvoid Update(int x, int val) {\n    Upd(1, 1, N, Pos[x], val);\n}\n\nint Query(int u, int v) {\n    int lca = LCA(u, v);\n    int ans = 0;\n    while(ChainID[u] != ChainID[lca]) {\n        ans ^= Calc(1, 1, N, Pos[ChainHead[ChainID[u]]], Pos[u]);\n        u = Par[ChainHead[ChainID[u]]];\n    }\n    while(ChainID[v] != ChainID[lca]) {\n        ans ^= Calc(1, 1, N, Pos[ChainHead[ChainID[v]]], Pos[v]);\n        v = Par[ChainHead[ChainID[v]]];\n    }\n    if(Depth[u] &lt; Depth[v]) {\n        ans ^= Calc(1, 1, N, Pos[u], Pos[v]);\n    }\n    else {\n        ans ^= Calc(1, 1, N, Pos[v], Pos[u]);\n    }\n    return ans;\n}\n\n// main\n\nsigned main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    freopen(\"cowland.in\", \"r\", stdin);\n    freopen(\"cowland.out\", \"w\", stdout);\n    cin &gt;&gt; N &gt;&gt; Q;\n    for(int i = 1; i &lt;= N; i++) {\n        cin &gt;&gt; Val[i];\n    }\n    for(int i = 1; i &lt; N; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        AdjList[u].push_back(v);\n        AdjList[v].push_back(u);\n    }\n    CurPos = CurChain = 1;\n    Dfs(1);\n    Hld(1);\n    Build(1, 1, N);\n    while(Q--) {\n        int type;\n        cin &gt;&gt; type;\n        if(type == 1) {\n            // Update\n            int x, val;\n            cin &gt;&gt; x &gt;&gt; val;\n            Update(x, val);\n        }\n        else {\n            int u, v;\n            cin &gt;&gt; u &gt;&gt; v;\n            cout &lt;&lt; Query(u, v) &lt;&lt; '\\n';\n        }\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/heavy-light-decomposition/#bai-viet-tham-khao-va-bai-tap-luyen-tap","title":"B\u00e0i vi\u1ebft tham kh\u1ea3o v\u00e0 b\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<p>B\u00e0i vi\u1ebft tr\u00ean \u0111\u01b0\u1ee3c tham kh\u1ea3o t\u1eeb b\u00e0i vi\u1ebft g\u1ed1c Hybrid Tutorial 1: Heavy-Light Decomposition. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o v\u00e0 xem video h\u01b0\u1edbng d\u1eabn k\u00e8m theo c\u1ee7a galen_colin. Ngo\u00e0i ra c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft c\u1ee7a CP algo.</p> <p>Tr\u01b0\u1edbc h\u1ebft, b\u1ea1n \u0111\u1ecdc n\u00ean t\u1ef1 c\u00e0i \u0111\u1eb7t v\u00e0 n\u1ed9p b\u00e0i t\u1eadp ph\u00eda tr\u00ean t\u1ea1i \u0111\u00e2y. Sau \u0111\u00f3 c\u00f3 th\u1ec3 l\u00e0m th\u00eam c\u00e1c b\u00e0i t\u1eadp luy\u1ec7n t\u1eadp d\u01b0\u1edbi \u0111\u00e2y</p> <ul> <li>Path Queries (CSES)</li> <li>LUBENICA (SPOJ)</li> <li>QTREE (SPOJ)</li> <li>GRASSPLA (SPOJ)</li> <li>GSS7 (SPOJ)</li> <li>QRYLAND (CodeChef)</li> <li>MONOPLOY (CodeChef)</li> <li>QUERY (CodeChef)</li> <li>BLWHTREE (CodeChef)</li> <li>Milk Visits (USACO)</li> <li>Max Flow (USACO)</li> <li>Exercise Route (USACO)</li> </ul>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/","title":"Interval Tree tr\u00ean t\u1eadp \u0111o\u1ea1n th\u1eb3ng","text":"<p>T\u00e1c gi\u1ea3: V\u0169 chipchip Ph\u00fac Ho\u00e0ng</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t t\u1eadp h\u1ee3p ch\u1ee9a c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng c\u00f3 d\u1ea1ng \\(ax + b\\), m\u1ed7i \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t c\u1eb7p s\u1ed1 \\((a, b)\\). C\u1ea7n th\u1ef1c hi\u1ec7n hai lo\u1ea1i thao t\u00e1c:</p> <ol> <li>Th\u00eam m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0o t\u1eadp h\u1ee3p.</li> <li>Tr\u1ea3 l\u1eddi xem t\u1ea1i ho\u00e0nh \u0111\u1ed9 \\(q\\), \u0111i\u1ec3m n\u00e0o thu\u1ed9c \u00edt nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng trong t\u1eadp c\u00f3 tung \u0111\u1ed9 l\u1edbn nh\u1ea5t. N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u01b0\u1eddng th\u1eb3ng \\((a, b)\\) n\u00e0o c\u00f3 \\(aq + b\\) l\u1edbn nh\u1ea5t.</li> </ol> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y, hai c\u00e1ch ph\u1ed5 bi\u1ebfn l\u00e0 \u1ee9ng d\u1ee5ng bao l\u1ed3i v\u00e0 s\u1eed d\u1ee5ng c\u00e2y Interval Tree l\u01b0u \u0111o\u1ea1n th\u1eb3ng. Sau \u0111\u00e2y l\u00e0 nh\u1eefng \u01b0u \u0111i\u1ec3m v\u00e0 nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a IT \u0111o\u1ea1n th\u1eb3ng so v\u1edbi bao l\u1ed3i.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#uu-iem","title":"\u01afu \u0111i\u1ec3m","text":"<ol> <li>\u1ee8ng d\u1ee5ng \u0111\u01b0\u1ee3c v\u1edbi \u0111o\u1ea1n th\u1eb3ng ch\u1ee9 kh\u00f4ng ch\u1ec9 \u0111\u01b0\u1eddng th\u1eb3ng. \u0110\u00e2y l\u00e0 \u01b0u \u0111i\u1ec3m l\u1edbn nh\u1ea5t c\u1ee7a IT \u0111o\u1ea1n th\u1eb3ng so v\u1edbi bao l\u1ed3i, khi t\u1eadp h\u1ee3p c\u1ea7n x\u1eed l\u00ed l\u00e0 t\u1eadp \u0111o\u1ea1n th\u1eb3ng ch\u1ee9 kh\u00f4ng ph\u1ea3i \u0111\u01b0\u1eddng th\u1eb3ng (t\u1ee9c l\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng \\(ax + b\\) ch\u1ec9 t\u1ed3n t\u1ea1i khi \\(x\\) thu\u1ed9c m\u1ed9t kho\u1ea3ng \\((l, h)\\) nh\u1ea5t \u0111\u1ecbnh), bao l\u1ed3i s\u1ebd kh\u00f4ng th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c.</li> <li>Th\u1ef1c hi\u1ec7n thao t\u00e1c th\u00eam \u0111\u01b0\u1eddng th\u1eb3ng (\u0111o\u1ea1n th\u1eb3ng) m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng. Bao l\u1ed3i g\u1eb7p nh\u01b0\u1ee3c \u0111i\u1ec3m l\u1edbn khi th\u00eam \u0111\u01b0\u1eddng th\u1eb3ng m\u00e0 h\u1ec7 s\u1ed1 g\u00f3c \\(a\\) kh\u00f4ng t\u0103ng d\u1ea7n ho\u1eb7c gi\u1ea3m d\u1ea7n. M\u1eb7c d\u00f9 kh\u00f4ng ph\u1ea3i l\u00e0 kh\u00f4ng th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c, nh\u01b0ng bao l\u1ed3i khi \u0111\u00f3 ph\u1ea3i bi\u1ec3u di\u1ec5n b\u1eb1ng c\u1ea5u tr\u00fac kh\u00e1c kh\u00f4ng ph\u1ea3i stack, g\u00e2y kh\u00f3 kh\u0103n l\u1edbn khi code.</li> <li>D\u1ec5 code. Ch\u00ednh v\u00ec hai \u01b0u \u0111i\u1ec3m \u1edf tr\u00ean, IT \u0111o\u1ea1n th\u1eb3ng r\u1ea5t t\u1ed5ng qu\u00e1t v\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i x\u00e9t tr\u01b0\u1eddng h\u1ee3p ph\u1ee5 thu\u1ed9c v\u00e0o b\u00e0i to\u00e1n nh\u01b0 bao l\u1ed3i. \u0110a s\u1ed1 c\u00e1c b\u00e0i to\u00e1n, ph\u1ea7n Update v\u00e0 Query c\u1ee7a IT \u0111o\u1ea1n th\u1eb3ng g\u1ea7n nh\u01b0 gi\u1ed1ng h\u1ec7t nhau. Ph\u1ea7n th\u00e2n ch\u01b0\u01a1ng tr\u00ecnh c\u0169ng r\u1ea5t ng\u1eafn g\u1ecdn.</li> </ol>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#nhuoc-iem","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ol> <li>Ph\u1ee5 thu\u1ed9c v\u00e0o k\u00edch th\u01b0\u1edbc ho\u00e0nh \u0111\u1ed9 \\(x\\). V\u00ec IT \u0111o\u1ea1n th\u1eb3ng x\u1eed l\u00ed tr\u00ean kho\u1ea3ng c\u1ee7a ho\u00e0nh \u0111\u1ed9, v\u1edbi b\u00e0i to\u00e1n m\u00e0 query \\(x\\) l\u1edbn ho\u1eb7c \\(x\\) kh\u00f4ng ph\u1ea3i s\u1ed1 nguy\u00ean kh\u00f4ng th\u1ec3 bi\u1ec3u di\u1ec5n b\u1eb1ng IT b\u00ecnh th\u01b0\u1eddng. C\u00f3 th\u1ec3 thay th\u1ebf b\u1eb1ng r\u1eddi r\u1ea1c h\u00f3a c\u00e1c t\u1ecda \u0111\u1ed9 ho\u1eb7c IT \u0111\u1ed9ng, nh\u01b0ng so v\u1edbi bao l\u1ed3i \u0111\u00e2y l\u00e0 m\u1ed9t nh\u01b0\u1ee3c \u0111i\u1ec3m \u0111\u00e1ng k\u1ec3 khi bao l\u1ed3i ho\u00e0n to\u00e0n kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o \\(x\\).</li> <li>B\u1ed9 nh\u1edb v\u00e0 th\u1eddi gian l\u1edbn. L\u01b0u m\u1ed9t c\u00e2y IT ch\u1ee9a hai s\u1ed1 nguy\u00ean \\(a\\), \\(b\\) t\u1ed1n b\u1ed9 nh\u1edb h\u01a1n nhi\u1ec1u so v\u1edbi stack bao l\u1ed3i. X\u1eed l\u00ed tr\u00ean c\u00e2y IT c\u0169ng ch\u1eadm h\u01a1n ch\u1eb7t nh\u1ecb ph\u00e2n tr\u00ean bao l\u1ed3i. V\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p, c\u00f3 th\u1ec3 so s\u00e1nh qua b\u1ea3ng sau</li> </ol> <p>L\u01b0u \u00fd: \u1ede \u0111\u00e2y ta gi\u1ea3 s\u1eed c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng th\u00eam v\u00e0o c\u00f3 h\u1ec7 s\u1ed1 \\(a\\) t\u0103ng d\u1ea7n ho\u1eb7c gi\u1ea3m d\u1ea7n, bao l\u1ed3i \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng stack.</p> <p>T\u00f3m l\u1ea1i, so v\u1edbi c\u00e1ch \u1ee9ng d\u1ee5ng bao l\u1ed3i, s\u1eed d\u1ee5ng IT \u0111o\u1ea1n th\u1eb3ng l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p t\u1ed5ng qu\u00e1t h\u01a1n nh\u01b0ng ch\u1eadm v\u00e0 t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n. Sau \u0111\u00e2y l\u00e0 nh\u1eefng ph\u00e2n t\u00edch c\u01a1 b\u1ea3n v\u1ec1 thu\u1eadt to\u00e1n.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>X\u00e2y d\u1ef1ng m\u1ed9t c\u00e2y Interval Tree \u0111\u1ec3 qu\u1ea3n l\u00ed t\u1eadp c\u00e1c \u0111o\u1ea1n th\u1eb3ng, m\u1ed7i n\u00fat c\u1ee7a c\u00e2y qu\u1ea3n l\u00ed m\u1ed9t kho\u1ea3ng tr\u00ean tr\u1ee5c ho\u00e0nh. Th\u00f4ng tin l\u01b0u \u1edf m\u1ed7i n\u00fat tr\u00ean c\u00e2y s\u1ebd l\u00e0 \u0111o\u1ea1n th\u1eb3ng \u0111\u1eb7c tr\u01b0ng cho kho\u1ea3ng n\u00f3 qu\u1ea3n l\u00ed. \u0110o\u1ea1n th\u1eb3ng n\u00e0y ph\u1ea3i ph\u1ee7 k\u00edn kho\u1ea3ng, t\u1ee9c l\u00e0 \u0111o\u1ea1n \\(ax + b\\) c\u00f3 kho\u1ea3ng \\(x\\) bao l\u1ea5y kho\u1ea3ng do n\u00fat qu\u1ea3n l\u00ed (n\u1ebfu l\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng th\u00ec lu\u00f4n ph\u1ee7 k\u00edn kho\u1ea3ng do n\u00fat qu\u1ea3n l\u00ed). \u0110o\u1ea1n th\u1eb3ng \u0111\u01b0\u1ee3c l\u01b0u trong n\u00fat ph\u1ea3i cao h\u01a1n t\u1ea5t c\u1ea3 c\u00e1c \u0111o\u1ea1n kh\u00e1c t\u1ea1i m\u1ed9t v\u1ecb tr\u00ed n\u00e0o \u0111\u00f3 thu\u1ed9c kho\u1ea3ng (n\u1ebfu kh\u00f4ng th\u00ec kh\u00f4ng c\u1ea7n quan t\u00e2m \u0111\u1ebfn \u0111o\u1ea1n \u0111\u00f3). \u00dd ngh\u0129a c\u1ee7a vi\u1ec7c l\u01b0u n\u00e0y l\u00e0 v\u1edbi m\u1ed9t query \\(q\\) b\u1ea5t k\u00ec, \u0111o\u1ea1n \\(aq + b\\) cao nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u trong m\u1ed9t n\u00fat n\u00e0o \u0111\u00f3 c\u1ee7a c\u00e2y IT qu\u1ea3n l\u00ed kho\u1ea3ng ch\u1ee9a \\(q\\). C\u00e1ch l\u01b0u \u0111o\u1ea1n th\u1eb3ng n\u00e0y kh\u00e1 tr\u1eebu tr\u01b0\u1ee3ng, n\u1ebfu b\u1ea1n \u0111\u1ecdc ph\u1ea7n n\u00e0y ch\u01b0a hi\u1ec3u, n\u00ean b\u1ecf qua \u0111\u1ec3 xem c\u00e1ch Query v\u00e0 Update tr\u00ean c\u00e2y r\u1ed3i \u0111\u1ecdc l\u1ea1i ph\u1ea7n n\u00e0y sau.</p> <p>Nh\u01b0 v\u1eady, th\u00f4ng tin l\u01b0u tr\u00ean c\u00e2y IT s\u1ebd \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t m\u1ea3ng line, line l\u00e0 m\u1ed9t c\u1eb7p s\u1ed1 \\((a, b)\\) bi\u1ec3u di\u1ec5n \u0111\u01b0\u1eddng th\u1eb3ng.</p> <pre><code>line it[MAXX * 4]; // MAXX l\u00e0 gi\u1edbi h\u1ea1n tr\u1ee5c ho\u00e0nh\n</code></pre> <p>Ngo\u00e0i ra, c\u00f3 th\u1ec3 th\u00eam m\u1ed9t v\u00e0i m\u1ea3ng ph\u1ee5 c\u1ea7n thi\u1ebft cho IT nh\u01b0 <code>low</code>, <code>high</code>, <code>leaf</code>, ...</p> <p>Ta \u0111\u1ecbnh ngh\u0129a h\u00e0m <code>Get(line d, int x)</code> cho bi\u1ebft tung \u0111\u1ed9 c\u1ee7a \u0111i\u1ec3m thu\u1ed9c \u0111\u01b0\u1eddng th\u1eb3ng <code>d</code> t\u1ea1i ho\u00e0nh \u0111\u1ed9 <code>x</code>.</p> <pre><code>int Get(line d, int x)\n{\n    return d.a * x + d.b;\n}\n</code></pre>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#query","title":"Query","text":"<p>Ta s\u1ebd tr\u1ea3 l\u1eddi cho query \\(q\\), xem t\u1ea1i ho\u00e0nh \u0111\u1ed9 \\(x = q\\), t\u00ecm tung \u0111\u1ed9 cao nh\u1ea5t c\u1ee7a m\u1ed9t \u0111i\u1ec3m thu\u1ed9c m\u1ed9t \u0111o\u1ea1n trong t\u1eadp. Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean, IT l\u01b0u c\u00e1c \u0111o\u1ea1n th\u1eb3ng \u0111\u1ea3m b\u1ea3o trong c\u00e1c n\u00fat c\u00e2y qu\u1ea3n l\u00ed kho\u1ea3ng ch\u1ee9a \\(q\\) c\u00f3 m\u1ed9t n\u00fat l\u01b0u \u0111o\u1ea1n th\u1eb3ng \u0111\u1ea1t tung \u0111\u1ed9 cao nh\u1ea5t (l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 \u0111\u01b0\u1ee3c nh\u01b0 v\u1eady th\u00ec xem ph\u1ea7n Update). V\u1eady \u1edf \u0111\u00e2y, mu\u1ed1n tr\u1ea3 l\u1eddi cho query \\(q\\), ta \u0111i t\u1eeb g\u1ed1c xu\u1ed1ng n\u00fat l\u00e1 qu\u1ea3n l\u00ed \u0111i\u1ec3m \\(q\\), tr\u00ean \u0111\u01b0\u1eddng \u0111i update \u0111\u00e1p s\u1ed1 b\u1eb1ng tung \u0111\u1ed9 cao nh\u1ea5t t\u1ea1i \u0111i\u1ec3m \\(q\\) c\u1ee7a \u0111o\u1ea1n th\u1eb3ng do n\u00fat \u0111\u00f3 qu\u1ea3n l\u00ed.</p> <pre><code>int Query(int node, int pos)\n{\n    if(low[node] &gt; pos || high[node] &lt; pos)\n    {\n        return -oo;\n    }\n    res = Get(it[node], pos);\n    if(low[node] == high[node])\n    {\n        return res;\n    }\n    res = max(res, Query(node * 2, pos));\n    res = max(res, Query(node * 2 + 1, pos));\n    return res;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(log(MAXX))\\)</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#update","title":"Update","text":"<p>Th\u00eam m\u1ed9t \u0111o\u1ea1n th\u1eb3ng v\u00e0o t\u1eadp h\u1ee3p, ta ph\u1ea3i thay \u0111\u1ed5i nh\u1eefng n\u00fat tr\u00ean c\u00e2y IT qu\u1ea3n l\u00ed kho\u1ea3ng \u1ee9ng v\u1edbi \u0111o\u1ea1n th\u1eb3ng \u0111\u00f3. Vi\u1ec7c \u0111\u1ea7u ti\u00ean, gi\u1ed1ng nh\u01b0 Update tr\u00ean c\u00e2y IT c\u01a1 b\u1ea3n, ta ph\u1ea3i chia \u0111o\u1ea1n c\u1ea7n Update ra th\u00e0nh nh\u1eefng kho\u1ea3ng IT.</p> <pre><code>void Update(int node, int l, int h, line val)\n{\n    if(low[node] &gt; h || high[node] &lt; l)\n    {\n        return;\n    }\n    if(low[node] &gt;= l &amp;&amp; high[node] &lt;= h)\n    {\n        // Do something\n        return;\n    }\n    Update(node * 2, l, h, val);\n    Update(node * 2 + 1, l, h, val);\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ph\u1ea7n chia kho\u1ea3ng n\u00e0y l\u00e0: \\(O(log(MAXX))\\), gi\u1ed1ng nh\u01b0 IT c\u01a1 b\u1ea3n. N\u1ebfu \u0111o\u1ea1n c\u1ea7n Update l\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng \\((l = low[1], h = high[1])\\) th\u00ec kh\u00f4ng m\u1ea5t th\u1eddi gian chia kho\u1ea3ng, \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u1ec9 l\u00e0 \\(O(1)\\).</p> <p>B\u00e2y gi\u1edd vi\u1ec7c ph\u1ea3i l\u00e0m l\u00e0 \u0111i\u1ec1n v\u00e0o ch\u1ed7 <code>// Do Something</code>. Ta c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng <code>val</code> v\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng <code>it[node]</code>, c\u1ea3 hai \u0111\u1ec1u ch\u1ec9 \u0111\u01b0\u1ee3c x\u00e9t trong kho\u1ea3ng t\u1eeb <code>low[node]</code> \u0111\u1ebfn <code>high[node]</code>. L\u1ea5y <code>mid</code> l\u00e0 \u0111i\u1ec3m gi\u1eefa c\u1ee7a kho\u1ea3ng <code>(mid = (low[node] + high[node]) / 2)</code>. Ta s\u1ebd thay \u0111\u1ed5i n\u00fat <code>it[node]</code> v\u00e0 c\u1ea3 c\u00e1c con c\u1ee7a n\u00f3. C\u00f3 6 tr\u01b0\u1eddng h\u1ee3p c\u00f3 th\u1ec3 x\u1ea3y ra:</p> <ol> <li><code>it[node]</code> ho\u00e0n to\u00e0n n\u1eb1m tr\u00ean <code>val</code>. Tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta ch\u1ec9 b\u1ecf qua m\u00e0 kh\u00f4ng l\u00e0m g\u00ec, v\u00ec <code>val</code> ch\u1eafc ch\u1eafn kh\u00f4ng bao gi\u1edd \u0111\u1ea1t max trong kho\u1ea3ng <code>low[node]</code> \u0111\u1ebfn <code>high[node]</code>.</li> </ol> <p><code>cpp if(Get(it[node], low[node]) &gt;= Get(val, low[node]) &amp;&amp; Get(it[node], high[node]) &gt;= Get(val, high[node])) {     return; }</code></p> <ol> <li> <p><code>it[node]</code> ho\u00e0n to\u00e0n n\u1eb1m d\u01b0\u1edbi <code>val</code>. Tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta g\u00e1n <code>it[node]</code> b\u1eb1ng <code>val</code>, <code>it[node]</code> c\u0169 kh\u00f4ng c\u00f2n gi\u00e1 tr\u1ecb khi t\u00ecm max.</p> <p><code>cpp if(Get(it[node], low[node]) &lt;= Get(val, low[node]) &amp;&amp; Get(it[node], high[node]) &lt;= Get(val, high[node])) { it[node] = val; return; }</code></p> </li> <li> <p>N\u1eeda b\u00ean tr\u00e1i c\u1ee7a <code>it[node]</code> ho\u00e0n to\u00e0n n\u1eb1m tr\u00ean n\u1eeda b\u00ean tr\u00e1i c\u1ee7a <code>val</code>. V\u1eady <code>val</code> ch\u1eafc ch\u1eafn kh\u00f4ng bao gi\u1edd \u0111\u1ea1t max t\u1ea1i n\u1eeda tr\u00e1i c\u1ee7a kho\u1ea3ng <code>node</code>, ta gi\u1eef l\u1ea1i <code>it[node]</code> t\u1ea1i <code>node</code> v\u00e0 down <code>val</code> xu\u1ed1ng con ph\u1ea3i <code>(node * 2 + 1)</code>.</p> <p><code>cpp if(Get(it[node], low[node]) &gt;= Get(val, low[node]) &amp;&amp; Get(it[node], mid) &gt;= Get(val, mid)) { Update(node * 2 + 1, l, h, val); return; }</code></p> </li> <li> <p>N\u1eeda b\u00ean tr\u00e1i c\u1ee7a <code>it[node]</code> ho\u00e0n to\u00e0n n\u1eb1m d\u01b0\u1edbi n\u1eeda b\u00ean tr\u00e1i c\u1ee7a <code>val</code>. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean, ta down <code>it[node]</code> xu\u1ed1ng con ph\u1ea3i c\u1ee7a node v\u00e0 update <code>it[node]</code> b\u1eb1ng <code>val</code>.</p> <p><code>cpp if(Get(it[node], low[node]) &lt;= Get(val, low[node]) &amp;&amp; Get(it[node], mid) &lt;= Get(val, mid)) { Update(node * 2 + 1, l, h, it[node]); it[node] = val; return; }</code></p> </li> <li> <p>N\u1eeda b\u00ean ph\u1ea3i c\u1ee7a <code>it[node]</code> ho\u00e0n to\u00e0n n\u1eb1m tr\u00ean n\u1eeda b\u00ean ph\u1ea3i c\u1ee7a <code>val</code>.</p> <p><code>cpp if(Get(it[node], mid + 1) &gt;= Get(val, mid + 1) &amp;&amp; Get(it[node], high[node]) &gt;= Get(val, high[node])) { Update(node * 2, l, h, val); return; }</code></p> </li> <li> <p>N\u1eeda b\u00ean ph\u1ea3i c\u1ee7a <code>it[node]</code> ho\u00e0n to\u00e0n n\u1eb1m d\u01b0\u1edbi n\u1eeda b\u00ean ph\u1ea3i c\u1ee7a <code>val</code>.</p> <p><code>cpp if(Get(it[node], mid + 1) &lt;= Get(val, mid + 1) &amp;&amp; Get(it[node], high[node]) &lt;= Get(val, high[node])) { Update(node * 2, l, h, it[node]); it[node] = val; return; }</code></p> </li> </ol> <p>Sau khi x\u00e9t xong 6 tr\u01b0\u1eddng h\u1ee3p \u1edf tr\u00ean, ta \u0111\u00e3 x\u1eed l\u00ed xong vi\u1ec7c Update \u0111o\u1ea1n val trong m\u1ed9t kho\u1ea3ng <code>low[node]</code>, <code>high[node]</code>. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c n\u00e0y l\u00e0 \\(O(log(MAXX))\\), v\u00ec c\u00f3 th\u1ec3 ph\u1ea3i \u0111i t\u1eeb <code>node</code> cho \u0111\u1ebfn l\u00e1. C\u00f3 th\u1ec3 th\u1ea5y, c\u00e2y IT c\u00f3 \u0111\u1ea7y \u0111\u1ee7 th\u00f4ng tin v\u1ec1 \u0111o\u1ea1n th\u1eb1ng \u0111\u1ea1t max t\u1ea1i m\u1ed9t ho\u00e0nh \u0111\u1ed9 nh\u1ea5t \u0111\u1ecbnh, v\u00ec ta ch\u1ec9 lo\u1ea1i nh\u1eefng \u0111o\u1ea1n th\u1eb3ng m\u00e0 ho\u00e0n to\u00e0n kh\u00f4ng c\u00f2n gi\u00e1 tr\u1ecb (tr\u01b0\u1eddng h\u1ee3p 1 v\u00e0 tr\u01b0\u1eddng h\u1ee3p 2), c\u00f2n nh\u1eefng \u0111o\u1ea1n th\u1eb3ng v\u1eabn c\u00f3 th\u1ec3 \u0111\u1ea1t max t\u1ea1i m\u1ed9t v\u1ecb tr\u00ed n\u00e0o \u0111\u1ea5y lu\u00f4n \u0111\u01b0\u1ee3c b\u1ea3o t\u1ed3n.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(log^2(MAXX))\\). \\(O(log(MAXX))\\) khi chia kho\u1ea3ng, \\(O(log(MAXX))\\) khi update tr\u00ean m\u1ed9t kho\u1ea3ng. N\u1ebfu update \u0111\u01b0\u1eddng th\u1eb3ng th\u00ec kh\u00f4ng m\u1ea5t th\u1eddi gian chia kho\u1ea3ng, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng c\u1ed9ng l\u00e0 \\(O(log(MAXX))\\).</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>Query v\u00e0 Update \u1edf tr\u00ean l\u00e0 nh\u1eefng thao t\u00e1c c\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a IT \u0111o\u1ea1n th\u1eb3ng. Ngo\u00e0i ra, c\u00f3 th\u1ec3 c\u00f3 th\u00eam nhi\u1ec1u th\u00f4ng tin ph\u1ee5 \u0111\u00ednh k\u00e8m v\u1edbi \u0111o\u1ea1n th\u1eb3ng, t\u00f9y thu\u1ed9c v\u00e0o \u0111\u1ec1 b\u00e0i to\u00e1n.</p> <p>C\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 bi\u1ec3u di\u1ec5n \u0111o\u1ea1n th\u1eb3ng trong c\u00e2y IT ngo\u00e0i \\(ax + b\\). V\u00ed d\u1ee5, c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n \u0111o\u1ea1n th\u1eb3ng b\u1eb1ng c\u00e1ch l\u01b0u t\u1ecda \u0111\u1ed9 2 \u0111i\u1ec3m \u0111\u1ea7u m\u00fat c\u1ee7a \u0111o\u1ea1n. T\u00f9y v\u00e0o \u0111\u1ec1 b\u00e0i to\u00e1n m\u00e0 c\u00f3 c\u00e1ch bi\u1ec3u di\u1ec5n h\u1ee3p l\u00ed nh\u1ea5t.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":"<p>B\u00e0i to\u00e1n t\u00ecm max, min c\u1ee7a \\(ax + b\\) th\u01b0\u1eddng \u0111i k\u00e8m v\u1edbi thu\u1eadt to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng, ch\u1eb3ng h\u1ea1n nh\u01b0 b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng c\u00f3 c\u00f4ng th\u1ee9c \\(f[i] = max(a[j] * x[i] + b[j] + c)\\), ta c\u1ea7n t\u00ecm \\(j &lt; i\\) sao cho h\u00e0m \u0111\u00f3 \u0111\u1ea1t max. Bao l\u1ed3i c\u0169ng l\u00e0 ph\u01b0\u01a1ng ph\u00e1p th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong b\u00e0i to\u00e1n n\u00e0y. H\u1ea1n ch\u1ebf c\u1ee7a bao l\u1ed3i l\u00e0 \\(a[j]\\) ph\u1ea3i t\u0103ng d\u1ea7n ho\u1eb7c gi\u1ea3m d\u1ea7n (n\u1ebfu kh\u00f4ng s\u1ebd ph\u1ea3i s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac kh\u00e1c stack \u0111\u1ec3 bi\u1ec3u di\u1ec5n bao l\u1ed3i, code r\u1ea5t kh\u00f3 kh\u0103n). H\u1ea1n ch\u1ebf c\u1ee7a IT \u0111o\u1ea1n th\u1eb3ng l\u00e0 \\(x[i]\\) ph\u1ea3i nguy\u00ean v\u00e0 nh\u1ecf \u0111\u1ec3 c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n tr\u00ean IT (n\u1ebfu kh\u00f4ng s\u1ebd ph\u1ea3i s\u1eed d\u1ee5ng IT \u0111\u1ed9ng ho\u1eb7c r\u1eddi r\u1ea1c h\u00f3a).</p> <p>Ngo\u00e0i ra, c\u00f3 m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n y\u00eau c\u1ea7u t\u00ecm max, min tr\u00ean t\u1eadp \u0111o\u1ea1n th\u1eb3ng. \u0110\u00e2y l\u00e0 nh\u1eefng b\u00e0i to\u00e1n IT \u0111o\u1ea1n th\u1eb3ng g\u1ea7n nh\u01b0 l\u00e0 c\u00e1ch l\u00e0m duy nh\u1ea5t.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#mot-so-cau-hoi","title":"M\u1ed9t s\u1ed1 c\u00e2u h\u1ecfi:","text":"<p>\u0110\u1ec3 hi\u1ec3u r\u00f5 v\u1ec1 IT \u0111o\u1ea1n th\u1eb3ng, b\u1ea1n h\u00e3y t\u1ef1 tr\u1ea3 l\u1eddi m\u1ed9t s\u1ed1 c\u00e2u h\u1ecfi sau:</p> <ol> <li> <p>Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0o th\u00ec m\u1ed9t n\u00fat kh\u00f4ng c\u00f3 th\u00f4ng tin g\u00ec c\u1ea3?</p> </li> <li> <p>Trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p 4 v\u00e0 6 c\u1ee7a ph\u1ea7n Update, t\u1ea1i sao ph\u1ea3i g\u00e1n l\u1ea1i <code>val</code> cho <code>it[node]</code>?</p> </li> <li> <p>Gi\u1ea3 s\u1eed thay v\u00ec truy v\u1ea5n theo \u0111i\u1ec3m, ta truy v\u1ea5n theo kho\u1ea3ng, t\u1ee9c l\u00e0 tr\u1ea3 l\u1eddi xem t\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m trong m\u1ed9t kho\u1ea3ng n\u00e0o \u0111\u00f3, \u0111o\u1ea1n th\u1eb3ng n\u00e0o \u0111\u1ea1t chi\u1ec1u cao l\u1edbn nh\u1ea5t / nh\u1ecf nh\u1ea5t. Gi\u1ea3 s\u1eed kho\u1ea3ng n\u00e0y n\u1eb1m ho\u00e0n to\u00e0n trong ph\u1ea1m vi qu\u1ea3n l\u00ed c\u1ee7a m\u1ed9t n\u00fat n\u00e0o \u0111\u00f3, li\u1ec7u ta c\u00f3 th\u1ec3 tr\u1ea3 lu\u00f4n k\u1ebft qu\u1ea3 l\u00e0 \u0111o\u1ea1n th\u1eb3ng l\u01b0u trong n\u00fat \u0111\u00f3 kh\u00f4ng? V\u00ec sao?</p> </li> </ol>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":""},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#mot-so-bai-tap-quy-hoach-ong-bao-loi-truyen-thong","title":"M\u1ed9t s\u1ed1 b\u00e0i t\u1eadp \"quy ho\u1ea1ch \u0111\u1ed9ng bao l\u1ed3i\" truy\u1ec1n th\u1ed1ng","text":"<ul> <li>VNOJ - VMPIZZA</li> <li>CF 189 - Div 1 - C</li> <li>SPOJ - ACQUIRE</li> <li>SPOJ - APIO10A</li> </ul> <p>\u0110\u1ec3 l\u00e0m nh\u1eefng b\u00e0i t\u1eadp n\u00e0y, \u0111\u1ea7u ti\u00ean ta s\u1ebd gi\u1ea3i b\u1eb1ng c\u00e1ch quy ho\u1ea1ch \u0111\u1ed9ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N^2)\\). C\u00f4ng th\u1ee9c quy ho\u1ea1nh \u0111\u1ed9ng s\u1ebd c\u00f3 d\u1ea1ng l\u00e0 \\(f[i] = max/min(a[j] * x[i] + b[j] + c)\\), v\u1edbi m\u1ecdi \\(j\\) t\u1eeb 1 \u0111\u1ebfn \\(i - 1\\). \u0110\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p xu\u1ed1ng \\(O(N \\log{N})\\), ta s\u1ebd s\u1eed d\u1ee5ng bao l\u1ed3i ho\u1eb7c IT \u0111o\u1ea1n th\u1eb3ng. L\u01b0u \u00fd l\u00e0 v\u1edbi c\u00e1ch bao l\u1ed3i, stack bao l\u1ed3i ph\u1ea3i \u0111\u1ea3m b\u1ea3o \\(a[j]\\) t\u0103ng d\u1ea7n ho\u1eb7c gi\u1ea3m d\u1ea7n, n\u1ebfu kh\u00f4ng ph\u1ea3i l\u1ecdc ra sao cho t\u00ednh ch\u1ea5t n\u00e0y th\u1ecfa m\u00e3n. L\u01b0u \u00fd r\u1eb1ng bao l\u1ed3i ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c khi h\u1ec7 s\u1ed1 g\u00f3c t\u0103ng d\u1ea7n ho\u1eb7c gi\u1ea3m d\u1ea7n.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#usaco-fencing-the-herd","title":"USACO - Fencing the Herd","text":"<p>B\u00e0i n\u00e0y y\u00eau c\u1ea7u t\u00ecm \\((Ax + By)\\) max v\u00e0 min khi cho \u0111i\u1ec3m \\((x, y)\\) b\u1ea5t k\u00ec, hay l\u00e0 \\((Ax/y + B)\\) max v\u00e0 min.</p> <p>\u0110\u00e2y ch\u00ednh l\u00e0 d\u1ea1ng chu\u1ea9n c\u1ee7a b\u00e0i to\u00e1n bao l\u1ed3i v\u00e0 IT \u0111o\u1ea1n th\u1eb3ng. Tuy nhi\u00ean l\u00e0m bao l\u1ed3i trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u1ef1c k\u00ec kh\u00f3 kh\u0103n, v\u00ec h\u1ec7 s\u1ed1 g\u00f3c \\(A\\) kh\u00f4ng \u0111\u1ea3m b\u1ea3o t\u0103ng d\u1ea7n ho\u1eb7c gi\u1ea3m d\u1ea7n. \u0110\u1ec3 c\u00f3 th\u1ec3 l\u00e0m bao l\u1ed3i v\u1edbi b\u00e0i n\u00e0y, ta ph\u1ea3i s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u l\u01b0u bao l\u1ed3i sao cho h\u1ec7 s\u1ed1 g\u00f3c \\(A\\) v\u1eabn t\u0103ng ho\u1eb7c gi\u1ea3m, c\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 trong qu\u00e1 tr\u00ecnh th\u00eam \\((A, B)\\) ta s\u1eed d\u1ee5ng m\u1ed9t buffer c\u00f3 s\u1ee9c ch\u1ee9a l\u00e0 \\(\\sqrt{Q}\\), khi n\u00e0o buffer \u0111\u1ea7y th\u00ec g\u1ed9p v\u00e0o bao l\u1ed3i. L\u00fac query th\u00ec t\u00ecm max, min tr\u00ean c\u1ea3 bao l\u1ed3i v\u00e0 buffer. Solution bao l\u1ed3i chi ti\u1ebft xem \u1edf \u0111\u00e2y.</p> <p>C\u00f2n v\u1edbi IT \u0111o\u1ea1n th\u1eb3ng, ta c\u0169ng g\u1eb7p kh\u00f3 kh\u0103n v\u00ec query kh\u00f4ng ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean, v\u00e0 \\(x/y\\) c\u0169ng r\u1ea5t l\u1edbn. Tuy nhi\u00ean ta c\u00f3 th\u1ec3 x\u1eed l\u00ed offline \u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch \u0111\u1ecdc h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c query, l\u01b0u l\u1ea1i c\u00e1c \u0111i\u1ec3m \\((x/y)\\), r\u1eddi r\u1ea1c h\u00f3a l\u1ea1i, v\u00e0 x\u00e2y d\u1ef1ng c\u00e2y IT \u0111o\u1ea1n th\u1eb3ng tr\u00ean t\u1eadp \u0111i\u1ec3m \u0111\u00e3 r\u1eddi r\u1ea1c h\u00f3a \u0111\u1ea5y. Trong b\u00e0i n\u00e0y, c\u00e1ch IT \u0111o\u1ea1n th\u1eb3ng \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1ch bao l\u1ed3i.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#vnoj-vomario","title":"VNOJ - VOMARIO","text":"<p>B\u00e0i \"\u0111\u1ed9c quy\u1ec1n\" c\u1ee7a IT \u0111o\u1ea1n th\u1eb3ng. Trong b\u00e0i n\u00e0y, ta c\u0169ng t\u00ecm c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng $O(N^2)%: \\(f[i] = max(a[j] * x[i] + b[j] + c)\\).</p> <p>Tuy nhi\u00ean, \u0111\u00e1ng l\u01b0u \u00fd l\u00e0 m\u1ed7i c\u1eb7p \\((a[j], b[j])\\) ch\u1ec9 \u0111\u01b0\u1ee3c t\u00ednh trong m\u1ed9t kho\u1ea3ng \\(x[i]\\) n\u00e0o \u0111\u00f3, c\u00f2n \\(x[i]\\) n\u1eb1m ngo\u00e0i kho\u1ea3ng \u0111\u00f3 th\u00ec c\u1eb7p \\((a[j], b[j])\\) n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p ch\u1ecdn \u0111\u1ec3 l\u1ea5y max. \u0110\u00e2y ch\u00ednh l\u00e0 t\u00ednh ch\u1ea5t \"\u0111o\u1ea1n th\u1eb3ng\" thay v\u00ec \"\u0111\u01b0\u1eddng th\u1eb3ng\". B\u00e0i n\u00e0y kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng bao l\u1ed3i \u0111\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c.</p>"},{"location":"algo/data-structures/interval-tree-tap-doan-thang/#bai-khac","title":"B\u00e0i kh\u00e1c","text":"<ul> <li>VNOJ - JEWELNB</li> <li>SPOJ - PTIT133B</li> </ul>"},{"location":"algo/data-structures/lca-binlift/","title":"Lowest Common Ancestor (LCA) - Binary Lifting","text":"<p>T\u00e1c gi\u1ea3:  - L\u00ea Minh Ho\u00e0ng - Ph\u1ed5 th\u00f4ng N\u0103ng khi\u1ebfu, \u0110HQG-HCM</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - Nguy\u1ec5n Ph\u00fa B\u00ecnh - THPT Chuy\u00ean H\u00f9ng V\u01b0\u01a1ng, B\u00ecnh D\u01b0\u01a1ng - Tr\u1ea7n Xu\u00e2n B\u00e1ch - THPT Chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/data-structures/lca-binlift/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>B\u00e0i to\u00e1n t\u00ecm t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t (Lowest Common Ancestor - LCA) l\u00e0 m\u1ed9t d\u1ea1ng b\u00e0i quen thu\u1ed9c th\u01b0\u1eddng g\u1eb7p trong c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh thi \u0111\u1ea5u.</p> <p>B\u00e0i to\u00e1n t\u00ecm LCA c\u00f3 nhi\u1ec1u c\u00e1ch gi\u1ea3i: - Binary Lifting (Sparse Table): \\(\\mathcal{O}(N\\log{N})\\) ti\u1ec1n x\u1eed l\u00fd, \\(\\mathcal{O}(\\log{N})\\) m\u1ed7i truy v\u1ea5n. - Euler Tour + RMQ (Segment tree): \\(\\mathcal{O}(N)\\) ti\u1ec1n x\u1eed l\u00fd, \\(\\mathcal{O}(\\log{N})\\) m\u1ed7i truy v\u1ea5n. - Euler Tour + RMQ (Sparse Table): \\(\\mathcal{O}(N\\log{N})\\) ti\u1ec1n x\u1eed l\u00fd, \\(\\mathcal{O}(1)\\) m\u1ed7i truy v\u1ea5n. - \\(\\dots\\)</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ta t\u1eadp trung v\u00e0o c\u00e1ch \u0111\u1ea7u ti\u00ean l\u00e0 s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt Binary Lifting \u0111\u1ec3 t\u00ecm LCA.</p> <p>L\u01b0u \u00fd: Trong su\u1ed1t b\u00e0i vi\u1ebft m\u00ecnh d\u00f9ng <code>__lg(x)</code> \u0111\u1ec3 t\u00ednh \\(\\log_2\\) c\u1ee7a 1 s\u1ed1 v\u00ec ta c\u1ea7n gi\u00e1 tr\u1ecb nguy\u00ean, c\u00f2n <code>log2(x)</code> th\u00ec tr\u1ea3 v\u1ec1 s\u1ed1 th\u1ef1c. N\u1ebfu kh\u00f4ng mu\u1ed1n d\u00f9ng h\u00e0m th\u00ec c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc nh\u01b0 sau: <pre><code>int lg2[N];\nvoid preprocess() {\n    lg2[1] = 0;\n    for (int i = 2; i &lt; N; ++i)\n        lg2[i] = lg2[i / 2] + 1;\n}\n</code></pre></p>"},{"location":"algo/data-structures/lca-binlift/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t c\u00e2y g\u1ed3m \\(N\\) \u0111\u1ec9nh c\u00f3 g\u1ed1c t\u1ea1i \u0111\u1ec9nh \\(1\\). C\u00f3 \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n g\u1ed3m \\(1\\) c\u1eb7p s\u1ed1 \\((u, v)\\) v\u00e0 ta c\u1ea7n t\u00ecm LCA c\u1ee7a \\(u\\) v\u00e0 \\(v\\), t\u1ee9c l\u00e0 t\u00ecm m\u1ed9t \u0111\u1ec9nh \\(w\\) xa g\u1ed1c nh\u1ea5t n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) v\u00e0 \\(v\\) \u0111\u1ebfn g\u1ed1c. \u0110\u1eb7c bi\u1ec7t, n\u1ebfu \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\), th\u00ec \\(u\\) l\u00e0 LCA c\u1ee7a \\(u\\) v\u00e0 \\(v\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(N, Q \\leq 2 \\cdot 10^5\\)</p> <p></p>"},{"location":"algo/data-structures/lca-binlift/#ngay-tho","title":"Ng\u00e2y th\u01a1","text":"<ul> <li>\u0110\u1eb7t \\(h(u)\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a \u0111\u1ec9nh \\(u\\) (\u0111\u1ed9 cao c\u1ee7a \\(1\\) \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh \u0111\u00f3 \u0111\u1ebfn g\u1ed1c c\u1ee7a c\u00e2y). V\u00ed d\u1ee5: \\(h(1) = 0, h(3) = 1, h(9) = 3,\\ldots\\)</li> <li>\u0110\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n \\((u, v)\\), kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(h(u) &gt; h(v)\\):<ul> <li>B\u01b0\u1edbc 1: l\u1eb7p l\u1ea1i thao t\u00e1c cho \\(u\\) nh\u1ea3y l\u00ean cha c\u1ee7a \\(u\\) \u0111\u1ebfn khi \\(h(u) = h(v)\\).</li> <li>B\u01b0\u1edbc 2: l\u1eb7p l\u1ea1i thao t\u00e1c cho \\(u\\) v\u00e0 \\(v\\) nh\u1ea3y l\u00ean cha c\u1ee7a ch\u00fang \u0111\u1ebfn khi \\(u\\) v\u00e0 \\(v\\) tr\u00f9ng nhau (\u0111\u1ec9nh \u0111\u00f3 l\u00e0 LCA c\u1ee7a \\(u\\) v\u00e0 \\(v\\) ban \u0111\u1ea7u).</li> </ul> </li> </ul> <p>V\u00ed d\u1ee5: - Ta c\u1ea7n t\u00ecm LCA c\u1ee7a \\(u\\) v\u00e0 \\(v\\). Ban \u0111\u1ea7u \\(h(u) &gt; h(v)\\). - Ta l\u1eb7p l\u1ea1i thao t\u00e1c cho \\(u\\) nh\u1ea3y l\u00ean cha c\u1ee7a \\(u\\) \u0111\u1ebfn khi \\(h(u) = h(v)\\):     - \\(u = par[u] = u4\\)     - \\(u = par[u] = u3\\)     - d\u1eebng thao t\u00e1c v\u00ec \\(h(u) = h(v)\\) - Sau \u0111\u00f3, ta cho \\(u\\) v\u00e0 \\(v\\) nh\u1ea3y l\u00ean cha c\u1ee7a ch\u00fang v\u00e0 l\u1eb7p l\u1ea1i thao t\u00e1c \u0111\u1ebfn khi \\(2\\) \u0111\u1ec9nh n\u00e0y tr\u00f9ng nhau:     - \\(u = par[u] = u2, v = par[v] = v2\\)     - \\(u = par[u] = u1, v = par[v] = v1\\)     - \\(u = par[u] = lca, v = par[v] = lca\\)     - d\u1eebng thao t\u00e1c v\u00ec \\(u\\) v\u00e0 \\(v\\) tr\u00f9ng nhau (\\(u = v = lca\\))</p> <pre><code>vector&lt;int&gt; g[N]; // g[u]: t\u1eadp c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi u\nint par[N];     // par[u] = p n\u1ebfu cha c\u1ee7a u l\u00e0 p\nint h[N];\nvoid dfs(int u) {\n    for (int v : g[u]) {\n        if (v == par[u]) continue;\n        h[v] = h[u] + 1;\n        par[v] = u;\n        dfs(v);\n    }\n}\n\nint lca(int u, int v) {\n    // Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, x\u00e9t h[u] &gt;= h[v]\n    if (h[u] &lt; h[v]) swap(u, v);\n\n    // cho u nh\u1ea3y l\u00ean cha \u0111\u1ebfn khi h[u] = h[v]\n    while (h[u] &gt; h[v])\n        u = par[u];\n\n    // cho u v\u00e0 v nh\u1ea3y l\u00ean cha \u0111\u1ebfn khi u tr\u00f9ng v\n    while (u != v) {\n        u = par[u];\n        v = par[v];\n    }\n\n    return u;\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N)\\) (t\u1ea1o m\u1ea3ng \\(h\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(\\mathcal{O}(N)\\) (\u0111\u1ed9 cao t\u1ed1i \u0111a c\u1ee7a 1 \u0111\u1ec9nh l\u00e0 \\(N-1\\) n\u00ean s\u1ed1 b\u01b0\u1edbc nh\u1ea3y t\u1ed1i \u0111a l\u00e0 \\(N-1\\))</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N + Q \\cdot N) = O(Q \\cdot N)\\)</li> </ul> <p>\u0110\u1ed1i chi\u1ebfu gi\u1edbi h\u1ea1n, c\u00e1ch \"ng\u00e2y th\u01a1\" tr\u00ean t\u1ecf ra ch\u1eadm ch\u1ea1p, kh\u00f4ng \u0111\u1ee7 \u0111\u1ec3 x\u1eed l\u00ed y\u00eau c\u1ea7u b\u00e0i to\u00e1n.</p>"},{"location":"algo/data-structures/lca-binlift/#binary-lifting-nang-nhi-phan","title":"Binary Lifting (n\u00e2ng nh\u1ecb ph\u00e2n)","text":"<p>\u0110\u1ea7u ti\u00ean, ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 \u00fd t\u01b0\u1edfng c\u1ee7a Binary Lifting qua b\u00e0i to\u00e1n con c\u1ee7a \\(LCA\\).</p>"},{"location":"algo/data-structures/lca-binlift/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>Cho m\u1ed9t c\u00e2y g\u1ed3m \\(N\\) \u0111\u1ec9nh c\u00f3 g\u1ed1c t\u1ea1i \u0111\u1ec9nh \\(1\\). C\u00f3 \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n g\u1ed3m \\(1\\) c\u1eb7p s\u1ed1 \\((u, k)\\), ta c\u1ea7n in ra t\u1ed5 ti\u00ean th\u1ee9 \\(k\\) c\u1ee7a \\(u\\) (t\u1ed5 ti\u00ean th\u1ee9 \\(k\\) c\u1ee7a \\(u\\) l\u00e0 \\(par[par[\\ldots[u \\underset{\\color{blue}{k \\text{ l\u1ea7n}}}{\\color{blue}{\\underbrace{\\color{blue}{]\\ldots]]}}}}\\) ).</p> <p>Gi\u1edbi h\u1ea1n: \\(N, Q \\leq 10^5\\)</p>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":"<p>Ta l\u1eb7p l\u1ea1i c\u00e2u l\u1ec7nh <code>u = par[u]</code> trong k l\u1ea7n. <pre><code>int par[N];\nint ancestor_k(int u, int k) {\n    while (k &gt;= 1) {\n        u = par[u];\n        --k;\n    }\n    return u;\n}\n</code></pre></p>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_1","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N)\\) (t\u1ea1o m\u1ea3ng \\(par\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(K) = \\mathcal{O}(N)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N + Q \\cdot N)\\)</li> </ul> <p>C\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0 ta c\u00f2n c\u00f3 th\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian truy v\u1ea5n \u0111\u01b0\u1ee3c hay kh\u00f4ng? - Nh\u1eadn x\u00e9t: Thay v\u00ec nh\u1ea3y t\u1eebng b\u01b0\u1edbc nh\u1ecf \u0111\u1ed9 d\u00e0i \\(1\\), ta c\u00f3 th\u1ec3 nh\u1ea3y c\u00e1c b\u01b0\u1edbc l\u1edbn \u0111\u1ed9 d\u00e0i \\(2\\). T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 gi\u1ea3m th\u1eddi gian truy v\u1ea5n xu\u1ed1ng c\u00f2n \\(\\mathcal{O}(\\frac{K}2)\\)</p>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-toi-uu-11","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.1","text":"<ul> <li>Ta x\u00e2y d\u1ef1ng m\u1ea3ng \\(up2[N]\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2\\) c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>Khi truy v\u1ea5n, ta nh\u1ea3y c\u00e1c b\u01b0\u1edbc \u0111\u1ed9 d\u00e0i \\(2\\) tr\u01b0\u1edbc, sau \u0111\u00f3 ki\u1ec3m tra xem \\(k\\) c\u00f3 \\(\\geq 1\\) hay kh\u00f4ng (v\u00ec \\(k\\) mod \\(2\\) d\u01b0 \\(0\\) ho\u1eb7c \\(1\\)).</li> </ul> <pre><code>int par[N], up2[N];\nvoid preprocess() {\n    for (int u = 1; u &lt;= n; ++u)\n        up2[u] = par[par[u]];\n}\n\nint ancestor_k(int u, int k) {\n    while (k &gt;= 2) {\n        u = up2[u];\n        k -= 2;\n    }\n    if (k &gt;= 1) {\n        u = par[u];\n        --k;\n    }\n    return u;\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_2","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(2N)\\) (t\u1ea1o m\u1ea3ng \\(par\\) v\u00e0 \\(up2\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{K}2 + 1) = \\mathcal{O}(\\frac{N}2 + 1)\\) (1 v\u00f2ng while v\u00e0 1 l\u1ec7nh if)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(2N + Q \\cdot (\\frac{N}2 + 1))\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(2N)\\) (2 m\u1ea3ng \\(par\\) v\u00e0 \\(up2\\))</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-toi-uu-12","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.2","text":"<p>Ta c\u00f2n c\u00f3 th\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian truy v\u1ea5n \u0111\u01b0\u1ee3c hay kh\u00f4ng? - Nh\u1eadn x\u00e9t: Thay v\u00ec nh\u1ea3y t\u1eebng b\u01b0\u1edbc nh\u1ecf \u0111\u1ed9 d\u00e0i \\(2\\), ta c\u00f3 th\u1ec3 nh\u1ea3y c\u00e1c b\u01b0\u1edbc l\u1edbn \u0111\u1ed9 d\u00e0i \\(4\\). T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 gi\u1ea3m th\u1eddi gian truy v\u1ea5n xu\u1ed1ng c\u00f2n \\(\\mathcal{O}(\\frac{K}4)\\).</p> <pre><code>int par[N], up2[N], up4[N];\nvoid preprocess() {\n    for (int u = 1; u &lt;= n; ++u) up2[u] = par[par[u]];\n    for (int u = 1; u &lt;= n; ++u) up4[u] = up2[up2[u]];\n}\n\nint ancestor_k(int u, int k) {\n    while (k &gt;= 4) u = up4[u], k -= 4;\n    if (k &gt;= 2) u = up2[u], k -= 2;\n    if (k &gt;= 1) u = par[u], --k;\n    return u;\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_3","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(3N)\\) (t\u1ea1o m\u1ea3ng \\(par\\), \\(up2\\) v\u00e0 \\(up4\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{K}4 + 2) = \\mathcal{O}(\\frac{N}4 + 2)\\) (1 v\u00f2ng while v\u00e0 2 l\u1ec7nh if)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(3N + Q \\cdot (\\frac{N}4 + 2))\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(3N)\\) (3 m\u1ea3ng \\(par\\), \\(up2\\) v\u00e0 \\(up4\\))</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-toi-uu-13","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.3","text":"<p>Ta v\u1eabn c\u00f3 th\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian truy v\u1ea5n b\u1eb1ng c\u00e1ch nh\u1ea3y c\u00e1c b\u01b0\u1edbc l\u1edbn h\u01a1n (\u0111\u1ed9 d\u00e0i \\(8\\)).</p> <pre><code>int par[N], up2[N], up4[N], up8[N];\nvoid preprocess() {\n    for (int u = 1; u &lt;= n; ++u) up2[u] = par[par[u]];\n    for (int u = 1; u &lt;= n; ++u) up4[u] = up2[up2[u]];\n    for (int u = 1; u &lt;= n; ++u) up8[u] = up4[up4[u]];\n}\n\nint ancestor_k(int u, int k) {\n    while (k &gt;= 8) u = up8[u], k -= 8;\n    if (k &gt;= 4) u = up4[u], k -= 4;\n    if (k &gt;= 2) u = up2[u], k -= 2;\n    if (k &gt;= 1) u = par[u], --k;\n    return u;\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_4","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(4N)\\) (t\u1ea1o m\u1ea3ng \\(par\\), \\(up2\\), \\(up4\\) v\u00e0 \\(up8\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{K}8 + 3) = \\mathcal{O}(\\frac{N}8 + 3)\\) (1 v\u00f2ng while v\u00e0 3 l\u1ec7nh if)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(4N + Q \\cdot (\\frac{N}8 + 3))\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(4N)\\) (4 m\u1ea3ng \\(par\\), \\(up2\\), \\(up4\\) v\u00e0 \\(up8\\))</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-toi-uu-2","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 2","text":"<p>N\u1ebfu ta l\u00e0m ti\u1ebfp nh\u01b0 thu\u1eadt to\u00e1n t\u1ed1i \u01b0u \\(1.3\\) (ti\u1ebfp t\u1ee5c t\u1ea1o c\u00e1c m\u1ea3ng \\(up16, up32, \\dots, up65536\\)) ta s\u1ebd c\u00f3 \\(\\log_2(N)\\) m\u1ea3ng up, \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u00e0i to\u00e1n l\u00fac n\u00e0y nh\u01b0 sau: - \u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N \\cdot (1 + \\log_2(N)) = \\mathcal{O}(N \\cdot \\log_2(N))\\) (m\u1ea3ng \\(par\\) v\u00e0 \\(\\log_2\\) m\u1ea3ng \\(up\\)) - \u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{K}{2^{\\log_2(N)}} + \\log_2(N)) = \\mathcal{O}(\\log_2(N))\\) (1 v\u00f2ng while v\u00e0 \\(log_2\\) l\u1ec7nh if) - C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(N \\cdot \\log_2(N) + Q \\cdot \\log_2(N))\\) - \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(N \\cdot \\log_2(N))\\) (m\u1ea3ng \\(par\\) v\u00e0 \\(\\log_2\\) m\u1ea3ng \\(up\\))</p> <p>Nh\u01b0ng n\u1ebfu d\u00f9ng \\(\\log_2\\) m\u1ea3ng \\(up\\) s\u1ebd mang \u0111\u1ebfn cho ta nhi\u1ec1u b\u1ea5t ti\u1ec7n (code d\u00e0i, d\u1ec5 sai,...). Do \u0111\u00f3, ta c\u00f3 th\u1ec3 \u0111\u1eb7t: - \\(up[u][j]\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(u\\) (t\u01b0\u01a1ng \u1ee9ng \\(up2^j[u]\\)).     - Cha c\u1ee7a \\(u\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(1\\) (\u0111\u1ea7u ti\u00ean) c\u1ee7a \\(u\\).         - \\(up[u][0] = par[u]\\)     - \u0110\u1eb7t \\(x\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2^{j-1}\\) c\u1ee7a \\(u\\), ta c\u00f3, t\u1ed5 ti\u00ean th\u1ee9 \\(2^{j-1}\\) c\u1ee7a \\(x\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(u\\) (v\u00ec \\(2^{j-1} + 2^{j-1} = 2^j\\))</p> \\[\\begin{cases} x &amp;= up[u][j - 1] \\\\ up[u][j] &amp;= up[x][j - 1] \\end{cases}\\] <ul> <li>Ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i sau:</li> </ul> \\[\\begin{cases} up[u][j] = par[u] &amp; \\text{ v\u1edbi } j = 0 \\\\  up[u][j] = up[up[u][j-1]][j-1] &amp; \\text{ v\u1edbi } j &gt; 0 \\text{ v\u00e0 } 2^j \\leq h[u] \\\\ up[u][j] = 0 \\text{ (NULL)} &amp; \\text{ v\u1edbi } j &gt; 0 \\text{ v\u00e0 } 2^j &gt; h[u] \\end{cases}\\] <pre><code>int par[N], up[N][17];\nvoid preprocess() {\n    for (int u = 1; u &lt;= n; ++u) up[u][0] = par[u];\n    for (int j = 1; j &lt; 17; ++j)\n        for (int u = 1; u &lt;= n; ++u)\n            up[u][j] = up[up[u][j - 1]][j - 1];\n}\n\nint ancestor_k(int u, int k) {\n    for (int j = 16; j &gt;= 0; --j)\n        if (k &gt;= (1 &lt;&lt; j)) u = up[u][j], k -= 1 &lt;&lt; j;\n    return u;\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-toi-uu-3","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 3","text":"<p>Nh\u1eadn x\u00e9t: Ta lu\u00f4n c\u00f3 th\u1ec3 t\u00e1ch m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng th\u00e0nh t\u1ed5ng c\u00e1c l\u0169y th\u1eeba ph\u00e2n bi\u1ec7t c\u1ee7a 2 (h\u1ec7 nh\u1ecb ph\u00e2n). V\u00ed d\u1ee5: \\(25 = 2^4 + 2^3 + 2^0 = 11001_2\\).</p> <p>T\u1eeb nh\u1eadn x\u00e9t tr\u00ean, ta c\u00f3 m\u1ed9t c\u00e1ch kh\u00e1c \u0111\u1ec3 nh\u1ea3y l\u00ean t\u1ed5 ti\u00ean th\u1ee9 \\(k\\) c\u1ee7a \\(u\\) l\u00e0 duy\u1ec7t \\(j\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(\\log_2(k)\\), n\u1ebfu bit th\u1ee9 \\(j\\) c\u1ee7a \\(k\\) l\u00e0 \\(1\\) th\u00ec ta cho \\(u\\) nh\u1ea3y l\u00ean t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a n\u00f3.</p> <pre><code>int par[N], up[N][17];\nvoid preprocess() {\n    for (int u = 1; u &lt;= n; ++u) up[u][0] = par[u];\n    for (int j = 1; j &lt; 17; ++j)\n        for (int u = 1; u &lt;= n; ++u)\n            up[u][j] = up[up[u][j - 1]][j - 1];\n}\n\nint ancestor_k(int u, int k) {\n    for (int j = 0; (1 &lt;&lt; j) &lt;= k; ++j)\n        if (k &gt;&gt; j &amp; 1) u = up[u][j];\n    return u;\n}\n</code></pre> <p>Qua \u0111\u00f3, ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng Binary Lifting ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t c\u00e1ch ti\u1ec1n x\u1eed l\u00fd d\u1eef li\u1ec7u nh\u1eb1m gi\u00fap cho th\u1eddi gian truy v\u1ea5n t\u1ed1i \u01b0u h\u01a1n. V\u1ec1 t\u00ednh ch\u1ea5t, Binary Lifting kh\u00e1 gi\u1ed1ng v\u1edbi ch\u1eb7t nh\u1ecb ph\u00e2n, kh\u00e1c \u1edf ch\u1ed7 m\u1ed7i l\u1ea7n, Binary Lifting th\u00ec ta th\u1eed nh\u1ea3y \\(2^k\\) \u0111\u01a1n v\u1ecb, c\u00f2n ch\u1eb7t nh\u1ecb ph\u00e2n th\u00ec ta th\u1eed nh\u1ea3y \\(\\frac{hi - lo + 1}{2}\\) \u0111\u01a1n v\u1ecb.</p>"},{"location":"algo/data-structures/lca-binlift/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Cho m\u1ed9t c\u00e2y c\u00f3 tr\u1ecdng s\u1ed1 g\u1ed3m \\(N\\) \u0111\u1ec9nh c\u00f3 g\u1ed1c t\u1ea1i \u0111\u1ec9nh \\(1\\). C\u00f3 \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n g\u1ed3m \\(1\\) c\u1eb7p s\u1ed1 \\((u, x)\\), ta c\u1ea7n in ra \\(v\\) l\u00e0 t\u1ed5 ti\u00ean xa nh\u1ea5t c\u1ee7a \\(u\\) th\u1ecfa t\u1ed5ng tr\u1ecdng s\u1ed1 tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) \\(\\leq x\\). Gi\u1edbi h\u1ea1n: \\(N, Q \\leq 10^5\\)</p>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-1","title":"Thu\u1eadt to\u00e1n 1","text":"<p>Ta x\u00e2y d\u1ef1ng m\u1ea3ng \\(dist[u][j]\\) l\u00e0 kho\u1ea3ng c\u00e1ch t\u1eeb \\(u\\) \u0111\u1ebfn t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(u\\).</p> <p>C\u00e1ch l\u00e0m d\u1ec5 nh\u1eadn ra l\u00e0 ch\u1eb7t nh\u1ecb ph\u00e2n gi\u00e1 tr\u1ecb c\u1ee7a \\(k\\), sau \u0111\u00f3 so s\u00e1nh \\(x\\) v\u1edbi kho\u1ea3ng c\u00e1ch t\u1eeb \\(u\\) \u0111\u1ebfn t\u1ed5 ti\u00ean th\u1ee9 \\(k\\) c\u1ee7a \\(u\\).</p> <pre><code>int dist[N][17];\nint calc_dist(int u, int k) {\n    int sum = 0;\n    for (int j = 0; (1 &lt;&lt; j) &lt;= k; ++j)\n        if (k &gt;&gt; j &amp; 1) {\n            sum += dist[u][j];\n            u = up[u][j];\n        }\n    return sum;\n}\n\nint solve(int u, int x) {\n    int lo = 0, hi = h[u], mid, ans = 0;\n    while (lo &lt;= hi) {\n        mid = (lo + hi) / 2;\n        if (calc_dist(u, mid) &lt;= x) {\n            ans = mid;    \n            lo = mid + 1;\n        }\n        else hi = mid - 1;\n    }\n    return ancestor_k(u, ans);\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_5","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N\\log N)\\) (t\u1ea1o m\u1ea3ng \\(up\\) v\u00e0 \\(dist\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\log N)\\) (ch\u1eb7t nh\u1ecb ph\u00e2n) \\(\\times\\) \\(\\mathcal{O}(\\log N)\\) (t\u00ednh kho\u1ea3ng c\u00e1ch) = \\(\\mathcal{O}(\\log^2N)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N\\log N + Q\\log^2N)\\)</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan-2","title":"Thu\u1eadt to\u00e1n 2","text":"<p>Ta c\u00f3 nh\u1eadn x\u00e9t: - Ta \u0111\u00e3 t\u00ednh tr\u01b0\u1edbc c\u00e1c kho\u1ea3ng c\u00e1ch c\u00f3 \u0111\u1ed9 l\u1edbn \\(2^j\\) (m\u1ea3ng \\(dist\\)) - T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 nh\u1ea3y theo t\u1eebng b\u01b0\u1edbc \\(2^j\\) \u0111\u1ec3 t\u00ednh kho\u1ea3ng c\u00e1ch trong \\(\\mathcal{O}(1)\\)</p> <p></p> <pre><code>int dist[N][17];\nint solve(int u, int x) {\n    int now_dist = 0, k = 0;\n    for (int j = __lg(h[u]); j &gt;= 0; --j) {\n        // n\u1ebfu kho\u1ea3ng c\u00e1ch t\u1eeb u ban \u0111\u1ea7u \u0111\u1ebfn t\u1ed5 ti\u00ean th\u1ee9 (k + 2^j) &lt;= x\n        if (h[u] &gt;= (1 &lt;&lt; j) &amp;&amp; now_dist + dist[u][j] &lt;= x) {\n            now_dist += dist[u][j];\n            k |= 1 &lt;&lt; j;\n            u = up[u][j];\n        }\n    }\n    return u;\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_6","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N\\log N)\\) (t\u1ea1o m\u1ea3ng \\(up\\) v\u00e0 \\(dist\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\log N)\\) (ch\u1eb7t nh\u1ecb ph\u00e2n) \\(\\times\\) \\(\\mathcal{O}(1)\\) (t\u00ednh kho\u1ea3ng c\u00e1ch) = \\(\\mathcal{O}(\\log N)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N\\log N + Q\\log N)\\)</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#ung-dung-binary-lifting-vao-bai-toan-lca","title":"\u1ee8ng d\u1ee5ng Binary Lifting v\u00e0o b\u00e0i to\u00e1n LCA","text":"<p>D\u1ec5 th\u1ea5y: n\u1ebfu \\(x\\) l\u00e0 t\u1ed5 ti\u00ean chung c\u1ee7a \\(u\\) v\u00e0 \\(v\\) (\\(x \\neq\\) g\u1ed1c) th\u00ec \\(par[x]\\) c\u0169ng l\u00e0 t\u1ed5 ti\u00ean chung c\u1ee7a \\(u\\) v\u00e0 \\(v\\). Do \u0111\u00f3, ta c\u00f3 th\u1ec3 t\u00ecm t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\) b\u1eb1ng Binary Lifting.</p> <p>B\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng m\u1ea3ng \\(up\\), ta c\u00f3 th\u1ec3 nh\u1ea3y t\u1eeb \\(u\\) \u0111\u1ebfn b\u1ea5t k\u00ec t\u1ed5 ti\u00ean n\u00e0o ch\u1ec9 trong \\(\\mathcal{O}(\\log N)\\) (b\u00e0i to\u00e1n t\u00ecm t\u1ed5 ti\u00ean th\u1ee9 \\(k\\)). Ta c\u00f3 th\u1ec3 t\u00ednh m\u1ea3ng n\u00e0y b\u1eb1ng h\u00e0m \\(DFS\\) nh\u01b0 sau:</p> <pre><code>void dfs(int u) {\n    for (int v : g[u]) {\n        if (v == up[u][0]) continue;\n        h[v] = h[u] + 1;\n\n        up[v][0] = u;\n        for (int j = 1; j &lt; 20; ++j)\n            up[v][j] = up[up[v][j - 1]][j - 1];\n\n        dfs(v);\n    }\n}\n</code></pre> <p>B\u01b0\u1edbc kh\u1edfi t\u1ea1o n\u00e0y chi ph\u00ed \\(\\mathcal{O}(N\\log N)\\) b\u1ed9 nh\u1edb l\u1eabn th\u1eddi gian.</p> <p>C\u00e1ch t\u00ecm LCA gi\u1ed1ng h\u1ec7t thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 1, nh\u01b0ng \u0111\u1ec3 t\u0103ng t\u1ed1c, thay v\u00ec nh\u1ea3y l\u00ean cha \u1edf m\u1ed7i b\u01b0\u1edbc, ta d\u00f9ng m\u1ea3ng \\(up\\) \u0111\u1ec3 nh\u1ea3y, t\u1eeb \u0111\u00f3 thu \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log N)\\) cho m\u1ed7i truy v\u1ea5n. C\u1ee5 th\u1ec3:</p> <ul> <li> <p>G\u1ecdi \\(h(u)\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a \u0111\u1ec9nh \\(u\\). \u0110\u1ec3 t\u00ednh \\(LCA(u, v)\\), gi\u1ea3 s\u1eed \\(h(u) &gt; h(v)\\), \u0111\u1ea7u ti\u00ean ta t\u00ecm \\(u'\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) v\u00e0 c\u00f3 \\(h(u') = h(v)\\):</p> <ul> <li>R\u00f5 r\u00e0ng, ta c\u1ea7n nh\u1ea3y t\u1eeb \\(u\\) l\u00ean cha th\u1ee9 \\(k = h(u) - h(v)\\).</li> </ul> </li> <li> <p>Sau khi \\(u\\) v\u00e0 \\(v\\) \u0111\u00e3 \u1edf c\u00f9ng \u0111\u1ed9 cao, ta s\u1ebd t\u00ednh \\(LCA(u, v)\\):</p> <ul> <li>N\u1ebfu \\(u = v\\) th\u00ec \\(LCA(u, v)\\) ch\u00ednh l\u00e0 \\(u\\) v\u00e0 \\(v\\).</li> <li>N\u1ebfu \\(u \\neq v\\) th\u00ec ta d\u00f9ng Binary Lifting \u0111\u1ec3 t\u00ecm \\(k\\) l\u1edbn nh\u1ea5t sao cho t\u1ed5 ti\u00ean th\u1ee9 \\(k\\) c\u1ee7a \\(u\\) v\u00e0 \\(v\\) kh\u00e1c nhau (kh\u00f4ng ph\u1ea3i t\u1ed5 ti\u00ean chung). L\u00fac n\u00e0y, t\u1ed5 ti\u00ean th\u1ee9 \\(k+1\\) ch\u00ednh l\u00e0 t\u1ed5 ti\u00ean chung c\u1ee7a \\(u\\) v\u00e0 \\(v\\).<ul> <li>Ta duy\u1ec7t \\(j\\) t\u1eeb \\(\\log_2(h(u))\\) v\u1ec1 \\(0\\)</li> <li>N\u1ebfu t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(u\\) v\u00e0 \\(v\\) kh\u00e1c nhau th\u00ec ta cho c\u1ea3 \\(u\\) v\u00e0 \\(v\\) nh\u1ea3y l\u00ean t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a ch\u00fang. Cu\u1ed1i c\u00f9ng th\u00ec \\(u\\) v\u00e0 \\(v\\) s\u1ebd c\u00f3 c\u00f9ng cha (t\u1ed5 ti\u00ean th\u1ee9 \\(k+1\\) l\u00e0 cha c\u1ee7a t\u1ed5 ti\u00ean th\u1ee9 \\(k\\)), v\u1eady n\u00ean khi \u0111\u00f3 \\(LCA(u, v) = par[u] = par[v] = up[u][0] = up[v][0]\\). </li> </ul> </li> </ul> </li> </ul> <p></p> <pre><code>int h[N], up[N][20];\nint lca(int u, int v) {\n    if (h[u] != h[v]) {\n        if (h[u] &lt; h[v]) swap(u, v);\n\n        // T\u00ecm t\u1ed5 ti\u00ean u' c\u1ee7a u sao cho h(u') = h(v)\n        int k = h[u] - h[v];\n        for (int j = 0; (1 &lt;&lt; j) &lt;= k; ++j)\n            if (k &gt;&gt; j &amp; 1) // N\u1ebfu bit th\u1ee9 j c\u1ee7a k l\u00e0 1\n                u = up[u][j];\n    }\n    if (u == v) return u;\n\n    // T\u00ecm lca(u, v)\n    int k = __lg(h[u]);\n    for (int j = k; j &gt;= 0; --j)\n        if (up[u][j] != up[v][j]) // N\u1ebfu t\u1ed5 ti\u00ean th\u1ee9 2^j c\u1ee7a u v\u00e0 v kh\u00e1c nhau\n            u = up[u][j], v = up[v][j];\n    return up[u][0];\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#phan-tich_7","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N\\log N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p khi truy v\u1ea5n: \\(\\mathcal{O}(\\log N)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N\\log N + Q\\log N)\\)</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#bai-toan-1_1","title":"B\u00e0i to\u00e1n 1","text":"<p>VNOJ - PWALK</p>"},{"location":"algo/data-structures/lca-binlift/#tom-tat","title":"T\u00f3m t\u1eaft","text":"<p>Cho \\(1\\) c\u00e2y \\(N\\) \u0111\u1ec9nh c\u00f3 tr\u1ecdng s\u1ed1 \\((N \\le 1000)\\). C\u1ea7n tr\u1ea3 l\u1eddi \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n y\u00eau c\u1ea7u t\u00ecm kho\u1ea3ng c\u00e1ch gi\u1eefa 2 \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) trong c\u00e2y.</p>"},{"location":"algo/data-structures/lca-binlift/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>Ch\u1ecdn \u0111\u1ec9nh \\(1\\) l\u00e0m g\u1ed1c c\u1ee7a c\u00e2y. V\u1edbi m\u1ed7i \u0111\u1ec9nh c\u1ee7a c\u00e2y, ta t\u00ednh \\(f(u)\\) l\u00e0 kho\u1ea3ng c\u00e1ch c\u1ee7a m\u1ed7i \u0111\u1ec9nh \u0111\u1ebfn \u0111\u1ec9nh \\(1\\) b\u1eb1ng c\u00e1ch duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh trong c\u00e2y.</p> <p></p> <p>V\u1edbi hai \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) b\u1ea5t k\u00ec, x\u00e9t \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c c\u1ee7a c\u00e2y \u0111\u1ebfn hai \u0111\u1ec9nh n\u00e0y. Ta nh\u1eadn th\u1ea5y: - Ph\u1ea7n giao c\u1ee7a hai \u0111\u01b0\u1eddng \u0111i ch\u00ednh l\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c c\u1ee7a c\u00e2y \u0111\u1ebfn t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\) - g\u1ecdi \u0111\u1ec9nh n\u00e0y l\u00e0 \\(p\\). - Hi\u1ec7u gi\u1eefa ph\u1ea7n giao v\u00e0 m\u1ed7i \u0111\u01b0\u1eddng \u0111i ban \u0111\u1ea7u l\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(p\\) v\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(p\\) \u0111\u1ebfn \\(v\\). </p> <p>T\u1eeb hai quan s\u00e1t tr\u00ean, th\u1ea5y \u0111\u01b0\u1ee3c ch\u1ec9 c\u1ea7n ba gi\u00e1 tr\u1ecb \\(f(u)\\), \\(f(v)\\) v\u00e0 \\(f(p)\\) \u0111\u1ec3 t\u00ednh \\(dist(u, v)\\). Khi c\u1ed9ng \\(f(u)\\) v\u00e0 \\(f(v)\\), c\u00e1c \u0111\u1ec9nh thu\u1ed9c ph\u1ea7n giao b\u1ecb t\u00ednh \u0111\u1ebfn 2 l\u1ea7n, v\u00ec v\u1eady ta t\u00ednh \\(dist(u, v) = f(u) + f(v) - 2 * f(p)\\).</p>"},{"location":"algo/data-structures/lca-binlift/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include&lt;iostream&gt;\n## include&lt;vector&gt;\n## include&lt;cmath&gt;\nusing namespace std;\n\nconst int N = 1000 + 3;\nint n, q;\nstruct Edge {\n    int v, w;\n    Edge(int v = 0, int w = 0) : v(v), w(w) {}\n};\nvector&lt;Edge&gt; g[N];\n\nint h[N], f[N], up[N][10];\n\nvoid dfs(int u) {\n    for (Edge &amp;e : g[u]) {\n        int v = e.v, w = e.w;\n        if (v == up[u][0]) continue;\n\n        h[v] = h[u] + 1;\n        f[v] = f[u] + w;\n\n        up[v][0] = u;\n        for (int j = 1; j &lt; 10; ++j)\n            up[v][j] = up[up[v][j - 1]][j - 1];\n\n        dfs(v);\n    }\n}\n\nint lca(int u, int v) {\n    if (h[u] != h[v]) {\n        if (h[u] &lt; h[v]) swap(u, v);\n\n        int k = h[u] - h[v];\n        for (int j = 0; (1 &lt;&lt; j) &lt;= k; ++j)\n            if (k &gt;&gt; j &amp; 1)\n                u = up[u][j];\n    }\n    if (u == v) return u;\n\n    int k = __lg(h[u]);\n    for (int j = k; j &gt;= 0; --j)\n        if (up[u][j] != up[v][j])\n            u = up[u][j], v = up[v][j];\n    return up[u][0];\n}\n\nint dist(int u, int v) {\n    int p = lca(u, v);\n    return f[u] + f[v] - 2 * f[p];\n}\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    cin &gt;&gt; n &gt;&gt; q;\n    for (int i = 1, u, v, c; i &lt; n; ++i) {\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        g[u].emplace_back(v, c);\n        g[v].emplace_back(u, c);\n    }\n\n    dfs(1);\n    int u, v; while (q--) {\n        cin &gt;&gt; u &gt;&gt; v;\n        cout &lt;&lt; dist(u, v) &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#bai-toan-2_1","title":"B\u00e0i to\u00e1n 2","text":"<p>VNOJ - FSELECT</p>"},{"location":"algo/data-structures/lca-binlift/#tom-tat_1","title":"T\u00f3m t\u1eaft","text":"<p>Cho \\(1\\) c\u00e2y \\(N\\) \u0111\u1ec9nh v\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(K\\) l\u00e0 s\u1ed1 nh\u00f3m \\((N \\le 2\\cdot 10^5, K \\le \\frac{N}{2})\\). \u0110\u1ec9nh th\u1ee9 \\(i\\) thu\u1ed9c nh\u00f3m \\(x_i\\).</p> <p>Output g\u1ed3m \\(K\\) d\u00f2ng, d\u00f2ng th\u1ee9 \\(i\\) ch\u1ee9a \\(1\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng l\u00e0 kho\u1ea3ng c\u00e1ch xa nh\u1ea5t gi\u1eefa \\(2\\) \u0111\u1ec9nh b\u1ea5t k\u00ec thu\u1ed9c nh\u00f3m th\u1ee9 \\(i\\).</p>"},{"location":"algo/data-structures/lca-binlift/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<ul> <li>V\u1edbi b\u00e0i to\u00e1n t\u00ecm kho\u1ea3ng c\u00e1ch xa nh\u1ea5t gi\u1eefa 2 \u0111\u1ec9nh tr\u00ean c\u00e2y, ta c\u00f3 th\u1ec3 l\u00e0m nh\u01b0 sau<ul> <li>B\u01b0\u1edbc 1: Ch\u1ecdn 1 \u0111\u1ec9nh b\u1ea5t k\u00ec, \u0111\u1eb7t l\u00e0 \u0111\u1ec9nh \\(A\\).</li> <li>B\u01b0\u1edbc 2: T\u00ecm \\(1\\) \u0111\u1ec9nh b\u1ea5t k\u00ec xa \u0111\u1ec9nh \\(A\\) nh\u1ea5t, \u0111\u1eb7t l\u00e0 \\(B\\).</li> <li>B\u01b0\u1edbc 3: T\u00ecm \\(1\\) \u0111\u1ec9nh b\u1ea5t k\u00ec xa \u0111\u1ec9nh \\(B\\) nh\u1ea5t, \u0111\u1eb7t l\u00e0 \\(C\\).</li> </ul> </li> <li>L\u00fac n\u00e0y, kho\u1ea3ng c\u00e1ch gi\u1eefa \\(2\\) \u0111\u1ec9nh \\(B\\) v\u00e0 \\(C\\) ch\u00ednh l\u00e0 kho\u1ea3ng c\u00e1ch xa nh\u1ea5t gi\u1eefa \\(2\\) \u0111\u1ec9nh tr\u00ean c\u00e2y v\u00e0 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 \u0111\u01b0\u1eddng k\u00ednh c\u1ee7a c\u00e2y.</li> <li>Ch\u1ee9ng minh thu\u1eadt to\u00e1n: here (Exercise 9-1).</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>T\u1eeb b\u00e0i to\u00e1n tr\u00ean, ta c\u00f3 th\u1ec3 t\u00ecm kho\u1ea3ng c\u00e1ch l\u1edbn nh\u1ea5t gi\u1eefa 2 \u0111\u1ec9nh thu\u1ed9c m\u1ed7i nh\u00f3m nh\u01b0 sau: - B\u01b0\u1edbc 1: Ch\u1ecdn 1 \u0111\u1ec9nh b\u1ea5t k\u00ec thu\u1ed9c nh\u00f3m, \u0111\u1eb7t l\u00e0 \\(A\\). - B\u01b0\u1edbc 2: T\u00ecm \\(1\\) \u0111\u1ec9nh b\u1ea5t k\u00ec thu\u1ed9c nh\u00f3m xa \u0111\u1ec9nh \\(A\\) nh\u1ea5t, \u0111\u1eb7t l\u00e0 \\(B\\). - B\u01b0\u1edbc 3: T\u00ecm kho\u1ea3ng c\u00e1ch l\u1edbn nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(B\\) \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh thu\u1ed9c nh\u00f3m c\u00f2n l\u1ea1i.</p>"},{"location":"algo/data-structures/lca-binlift/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include&lt;iostream&gt;\n## include&lt;vector&gt;\n## include&lt;cmath&gt;\nusing namespace std;\n\nconst int N = 2e5 + 8;\nint n, k, root;\nvector&lt;int&gt; g[N], group[N &gt;&gt; 1];\n\nint h[N], up[N][18];\n\nvoid dfs(int u) {\n    for (int v : g[u]) {\n        h[v] = h[u] + 1;\n\n        for (int j = 1; j &lt; 18; ++j)\n            up[v][j] = up[up[v][j - 1]][j - 1];\n\n        dfs(v);\n    }\n}\n\nint lca(int u, int v) {\n    if (h[u] != h[v]) {\n        if (h[u] &lt; h[v]) swap(u, v);\n\n        int k = h[u] - h[v];\n        for (int j = 0; (1 &lt;&lt; j) &lt;= k; ++j)\n            if (k &gt;&gt; j &amp; 1)\n                u = up[u][j];\n    }\n    if (u == v) return u;\n\n    int k = __lg(h[u]);\n    for (int j = k; j &gt;= 0; --j)\n        if (up[u][j] != up[v][j])\n            u = up[u][j], v = up[v][j];\n    return up[u][0];\n}\n\nint dist(int u, int v) {\n    int p = lca(u, v);\n    return h[u] + h[v] - 2 * h[p];\n}\n\nint diameter(vector&lt;int&gt; &amp;meeting) {\n    int A = meeting[0], max_dist = 0, B = A, d;\n\n    for (int x : meeting) {\n        d = dist(A, x);\n        if (max_dist &lt; d) {\n            max_dist = d;\n            B = x;\n        }\n    }\n\n    max_dist = 0;\n    for (int x : meeting) {\n        d = dist(B, x);\n        max_dist = max(max_dist, d);\n    }\n    return max_dist;\n}\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1, x; i &lt;= n; ++i) {\n        cin &gt;&gt; x &gt;&gt; up[i][0];\n        group[x].push_back(i);\n        g[up[i][0]].push_back(i);\n        if (up[i][0] == 0) root = i;\n    }\n\n    dfs(root);\n\n    for (int i = 1; i &lt;= k; ++i)\n        cout &lt;&lt; diameter(group[i]) &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#bai-toan-3","title":"B\u00e0i to\u00e1n 3","text":"<p>VNOJ - HBTLCA</p>"},{"location":"algo/data-structures/lca-binlift/#tom-tat_2","title":"T\u00f3m t\u1eaft","text":"<p>Cho \\(1\\) c\u00e2y \\(N\\) \u0111\u1ec9nh c\u00f3 g\u1ed1c l\u00e0 \u0111\u1ec9nh \\(1\\) v\u00e0 \\(M\\) truy v\u1ea5n thu\u1ed9c \\(1\\) trong \\(2\\) lo\u1ea1i: - \\(!\\) \\(root\\) : Ch\u1ecdn \\(root\\) l\u00e0m g\u1ed1c c\u1ee7a c\u00e2y. - \\(?\\) \\(u\\) \\(v\\) : T\u00ecm t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(2\\) \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(N, M \\le 10^5\\)</p>"},{"location":"algo/data-structures/lca-binlift/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n","text":"<ul> <li>X\u00e9t c\u00e2y c\u00f3 g\u1ed1c l\u00e0 \u0111\u1ec9nh b\u1ea5t k\u00ec (gi\u1ea3 s\u1eed l\u00e0 \u0111\u1ec9nh \\(1\\)), trong \\(3\\) \u0111\u1ec9nh \\(lca(u, v)\\), \\(lca(u, root)\\), \\(lca(v, root)\\) s\u1ebd lu\u00f4n t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t \\(2\\) \u0111\u1ec9nh tr\u00f9ng nhau, \u0111\u1ec9nh c\u00f2n l\u1ea1i ch\u00ednh l\u00e0 \\(lca(u, v)\\) trong c\u00e2y c\u00f3 g\u1ed1c l\u00e0 \\(root\\).</li> <li>Ph\u1ea7n ch\u1ee9ng minh kh\u00e1 d\u1ec5, xin ph\u00e9p nh\u01b0\u1eddng l\u1ea1i cho b\u1ea1n \u0111\u1ecdc nh\u01b0 m\u1ed9t b\u00e0i t\u1eadp.</li> </ul>"},{"location":"algo/data-structures/lca-binlift/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include&lt;iostream&gt;\n## include&lt;algorithm&gt;\n## include&lt;vector&gt;\n## include&lt;cmath&gt;\nusing namespace std;\ntypedef long long ll;\n\nconst int N = 1e5 + 9;\nint n;\nvector&lt;int&gt; g[N];\n\nint h[N], up[N][17];\nvoid dfs(int u) {\n    for (int v : g[u]) {\n        if (v == up[u][0]) continue;\n        h[v] = h[u] + 1;\n\n        up[v][0] = u;\n        for (int j = 1; j &lt; 17; ++j)\n            up[v][j] = up[up[v][j - 1]][j - 1];\n\n        dfs(v);\n    }\n}\n\nint lca(int u, int v) {\n    if (h[u] != h[v]) {\n        if (h[u] &lt; h[v]) swap(u, v);\n\n        int k = h[u] - h[v];\n        for (int j = 0; (1 &lt;&lt; j) &lt;= k; ++j)\n            if (k &gt;&gt; j &amp; 1)\n                u = up[u][j];\n    }\n    if (u == v) return u;\n\n    int k = __lg(h[u]);\n    for (int j = k; j &gt;= 0; --j)\n        if (up[u][j] != up[v][j])\n            u = up[u][j], v = up[v][j];\n    return up[u][0];\n}\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    while (cin &gt;&gt; n, n) {\n        for (int i = 1; i &lt;= n; ++i) g[i].clear();\n        for (int i = 1, u, v; i &lt; n; ++i) {\n            cin &gt;&gt; u &gt;&gt; v;\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        dfs(1);\n\n        char c;\n        int m, root(1), u, v; cin &gt;&gt; m; while (m--) {\n            cin &gt;&gt; c;\n            if (c == '!') cin &gt;&gt; root;\n            else {\n                cin &gt;&gt; u &gt;&gt; v;\n                int uv = lca(u, v);\n                int ur = lca(u, root);\n                int vr = lca(v, root);\n                cout &lt;&lt; (uv ^ ur ^ vr) &lt;&lt; '\\n';\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/lca-binlift/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>SPOJ - LCA</li> <li>SPOJ - QTREE2</li> <li>VNOJ - PWALK</li> <li>VNOJ - LUBENICA</li> <li>VNOJ - FSELECT</li> <li>VNOJ - HBTLCA</li> <li>VNOJ - VOTREE</li> <li>VNOJ - UPGRANET (VOI11)</li> <li>VNOJ - BGAME (VOI17)</li> <li>Codeforces - 519E</li> <li>Codeforces - 916E</li> </ul>"},{"location":"algo/data-structures/lca/","title":"C\u00e1c ph\u01b0\u01a1ng ph\u00e1p gi\u1ea3i b\u00e0i to\u00e1n LCA","text":"<p>T\u00e1c gi\u1ea3: Kh\u00fac Anh Tu\u1ea5n</p> <p>\u0110\u00f4i l\u1eddi v\u1ec1 t\u00e1c gi\u1ea3: Kh\u00fac Anh Tu\u1ea5n \u0111\u01b0\u1ee3c coi l\u00e0 huy\u1ec1n tho\u1ea1i c\u1ee7a Competitive Programming Vi\u1ec7t Nam v\u1edbi nhi\u1ec1u th\u00e0nh t\u00edch kh\u1ee7ng:</p> <ul> <li>HCB IOI 2006</li> <li>Ng\u01b0\u1eddi Vi\u1ec7t Nam duy nh\u1ea5t t\u1eebng \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0110\u1ecf Target tr\u00ean Topcoder (max rating l\u00e0 h\u01a1n 3000, ch\u1ec9 c\u00f3 kho\u1ea3ng ch\u01b0a \u0111\u1ebfn 100 ng\u01b0\u1eddi tr\u00ean th\u1ebf gi\u1edbi \u0111\u1ea1t \u0111\u01b0\u1ee3c).</li> <li>Rank 2 Facebook Hackercup</li> <li>Ng\u01b0\u1eddi Vi\u1ec7t Nam duy nh\u1ea5t t\u1eebng l\u1ecdt v\u00e0o chung k\u1ebft Google Code Jam.</li> <li>Gi\u1eef k\u1ef7 l\u1ee5c thi ACM ICPC World final c\u1ee7a Vi\u1ec7t Nam t\u00ednh \u0111\u1ebfn th\u1eddi \u0111i\u1ec3m 2011 (rank 17 to\u00e0n c\u1ea7u).</li> </ul> <p>B\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c \u0111\u01b0a l\u00ean th\u01b0 vi\u1ec7n VNOI c\u0169 v\u00e0 \u0111\u01b0\u1ee3c m\u00ecnh kh\u00f4i ph\u1ee5c l\u1ea1i sau nhi\u1ec1u n\u0103m th\u1ea5t truy\u1ec1n.</p> <p>Tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i vi\u1ebft n\u00e0y, b\u1ea1n c\u1ea7n \u0111\u1ecdc b\u00e0i vi\u1ebft: B\u00e0i to\u00e1n RMQ v\u00e0 b\u00e0i to\u00e1n LCA \u0111\u1ec3 n\u1eafm \u0111\u01b0\u1ee3c nh\u1eefng kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n.</p> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n LCA ta c\u00f3 th\u1ec3 chuy\u1ec3n sang b\u00e0i to\u00e1n RMQ t\u01b0\u01a1ng \u1ee9ng v\u00e0 c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng m\u1ed9t s\u1ed1 c\u00e1ch kh\u00e1c nhau. Trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta s\u1ebd \u0111\u1ec1 c\u1eadp t\u1edbi m\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p gi\u1ea3i b\u00e0i to\u00e1n LCA m\u1ed9t c\u00e1ch tr\u1ef1c ti\u1ebfp.</p>"},{"location":"algo/data-structures/lca/#bai-toan-lca-least-common-ancestor","title":"B\u00e0i to\u00e1n LCA (Least Common Ancestor):","text":"<p>Input: 1 c\u00e2y v\u1edbi \\(n\\) \u0111\u1ec9nh.</p> <p>Truy v\u1ea5n: v\u1edbi 2 n\u00fat \\(u\\), \\(v\\) b\u1ea5t k\u1ef3 c\u1ee7a c\u00e2y \\(T\\), truy v\u1ea5n \\(LCA(u,v)\\) cho bi\u1ebft cha chung g\u1ea7n nh\u1ea5t c\u1ee7a 2 \u0111\u1ec9nh \\(u\\), \\(v\\) trong c\u00e2y \\(T\\), t\u1ee9c l\u00e0 cho bi\u1ebft \u0111\u1ec9nh xa g\u1ed1c nh\u1ea5t l\u00e0 cha c\u1ee7a c\u1ea3 \\(u\\) v\u00e0 \\(v\\).</p>"},{"location":"algo/data-structures/lca/#cach-1-sparse-table","title":"C\u00e1ch 1 - Sparse Table","text":"<p>T\u1eeb c\u00e2y \u0111\u1ea7u v\u00e0o ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c m\u1ea3ng \\(F[1..n]\\) v\u1edbi \\(F[i]\\) cho ta bi\u1ebft n\u00fat cha c\u1ee7a n\u00fat \\(i\\). Sau \u0111\u00f3 ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ea3ng \\(A[1..n][0..logN]\\) v\u1edbi \\(A[i][j]\\) cho ta bi\u1ebft n\u00fat t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a n\u00fat \\(i\\). X\u00e2y d\u1ef1ng m\u1ea3ng \\(A\\) m\u1ea5t \\(O(Nlog(N))\\) s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p QH\u0110. G\u1ecdi \\(d(i)\\) l\u00e0 kho\u1ea3ng c\u00e1ch t\u1edbi g\u1ed1c c\u1ee7a n\u00fat \\(i\\). \u0110\u1ec3 x\u00e1c \u0111\u1ecbnh \\(LCA(u,v)\\) ta th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc sau:</p> <ul> <li>Gi\u1ea3 s\u1eed \\(d(u) &gt; d(v)\\), ta thay \\(u\\) b\u1eb1ng m\u1ed9t n\u00fat t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) \u0111\u1ebfn khi \\(d(u)=d(v)\\).</li> <li>Khi \\(d(u)=d(v)\\) ta thay \\(u\\) v\u00e0 \\(v\\) b\u1eb1ng 2 n\u00fat t\u1ed5 ti\u00ean t\u01b0\u01a1ng \u1ee9ng sao cho v\u1eabn th\u1ecfa m\u00e3n \\(d(u)=d(v)\\) \u0111\u1ebfn khi \\(u=v\\). Khi \u0111\u00f3 ta c\u00f3 \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 c\u1ea7n t\u00ecm.</li> </ul> <p>T\u1ea5t nhi\u00ean trong qu\u00e1 tr\u00ecnh thay m\u1ed9t n\u00fat b\u1eb1ng n\u00fat t\u1ed5 ti\u00ean c\u1ee7a n\u00f3, ta s\u1ebd s\u1eed d\u1ee5ng m\u1ea3ng \\(A\\) \u0111\u1ec3 c\u00f3 th\u1ec3 nh\u1ea3y m\u1ed9t l\u1ea7n \u0111\u01b0\u1ee3c nhi\u1ec1u b\u01b0\u1edbc. Khi \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd l\u00e0 \\(&lt; O(Nlog(N)), O(log(N)) &gt;\\).</p>"},{"location":"algo/data-structures/lca/#cach-2-euler-tour-interval-tree","title":"C\u00e1ch 2 - Euler Tour + Interval Tree","text":"<p>T\u1eeb c\u00e2y \u0111\u1ea7u v\u00e0o ta s\u1eed d\u1ee5ng th\u1ee7 t\u1ee5c DFS \u0111\u1ec3 x\u00e2y d\u1ef1ng 2 m\u1ea3ng:</p> <ul> <li>\\(prevnum[1..n]\\) v\u1edbi \\(prevnum[i]\\) cho ta bi\u1ebft th\u1ee9 t\u1ef1 g\u1ecdi th\u1ee7 t\u1ee5c DFS cho \u0111\u1ec9nh \\(i\\).</li> <li>\\(postnum[1..n]\\) v\u1edbi \\(postnum[i]\\) cho ta bi\u1ebft th\u1ee9 t\u1ef1 tho\u00e1t kh\u1ecfi th\u1ee7 t\u1ee5c DFS cho \u0111\u1ec9nh \\(i\\).</li> </ul> <p>T\u1eeb 2 m\u1ea3ng \\(prevnum\\) v\u00e0 \\(postnum\\) ta c\u00f3 th\u1ec3 th\u1ea5y \u0111i\u1ec1u ki\u1ec7n c\u1ea7n v\u00e0 \u0111\u1ee7 \u0111\u1ec3 \\(u\\) l\u00e0 cha c\u1ee7a \\(v\\) l\u00e0 \\(prevnum[u] \\le prevnum[v]\\) v\u00e0 \\(postnum[u] \\ge postnum[v]\\). Do \u0111\u00f3 thao t\u00e1c ch\u1ea5t v\u1ea5n \\(LCA(u,v)\\) th\u1ef1c ch\u1ea5t l\u00e0 t\u00ecm m\u1ed9t \u0111\u1ec9nh \\(i\\) sao cho :</p> <ul> <li>\\(prevnum[i] \\le min(prevnum[u],prevnum[v])\\)</li> <li>\\(postnum[i] \\ge max(postnum[u],postnum[v])\\)</li> <li>\\(prevnum[i]\\) l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 (ho\u1eb7c \\(postnum[i]\\) nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 ).</li> </ul> <p>2 \u0111i\u1ec1u ki\u1ec7n \u0111\u1ea7u \u0111\u1ea3m b\u1ea3o \\(i\\) s\u1ebd l\u00e0 cha chung c\u1ee7a \\(u\\) v\u00e0 \\(v\\), \u0111i\u1ec1u ki\u1ec7n th\u1ee9 3 \u0111\u1ea3m b\u1ea3o \\(i\\) s\u1ebd l\u00e0 \u0111\u1ec9nh xa g\u1ed1c nh\u1ea5t, t\u1ee9c \\(i = LCA(u,v)\\).</p> <p>X\u00e2y d\u1ef1ng m\u1ea3ng \\(A[1..n]\\) v\u1edbi \\(A[i]\\) cho ta bi\u1ebft \\(postnum[k]\\) v\u1edbi \\(k\\) l\u00e0 \u0111\u1ec9nh sao cho \\(prevnum[k]=i\\). Ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ea3ng \\(A\\) trong th\u1eddi gian \\(O(N)\\). Nh\u01b0 v\u1eady ta c\u1ea7n t\u00ecm trong m\u1ea3ng con \\(A[1..min(prevnum[u],prevnum[v])]\\) ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng sao cho gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 kh\u00f4ng nh\u1ecf h\u01a1n \\(max(postnum[u],postnum[v])\\). Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Interval Tree \u0111\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y, m\u1ed7i n\u00fat c\u1ee7a c\u00e2y Interval s\u1ebd l\u01b0u gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a m\u1ed9t \u0111o\u1ea1n v\u00e0 khi th\u1ef1c hi\u1ec7n th\u1ee7 t\u1ee5c DFS tr\u00ean c\u00e2y Interval ta \u01b0u ti\u00ean \u0111i sang c\u00e2y con b\u00ean ph\u1ea3i. Khi bi\u1ebft \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb postnum (v\u00e0 c\u1ea3 prevnum) c\u1ee7a \u0111\u1ec9nh c\u1ea7n t\u00ecm r\u1ed3i ta s\u1ebd d\u1ec5 d\u00e0ng bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u1ec9nh \u0111\u00f3.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y c\u0169ng gi\u1ed1ng nh\u01b0 thu\u1eadt to\u00e1n 1 v\u1edbi th\u1eddi gian l\u00e0 \\(&lt;O(Nlog(N)),O(log(N))&gt;\\) nh\u01b0 ch\u1ec9 m\u1ea5t \\(O(N)\\) b\u1ed9 nh\u1edb.</p>"},{"location":"algo/data-structures/lca/#cach-3","title":"C\u00e1ch 3","text":"<p>C\u0169ng t\u01b0\u01a1ng t\u1ef1 c\u00e1ch 2 ta kh\u1edfi t\u1ea1o c\u00e1c m\u1ea3ng \\(prevnum[1..n]\\) v\u00e0 \\(postnum[1..n]\\). M\u1ea3ng \\(A[1..n]\\) v\u1edbi \\(A[i]\\) cho ta bi\u1ebft \u0111\u1ec9nh \\(k\\) sao cho \\(prevnum[k] = i\\). Nh\u01b0 v\u1eady ta c\u1ea7n t\u00ecm \\(LCA(u,v)\\) trong m\u1ea3ng con \\(A[1..min(prevnum[u],prevnum[v])]\\). Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p ch\u1eb7t nh\u1ecb ph\u00e2n k\u1ebft h\u1ee3p \u0111\u1ec7 quy \u0111\u1ec3 l\u00e0m c\u1eadn (kh\u00e1 t\u1ed1t) nh\u01b0 sau:</p> <ul> <li> <p>X\u00e9t th\u1ee7 t\u1ee5c <code>Find_LCA(left, right, u, v : Integer)</code> t\u00ecm cha chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\), \\(v\\) trong m\u1ea3ng con \\(A[left..right]\\). Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t gi\u1ea3 s\u1eed \\(prevnum[u]&lt;prevnum[v]\\).</p> <ul> <li> <p>N\u1ebfu \\(postnum[u]&gt;postnum[v]\\) th\u00ec \\(LCA(u,v)=u\\) v\u00e0 \u0111\u00e2y l\u00e0 tr\u01b0\u1eddng h\u1ee3p d\u1ec5 d\u00e0ng t\u00ecm ra \u0111\u00e1p \u00e1n.</p> </li> <li> <p>N\u1ebfu \\(postnum[u]&lt;postnum[v]\\), g\u1ecdi \\(mid = (left+right)/2\\). X\u00e9t ph\u1ea7n t\u1eed ch\u00ednh gi\u1eefa \u0111o\u1ea1n \\(i = A[mid]\\) s\u1ebd c\u00f3 c\u00e1c kh\u1ea3 n\u0103ng sau:</p> <ul> <li>\\(postnum[i]&gt;postnum[v]\\): \\(i\\) s\u1ebd l\u00e0 cha chung c\u1ee7a \\(u\\) v\u00e0 \\(v\\) nh\u01b0ng ch\u01b0a ch\u1eafc \u0111\u00e3 l\u00e0 \\(LCA(u,v)\\). Hi\u1ec3n nhi\u00ean \\(prevnum[i] \\le prevnum[LCA(u,v)]\\) n\u00ean ta g\u1ecdi \u0111\u1ec7 quy: <code>Find_LCA( mid, right, u, v)</code>.</li> <li>\\(postnum[v]&gt;postnum[i]&gt;postnum[u]\\): \\(i\\) l\u00e0 cha c\u1ee7a \\(u\\) nh\u01b0ng kh\u00f4ng ph\u1ea3i l\u00e0 cha c\u1ee7a \\(v\\). V\u00ec v\u1eady \\(LCA(u,v) = LCA(i,v)\\), ta g\u1ecdi \u0111\u1ec7 quy: <code>Find_LCA( left, mid, i, v)</code>.</li> <li>\\(postnum[i]&lt;postnum[u]\\): \u0111\u1ec9nh \\(i\\) l\u00e0 \u0111\u1ec9nh \u0111\u01b0\u1ee3c r\u1ebd nh\u00e1nh ra t\u1eeb m\u1ed9t n\u00fat cha n\u00e0o \u0111\u00f3 c\u1ee7a \\(u\\), nh\u01b0ng ta ho\u00e0n to\u00e0n ch\u01b0a bi\u1ebft n\u00fat cha n\u00e0y n\u1eb1m d\u01b0\u1edbi hay tr\u00ean \\(LCA(u,v)\\). Ta c\u00f3 th\u1ec3 x\u1eed l\u00fd theo 2 c\u00e1ch: g\u1ecdi \u0111\u1ec7 quy <code>Find_LCA(left,right,cha(u),cha(v))</code> ho\u1eb7c l\u1ea5y <code>j = Find_LCA(left,mid,i,u)</code> v\u00e0 \\(j\\) s\u1ebd r\u01a1i v\u00e0o 2 tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u.</li> </ul> </li> </ul> </li> </ul> <p>Thu\u1eadt to\u00e1n tr\u00ean n\u1ebfu ch\u1ec9 th\u1ef1c hi\u1ec7n 2 tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i l\u1ea7n ch\u1ea5t v\u1ea5n l\u00e0 \\(LogN\\), c\u00f2n n\u1ebfu ch\u1ec9 th\u1ef1c hi\u1ec7n tr\u01b0\u1eddng h\u1ee3p 3 th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(N\\). Qua kh\u1ea3o s\u00e1t b\u1eb1ng vi\u1ec7c ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh cho th\u1ea5y th\u1eddi gian th\u1ef1c hi\u1ec7n trung b\u00ecnh c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y ngang v\u1edbi c\u00e1c thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(&lt;O(Nlog(N)),O(log(N))&gt;\\). Thu\u1eadt to\u00e1n n\u00e0y tuy c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u1edbn nh\u01b0ng l\u1ea1i l\u00e0 ph\u01b0\u01a1ng ph\u00e1p ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb v\u00e0 c\u00e0i \u0111\u1eb7t d\u1ec5 d\u00e0ng n\u00ean \u0111\u00e2y l\u00e0 thu\u1eadt to\u00e1n c\u00f3 \u1ee9ng d\u1ee5ng cao trong l\u00e0m b\u00e0i.</p>"},{"location":"algo/data-structures/lca/#cach-4-heavy-light-decomposition","title":"C\u00e1ch 4 - Heavy Light Decomposition","text":"<p>S\u1eed d\u1ee5ng Heavy Light Decomposition.</p> <p>Xu\u1ea5t ph\u00e1t t\u1eeb tr\u01b0\u1eddng h\u1ee3p suy bi\u1ebfn c\u1ee7a c\u00e2y: m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ch\u1ec9 c\u00f3 \u0111\u00fang 1 con (tr\u1eeb 1 n\u00fat l\u00e1 kh\u00f4ng c\u00f3 con). V\u1edbi m\u1ed9t c\u00e2y suy bi\u1ebfn ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 t\u00ecm \\(LCA(u,v)\\) trong th\u1eddi gian \\(O(1)\\) (\u0111\u1ec9nh n\u00e0o g\u1ea7n g\u1ed1c h\u01a1n trong 2 \u0111\u1ec9nh \\(u\\), \\(v\\) s\u1ebd l\u00e0 \\(LCA(u,v)\\)). T\u01b0 t\u01b0\u1edfng c\u1ee7a Heavy Light Decomposition s\u1ebd l\u00e0 chia c\u00e2y ban \u0111\u1ea7u ra th\u00e0nh nhi\u1ec1u c\u00e2y suy bi\u1ebfn.</p> <p></p> <p>Nh\u1eefng \u0111o\u1ea1n c\u00f9ng m\u00e0u l\u00e0 m\u1ed9t c\u00e2y suy bi\u1ebfn. N\u1ebfu coi m\u1ed7i c\u00e2y suy bi\u1ebfn l\u00e0 m\u1ed9t \u0111\u1ec9nh th\u00ec ta s\u1ebd \u0111\u01b0\u1ee3c m\u1ed9t c\u00e2y m\u1edbi g\u1ecdi l\u00e0 c\u00e2y r\u00fat g\u1ecdn. Sau \u0111\u00e2y l\u00e0 m\u1ed9t c\u00e1ch chia c\u00e2y \u0111\u1ec3 c\u00e2y r\u00fat g\u1ecdn thu \u0111\u01b0\u1ee3c c\u00f3 \u0111\u1ed9 cao \\(O(LogN)\\) v\u1edbi \\(N\\) l\u00e0 s\u1ed1 n\u00fat c\u1ee7a c\u00e2y ban \u0111\u1ea7u:</p> <ul> <li>Xu\u1ea5t ph\u00e1t t\u1eeb \u0111\u1ec9nh g\u1ed1c</li> <li>V\u1edbi m\u1ed7i \u0111\u1ec9nh n\u1ebfu l\u00e0 l\u00e1 th\u00ec n\u00f3 s\u1ebd l\u00e0 k\u1ebft th\u00fac c\u1ee7a m\u1ed9t c\u00e2y suy bi\u1ebfn</li> <li>N\u1ebfu kh\u00f4ng ta s\u1ebd ph\u00e1t tri\u1ec3n ti\u1ebfp c\u00e2y suy bi\u1ebfn n\u00e0y xu\u1ed1ng \u0111\u1ec9nh con c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng l\u1edbn nh\u1ea5t, c\u00e1c \u0111\u1ec9nh con kh\u00e1c s\u1ebd l\u00e0 n\u00fat g\u1ed1c c\u1ee7a nh\u1eefng c\u00e2y suy bi\u1ebfn m\u1edbi. Tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a m\u1ed9t n\u00fat \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 s\u1ed1 n\u00fat nh\u1eadn n\u00fat \u0111\u00f3 l\u00e0 t\u1ed5 ti\u00ean (hi\u1ec3u m\u1ed9t c\u00e1ch tr\u1ef1c quan th\u00ec n\u1ebfu coi m\u1ed7i n\u00fat c\u00f3 m\u1ed9t \u201cs\u1ee9c n\u1eb7ng\u201d th\u00ec tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a m\u1ed9t n\u00fat ch\u00ednh l\u00e0 \u201cs\u1ee9c n\u1eb7ng\u201d m\u00e0 n\u00fat \u0111\u00f3 ph\u1ea3i g\u00e1nh).</li> </ul> <p>Ch\u1ee9ng minh:</p> <ul> <li>G\u1ecdi \\(F(n)\\) l\u00e0 h\u00e0m cho ta chi\u1ec1u cao t\u1ed1i \u0111a c\u1ee7a m\u1ed9t c\u00e2y r\u00fat g\u1ecdn c\u00f3 \\(n\\) \u0111\u1ec9nh. Ta s\u1ebd ch\u1ee9ng minh \\(F(n) \\le log(N)+1\\).</li> <li>V\u1edbi \\(n=1\\) th\u00ec \\(F(1) = log(1)+1\\).</li> <li>Gi\u1ea3 s\u1eed \u0111i\u1ec1u c\u1ea7n ch\u1ee9ng minh \u0111\u00e3 \u0111\u00fang \u0111\u1ebfn \\(n-1\\).</li> <li> <p>V\u1edbi m\u1ed9t c\u00e2y c\u00f3 \\(N\\) \u0111\u1ec9nh v\u00e0 n\u00fat g\u1ed1c s\u1ebd c\u00f3 c\u00e1c c\u00e2y con v\u1edbi s\u1ed1 \u0111\u1ec9nh l\u00e0 \\(x_1, ..., x_k\\). Gi\u1ea3 s\u1eed \\(x_1 = max(x1..xk)\\). Ta c\u00f3 \\(2*max(x_2..x_k) \\le max(x_2..x_k) + x_1 \\le N\\) \\(\\rightarrow max(x2\u2026xk) \\le N/2\\).</p> </li> <li> <p>Theo c\u00e1ch x\u00e2y d\u1ef1ng c\u00e2y th\u00ec :</p> <p>\\(F(N)  = max( F(x_1), F(x_2)+1, F(x_3)+1, .., F(x_k)+1 )\\)</p> <p>M\u00e0:</p> <pre><code>- $F(x_1)  \\le  F(N-1)  \\le  LogN+1$\n- $F(x_2) +1  \\le  F(N/2)+1  \\le  LogN+1$\n- ...\n- $F(x_k) +1  \\le  F(N/2)+1  \\le  LogN+1$\n</code></pre> </li> </ul> <p>V\u1eady \\(F(N)  \\le  LogN+1\\) (\u0110i\u1ec1u ph\u1ea3i ch\u1ee9ng minh).</p> <p>\u0110\u1ec3 th\u1ef1c hi\u1ec7n ch\u1ea5t v\u1ea5n \\(LCA(u,v)\\) ta l\u1ea7n l\u01b0\u1ee3t nh\u1ea3y t\u1eeb \\(u\\) v\u00e0 \\(v\\) tr\u1edf v\u1ec1 g\u1ed1c c\u1ee7a c\u00e2y. T\u1eeb m\u1ed9t \u0111\u1ec9nh ta th\u1ef1c hi\u1ec7n l\u1ea7n l\u01b0\u1ee3t m\u1ed9t b\u01b0\u1edbc nh\u1ea3y d\u00e0i t\u1edbi g\u1ed1c c\u1ee7a c\u00e2y suy bi\u1ebfn ch\u1ee9a n\u00f3 v\u00e0 m\u1ed9t b\u01b0\u1edbc nh\u1ea3y ng\u1eafn t\u1edbi n\u00fat cha (qua \u0111\u00f3 chuy\u1ec3n sang c\u00e2y suy bi\u1ebfn m\u1edbi). Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c c\u00e2y suy bi\u1ebfn ch\u1ee9a \\(LCA(u,v)\\), ta c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c \u0111\u1ec9nh \\(u_1\\), \\(v_1\\) t\u01b0\u01a1ng \u1ee9ng l\u00e0 n\u00fat \u0111\u1ea7u ti\u00ean ta g\u1eb7p khi nh\u1ea3y t\u1eeb \\(u\\), \\(v\\) t\u1edbi c\u00e2y suy bi\u1ebfn ch\u1ee9a \\(LCA(u,v)\\). Sau \u0111\u00f3 ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng m\u1ed9t ph\u00e9p so s\u00e1nh xem \\(u_1\\) hay \\(v_1\\) g\u1ea7n g\u1ed1c h\u01a1n l\u00e0 c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c \\(LCA(u,v)\\).</p> <p>Tuy v\u1ec1 \u00fd t\u01b0\u1edfng ta quan t\u00e2m nhi\u1ec1u \u0111\u1ebfn vi\u1ec7c chia c\u00e2y ban \u0111\u1ea7u ra th\u00e0nh nhi\u1ec1u c\u00e2y suy bi\u1ebfn nh\u01b0ng v\u1ec1 m\u1eb7t c\u00e0i \u0111\u1eb7t, ta ch\u1ec9 c\u1ea7n quan t\u00e2m v\u1edbi m\u1ed7i n\u00fat c\u1ee7a c\u00e2y \u0111\u1ea7u v\u00e0o, n\u00fat g\u1ed1c c\u1ee7a c\u00e2y suy bi\u1ebfn ch\u1ee9a n\u00f3 l\u00e0 n\u00fat n\u00e0o. D\u1ec5 th\u1ea5y khi th\u1ef1c hi\u1ec7n th\u1ee7 t\u1ee5c DFS (c\u00f3 \u01b0u ti\u00ean g\u1ecdi \u0111\u1ec7 quy t\u1edbi n\u00fat con c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng l\u1edbn nh\u1ea5t tr\u01b0\u1edbc) c\u00e1c n\u00fat s\u1ebd \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea l\u1ea7n l\u01b0\u1ee3t theo t\u1eebng c\u00e2y suy bi\u1ebfn. V\u00ec v\u1eady ta c\u00f3 th\u1ec3 kh\u1edfi t\u1ea1o m\u1ea3ng \\(Head[1..n]\\) v\u1edbi \\(Head[i]\\) cho ta bi\u1ebft n\u00fat g\u1ed1c c\u1ee7a c\u00e2y suy bi\u1ebfn ch\u1ee9a n\u00fat \\(i\\) ch\u1ec9 v\u1edbi \\(O(N)\\).</p> <p>Thu\u1eadt to\u00e1n n\u00e0y s\u1ebd ch\u1ea1y trong th\u1eddi gian \\(&lt;O(N),O(log(N))&gt;\\).</p> <p>Thu\u1eadt to\u00e1n n\u00e0y kh\u00e1 linh ho\u1ea1t v\u00e0 c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng ra \u0111\u1ec3 \u1ee9ng d\u1ee5ng v\u00e0o nhi\u1ec1u b\u00e0i to\u00e1n kh\u00e1c tr\u00ean c\u00e2y. \u0110\u1ec3 \u00fd r\u1eb1ng n\u1ebfu c\u00e2y ban \u0111\u1ea7u c\u00f3 tr\u1ecdng s\u1ed1 \u1edf m\u1ed7i c\u1ea1nh, sau khi chia th\u00e0nh c\u00e1c c\u00e2y suy bi\u1ebfn th\u00ec c\u1ea1nh c\u1ee7a m\u1ed7i c\u00e2y suy bi\u1ebfn s\u1ebd gi\u1ed1ng nh\u01b0 c\u00e1c ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp c\u1ee7a  m\u1ed9t m\u1ea3ng. Do \u0111\u00f3 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u nh\u01b0 Interval Tree \u0111\u1ec3 qu\u1ea3n l\u00fd vi\u1ec7c thay \u0111\u1ed5i hay ch\u1ea5t v\u1ea5n th\u00f4ng tin v\u1ec1 c\u00e1c c\u1ea1nh n\u00e0y. \u0110\u00e2y ch\u00ednh l\u00e0 \u00fd t\u01b0\u1edfng \u0111\u1ec3 l\u00e0m b\u00e0i QTREE.</p>"},{"location":"algo/data-structures/lca/#cach-5-xu-ly-offline","title":"C\u00e1ch 5 - X\u1eed l\u00fd offline","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n LCA khi \u0111\u00e3 bi\u1ebft tr\u01b0\u1edbc m\u1ecdi c\u00e2u h\u1ecfi ch\u1ea5t v\u1ea5n. C\u00e1ch l\u00e0m n\u00e0y tuy kh\u00f4ng linh ho\u1ea1t nh\u01b0ng th\u1eddi gian ch\u1ea1y kh\u00e1 nhanh v\u00e0 ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb. T\u01b0 t\u01b0\u1edfng c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 tr\u1ea3 l\u1eddi c\u00e1c c\u00e2u ch\u1ea5t v\u1ea5n theo m\u1ed9t th\u1ee9 t\u1ef1 kh\u00e1c d\u1ec5 d\u00e0ng h\u01a1n. V\u1edbi m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ta s\u1ebd l\u01b0u n\u00f3 trong m\u1ed9t t\u1eadp h\u1ee3p c\u00f3 nh\u00e3n. Ban \u0111\u1ea7u m\u1ed7i n\u00fat thu\u1ed9c m\u1ed9t t\u1eadp h\u1ee3p kh\u00e1c nhau v\u00e0 nh\u00e3n c\u1ee7a t\u1eadp h\u1ee3p ch\u00ednh l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a n\u00fat \u0111\u00f3. Sau \u0111\u00f3 ta th\u1ef1c hi\u1ec7n th\u1ee7 t\u1ee5c DFS, tr\u01b0\u1edbc khi tho\u00e1t ra kh\u1ecfi th\u1ee7 t\u1ee5c DFS ta th\u1ef1c hi\u1ec7n 2 thao t\u00e1c sau :</p> <ul> <li>T\u00ecm cha chung c\u1ee7a \\(u\\) v\u1edbi c\u00e1c \u0111\u1ec9nh \\(v\\) m\u00e0 th\u1ee7 t\u1ee5c <code>DFS(v)</code> \u0111\u00e3 \u0111\u01b0\u1ee3c th\u1ef1c thi. \u0110\u1ec9nh cha chung ch\u00ednh l\u00e0 nh\u00e3n c\u1ee7a t\u1eadp h\u1ee3p ch\u1ee9a \\(v\\).</li> <li>H\u1ee3p nh\u1ea5t t\u1eadp h\u1ee3p ch\u1ee9a \\(u\\) v\u1edbi t\u1eadp h\u1ee3p ch\u1ee9a \\(cha(u)\\) v\u00e0 l\u1ea5y nh\u00e3n l\u00e0 \\(cha(u)\\).</li> </ul> <p>Ta s\u1ebd ch\u1ee9ng minh \u201c\u0110\u1ec9nh cha chung ch\u00ednh l\u00e0 nh\u00e3n c\u1ee7a t\u1eadp h\u1ee3p ch\u1ee9a v\u201d. Gi\u1ea3 s\u1eed \\(i=LCA(u,v)\\). Sau khi th\u1ef1c thi th\u1ee7 t\u1ee5c <code>DFS(v)</code> xong, t\u1eeb \\(v\\) th\u1ee7 t\u1ee5c DFS ph\u1ea3i \u0111i v\u1ec1 \\(i\\) v\u00e0 r\u1ebd xu\u1ed1ng \\(u\\) \u0111\u1ec3 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n <code>DFS(u)</code>. Trong qu\u00e1 tr\u00ecnh \u0111i v\u1ec1 \\(i\\), n\u00f3 s\u1ebd h\u1ee3p nh\u1ea5t \\(v\\) v\u1edbi cha \\(v\\), \u00f4ng \\(v\\),.. r\u1ed3i v\u1edbi \\(i\\). Do \u0111\u00f3 nh\u00e3n c\u1ee7a t\u1eadp ch\u1ee9a \\(v\\) ch\u00ednh l\u00e0 \\(i\\).</p> <p>\u0110\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c h\u1ee3p nh\u1ea5t 2 t\u1eadp h\u1ee3p v\u1edbi th\u1eddi gian ng\u1eafn, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac disjoint set gi\u1ed1ng nh\u01b0 trong thu\u1eadt to\u00e1n Kruskal. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 \\((M+N)log(N)\\) v\u1edbi \\(M\\) l\u00e0 s\u1ed1 thao t\u00e1c.</p>"},{"location":"algo/data-structures/lca/#cac-bai-tap-ap-dung","title":"C\u00e1c b\u00e0i t\u1eadp \u00e1p d\u1ee5ng:","text":"<ul> <li>VNOJ - LUBENICA</li> <li>SPOJ - LCA</li> <li>SPOJ - QTREE</li> <li>VNOJ - QTREE3</li> <li>VNOJ - VOTREE</li> </ul>"},{"location":"algo/data-structures/mo-algorithm/","title":"Chia c\u0103n (sqrt decomposition) v\u00e0 \u1ee9ng d\u1ee5ng: Ph\u1ea7n 2","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n RR Th\u00e0nh Trung</p> <p>Ti\u1ebfp n\u1ed1i chu\u1ed7i b\u00e0i vi\u1ebft v\u1ec1 c\u00e1c thu\u1eadt to\u00e1n chia c\u0103n, trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta s\u1ebd b\u00e0n v\u1ec1 k\u0129 thu\u1eadt t\u0103ng t\u1ed1c \u0111\u1ed9 tr\u1ea3 l\u1eddi truy v\u1ea5n b\u1eb1ng c\u00e1ch s\u1eafp x\u1ebfp ch\u00fang theo m\u1ed9t th\u1ee9 t\u1ef1 nh\u1ea5t \u0111\u1ecbnh, c\u00f2n g\u1ecdi l\u00e0 Mo's algorithm.</p>"},{"location":"algo/data-structures/mo-algorithm/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t d\u00e3y s\u1ed1 \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed. C\u1ea7n th\u1ef1c hi\u1ec7n \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n \\((i, j)\\) y\u00eau c\u1ea7u t\u00ecm \\(mode(A_i, ..., A_j)\\). (Mode c\u1ee7a m\u1ed9t t\u1eadp h\u1ee3p l\u00e0 gi\u00e1 tr\u1ecb xu\u1ea5t hi\u1ec7n nhi\u1ec1u l\u1ea7n nh\u1ea5t trong t\u1eadp h\u1ee3p \u0111\u00f3). Gi\u1edbi h\u1ea1n: \\(N, Q, A_i \\le 10^5\\).</p> <p>Khi \u0111\u1ecdc \u0111\u1ec1 m\u1ed9t b\u00e0i to\u00e1n truy v\u1ea5n ki\u1ec3u n\u00e0y, c\u00f3 l\u1ebd CTDL \u0111\u1ea7u ti\u00ean m\u00e0 c\u00e1c b\u1ea1n ngh\u0129 \u0111\u1ebfn l\u00e0 Interval Tree. Nh\u01b0ng c\u00f3 \u0111i\u1ec1u g\u00ec \u0111\u00f3 kh\u00f4ng \u1ed5n trong b\u00e0i n\u00e0y: Khi c\u00f3 th\u00f4ng tin c\u1ee7a 2 n\u00fat con \\([l, mid]\\) v\u00e0 \\([mid+1, r]\\), r\u1ea5t kh\u00f3 \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c b\u1ea5t k\u1ef3 th\u00f4ng tin h\u1eefu \u00edch n\u00e0o c\u1ee7a \\([l, r]\\).</p>"},{"location":"algo/data-structures/mo-algorithm/#duyet","title":"Duy\u1ec7t","text":"<p>Ch\u00fang ta xu\u1ea5t ph\u00e1t t\u1eeb thu\u1eadt to\u00e1n duy\u1ec7t h\u1ed3n nhi\u00ean nh\u01b0 sau:</p> <ul> <li>V\u1edbi m\u1ed7i truy v\u1ea5n, ta for t\u1eeb tr\u00e1i sang ph\u1ea3i, \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n.</li> <li>Trong khi \u0111\u1ebfm th\u00ec ta c\u1eadp nh\u1eadt k\u1ebft qu\u1ea3.</li> </ul> <p>Code \u0111\u01a1n gi\u1ea3n nh\u01b0 sau:</p> <pre><code>function mode(l, r):\n  // Kh\u1edfi t\u1ea1o m\u1ea3ng count = to\u00e0n 0\n  res = -1;\n  for i = l .. r:\n    count[A[i]] += 1;\n    if res == -1 or count[A[i]] &gt; count[res]:\n      res = A[i];\n  return res;\n</code></pre> <p>D\u1ec5 th\u1ea5y, thu\u1eadt to\u00e1n duy\u1ec7t n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N \\* Q)\\). C\u00f3 2 l\u00fd do ch\u00ednh khi\u1ebfn thu\u1eadt to\u00e1n n\u00e0y ch\u1ea1y ch\u1eadm:</p> <ol> <li>Kh\u1edfi t\u1ea1o m\u1ea3ng count m\u1ed7i l\u1ea7n m\u1ea5t \\(O(N)\\).</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n, ph\u1ea3i t\u00ednh l\u1ea1i m\u1ea3ng count t\u1eeb \u0111\u1ea7u.</li> </ol> <p>Ta c\u00f3 th\u1ec3 c\u1ea3i ti\u1ebfn \u0111\u01b0\u1ee3c nh\u01b0 sau:</p> <p>Sau khi tr\u1ea3 l\u1eddi truy v\u1ea5n \\([l_1, r_1]\\), \u0111\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n \\([l_2, r_2]\\), b\u1ea1n ch\u1ec9 c\u1ea7n thay \u0111\u1ed5i m\u1ea3ng \u0111\u1ebfm m\u1ed9t c\u00e1ch ph\u00f9 h\u1ee3p. C\u1ee5 th\u1ec3:</p> <ul> <li>N\u1ebfu \\(l_2 &gt; l_1\\), gi\u1ea3m s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a \\(A_{l_1}, ..., A_{l_2-1}\\)</li> <li>N\u1ebfu \\(l_2 &lt; l_1\\), t\u0103ng s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a \\(A_{l_2}, ..., A_{l_1-1}\\)</li> <li>T\u01b0\u01a1ng t\u1ef1 v\u1edbi \\(r_1\\) v\u00e0 \\(r_2\\).</li> </ul> <p>\u0110\u1ec3 c\u1eadp nh\u1eadt s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n l\u1edbn nh\u1ea5t th\u00ec c\u00f3 th\u1ec3 d\u00f9ng th\u00eam set.</p> <p>Nh\u01b0 v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ta l\u00e0 t\u1ed5ng \\(\\|l_i - l_{i-1}\\| + \\|r_i - r_{i-1}\\|\\), nh\u00e2n th\u00eam \\(\\mathcal{O}(logN)\\) \u0111\u1ec3 \u0111\u1ebfm v\u00e0 t\u00ecm ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t c\u1ee7a m\u1ea3ng \u0111\u1ebfm.</p>"},{"location":"algo/data-structures/mo-algorithm/#thuat-toan-mo","title":"Thu\u1eadt to\u00e1n Mo","text":"<p>Thu\u1eadt to\u00e1n Mo l\u00e0 m\u1ed9t c\u00e1ch s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c truy v\u1ea5n, sao cho t\u1ed5ng \\(\\|l_i - l_{i-1}\\| + \\|r_i - r_{i-1}\\|\\) kh\u00f4ng qu\u00e1 \\(O(N \\* \\sqrt{N} + Q \\* \\sqrt{N})\\).</p> <p>Th\u1ee9 t\u1ef1 c\u00e1c truy v\u1ea5n \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a qua h\u00e0m so s\u00e1nh d\u01b0\u1edbi \u0111\u00e2y.</p> <pre><code>S = sqrt(N);\nbool cmp(Query A, Query B) // so s\u00e1nh 2 truy v\u1ea5n\n{\n  if (A.l / S != B.l / S) {\n    return A.l / S &lt; B.l / S;\n  }\n  return A.r &lt; B.r;\n}\n</code></pre> <p>Gi\u1ea3i th\u00edch:</p> <ul> <li>Ta chia d\u00e3y th\u00e0nh c\u00e1c block (nh\u00f3m) \u0111\u1ed9 d\u00e0i \\(S = \\sqrt{N}\\).</li> <li>N\u1ebfu \u0111\u1ea7u tr\u00e1i c\u1ee7a truy v\u1ea5n n\u1eb1m \u1edf 2 block kh\u00e1c nhau, ta s\u1eafp x\u1ebfp theo \u0111\u1ea7u tr\u00e1i.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i (\u0111\u1ea7u tr\u00e1i c\u1ee7a truy v\u1ea5n n\u1eb1m \u1edf c\u00f9ng 1 block), ta s\u1eafp x\u1ebfp theo \u0111\u1ea7u ph\u1ea3i.</li> </ul> <p>Ch\u1ee9ng minh:</p> <p>Mo's algorithm c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(N \\* \\sqrt{N} + Q \\* \\sqrt{N})\\). \u0110\u1ec3 hi\u1ec3u t\u1ea1i sao \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n \u0111\u1ea1t \u0111\u01b0\u1ee3c nh\u01b0 v\u1eady, ch\u00fang ta h\u00e3y c\u00f9ng xem vi\u1ec7c di chuy\u1ec3n c\u00e1c \u0111o\u1ea1n \\([l_1,r_1]\\) th\u00e0nh \\([l_2,r_2]\\):</p> <ul> <li>Di chuy\u1ec3n \\(l_1 \\rightarrow l_2\\):<ul> <li>N\u1ebfu \\(l_1\\) v\u00e0 \\(l_2\\) c\u00f9ng block: V\u1edbi m\u1ed7i thao t\u00e1c, \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng qu\u00e1 \\(\\sqrt{N}\\). Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u1ee7a c\u1ea3 \\(Q\\) thao t\u00e1c l\u00e0 \\(O(Q \\* \\sqrt{N})\\).</li> <li>N\u1ebfu \\(l_1\\) v\u00e0 \\(l_2\\) kh\u00e1c block: V\u00ec ta \u01b0u ti\u00ean sort theo block ch\u1ee9a \\(l\\), n\u00ean tr\u01b0\u1eddng h\u1ee3p n\u00e0y x\u1ea3y ra kh\u00f4ng qu\u00e1 \\(\\sqrt{N}\\) l\u1ea7n. \u1ede tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1i \u0111a l\u00e0 \\(O(N)\\), n\u00ean v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(N \\* \\sqrt{N})\\).</li> </ul> </li> <li>Di chuy\u1ec3n \\(r_1 \\rightarrow r_2\\):<ul> <li>N\u1ebfu \\(l_1\\) v\u00e0 \\(l_2\\) c\u00f9ng block: V\u00ec trong c\u00f9ng m\u1ed9t block \\(r\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n, n\u00ean v\u1edbi m\u1ed7i block c\u1ee7a \\(l\\), ta ch\u1ec9 m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 \\(O(N)\\). Do c\u00f3 \\(\\sqrt{N}\\) block kh\u00e1c nhau c\u1ee7a \\(l\\), n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \\(O(N \\* \\sqrt{N})\\).</li> <li>N\u1ebfu \\(l_1\\) v\u00e0 \\(l_2\\) kh\u00e1c block: Nh\u01b0 tr\u00ean \u0111\u00e3 ph\u00e2n t\u00edch, ta ch\u1ec9 c\u00f3 \\(\\sqrt{N}\\) l\u1ea7n \u0111\u1ed5i block, m\u1ed7i l\u1ea7n \u0111\u1ed5i block ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N)\\) \u0111\u1ec3 di chuy\u1ec3n \\(r\\). Do \u0111\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \\(O(N \\* \\sqrt{N})\\).</li> </ul> </li> </ul> <p>V\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(N \\* \\sqrt{N} + Q \\* \\sqrt{N})\\).</p>"},{"location":"algo/data-structures/mo-algorithm/#ap-dung","title":"\u00c1p d\u1ee5ng","text":"<p>S\u1eed d\u1ee5ng Mo's Algorithm, b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n ho\u00e0n ch\u1ec9nh cho b\u00e0i n\u00e0y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N \\* \\sqrt{N} + Q \\* \\sqrt{N})\\):</p> <ul> <li>Sort t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n theo Mo's Algorithm.</li> <li>G\u1ecdi \\(S(N)\\) l\u00e0 m\u1ed9t m\u1ea3ng g\u1ed3m \\(N\\) set (c\u00f3 th\u1ec3 c\u00e0i b\u1eb1ng hash table (b\u1ea3ng b\u0103m)). \\(S(i)\\) ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 xu\u1ea5t hi\u1ec7n \u0111\u00fang \\(i\\) l\u1ea7n.</li> <li>G\u1ecdi \\(A(val)\\) = s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a val.</li> <li>\u0110\u1eb7t \\(max\\) l\u00e0 ch\u1ec9 s\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a m\u1ea3ng \\(S\\) m\u00e0 \\(S(max)\\) kh\u00e1c r\u1ed7ng.</li> <li>Ta s\u1ebd th\u00eam v\u00e0 x\u00f3a m\u1ed9t s\u1ed1 trong O(1) nh\u01b0 sau:<ul> <li>Th\u00eam 1 s\u1ed1 \\(v\\):<ul> <li>X\u00f3a \\(v\\) kh\u1ecfi \\(S(A(v))\\).</li> <li>T\u0103ng \\(A(v)\\) th\u00eam 1.</li> <li>Th\u00eam \\(v\\) v\u00e0o \\(S(A(v))\\).</li> <li>N\u1ebfu \\(A(v) &gt; max\\), c\u1eadp nh\u1eadt \\(max\\).</li> </ul> </li> <li>X\u00f3a 1 s\u1ed1 \\(v\\):<ul> <li>X\u00f3a \\(v\\) kh\u1ecfi \\(S(A(v))\\).</li> <li>Gi\u1ea3m \\(A(v)\\) \u0111i 1.</li> <li>Th\u00eam \\(v\\) v\u00e0o \\(S(A(v))\\).</li> <li>N\u1ebfu \\(S(max)\\) r\u1ed7ng, gi\u1ea3m \\(max\\) \u0111i 1.</li> </ul> </li> </ul> </li> </ul> <p>V\u00ec t\u1ed5ng c\u00e1c thao t\u00e1c th\u00eam v\u00e0 x\u00f3a khi \u00e1p d\u1ee5ng Mo's Algorithm kh\u00f4ng qu\u00e1 \\(O(N \\* \\sqrt{N} + Q \\* \\sqrt{N})\\), ta thu \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y.</p>"},{"location":"algo/data-structures/mo-algorithm/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>V\u1edbi m\u1ee5c \u0111\u00edch l\u00e0m b\u00e0i to\u00e1n kh\u00f3 h\u01a1n, ta x\u00e9t tr\u01b0\u1eddng h\u1ee3p m\u00e0 CTDL c\u1ee7a ta ch\u1ec9 cho ph\u00e9p th\u1ef1c hi\u1ec7n \u0111\u00fang 2 thao t\u00e1c:</p> <ul> <li>Insert: Th\u00eam 1 ph\u1ea7n t\u1eed v\u00e0o CTDL, thao t\u00e1c n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(logN)\\) ho\u1eb7c \\(O(1)\\).</li> <li>Snapshot: L\u01b0u l\u1ea1i tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a CTDL. Thao t\u00e1c n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N)\\).</li> <li>Rollback: H\u1ed3i ph\u1ee5c l\u1ea1i tr\u1ea1ng th\u00e1i c\u1ee7a CTDL \u1edf l\u1ea7n Snapshot cu\u1ed1i. Thao t\u00e1c n\u00e0y c\u0169ng c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(N)\\).</li> </ul> <p>M\u1ed9t v\u00ed d\u1ee5 c\u1ee7a CTDL lo\u1ea1i n\u00e0y l\u00e0 Disjoint set, v\u00e0 vi\u1ec7c x\u1eed l\u00fd truy v\u1ea5n xu\u1ea5t hi\u1ec7n trong b\u00e0i to\u00e1n Codechef - GERALD07.</p> <p>C\u00e1ch l\u00e0m v\u1eabn l\u00e0 \u00e1p d\u1ee5ng Mo's algorithm, tuy nhi\u00ean v\u00ec kh\u00f4ng th\u1ec3 x\u00f3a ph\u1ea7n t\u1eed, n\u00ean ta kh\u00f4ng th\u1ec3 di chuy\u1ec3n t\u1eeb \\(l_1\\) sang \\(l_2\\) m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c.</p> <p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, ch\u00fang ta ch\u1ec9 x\u00e9t nh\u1eefng truy v\u1ea5n \\([l, r]\\) m\u00e0 \\(l\\) v\u00e0 \\(r\\) r\u01a1i v\u00e0o 2 block kh\u00e1c nhau. \u0110\u1ec3 gi\u1ea3i quy\u1ebft vi\u1ec7c kh\u00f4ng di chuy\u1ec3n ng\u01b0\u1ee3c \u0111\u01b0\u1ee3c, sau khi tr\u1ea3 l\u1eddi truy v\u1ea5n \\([l, r]\\), ch\u00fang ta c\u1ea7n d\u00f9ng Rollback \u0111\u1ec3 \u0111\u01b0a l v\u1ec1 cu\u1ed1i block ch\u1ee9a l. Sau \u0111\u00f3, khi tr\u1ea3 l\u1eddi truy v\u1ea5n \\([l_2, r_2]\\), ch\u00fang ta ch\u1ec9 c\u1ea7n th\u1ef1c hi\u1ec7n Insert t\u1eeb \\(r+1\\) \u0111\u1ebfn \\(r_2\\) v\u00e0 t\u1eeb \\(l_2\\) \u0111\u1ebfn cu\u1ed1i block ch\u1ee9a \\(l_2\\).</p> <p>Chi ti\u1ebft c\u00e0i \u0111\u1eb7t:</p> <pre><code>   rt = sqrt(n);\n   init();  // this initializes our data structure (clears it)\n   snapshot();\n   for all queries q\n       if q.r - q.l + 1 &lt;= rt + 1 // we process light queries\n           for j := q.l to q.r\n               insert(j);\n           store answer for query q;\n           rollback();\n   last_bucket = -1;\n   for all queries q \n       if q.r - q.l + 1 &lt;= rt + 1: continue;\n       bucket = q.l / rt;\n\n       if bucket != last_bucket\n           init();\n           l = (bucket + 1) * rt; // right border of the bucket\n           r = q.r;\n           for j := l to r\n               insert(j);\n       last_bucket = bucket;\n\n       while r &lt; q.r \n           insert(++r);\n       snapshot();\n       for j := q.l to l - 1\n           insert(j);\n       store answer for query q;\n       rollback();\n</code></pre>"},{"location":"algo/data-structures/mo-algorithm/#cai-tien","title":"C\u1ea3i ti\u1ebfn","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 c\u00e1ch c\u1ea3i ti\u1ebfn t\u1ed1c \u0111\u1ed9 ch\u1ea1y c\u1ee7a Mo s\u1eed d\u1ee5ng TSP v\u00e0 Hilbert curve t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/data-structures/mo-algorithm/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Codeforces Yandex 2011 Round 2 - D</li> <li>Codechef - GERALD07</li> </ul>"},{"location":"algo/data-structures/overview-data-structures/","title":"C\u1ea5u tr\u00fac d\u1eef li\u1ec7u","text":"<p>Ngu\u1ed3n: Topcoder </p> <p>T\u00e1c gi\u1ea3: timmac</p>"},{"location":"algo/data-structures/overview-data-structures/#cac-cau-truc-du-lieu-on-gian","title":"C\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01a1n gi\u1ea3n","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01a1n gi\u1ea3n nh\u1ea5t ch\u00ednh l\u00e0 c\u00e1c bi\u1ebfn. Ch\u00fang n\u1eafm gi\u1eef duy nh\u1ea5t m\u1ed9t gi\u00e1 tr\u1ecb, h\u01a1n n\u1eefa, ph\u1ea1m vi s\u1eed d\u1ee5ng c\u00f3 gi\u1edbi h\u1ea1n. Khi nhi\u1ec1u gi\u00e1 tr\u1ecb c\u1ea7n l\u01b0u tr\u1eef, m\u1ea3ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.</p> <p>M\u1ed9t kh\u00e1i ni\u1ec7m h\u01a1i kh\u00f3 h\u01a1n m\u1eb7c d\u00f9 kh\u00f4ng k\u00e9m ph\u1ea7n c\u0103n b\u1ea3n l\u00e0 con tr\u1ecf. Con tr\u1ecf thay v\u00ec gi\u1eef m\u1ed9t gi\u00e1 tr\u1ecb, n\u00f3 l\u1ea1i gi\u1eef m\u1ed9t \u0111\u1ecba ch\u1ec9 v\u00f9ng nh\u1edb. H\u1ea7u h\u1ebft c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean d\u00e0y d\u1ea1n \u0111\u1ec1u c\u00f3 hi\u1ec3u bi\u1ebft r\u00f5 v\u1ec1 con tr\u1ecf v\u00e0 r\u1ea5t c\u1ea9n th\u1eadn khi s\u1eed d\u1ee5ng ch\u00fang. Trong khi r\u1ea5t nhi\u1ec1u l\u1eadp tr\u00ecnh vi\u00ean hi\u1ec7n nay c\u00f3 th\u1ec3 kh\u00f4ng quan t\u00e2m \u0111\u1ebfn k\u1ef9 n\u0103ng n\u00e0y. H\u1ecd t\u00ecm \u0111\u1ebfn c\u00e1c ng\u00f4n ng\u1eef qu\u1ea3n l\u00fd hi\u1ec7n \u0111\u1ea1i. Nh\u1eefng ng\u00f4n ng\u1eef n\u00e0y s\u1eed d\u1ee5ng con tr\u1ecf ng\u1ea7m. D\u00f9 th\u1ebf n\u00e0o, ch\u00fang ta c\u0169ng n\u00ean n\u1eafm \u0111\u01b0\u1ee3c r\u1eb1ng con tr\u1ecf ch\u1ec9 tr\u1ecf t\u1edbi m\u1ed9t \u0111i\u1ec3m \u0111\u00e2u \u0111\u00f3 trong b\u1ed9 nh\u1edb ch\u1ee9 kh\u00f4ng th\u1ef1c s\u1ef1 l\u01b0u tr\u1eef d\u1eef li\u1ec7u. M\u1ed9t v\u00ed d\u1ee5 \u00edt tr\u1eebu t\u01b0\u1ee3ng h\u01a1n v\u1ec1 con tr\u1ecf l\u00e0 so s\u00e1nh v\u1edbi c\u00e1ch con ng\u01b0\u1eddi ghi nh\u1edb ho\u1eb7c kh\u00f4ng th\u1ec3 ghi nh\u1edb m\u1ed9t \u0111i\u1ec1u n\u00e0o \u0111\u00f3. R\u1ea5t nhi\u1ec1u k\u1ef9 s\u01b0, l\u1eadp tr\u00ecnh vi\u00ean gi\u1ecfi kh\u00f4ng bi\u1ebft c\u00e1c c\u00f4ng c\u1ee5 hay c\u00f4ng th\u1ee9c m\u1ed9t c\u00e1ch c\u1ee5 th\u1ec3 nh\u01b0ng khi \u0111\u01b0\u1ee3c h\u1ecfi h\u1ecd v\u1eabn c\u00f3 th\u1ec3 ch\u1ec9 cho b\u1ea1n ch\u00ednh x\u00e1c c\u00e1c ngu\u1ed3n t\u00e0i li\u1ec7u \u0111\u1ec3 tham kh\u1ea3o.</p>"},{"location":"algo/data-structures/overview-data-structures/#mang-arrays","title":"M\u1ea3ng (Arrays)","text":"<p>M\u1ea3ng l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u1ef1c k\u1ef3 \u0111\u01a1n gi\u1ea3n v\u00e0 c\u00f3 th\u1ec3 xem nh\u01b0 m\u1ed9t danh s\u00e1ch v\u1edbi chi\u1ec1u d\u00e0i c\u1ed1 \u0111\u1ecbnh. M\u1ea3ng l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u201c\u0111\u1eb9p\u201d b\u1edfi t\u00ednh \u0111\u01a1n gi\u1ea3n c\u1ee7a n\u00f3. M\u1ea3ng \u0111\u1eb7c bi\u1ec7t th\u00edch h\u1ee3p cho c\u00e1c t\u00ecnh hu\u1ed1ng m\u00e0 ta bi\u1ebft tr\u01b0\u1edbc \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed ho\u1eb7c c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c theo ch\u01b0\u01a1ng tr\u00ecnh. Gi\u1ea3 s\u1eed b\u1ea1n c\u1ea7n m\u1ed9t \u0111o\u1ea1n m\u00e3 \u0111\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb trung b\u00ecnh c\u1ee7a m\u1ed9t v\u00e0i con s\u1ed1. M\u1ea3ng l\u00e0 s\u1ef1 l\u1ef1a ch\u1ecdn tuy\u1ec7t v\u1eddi \u0111\u1ec3 gi\u1eef c\u00e1c gi\u00e1 tr\u1ecb m\u1ed9t c\u00e1ch ri\u00eang r\u1ebd b\u1edfi y\u00eau c\u1ea7u b\u00e0i to\u00e1n kh\u00f4ng \u0111\u00f2i h\u1ecfi m\u1ed9t th\u1ee9 t\u1ef1 l\u01b0u tr\u1eef c\u1ee5 th\u1ec3 v\u00e0 c\u00e1c ph\u00e9p t\u00ednh to\u00e1n c\u0169ng kh\u00f4ng \u0111\u00f2i h\u1ecfi g\u00ec kh\u00e1c ngo\u00e0i vi\u1ec7c duy\u1ec7t qua to\u00e0n b\u1ed9 c\u00e1c ph\u1ea7n t\u1eed. M\u1ed9t trong nh\u1eefng s\u1ee9c m\u1ea1nh kh\u00e1c c\u1ee7a m\u1ea3ng ch\u00ednh l\u00e0 ta c\u00f3 th\u1ec3 truy c\u1eadp c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean b\u1eb1ng ch\u1ec9 s\u1ed1. V\u00ed d\u1ee5 nh\u01b0, b\u1ea1n c\u00f3 m\u1ed9t danh s\u00e1ch g\u1ed3m t\u00ean c\u1ee7a c\u00e1c h\u1ecdc sinh trong l\u1edbp h\u1ecdc. M\u1ed7i h\u1ecdc sinh \u0111\u00e1nh s\u1ed1 t\u1eeb 1 \u0111\u1ebfn n khi \u0111\u00f3 \u0111\u1ec3 \u0111\u1ecdc ho\u1eb7c l\u01b0u t\u00ean h\u1ecdc sinh th\u1ee9 i b\u1ea1n ch\u1ec9 c\u1ea7n g\u1ecdi t\u1edbi studentName[i]. M\u1ea3ng c\u00f3 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ed1 \u0111\u1ecbnh, m\u1ed7i ph\u1ea7n t\u1eed gi\u1eef c\u1ee7a m\u1ea3ng m\u1ed9t th\u00f4ng tin v\u00e0 \u1edf m\u1ed9t v\u1ecb tr\u00ed kh\u00f4ng \u0111\u1ed5i \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc \u0111\u00f3.</p>"},{"location":"algo/data-structures/overview-data-structures/#danh-sach-lien-ket-linked-lists","title":"Danh s\u00e1ch li\u00ean k\u1ebft (Linked Lists)","text":"<p>Danh s\u00e1ch li\u00ean k\u1ebft l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00f3 th\u1ec3 gi\u1eef m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed t\u00f9y \u00fd v\u00e0 d\u1ec5 d\u00e0ng thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc, c\u0169ng nh\u01b0 d\u1ec5 d\u00e0ng b\u1ecf \u0111i c\u00e1c ph\u1ea7n t\u1eed b\u00ean trong n\u00f3. Danh s\u00e1ch li\u00ean k\u1ebft, hi\u1ec3u theo c\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf t\u1edbi m\u1ed9t n\u00fat d\u1eef li\u1ec7u. M\u1ed7i n\u00fat d\u1eef li\u1ec7u bao g\u1ed3m d\u1eef li\u1ec7u c\u1ea7n ch\u1ee9a v\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf t\u1edbi n\u00fat ti\u1ebfp theo. T\u1ea1i \u0111i\u1ec3m cu\u1ed1i c\u00f9ng, con tr\u1ecf tr\u1ecf t\u1edbi gi\u00e1 tr\u1ecb NULL.</p> <p>V\u1edbi thi\u1ebft k\u1ebf nh\u01b0 ban \u0111\u1ea7u, m\u1ed9t danh s\u00e1ch li\u00ean k\u1ebft th\u00edch h\u1ee3p \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u khi ch\u01b0a bi\u1ebft tr\u01b0\u1edbc \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng c\u00e1c ph\u1ea7n t\u1eed ho\u1eb7c c\u00e1c ph\u1ea7n t\u1eed th\u01b0\u1eddng xuy\u00ean thay \u0111\u1ed5i. Tuy v\u1eady, ch\u00fang ta kh\u00f4ng th\u1ec3 truy c\u1eadp m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a danh s\u00e1ch li\u00ean k\u1ebft. \u0110\u1ec3 t\u00ecm ki\u1ebfm m\u1ed9t gi\u00e1 tr\u1ecb, ta ph\u1ea3i b\u1eaft \u0111\u1ea7u t\u1ea1i ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean v\u00e0 duy\u1ec7t tu\u1ea7n t\u1ef1 qua c\u00e1c ph\u1ea7n t\u1eed cho t\u1edbi khi b\u1eaft g\u1eb7p \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb m\u00e0 m\u00ecnh c\u1ea7n t\u00ecm ki\u1ebfm. \u0110\u1ec3 ch\u00e8n m\u1ed9t n\u00fat v\u00e0o danh s\u00e1ch li\u00ean k\u1ebft, b\u1ea1n c\u0169ng ph\u1ea3i th\u1ef1c hi\u1ec7n t\u01b0\u01a1ng t\u1ef1c. D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y, thao t\u00e1c t\u00ecm ki\u1ebfm v\u00e0 ch\u00e8n trong danh s\u00e1ch li\u00ean k\u1ebft kh\u00f4ng th\u1eadt s\u1ef1 hi\u1ec7u qu\u1ea3.</p> <p>M\u1ed9t danh s\u00e1ch li\u00ean k\u1ebft \u0111\u1ea7y \u0111\u1ee7 th\u00f4ng th\u01b0\u1eddng s\u1ebd c\u00f3 \u0111\u1ecbnh ngh\u0129a nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y</p> <pre><code>struct ListNode {\n    int data; // d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u \u1edf n\u00fat c\u1ee7a linked list\n    ListNode* nextNode; // con tr\u1ecf tr\u1ecf t\u1edbi ph\u1ea7n t\u1eed ti\u1ebfp theo c\u1ee7a linked list.\n};\nListNode* firstNode;\n</code></pre> <p>B\u1ea1n c\u00f3 th\u1ec3 ch\u00e8n m\u1ed9t n\u00fat m\u1edbi v\u00e0o b\u1eb1ng c\u00e1ch ch\u00e8n ch\u00fang v\u00e0o \u0111\u1ea7u danh s\u00e1ch.</p> <pre><code>ListNode* newNode = new ListNode();\nnewNode-&gt;nextNode = firstNode;\nfirstNode = newNode;\n</code></pre> <p>Duy\u1ec7t qua to\u00e0n b\u1ed9 danh s\u00e1ch li\u00ean k\u1ebft r\u1ea5t \u0111\u01a1n gi\u1ea3n nh\u01b0 sau:</p> <pre><code>ListNode* curNode = firstNode;\nwhile (curNode != NULL) {\n   cout &lt;&lt; curNode-&gt;data &lt;&lt; endl;\n   curNode = curNode-&gt;nextNode;\n}\n</code></pre> <p>M\u1ed9t c\u1ea5u tr\u00fac li\u00ean quan kh\u00e1c ch\u00ednh l\u00e0 danh s\u00e1ch li\u00ean k\u1ebft \u0111\u00f4i. \u0110i\u1ec3m kh\u00e1c bi\u1ec7t so v\u1edbi danh s\u00e1ch li\u00ean k\u1ebft th\u00f4ng th\u01b0\u1eddng \u0111\u00f3 l\u00e0 n\u00fat g\u1ed1c l\u01b0u tr\u1eef con tr\u1ecf tr\u1ecf t\u1edbi c\u1ea3 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean v\u00e0 cu\u1ed1i c\u00f9ng. M\u1ed7i n\u00fat c\u00f3 m\u1ed9t li\u00ean k\u1ebft \u0111\u1ebfn n\u00fat li\u1ec1n tr\u01b0\u1edbc v\u00e0 sau n\u00f3. C\u1ea5u tr\u00fac nh\u01b0 v\u1eady gi\u00fap ta c\u00f3 th\u1ec3 duy\u1ec7t qua c\u00e1c ph\u1ea7n t\u1eed theo c\u1ea3 hai h\u01b0\u1edbng. Tuy v\u1eady, danh s\u00e1ch li\u00ean k\u1ebft k\u00e9p v\u1eabn c\u00f3 m\u1ed9t s\u1ed1 h\u1ea1n ch\u1ebf nh\u1ea5t \u0111\u1ecbnh.</p>"},{"location":"algo/data-structures/overview-data-structures/#hang-oi-queues","title":"H\u00e0ng \u0111\u1ee3i (Queues)","text":"<p>H\u00e0ng \u0111\u1ee3i l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u di\u1ec5n t\u1ea3 t\u1ed1t nh\u1ea5t cho c\u00e2u \u201cv\u00e0o tr\u01b0\u1edbc, ra tr\u01b0\u1edbc\u201d. M\u1ed9t v\u00ed d\u1ee5 th\u1ef1c t\u1ebf c\u1ee7a h\u00e0ng \u0111\u1ee3i l\u00e0 \u0111o\u00e0n ng\u01b0\u1eddi x\u1ebfp h\u00e0ng \u1edf ng\u00e2n h\u00e0ng. M\u1ed7i ng\u01b0\u1eddi khi x\u1ebfp h\u00e0ng s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o h\u00e0ng \u0111\u1ee3i \u1edf v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng. Sau khi ng\u01b0\u1eddi \u1edf \u0111\u1ea7u h\u00e0ng ho\u00e0n th\u00e0nh th\u1ee7 t\u1ee5c v\u00e0 r\u1eddi \u0111i, nh\u1eefng ng\u01b0\u1eddi \u0111ang x\u1ebfp \u1edf sau s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u1ec1 \u0111\u1ea7u h\u00e0ng. M\u1ed9t trong nh\u1eefng gi\u1ea3i thu\u1eadt ph\u1ed5 bi\u1ebfn nh\u1ea5t th\u01b0\u1eddng s\u1eed d\u1ee5ng h\u00e0ng \u0111\u1ee3i \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i t\u1eadp \u1edf topcoder ch\u00ednh l\u00e0 t\u00ecm ki\u1ebfm theo chi\u1ec1u r\u1ed9ng (BFS). BFS duy\u1ec7t t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 t\u1edbi \u0111\u01b0\u1ee3c sau m\u1ed9t b\u01b0\u1edbc. Sau \u0111\u00f3 l\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c sau hai b\u01b0\u1edbc,\u2026H\u00e0ng \u0111\u1ee3i h\u1ed7 tr\u1ee3 \u0111\u1ec3 th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y b\u1edfi ch\u00fang l\u01b0u tr\u1eef m\u1ed9t danh s\u00e1ch t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m.</p> <p>M\u1ed9t b\u00e0i to\u00e1n ph\u1ed5 bi\u1ebfn c\u1ee7a d\u1ea1ng b\u00e0i t\u1eadp n\u00e0y ch\u00ednh l\u00e0 t\u00ecm \u0111\u01b0\u1eddng \u0111i qua m\u00ea cung. T\u1ea1i \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u, duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c trong m\u1ed9t b\u01b0\u1edbc duy nh\u1ea5t v\u00e0 th\u00eam ch\u00fang v\u00e0o h\u00e0ng \u0111\u1ee3i. Sau \u0111\u00f3 l\u1ea5y ra m\u1ed9t v\u1ecb tr\u00ed, t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb v\u1ecb tr\u00ed n\u00e0y v\u00e0 l\u1ea1i th\u00eam ch\u00fang v\u00e0o h\u00e0ng \u0111\u1ee3i. Ti\u1ebfp t\u1ee5c qu\u00e1 tr\u00ecnh n\u00e0y cho t\u1edbi khi m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y ho\u1eb7c h\u00e0ng \u0111\u1ee3i r\u1ed7ng (kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i qua m\u00ea cung). Khi y\u00eau c\u1ea7u t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111i v\u1edbi s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t, BFS k\u1ebft h\u1ee3p v\u1edbi h\u00e0ng \u0111\u1ee3i l\u00e0 gi\u1ea3i ph\u00e1p c\u1ef1c k\u1ef3 hi\u1ec7u qu\u1ea3.</p> <p>H\u1ea7u h\u1ebft c\u00e1c th\u01b0 vi\u1ec7n chu\u1ea9n, nh\u01b0 JAVA v\u00e0 .NET framework \u0111\u1ec1u cung c\u1ea5p l\u1edbp h\u00e0ng \u0111\u1ee3i v\u00e0 c\u00e1c thao t\u00e1c \u0111\u01a1n gi\u1ea3n nh\u01b0 th\u00eam, l\u1ea5y m\u1ed9t ph\u1ea7n t\u1eed ra kh\u1ecfi h\u00e0ng \u0111\u1ee3i. C\u00e1c b\u00e0i t\u1eadp d\u1ea1ng BFS xu\u1ea5t hi\u1ec7n th\u01b0\u1eddng xuy\u00ean trong c\u00e1c cu\u1ed9c thi. Trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p, x\u00e1c \u0111\u1ecbnh th\u00e0nh c\u00f4ng h\u01b0\u1edbng gi\u1ea3i b\u1eb1ng BFS c\u00f3 th\u1ec3 r\u1ea5t \u0111\u01a1n gi\u1ea3n v\u00e0 nhanh ch\u00f3ng. Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p kh\u00e1c th\u00ec kh\u00f4ng.</p> <p>Duy\u1ec7t m\u1ed9t h\u00e0ng \u0111\u1ee3i kh\u00e1 \u0111\u01a1n gi\u1ea3n. V\u00ed d\u1ee5 nh\u01b0, n\u1ebfu b\u1ea1n bi\u1ebft m\u00ecnh \u0111ang c\u1ed1 g\u1eafng \u0111i t\u1eeb \u0111i\u1ec3m A \u0111\u1ebfn \u0111i\u1ec3m B tr\u00ean m\u1ed9t l\u01b0\u1edbi \u00f4 vu\u00f4ng 50*50 (h\u01b0\u1edbng \u0111i, c\u00e1c chi ti\u1ebft kh\u00e1c \u0111\u1ec1u kh\u00f4ng li\u00ean quan) khi \u0111\u00f3, s\u1ebd c\u00f3 h\u01a1n 2500 tr\u1ea1ng th\u00e1i \u0111\u1ec3 th\u0103m. Ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n s\u1ebd nh\u01b0 sau:</p> <pre><code>class StateNode {\n   int xPos;\n   int yPos;\n   int moveCount;\n}\n\nclass MyQueue {\n   StateNode[] queueData = new StateNode[2500];\n   int queueFront = 0;\n   int queueBack = 0;\n\n   void Enqueue(StateNode node) {\n      queueData[queueBack] = node;\n      queueBack++;\n   }\n\n   StateNode Dequeue() {\n      StateNode returnValue = null;\n      if (queueBack &gt; queueFront) {\n      returnValue = queueData[queueFront];\n      QueueFront++;\n   }\n   return returnValue;\n   }\n\n   boolean isNotEmpty() {\n      return (queueBack &gt; queueFront);\n   }\n}\n</code></pre> <p>Khi \u0111\u00f3 \u0111o\u1ea1n code ch\u00ednh c\u1ee7a b\u1ea1n s\u1ebd nh\u01b0 b\u00ean d\u01b0\u1edbi. (N\u1ebfu h\u00e0ng \u0111\u1ee3i c\u1ee7a ch\u00fang ta kh\u00f4ng \u0111\u1ebfn \u0111\u01b0\u1ee3c th\u00eam m\u1ed9t tr\u1ea1ng th\u00e1i n\u00e0o n\u1eefa v\u00e0 ch\u00fang ta v\u1eabn ch\u01b0a \u0111\u1ebfn \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed \u0111\u00edch khi \u0111\u00f3 kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i t\u1eeb A \u0111\u1ebfn B. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ch\u00fang ta tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb -1).</p> <pre><code>MyQueue queue = new MyQueue();\nqueue.Enqueue(initialState);\nwhile (queue.isNotEmpty()) {\n   StateNode curState = queue.Dequeue();\n   if (curState == destState)\nreturn curState.moveCount;\n   for (int dir = 0; dir &lt; 3; dir++) {\n      if (CanMove(curState, dir))\n         queue.Enqueue(MoveState(curState, dir));\n   }\n}\n</code></pre>"},{"location":"algo/data-structures/overview-data-structures/#ngan-xep-stack","title":"Ng\u0103n x\u1ebfp (Stack)","text":"<p>Ng\u0103n x\u1ebfp c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t \u0111\u1ecbnh ngh\u0129a \u0111\u1ed1i ngh\u1ecbch v\u1edbi h\u00e0ng \u0111\u1ee3i. \u0110\u1ed1i v\u1edbi ng\u0103n x\u1ebfp, \u201cv\u00e0o tr\u01b0\u1edbc, ra tr\u01b0\u1edbc\u201d. M\u1ed9t v\u00ed d\u1ee5 th\u1ef1c t\u1ebf \u0111\u1ed1i v\u1edbi ng\u0103n x\u1ebfp l\u00e0 ch\u1ed3ng \u0111\u0129a. Ng\u01b0\u1eddi r\u1eeda d\u1ecdn s\u1ebd lu\u00f4n ch\u1ecdn \u0111\u0129a tr\u00ean c\u00f9ng  \u2013 \u0111\u00e2y ch\u00ednh l\u00e0 \u0111\u0129a \u0111\u01b0\u1ee3c th\u00eam v\u00e0o sau c\u00f9ng, sau \u0111\u00f3 \u0111\u1ebfn \u0111\u0129a ti\u1ebfp theo.</p> <p>Tr\u00f4ng c\u00f3 v\u1ebb nh\u01b0 ng\u0103n x\u1ebfp hi\u1ebfm khi \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng. Tuy v\u1eady, hi\u1ec3u bi\u1ebft v\u1ec1 ng\u0103n x\u1ebfp v\u00e0 c\u00e1ch th\u1ee9c ch\u00fang \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ng\u1ea7m hi\u1ec7n nay l\u00e0 v\u00f4 c\u00f9ng quan tr\u1ecdng. Nh\u1eefng ai \u0111\u00e3 l\u1eadp tr\u00ecnh \u0111\u01b0\u1ee3c m\u1ed9t th\u1eddi gian s\u1ebd r\u1ea5t quen v\u1edbi vi\u1ec7c ng\u0103n x\u1ebfp \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng m\u1ed7i khi m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh con \u0111\u01b0\u1ee3c g\u1ecdi l\u00ean t\u1eeb b\u00ean trong m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh. T\u1ea5t c\u1ea3 c\u00e1c tham bi\u1ebfn, bi\u1ebfn \u0111\u1ecba ph\u01b0\u01a1ng \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111\u1eb7t tr\u00ean ng\u0103n x\u1ebfp. Khi qu\u00e1 tr\u00ecnh k\u1ebft th\u00fac, c\u00e1c bi\u1ebfn n\u00e0y \u0111\u01b0\u1ee3c gi\u1ea3i ph\u00f3ng, \u0111\u1ecba ch\u1ec9 \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 v\u00e0 l\u1ea5y ra kh\u1ecfi ng\u0103n x\u1ebfp. Nh\u01b0 v\u1eady, ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 th\u1ec3 ti\u1ebfp t\u1ee5c th\u1ef1c thi ti\u1ebfp t\u1ee5c \u1edf \u0111\u00fang n\u01a1i m\u00e0 n\u00f3 \u0111ang d\u1eebng \u0111\u1ec3 g\u1ecdi ch\u01b0\u01a1ng tr\u00ecnh con.</p> <p>M\u1ed9t trong nh\u1eefng hi\u1ec3u bi\u1ebft quan tr\u1ecdng h\u01a1n v\u1edbi k\u1ef9 thu\u1eadt n\u00e0y l\u00e0 m\u1ed9t h\u00e0m g\u1ecdi m\u1ed9t h\u00e0m kh\u00e1c. V\u00e0 h\u00e0m n\u00e0y l\u1ea1i ti\u1ebfp t\u1ee5c g\u1ecdi m\u1ed9t h\u00e0m kh\u00e1c n\u1eefa. V\u1edbi m\u1ed7i l\u1ea7n g\u1ecdi h\u00e0m, m\u1ee9c \u0111\u1ed9 l\u1ed3ng c\u1ee7a c\u00e1c th\u1ef1c thi c\u00e0ng l\u00fac c\u00e0ng t\u0103ng. \u0110i\u1ec1u n\u00e0y l\u00e0m k\u00edch th\u01b0\u1edbc c\u1ee7a ng\u0103n x\u1ebfp c\u00e0ng ng\u00e0y c\u00e0ng l\u1edbn. M\u1ed9t v\u00ed d\u1ee5 quan tr\u1ecdng nh\u1ea5t ch\u00ednh l\u00e0 \u0111\u1ec7 quy. Khi m\u1ed9t h\u00e0m \u0111\u1ec7 quy li\u00ean t\u1ee5c g\u1ecdi ch\u00ednh n\u00f3, k\u00edch th\u01b0\u1edbc ng\u0103n x\u1ebfp t\u0103ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i l\u1ea7n g\u1ecdi \u0111\u1ec7 quy. H\u1ea7u nh\u01b0 t\u1ea5t c\u1ea3 c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean d\u00e0y d\u1eb7n \u0111\u1ec1u \u0111\u00e3 t\u1eebng m\u1eafc l\u1ed7i vi\u1ebft h\u00e0m \u0111\u1ec7 quy m\u00e0 kh\u00f4ng g\u1ecdi gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1. Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, h\u00e0m \u0111\u1ec7 quy t\u1ef1 g\u1ecdi ch\u00ednh m\u00ecnh cho \u0111\u1ebfn khi ng\u0103n x\u1ebfp tr\u00e0n v\u00e0 b\u1ecb l\u1ed7i.</p> <p>Ng\u0103n x\u1ebfp khi kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng th\u00ec \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3 v\u1eabn c\u1ef1c k\u1ef3 l\u1edbn. Ng\u0103n x\u1ebfp ch\u00ednh l\u00e0 tr\u00e1i tim c\u1ee7a thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (DFS). \u0110i\u1ec3n h\u00ecnh c\u1ee7a duy\u1ec7t c\u00e2y c\u1ee7a t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (v\u00ed d\u1ee5 nh\u01b0: t\u00ecm ki\u1ebfm m\u1ed9t n\u00fat c\u1ee5 th\u1ec3 trong t\u00e0i li\u1ec7u XML). Ng\u0103n x\u1ebfp trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u00f3 tr\u00e1ch nhi\u1ec7m duy tr\u00ec c\u00e1c con \u0111\u01b0\u1eddng \u0111\u00e3 \u0111i \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 th\u1ec3 quay l\u1ea1i khi c\u1ea7n (v\u00ed d\u1ee5 nh\u01b0: tr\u1edf v\u1ec1 t\u1eeb m\u1ed9t h\u00e0m \u0111\u1ec7 quy sau khi kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c n\u00fat mong mu\u1ed1n) v\u00e0 ti\u1ebfp t\u1ee5c t\u00ecm ki\u1ebfm c\u00e1c n\u00fat l\u00e2n c\u1eadn ti\u1ebfp theo.</p> <p>Soma (SRM 198) l\u00e0 m\u1ed9t v\u00ed d\u1ee5 tuy\u1ec7t v\u1eddi \u0111\u1ec3 ti\u1ebfp c\u1eadn h\u01b0\u1edbng gi\u1ea3i n\u00e0y.</p>"},{"location":"algo/data-structures/overview-data-structures/#cay-trees","title":"C\u00e2y (Trees)","text":"<p>C\u00e2y l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u bao g\u1ed3m m\u1ed9t ho\u1eb7c nhi\u1ec1u n\u00fat d\u1eef li\u1ec7u. N\u00fat \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 g\u1ed1c, m\u1ed7i n\u00fat kh\u00f4ng c\u00f3 n\u00fat con n\u00e0o ho\u1eb7c nhi\u1ec1u n\u00fat con. S\u1ed1 l\u01b0\u1ee3ng con t\u1ed1i \u0111a c\u1ee7a m\u1ed9t n\u00fat v\u00e0 \u0111\u1ed9 s\u00e2u t\u1ed1i \u0111a th\u01b0\u1eddng \u0111\u01b0\u1ee3c gi\u1edbi h\u1ea1n t\u00f9y theo t\u1eebng c\u00e2y.</p> <p>M\u1ed9t trong nh\u1eefng v\u00ed d\u1ee5 d\u1ec5 th\u1ea5y nh\u1ea5t c\u1ee7a c\u00e2y l\u00e0 c\u00e1c t\u00e0i li\u1ec7u XML. Tr\u00ean c\u00f9ng c\u1ee7a t\u00e0i li\u1ec7u XML l\u00e0 ph\u1ea7n t\u1eed g\u1ed1c. M\u1ed7i tag c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t n\u00fat con. Trong c\u00e1c tag n\u00e0y c\u00f3 th\u1ec3 c\u00f3 c\u00e1c n\u00fat con n\u1eefa,\u2026 Trong m\u1ed9t c\u00e2y, h\u1ec7 th\u1ed1ng ph\u00e2n c\u1ea5p v\u00e0 th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c n\u00fat c\u0169ng \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh \u2013 m\u1ed9t ph\u1ea7n quan tr\u1ecdng, kh\u00f4ng th\u1ec3 thi\u1ebfu c\u1ee7a c\u00e2y. M\u1ed9t trong nh\u1eefng v\u00ed d\u1ee5 r\u00f5 h\u01a1n c\u1ee7a c\u00e2y l\u00e0 v\u0103n b\u1ea3n. To\u00e0n b\u1ed9 v\u0103n b\u1ea3n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t n\u00fat g\u1ed1c. M\u1ed7i v\u0103n b\u1ea3n nh\u01b0 v\u1eady c\u00f3 th\u1ec3 g\u1ed3m c\u00e1c lu\u1eadn \u0111i\u1ec3m. M\u1ed7i lu\u1eadn \u0111i\u1ec3m l\u1ea1i c\u00f3 c\u00e1c lu\u1eadn c\u1ee9,.. C\u00e1c file \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u00ean \u0111\u0129a c\u0169ng tu\u00e2n theo c\u1ea5u tr\u00fac c\u00e2y.</p> <p>C\u1ea5u tr\u00fac t\u1ed5 ch\u1ee9c c\u1ee7a m\u1ed9t doanh nghi\u1ec7p c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t c\u00e2y. Trong m\u1ed9t h\u1ec7 th\u1ed1ng ph\u00e2n c\u1ea5p qu\u1ea3n l\u00fd c\u1ed5 \u0111i\u1ec3n, m\u1ed9t ch\u1ee7 t\u1ecbch c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t ho\u1eb7c nhi\u1ec1u ph\u00f3 ch\u1ee7 t\u1ecbch. M\u1ed7i ph\u00f3 ch\u1ee7 t\u1ecbch c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t ho\u1eb7c nhi\u1ec1u qu\u1ea3n l\u00fd. M\u1ed7i qu\u1ea3n l\u00fd l\u1ea1i c\u00f3 m\u1ed9t v\u00e0i nh\u00e2n vi\u00ean d\u01b0\u1edbi quy\u1ec1n.</p> <p>PermissionTree (SRM 218) l\u00e0 m\u1ed9t b\u00e0i t\u1eadp hi\u1ebfm th\u1ea5y v\u1ec1 c\u00e1ch t\u1ed5 ch\u1ee9c file.</p> <p>bloggoDocStructure (SRM 214) l\u00e0 m\u1ed9t v\u00ed d\u1ee5 t\u1ed1t v\u1ec1 c\u00e1ch s\u1eed d\u1ee5ng c\u00e2y.</p>"},{"location":"algo/data-structures/overview-data-structures/#cay-nhi-phan-binary-trees","title":"C\u00e2y nh\u1ecb ph\u00e2n (Binary Trees)","text":"<p>C\u00e2y nh\u1ecb ph\u00e2n l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac c\u00e2y \u0111\u1eb7c bi\u1ec7t. \u0110\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1ch hi\u1ec7u qu\u1ea3 nh\u1ea5t \u0111\u1ec3 l\u01b0u tr\u1eef v\u00e0 \u0111\u1ecdc m\u1ed9t t\u1eadp c\u00e1c b\u1ea3ng ghi c\u00f3 th\u1ec3 \u0111\u00e1nh s\u1ed1 b\u1edfi kh\u00f3a.\u00dd t\u01b0\u1edfng \u0111\u1eb1ng sau c\u00e2y nh\u1ecb ph\u00e2n l\u00e0 m\u1ed7i n\u00fat c\u00f3 t\u1ed1i \u0111a hai n\u00fat con.</p> <p>Trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p, gi\u00e1 tr\u1ecb \u1edf n\u00fat b\u00ean tr\u00e1i nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb n\u00fat cha v\u00e0 gi\u00e1 tr\u1ecb n\u00fat b\u00ean ph\u1ea3i l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat cha. D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong c\u00e2y nh\u1ecb ph\u00e2n lu\u00f4n \u0111\u01b0\u1ee3c \u0111\u00e1nh ch\u1ec9 s\u1ed1 b\u1edfi m\u1ed9t gi\u00e1 tr\u1ecb kh\u00f3a. Nh\u1edd v\u1eady khi duy\u1ec7t c\u00e2y nh\u1ecb ph\u00e2n, b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ph\u00e1t hi\u1ec7n ra n\u00fat con n\u00e0o c\u1ea7n \u0111i v\u1edbi m\u1ed9t gi\u00e1 tr\u1ecb kh\u00f3a cho tr\u01b0\u1edbc.</p> <p>M\u1ed9t trong nh\u1eefng l\u00fd do khi\u1ebfn c\u00e2y nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c y\u00eau th\u00edch h\u01a1n m\u1ea3ng \u0111\u00f3 l\u00e0 c\u00e1c gi\u00e1 tr\u1ecb \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp. \u0110\u1ed9 ph\u1ee9c t\u1ea1p \u0111\u1ec3 t\u00ecm ki\u1ebfm m\u1ed9t gi\u00e1 tr\u1ecb cho tr\u01b0\u1edbc trong c\u00e2y nh\u1ecb ph\u00e2n l\u00e0 log(N). Th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o c\u00e2y nh\u1ecb ph\u00e2n c\u0169ng m\u1ea5t m\u1ed9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u01b0\u01a1ng t\u1ef1. Thao t\u00e1c n\u00e0y kh\u00e1 \u0111\u01a1n gi\u1ea3n. Trong khi \u0111\u00f3 \u0111\u1ec3 th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o m\u1ea3ng \u0111\u00f2i h\u1ecfi b\u1ea1n ph\u1ea3i m\u1ea5t th\u1eddi gian \u0111\u1ec3 t\u1ed5 ch\u1ee9c l\u1ea1i c\u1ea5u tr\u00fac c\u1ee7a m\u1ea3ng nh\u1eb1m duy tr\u00ec tr\u1eadt t\u1ef1 ban \u0111\u1ea7u.</p> <p>N\u1ebfu b\u1ea1n \u0111\u00e3 t\u1eebng s\u1eed d\u1ee5ng s\u00e1ch h\u01b0\u1edbng d\u1eabn th\u1ef1c v\u1eadt \u0111\u1ec3 t\u00ecm ki\u1ebfm m\u1ed9t chi\u1ebfc l\u00e1 n\u00e0o \u0111\u00f3, b\u1ea1n s\u1ebd hi\u1ec3u \u0111\u01b0\u1ee3c c\u00e1ch th\u1ee9c duy\u1ec7t c\u00e2y nh\u1ecb ph\u00e2n. Khi m\u1edf trang \u0111\u1ea7u ti\u00ean, b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c h\u1ecfi \u201cchi\u1ebfc l\u00e0 nh\u00e1m hay m\u1ecbn?\u201d. V\u1edbi m\u1ed7i c\u00e2u tr\u1ea3 l\u1eddi b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c d\u1eabn t\u1edbi m\u1ed9t trang kh\u00e1c. T\u1ea1i trang n\u00e0y, b\u1ea1n s\u1ebd ti\u1ebfp t\u1ee5c nh\u1eadn \u0111\u01b0\u1ee3c c\u00e1c c\u00e2u h\u1ecfi v\u1edbi h\u00ecnh th\u1ee9c t\u01b0\u01a1ng t\u1ef1 \u0111\u1ec3 cu\u1ed1i c\u00f9ng d\u1eabn t\u1edbi k\u1ebft qu\u1ea3. Trong tr\u01b0\u1eddng h\u1ee3p duy\u1ec7t c\u00e2y nh\u1ecb ph\u00e2n, c\u00e2u h\u1ecfi m\u00e0 b\u1ea1n nh\u1eadn \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 \u201cgi\u00e1 tr\u1ecb n\u00e0y l\u1edbn h\u01a1n hay b\u00e9 h\u01a1n X?\u201d</p>"},{"location":"algo/data-structures/overview-data-structures/#hang-oi-uu-tien-priority-queues","title":"H\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean (Priority Queues)","text":"<p>Trong thu\u1eadt to\u00e1n BFS, h\u00e0ng \u0111\u1ee3i ho\u1ea1t \u0111\u1ed9ng hi\u1ec7u qu\u1ea3 khi ch\u00fang c\u00f3 kh\u1ea3 n\u0103ng l\u01b0u l\u1ea1i c\u00e1c tr\u1ea1ng th\u00e1i \u0111\u00e3 qua. N\u1ebfu \u0111\u1ec3 \u0111i t\u1eeb v\u1ecb tr\u00ed n\u00e0y \u0111\u1ebfn v\u1ecb tr\u00ed kh\u00e1c ch\u1ec9 v\u1edbi m\u1ed9t b\u01b0\u1edbc, ta ch\u1ec9 vi\u1ec7c s\u1eed d\u1ee5ng h\u00e0ng \u0111\u1ee3i k\u1ebft h\u1ee3p v\u1edbi BFS l\u00e0 c\u00f3 th\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c ph\u01b0\u01a1ng \u00e1n \u0111i t\u1ed1i \u01b0u nh\u1ea5t (n\u1ebfu c\u00f3 t\u1ed3n t\u1ea1i). V\u1eady n\u1ebfu \u0111\u1ec3 \u0111i t\u1eeb tr\u1ea1ng th\u00e1i n\u00e0y \u0111\u1ebfn tr\u1ea1ng th\u00e1i kh\u00e1c t\u1ed1n h\u01a1n m\u1ed9t b\u01b0\u1edbc th\u00ec sao?</p> <p>H\u00e3y xem x\u00e9t v\u00ed d\u1ee5 sau, khi b\u1ea1n l\u00e1i xe, b\u1ea1n lu\u00f4n mong mu\u1ed1n m\u00ecnh t\u1edbi \u0111i\u1ec3m \u0111\u1ebfn nhanh nh\u1ea5t c\u00f3 th\u1ec3. Trong c\u00e1c b\u00e0i to\u00e1n th\u00f4ng th\u01b0\u1eddng, m\u1ed7i b\u01b0\u1edbc \u0111i l\u00ean, xu\u1ed1ng, tr\u00e1i, ph\u1ea3i, b\u1ea1n \u0111\u1ec1u m\u1ea5t th\u1eddi gian l\u00e0 m\u1ed9t b\u01b0\u1edbc. \u0110\u1ed1i v\u1edbi tr\u01b0\u1eddng h\u1ee3p n\u00e0y, BFS s\u1ebd gi\u1ea3i quy\u1ebft hi\u1ec7u qu\u1ea3. Nh\u01b0ng s\u1ebd ra sao n\u1ebfu l\u00e1i xe d\u1ecdc theo h\u01b0\u1edbng b\u1ea1n \u0111i s\u1ebd m\u1ea5t 2 ph\u00fat, trong khi sang tr\u00e1i, sang ph\u1ea3i l\u1ea1i m\u1ea5t t\u1edbi 3 ph\u00fat. V\u1edbi nh\u1eefng lo\u1ea1i b\u01b0\u1edbc \u0111i nh\u01b0 v\u1eady, \u0111\u1ec3 \u0111i \u0111\u1ebfn m\u1ed9t tr\u1ea1ng th\u00e1i m\u1edbi kh\u00f4ng c\u00f2n ch\u1ec9 t\u1ed1n m\u1ed9t b\u01b0\u1edbc \u0111i v\u1edbi chi ph\u00ed c\u1ed1 \u0111\u1ecbnh n\u1eefa, t\u00ednh ch\u1ea5t th\u1ee9 t\u1ef1 \u0111\u01a1n gi\u1ea3n ban \u0111\u1ea7u c\u1ee7a h\u00e0ng \u0111\u1ee3i c\u0169ng v\u00ec v\u1eady m\u00e0 kh\u00f4ng th\u1ec3 \u0111\u1ea3m b\u1ea3o n\u1eefa.</p> <p>\u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean xu\u1ea5t hi\u1ec7n. M\u1ed9t h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean nh\u1eadn v\u00e0o c\u00e1c ph\u1ea7n t\u1eeb v\u00e0 s\u1eafp x\u1ebfp ch\u00fang sao cho ph\u1ea7n t\u1eed c\u00f3 chi ph\u00ed nh\u1ecf nh\u1ea5t \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 \u0111\u1ea7u ti\u00ean.</p> <p>M\u1ed9t v\u00ed d\u1ee5 th\u1ef1c t\u1ebf c\u1ee7a h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean ch\u00ednh l\u00e0 vi\u1ec7c x\u1ebfp h\u00e0ng ch\u1edd \u0111\u1ee3i check in \u1edf s\u00e2n bay. \u0110a ph\u1ea7n m\u1ecdi ng\u01b0\u1eddi \u0111\u1ec1u x\u1ebfp h\u00e0ng v\u00e0 ch\u1edd \u0111\u1ebfn l\u01b0\u1ee3t g\u1ecdi t\u00ean m\u00ecnh. Tuy v\u1eady, nh\u1eefng kh\u00e1ch \u0111i \u1edf gh\u1ebf h\u1ea1ng sang s\u1ebd \u0111\u01b0\u1ee3c \u01b0u ti\u00ean g\u1ecdi t\u00ean tr\u01b0\u1edbc v\u00e0 ho\u00e0n th\u00e0nh th\u1ee7 t\u1ee5c check in nhanh ch\u00f3ng h\u01a1n.</p> <p>M\u1ed9t tri\u1ec3n khai r\u1ea5t \u0111\u01a1n gi\u1ea3n c\u1ee7a h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean l\u00e0 m\u1ea3ng t\u00ecm ki\u1ebfm l\u1ea7n l\u01b0\u1ee3t t\u1eebng ph\u1ea7n t\u1eed m\u1ed9t cho \u0111\u1ebfn khi t\u00ecm ra ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong n\u00f3, ph\u1ea7n t\u1eed m\u1edbi \u0111\u01b0\u1ee3c th\u00eam v\u00e0o cu\u1ed1i m\u1ea3ng. M\u1ed9t bi\u1ec3u di\u1ec5n nh\u01b0 v\u1eady s\u1ebd gi\u00fap thao t\u00e1c ch\u00e8n th\u00eam c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u1ecf h\u01a1n   nh\u01b0ng thao t\u00e1c l\u1ea5y ph\u1ea7n t\u1eed ra s\u1ebd m\u1ea5t r\u1ea5t nhi\u1ec1u th\u1eddi gian. M\u1ed9t lo\u1ea1i c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1eb7c bi\u1ec7t \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 heap th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t cho h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean. Trong heap, gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat g\u1ed1c lu\u00f4n \u00edt h\u01a1n ho\u1eb7c nhi\u1ec1u h\u01a1n (t\u00f9y thu\u1ed9c v\u00e0o \u0111\u1ecbnh ngh\u0129a \u0111\u1ed9 \u01b0u ti\u00ean c\u1ee7a b\u1ea1n) so v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c n\u00fat con c\u1ee7a n\u00f3. Th\u00eam v\u00e0o \u0111\u00f3, heap l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh. M\u1ed9t \u0111\u1ecbnh ngh\u0129a \u0111\u01a1n gi\u1ea3n c\u1ee7a c\u00e2y ho\u00e0n ch\u1ec9nh \u0111\u00f3 l\u00e0 c\u00e1c n\u00fat c\u1ee7a c\u00e2y c\u1ee7a m\u1ed9t nh\u00e1nh s\u1ebd kh\u00f4ng bao gi\u1edd \u0111\u1ea1t t\u1edbi \u0111\u1ed9 s\u00e2u n + 1 tr\u1eeb khi t\u1ea5t c\u1ea3 c\u00e1c nh\u00e1nh c\u1ee7a c\u00e2y \u0111\u00e3 \u0111\u1ea1t t\u1edbi \u0111\u1ed9 s\u00e2u n. N\u00fat tr\u00e1i ngo\u00e0i c\u00f9ng s\u1ebd lu\u00f4n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u01b0\u1edbc.</p> <p>\u0110\u1ec3 l\u1ea5y m\u1ed9t gi\u00e1 tr\u1ecb t\u1eeb heap, n\u00fat g\u1ed1c \u0111\u01b0\u1ee3c l\u1ea5y ra. N\u00fat ph\u1ea3i nh\u1ea5t v\u1edbi \u0111\u1ed9 s\u00e2u l\u1edbn nh\u1ea5t tr\u1edf th\u00e0nh n\u00fat g\u1ed1c. N\u1ebfu n\u00fat g\u1ed1c m\u1edbi l\u1edbn h\u01a1n \u00edt nh\u1ea5t m\u1ed9t n\u00fat con c\u1ee7a n\u00f3, khi \u0111\u00f3, n\u00fat g\u1ed1c s\u1ebd \u0111\u01b0\u1ee3c tr\u00e1o \u0111\u1ed5i v\u1edbi n\u00fat con nh\u1ecf h\u01a1n \u0111\u00f3, \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o l\u00e0 n\u00fat g\u1ed1c lu\u00f4n nh\u1ecf h\u01a1n c\u00e1c n\u00fat con c\u1ee7a n\u00f3. Thao t\u00e1c n\u00e0y ti\u1ebfp t\u1ee5c th\u1ef1c hi\u1ec7n khi v\u1eabn c\u00f2n c\u1ea7n thi\u1ebft. Th\u00eam gi\u00e1 tr\u1ecb v\u00e0o heap l\u00e0 m\u1ed9t qu\u00e1 tr\u00ecnh ng\u01b0\u1ee3c l\u1ea1i. Gi\u00e1 tr\u1ecb m\u1edbi \u0111\u01b0\u1ee3c th\u00eam v\u00e0o \u1edf n\u00fat l\u00e1 v\u00e0 ho\u00e1n \u0111\u1ed5i l\u00ean cho t\u1edbi khi th\u1ecfa t\u00ednh ch\u1ea5t c\u1ee7a heap. M\u1ed9t trong nh\u1eefng t\u00ednh ch\u1ea5t c\u1ef1c k\u1ef3 ti\u1ec7n l\u1ee3i c\u1ee7a c\u00e2y \u0111\u1ea7y \u0111\u1ee7 l\u00e0 ch\u00fang c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef nh\u01b0 m\u1ea3ng b\u00ecnh th\u01b0\u1eddng. Ph\u1ea7n t\u1eed 0 l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y, ph\u1ea7n t\u1eed 2k + 1 v\u00e0 2k + 2 l\u00e0 con c\u1ee7a ph\u1ea7n t\u1eed k. Nh\u1edd v\u1eady vi\u1ec7c th\u00eam m\u1ed9t n\u00fat v\u00e0o c\u00e2y s\u1ebd t\u01b0\u01a1ng t\u1ef1 v\u1edbi vi\u1ec7c th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o m\u1ea3ng.</p>"},{"location":"algo/data-structures/overview-data-structures/#bang-bam-hash-tables","title":"B\u1ea3ng b\u0103m (Hash Tables)","text":"<p>B\u1ea3ng b\u0103m l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 m\u1ed9t t\u1eeb \u0111i\u1ec3n. Trong \u0111\u00f3, m\u1ed7i kh\u00f3a mang theo m\u1ed9t gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng. Kh\u00f3a \u0111\u01b0\u1ee3c xem nh\u01b0 ch\u1ec9 s\u1ed1 c\u1ee7a gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng. B\u1ea3ng b\u0103m kh\u00f4ng nh\u01b0 c\u00e1c lo\u1ea1i t\u1eeb \u0111i\u1ec3n c\u1ed5 \u0111i\u1ec3n \u2013 m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c kh\u00f3a th\u00f4ng qua gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3.</p> <p>Kh\u00f4ng may, kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp v\u00e0o m\u1ed9t t\u1eeb \u0111i\u1ec3n \u0111\u01a1n gi\u1ea3n. \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac m\u00e0 qu\u00e1 tr\u00ecnh b\u0103m (hash) ra \u0111\u1eddi. Hash l\u00e0 qu\u00e1 tr\u00ecnh kh\u1edfi t\u1ea1o m\u1ed9t gi\u00e1 tr\u1ecb kh\u00f3a (th\u01b0\u1eddng l\u00e0 32 bit ho\u1eb7c 64 bit) t\u1eeb m\u1ed9t m\u1ea3nh d\u1eef li\u1ec7u. Gi\u00e1 tr\u1ecb hash n\u00e0y s\u1ebd gi\u00fap vi\u1ec7c s\u1eafp x\u1ebfp tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n. Gi\u00e1 tr\u1ecb hash c\u00f3 th\u1ec3 l\u00e0 n bit \u0111\u1ea7u ti\u00ean c\u1ee7a d\u1eef li\u1ec7u, n bit cu\u1ed1i c\u00f9ng, gi\u00e1 tr\u1ecb mod ho\u1eb7c l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t h\u00e0m ph\u1ee9c t\u1ea1p. S\u1eed d\u1ee5ng c\u00e1c gi\u00e1 tr\u1ecb hash, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t c\u00e1c hash buckets \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u. N\u1ebfu c\u00e1c gi\u00e1 tr\u1ecb hash \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 \u0111\u1ec1u, c\u00e1c buckets s\u1ebd \u0111\u01b0\u1ee3c \u0111i\u1ec1n v\u00e0o m\u1ed9t c\u00e1ch \u0111\u1ed3ng \u0111\u1ec1u. Trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p, c\u00e1c buckets kh\u00f4ng c\u00f3 ho\u1eb7c ch\u1ec9 c\u00f3 m\u1ed9t v\u00e0i \u0111\u1ed1i t\u01b0\u1ee3ng trong ch\u00fang. \u0110i\u1ec1u n\u00e0y l\u00e0m cho vi\u1ec7c t\u00ecm ki\u1ebfm c\u00f2n nhanh h\u01a1n n\u1eefa.</p> <p>Tr\u01b0\u1eddng h\u1ee3p m\u1ed9t hash bucket ch\u1ee9a nhi\u1ec1u h\u01a1n m\u1ed9t gi\u00e1 tr\u1ecb ta g\u1ecdi \u0111\u00f3 l\u00e0 va ch\u1ea1m. Vi\u1ec7c x\u1eed l\u00fd  va ch\u1ea1m r\u1ea5t quan tr\u1ecdng \u0111\u1ed1i v\u1edbi hi\u1ec7u n\u0103ng c\u1ee7a b\u1ea3ng b\u0103m. M\u1ed9t trong nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 c\u00e0i \u0111\u1eb7t c\u00e1c danh s\u00e1ch li\u00ean k\u1ebft \u1edf hash bucket. Khi \u0111\u00f3, m\u1ed7i ph\u1ea7n t\u1eed c\u00f9ng gi\u00e1 tr\u1ecb hash c\u00f3 th\u1ec3 k\u1ebft l\u1ea1i v\u1edbi nhau t\u1ea1i m\u1ed9t \u0111i\u1ec3m.M\u1ed9t s\u1ed1 c\u00e1ch l\u00e0m ph\u1ee9c t\u1ea1p h\u01a1n nh\u01b0: s\u1eed d\u1ee5ng li\u1ec1n k\u1ec1, hash m\u1ed9t l\u1ea7n n\u1eefa \u0111\u1ec3 c\u00f3 gi\u00e1 tr\u1ecb hash m\u1edbi,\u2026 Nh\u01b0 th\u01b0\u1eddng l\u1ec7, m\u1ed7i c\u00e1ch l\u00e0m \u0111\u1ec1u c\u00f3 nh\u1eefng \u0111i\u1ec3m t\u1ed1t, x\u1ea5u v\u1ec1 m\u1eb7t hi\u1ec7u su\u1ea5t.</p> <p>M\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n kh\u00e1c c\u1ee7a hash table ch\u00ednh l\u00e0 h\u1ec7 th\u1ed1ng s\u1ed1 th\u1eadp ph\u00e2n Dewey \u2013 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong r\u1ea5t nhi\u1ec1u th\u01b0 vi\u1ec7n. T\u1ea5t c\u1ea3 c\u00e1c s\u00e1ch \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111\u0103ng k\u00fd m\u1ed9t s\u1ed1 t\u01b0\u01a1ng \u1ee9ng d\u1ef1a v\u00e0o ch\u1ee7 \u0111\u1ec1 c\u1ee7a n\u00f3 ch\u1eb3ng h\u1ea1n nh\u01b0 nh\u1eefng s\u1ed1 g\u1ea7n 500 l\u00e0 c\u00e1c s\u00e1ch khoa h\u1ecdc, g\u1ea7n 700 l\u00e0 s\u00e1ch ngh\u1ec7 thu\u1eadt. Nh\u01b0 m\u1ed9t b\u1ea3ng hash th\u1eadt s\u1ef1, t\u1ed1c \u0111\u1ed9 c\u1ee7a \u0111\u1ec3 ng\u01b0\u1eddi \u0111\u1ecdc t\u00ecm ra quy\u1ec3n s\u00e1ch s\u1ebd d\u1ef1a v\u00e0o c\u00e1c hash bucket c\u00f3 th\u1eadt s\u1ef1 \u0111\u01b0\u1ee3c ph\u00e2n chia t\u1ed1t. Ch\u00fang ta s\u1ebd ph\u1ea3i m\u1ea5t nhi\u1ec1u th\u1eddi gian h\u01a1n \u0111\u1ec3 t\u00ecm m\u1ed9t quy\u1ec3n s\u00e1ch v\u1ec1 s\u01b0\u01a1ng m\u00f9 trong m\u1ed9t th\u01b0 vi\u1ec7n s\u00e1ch khoa h\u1ecdc so v\u1edbi m\u1ed9t th\u01b0 vi\u1ec7n s\u00e1ch v\u0103n h\u1ecdc c\u1ed5 \u0111i\u1ec3n.</p> <p>Trong ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng, b\u1ea3ng hash thu\u1eadn ti\u1ec7n \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u tham kh\u1ea3o, ch\u1eb3ng h\u1ea1n nh\u01b0 ch\u1eef vi\u1ebft t\u1eaft t\u00ean \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a c\u00e1c t\u1ed5 ch\u1ee9c. Trong gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n, b\u1ea3ng hash th\u1eadt s\u1ef1 h\u1eefu \u00edch \u0111\u1ec3 ti\u1ebfp c\u1eadn h\u01b0\u1edbng gi\u1ea3i quy\u1ebft chia \u0111\u1ec3 tr\u1ecb cho b\u00e0i to\u00e1n c\u00e1i t\u00fai (knapsack-type).</p> <p>Gi\u1ea3 s\u1eed, ch\u00fang ta \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u t\u00ecm m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng \u1ed1ng nh\u1ecf nh\u1ea5t \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi chi\u1ec1u d\u00e0i c\u1ed1 \u0111\u1ecbnh v\u00e0 ch\u00fang ta c\u00f3 38 \u1ed1ng. B\u1eb1ng c\u00e1ch chia th\u00e0nh hai t\u1eadp \u2013 19 v\u00e0 t\u00ednh to\u00e1n t\u1ea5t c\u1ea3 tr\u01b0\u1eddng h\u1ee3p gh\u00e9p \u1ed1ng c\u00f3 th\u1ec3 \u1edf m\u1ed7i t\u1eadp, ch\u00fang ta t\u1ea1o ra m\u1ed9t b\u1ea3ng hash k\u1ebft n\u1ed1i gi\u1eefa \u0111\u1ed9 d\u00e0i m\u00e0 c\u00e1c t\u1ed5 h\u1ee3p \u1ed1ng t\u1ea1o th\u00e0nh v\u1edbi s\u1ed1 l\u01b0\u1ee3ng \u1ed1ng \u00edt nh\u1ea5t c\u1ea7n d\u00f9ng. Sau \u0111\u00f3, v\u1edbi m\u1ed7i t\u1ed5 h\u1ee3p \u1ed1ng \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng trong m\u1ed9t t\u1eadp, ch\u00fang ta c\u00f3 th\u1ec3 tra c\u1ee9u li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi \u0111\u1ed9 d\u00e0i ph\u00f9 h\u1ee3p \u1edf t\u1eadp b\u00ean kia \u0111\u1ec3 c\u1ea3 hai \u1ed1ng t\u1ea1o n\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi \u0111\u1ed9 d\u00e0i y\u00eau c\u1ea7u v\u1edbi s\u1ed1 \u1ed1ng l\u00e0 \u00edt nh\u1ea5t.</p>"},{"location":"algo/data-structures/overview-data-structures/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>M\u1ed9t g\u00f3c nh\u00ecn r\u1ed9ng h\u01a1n, c\u1ea5u tr\u00fac d\u1eef li\u1ec7u ch\u1ec9 l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c c\u00f4ng c\u1ee5 kh\u00e1c trong b\u1ed9 \u0111\u1ed3 ngh\u1ec1 c\u1ee7a m\u1ed9t l\u1eadp tr\u00ecnh vi\u00ean d\u00e0y d\u1eb7n kinh nghi\u1ec7m. C\u00e1c th\u01b0 vi\u1ec7n to\u00e0n di\u1ec7n hi\u1ec7n nay v\u00e0 frameworks c\u00f3 s\u1eb5n h\u1ed7 tr\u1ee3 nhi\u1ec1u ng\u00f4n ng\u1eef \u0111\u00e3 gi\u00fap cho l\u1eadp tr\u00ecnh vi\u00ean tr\u00e1nh \u0111i vi\u1ec7c ph\u1ea3i hi\u1ec3u bi\u1ebft \u0111\u1ea7y \u0111\u1ee7 v\u1edbi c\u1ea5u tr\u00fac d\u1eef li\u1ec7u. K\u1ebft qu\u1ea3 l\u00e0 c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n \u0111\u00e3 c\u00f3 th\u1ec3 \u0111\u01b0a ra c\u00e1c gi\u1ea3i ph\u00e1p nhanh v\u00e0 ch\u1ea5t l\u01b0\u1ee3ng h\u01a1n nh\u1edd v\u00e0o vi\u1ec7c t\u1eadn d\u1ee5ng nh\u1eefng c\u00f4ng c\u1ee5 n\u00e0y. Th\u00e1ch th\u1ee9c \u0111\u1ed1i v\u1edbi c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n l\u00e0 l\u1ef1a ch\u1ecdn c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0o \u0111\u1ec3 s\u1eed d\u1ee5ng cho ph\u00f9 h\u1ee3p. Tuy nhi\u00ean, vi\u1ec7c bi\u1ebft m\u1ed9t ch\u00fat v\u1ec1 c\u00e1ch th\u1ee9c v\u1eadn h\u00e0nh c\u1ee7a c\u00e1c c\u00f4ng c\u1ee5 n\u00e0y s\u1ebd gi\u00fap vi\u1ec7c l\u1ef1a ch\u1ecdn d\u1ec5 d\u00e0ng h\u01a1n. Ho\u1eb7c khi c\u00f3 nhu c\u1ea7u, gi\u1ea3i m\u1ed9t b\u00e0i to\u00e1n v\u1edbi l\u1eddi gi\u1ea3i t\u1ed1t h\u01a1n cho kh\u00e1ch h\u00e0ng ho\u1eb7c \u0111\u1ec3 ki\u1ebfm 1000 \u0111i\u1ec3m trong 45 ph\u00fat trong c\u00e1c cu\u1ed9c thi SRM ti\u1ebfp theo, b\u1ea1n c\u0169ng s\u1ebd c\u1ea7n t\u1edbi ch\u00fang.</p>"},{"location":"algo/data-structures/persistent-data-structures/","title":"Persistent Data Structures","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n RR Th\u00e0nh Trung</p>"},{"location":"algo/data-structures/persistent-data-structures/#1-mo-au","title":"1. M\u1edf \u0111\u1ea7u","text":"<p>Persistent Data Structures l\u00e0 nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c d\u00f9ng khi ch\u00fang ta c\u1ea7n c\u00f3 to\u00e0n b\u1ed9 l\u1ecbch s\u1eed c\u1ee7a c\u00e1c thay \u0111\u1ed5i tr\u00ean 1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u (CTDL). (Ch\u00fa \u00fd r\u1eb1ng t\u1eeb persistent c\u00f2n \u0111\u01b0\u1ee3c d\u00f9ng trong persistent storage v\u1edbi m\u1ed9t ngh\u0129a ho\u00e0n to\u00e0n kh\u00e1c).</p> <p>X\u00e9t b\u00e0i to\u00e1n v\u00ed d\u1ee5:</p> <ul> <li>Cho m\u1ed9t d\u00e3y \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed.</li> <li>C\u00f3 2 lo\u1ea1i truy v\u1ea5n:<ol> <li>Update: G\u00e1n \\(A_i = v\\)</li> <li>Query: T\u00ecm \\(max(A_i, ..., A_j)\\) t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 \\(K\\).</li> </ol> </li> </ul> <p>N\u1ebfu kh\u00f4ng c\u00f3 \u0111o\u1ea1n t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K, b\u00e0i to\u00e1n l\u00e0 1 b\u00e0i c\u01a1 b\u1ea3n tr\u00ean Interval Tree. \u0110o\u1ea1n t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K bu\u1ed9c ch\u00fang ta ph\u1ea3i l\u01b0u l\u1ea1i c\u00e1c th\u00f4ng tin v\u1ec1 l\u1ecbch s\u1eed c\u1eadp nh\u1eadt CTDL - vi\u1ec7c n\u00e0y \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft b\u1eb1ng c\u00e1c Persistent Data Structures.</p> <p>G\u1ecdi tr\u1ea1ng th\u00e1i c\u1ee7a CTDL t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m l\u00e0 1 version c\u1ee7a CTDL \u0111\u00f3. M\u1ed9t c\u00e1ch c\u1ee5 th\u1ec3 h\u01a1n, persistent data structures cho ph\u00e9p ch\u00fang ta:</p> <ul> <li>Truy v\u1ea5n tr\u00ean m\u1ed9t version c\u0169 c\u1ee7a CTDL</li> <li>C\u1eadp nh\u1eadt d\u1eef li\u1ec7u trong version m\u1edbi nh\u1ea5t c\u1ee7a CTDL, b\u1eb1ng c\u00e1ch t\u1ea1o th\u00eam 1 version m\u1edbi c\u1ee7a CTDL.</li> </ul> <p>Trong m\u1ed9t s\u1ed1 c\u00e1ch c\u00e0i \u0111\u1eb7t, Persistent Data Structures c\u00f2n c\u00f3 th\u1ec3 cho ph\u00e9p thay version hi\u1ec7n t\u1ea1i c\u1ee7a CTDL th\u00e0nh m\u1ed9t version trong qu\u00e1 kh\u1ee9 (ph\u1ea7n 2 m\u00f4 t\u1ea3 ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c thao t\u00e1c n\u00e0y).</p> <p>C\u1ea7n hi\u1ec3u r\u1eb1ng Persistent Data Structures kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t lo\u1ea1i CTDL m\u1edbi. N\u00f3 l\u00e0 m\u1ed9t s\u1ed1 k\u0129 n\u0103ng t\u1ed5ng qu\u00e1t gi\u00fap th\u00eam th\u00f4ng tin v\u1ec1 l\u1ecbch s\u1eed thay \u0111\u1ed5i v\u00e0o CTDL th\u00f4ng th\u01b0\u1eddng m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3. V\u00ed d\u1ee5:</p> <ul> <li>IT + Persistent --&gt; Persistent IT</li> <li>BIT + Persistent --&gt; Persistent BIT</li> </ul> <p>T\u1ea1i sao l\u1ea1i l\u00e0 m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3? B\u1edfi v\u00ec ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t Persistent Data Structures b\u1eb1ng c\u00e1ch tr\u00e2u b\u00f2: khi c\u1eadp nh\u1eadt, ta t\u1ea1o m\u1ed9t b\u1ea3n sao ho\u00e0n to\u00e0n m\u1edbi c\u1ee7a CTDL, thay \u0111\u1ed5i m\u1ed9t s\u1ed1 d\u1eef li\u1ec7u tr\u00ean n\u00f3 v\u00e0 l\u01b0u l\u1ea1i. Nh\u01b0 v\u1eady ta lu\u00f4n c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(Q \\* N \\* T)\\) v\u00e0 b\u1ed9 nh\u1edb \\(O(Q \\* N)\\), v\u1edbi \\(Q\\) l\u00e0 s\u1ed1 thao t\u00e1c c\u1ea7n th\u1ef1c hi\u1ec7n, v\u00e0 \\(N\\) l\u00e0 \u0111\u1ed9 l\u1edbn c\u1ee7a CTDL, v\u00e0 \\(T\\) l\u00e0 th\u1eddi gian \u0111\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c tr\u00ean CTDL.</p> <p>Trong c\u00e1c ph\u1ea7n d\u01b0\u1edbi \u0111\u00e2y, m\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y v\u1ec1 2 k\u0129 thu\u1eadt th\u00f4ng th\u01b0\u1eddng c\u1ee7a Persistent Data Structures.</p>"},{"location":"algo/data-structures/persistent-data-structures/#2-persistent-it","title":"2. Persistent IT","text":""},{"location":"algo/data-structures/persistent-data-structures/#tu-tuong","title":"T\u01b0 t\u01b0\u1edfng","text":"<p>Quay tr\u1edf l\u1ea1i b\u00e0i to\u00e1n. Ch\u00fang ta bi\u1ebft r\u1eb1ng m\u1ed7i thao t\u00e1c update tr\u00ean IT ch\u1ec9 m\u1ea5t \\(O(logN)\\). \u0110i\u1ec1u n\u00e0y t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c m\u1ed7i thao t\u00e1c update ch\u1ec9 l\u00e0m thay \u0111\u1ed5i \\(O(logN)\\) n\u00fat tr\u00ean c\u00e2y. Nh\u01b0 v\u1eady ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c thay \u0111\u1ed5i tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c n\u00fat trong \\(O(Q*logN)\\).</p> <p>T\u1eeb \u0111\u00f3, ta r\u00fat ra \u0111\u01b0\u1ee3c m\u1ed9t t\u01b0 t\u01b0\u1edfng c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n:</p> <ul> <li> <p>V\u1edbi m\u1ed7i thao t\u00e1c Update, ta t\u1ea1o th\u00eam m\u1ed9t s\u1ed1 n\u00fat m\u1edbi tr\u00ean IT. \u0110\u1ec3 kh\u00f4ng ph\u1ea3i sinh th\u00eam c\u00e1c n\u00fat kh\u00f4ng b\u1ecb thay \u0111\u1ed5i, m\u1ed9t n\u00fat \u1edf version m\u1edbi c\u00f3 th\u1ec3 c\u00f3 con l\u00e0 m\u1ed9t n\u00fat \u1edf vesion c\u0169.</p> <p>Ch\u00fa \u00fd: M\u1ed7i thao t\u00e1c Update lu\u00f4n thay \u0111\u1ed5i m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c \u0111\u1ebfn m\u1ed9t n\u00fat l\u00e1, n\u00ean kh\u00f4ng c\u00f3 tr\u01b0\u1eddng h\u1ee3p m\u1ed9t n\u00fat \u1edf version c\u0169 c\u00f3 con l\u00e0 m\u1ed9t n\u00fat \u1edf version m\u1edbi h\u01a1n. (N\u1ebfu thao t\u00e1c Update l\u00e0 Update 1 \u0111o\u1ea1n, c\u00e1c n\u00fat b\u1ecb thay \u0111\u1ed5i kh\u00f4ng c\u00f2n l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i n\u1eefa, nh\u01b0ng nh\u1eadn x\u00e9t n\u00e0y v\u1eabn \u0111\u00fang). - Khi th\u1ef1c hi\u1ec7n thao t\u00e1c Query tr\u00ean version t, ta ch\u1ec9 c\u1ea7n th\u1ef1c hi\u1ec7n Query tr\u00ean n\u00fat g\u1ed1c \u1edf version t. T\u01b0 t\u01b0\u1edfng n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Path Copy trong c\u00e1c t\u00e0i li\u1ec7u ti\u1ebfng Anh.</p> </li> </ul>"},{"location":"algo/data-structures/persistent-data-structures/#cai-at","title":"C\u00e0i \u0111\u1eb7t:","text":"<pre><code>struct Node {\n    int left, right;    // ID of left child &amp; right child\n    long long ln;       // Max value of node\n    Node() {}\n    Node(long long ln, int left, int right) : ln(ln), left(left), right(right) {}\n} it[11000111];         // Each node has a position in this array, called ID\nint nNode;\n\nint ver[MN];            // ID of root in each version\n\n// Update max value of a node\ninline void refine(int cur) {\n    it[cur].ln = max(it[it[cur].left].ln, it[it[cur].right].ln);\n}\n\n// Update a range, and return new ID of node\nint update(int l, int r, int u, int x, int oldId) {\n    if (l == r) {\n        ++nNode;\n        it[nNode] = Node(x, 0, 0);\n        return nNode;\n    }\n\n    int mid = (l + r) &gt;&gt; 1;\n    int cur = ++nNode;\n\n    if (u &lt;= mid) {\n        it[cur].left = update(l, mid, u, x, it[oldId].left);\n        it[cur].right = it[oldId].right;\n        refine(cur);\n    }\n    else {\n        it[cur].left = it[oldId].left;\n        it[cur].right = update(mid+1, r, u, x, it[oldId].right);\n        refine(cur);\n    }\n\n    return cur;\n}\n\n// Get max of range. Same as usual IT\nint get(int nodeId, int l, int r, int u, int v) {\n    if (v &lt; l || r &lt; u) return -1;\n    if (u &lt;= l &amp;&amp; r &lt;= v) return it[nodeId].ln;\n\n    int mid = (l + r) &gt;&gt; 1;\n    return max(get(it[nodeId].left, l, mid, u, v), get(it[nodeId].right, mid+1, r, u, v));\n}\n\n\n// When update:\n    ++nVer;\n    ver[nVer] = update(1, n, u, x, ver[nVer-1]);\n\n// When query:\n    res = get(ver[t], 1, n, u, v);\n</code></pre> <p>Gi\u1ea3i th\u00edch:</p> <ul> <li>Ban \u0111\u1ea7u, ta c\u00f3 m\u1ed9t m\u1ea3ng it, l\u01b0u t\u1ea5t c\u1ea3 c\u00e1c n\u00fat s\u1ebd \u0111\u01b0\u1ee3c sinh ra c\u1ee7a IT. M\u1ed7i n\u00fat g\u1ed3m c\u00f3<ul> <li>Ch\u1ec9 s\u1ed1 c\u1ee7a con tr\u00e1i, index c\u1ee7a con ph\u1ea3i (2 bi\u1ebfn <code>left</code> v\u00e0 <code>right</code>)</li> <li>Gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a c\u00e1c s\u1ed1 trong kho\u1ea3ng m\u00e0 n\u00fat qu\u1ea3n l\u00fd (\u1edf version khi n\u00fat \u0111\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o ra): bi\u1ebfn <code>ln</code></li> </ul> </li> <li>Ta l\u01b0u th\u00eam ch\u1ec9 s\u1ed1 c\u1ee7a c\u00e1c n\u00fat g\u1ed1c \u1edf c\u00e1c version kh\u00e1c nhau v\u00e0o m\u1ed9t m\u1ea3ng <code>ver</code></li> <li>H\u00e0m <code>update</code>:<ul> <li>T\u1ea1o ra c\u00e1c n\u00fat m\u1edbi, v\u00e0 tr\u1ecf \u0111\u1ebfn c\u00e1c con \u1edf version c\u0169 ho\u1eb7c version m\u1edbi, t\u00f9y theo c\u00e1c con c\u00f3 b\u1ecb thay \u0111\u1ed5i hay kh\u00f4ng</li> <li>Tr\u1ea3 l\u1ea1i index c\u1ee7a n\u00fat m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o</li> </ul> </li> <li>H\u00e0m <code>get</code>:<ul> <li>Tr\u1ea3 l\u1ea1i max c\u1ee7a m\u1ed9t \u0111o\u1ea1n \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi n\u00fat <code>nodeId</code></li> </ul> </li> </ul>"},{"location":"algo/data-structures/persistent-data-structures/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>C\u00e1ch c\u00e0i \u0111\u1eb7t Persistent Data Structures trong m\u1ee5c n\u00e0y r\u1ea5t hi\u1ec7u qu\u1ea3. N\u00f3 ho\u00e0n to\u00e0n kh\u00f4ng l\u00e0m t\u0103ng th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p (persistent IT c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i thao t\u00e1c l\u00e0 \\(O(logN)\\)), v\u00e0 b\u1ed9 nh\u1edb c\u1ea7n th\u00eam l\u00e0 t\u1ed1i \u01b0u: \\(O(Q \\* logN)\\).</li> <li>Tuy nhi\u00ean, c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y kh\u00f4ng d\u1ec5 \u00e1p d\u1ee5ng v\u1edbi nh\u1eefng CTDL kh\u00e1c. Ch\u1eb3ng h\u1ea1n s\u1ebd r\u1ea5t kh\u00f3 \u0111\u1ec3 c\u00e0i \u0111\u00fang BIT v\u1edbi ph\u01b0\u01a1ng ph\u00e1p n\u00e0y. \u1ede m\u1ee5c ti\u1ebfp theo, m\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t kh\u00e1c c\u00f3 th\u1ec3 d\u00f9ng cho BIT, tuy nhi\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u1edbn h\u01a1n.</li> </ul>"},{"location":"algo/data-structures/persistent-data-structures/#3-persistent-bit","title":"3. Persistent BIT","text":""},{"location":"algo/data-structures/persistent-data-structures/#tu-tuong_1","title":"T\u01b0 t\u01b0\u1edfng:","text":"<p>T\u1ea1i m\u1ed7i n\u00fat c\u1ee7a BIT, thay v\u00ec l\u01b0u m\u1ed9t gi\u00e1 tr\u1ecb, ta l\u01b0u l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p (version, gi\u00e1 tr\u1ecb) \u1edf n\u00fat \u0111\u00f3.</p> <ul> <li>Thao t\u00e1c update r\u1ea5t \u0111\u01a1n gi\u1ea3n: ch\u1ec9 c\u1ea7n th\u00eam m\u1ed9t c\u1eb7p (version, gi\u00e1 tr\u1ecb) v\u00e0o c\u00e1c n\u00fat t\u01b0\u01a1ng \u1ee9ng.</li> <li>V\u1edbi thao t\u00e1c query t\u1ea1i version t, tr\u00ean m\u1ed9t n\u00fat, ta c\u1ea7n t\u00ecm c\u1eb7p (version, gi\u00e1 tr\u1ecb) m\u1edbi nh\u1ea5t v\u00e0o tr\u01b0\u1edbc th\u1eddi \u0111i\u1ec3m t - vi\u1ec7c t\u00ecm ki\u1ebfm n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n.</li> </ul> <p>C\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Fat Node trong c\u00e1c t\u00e0i li\u1ec7u ti\u1ebfng Anh.</p>"},{"location":"algo/data-structures/persistent-data-structures/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t:","text":"<p>Code BIT tr\u00edch t\u1eeb b\u00e0i IPSC 2011 - Grid Surveillance:</p> <pre><code>## define _(x) (x &amp; (-(x)))\n\n// Persistent BIT\nvector&lt; pair&lt;int,int&gt; &gt; bit[4100][4100];\n\n// Add val to cell (x, y) at time = time\nvoid update(int x, int y, int val, int time) {\n    for(int u = x; u &lt;= 4096; u += _(u))\n        for(int v = y; v &lt;= 4096; v += _(v)) {\n            if (bit[u][v].empty()) {\n                bit[u][v].push_back(make_pair(time, val));\n            }\n            else {\n                int cur = bit[u][v][bit[u][v].size()-1].second;\n                bit[u][v].push_back(make_pair(time, cur + val));\n            }\n        }\n}\n\n// Get the sum of square (1,1) --&gt; (x, y) at time = time\nint get(int time, int x, int y) {\n    int res = 0;\n    for(int u = x; u &gt; 0; u -= _(u))\n        for(int v = y; v &gt; 0; v -= _(v)) {\n            if (bit[u][v].empty()) {\n            }\n            else if (bit[u][v][bit[u][v].size()-1].first &lt;= time) {\n                res += bit[u][v][bit[u][v].size()-1].second;\n            }\n            else {\n                int pos = upper_bound(bit[u][v].begin(), bit[u][v].end(), make_pair(time, 2000111000))\n                        - bit[u][v].begin() - 1;\n                if (pos &gt;= 0)\n                    res += bit[u][v][pos].second;\n            }\n        }\n    return res;\n}\n</code></pre>"},{"location":"algo/data-structures/persistent-data-structures/#phan-tich_1","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c update kh\u00f4ng thay \u0111\u1ed5i (v\u00ed d\u1ee5 v\u1edbi BIT, v\u1eabn l\u00e0 \\(O(logN)\\)). Nh\u01b0ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c query b\u1ecb t\u0103ng l\u00ean \\(logN\\) (v\u00ed d\u1ee5 v\u1edbi BIT, \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c l\u00e0 \\(O(log^2(N)\\)) thay v\u00ec \\(O(logN)\\).</li> <li>Tuy nhi\u00ean, c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y t\u1ed5ng qu\u00e1t h\u01a1n, d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho nhi\u1ec1u CTDL kh\u00e1c nhau, v\u00ed d\u1ee5 c\u1ea3 BIT v\u00e0 IT.</li> </ul>"},{"location":"algo/data-structures/persistent-data-structures/#4-retroactive-data-structures","title":"4. Retroactive Data Structures","text":"<p>M\u1ed9t l\u1edbp CTDL kh\u00e1c t\u01b0\u01a1ng \u0111\u1ed1i gi\u1ed1ng v\u1edbi Persistent Data Structures, nh\u01b0ng c\u00f3 t\u00ednh \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf cao h\u01a1n l\u00e0 Retroactive Data Structures:</p> <p>\"Retroactive Data Structures l\u00e0 lo\u1ea1i CTDL cho ph\u00e9p th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i v\u1edbi m\u1ed9t d\u00e3y c\u00e1c thao t\u00e1c \u0111\u00e3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean d\u1eef li\u1ec7u. V\u00ed d\u1ee5: Thay \u0111\u1ed5i m\u1ed9t thao t\u00e1c \u0111\u00e3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong qu\u00e1 kh\u1ee9\".</p> <p>C\u1ea3 Retroactive Data Structures &amp; Persistent Data Structures \u0111\u1ec1u quan t\u00e2m \u0111\u1ebfn tr\u1ee5c th\u1eddi gian, tuy nhi\u00ean \u0111i\u1ec3m kh\u00e1c nhau n\u1eb1m \u1edf ch\u1ed7 c\u00e1ch x\u1eed l\u00fd tr\u1ee5c th\u1eddi gian c\u1ee7a 2 CTDL n\u00e0y nh\u01b0 th\u1ebf n\u00e0o:</p> <ul> <li>V\u1edbi Persistent Data Structures, t\u1ea5t c\u1ea3 c\u00e1c version \u0111\u01b0\u1ee3c l\u01b0u l\u1ea1i, v\u00e0 b\u1ea1n kh\u00f4ng th\u1ec3 n\u00e0o thay \u0111\u1ed5i m\u1ed9t version trong qu\u00e1 kh\u1ee9 (\u0111i\u1ec1u duy nh\u1ea5t b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m l\u00e0 t\u1ea1o ra m\u1ed9t version m\u1edbi t\u1eeb 1 version c\u0169 v\u00e0 th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i tr\u00ean version m\u1edbi n\u00e0y).</li> <li>V\u1edbi Retroactive Data Structures, b\u1ea1n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i tr\u00ean m\u1ed9t version c\u0169. Thay \u0111\u1ed5i tr\u00ean m\u1ed9t version c\u0169 n\u00e0y \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c version sau n\u00f3.</li> </ul> <p>S\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 c\u00e1ch x\u1eed l\u00fd tr\u1ee5c th\u1eddi gian khi\u1ebfn cho Retroactive Data Structures c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng tr\u00ean th\u1ef1c t\u1ebf - tr\u00e1i ng\u01b0\u1ee3c h\u1eb3n v\u1edbi Persistent Data Structures ch\u1ec9 th\u01b0\u1eddng \u0111\u01b0\u1ee3c th\u1ea5y \u1edf trong c\u00e1c k\u1ef3 thi. M\u1ed9t v\u00e0i \u1ee9ng d\u1ee5ng quan tr\u1ecdng c\u1ee7a Retroactive Data Structures g\u1ed3m c\u00f3:</p> <ul> <li>Error Correction: Gi\u1ea3 s\u1eed m\u1ed9t d\u1eef li\u1ec7u b\u1ecb nh\u1eadp sai, l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c sau \u0111\u1ea5y. Retroactive DS cho ph\u00e9p s\u1eeda d\u1eef li\u1ec7u nh\u1eadp sai v\u00e0 \u1ea3nh h\u01b0\u1edfng (t\u00edch c\u1ef1c) \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c sau \u0111\u00f3.</li> <li>Bad data: G\u1ea7n gi\u1ed1ng v\u1edbi Error Correction, nh\u01b0ng d\u1eef li\u1ec7u sai b\u1ecb x\u00f3a \u0111i thay v\u00ec \u0111\u01b0\u1ee3c s\u1eeda l\u1ea1i.</li> <li>Recovery: Gi\u1ea3 s\u1eed m\u1ed9t l\u1ed7i c\u1ee7a ph\u1ea7n c\u1ee9ng l\u00e0m m\u1ed9t s\u1ed1 d\u1eef li\u1ec7u kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecdc. Retroactive DS cho ph\u00e9p \u0111\u1ecdc l\u1ea1i nh\u1eefng d\u1eef li\u1ec7u n\u00e0y v\u00e0 thay \u0111\u1ed5i t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n sau \u0111\u00f3.</li> </ul> <p>Tr\u00ean th\u1ef1c t\u1ebf, Retroactive Data Structures c\u00f2n \u0111ang d\u1eebng l\u1ea1i \u1edf vi\u1ec7c l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m, ch\u1ee9 ch\u01b0a c\u00f3 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t n\u00e0o hi\u1ec7u qu\u1ea3. C\u00e1c b\u1ea1n n\u1ebfu mu\u1ed1n t\u00ecm hi\u1ec3u c\u00f3 th\u1ec3 nghi\u00ean c\u1ee9u th\u00eam v\u1ec1 c\u01a1 ch\u1ebf rollback trong database ho\u1eb7c t\u00ecm ki\u1ebfm th\u00eam v\u1ec1 Retroactive Data Structures.</p>"},{"location":"algo/data-structures/persistent-data-structures/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>SPOJ - COT</li> <li>SPOJ - MKTHNUM</li> <li>Codechef - QUERY</li> <li>Codechef - SORTING</li> <li>Codeforces - Round 140 Div 1 - E</li> <li>Codeforces - Round 265 Div 1 - E</li> <li>IPSC 2011 - Grid Surveillance</li> </ul>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n v\u00e0 m\u1ea3ng hi\u1ec7u","text":"<p>T\u00e1c gi\u1ea3:  - B\u00f9i Nguy\u1ec5n \u0110\u1ee9c T\u00e2n - VNU-HCM, High School for the Gifted</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - VNU-HCM, University of Science - Nguy\u1ec5n Ph\u00fa B\u00ecnh - Hung Vuong High School for the Gifted, Binh Duong Province</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#khai-niem","title":"Kh\u00e1i ni\u1ec7m","text":""},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-cong-don-prefix-sum","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n (prefix sum)","text":"<p>Cho m\u1ed9t m\u1ea3ng \\(A\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(n - 1\\), ta d\u1ef1ng m\u1ea3ng \\(S(A)\\) theo quy t\u1eafc sau:</p> <ul> <li>\\(S_0 = c\\), v\u1edbi \\(c\\) l\u00e0 m\u1ed9t h\u1eb1ng s\u1ed1 th\u1ef1c</li> <li>\\(S_i = S_{i - 1} + A_{i -1} = \\displaystyle c +\\sum_{j = 0}^{i - 1} A_j\\), v\u1edbi \\(1 \\le i &lt; n\\)</li> </ul> <p>M\u1ea3ng \\(S(A)\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ea3ng c\u1ed9ng d\u1ed3n (ti\u1ec1n t\u1ed1) theo \\(c\\) c\u1ee7a \\(A\\), g\u1ecdi c\u00e1ch kh\u00e1c l\u00e0 prefix sum c\u1ee7a \\(A\\). T\u1eeb m\u1ed9t m\u1ea3ng \\(A\\), ta c\u00f3 th\u1ec3 sinh ra v\u00f4 h\u1ea1n m\u1ea3ng \\(S(A)\\) b\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t s\u1ed1 th\u1ef1c \\(c\\) t\u00f9y \u00fd; tr\u00ean th\u1ef1c t\u1ebf, ta th\u01b0\u1eddng ch\u1ecdn \\(c = 0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n h\u01a1n khi t\u00ednh to\u00e1n.</p> <p></p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-hieu-difference-array","title":"M\u1ea3ng hi\u1ec7u (difference array)","text":"<p>C\u0169ng v\u1edbi m\u1ea3ng \\(A\\), ta c\u00f3 th\u1ec3 d\u1ef1ng m\u1ea3ng \\(D(A)\\) theo quy t\u1eafc: \\(D_i = A_{i + 1} - A_i\\;(0 \\le i &lt; n - 1)\\).</p> <p>M\u1ea3ng \\(D(A)\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ea3ng hi\u1ec7u c\u1ee7a \\(A\\), c\u00f3 t\u00ean ti\u1ebfng Anh l\u00e0 difference array.</p> <p></p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":""},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-cong-don","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n","text":"<p>\u0110\u1ec3 d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean \u0111\u1ec3 d\u1ef1ng tr\u1ef1c ti\u1ebfp m\u1ea3ng:</p> <pre><code>vector&lt;int&gt; buildPrefixSum(const vector&lt;int&gt;&amp; a, int C = 0) {\n    int n = (int)a.size();\n    vector&lt;int&gt; prefixSum(n + 1);\n\n    prefixSum[0] = C;\n\n    for (int i = 0; i &lt; n; i++)\n        prefixSum[i + 1] = prefixSum[i] + a[i];\n\n    return prefixSum;\n}\n</code></pre> <p>Ngo\u00e0i ra, th\u01b0 vi\u1ec7n C++ STL c\u0169ng cung c\u1ea5p h\u00e0m <code>partial_sum</code> \u0111\u1ec3 ph\u1ee5c v\u1ee5 qu\u00e1 tr\u00ecnh d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n, c\u00fa ph\u00e1p c\u1ee7a h\u00e0m nh\u01b0 sau:</p> <pre><code>partial_sum(first, last, result, binary_op)\n</code></pre> <p>H\u00e0m tr\u00ean s\u1ebd th\u1ef1c hi\u1ec7n t\u00ednh m\u1ea3ng c\u1ed9ng d\u1ed3n v\u1edbi to\u00e1n t\u1eed <code>binary_op</code> tr\u00ean c\u00e1c container c\u1ee7a C++ c\u00f3 iterator tr\u1ecf t\u1eeb <code>[first, last)</code> v\u00e0 tr\u1ea3 m\u1ea3ng c\u1ed9ng d\u1ed3n sang container b\u1eaft \u0111\u1ea7u t\u1eeb iterator tr\u1ecf v\u1ec1 <code>result</code>.</p> <p>C\u00f3 hai l\u01b0u \u00fd quan tr\u1ecdng khi s\u1eed d\u1ee5ng h\u00e0m n\u00e0y:</p> <ul> <li>H\u00e0m <code>partial_sum</code> duy\u1ec7t qua c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a container theo t\u00ednh ch\u1ea5t c\u1ee7a iterator c\u1ee7a container \u0111\u00f3; v\u00ec th\u1ebf gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng c\u1ed9ng d\u1ed3n s\u1ebd ph\u1ee5 thu\u1ed9c v\u00e0o th\u1ee9 t\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong container \u0111\u00f3.</li> <li>Tham s\u1ed1 <code>binary_op</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u1ec3 tr\u1ed1ng. Khi n\u00e0y, to\u00e1n t\u1eed m\u1eb7c \u0111\u1ecbnh l\u00e0 ph\u00e9p c\u1ed9ng (<code>+</code>).</li> </ul> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam v\u1ec1 h\u00e0m n\u00e0y t\u1ea1i trang cppreference.</p> <p>Code minh h\u1ecda:</p> <pre><code>void printArray(const vector&lt;int&gt;&amp; arr) {\n  for (int v : arr) cout &lt;&lt; v &lt;&lt; \" \";\n  cout &lt;&lt; endl;\n}\n\nvector&lt;int&gt; a = {3, -1, -4, 1, 5, 9, -2, -6};\nint n = (int)a.size();\n\n// D\u1ef1ng th\u1ee7 c\u00f4ng\nvector&lt;int&gt; prefOne = buildPrefixSum(a);\nprintArray(prefOne); // 0 3 2 -2 -1 4 13 11 5\n\n// D\u1ef1ng b\u1eb1ng partial_sum\nvector&lt;int&gt; prefTwo(n);\npartial_sum(a.begin(), a.end(), prefTwo.begin());\nprintArray(prefTwo); // 3 2 -2 -1 4 13 11 5\n</code></pre> <p>Trong c\u1ea3 hai c\u00e1ch tr\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a qu\u00e1 tr\u00ecnh d\u1ef1ng l\u00e0 \\(\\mathcal{O}(n)\\).</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-hieu","title":"M\u1ea3ng hi\u1ec7u","text":"<p>T\u01b0\u01a1ng t\u1ef1, ta c\u0169ng c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u1ecbnh ngh\u0129a \u0111\u1ec3 d\u1ef1ng tr\u1ef1c ti\u1ebfp m\u1ea3ng hi\u1ec7u:</p> <pre><code>vector&lt;int&gt; buildDifferenceArray(const vector&lt;int&gt;&amp; a) {\n    int n = (int)a.size();\n\n    vector&lt;int&gt; differenceArray(n - 1);\n\n    for (int i = 0; i &lt; n - 1; i++)\n        differenceArray[i] = a[i + 1] - a[i];\n\n    return differenceArray;\n}\n</code></pre> <p>Ngo\u00e0i ra, th\u01b0 vi\u1ec7n C++ STL c\u0169ng cung c\u1ea5p h\u00e0m <code>adjacent_difference</code> \u0111\u1ec3 ph\u1ee5c v\u1ee5 qu\u00e1 tr\u00ecnh d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n, c\u00fa ph\u00e1p c\u1ee7a h\u00e0m nh\u01b0 sau:</p> <pre><code>adjacent_difference(first, last, result, binary_op)\n</code></pre> <p>H\u00e0m tr\u00ean s\u1ebd th\u1ef1c hi\u1ec7n t\u00ednh m\u1ea3ng hi\u1ec7u v\u1edbi to\u00e1n t\u1eed <code>binary_op</code> tr\u00ean c\u00e1c container c\u1ee7a C++ c\u00f3 iterator tr\u1ecf t\u1eeb <code>[first, last)</code> v\u00e0 tr\u1ea3 m\u1ea3ng hi\u1ec7u sang container b\u1eaft \u0111\u1ea7u t\u1eeb iterator tr\u1ecf v\u1ec1 <code>result</code>.</p> <p>C\u00e1c l\u01b0u \u00fd \u1edf ph\u1ea7n <code>partial_sum</code> c\u0169ng \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho h\u00e0m n\u00e0y.</p> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam v\u1ec1 h\u00e0m n\u00e0y t\u1ea1i trang cppreference. Code minh h\u1ecda:</p> <pre><code>// D\u1ef1ng th\u1ee7 c\u00f4ng\nvector&lt;int&gt; diffOne = buildDifferenceArray(a);\nprintArray(diffOne);\n// -4 -3 5 4 4 -11 -4\n\n// D\u1ef1ng b\u1eb1ng partial_sum\nvector&lt;int&gt; diffTwo(n);\nadjacent_difference(a.begin(), a.end(), diffTwo.begin());\nprintArray(diffTwo);\n// 3 -4 -3 5 4 4 -11 -4\n</code></pre> <p>Trong c\u1ea3 hai c\u00e1ch tr\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a qu\u00e1 tr\u00ecnh d\u1ef1ng l\u00e0 \\(\\mathcal{O}(n)\\).</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#tinh-chat","title":"T\u00ednh ch\u1ea5t","text":""},{"location":"algo/data-structures/prefix-sum-and-difference-array/#o-dai-mang","title":"\u0110\u1ed9 d\u00e0i m\u1ea3ng","text":"<ul> <li>\u0110\u1ed1i v\u1edbi m\u1ea3ng c\u1ed9ng d\u1ed3n, do ta c\u1ea7n th\u00eam m\u1ed9t h\u1eb1ng s\u1ed1 \\(c\\) \u1edf \u0111\u1ea7u m\u1ea3ng, \u0111\u1ed9 d\u00e0i c\u1ee7a m\u1ea3ng \\(S(c, A)\\) l\u00e0 \\(n + 1\\), nhi\u1ec1u h\u01a1n 1 ph\u1ea7n t\u1eed so v\u1edbi m\u1ea3ng \\(A\\) g\u1ed1c.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, m\u1ea3ng hi\u1ec7u \u0111\u01b0\u1ee3c d\u1ef1ng d\u1ef1a tr\u00ean hi\u1ec7u c\u1ee7a hai ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 nhau. Tuy nhi\u00ean, trong m\u1ea3ng \\(A\\) ch\u1ec9 c\u00f3 \\(n - 1\\) c\u1eb7p nh\u01b0 v\u1eady, v\u00ec th\u1ebf \u0111\u1ed9 d\u00e0i c\u1ee7a \\(D(A)\\) l\u00e0 \\(n - 1\\), \u00edt h\u01a1n 1 ph\u1ea7n t\u1eed so v\u1edbi m\u1ea3ng \\(A\\) g\u1ed1c.</li> </ul>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#tinh-rieng-biet","title":"T\u00ednh ri\u00eang bi\u1ec7t","text":"<ul> <li>T\u1eeb m\u1ed9t m\u1ea3ng \\(A\\) b\u1ea5t k\u1ef3, ta sinh \u0111\u01b0\u1ee3c v\u00f4 h\u1ea1n m\u1ea3ng c\u1ed9ng d\u1ed3n \\(S(c, A)\\) t\u1eeb \\(A\\). Tuy nhi\u00ean, c\u00e1c m\u1ea3ng c\u1ed9ng d\u1ed3n n\u00e0y ch\u1ec9 kh\u00e1c nhau \u1edf gi\u00e1 tr\u1ecb \\(c\\) \u0111\u01b0\u1ee3c ch\u1ecdn.</li> <li>C\u0169ng v\u1edbi m\u1ea3ng \\(A\\) \u0111\u00f3, ta sinh \u0111\u01b0\u1ee3c m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t m\u1ea3ng hi\u1ec7u \\(D(A)\\) t\u1eeb \\(A\\).</li> </ul>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#lien-he-giua-mang-cong-don-va-mang-hieu","title":"Li\u00ean h\u1ec7 gi\u1eefa m\u1ea3ng c\u1ed9ng d\u1ed3n v\u00e0 m\u1ea3ng hi\u1ec7u","text":"<p>Cho m\u1ea3ng c\u1ed9ng d\u1ed3n \\(S(c, A)\\) v\u00e0 m\u1ea3ng hi\u1ec7u \\(D(A)\\), ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng kh\u00f4i ph\u1ee5c n\u1ed9i dung c\u1ee7a m\u1ea3ng \\(A\\) th\u00f4ng qua c\u00e1c ph\u00e9p sau:</p> <ul> <li>\\(S(A_0, D(A)) = A\\)</li> <li>\\(D(S(c, A)) = A\\) v\u1edbi m\u1ecdi \\(c\\) th\u1ef1c</li> </ul> <p>H\u00ecnh d\u01b0\u1edbi \u0111\u00e2y m\u00f4 t\u1ea3 r\u00f5 h\u01a1n m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa m\u1ea3ng g\u1ed1c, m\u1ea3ng hi\u1ec7u v\u00e0 m\u1ea3ng c\u1ed9ng d\u1ed3n sinh ra t\u1eeb n\u00f3: </p> <p>H\u00e0m <code>partial_sum</code> v\u00e0 <code>adjacent_difference</code> trong C++ STL c\u0169ng tu\u00e2n theo quy t\u1eafc n\u00e0y tr\u00ean. Tuy nhi\u00ean, c\u00e1c thao t\u00e1c tr\u00ean hai h\u00e0m n\u00e0y c\u00f3 ph\u1ea7n ph\u1ee9c t\u1ea1p h\u01a1n so v\u1edbi thao t\u00e1c tr\u00ean m\u1ea3ng m\u00e0 ta c\u00e0i \u0111\u1eb7t th\u1ee7 c\u00f4ng.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#ung-dung-cua-mang-cong-don","title":"\u1ee8ng d\u1ee5ng c\u1ee7a m\u1ea3ng c\u1ed9ng d\u1ed3n","text":"<p>M\u1ea3ng c\u1ed9ng d\u1ed3n c\u00f3 m\u1ed9t t\u00ednh ch\u1ea5t quan tr\u1ecdng: c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c c\u1ed9ng l\u1ea1i ch\u1ed3ng ch\u1ea5t l\u00ean nhau m\u1ed9t c\u00e1ch li\u00ean ti\u1ebfp, v\u00ec th\u1ebf, v\u1edbi m\u1ecdi n\u1eeda kho\u1ea3ng \\([l, r)\\) \\((0 \\le l &lt; r \\le n)\\), ta ch\u1ec9 c\u1ea7n t\u00ednh \\(S_r - S_l\\) \u0111\u1ec3 t\u00ednh t\u1ed5ng c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed \\(A_l, A_{l + 1},\\dots, A_{r - 2}, A_{r - 1}\\). Vi\u1ec7c tr\u1eeb n\u00e0y c\u0169ng s\u1ebd kh\u1eed \u0111i h\u1eb1ng s\u1ed1 \\(c\\) c\u1ee7a \\(S\\), v\u00ec th\u1ebf ta c\u00f3 th\u1ec3 d\u00f9ng b\u1ea5t k\u1ef3 m\u1ea3ng \\(S\\) n\u00e0o \u0111\u01b0\u1ee3c sinh t\u1eeb \\(A\\) \u0111\u1ec3 t\u00ednh t\u1ed5ng.</p> <p>Ch\u1ee9ng minh:</p> <p>Theo \u0111\u1ecbnh ngh\u0129a: \\(S_i = c + \\displaystyle \\sum_{j = 0}^{i - 1} A_j\\)</p> <p>Khi n\u00e0y: </p> \\[ \\begin{align*} S_r - S_l &amp;= c + \\displaystyle \\sum_{j = 0}^{r - 1} A_j - \\bigg(c + \\displaystyle \\sum_{j = 0}^{l - 1} A_j\\bigg) \\\\ &amp;= c + \\displaystyle \\sum_{j = 0}^{r - 1} A_j - c - \\displaystyle \\sum_{j = 0}^{l - 1} A_j \\\\ &amp;= c - c + \\displaystyle \\sum_{j = 0}^{r - 1} A_j - \\displaystyle \\sum_{j = 0}^{l - 1} A_j \\\\ &amp;= \\displaystyle \\sum_{j = l}^{r - 1} A_j + \\displaystyle \\sum_{j = 0}^{l - 1} A_j - \\displaystyle \\sum_{j = 0}^{l - 1} A_j \\\\ &amp;= \\displaystyle \\sum_{j = l}^{r - 1} A_j \\quad \\blacksquare \\end{align*} \\] <p>Trong \u0111a s\u1ed1 tr\u01b0\u1eddng h\u1ee3p, m\u1ea3ng c\u1ed9ng d\u1ed3n th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng n\u1ebfu b\u00e0i to\u00e1n y\u00eau c\u1ea7u t\u00ednh t\u1ed5ng m\u1ed9t \u0111o\u1ea1n con nhi\u1ec1u l\u1ea7n li\u00ean ti\u1ebfp. D\u01b0\u1edbi \u0111\u00e2y, ta s\u1ebd \u0111\u1ec1 c\u1eadp m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n c\u00f3 \u0111i\u1ec1u ki\u1ec7n tr\u00ean.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#bai-toan-minh-hoa","title":"B\u00e0i to\u00e1n minh h\u1ecda","text":"<p>Ngu\u1ed3n: CSES - Maximum Subarray Sum</p> <p>\u0110\u1ec1 b\u00e0i: Cho m\u1ed9t m\u1ea3ng \\(A\\) g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed. T\u00ecm \u0111o\u1ea1n con kh\u00e1c r\u1ed7ng c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t. Gi\u1edbi h\u1ea1n: \\(1 \\le n \\le 2 \\cdot 10^5\\), \\(\\lvert A_i \\rvert \\le 10^9\\)</p> <p>Tr\u01b0\u1edbc h\u1ebft, ta t\u1ea1o m\u1ea3ng \\(pref = S(0, A)\\) \u0111\u1ec3 l\u01b0u m\u1ea3ng c\u1ed9ng d\u1ed3n c\u1ee7a \\(A\\). Gi\u1ea3 s\u1eed v\u1edbi \\(r\\) c\u1ed1 \u0111\u1ecbnh, ta c\u1ea7n t\u00ecm \\(l &lt; r\\) sao cho t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong n\u1eeda kho\u1ea3ng \\([l, r)\\) \u0111\u1ea1t c\u1ef1c \u0111\u1ea1i. Ta vi\u1ebft l\u1ea1i b\u00e0i to\u00e1n theo c\u00f4ng th\u1ee9c sau:</p> \\[ \\begin{align*} ans_r &amp;= \\max_{0 \\, \\le \\, l \\, &lt; \\, r} (pref_r - pref_l) \\\\  &amp;= pref_r + \\max_{0 \\, \\le \\, l \\, &lt; \\, r} (- pref_l) \\\\  &amp;= pref_r - \\min_{0 \\, \\le \\, l \\, &lt; \\, r} pref_l \\\\  \\end{align*} \\] <p>N\u1ebfu ta ch\u1ea1y \\(r\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\), ta c\u00f3 th\u1ec3 c\u1eadp nh\u1eadt cu\u1ed1n chi\u1ebfu \\(\\min\\) theo t\u1eebng \\(pref_r\\); vi\u1ec7c n\u00e0y cho ph\u00e9p ch\u00fang ta t\u00ednh \\(ans_r\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(1)\\). \u0110\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(\\displaystyle \\max_{r} ans_r\\) v\u1edbi \\(1 \\le r \\le n\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch tr\u00ean l\u00e0 \\(\\mathcal{O}(n)\\). Code tham kh\u1ea3o:</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 200003;\nconst long long INF = 1e18;\n\nint n, a[MAXN];\nlong long prefSum[MAXN], prefMin[MAXN], ans = -INF;\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n    prefSum[0] = prefMin[0] = 0;\n    for (int i = 1; i &lt;= n; i++)\n      prefSum[i] = prefSum[i - 1] + a[i], prefMin[i] = min(prefMin[i - 1], prefSum[i]);\n    for (int i = 1; i &lt;= n; i++)\n        ans = max(ans, prefSum[i] - prefMin[i - 1]);\n    cout &lt;&lt; ans;\n}\n</code></pre> <p>L\u01b0u \u00fd, ta c\u00f3 th\u1ec3 thu g\u1ecdn <code>prefSum</code> v\u00e0 <code>prefMin</code> th\u00e0nh m\u1ed9t bi\u1ebfn duy nh\u1ea5t \u0111\u1ec3 t\u1ed1i \u01b0u b\u1ed9 nh\u1edb s\u1eed d\u1ee5ng. B\u00ean c\u1ea1nh c\u00e1ch gi\u1ea3i \u0111\u00e3 \u0111\u1ec1 c\u1eadp, b\u00e0i to\u00e1n n\u00e0y c\u0169ng c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p quy ho\u1ea1ch \u0111\u1ed9ng ho\u1eb7c chia \u0111\u1ec3 tr\u1ecb.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#ung-dung-cua-mang-hieu","title":"\u1ee8ng d\u1ee5ng c\u1ee7a m\u1ea3ng hi\u1ec7u","text":"<p>Gi\u1ea3 s\u1eed, ta c\u1ea7n c\u1ed9ng th\u00eam m\u1ed9t l\u01b0\u1ee3ng \\(k\\) v\u00e0o m\u1ed9t \u0111o\u1ea1n con \\([l, r]\\) c\u1ee7a m\u1ea3ng \\(A\\). Thay v\u00ec c\u1ed9ng l\u1ea7n l\u01b0\u1ee3t t\u1eebng ph\u1ea7n t\u1eed v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n)\\), ta c\u00f3 th\u1ec3 d\u1ef1ng m\u1ea3ng hi\u1ec7u \\(D(A)\\) v\u00e0 c\u1eadp nh\u1eadt tr\u00ean \u0111\u00f3 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\). D\u1ef1ng m\u1ea3ng hi\u1ec7u \\(D\\) t\u1eeb \\(A\\) l\u01b0u tr\u1eef ch\u00eanh l\u1ec7ch c\u1ee7a c\u00e1c c\u1eb7p ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 nhau, ta chia c\u00e1c tr\u01b0\u1eddng h\u1ee3p sau \u0111\u1ec3 nh\u1eadn x\u00e9t:</p> <ul> <li>N\u1ebfu \\(A_i\\) v\u00e0 \\(A_{i + 1}\\) \u0111\u1ec1u n\u1eb1m ngo\u00e0i \\([l, r]\\) \\(\\Rightarrow\\) Gi\u00e1 tr\u1ecb c\u1ee7a hai ph\u1ea7n t\u1eed kh\u00f4ng \u0111\u1ed5i \\(\\Rightarrow\\) \\(D_i\\) kh\u00f4ng \u0111\u1ed5i</li> <li>N\u1ebfu \\(A_i\\) v\u00e0 \\(A_{i + 1}\\) \u0111\u1ec1u n\u1eb1m trong \\([l, r]\\) \\(\\Rightarrow\\) Gi\u00e1 tr\u1ecb c\u1ee7a hai ph\u1ea7n t\u1eed \u0111\u1ec1u \u0111\u01b0\u1ee3c c\u1ed9ng m\u1ed9t l\u01b0\u1ee3ng \\(k\\) \\(\\Rightarrow\\) \\(D_i\\) kh\u00f4ng \u0111\u1ed5i</li> <li>N\u1ebfu ch\u1ec9 m\u1ed9t trong \\(A_i\\) ho\u1eb7c \\(A_{i + 1}\\) n\u1eb1m trong \\([l, r]\\) \\(\\Rightarrow\\) Gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed gi\u1eef nguy\u00ean c\u00f2n ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i \u0111\u01b0\u1ee3c c\u1ed9ng m\u1ed9t l\u01b0\u1ee3ng \\(k\\) \\(\\Rightarrow\\) \\(D_i\\) thay \u0111\u1ed5i</li> </ul> <p>Ch\u1ec9 duy nh\u1ea5t tr\u01b0\u1eddng h\u1ee3p cu\u1ed1i c\u00f9ng ta c\u1ea7n t\u00e1c \u0111\u1ed9ng tr\u1ef1c ti\u1ebfp l\u00ean \\(D\\). Nh\u1eadn th\u1ea5y, tr\u01b0\u1eddng h\u1ee3p cu\u1ed1i ch\u1ec9 th\u1ecfa khi \\(i = l - 1\\) ho\u1eb7c \\(i = r\\), ta ch\u1ec9 c\u1ea7n t\u00e1c \u0111\u1ed9ng tr\u1ef1c ti\u1ebfp l\u00ean \\(D_{l - 1}\\) v\u00e0 \\(D_{r}\\) \u0111\u1ec3 c\u1eadp nh\u1eadt \u0111o\u1ea1n. Sau khi c\u1eadp nh\u1eadt ho\u00e0n t\u1ea5t, ta \u00e1p d\u1ee5ng t\u00ednh ch\u1ea5t \\(S(D, A_0) = A\\) \u0111\u1ec3 l\u1ea5y gi\u00e1 tr\u1ecb cu\u1ed1i c\u00f9ng c\u1ee7a \\(A\\).</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#bai-toan-minh-hoa_1","title":"B\u00e0i to\u00e1n minh h\u1ecda","text":"<p>Ngu\u1ed3n: Codeforces - Karen and Coffee</p> <p>\u0110\u1ec1 b\u00e0i: Cho m\u1ed9t m\u1ea3ng \\(A\\) c\u00f3 v\u00f4 s\u1ed1 ph\u1ea7n t\u1eed mang gi\u00e1 tr\u1ecb \\(0\\). C\u00f3 \\(n\\) truy v\u1ea5n c\u1eadp nh\u1eadt, m\u1ed7i truy v\u1ea5n y\u00eau c\u1ea7u c\u1eadp nh\u1eadt to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed t\u1eeb \\(l_i\\) \u0111\u1ebfn \\(r_i\\) th\u00eam \\(1\\).</p> <p>Sau khi c\u1eadp nh\u1eadt xong, tr\u1ea3 l\u1eddi \\(q\\) c\u00e2u h\u1ecfi v\u1edbi n\u1ed9i dung sau: c\u00f3 bao nhi\u00eau v\u1ecb tr\u00ed \\(i\\) th\u1ecfa \\(a \\le i \\le b\\) v\u00e0 \\(A_i \\ge k\\)?</p> <p>Gi\u1edbi h\u1ea1n: \\(k \\le n \\le 2 \\cdot 10^5, q \\le 2 \\cdot 10^5, 1 \\le l_i \\le r_i \\le 2 \\cdot 10^5, 1 \\le a \\le b \\le 2 \\cdot 10^5\\)</p> <p>Do \u0111i\u1ec1u ki\u1ec7n \\(l_i, r_i, a, b\\) c\u1ee7a \u0111\u1ec1 b\u00e0i, m\u1ea3ng \\(A\\) s\u1ebd ch\u1ec9 l\u01b0u tr\u1eef t\u1ed1i \u0111a 200 ngh\u00ecn ph\u1ea7n t\u1eed, to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed n\u00e0y \u0111\u1ec1u c\u00f3 ch\u1ec9 s\u1ed1 d\u01b0\u01a1ng, v\u00ec th\u1ebf ta s\u1ebd \u0111\u01a1n thu\u1ea7n l\u01b0u 2 m\u1ea3ng n\u00e0y d\u01b0\u1edbi d\u1ea1ng m\u1ea3ng th\u01b0\u1eddng.</p> <p>G\u1ecdi \\(D\\) l\u00e0 m\u1ea3ng hi\u1ec7u c\u1ee7a \\(A\\). \u0110\u1ec3 x\u1eed l\u00fd truy v\u1ea5n c\u1eadp nh\u1eadt, ta ch\u1ec9 c\u1ea7n c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng \\(D\\) t\u1ea1i 2 bi\u00ean \\(l\\) v\u00e0 \\(r + 1\\) b\u1eb1ng c\u00e1ch t\u0103ng \\(D_l\\) th\u00eam \\(1\\) v\u00e0 tr\u1eeb \\(1\\) kh\u1ecfi \\(D_{r + 1}\\). Sau khi x\u1eed l\u00fd to\u00e0n b\u1ed9 truy v\u1ea5n c\u1eadp nh\u1eadt, ta s\u1eed d\u1ee5ng h\u1ec7 th\u1ee9c \\(S(D, 0) = A\\) \u0111\u1ec3 c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng \\(A\\).</p> <p>\u0110\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi, ta c\u00f3 th\u1ec3 h\u00ecnh dung m\u1ed7i ch\u1ec9 s\u1ed1 trong \u0111o\u1ea1n \\([a, b]\\) mang gi\u00e1 tr\u1ecb \\(1\\) n\u1ebfu th\u1ecfa \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec1 b\u00e0i v\u00e0 \\(0\\) n\u1ebfu kh\u00f4ng th\u1ecfa; s\u1ed1 ch\u1ec9 s\u1ed1 th\u1ecfa m\u00e3n c\u0169ng ch\u1ec9 l\u00e0 t\u1ed5ng c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed n\u1eb1m trong \u0111o\u1ea1n \\([a, b]\\). T\u1eeb t\u00ednh ch\u1ea5t n\u00e0y, ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng m\u1ea3ng c\u1ed9ng d\u1ed3n \u0111\u1ec3 tr\u1ea3 l\u1eddi nhau c\u00e2u h\u1ecfi trong \\(\\mathcal{O}(1)\\). Ta \u0111\u1eb7t m\u1ea3ng \\(A'\\) \u0111\u00e1nh d\u1ea5u gi\u00e1 tr\u1ecb \\(A_i\\) t\u01b0\u01a1ng \u1ee9ng c\u00f3 th\u1ecfa \u0111i\u1ec1u ki\u1ec7n \\(\\ge k\\) kh\u00f4ng, r\u1ed3i d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n \\(S\\) tr\u00ean \\(A'\\). \u0110\u00e1p \u00e1n c\u1ee7a m\u1ed7i c\u00e2u h\u1ecfi s\u1ebd l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p t\u00ednh \\(S_{b} - S_{a - 1}\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian v\u00e0 kh\u00f4ng gian c\u1ee7a c\u00e1ch n\u00e0y \u0111\u1ec1u l\u00e0 \\(\\mathcal{O}(n)\\). Code tham kh\u1ea3o:</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 200003;\n\nint n, k, q, d[MAXN], a[MAXN], s[MAXN];\n\nvoid update(int l, int r) {\n    ++d[l], --d[r + 1];\n}\n\nvoid buildPrefixSum() {\n    a[0] = s[0] = 0;\n    for (int i = 1; i &lt; MAXN; i++) {\n        a[i] = a[i - 1] + d[i];\n        s[i] = s[i - 1] + (a[i] &gt;= k);\n    }\n}\n\nint query(int a, int b) {\n    return s[b] - s[a - 1];\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k &gt;&gt; q;\n    for (int i = 0; i &lt; n; i++) {\n        int l, r; cin &gt;&gt; l &gt;&gt; r;\n        update(l, r);\n    }\n    buildPrefixSum();\n    for (int i = 0; i &lt; q; i++) {\n        int a, b; cin &gt;&gt; a &gt;&gt; b;\n        cout &lt;&lt; query(a, b) &lt;&lt; endl;\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mo-rong-sang-mang-nhieu-chieu","title":"M\u1edf r\u1ed9ng sang m\u1ea3ng nhi\u1ec1u chi\u1ec1u","text":"<p>Ta c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng m\u1ea3ng c\u1ed9ng d\u1ed3n v\u00e0 m\u1ea3ng hi\u1ec7u \u0111\u1ec3 thao t\u00e1c tr\u00ean m\u1ea3ng nhi\u1ec1u chi\u1ec1u.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-cong-don-hai-chieu","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n hai chi\u1ec1u","text":"<p>Cho m\u1ea3ng hai chi\u1ec1u \\(A\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(m \\times n\\) (ch\u1ec9 s\u1ed1 h\u00e0ng v\u00e0 c\u1ed9t \u0111\u1ea7u ti\u00ean \u0111\u1ec1u l\u00e0 1), m\u1ea3ng c\u1ed9ng d\u1ed3n \\(S(A)\\) \u0111\u01b0\u1ee3c d\u1ef1ng theo c\u00f4ng th\u1ee9c sau: \\(\\(S_{i,j}=\\displaystyle \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i,t_j}\\)\\)</p> <p>C\u00e1c ph\u1ea7n t\u1eed trong m\u1ea3ng c\u1ed9ng d\u1ed3n l\u01b0u t\u1ed5ng c\u1ee7a to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed ch\u1ee9a trong h\u00ecnh ch\u1eef nh\u1eadt \\([1, i] \\times [1, j]\\). \u0110i\u1ec3m kh\u00e1c bi\u1ec7t so v\u1edbi m\u1ea3ng c\u1ed9ng d\u1ed3n 1 chi\u1ec1u \u1edf \u0111\u00e2y l\u00e0 s\u1ef1 l\u01b0\u1ee3c b\u1ecf c\u1ee7a h\u1eb1ng s\u1ed1 \\(C\\), ta ng\u1ea7m quy \u01b0\u1edbc: \\(S_{0,x} = S_{y,0} = 0\\) v\u1edbi \\(x, y\\) nguy\u00ean kh\u00f4ng \u00e2m khi d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n.</p> <p></p> <p>T\u1eeb c\u00f4ng th\u1ee9c quy \u01b0\u1edbc tr\u00ean, ta th\u1ef1c hi\u1ec7n bi\u1ebfn \u0111\u1ed5i sau \u0111\u1ec3 d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n:</p> \\[ \\begin{alignat*}{2} \\displaystyle S_{i,j} &amp; =\\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i,t_j}\\\\ &amp;=\\sum_{t_i\\,=\\,1}^{i - 1} \\sum_{t_j\\,=\\,1}^{j - 1} A_{t_i,t_j} + \\sum_{t_i\\,=\\,1}^{i - 1} A_{t_i,j} + \\sum_{t_j\\,=\\,1}^{j - 1} A_{i,t_j} + A_{i, j}\\\\ &amp;=\\sum_{t_i\\,=\\,1}^{i - 1} \\sum_{t_j\\,=\\,1}^{j - 1} A_{t_i,t_j} + \\sum_{t_i\\,=\\,1}^{i - 1} A_{t_i,j} + \\sum_{t_j\\,=\\,1}^{j - 1} A_{i,t_j} + A_{i, j}\\\\ &amp;=\\sum_{t_i\\,=\\,1}^{i - 1} \\sum_{t_j\\,=\\,1}^{j - 1} A_{t_i,t_j} + \\Bigg(\\sum_{t_i\\,=\\,1}^{i - 1} \\sum_{t_j\\,=\\,1}^{j} A_{t_i,t_j} - \\sum_{t_i\\,=\\,1}^{i - 1} \\sum_{t_j\\,=\\,1}^{j - 1} A_{t_i,t_j}\\Bigg) + \\Bigg(\\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j - 1} A_{t_i,t_j} - \\sum_{t_i\\,=\\,1}^{i - 1} \\sum_{t_j\\,=\\,1}^{j - 1} A_{t_i,t_j}\\Bigg) + A_{i, j}\\\\ &amp;= S_{i-1,j-1} + S_{i-1,j} - S_{i-1,j-1} + S_{i,j-1} - S_{i-1,j-1} + A_{i, j} \\\\ &amp;= S_{i-1,j} + S_{i,j-1} - S_{i-1,j-1} + A_{i, j} \\end{alignat*} \\] <p>\u0110\u1ec3 h\u00ecnh dung r\u00f5 h\u01a1n c\u00f4ng th\u1ee9c bi\u1ebfn \u0111\u1ed5i tr\u00ean, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o h\u00ecnh \u1ea3nh d\u01b0\u1edbi:</p> C\u00e1c ph\u1ea7n t\u1eed \\(A_i\\) t\u00f4 m\u00e0u xanh nh\u1ea1t \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u 1 l\u1ea7n, t\u00f4 m\u00e0u xanh \u0111\u1eadm \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u t\u1edbi 2 l\u1ea7n <p>Code d\u01b0\u1edbi \u0111\u00e2y d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n hai chi\u1ec1u:</p> <pre><code>vector&lt; vector&lt;int&gt; &gt; build2DPrefixSum(const vector&lt; vector&lt;int&gt; &gt;&amp; a) {\n    int m = (int)a.size(), n = (int)a[0].size();\n\n    vector&lt; vector&lt;int&gt; &gt; prefixSum(m + 1, vector&lt;int&gt; (n + 1, 0));\n\n    for (int i = 1; i &lt;= m; i++)\n        for (int j = 1; j &lt;= n; j++)\n            prefixSum[i][j] = prefixSum[i - 1][j] + prefixSum[i][j - 1] - prefixSum[i - 1][j - 1] + a[i - 1][j - 1]; // ta truy c\u1eadp a(i - 1, j - 1) do m\u1ea3ng A l\u00e0 0-indexed\n    return prefixSum;\n}\n</code></pre> <p>\u0110\u1ec3 t\u00ednh t\u1ed5ng c\u1ee7a to\u00e0n b\u1ed9 c\u00e1c ph\u1ea7n t\u1eed n\u1eb1m trong h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 g\u00f3c tr\u00e1i tr\u00ean l\u00e0 \\((x_1, y_1)\\) v\u00e0 g\u00f3c ph\u1ea3i d\u01b0\u1edbi \\((x_2, y_2)\\), ta bi\u1ebfn \u0111\u1ed5i t\u01b0\u01a1ng t\u1ef1 \u0111\u1ec3 thu \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c t\u00ednh sau:</p> \\[ \\displaystyle \\sum_{i = x_1}^{x_2} \\sum_{j = y_1}^{y_2} A_{i, j} = S_{x_2,\\, y_2} - S_{x_1 - 1,\\, y_2} - S_{x_2,\\, y_1 - 1} + S_{x_1 - 1,\\, y_1 - 1} \\] <p>Ph\u1ea7n ch\u1ee9ng minh c\u00f4ng th\u1ee9c tr\u00ean xin \u0111\u01b0\u1ee3c nh\u01b0\u1eddng l\u1ea1i cho b\u1ea1n \u0111\u1ecdc. H\u00ecnh \u1ea3nh d\u01b0\u1edbi minh h\u1ecda v\u00ec sao c\u00f4ng th\u1ee9c tr\u00ean cho k\u1ebft qu\u1ea3 ch\u00ednh x\u00e1c:</p> C\u00e1c ph\u1ea7n t\u1eed \\(A_i\\) t\u00f4 m\u00e0u \u0111\u1ecf b\u1ecb tr\u1eeb t\u1edbi 2 l\u1ea7n, v\u00ec th\u1ebf c\u1ea7n ph\u1ea3i c\u1ed9ng b\u00f9 l\u1ea1i"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-cong-don-ba-chieu","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n ba chi\u1ec1u","text":"<p>Gi\u1ea3 s\u1eed ta c\u00f3 m\u1ea3ng \\(A\\) trong kh\u00f4ng gian 3 chi\u1ec1u v\u1edbi k\u00edch th\u01b0\u1edbc \\(m \\times n \\times p\\), ta d\u1ef1ng m\u1ea3ng \\(S(A)\\) theo quy t\u1eafc sau: \\(\\(S_{i, j, k}=\\displaystyle \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} \\sum_{t_k\\,=\\,1}^{k} A_{t_i,t_j,t_k}\\)\\)</p> <p>C\u00f4ng th\u1ee9c sau \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 d\u1ef1ng m\u1ea3ng c\u1ed9ng d\u1ed3n 3 chi\u1ec1u:</p> \\[ \\begin{align*} \\displaystyle S_{t_i,t_j,t_k}&amp;=A_{t_i,t_j,t_k} + S_{t_i-1,t_j,t_k} + S_{t_i,t_j-1,t_k} + S_{t_i,t_j,t_k-1} \\\\ &amp; \\hspace{1em}- S_{t_i-1,t_j-1,t_k} - S_{t_i-1,t_j,t_k-1} - S_{t_i,t_j-1,t_k-1} + S_{t_i-1,t_j-1,t_k-1} \\end{align*} \\] <p>T\u01b0\u01a1ng t\u1ef1, ta t\u00ednh t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong kh\u00f4ng gian \\([x_1, x_2] \\times [y_1, y_2] \\times [z_1, z_2]\\) qua c\u00f4ng th\u1ee9c sau:</p> \\[ \\begin{align*} \\displaystyle \\sum_{i=x_1}^{x_2}\\sum_{j=y_1}^{y_2}\\sum_{k=z_1}^{z_2} A_{i, j, k} &amp;=S_{x_2,y_2,z_2}-S_{x_1-1,y_2,z_2}-S_{x_2,y_1-1,z_2}-S_{x_2,y_2,z_1-1}\\\\ &amp; \\, + S_{x_1-1,y_1-1,z_2} + S_{x_1-1,y_2,z_1-1} + S_{x_2,y_1-1,z_1-1} - S_{x_1-1,y_1-1,z_1-1} \\end{align*} \\] <p>Hai c\u00f4ng th\u1ee9c tr\u00ean \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng th\u00f4ng qua ph\u01b0\u01a1ng ph\u00e1p bao h\u00e0m - lo\u1ea1i tr\u1eeb. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft Bao h\u00e0m - Lo\u1ea1i tr\u1eeb tr\u00ean VNOI Wiki \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n l\u00fd do c\u00f3 \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c tr\u00ean.</p> <p>Ta c\u0169ng c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u1ec3 m\u1edf r\u1ed9ng cho c\u00e1c m\u1ea3ng \\(n\\)-chi\u1ec1u. Tuy nhi\u00ean, do s\u1ed1 l\u01b0\u1ee3ng b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn m\u1ea3ng trong kh\u00f4ng gian t\u1eeb 4 chi\u1ec1u tr\u1edf l\u00ean l\u00e0 c\u1ef1c hi\u1ebfm, m\u1ea3ng c\u1ed9ng d\u1ed3n trong kh\u00f4ng gian n\u00e0y g\u1ea7n nh\u01b0 kh\u00f4ng c\u00f3 \u1ee9ng d\u1ee5ng th\u1ef1c ti\u1ec5n. V\u00ec th\u1ebf, b\u00e0i vi\u1ebft xin gi\u1edbi h\u1ea1n l\u1ea1i t\u1ea1i m\u1ea3ng c\u1ed9ng d\u1ed3n trong kh\u00f4ng gian 3 chi\u1ec1u tr\u1edf xu\u1ed1ng.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-hieu-hai-chieu","title":"M\u1ea3ng hi\u1ec7u hai chi\u1ec1u","text":"<p>Tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u x\u00e2y d\u1ef1ng m\u1ea3ng hi\u1ec7u 2 chi\u1ec1u, ta c\u1ea7n \u0111\u1ecbnh ngh\u0129a th\u00eam 2 kh\u00e1i ni\u1ec7m sau cho m\u1ed9t m\u1ea3ng \\(A\\) hai chi\u1ec1u c\u00f3 k\u00edch th\u01b0\u1edbc \\(m \\times n\\):</p> <ul> <li>\\(D_{h\u00e0ng}(A)\\) g\u1ed3m \\(m\\) h\u00e0ng, h\u00e0ng th\u1ee9 \\(i\\) bi\u1ec3u th\u1ecb m\u1ea3ng hi\u1ec7u c\u1ee7a m\u1ea3ng g\u1ed3m to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed n\u1eb1m tr\u00ean h\u00e0ng \u0111\u00f3.</li> <li>\\(D_{c\u1ed9t}(A)\\) g\u1ed3m \\(n\\) c\u1ed9t, c\u1ed9t th\u1ee9 \\(i\\) bi\u1ec3u th\u1ecb m\u1ea3ng hi\u1ec7u c\u1ee7a m\u1ea3ng g\u1ed3m to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed n\u1eb1m tr\u00ean c\u1ed9t \u0111\u00f3.</li> </ul> <p>Trong kh\u00f4ng gian 1 chi\u1ec1u, ta th\u1ea5y \u0111\u01b0\u1ee3c \\(S(D(A)) = A\\). \u0110\u1ec3 t\u00ednh ch\u1ea5t n\u00e0y \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho m\u1ea3ng 2 chi\u1ec1u, ta t\u1ea1o m\u1ea3ng \\(A'\\) th\u1ecfa: \\(A_{i, j}^{'}= A_{i, j}\\) v\u1edbi \\(i, j\\) d\u01b0\u01a1ng v\u00e0 \\(A_{i, j} = 0\\) v\u1edbi \\(i = 0\\) ho\u1eb7c \\(j = 0\\). M\u1ea3ng \\(A'\\) n\u00e0y \u0111\u00e1nh s\u1ed1 theo d\u1ea1ng 0-indexed v\u00e0 c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 \\((m + 1) \\times (n + 1)\\). Khi n\u00e0y, m\u1ea3ng hi\u1ec7u c\u1ee7a \\(A\\) s\u1ebd l\u00e0 m\u1ea3ng \\(D\\) th\u1ecfa \\(S(D) = A'\\).</p> <p>\u0110\u1eb7t \\(D = D_{c\u1ed9t}(D_{h\u00e0ng}(A))\\), khi n\u00e0y, ta c\u00f3:</p> \\[ \\begin{align*} D_{i, j} &amp;= [D_{c\u1ed9t}(D_{h\u00e0ng}(A))]_{i, j} \\\\ &amp;= [D_{h\u00e0ng}(A_i)]_j - [D_{h\u00e0ng}(A_{i - 1})]_j \\\\ &amp;= (A_{i, j} - A_{i, j - 1}) - (A_{i - 1, j} - A_{i - 1, j - 1}) \\\\ &amp;= A_{i, j} - A_{i, j - 1} - A_{i - 1, j} + A_{i - 1, j - 1} \\end{align*} \\] <p>M\u1ea3ng \\(S(D)\\) c\u00f3 gi\u00e1 tr\u1ecb nh\u01b0 sau:</p> \\[ \\begin{align*} \\displaystyle S(D)_{i,j} &amp;= \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} D_{t_i,t_j}\\\\ &amp;=\\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} (A_{t_i, t_j} - A_{t_i, t_j - 1} - A_{t_i - 1, t_j} + A_{t_i - 1, t_j - 1})\\\\ &amp;=\\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i, t_j} - \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i, t_j - 1} - \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i - 1, t_j} + \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i - 1, t_j - 1}\\\\ &amp;=\\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j} A_{t_i, t_j} - \\sum_{t_i\\,=\\,1}^{i} \\sum_{t_j\\,=\\,1}^{j-1} A_{t_i, t_j} - \\sum_{t_i\\,=\\,1}^{i-1} \\sum_{t_j\\,=\\,1}^{j} A_{t_i, t_j} + \\sum_{t_i\\,=\\,1}^{i-1} \\sum_{t_j\\,=\\,1}^{j-1} A_{t_i, t_j}\\\\ &amp;= S_{i,j} - S_{i-1,j} - S_{i,j-1} + S_{i-1,j-1} \\\\ &amp;= {A'}_{i, j} \\\\ \\end{align*} \\] <p>Ta k\u1ebft lu\u1eadn r\u1eb1ng \\(S(D) = A'\\), m\u1ea3ng \\(D\\) ta v\u1eeba d\u1ef1ng ch\u00ednh l\u00e0 m\u1ea3ng hi\u1ec7u c\u1ee7a \\(A\\).</p> <p></p> <p>T\u1eeb c\u00e1c quan s\u00e1t tr\u00ean, ta c\u00f3 th\u1ec3 d\u1ef1ng m\u1ea3ng hi\u1ec7u c\u1ee7a \\(A\\) b\u1eb1ng hai c\u00e1ch:</p> <ul> <li>S\u1eed d\u1ee5ng tr\u1ef1c ti\u1ebfp c\u00f4ng th\u1ee9c:   \\(D_{i, j} = A_{i, j} - A_{i, j - 1} - A_{i - 1, j} + A_{i - 1, j - 1}\\)</li> <li>T\u00ednh \\(D_{h\u00e0ng}\\) cho t\u1eebng h\u00e0ng c\u1ee7a \\(A\\) v\u00e0 g\u00e1n k\u1ebft qu\u1ea3 v\u00e0o \\(A'\\), sau \u0111\u00f3 t\u00ednh \\(D_{c\u1ed9t}\\) cho t\u1eebng c\u1ed9t c\u1ee7a \\(A'\\).</li> </ul> <p>Code d\u01b0\u1edbi \u0111\u00e2y d\u1ef1ng m\u1ea3ng hi\u1ec7u 2 chi\u1ec1u \\(D\\) theo \\(A\\) theo c\u00e1ch th\u1ee9 nh\u1ea5t:</p> <pre><code>vector&lt; vector&lt;int&gt; &gt; build2DDifferenceArray(const vector&lt; vector&lt;int&gt; &gt;&amp; a) {\n    int m = (int)a.size(), n = (int)a[0].size();\n    vector&lt; vector&lt;int&gt; &gt; differenceArray(m, vector&lt;int&gt;(n, 0));\n\n    for (int i = 0; i &lt; m; i++) {\n        for (int j = 0; j &lt; n; j++) {\n            differenceArray[i][j] = a[i][j];\n            if (i &gt; 0) differenceArray[i][j] -= a[i - 1][j];\n            if (j &gt; 0) differenceArray[i][j] -= a[i][j - 1];\n            if (i &gt; 0 &amp;&amp; j &gt; 0) differenceArray[i][j] += a[i - 1][j - 1];\n        }\n    }\n\n    return differenceArray;\n}\n</code></pre> <p>Quay l\u1ea1i b\u00e0i to\u00e1n c\u0169 trong kh\u00f4ng gian 1 chi\u1ec1u: l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 ta t\u0103ng th\u00eam m\u1ed9t l\u01b0\u1ee3ng \\(k\\) l\u00ean to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed trong l\u01b0\u1edbi \\([r_1, r_2] \\times [c_1, c_2]\\) m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3? Khi ta t\u00ednh \\(D_{h\u00e0ng}\\) cho t\u1eebng h\u00e0ng c\u1ee7a \\(A\\), ta nh\u1eadn th\u1ea5y ch\u1ec9 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u1edf bi\u00ean tr\u00e1i (t\u1ea1i \\(c_1\\)) v\u00e0 bi\u00ean ph\u1ea3i (t\u1ea1i \\(c_2 + 1\\)). Ti\u1ebfp t\u1ee5c t\u00ednh \\(D_{c\u1ed9t}\\) cho t\u1eebng c\u1ed9t c\u1ee7a m\u1ea3ng \\(D_{h\u00e0ng}(A)\\), quan s\u00e1t t\u01b0\u01a1ng t\u1ef1 cho th\u1ea5y ch\u1ec9 ph\u1ea7n t\u1eed t\u1ea1i \\(r_1\\) v\u00e0 \\(r_2 + 1\\) s\u1ebd b\u1ecb t\u00e1c \u0111\u1ed9ng b\u1edfi thao t\u00e1c c\u1eadp nh\u1eadt n\u00e0y.</p> <p>T\u1eeb nh\u1eadn x\u00e9t tr\u00ean, ta th\u1ea5y ch\u1ec9 c\u00f3 4 ph\u1ea7n t\u1eed c\u1ee7a \\(D(A)\\) s\u1ebd b\u1ecb t\u00e1c \u0111\u1ed9ng b\u1edfi thao t\u00e1c n\u00e0y l\u00e0 t\u1ecda \u0111\u1ed9 \\((r_1, c_1)\\), \\((r_1, c_2 + 1)\\), \\((r_2 + 1, c_1)\\) v\u00e0 \\((r_2 + 1, c_2 + 1)\\) - trong \u0111\u00f3, ph\u1ea7n t\u1eed t\u1ea1i \\((r_1, c_1)\\) v\u00e0 \\((r_2 + 1, c_2 + 1)\\) t\u0103ng th\u00eam l\u01b0\u1ee3ng \\(k\\), ph\u1ea7n t\u1eed t\u1ea1i \\((r_1, c_2 + 1)\\) v\u00e0 \\((r_2 + 1, c_1)\\) tr\u1eeb \u0111i l\u01b0\u1ee3ng \\(k\\). Ta d\u1ec5 d\u00e0ng c\u1eadp nh\u1eadt \u0111o\u1ea1n tr\u00ean m\u1ea3ng hai chi\u1ec1u v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(1)\\).</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-hieu-ba-chieu","title":"M\u1ea3ng hi\u1ec7u ba chi\u1ec1u","text":"<p>C\u0169ng nh\u01b0 m\u1ea3ng c\u1ed9ng d\u1ed3n, ta c\u0169ng c\u00f3 th\u1ec3 d\u1ef1ng m\u1ea3ng hi\u1ec7u c\u1ee7a c\u00e1c m\u1ea3ng trong kh\u00f4ng gian 3 chi\u1ec1u. T\u01b0\u01a1ng t\u1ef1, n\u1ebfu ta coi \\(D\\) l\u00e0 m\u1ea3ng sinh ra m\u1ea3ng c\u1ed9ng d\u1ed3n \\(A\\), ta c\u00f3 c\u00f4ng th\u1ee9c d\u1ef1ng \\(D\\) sau:</p> \\[ \\begin{align*} D_{i,j,k} &amp;= A_{i,j,k} - A_{i-1,j,k} - A_{i,j-1,k} - A_{i,j,k-1} \\\\ &amp; \\, + A_{i-1,j-1,k} + A_{i-1,j,k-1} + A_{i,j-1,k-1} - A_{i-1,j-1,k-1} \\end{align*} \\] <p>\u0110\u1ec3 x\u1eed l\u00fd truy v\u1ea5n c\u1eadp nh\u1eadt to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed trong kh\u00f4ng gian \\([x_1, x_2] \\times [y_1, y_2] \\times [z_1, z_2]\\), ta c\u1ea7n c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb t\u1ea1i \\(8\\) v\u1ecb tr\u00ed, c\u00e1c v\u1ecb tr\u00ed \u0111\u1ec1u n\u1eb1m t\u1ea1i bi\u00ean c\u1ee7a kh\u00f4ng gian. N\u1ebfu ta coi m\u1ea3ng \\(n\\)-chi\u1ec1u nh\u01b0 m\u1ed9t h\u00ecnh l\u1eadp ph\u01b0\u01a1ng ch\u1ee9a s\u1ed1, v\u1ecb tr\u00ed c\u1ea7n c\u1eadp nh\u1eadt s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh c\u1ee7a h\u00ecnh l\u1eadp ph\u01b0\u01a1ng \u0111\u1ea1i di\u1ec7n cho kh\u00f4ng gian c\u1ea7n c\u1eadp nh\u1eadt. Ta s\u1ebd t\u00f4 xen k\u1ebd c\u00e1c \u0111\u1ec9nh n\u00e0y theo hai m\u00e0u \u0111en - tr\u1eafng, \u0111\u1ec9nh c\u00f3 t\u1ecda \u0111\u1ed9 \\((x_1, y_1, z_1)\\) \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u tr\u1eafng. Ph\u1ea7n t\u1eed \\(D\\) \u1ee9ng v\u1edbi c\u00e1c \u0111\u1ec9nh tr\u1eafng \u0111\u01b0\u1ee3c c\u1ed9ng th\u00eam l\u01b0\u1ee3ng \\(k\\), ng\u01b0\u1ee3c l\u1ea1i, ph\u1ea7n t\u1eed \u1ee9ng v\u1edbi \u0111\u1ec9nh \u0111en th\u00ec tr\u1eeb \u0111i l\u01b0\u1ee3ng \\(k\\).</p> <p></p> <p>H\u00ecnh tr\u00ean minh h\u1ecda nh\u1eefng v\u1ecb tr\u00ed m\u00e0 ta c\u1ea7n c\u1eadp nh\u1eadt tr\u00ean m\u1ea3ng hi\u1ec7u. T\u01b0\u01a1ng t\u1ef1 m\u1ea3ng c\u1ed9ng d\u1ed3n, ph\u01b0\u01a1ng ph\u00e1p bao h\u00e0m - lo\u1ea1i tr\u1eeb \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng \u0111\u1ec3 \u0111\u01b0a \u0111\u1ebfn k\u1ebft lu\u1eadn n\u00e0y.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mo-rong-sang-mang-ong","title":"M\u1edf r\u1ed9ng sang m\u1ea3ng \u0111\u1ed9ng","text":"<p>Trong c\u00e1c v\u00ed d\u1ee5 \u0111\u00e3 \u0111\u1ec1 c\u1eadp, c\u00e1c b\u00e0i to\u00e1n ch\u00fang ta ph\u1ea3i gi\u1ea3i \u0111\u1ec1u kh\u00f4ng c\u00f3 truy v\u1ea5n c\u1eadp nh\u1eadt ho\u1eb7c to\u00e0n b\u1ed9 truy v\u1ea5n c\u1eadp nh\u1eadt \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u01b0\u1edbc truy v\u1ea5n h\u1ecfi. Tuy nhi\u00ean, trong m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n y\u00eau c\u1ea7u ph\u1ea3i th\u1ef1c hi\u1ec7n xen k\u1ebd hai lo\u1ea1i truy v\u1ea5n n\u00e0y, ta c\u1ea7n s\u1eed d\u1ee5ng c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1ec3 gi\u1ea3i quy\u1ebft hi\u1ec7u qu\u1ea3 c\u00e1c truy v\u1ea5n n\u00e0y.</p> <p>C\u00f3 hai d\u1ea1ng b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn m\u1ea3ng c\u1ed9ng d\u1ed3n v\u00e0 m\u1ea3ng hi\u1ec7u:</p> <ul> <li>D\u1ea1ng 1: C\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a \\(A_i\\) ho\u1eb7c t\u00ednh t\u1ed5ng c\u1ee7a \\(i\\) ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean.</li> <li>D\u1ea1ng 2: C\u1eadp nh\u1eadt to\u00e0n b\u1ed9 gi\u00e1 tr\u1ecb t\u1eeb \\(A_i\\) \u0111\u1ebfn \\(A_j\\) \\((i \\le j)\\) ho\u1eb7c cho bi\u1ebft gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i c\u1ee7a \\(A_i\\).</li> </ul> <p>N\u1ebfu b\u00e0i to\u00e1n ch\u1ec9 x\u1eed l\u00fd m\u1ed9t trong hai d\u1ea1ng n\u00f3i tr\u00ean, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Binary Indexed Tree \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c truy v\u1ea5n tr\u00ean. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a t\u1eebng truy v\u1ea5n s\u1ebd ph\u1ee5 thu\u1ed9c v\u00e0o s\u1ed1 chi\u1ec1u c\u1ee7a m\u1ea3ng, th\u00ed d\u1ee5, thao t\u00e1c tr\u00ean m\u1ea3ng 1D s\u1ebd cho \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log n)\\) c\u00f2n tr\u00ean m\u1ea3ng 2D s\u1ebd l\u00e0 \\(\\mathcal{O}(\\log^2 n)\\).</p> <p>Trong m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n y\u00eau c\u1ea7u x\u1eed l\u00fd k\u1ebft h\u1ee3p 2 d\u1ea1ng (c\u1eadp nh\u1eadt \u0111o\u1ea1n v\u00e0 t\u00ednh t\u1ed5ng \u0111o\u1ea1n), ta th\u01b0\u1eddng \u00e1p d\u1ee5ng Segment Tree c\u00f3 lazy propagation (c\u1eadp nh\u1eadt l\u01b0\u1eddi). M\u1eb7c d\u00f9 c\u00f3 chung \u0111\u1ed9 ph\u1ee9c t\u1ea1p, c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y th\u01b0\u1eddng kh\u00f3 h\u01a1n, c\u00f3 th\u1eddi gian ch\u1ea1y l\u00e2u h\u01a1n v\u00e0 d\u00f9ng nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n so v\u1edbi c\u00e0i \u0111\u1eb7t Binary Indexed Tree. N\u1ebfu ta l\u00e0m vi\u1ec7c tr\u00ean m\u1ea3ng 1 chi\u1ec1u, ta c\u0169ng c\u00f3 th\u1ec3 bi\u1ebfn \u0111\u1ed5i h\u1ec7 th\u1ee9c gi\u1eefa m\u1ea3ng hi\u1ec7u v\u00e0 m\u1ea3ng c\u1ed9ng d\u1ed3n \u0111\u1ec3 c\u00e0i \u0111\u1eb7t tr\u1ef1c ti\u1ebfp BIT l\u00e0m vi\u1ec7c tr\u00ean c\u00e1c truy v\u1ea5n n\u00e0y. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#bai-tap","title":"B\u00e0i t\u1eadp","text":""},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-cong-don-1-chieu","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n 1 chi\u1ec1u","text":"<p>VNOJ - NKSEQ</p> <p>CSES - Subarray Sums II</p> <p>CSES - Subarray Divisibility</p> <p>Codeforces - Good Subarrays</p> <p>Codechef - XXOR</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-hieu-1-chieu","title":"M\u1ea3ng hi\u1ec7u 1 chi\u1ec1u","text":"<p>Codeforces - Little Girl and Maximum Sum</p> <p>Codeforces - Greg and Array</p> <p>Codeforces Gym - 319055E (l\u01b0u \u00fd: \u0111\u1ec3 xem n\u1ed9i dung b\u00e0i t\u1eadp c\u1ea7n tham gia nh\u00f3m t\u1ea1i link \u0111\u00e2y)</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-cong-don-nhieu-chieu","title":"M\u1ea3ng c\u1ed9ng d\u1ed3n nhi\u1ec1u chi\u1ec1u","text":"<p>CSES - Forest Queries</p> <p>USACO - The Lazy Cow</p> <p>USACO - Painting the Barn</p> <p>VNOJ - MAXCUB</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#mang-hieu-nhieu-chieu","title":"M\u1ea3ng hi\u1ec7u nhi\u1ec1u chi\u1ec1u","text":"<p>Codechef - COW3E</p> <p>WCIPEG - CAKE</p> <p>VNOJ c\u00f3 ph\u00e2n lo\u1ea1i ri\u00eang c\u00e1c b\u00e0i t\u1eadp v\u1ec1 m\u1ea3ng c\u1ed9ng d\u1ed3n, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/data-structures/prefix-sum-and-difference-array/#references","title":"References","text":"<p>WCIPEG - Prefix sum array and difference array</p> <p>cppreference.com - partial_sum</p> <p>cppreference.com - adjacent_difference</p>"},{"location":"algo/data-structures/rmq/","title":"Range Minimum Query (RMQ) - Sparse Table","text":"<p>T\u00e1c gi\u1ea3:  - L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM</p> <p>Reviewer: - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - Nguy\u1ec5n Anh B\u1ea3o - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i</p>"},{"location":"algo/data-structures/rmq/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>B\u00e0i to\u00e1n \\(RMQ\\) \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u nh\u01b0 sau: - Cho m\u1ea3ng \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed v\u00e0 \\(Q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng \\((l, r)\\). V\u1edbi m\u1ed7i truy v\u1ea5n, in ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong m\u1ea3ng \\(A\\) t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\). V\u00ed d\u1ee5: \\(A = [4, 6, 1, 5, 7, 3]\\rightarrow min[2\\ldots5] = min(6,1,5,7)=1\\)</p> <p>B\u00e0i to\u00e1n \\(RMQ\\) c\u00f3 nhi\u1ec1u c\u00e1ch gi\u1ea3i, nh\u01b0ng \\(2\\) c\u00e1ch ph\u1ed5 bi\u1ebfn nh\u1ea5t l\u00e0: - Sparse Table: \\(\\mathcal{O}(N\\log{N})\\) ti\u1ec1n x\u1eed l\u00fd, \\(\\mathcal{O}(1)\\) m\u1ed7i truy v\u1ea5n. - Segment Tree: \\(\\mathcal{O}(N)\\) ti\u1ec1n x\u1eed l\u00fd, \\(\\mathcal{O}(\\log{N})\\) m\u1ed7i truy v\u1ea5n.</p> <p>S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa \\(2\\) c\u00e1ch gi\u1ea3i n\u00e0y n\u1eb1m \u1edf ch\u1ed7, Segment Tree c\u00f3 th\u1ec3 x\u1eed l\u00fd \u0111\u01b0\u1ee3c ho\u1ea1t \u0111\u1ed9ng s\u1eeda \u0111\u1ed5i xen k\u1ebd v\u1edbi c\u00e1c truy v\u1ea5n, c\u00f2n Sparse Table th\u00ec kh\u00f4ng.</p> <p>Nh\u01b0ng Sparse Table kh\u00f4ng \"ph\u1ebf\", s\u1ee9c m\u1ea1nh c\u1ee7a Sparse Table n\u1eb1m \u1edf kh\u1ea3 n\u0103ng truy v\u1ea5n trong \\(\\mathcal{O}(1)\\) khi c\u00e1c ph\u00e9p to\u00e1n tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t Idempotence: \"m\u1ed9t gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 xu\u1ea5t hi\u1ec7n nhi\u1ec1u l\u1ea7n nh\u01b0ng kh\u00f4ng l\u00e0m thay \u0111\u1ed5i k\u1ebft qu\u1ea3 ph\u00e9p to\u00e1n\", v\u00ed d\u1ee5 nh\u01b0 \\(min,max,gcd,lcm,and,or,\\ldots\\)</p> <p>V\u00e0 Sparse Table c\u0169ng c\u00f3 kh\u1ea3 n\u0103ng truy v\u1ea5n trong \\(\\mathcal{O}(\\log{N})\\) n\u1ebfu ph\u00e9p to\u00e1n kh\u00f4ng tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t Idempotence (v\u00ed d\u1ee5 nh\u01b0 b\u00e0i to\u00e1n Range Sum Query \u1edf b\u00ean d\u01b0\u1edbi).</p> <p>L\u01b0u \u00fd: Trong su\u1ed1t b\u00e0i vi\u1ebft m\u00ecnh d\u00f9ng <code>__lg(x)</code> \u0111\u1ec3 t\u00ednh \\(\\log_2\\) c\u1ee7a 1 s\u1ed1 v\u00ec ta c\u1ea7n gi\u00e1 tr\u1ecb nguy\u00ean, c\u00f2n <code>log2(x)</code> th\u00ec tr\u1ea3 v\u1ec1 s\u1ed1 th\u1ef1c. N\u1ebfu kh\u00f4ng mu\u1ed1n d\u00f9ng h\u00e0m th\u00ec c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc nh\u01b0 sau: <pre><code>int lg2[N];\nvoid BuildLog2Array() {\n    lg2[1] = 0;\n    for (int i = 2; i &lt; N; ++i)\n        lg2[i] = lg2[i / 2] + 1;\n}\n</code></pre></p>"},{"location":"algo/data-structures/rmq/#sparse-table","title":"Sparse Table","text":"<p>\u0110\u1ea7u ti\u00ean, ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 \u00fd t\u01b0\u1edfng \u0111\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian truy v\u1ea5n t\u1eeb \\(\\mathcal{O}(N)\\) \u0111\u1ebfn \\(\\mathcal{O}(1)\\) c\u1ee7a Sparse Table qua b\u00e0i to\u00e1n Range Minimum Query (RMQ), v\u00e0 c\u00e1ch \u0111\u1ec3 truy v\u1ea5n trong \\(\\mathcal{O}(\\log{N})\\) n\u1ebfu ph\u00e9p to\u00e1n kh\u00f4ng tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t Idempotence qua b\u00e0i to\u00e1n Range Sum Query (RSQ).</p>"},{"location":"algo/data-structures/rmq/#range-minimum-query-rmq","title":"Range Minimum Query (RMQ)","text":"<p>Cho m\u1ea3ng \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed v\u00e0 \\(Q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng \\((l, r)\\). V\u1edbi m\u1ed7i truy v\u1ea5n, in ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong m\u1ea3ng \\(A\\) t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\). Gi\u1edbi h\u1ea1n: \\(N, Q \\le 10^5\\)</p>"},{"location":"algo/data-structures/rmq/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":"<p>Ta duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed.  <pre><code>int a[N];\nint queryMin(int l, int r) {\n    int mi = INT_MAX;\n    for (int i = l; i &lt;= r; ++i) {\n        mi = min(mi, a[i]);\n    }\n    return mi;\n}\n</code></pre></p>"},{"location":"algo/data-structures/rmq/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(r - l + 1) = \\mathcal{O}(N)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(Q \\cdot N)\\)</li> </ul> <p>C\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0 ta c\u00f2n c\u00f3 th\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian truy v\u1ea5n \u0111\u01b0\u1ee3c hay kh\u00f4ng? - Nh\u1eadn x\u00e9t: Thay v\u00ec duy\u1ec7t qua t\u1eebng ph\u1ea7n t\u1eed, ta c\u00f3 th\u1ec3 duy\u1ec7t qua t\u1eebng nh\u00f3m \\(2\\) ph\u1ea7n t\u1eed. T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 gi\u1ea3m th\u1eddi gian truy v\u1ea5n xu\u1ed1ng c\u00f2n \\(\\mathcal{O}(\\frac{N}2)\\)</p>"},{"location":"algo/data-structures/rmq/#thuat-toan-toi-uu-11","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.1","text":"<ul> <li>Ta x\u00e2y d\u1ef1ng m\u1ea3ng \\(a2\\) v\u1edbi c\u00f4ng th\u1ee9c \\(\\(a2_i = min(a_i, a_{i+1})\\)\\). </li> <li>Khi truy v\u1ea5n, n\u1ebfu \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n \\(len = 1\\) th\u00ec ta in ra \\(a[l]\\), n\u1ebfu \\(len &gt; 1\\) th\u00ec ra d\u00f9ng m\u1ea3ng \\(a2\\): </li> </ul> <pre><code>int a[N], a2[N];\nvoid preprocess() {\n    for (int i = 1; i + 1 &lt;= n; ++i) {\n        a2[i] = min(a[i], a[i + 1]);\n    }\n}\nint queryMin(int l, int r) {\n    int len = r - l + 1;\n    if (len == 1) return a[l];\n\n    int mi = INT_MAX;\n    for (int i = l; i + 1 &lt;= r; i += 2) {\n        mi = min(mi, a2[i]);\n    }\n    // khi k\u1ebft th\u00fac v\u00f2ng l\u1eb7p ph\u00eda tr\u00ean, c\u00f3 th\u1ec3 c\u00f2n 1 s\u1ed1 ph\u1ea7n t\u1eed ch\u01b0a \u0111\u01b0\u1ee3c x\u00e9t\n    // v\u00ed d\u1ee5 [l, r] = [1, 5], ta ch\u1ec9 m\u1edbi x\u00e9t a[1...4] ch\u1ee9 ch\u01b0a x\u00e9t a[5]\n    // nh\u1eadn x\u00e9t: l\u01b0\u1ee3ng ph\u1ea7n t\u1eed ch\u01b0a x\u00e9t nh\u1ecf h\u01a1n 2\n    //           v\u1eady n\u00ean ta ch\u1ec9 c\u1ea7n x\u00e9t th\u00eam a[r - 1] v\u00e0 a[r]\n    //           (s\u1ee9c m\u1ea1nh c\u1ee7a t\u00ednh ch\u1ea5t Idempotence b\u1eaft \u0111\u1ea7u t\u1ea1i \u0111\u00e2y)\n    mi = min(mi, a2[r - 1]);\n    return mi;\n}\n</code></pre>"},{"location":"algo/data-structures/rmq/#phan-tich_1","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N)\\) (t\u1ea1o m\u1ea3ng \\(a2\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{N}2 + 1)\\) (\\(1\\) v\u00f2ng for v\u00e0 \\(1\\) l\u1ec7nh if cho bi\u1ebfn \\(len\\))</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(N + Q \\cdot (\\frac{N}2 + 1))\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(2N)\\) (\\(2\\) m\u1ea3ng \\(a\\) v\u00e0 \\(a2\\))</li> </ul>"},{"location":"algo/data-structures/rmq/#thuat-toan-toi-uu-12","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.2","text":"<p>T\u01b0\u01a1ng t\u1ef1 1.1, ta c\u00f3 nh\u1eadn x\u00e9t: Thay v\u00ec duy\u1ec7t qua t\u1eebng nh\u00f3m \\(2\\) ph\u1ea7n t\u1eed, ta c\u00f3 th\u1ec3 duy\u1ec7t qua t\u1eebng nh\u00f3m \\(4\\) ph\u1ea7n t\u1eed. </p> <p>T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 gi\u1ea3m th\u1eddi gian truy v\u1ea5n xu\u1ed1ng c\u00f2n \\(\\mathcal{O}(\\frac{N}4)\\) Khi truy v\u1ea5n: - N\u1ebfu \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n \\(len = 1\\) th\u00ec ta in ra \\(a[l]\\) - N\u1ebfu \u0111\u1ed9 d\u00e0i \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n \\(len\\) tho\u1ea3 m\u00e3n \\(1 &lt; len &lt; 4\\) th\u00ec ta in ra \\(min(a2[l], a2[r - 1])\\) - n\u1ebfu \\(len &gt;= 4\\) th\u00ec ra d\u00f9ng m\u1ea3ng \\(a4\\): </p> <pre><code>int a[N], a2[N], a4[N];\nvoid preprocess() {\n    for (int i = 1; i + 1 &lt;= n; ++i) {\n        a2[i] = min(a[i], a[i + 1]);\n    }\n    for (int i = 1; i + 3 &lt;= n; ++i) {\n        a4[i] = min(a2[i], a2[i + 2]);\n    }\n}\nint queryMin(int l, int r) {\n    int len = r - l + 1;\n    if (len == 1) return a[l];\n    if (len &lt; 4) {\n        return min(a2[l], a2[r - 1]);\n        // d\u00f2ng n\u00e0y h\u1ee3p l\u00fd b\u1edfi v\u00ec ch\u1eafc ch\u1eafn 2 \u0111o\u1ea1n [l, l + 1] v\u00e0 [r - 1, r] s\u1ebd giao nhau (v\u00ec 2 + 2 &gt; len)\n    }\n\n    int mi = INT_MAX;\n    for (int i = l; i + 3 &lt;= r; i += 4) {\n        mi = min(mi, a4[i]);\n    }\n    mi = min(mi, a4[r - 3]);\n    return mi;\n}\n</code></pre>"},{"location":"algo/data-structures/rmq/#phan-tich_2","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(2N)\\) (t\u1ea1o m\u1ea3ng \\(a2\\) v\u00e0 \\(a4\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{N}4 + 2)\\) (\\(1\\) v\u00f2ng for v\u00e0 \\(2\\) l\u1ec7nh if cho bi\u1ebfn \\(len\\))</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(2N + Q \\cdot (\\frac{N}4 + 2))\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(3N)\\) (\\(3\\) m\u1ea3ng \\(a\\), \\(a2\\) v\u00e0 \\(a4\\))</li> </ul>"},{"location":"algo/data-structures/rmq/#thuat-toan-toi-uu-13","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.3","text":"<p>Ta v\u1eabn c\u00f3 th\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian truy v\u1ea5n b\u1eb1ng c\u00e1ch duy\u1ec7t qua c\u00e1c nh\u00f3m l\u1edbn h\u01a1n (nh\u00f3m \u0111\u1ed9 l\u1edbn \\(8\\) ph\u1ea7n t\u1eed). </p> <pre><code>int a[N], a2[N], a4[N], a8[N];\nvoid preprocess() {\n    for (int i = 1; i + 1 &lt;= n; ++i) {\n        a2[i] = min(a[i], a[i + 1]);\n    }\n    for (int i = 1; i + 3 &lt;= n; ++i) {\n        a4[i] = min(a2[i], a2[i + 2]);\n    }\n    for (int i = 1; i + 7 &lt;= n; ++i) {\n        a8[i] = min(a4[i], a4[i + 4]);\n    }\n}\nint queryMin(int l, int r) {\n    int len = r - l + 1;\n    if (len == 1) return a[l];\n    if (len &lt; 4) return min(a2[l], a2[r - 1]);\n    if (len &lt; 8) return min(a4[l], a4[r - 3]);\n\n    int mi = INT_MAX;\n    for (int i = l; i + 7 &lt;= r; i += 8) {\n        mi = min(mi, a8[i]);\n    }\n    mi = min(mi, a8[r - 7]);\n    return mi;\n}\n</code></pre>"},{"location":"algo/data-structures/rmq/#phan-tich_3","title":"Ph\u00e2n t\u00edch:","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(3N)\\) (t\u1ea1o m\u1ea3ng \\(a2\\), \\(a4\\) v\u00e0 \\(a8\\))</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\frac{N}8 + 3)\\) (\\(1\\) v\u00f2ng for v\u00e0 \\(3\\) l\u1ec7nh if cho bi\u1ebfn \\(len\\))</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(3N + Q \\cdot (\\frac{N}8 + 3))\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(4N)\\) (\\(4\\) m\u1ea3ng \\(a\\), \\(a2\\), \\(a4\\) v\u00e0 \\(a8\\))</li> </ul>"},{"location":"algo/data-structures/rmq/#thuat-toan-toi-uu-1n","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 1.n","text":"<p>N\u1ebfu ta l\u00e0m ti\u1ebfp nh\u01b0 thu\u1eadt to\u00e1n t\u1ed1i \u01b0u \\(1.3\\) (ti\u1ebfp t\u1ee5c t\u1ea1o c\u00e1c m\u1ea3ng \\(a16, a32, \\dots, a65536\\)) ta s\u1ebd c\u00f3 \\(\\log_2(N)\\) m\u1ea3ng \\(a\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u00e0i to\u00e1n l\u00fac n\u00e0y nh\u01b0 sau: - \u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N \\log N)\\) (\\(\\log_2\\) m\u1ea3ng \\(a\\)) - \u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}\\left(\\dfrac{N}{2^{\\log N}} + \\log N\\right) = \\mathcal{O}(\\log N)\\) (\\(1\\) v\u00f2ng for v\u00e0 \\(log_2\\) l\u1ec7nh if cho bi\u1ebfn \\(len\\)) - C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(N\\log N + Q\\log N)\\) - \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(N\\log N)\\) (m\u1ea3ng \\(a\\) ban \u0111\u1ea7u v\u00e0 \\(\\log_2\\) m\u1ea3ng \\(a\\) ti\u1ec1n x\u1eed l\u00fd)</p>"},{"location":"algo/data-structures/rmq/#thuat-toan-toi-uu-2","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u 2","text":"<p>Nh\u01b0ng n\u1ebfu d\u00f9ng \\(\\log_2\\) m\u1ea3ng \\(a\\) s\u1ebd mang \u0111\u1ebfn cho ta nhi\u1ec1u b\u1ea5t ti\u1ec7n (code d\u00e0i, d\u1ec5 sai, ...). Do \u0111\u00f3, ta c\u00f3 th\u1ec3 \u0111\u1eb7t: - \\(st[j][i]\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a \\(2^j\\) ph\u1ea7n t\u1eed t\u00ednh t\u1eeb \\(i\\) (min c\u1ee7a \\(a[i\\ldots i + 2^j - 1]\\)), t\u01b0\u01a1ng \u1ee9ng v\u1edbi \\(a(2^j)[i]\\)) (\\(st\\) \u1edf \u0111\u00e2y l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a \\(S\\)(parse)\\(T\\)(able)). - Ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i sau: \\(\\(st[j][i] =  \\begin{cases} a[i] &amp; \\text{ v\u1edbi } j = 0 \\\\  min(st[j-1][i], st[j-1][i + 2^{j-1}]) &amp; \\text{ v\u1edbi } j &gt; 0 \\end{cases}\\)\\)</p> <p>Nh\u1eadn x\u00e9t th\u00eam: - \\(\\log\\) l\u1ec7nh if trong \\(queryMin\\) l\u00fac n\u00e0y th\u1eadt ra ch\u1ec9 th\u1ef1c hi\u1ec7n nhi\u1ec7m v\u1ee5: t\u00ecm \\(k\\) nh\u1ecf nh\u1ea5t tho\u1ea3 m\u00e3n \\(len &lt; 2^{k+1} = 2^k + 2^k\\) (hay n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 \u0111\u1ec3 ch\u1eafc ch\u1eafn \\(2\\) \u0111o\u1ea1n \\([l\\ldots l+2^k-1]\\) v\u00e0 \\([r-2^k+1,r]\\) giao nhau nh\u01b0ng v\u1eabn n\u1eb1m trong \u0111o\u1ea1n \\([l,r]\\)).  - V\u00ed d\u1ee5:     - \\(len=6\\Rightarrow k=2\\), v\u00ec \\(6 &lt; 2^{k+1} = 8\\)     - \\(len=8\\Rightarrow k=3\\), v\u00ec \\(8 &lt; 2^{k+1}=16\\) - V\u1eady n\u00ean, \\(k\\) c\u00f2n c\u00f3 m\u1ed9t c\u00e1ch t\u00ednh kh\u00e1c l\u00e0 \\(\\(k=\\_\\_lg(len)\\)\\) (ph\u1ea7n nguy\u00ean c\u1ee7a ph\u00e9p \\(\\log_2(len)\\)) - T\u1eeb \u0111\u00e2y, ta c\u00f3 th\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n xu\u1ed1ng c\u00f2n \\(\\mathcal{O}(1)!!!!!!!\\)</p> <pre><code>// LG l\u00e0 s\u1ed1 l\u1edbn nh\u1ea5t tho\u1ea3 2^LG &lt; N\n// v\u00ed d\u1ee5: N = 10^5 th\u00ec LG = 16 v\u00ec 2^16 = 65536\nint a[N], st[LG + 1][N];\nvoid preprocess() {\n    for (int i = 1; i &lt;= n; ++i) st[0][i] = a[i];\n    for (int j = 1; j &lt;= LG; ++j)\n        for (int i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; ++i)\n            st[j][i] = min(st[j - 1][i], st[j - 1][i + (1 &lt;&lt; (j - 1))]);\n}\nint queryMin(int l, int r) {\n    int k = __lg(r - l + 1);\n    return min(st[k][l], st[k][r - (1 &lt;&lt; k) + 1]);\n}\n</code></pre> <ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N \\log N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(1)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(N\\log N + Q)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(N\\log N)\\)</li> </ul>"},{"location":"algo/data-structures/rmq/#range-sum-queries-rsq","title":"Range Sum Queries (RSQ)","text":""},{"location":"algo/data-structures/rmq/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ea3ng \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed v\u00e0 \\(Q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng \\((l, r)\\). V\u1edbi m\u1ed7i truy v\u1ea5n, in ra t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong m\u1ea3ng \\(A\\) t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\). Gi\u1edbi h\u1ea1n: \\(N, Q \\le 10^5\\)</p>"},{"location":"algo/data-structures/rmq/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>Gi\u1ed1ng nh\u01b0 RMQ, ta v\u1eabn s\u1ebd d\u1ef1ng m\u1ea3ng \\(st[LG+1][N]\\).</p> <p>Nh\u01b0ng l\u00fac n\u00e0y, ta kh\u00f4ng th\u1ec3 l\u1ea5y \\(\\(k = \\_\\_lg(len)\\)\\) r\u1ed3i \\(res = sum[l\\ldots l+2^k-1] + sum[r-2^k+1\\ldots r]\\) nh\u01b0 RMQ \u0111\u01b0\u1ee3c n\u1eefa (v\u00ec \\(2\\) \u0111o\u1ea1n ch\u1eafc ch\u1eafn giao nhau).</p> <p>Nh\u1eadn x\u00e9t: Ta lu\u00f4n c\u00f3 th\u1ec3 t\u00e1ch m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng th\u00e0nh t\u1ed5ng c\u00e1c l\u0169y th\u1eeba ph\u00e2n bi\u1ec7t c\u1ee7a 2 (h\u1ec7 nh\u1ecb ph\u00e2n). V\u00ed d\u1ee5: \\(25 = 2^4 + 2^3 + 2^0 = 11001_2\\).</p> <p>T\u1eeb nh\u1eadn x\u00e9t tr\u00ean, ta c\u00f3 th\u1ec3 t\u00e1ch \\([l\\ldots r]\\) th\u00e0nh \\(\\log_2\\) \u0111o\u1ea1n c\u00f3 \u0111\u1ed9 d\u00e0i \\(2^x\\) nh\u01b0 sau: - \u0110\u1eb7t \\(len = r - l + 1\\) - Duy\u1ec7t \\(j\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(\\(\\_\\_lg(len)\\)\\), n\u1ebfu bit th\u1ee9 \\(j\\) c\u1ee7a \\(len\\) l\u00e0 \\(1\\) th\u00ec:     - Ta t\u00e1ch \\([l\\ldots r]\\) th\u00e0nh \\([l\\ldots l+2^j-1]\\) v\u00e0 \\([l+2^j\\ldots r]\\)     - \\(l = l + 2^j\\) (ti\u1ebfp t\u1ee5c t\u00e1ch \\([l+2^j\\ldots r]\\) nh\u01b0 \\([l\\ldots r]\\))</p>"},{"location":"algo/data-structures/rmq/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>// LG l\u00e0 s\u1ed1 l\u1edbn nh\u1ea5t tho\u1ea3 2^LG &lt; N\n// v\u00ed d\u1ee5: N = 10^5 th\u00ec LG = 16 v\u00ec 2^16 = 65536\nint a[N], st[LG + 1][N];\nvoid preprocess() {\n    for (int i = 1; i &lt;= n; ++i) st[0][i] = a[i];\n    for (int j = 1; j &lt;= LG; ++j)\n        for (int i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; ++i)\n            st[j][i] = st[j - 1][i] + st[j - 1][i + (1 &lt;&lt; (j - 1))];\n}\nint querySum(int l, int r) {\n    int len = r - l + 1;\n    int sum = 0;\n    for (int j = 0; (1 &lt;&lt; j) &lt;= len; ++j)\n        if (len &gt;&gt; j &amp; 1) {\n            sum = sum + st[j][l];\n            l = l + (1 &lt;&lt; j);\n        }\n    return sum;\n}\n</code></pre> <ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(N \\log N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\log N)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(N\\log N + Q\\log N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(N\\log N)\\)</li> </ul>"},{"location":"algo/data-structures/rmq/#luu-y","title":"L\u01b0u \u00fd","text":"<p>M\u00ecnh bi\u1ebft r\u1eb1ng b\u00e0i n\u00e0y c\u00f3 c\u00e1ch d\u1ec5 h\u01a1n l\u00e0 d\u00f9ng M\u1ea3ng C\u1ed9ng D\u1ed3n, nh\u01b0ng l\u00fd do m\u1ea3ng c\u1ed9ng d\u1ed3n s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c l\u00e0 v\u00ec ph\u00e9p c\u1ed9ng c\u00f3 \"ph\u00e9p \u0111\u1ea3o ng\u01b0\u1ee3c\" l\u00e0 ph\u00e9p tr\u1eeb.</p> <p>N\u1ebfu x\u00e9t ph\u00e9p to\u00e1n nh\u00e2n \\(2\\) ma tr\u1eadn kh\u00f4ng vu\u00f4ng: - Ph\u00e9p nh\u00e2n ma tr\u1eadn kh\u00f4ng tho\u1ea3 t\u00ednh ch\u1ea5t Idempotence - Ma tr\u1eadn kh\u00f4ng vu\u00f4ng kh\u00f4ng c\u00f3 ma tr\u1eadn ngh\u1ecbch \u0111\u1ea3o n\u00ean kh\u00f4ng c\u00f3 \"ph\u00e9p \u0111\u1ea3o ng\u01b0\u1ee3c\"</p> <p>V\u1eady b\u00e0i to\u00e1n l\u00fac n\u00e0y kh\u00f4ng th\u1ec3 d\u00f9ng m\u1ea3ng c\u1ed9ng d\u1ed3n, c\u0169ng kh\u00f4ng th\u1ec3 d\u00f9ng Sparse Table truy v\u1ea5n \\(\\mathcal{O}(1)\\). Do \u0111\u00f3, Sparse Table truy v\u1ea5n \\(\\mathcal{O}(\\log N)\\) l\u00e0 m\u1ed9t gi\u1ea3i ph\u00e1p h\u1ee3p l\u00fd (d\u00f9 kh\u00e1 t\u1ed1n b\u1ed9 nh\u1edb so v\u1edbi Segment Tree).</p>"},{"location":"algo/data-structures/rmq/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Library Checker - Static RMQ</li> <li>VNOJ - AVLBIT (D\u00e3y c\u1ea5p s\u1ed1 c\u1ed9ng)</li> <li>Codechef - FRMQ (Chef and Array)</li> <li>Codeforces - 5C (Longest Regular Bracket Sequence)</li> <li>Codeforces - 1454F (Array Partition)</li> <li>Codeforces - 475D (CGCDSSQ)</li> <li>Codeforces - 487B (Strip)</li> </ul>"},{"location":"algo/data-structures/rmq/#sparse-table-2d","title":"Sparse Table 2D","text":"<p>Ta c\u00f3 b\u00e0i to\u00e1n nh\u01b0 sau: - Cho m\u1ed9t ma tr\u1eadn \\(2\\) chi\u1ec1u \u0111\u1ed9 l\u1edbn \\(M\\times N\\) v\u00e0 \\(Q\\) truy v\u1ea5n \\((x_1, y_1, x_2, y_2)\\). V\u1edbi m\u1ed7i truy v\u1ea5n, in ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong ma tr\u1eadn con c\u00f3 g\u00f3c tr\u00e1i d\u01b0\u1edbi l\u00e0 \\((x_1, y_1)\\) v\u00e0 g\u00f3c ph\u1ea3i tr\u00ean l\u00e0 \\((x_2, y_2)\\). - Gi\u1edbi h\u1ea1n:     - \\(M, N \\le 10^3\\)     - \\(Q \\le 10^6\\)</p> <p>Hi\u1ec7n t\u1ea1i, ta \u0111ang c\u00f3 \\(2\\) thu\u1eadt to\u00e1n: - Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1: Duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong ma tr\u1eadn con.     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(1)\\)     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}((x_2 - x_1 + 1)\\times (y_2 - y_1 + 1)) = \\mathcal{O}(M\\times N)\\)     - C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(Q\\times M\\times N)\\)     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(M\\times N)\\) - Thu\u1eadt to\u00e1n th\u00f4ng minh: V\u1edbi m\u1ed7i h\u00e0ng, ta d\u1ef1ng m\u1ed9t Sparse Table 1D.     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(M\\times N\\log N)\\)     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}((x_2 - x_1 + 1)\\times 1) = \\mathcal{O}(M)\\)     - C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(Q\\times M)\\)     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(M\\times N\\log N)\\)</p> <p>V\u1edbi gi\u1edbi h\u1ea1n nh\u01b0 tr\u00ean, r\u00f5 r\u00e0ng c\u1ea3 \\(2\\) thu\u1eadt to\u00e1n \u0111\u1ec1u kh\u00f4ng \u0111\u1ee7 nhanh, v\u00e0 v\u1ea5n \u0111\u1ec1 n\u1eb1m \u1edf th\u1eddi gian truy v\u1ea5n c\u00f2n ch\u1eadm.</p> <p>\u0110\u1ec3 truy v\u1ea5n nhanh h\u01a1n, ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng \u00fd t\u01b0\u1edfng c\u1ee7a Sparse Table 1D v\u00e0o thu\u1eadt to\u00e1n th\u00f4ng minh: - Xem m\u1ed7i Sparse Table 1D c\u1ee7a m\u1ed7i h\u00e0ng nh\u01b0 \\(1\\) \"nh\u00f3m\" ph\u1ea7n t\u1eed. - \u0110\u1ec3 g\u1ed9p \\(2\\) \"nh\u00f3m\" ph\u1ea7n t\u1eed, ta th\u1ef1c hi\u1ec7n g\u1ed9p t\u1eebng \"ph\u1ea7n t\u1eed\" trong \"nh\u00f3m\".</p> G\u1ed9p \\(2\\) \"nh\u00f3m\" Sparse Table <p>T\u1eeb \u00fd t\u01b0\u1edfng tr\u00ean, ta x\u00e2y d\u1ef1ng c\u00f4ng th\u1ee9c nh\u01b0 sau: - \u0110\u1eb7t \\(st(k, i)(l, j)\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt \\([i\\ldots i+2^k-1][j\\ldots j+2^l-1]\\) - Khi \\(k = 0\\), ta d\u1ef1ng Sparse Table 1D c\u1ee7a h\u00e0ng \\(i\\) (v\u00ec \\(2^k=1\\)), l\u00e0 \\(st(0,i)\\): \\(\\(st(0,i)(l,j)=\\left\\{ \\begin{matrix} A[i][j] &amp; \\text{ v\u1edbi } l = 0 \\\\  min\\left\\{st(0,i)(l-1,j), st(0,i)(l-1,j+2^{l-1})\\right\\} &amp; \\text{ v\u1edbi } l &gt; 0 \\end{matrix} \\right.\\)\\) - Khi \\(k &gt; 0\\), ta d\u1ef1ng \\(st(k,i)\\) b\u1eb1ng c\u00e1ch g\u1ed9p \\(st(k-1,i)\\) v\u00e0 \\(st(k-1,i + 2^{k-1})\\).</p> <p>T\u00f3m l\u1ea1i, ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i nh\u01b0 sau: \\(\\(st(k,i)(l,j)=\\left\\{ \\begin{matrix} A[i][j] &amp; \\text{ v\u1edbi } k = 0 \\text{ v\u00e0 } l = 0 \\\\ min\\left\\{st(k,i)(l - 1,j), st(k,i)(l - 1,j+2^{l-1})\\right\\} &amp; \\text{ v\u1edbi } k = 0 \\text{ v\u00e0 } l &gt; 0 \\\\ min\\left\\{st(k - 1,i)(l,j), st(k - 1,i+2^{k-1})(l,j)\\right\\} &amp; \\text{ v\u1edbi } k &gt; 0 \\\\ \\end{matrix} \\right.\\)\\)</p> <p><pre><code>int a[M][N], st[LGM + 1][M][LGN + 1][N];\nvoid preprocess() {\n    for (int k = 0; k &lt;= LGM; ++k) {\n        for (int i = 1; i + (1 &lt;&lt; k) - 1 &lt;= m; ++i) {\n            for (int l = 0; l &lt;= LGN; ++l) {\n                for (int j = 1; j + (1 &lt;&lt; l) - 1 &lt;= n; ++j) {\n                    if (k == 0) {\n                        if (l == 0) {\n                            st[0][i][0][j] = a[i][j];\n                        }\n                        else {\n                            st[0][i][l][j] = min(st[0][i][l - 1][j], st[0][i][l - 1][j + (1 &lt;&lt; (l - 1))]);\n                        }\n                    }\n                    else {\n                        st[k][i][l][j] = min(st[k - 1][i][l][j], st[k - 1][i + (1 &lt;&lt; (k - 1))][l][j]);\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> \u0110\u1ec3 truy v\u1ea5n \\(min([x\\ldots a][y\\ldots b])\\) trong \\(\\mathcal{O}(1)\\) b\u1eb1ng Sparse Table 2D, ta l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 B\u00e0i To\u00e1n RMQ, nh\u01b0ng t\u00e1ch c\u1ea3 \\(2\\) chi\u1ec1u \\(M\\) v\u00e0 \\(N\\), ngh\u0129a l\u00e0: \\(\\(\\begin{cases} k = \\log_2(a - x + 1) \\\\ l = \\log_2(b - y + 1) \\\\ min([x\\ldots a][y\\ldots b]) = min(&amp; min([x\\ldots x+2^k][y\\ldots y+2^l]), \\\\ &amp; min([x\\ldots x+2^k][b-2^l+1\\ldots b]), \\\\ &amp; min([a-2^k+1\\ldots a][y\\ldots y+2^l]), \\\\ &amp; min([a-2^k+1\\ldots a][b-2^l+1\\ldots b]) \\end{cases}\\)\\)</p> <pre><code>int getMin(int x, int y, int a, int b) {\n    int k = __lg(a - x + 1);\n    int l = __lg(b - y + 1);\n    return min({ st[k][x][l][y],\n                 st[k][x][l][b - (1 &lt;&lt; l) + 1],\n                 st[k][a - (1 &lt;&lt; k) + 1][l][y],\n                 st[k][a - (1 &lt;&lt; k) + 1][l][b - (1 &lt;&lt; l) + 1] });\n</code></pre>"},{"location":"algo/data-structures/rmq/#bai-toan-codechef-chef-and-rectangle-array","title":"B\u00e0i to\u00e1n: Codechef - Chef and Rectangle Array","text":"<p>Link \u0111\u1ec1 b\u00e0i ti\u1ebfng Vi\u1ec7t</p> <p>Cho ma tr\u1eadn \\(2\\) chi\u1ec1u \\(A\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(M \\times N\\).</p> <p>M\u1ed9t ma tr\u1eadn \\(2\\) chi\u1ec1u \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"\u0111\u1eb9p\" n\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t ma tr\u1eadn con \\(a \\times b\\) sao cho t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed \u0111\u1ec1u b\u1eb1ng nhau. Trong m\u1ed9t thao t\u00e1c, ta c\u00f3 th\u1ec3 t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a \\(1\\) ph\u1ea7n t\u1eed trong ma tr\u1eadn A l\u00ean \\(1\\) \u0111\u01a1n v\u1ecb.</p> <p>C\u00f3 \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n g\u1ed3m hai s\u1ed1 \\(a\\) v\u00e0 \\(b\\), ta c\u1ea7n in ra s\u1ed1 thao t\u00e1c t\u1ed1i thi\u1ec3u \u0111\u1ec3 ma tr\u1eadn \\(A\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"\u0111\u1eb9p\".</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le M, N, A_{ij} \\le 1000\\) - \\(1 \\le Q \\le 50\\) - \\(1 \\le a \\le M\\) - \\(1 \\le b \\le N\\)</p>"},{"location":"algo/data-structures/rmq/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<ul> <li>Duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c ma tr\u1eadn con \\(a \\times b\\), s\u1ed1 thao t\u00e1c t\u1ed1i thi\u1ec3u \u0111\u1ec3 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a ma tr\u1eadn con \\(a \\times b\\) b\u1eb1ng nhau l\u00e0 \\(maxValue \\times a \\times b - sumValue\\).</li> </ul>"},{"location":"algo/data-structures/rmq/#phan-tich-o-phuc-tap","title":"Ph\u00e2n t\u00edch \u0111\u1ed9 ph\u1ee9c t\u1ea1p","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(MN\\log M\\log N)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(1)\\)</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n, v\u00ec th\u1ebf t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(MN\\log M\\log N + Q)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb: \\(\\mathcal{O}(MN\\log M\\log N)\\)</li> </ul>"},{"location":"algo/data-structures/rmq/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1000 + 3, LG = 9;\nint m, n;\nint a[N][N];\n\nint prf[N][N];\nint st[LG + 1][N][LG + 1][N];\nvoid preprocess() {\n    for (int i = 1; i &lt;= m; ++i) {\n        for (int j = 1; j &lt;= n; ++j) {\n            prf[i][j] = prf[i - 1][j] + prf[i][j - 1] - prf[i - 1][j - 1] + a[i][j];\n        }\n    }\n\n    for (int k = 0; k &lt;= LG; ++k) {\n        for (int i = 1; i + (1 &lt;&lt; k) - 1 &lt;= m; ++i) {\n            for (int l = 0; l &lt;= LG; ++l) {\n                for (int j = 1; j + (1 &lt;&lt; l) - 1 &lt;= n; ++j) {\n                    if (k == 0) {\n                        if (l == 0) {\n                            st[0][i][0][j] = a[i][j];\n                        }\n                        else {\n                            st[0][i][l][j] = max(st[0][i][l - 1][j], st[0][i][l - 1][j + (1 &lt;&lt; (l - 1))]);\n                        }\n                    }\n                    else {\n                        st[k][i][l][j] = max(st[k - 1][i][l][j], st[k - 1][i + (1 &lt;&lt; (k - 1))][l][j]);\n                    }\n                }\n            }\n        }\n    }\n}\nint getSum(int x, int y, int a, int b) {\n    return prf[a][b] - prf[a][y - 1] - prf[x - 1][b] + prf[x - 1][y - 1];\n}\nint getMax(int x, int y, int a, int b) {\n    int k = __lg(a - x + 1);\n    int l = __lg(b - y + 1);\n    return max({ st[k][x][l][y],\n                 st[k][x][l][b - (1 &lt;&lt; l) + 1],\n                 st[k][a - (1 &lt;&lt; k) + 1][l][y],\n                 st[k][a - (1 &lt;&lt; k) + 1][l][b - (1 &lt;&lt; l) + 1] });\n}\n\nint main() {\n    cin &gt;&gt; m &gt;&gt; n;\n    for (int i = 1; i &lt;= m; ++i) {\n        for (int j = 1; j &lt;= n; ++j) {\n            cin &gt;&gt; a[i][j];\n        }\n    }\n    preprocess();\n\n    int q;\n    cin &gt;&gt; q;\n    while (q--) {\n        int a, b;\n        cin &gt;&gt; a &gt;&gt; b;\n\n        int ans = INT_MAX;\n        for (int i = a; i &lt;= m; ++i) {\n            for (int j = b; j &lt;= n; ++j) {\n                int tmp = getMax(i - a + 1, j - b + 1, i, j) * a * b - getSum(i - a + 1, j - b + 1, i, j);\n                ans = min(ans, tmp);\n            }\n        }\n        cout &lt;&lt; ans &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/rmq/#bai-tap-ap-dung_1","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Codechef - Chef and Rectangle Array</li> </ul>"},{"location":"algo/data-structures/segment-tree-basic/","title":"C\u00e2y Ph\u00e2n \u0110o\u1ea1n (c\u01a1 b\u1ea3n)","text":"<p>Ngu\u1ed3n: wcipeg, cp-algorithms, T\u1ea5t t\u1ea7n t\u1eadt v\u1ec1 C\u00e2y Ph\u00e2n \u0110o\u1ea1n (Segment Tree) - VNOI</p> <p>T\u00e1c gi\u1ea3: </p> <ul> <li>Nguy\u1ec5n Ch\u00e2u Khanh - VNU University of Engineering and Technology (VNU-UET)</li> </ul> <p>Reviewer: </p> <ul> <li>Tr\u1ea7n Xu\u00e2n B\u00e1ch - HUS High School for Gifted Students</li> <li>Nguy\u1ec5n Nh\u1eadt Minh Kh\u00f4i - VNUHCM-University of Science</li> <li>Nguy\u1ec5n Ph\u00fa B\u00ecnh - Hung Vuong High School for the Gifted, Binh Duong Province</li> <li>Ng\u00f4 Nh\u1eadt Quang - HUS High School for Gifted Students</li> <li>H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM-University of Science</li> </ul> <p>L\u01afU \u00dd: M\u1ecdi s\u1ed1 th\u1ee9 t\u1ef1 trong b\u00e0i vi\u1ebft \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(1\\). </p>"},{"location":"algo/data-structures/segment-tree-basic/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"<p>C\u00e2y ph\u00e2n \u0111o\u1ea1n (Segment Tree) l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u r\u1ea5t linh ho\u1ea1t \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u trong c\u00e1c k\u1ef3 thi, \u0111\u1eb7c bi\u1ec7t l\u00e0 trong nh\u1eefng b\u00e0i to\u00e1n x\u1eed l\u00fd tr\u00ean d\u00e3y s\u1ed1.</p> <p>\u1ede b\u00e0i vi\u1ebft n\u00e0y, ta s\u1ebd ch\u1ec9 t\u00ecm hi\u1ec3u v\u1ec1 nh\u1eefng ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n c\u1ee7a Segment Tree v\u00e0 m\u1ed9t s\u1ed1 b\u00e0i t\u1eadp th\u01b0\u1eddng g\u1eb7p trong c\u00e1c k\u00ec thi.</p> <p>C\u00f2n n\u1ebfu b\u1ea1n mu\u1ed1n t\u00ecm hi\u1ec3u s\u00e2u h\u01a1n v\u1ec1 Segment Tree th\u00ec b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft: T\u1ea5t t\u1ea7n t\u1eadt v\u1ec1 C\u00e2y Ph\u00e2n \u0110o\u1ea1n (Segment Tree) - VNOI.</p>"},{"location":"algo/data-structures/segment-tree-basic/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>M\u1ed9t trong nh\u1eefng \u1ee9ng d\u1ee5ng ph\u1ed5 bi\u1ebfn nh\u1ea5t c\u1ee7a Segment Tree l\u00e0 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n \\(Range \\space Minimum \\space Query \\space \\mathit{(RMQ)}\\). Trong b\u00e0i to\u00e1n n\u00e0y, ta \u0111\u01b0\u1ee3c cho m\u1ed9t m\u1ea3ng \\(A\\) v\u00e0 \\(Q\\) truy v\u1ea5n; m\u1ed7i truy v\u1ea5n g\u1ed3m c\u1eb7p s\u1ed1 \\(l\\) v\u00e0 \\(r\\), y\u00eau c\u1ea7u t\u00ecm ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) c\u1ee7a m\u1ea3ng \\(A\\).  - V\u00ed d\u1ee5: Ta c\u00f3 m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\). V\u1edbi truy v\u1ea5n \\(l = 3\\) v\u00e0 \\(r = 6\\), \u0111\u00e1p \u00e1n s\u1ebd l\u00e0 \\(\\min{(6,3,1,5)} = 1\\). Sau \u0111\u00f3, m\u1ed9t truy v\u1ea5n kh\u00e1c v\u1edbi \\(l = 1\\) v\u00e0 \\(r = 3\\) th\u00ec \u0111\u00e1p \u00e1n l\u00e0 \\(2\\); v.v...</p> <p>C\u00f3 nhi\u1ec1u gi\u1ea3i ph\u00e1p kh\u00e1c nhau \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y nh\u01b0ng Segment Tree th\u01b0\u1eddng l\u00e0 l\u1ef1a ch\u1ecdn th\u00edch h\u1ee3p nh\u1ea5t, \u0111\u1eb7c bi\u1ec7t l\u00e0 khi c\u00f3 th\u00eam ho\u1ea1t \u0111\u1ed9ng s\u1eeda \u0111\u1ed5i \u0111\u01b0\u1ee3c xen k\u1ebd v\u1edbi c\u00e1c truy v\u1ea5n. </p> <p>Gi\u1ea3i ph\u00e1p chia \u0111\u1ec3 tr\u1ecb</p> <ul> <li> <p>Ta c\u00f3 gi\u1ea3i ph\u00e1p chia \u0111\u1ec3 tr\u1ecb sau:</p> <ul> <li>N\u1ebfu d\u00e3y \u0111ang x\u00e9t ch\u1ee9a m\u1ed9t ph\u1ea7n t\u1eed, th\u00ec b\u1ea3n th\u00e2n ph\u1ea7n t\u1eed \u0111\u00f3 l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong d\u00e3y \u0111\u00f3.</li> <li> <p>N\u1ebfu kh\u00f4ng, ta chia d\u00e3y \u0111\u00f3 th\u00e0nh hai d\u00e3y con li\u00ean ti\u1ebfp nh\u1ecf h\u01a1n, m\u1ed7i d\u00e3y con g\u1ea7n b\u1eb1ng m\u1ed9t n\u1eeda k\u00edch th\u01b0\u1edbc c\u1ee7a d\u00e3y ban \u0111\u1ea7u, v\u00e0 t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t t\u01b0\u01a1ng \u1ee9ng c\u1ee7a ch\u00fang. Gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a d\u00e3y ban \u0111\u1ea7u ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n gi\u1eefa hai gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c d\u00e3y con.</p> <ul> <li>V\u00ed d\u1ee5 m\u00f4 t\u1ea3 thu\u1eadt to\u00e1n chia \u0111\u1ec3 tr\u1ecb v\u1edbi m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\):</li> </ul> <p></p> </li> </ul> </li> <li> <p>Nh\u1eadn th\u1ea5y r\u1eb1ng, khi ta s\u1eeda \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3 trong m\u1ea3ng th\u00ec s\u1ed1 l\u01b0\u1ee3ng \u0111o\u1ea1n c\u1ea7n t\u00ednh l\u1ea1i kh\u00f4ng nhi\u1ec1u. V\u1eady n\u00ean ta s\u1ebd l\u01b0u l\u1ea1i k\u1ebft qu\u1ea3 v\u00e0 ch\u1ec9 t\u00ednh l\u1ea1i khi th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft. </p> <ul> <li>V\u00ed d\u1ee5: Trong v\u00ed d\u1ee5 b\u00ean tr\u00ean, khi s\u1eeda \u0111\u1ed5i ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb \\(1\\) th\u00e0nh gi\u00e1 tr\u1ecb \\(8\\) th\u00ec ta ch\u1ec9 c\u1ea7n t\u00ednh l\u1ea1i gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c \u0111o\u1ea1n \\([1, 7]\\), \\([5, 7]\\), \\([5, 6]\\) v\u00e0 \\([5, 5]\\).</li> </ul> <p></p> </li> </ul> <p>T\u1ed5ng qu\u00e1t</p> <ul> <li> <p>G\u1ecdi \\(a_i\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) trong m\u1ea3ng, vi\u1ec7c t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi d\u1ea1ng h\u00e0m \u0111\u1ec7 quy nh\u01b0 sau:     \\(\\(f(l, r) = \\begin{cases}                      a_l &amp; \\quad \\text{if } l = r \\\\                      \\min{\\Big( f \\big(l, \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor \\big), f \\big( \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor + 1, r \\big) \\Big)}  &amp; \\quad \\text{if } l &lt; r                  \\end{cases}\\)\\)</p> <ul> <li>V\u1edbi \\(f(l, r)\\) l\u00e0 ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) c\u1ee7a m\u1ea3ng \\(A\\).</li> </ul> </li> <li> <p>Do \u0111\u00f3, khi ta s\u1eeda \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) trong m\u1ea3ng th\u00ec ta ch\u1ec9 c\u1ea7n t\u00ednh l\u1ea1i k\u1ebft qu\u1ea3 c\u1ee7a c\u00e1c h\u00e0m \\(f(l, r)\\) v\u1edbi \\(l \\le i \\le r\\).</p> </li> </ul> <p>Gi\u1ea3 s\u1eed r\u1eb1ng ta s\u1eed d\u1ee5ng h\u00e0m \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \\(f(1, N)\\), v\u1edbi \\(N\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng. Khi \\(N\\) l\u1edbn, h\u00e0m g\u1ecdi \u0111\u1ec7 quy n\u00e0y s\u1ebd c\u00f3 hai \"con\", m\u1ed9t trong s\u1ed1 \u0111\u00f3 l\u00e0 l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy \\(f \\big(l, \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor \\big)\\) v\u00e0 l\u1ec7nh c\u00f2n l\u1ea1i l\u00e0 \\(f \\big( \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor + 1, r \\big)\\). M\u1ed7i h\u00e0m n\u00e0y sau \u0111\u00f3 s\u1ebd l\u1ea1i c\u00f3 th\u00eam hai \"con\" c\u1ee7a ri\u00eang n\u00f3, v\u00e0 c\u1ee9 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady cho \u0111\u1ebfn khi \u0111\u1ea1t \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf (khi \\(l = r\\)). </p> <p>N\u1ebfu ta bi\u1ec3u di\u1ec5n c\u00e1c h\u00e0m g\u1ecdi \u0111\u1ec7 quy n\u00e0y b\u1eb1ng c\u1ea5u tr\u00fac c\u00e2y, th\u00ec h\u00e0m \\(f(1, N)\\) s\u1ebd l\u00e0 g\u1ed1c, n\u00f3 s\u1ebd c\u00f3 hai con, m\u1ed7i con s\u1ebd c\u00f3 th\u00eam hai con n\u1eefa, v.v...; c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf s\u1ebd l\u00e0 l\u00e1 c\u1ee7a c\u00e2y. Khi \u0111\u00f3, c\u1ea5u tr\u00fac c\u00e2y g\u1ecdi \u0111\u1ec7 quy c\u1ee7a h\u00e0m \\(f(1, N)\\) ch\u00ednh l\u00e0 c\u1ea5u tr\u00fac c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n. V\u00e0 vi\u1ec7c s\u1eeda \u0111\u1ed5i gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed trong m\u1ea3ng c\u0169ng ch\u00ednh l\u00e0 b\u1ea3n ch\u1ea5t c\u1ee7a thao t\u00e1c c\u1eadp nh\u1eadt tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n (s\u1ebd \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 r\u00f5 h\u01a1n \u1edf ph\u1ea7n sau).</p> <ul> <li>V\u00ed d\u1ee5: Ta c\u00f3 m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\) \u0111\u01b0\u1ee3c ki\u1ec3m so\u00e1t b\u1edfi c\u00e2y ph\u00e2n \u0111o\u1ea1n sau:</li> </ul> <p></p>"},{"location":"algo/data-structures/segment-tree-basic/#cau-truc","title":"C\u1ea5u tr\u00fac","text":"<p>B\u00e2y gi\u1edd ta \u0111\u00e3 s\u1eb5n s\u00e0ng \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh c\u1ea5u tr\u00fac c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n:</p> <ul> <li>Segment Tree l\u00e0 m\u1ed9t c\u00e2y. C\u1ee5 th\u1ec3 h\u01a1n, n\u00f3 l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 (m\u1ed7i n\u00fat l\u00e0 l\u00e1 ho\u1eb7c c\u00f3 \u0111\u00fang \\(2\\) n\u00fat con).</li> <li>M\u1ed7i n\u00fat qu\u1ea3n l\u00fd m\u1ed9t d\u00e3y c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng li\u00ean ti\u1ebfp, trong n\u00fat ch\u1ee9a th\u00f4ng tin t\u1ed5ng h\u1ee3p t\u1eeb c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng m\u00e0 n\u00f3 qu\u1ea3n l\u00fd.</li> <li>V\u1edbi m\u1ed9t d\u00e3y s\u1ed1 g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed, n\u00fat g\u1ed1c qu\u1ea3n l\u00fd c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb \\(1\\) t\u1edbi \\(N\\).</li> <li>N\u1ebfu m\u1ed9t n\u00fat qu\u1ea3n l\u00fd d\u00e3y c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb \\(l\\) t\u1edbi \\(r\\) \\((l&lt;r)\\) th\u00ec n\u00fat con tr\u00e1i c\u1ee7a n\u00f3 qu\u1ea3n l\u00fd c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb \\(l\\) t\u1edbi \\(mid\\) v\u00e0 n\u00fat con ph\u1ea3i c\u1ee7a n\u00f3 qu\u1ea3n l\u00fd c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb \\(mid+1\\) t\u1edbi \\(r\\) \\(\\big(\\)V\u1edbi \\(mid = \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor \\big)\\).</li> <li>N\u1ebfu m\u1ed9t n\u00fat ch\u1ec9 qu\u1ea3n l\u00fd m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng th\u00ec n\u00f3 s\u1ebd l\u00e0 n\u00fat l\u00e1 v\u00e0 kh\u00f4ng c\u00f3 n\u00fat con. </li> <li>Chi\u1ec1u cao c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u00e0 \\(\\mathcal{O}(\\log{N})\\), b\u1edfi v\u00ec khi \u0111i xu\u1ed1ng t\u1eeb g\u1ed1c \u0111\u1ebfn l\u00e1, k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed7i \u0111o\u1ea1n gi\u1ea3m \u0111i m\u1ed9t n\u1eeda.</li> <li>T\u1ea1i m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, kh\u00f4ng c\u00f3 ph\u1ea7n t\u1eed n\u00e0o \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi \\(2\\) n\u00fat kh\u00e1c nhau c\u1ee7a c\u00e2y.</li> </ul>"},{"location":"algo/data-structures/segment-tree-basic/#cac-thao-tac-tren-cay-phan-oan","title":"C\u00e1c thao t\u00e1c tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n","text":"<p>C\u00f3 \\(3\\) thao t\u00e1c c\u01a1 b\u1ea3n tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n:</p>"},{"location":"algo/data-structures/segment-tree-basic/#xay-dung","title":"X\u00e2y d\u1ef1ng","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 c\u00f3 th\u1ec3 l\u1ea5y gi\u00e1 tr\u1ecb v\u00e0 s\u1eeda \u0111\u1ed5i d\u00e3y s\u1ed1, tr\u01b0\u1edbc ti\u00ean ta c\u1ea7n ph\u1ea3i x\u00e2y d\u1ef1ng m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n h\u1ee3p l\u1ec7. </p> <p>Tr\u01b0\u1edbc khi x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n, ta c\u1ea7n quy\u1ebft \u0111\u1ecbnh: 1. Th\u00f4ng tin \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n. V\u00ed d\u1ee5: Trong c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u1ea5y gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t, m\u1ed9t n\u00fat s\u1ebd l\u01b0u tr\u1eef gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([l, r]\\) m\u00e0 n\u00f3 qu\u1ea3n l\u00fd. 2. Ph\u00e9p to\u00e1n h\u1ee3p nh\u1ea5t hai n\u00fat con trong m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n. V\u00ed d\u1ee5: Trong c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u1ea5y gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t, hai n\u00fat con t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111o\u1ea1n \\([l1, r1]\\) v\u00e0 \u0111o\u1ea1n \\([l2, r2]\\) s\u1ebd \u0111\u01b0\u1ee3c h\u1ee3p nh\u1ea5t th\u00e0nh m\u1ed9t n\u00fat t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111o\u1ea1n \\([l1, r2]\\) b\u1eb1ng c\u00e1ch l\u1ea5y min c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a hai n\u00fat con.</p> <p>\\(\\circ\\) L\u01b0u \u00fd r\u1eb1ng m\u1ed9t \u0111\u1ec9nh l\u00e0 \"\u0111\u1ec9nh l\u00e1\", n\u1ebfu \u0111o\u1ea1n t\u01b0\u01a1ng \u1ee9ng c\u1ee7a n\u00f3 ch\u1ec9 bao g\u1ed3m m\u1ed9t gi\u00e1 tr\u1ecb trong m\u1ea3ng ban \u0111\u1ea7u. N\u00f3 l\u00e0 \u0111\u1ec9nh th\u1ea5p nh\u1ea5t c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n. Gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 s\u1ebd b\u1eb1ng ph\u1ea7n t\u1eed \\(a_i\\) t\u01b0\u01a1ng \u1ee9ng.</p> <p>C\u00f3 \\(2\\) c\u00e1ch \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n: - C\u00e1ch 1: X\u00e2y d\u1ef1ng \"t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean\"     - \u0110\u1ec3 x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n, ta s\u1ebd b\u1eaft \u0111\u1ea7u \u1edf c\u00e1c n\u00fat c\u00f3 \u0111\u1ed9 s\u00e2u th\u1ea5p nh\u1ea5t (c\u00e1c n\u00fat l\u00e1) v\u00e0 g\u00e1n cho ch\u00fang c\u00e1c gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng. R\u1ed3i t\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 t\u00ednh to\u00e1n l\u00ean c\u00e1c n\u00fat cha b\u1eb1ng c\u00e1ch \"h\u1ee3p nh\u1ea5t\" l\u1ea7n l\u01b0\u1ee3t \\(2\\) n\u00fat con v\u00e0 l\u1eb7p l\u1ea1i quy tr\u00ecnh cho \u0111\u1ebfn khi \u0111\u1ea1t \u0111\u1ebfn \u0111\u1ec9nh g\u1ed1c.</p> <ul> <li>C\u00e1ch 2: X\u00e2y d\u1ef1ng \"t\u1eeb tr\u00ean xu\u1ed1ng d\u01b0\u1edbi\"<ul> <li>C\u1ea5u tr\u00fac t\u1eeb tr\u00ean xu\u1ed1ng l\u00e0 s\u1eed d\u1ee5ng \u0111\u1ec7 quy. T\u1ee9c l\u00e0 ta s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh g\u1ed1c \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh l\u00e1 b\u1eb1ng m\u00f4 h\u00ecnh \u0111\u1ec7 quy nh\u01b0 sau:<ol> <li>N\u1ebfu n\u00fat \u0111ang x\u00e9t l\u00e0 n\u00fat l\u00e1, ta c\u00f3 th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c ngay gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng t\u1eeb m\u1ea3ng. </li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu n\u00fat \u0111ang x\u00e9t kh\u00f4ng ph\u1ea3i l\u00e0 n\u00fat l\u00e1, ta g\u1ecdi \u0111\u1ec7 quy \u0111\u1ec3 t\u00ednh to\u00e1n gi\u00e1 tr\u1ecb c\u1ee7a hai n\u00fat con. Sau khi hai l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n, gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \u0111ang x\u00e9t s\u1ebd b\u1eb1ng gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c \"h\u1ee3p nh\u1ea5t\" t\u1eeb hai n\u00fat con.</li> </ol> </li> <li>Do th\u1ee7 t\u1ee5c \u0111\u1ec7 quy b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh g\u1ed1c n\u00ean ta c\u00f3 th\u1ec3 t\u00ednh to\u00e1n \u0111\u01b0\u1ee3c to\u00e0n b\u1ed9 c\u00e2y ph\u00e2n \u0111o\u1ea1n.</li> </ul> </li> </ul>"},{"location":"algo/data-structures/segment-tree-basic/#cap-nhat","title":"C\u1eadp nh\u1eadt","text":"<p>B\u00e2y gi\u1edd ta mu\u1ed1n s\u1eeda \u0111\u1ed5i m\u1ed9t ph\u1ea7n t\u1eed c\u1ee5 th\u1ec3 trong m\u1ea3ng, gi\u1ea3 s\u1eed ta mu\u1ed1n th\u1ef1c hi\u1ec7n vi\u1ec7c g\u00e1n \\(a_i = x\\). V\u00e0 ph\u1ea3i c\u1eadp nh\u1eadt l\u1ea1i c\u00e2y ph\u00e2n \u0111o\u1ea1n, sao cho n\u00f3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ea3ng m\u1edbi \u0111\u00e3 s\u1eeda \u0111\u1ed5i.</p> <p>\u0110\u1ec3 l\u00e0m nh\u01b0 v\u1eady, tr\u01b0\u1edbc ti\u00ean ta c\u1ea7n s\u1eeda \u0111\u1ed5i n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng. C\u00e1c n\u00fat l\u00e1 kh\u00e1c kh\u00f4ng b\u1ecb \u1ea3nh h\u01b0\u1edfng, v\u00ec m\u1ed7i n\u00fat l\u00e1 ch\u1ec9 \u0111\u01b0\u1ee3c li\u00ean k\u1ebft v\u1edbi m\u1ed9t ph\u1ea7n t\u1eed trong m\u1ea3ng. N\u00fat cha c\u1ee7a n\u00fat \u0111\u00e3 s\u1eeda \u0111\u1ed5i c\u0169ng b\u1ecb \u1ea3nh h\u01b0\u1edfng, v\u00ec \u0111o\u1ea1n n\u00f3 qu\u1ea3n l\u00fd c\u0169ng ch\u1ee9a ph\u1ea7n t\u1eed \u0111\u00e3 s\u1eeda \u0111\u1ed5i, v\u00e0 c\u00e1c n\u00fat t\u1ed5 ti\u00ean c\u1ee7a n\u00f3 c\u0169ng v\u1eady, v.v... cho \u0111\u1ebfn n\u00fat g\u1ed1c. </p> <p>N\u00f3i c\u00e1ch kh\u00e1c, t\u1ea5t c\u1ea3 c\u00e1c n\u00fat n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n t\u1eeb g\u1ed1c \u0111\u1ebfn n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng \u0111\u1ec1u b\u1ecb \u1ea3nh h\u01b0\u1edfng. Ngo\u00e0i ra, kh\u00f4ng c\u00f2n n\u00fat n\u00e0o kh\u00e1c b\u1ecb \u1ea3nh h\u01b0\u1edfng. Do \u0111\u00f3, v\u1edbi m\u1ed9t d\u00e3y s\u1ed1 g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed th\u00ec chi\u1ec1u cao c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n t\u01b0\u01a1ng \u1ee9ng s\u1ebd l\u00e0 \\(\\mathcal{O}(\\log{N})\\) n\u00ean ch\u1ec9 c\u00f3 \\(\\mathcal{O}(\\log{N})\\) n\u00fat c\u1ea7n \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt. - V\u00ed d\u1ee5: Cho m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\). Ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb \\(1\\) \u0111\u01b0\u1ee3c thay \u0111\u1ed5i th\u00e0nh gi\u00e1 tr\u1ecb \\(8\\) trong c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u1ea5y gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t.</p> <p>/uploads/segment-tree-basic_gif1.gif</p> <p>Thao t\u00e1c c\u1eadp nh\u1eadt c\u00e2y ph\u00e2n \u0111o\u1ea1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng m\u1ed9t h\u00e0m \u0111\u1ec7 quy: - \u0110\u1ec3 th\u1ef1c hi\u1ec7n c\u1eadp nh\u1eadt t\u1eeb tr\u00ean xu\u1ed1ng, ta b\u1eaft \u0111\u1ea7u t\u1eeb n\u00fat g\u1ed1c; \u0111i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy t\u1edbi m\u1ed9t n\u00fat con qu\u1ea3n l\u00ed \u0111o\u1ea1n ch\u1ee9a ph\u1ea7n t\u1eed c\u1ea7n s\u1eeda \u0111\u1ed5i (n\u00fat con c\u00f2n l\u1ea1i v\u00e0 c\u00e2y con c\u1ee7a n\u00f3 kh\u00f4ng b\u1ecb \u1ea3nh h\u01b0\u1edfng); v.v... Cho \u0111\u1ebfn tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf l\u00e0 n\u00fat l\u00e1 \u0111\u01b0\u1ee3c li\u00ean k\u1ebft v\u1edbi ph\u1ea7n t\u1eed c\u1ea7n c\u1eadp nh\u1eadt, ta s\u1eeda l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat l\u00e1 \u0111\u00f3.  - Sau khi ho\u00e0n t\u1ea5t l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy cho c\u00e1c n\u00fat con (tr\u1eeb tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf), gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \u0111ang x\u00e9t s\u1ebd \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt l\u1ea1i theo gi\u00e1 tr\u1ecb hai n\u00fat con c\u1ee7a n\u00f3. </p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 thao t\u00e1c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n, c\u00e1ch c\u1eadp nh\u1eadt c\u00e2y ph\u00e2n \u0111o\u1ea1n \"t\u1eeb d\u01b0\u1edbi l\u00ean\" c\u0169ng c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c.</p>"},{"location":"algo/data-structures/segment-tree-basic/#lay-gia-tri","title":"L\u1ea5y gi\u00e1 tr\u1ecb","text":"<p>B\u00e2y gi\u1edd, ta c\u1ea7n ph\u1ea3i tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n l\u1ea5y gi\u00e1 tr\u1ecb. V\u00ed d\u1ee5 nh\u01b0: cho hai s\u1ed1 nguy\u00ean \\(l\\) v\u00e0 \\(r\\), h\u00e3y x\u00e1c \u0111\u1ecbnh ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([l, r]\\) c\u1ee7a m\u1ea3ng \\(A\\) v\u1edbi kho\u1ea3ng th\u1eddi gian l\u00e0 \\(\\mathcal{O}(\\log{n})\\).</p> <p>Do thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb n\u00e0y ph\u1ee9c t\u1ea1p h\u01a1n thao t\u00e1c c\u1eadp nh\u1eadt c\u00e2y ph\u00e2n \u0111o\u1ea1n n\u00ean ta s\u1ebd l\u1ea5y m\u1ed9t v\u00ed d\u1ee5 minh h\u1ecda \u0111\u1ec3 d\u1ec5 h\u00ecnh dung:  - Gi\u1ea3 s\u1eed, cho m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\) v\u00e0 ta mu\u1ed1n bi\u1ebft ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([1, 6]\\) c\u1ee7a m\u1ea3ng \\(A\\).</p> <p></p> <ul> <li>G\u1ecdi \\(f(l,r)\\) l\u00e0 ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([l, r]\\). Ta th\u1ea5y r\u1eb1ng m\u1ed7i n\u00fat trong c\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u1ec1u qu\u1ea3n l\u00ed  m\u1ed9t \u0111o\u1ea1n n\u00e0o \u0111\u00f3, v\u00ed d\u1ee5 nh\u01b0 n\u00fat g\u1ed1c ch\u1ee9a \\(f(1,7)\\), n\u00fat con b\u00ean tr\u00e1i l\u00e0 \\(f(1,4)\\), n\u00fat b\u00ean ph\u1ea3i l\u00e0 \\(f(5,7)\\), v.v...; v\u00e0 m\u1ed7i n\u00fat l\u00e1 ch\u1ee9a \\(f(i, i) = a_i\\). Nh\u01b0ng kh\u00f4ng c\u00f3 n\u00fat n\u00e0o ch\u1ee9a \\(f(1,6)\\); tuy nhi\u00ean, ta nh\u1eadn th\u1ea5y r\u1eb1ng \\(f(1,6) = \\min{(f (1,4), f (5,6))}\\), v\u00e0 c\u00f3 t\u1ed3n t\u1ea1i c\u00e1c n\u00fat trong c\u00e2y ph\u00e2n \u0111o\u1ea1n ch\u1ee9a hai gi\u00e1 tr\u1ecb \u0111\u00f3 (\u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb b\u1eb1ng m\u00e0u xanh d\u01b0\u01a1ng trong h\u00ecnh tr\u00ean).</li> </ul> <p>D\u1ec5 th\u1ea5y r\u1eb1ng \\(f (x, y) = \\min{(f(x, z), f(z + 1, y)})\\) v\u1edbi \\(x \\le z &lt; y\\). Do \u0111\u00f3, ta ph\u1ea3i x\u00e1c \u0111\u1ecbnh t\u1eadp h\u1ee3p \u00edt n\u00fat nh\u1ea5t sao cho t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea1m vi m\u00e0 c\u00e1c n\u00fat \u0111\u00f3 qu\u1ea3n l\u00ed \u0111\u00fang b\u1eb1ng \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n. S\u1ef1 k\u1ebft h\u1ee3p c\u1ee7a t\u1eadp h\u1ee3p c\u00e1c n\u00fat \u0111\u00f3 ch\u00ednh x\u00e1c l\u00e0 \u0111\u00e1p \u00e1n m\u00e0 ta t\u00ecm ki\u1ebfm.</p> <p>\u0110\u1ec3 l\u00e0m nh\u01b0 v\u1eady, ta s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb g\u1ed1c v\u00e0 \u0111\u1ec7 quy qua c\u00e1c n\u00fat m\u00e0 ph\u1ea1m vi qu\u1ea3n l\u00ed c\u1ee7a n\u00f3 c\u00f3 \u00edt nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed chung v\u1edbi \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n. </p> <p>Trong v\u00ed d\u1ee5 tr\u00ean v\u1edbi \\(f(1,6)\\), x\u00e9t hai n\u00fat con c\u1ee7a g\u1ed1c, ta nh\u1eadn th\u1ea5y r\u1eb1ng c\u1ea3 n\u00fat con b\u00ean tr\u00e1i v\u00e0 b\u00ean ph\u1ea3i \u0111\u1ec1u qu\u1ea3n l\u00ed m\u1ed9t s\u1ed1 c\u00e1c ph\u1ea7n t\u1eed con thu\u1ed9c \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n (\u0111o\u1ea1n \\([1, 6]\\)). Do \u0111\u00f3, ta s\u1ebd th\u1ef1c hi\u1ec7n l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy tr\u00ean c\u1ea3 hai n\u00fat con c\u1ee7a n\u00fat g\u1ed1c. Khi \u0111\u00f3, n\u00fat con b\u00ean tr\u00e1i c\u1ee7a g\u1ed1c \u0111\u00f3ng vai tr\u00f2 nh\u01b0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf, v\u00ec ph\u1ea1m vi qu\u1ea3n l\u00ed c\u1ee7a n\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9a ho\u00e0n to\u00e0n b\u00ean trong \u0111o\u1ea1n truy v\u1ea5n; v\u1eady n\u00ean n\u00f3 \u0111\u01b0\u1ee3c ch\u1ecdn (\u0111\u00e1nh d\u1ea5u b\u1eb1ng m\u00e0u xanh d\u01b0\u01a1ng). </p> <p>C\u00f2n v\u1edbi n\u00fat con b\u00ean ph\u1ea3i c\u1ee7a g\u1ed1c (n\u00fat ch\u1ee9a \\(f(5, 7)\\)); ta nh\u1eadn th\u1ea5y r\u1eb1ng n\u00fat con b\u00ean tr\u00e1i c\u1ee7a n\u00fat \\(f(5, 7)\\), t\u1ee9c l\u00e0 \\(f(5, 6)\\) c\u00f3 qu\u1ea3n l\u00ed m\u1ed9t s\u1ed1 c\u00e1c ph\u1ea7n t\u1eed con thu\u1ed9c \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n, nh\u01b0ng n\u00fat con b\u00ean ph\u1ea3i l\u00e0 \\(f(7, 7)\\) th\u00ec kh\u00f4ng. V\u00ec v\u1eady, ta ch\u1ec9 ti\u1ebfp t\u1ee5c g\u1ecdi \u0111\u1ec7 quy tr\u00ean n\u00fat con b\u00ean tr\u00e1i l\u00e0 n\u00fat ch\u1ee9a \\(f(5, 6)\\) v\u00e0 b\u1ecf qua kh\u00f4ng g\u1ecdi \u0111\u1ec7 quy n\u00fat con b\u00ean ph\u1ea3i l\u00e0 n\u00fat ch\u1ee9a \\(f(7, 7)\\). </p> <p>Khi \u0111\u1ea5y, n\u00fat con b\u00ean tr\u00e1i \u0111\u00f3 (n\u00fat \\(f(5, 6)\\)) s\u1ebd l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf kh\u00e1c, n\u00f3 c\u0169ng \u0111\u01b0\u1ee3c ch\u1ecdn (v\u00e0 \u0111\u00e1nh d\u1ea5u b\u1eb1ng m\u00e0u xanh d\u01b0\u01a1ng). </p> <p>\u0110\u1ec7 quy k\u1ebft th\u00fac v\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c n\u00fat \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn.</p>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Th\u1ee9 khi\u1ebfn ta c\u1ea7n ph\u1ea3i c\u00e2n nh\u1eafc \u1edf \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1ch l\u01b0u tr\u1eef c\u00e2y ph\u00e2n \u0111o\u1ea1n. T\u1ea5t nhi\u00ean, ta c\u00f3 th\u1ec3 t\u1ea1o ra m\u1ed9t c\u1ea5u tr\u00fac c\u00e2y v\u00e0 danh s\u00e1ch c\u1ea1nh, l\u01b0u tr\u1eef ph\u1ea1m vi qu\u1ea3n l\u00ed c\u1ee7a t\u1eebng n\u00fat v\u00e0 c\u00e1c th\u00f4ng tin c\u1ee7a n\u00f3. Tuy nhi\u00ean \u0111i\u1ec1u n\u00e0y \u0111\u00f2i h\u1ecfi ph\u1ea3i l\u01b0u tr\u1eef nhi\u1ec1u th\u00f4ng tin d\u01b0 th\u1eeba. </p> <p>Thay v\u00e0o \u0111\u00f3, ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t th\u1ee7 thu\u1eadt \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 l\u00e0m cho vi\u1ec7c n\u00e0y tr\u1edf n\u00ean hi\u1ec7u qu\u1ea3 h\u01a1n r\u1ea5t nhi\u1ec1u. Ta s\u1ebd ch\u1ec9 l\u01b0u tr\u1eef c\u00e1c th\u00f4ng tin c\u1ee7a t\u1eebng n\u00fat v\u00e0o trong m\u1ed9t m\u1ea3ng. Th\u00f4ng tin c\u1ee7a n\u00fat g\u1ed1c l\u01b0u \u1edf ch\u1ec9 s\u1ed1 \\(1\\), th\u00f4ng tin c\u1ee7a hai n\u00fat con c\u1ee7a n\u00f3 l\u01b0u \u1edf ch\u1ec9 s\u1ed1 \\(2\\) v\u00e0 \\(3\\), th\u00f4ng tin c\u1ee7a c\u00e1c n\u00fat con c\u1ee7a hai n\u00fat \u0111\u00f3 s\u1ebd l\u01b0u \u1edf ch\u1ec9 s\u1ed1 t\u1eeb \\(4\\) \u0111\u1ebfn \\(7\\), v.v... D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y, con b\u00ean tr\u00e1i c\u1ee7a n\u00fat c\u00f3 ch\u1ec9 s\u1ed1 \\(id\\) \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i ch\u1ec9 s\u1ed1 \\(2 \\times id\\) v\u00e0 con b\u00ean ph\u1ea3i \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i ch\u1ec9 s\u1ed1 \\(2 \\times id + 1\\).</p> <ul> <li> <p>V\u00ed d\u1ee5 minh h\u1ecda: Cho m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\), ta c\u00f3 \\(\\(st[] = \\{1, 2, 1, 2, 3, 1, 7, 9, 2, 6, 3, 1, 5\\}\\)\\) (v\u1edbi \\(st[]\\) l\u00e0 m\u1ea3ng bi\u1ec3u di\u1ec5n cho Segment Tree, l\u01b0u l\u1ea1i th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat).</p> <p></p> <ul> <li>Ch\u1ec9 s\u1ed1 tr\u00ean m\u1ea3ng \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng m\u00e0u \u0111\u1ecf b\u00ean c\u1ea1nh m\u1ed7i n\u00fat, v\u00ed d\u1ee5 nh\u01b0 n\u00fat c\u00f3 ch\u1ec9 s\u1ed1 \\(id = 2\\) s\u1ebd qu\u1ea3n l\u00ed \u0111o\u1ea1n \\([1, 4]\\) v\u00e0 n\u00fat con b\u00ean tr\u00e1i c\u1ee7a n\u00f3 c\u00f3 ch\u1ec9 s\u1ed1 \\(4\\), c\u00f2n n\u00fat con b\u00ean ph\u1ea3i c\u00f3 ch\u1ec9 s\u1ed1 \\(5\\). </li> </ul> </li> </ul> <p>\u0110i\u1ec1u n\u00e0y \u0111\u01a1n gi\u1ea3n h\u00f3a vi\u1ec7c c\u00e0i \u0111\u1eb7t r\u1ea5t nhi\u1ec1u. Ta kh\u00f4ng c\u1ea7n l\u01b0u h\u1ebft to\u00e0n b\u1ed9 c\u1ea5u tr\u00fac c\u1ee7a c\u00e2y trong b\u1ed9 nh\u1edb. M\u00e0 n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a m\u1ed9t c\u00e1ch ng\u1ea7m \u0111\u1ecbnh. Ta ch\u1ec9 c\u1ea7n m\u1ed9t m\u1ea3ng ch\u1ee9a th\u00f4ng tin c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c ph\u00e2n \u0111o\u1ea1n.</p> <p>\u0110\u1ec3 d\u1ec5 h\u00ecnh dung, ta l\u1ea5y \\(1\\) v\u00ed d\u1ee5 c\u1ee5 th\u1ec3:</p> <ul> <li>Cho d\u00e3y \\(A\\) g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed \\(a_1, a_2, ..., a_n\\) \\((1 \\le n \\le 10^5; \\space \\|a_i\\| \\le 10^9\\) v\u1edbi \\(1 \\le i \\le n)\\).</li> <li>C\u00f3 \\(q\\) truy v\u1ea5n \\((1 \\le q \\le 10^5)\\). M\u1ed7i truy v\u1ea5n thu\u1ed9c \\(1\\) trong \\(2\\) lo\u1ea1i:<ul> <li>Lo\u1ea1i 1: C\u00f3 d\u1ea1ng \\(1 \\space x \\space y\\) : G\u00e1n gi\u00e1 tr\u1ecb \\(y\\) cho ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed \\(x\\).</li> <li>Lo\u1ea1i 2: C\u00f3 d\u1ea1ng \\(2 \\space l \\space r\\) : T\u00ecm ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n \\([l, r]\\).</li> </ul> </li> </ul> <p>C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 d\u00f9ng m\u1ed9t m\u1ea3ng \\(A\\) duy tr\u00ec gi\u00e1 tr\u1ecb c\u00e1c ph\u1ea7n t\u1eed. V\u1edbi truy v\u1ea5n \\(1\\) th\u00ec ta g\u00e1n \\(A[x] = y\\). V\u1edbi truy v\u1ea5n \\(2\\) th\u00ec ta d\u00f9ng m\u1ed9t v\u00f2ng l\u1eb7p t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t. R\u00f5 r\u00e0ng c\u00e1ch n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(n \\times q)\\) v\u00e0 kh\u00f4ng th\u1ec3 ch\u1ea1y trong th\u1eddi gian cho ph\u00e9p.</p> <p>Do \u0111\u00f3, ta s\u1ebd c\u00e0i \u0111\u1eb7t Segment Tree \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n tr\u00ean nh\u01b0 sau:</p> <p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code> .</li> <li>H\u1eb1ng s\u1ed1 <code>inf = 1000000007</code> .</li> <li>M\u1ea3ng <code>st[]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int inf  = 1e9 + 7;\nconst int maxN = 1e5 + 7;\n\nint n, q;\nint a[maxN];\nint st[4 * maxN]; // L\u00ed do s\u1eed d\u1ee5ng k\u00edch th\u01b0\u1edbc m\u1ea3ng l\u00e0 4 * maxN s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch \u1edf ph\u1ea7n sau\n\n// Th\u1ee7 t\u1ee5c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n\nvoid build(int id, int l, int r) {\n    // \u0110o\u1ea1n ch\u1ec9 g\u1ed3m 1 ph\u1ea7n t\u1eed, kh\u00f4ng c\u00f3 n\u00fat con\n    if (l == r) {\n        st[id] = a[l];\n        return;\n    }\n\n    // G\u1ecdi \u0111\u1ec7 quy \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c n\u00fat con c\u1ee7a n\u00fat id\n    int mid = l + r &gt;&gt; 1; // (l + r) / 2\n    build(2 * id, l, mid);\n    build(2 * id + 1, mid + 1, r);\n\n    // C\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb min c\u1ee7a \u0111o\u1ea1n [l, r] theo 2 n\u00fat con\n    st[id] = min(st[2 * id], st[2 * id + 1]);\n}\n\n// Th\u1ee7 t\u1ee5c c\u1eadp nh\u1eadt\nvoid update(int id, int l, int r, int i, int val) {\n    // i n\u1eb1m ngo\u00e0i \u0111o\u1ea1n [l, r], ta b\u1ecf qua n\u00fat id\n    if (l &gt; i || r &lt; i) return;\n\n    // \u0110o\u1ea1n ch\u1ec9 g\u1ed3m 1 ph\u1ea7n t\u1eed, kh\u00f4ng c\u00f3 n\u00fat con\n    if (l == r) {\n        st[id] = val;\n        return;\n    }\n\n    // G\u1ecdi \u0111\u1ec7 quy \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c n\u00fat con c\u1ee7a n\u00fat id\n    int mid = l + r &gt;&gt; 1; // (l + r) / 2\n    update(2 * id, l, mid, i, val);\n    update(2 * id + 1, mid + 1, r, i, val);\n\n    // C\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb min c\u1ee7a \u0111o\u1ea1n [l, r] theo 2 n\u00fat con\n    st[id] = min(st[2 * id], st[2 * id + 1]);\n}\n\n\n// H\u00e0m l\u1ea5y gi\u00e1 tr\u1ecb\nint get(int id, int l, int r, int u, int v) {\n    // \u0110o\u1ea1n [u, v] kh\u00f4ng giao v\u1edbi \u0111o\u1ea1n [l, r], ta b\u1ecf qua \u0111o\u1ea1n n\u00e0y\n    if (l &gt;  v || r &lt;  u) return inf; \n\n    /* \u0110o\u1ea1n [l, r] n\u1eb1m ho\u00e0n to\u00e0n trong \u0111o\u1ea1n [u, v] m\u00e0 ta \u0111ang truy v\u1ea5n, \n        ta tr\u1ea3 l\u1ea1i th\u00f4ng tin l\u01b0u \u1edf n\u00fat id */\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[id];\n\n    // G\u1ecdi \u0111\u1ec7 quy v\u1edbi c\u00e1c n\u00fat con c\u1ee7a n\u00fat id\n    int mid = l + r &gt;&gt; 1; // (l + r) / 2\n    int get1 = get(2 * id, l, mid, u, v);\n    int get2 = get(2 * id + 1, mid + 1, r, u, v);\n\n    // Tr\u1ea3 ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t theo 2 n\u00fat con\n    return min(get1, get2);\n}\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    build(1, 1, n);\n\n    cin &gt;&gt; q;\n    while (q--) {\n        int type, x, y;\n        cin &gt;&gt; type &gt;&gt; x &gt;&gt; y;\n        if (type == 1) update(1, 1, n, x, y); // G\u00e1n gi\u00e1 tr\u1ecb y cho ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed x \n        else cout &lt;&lt; get(1, 1, n, x, y) &lt;&lt; '\\n'; // In ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n [x, y]\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u1ede ph\u1ea7n C\u00e1c thao t\u00e1c tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n c\u00f3 nh\u1eafc \u0111\u1ebfn \\(2\\) c\u00e1ch \u0111\u1ec3 c\u00e0i \u0111\u1eb7t Segment Tree. V\u00ec s\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 t\u1ed1c \u0111\u1ed9 c\u1ee7a hai c\u00e1ch c\u00f3 th\u1ec3 l\u00e0 kh\u00f4ng \u0111\u00e1ng k\u1ec3, n\u00ean b\u00e0i vi\u1ebft n\u00e0y s\u1ebd ch\u1ec9 c\u00e0i \u0111\u1eb7t theo c\u00e1ch th\u00f4ng th\u01b0\u1eddng nh\u1ea5t l\u00e0 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec7 quy.</p> <p>Segment Tree c\u00f2n c\u00f3 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c s\u1eed d\u1ee5ng \u00edt b\u1ed9 nh\u1edb h\u01a1n (s\u1eed d\u1ee5ng t\u1ed1i \u0111a \\(2 \\times N\\) ph\u1ea7n t\u1eed), c\u00e0i \u0111\u1eb7t ng\u1eafn h\u01a1n v\u00e0 ch\u1ea1y nhanh h\u01a1n. Tuy nhi\u00ean th\u00ec n\u00f3 kh\u00f4ng d\u1ec5 hi\u1ec3u b\u1eb1ng c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean. B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam t\u1ea1i \u0111\u00e2y: VNOI - Efficient and easy segment trees.</p>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich-o-phuc-tap","title":"Ph\u00e2n t\u00edch \u0111\u1ed9 ph\u1ee9c t\u1ea1p","text":""},{"location":"algo/data-structures/segment-tree-basic/#bo-nho","title":"B\u1ed9 nh\u1edb","text":"<p>Ta x\u00e9t \\(2\\) tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>TH1: \\(N = 2^k\\) : C\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u1ea7y \u0111\u1ee7, \u1edf \u0111\u1ed9 s\u00e2u cu\u1ed1i c\u00f9ng c\u00f3 \u0111\u00fang \\(2^k\\) l\u00e1, v\u00e0 c\u00e1c \u0111\u1ed9 s\u00e2u th\u1ea5p h\u01a1n kh\u00f4ng c\u00f3 n\u00fat l\u00e1 n\u00e0o (v\u00e0 c\u00e1c n\u00fat n\u00e0y \u0111\u1ec1u c\u00f3 \u0111\u00fang \\(2\\) con). Nh\u01b0 v\u1eady:<ul> <li>T\u1ea7ng \\(k\\) : c\u00f3 \\(2^k\\) n\u00fat</li> <li>T\u1ea7ng \\(k-1\\) : c\u00f3 \\(2^{k-1}\\) n\u00fat</li> <li>... \\(\\Rightarrow\\) T\u1ed5ng s\u1ed1 n\u00fat kh\u00f4ng qu\u00e1 \\(2^{k+1}\\) (v\u00ec t\u1ed5ng s\u1ed1 n\u00fat \\(= 2^k + 2^{k-1} +  \\ldots + 2^0 = 2^{k+1} - 1\\) theo c\u00f4ng th\u1ee9c c\u1ea5p s\u1ed1 nh\u00e2n).</li> </ul> </li> <li>TH2: V\u1edbi \\(N &gt; 2^k\\) v\u00e0 \\(N &lt; 2^{k+1}\\) : S\u1ed1 n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n kh\u00f4ng qu\u00e1 s\u1ed1 n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n v\u1edbi \\(N = 2^{k+1}\\).</li> </ul> <p>Do \u0111\u00f3, s\u1ed1 n\u00fat c\u1ee7a c\u00e2y cho d\u00e3y \\(N\\) ph\u1ea7n t\u1eed (v\u1edbi \\(N \\le 2^k\\)) l\u00e0 kh\u00f4ng qu\u00e1 \\(2^{k+1}\\), gi\u00e1 tr\u1ecb n\u00e0y x\u1ea5p x\u1ec9 \\(4 \\times N\\). B\u1eb1ng th\u1ef1c nghi\u1ec7m, ta th\u1ea5y d\u00f9ng \\(4 \\times N\\) l\u00e0 \u0111\u1ee7.</p> <p>Tham kh\u1ea3o th\u00eam c\u00e1c c\u00e1ch ch\u1ee9ng minh kh\u00e1c t\u1ea1i \u0111\u00e2y: Codeforces \u2013 Blog entry 49939.</p>"},{"location":"algo/data-structures/segment-tree-basic/#thoi-gian","title":"Th\u1eddi gian","text":""},{"location":"algo/data-structures/segment-tree-basic/#thao-tac-xay-dung","title":"Thao t\u00e1c x\u00e2y d\u1ef1ng","text":"<p>Thao t\u00e1c x\u00e2y d\u1ef1ng s\u1ebd y\u00eau c\u1ea7u m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng \u0111\u1ed5i tr\u00ean m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n. V\u1edbi m\u1ea3ng c\u00f3 \\(N\\) ph\u1ea7n t\u1eed th\u00ec s\u1ed1 l\u01b0\u1ee3ng n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n x\u1ea5p x\u1ec9 \\(4 \\times N\\) (\u0111\u00e3 ch\u1ee9ng minh \u1edf tr\u00ean), v\u00e0 v\u00ec thao t\u00e1c x\u00e2y d\u1ef1ng m\u1ea5t th\u1eddi gian tuy\u1ebfn t\u00ednh n\u00ean s\u1ebd c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(4 \\times N)\\). </p> <p>Ta c\u00f3 th\u1ec3 nh\u1eadn th\u1ea5y r\u1eb1ng thao t\u00e1c x\u00e2y d\u1ef1ng nhanh h\u01a1n so v\u1edbi vi\u1ec7c th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c c\u1eadp nh\u1eadt ri\u00eang bi\u1ec7t (vi\u1ec7c duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng \u0111\u1ec3 c\u1eadp nh\u1eadt s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N \\times \\log{N})\\) ).</p>"},{"location":"algo/data-structures/segment-tree-basic/#thao-tac-cap-nhat","title":"Thao t\u00e1c c\u1eadp nh\u1eadt","text":"<p>V\u1edbi thao t\u00e1c c\u1eadp nh\u1eadt, m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng c\u00e1c ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng \u0111\u1ed5i \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n cho m\u1ed7i n\u00fat tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n t\u1eeb g\u1ed1c \u0111\u1ebfn n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi ph\u1ea7n t\u1eed c\u1ea7n s\u1eeda \u0111\u1ed5i. \u0110\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c \u1edf m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, ta ch\u1ec9 g\u1ecdi \u0111\u1ec7 quy t\u1edbi kh\u00f4ng qu\u00e1 \\(1\\) n\u00fat con. </p> <p>Ph\u00e2n t\u00edch \u0111o\u1ea1n code tr\u00ean, ta x\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p: - Ph\u1ea7n t\u1eed c\u1ea7n x\u00e9t kh\u00f4ng n\u1eb1m trong \u0111o\u1ea1n \\([l, r]\\) do n\u00fat \\(id\\) qu\u1ea3n l\u00fd. Tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta d\u1eebng l\u1ea1i, kh\u00f4ng x\u00e9t ti\u1ebfp. - Ph\u1ea7n t\u1eed c\u1ea7n x\u00e9t n\u1eb1m trong \u0111o\u1ea1n \\([l, r]\\) do n\u00fat \\(id\\) qu\u1ea3n l\u00fd. Ta x\u00e9t c\u00e1c con c\u1ee7a n\u00fat \\(id\\). Tuy nhi\u00ean ch\u1ec9 c\u00f3 \\(1\\) con c\u1ee7a n\u00fat \\(id\\) ch\u1ee9a ph\u1ea7n t\u1eed c\u1ea7n x\u00e9t v\u00e0 ta s\u1ebd ph\u1ea3i x\u00e9t ti\u1ebfp c\u00e1c con c\u1ee7a n\u00fat n\u00e0y. V\u1edbi n\u00fat con c\u00f2n l\u1ea1i, ta s\u1ebd d\u1eebng ngay m\u00e0 kh\u00f4ng x\u00e9t c\u00e1c con c\u1ee7a n\u00f3 n\u1eefa.</p> <p>V\u00ec s\u1ed1 l\u01b0\u1ee3ng c\u00e1c n\u00fat tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n t\u1eeb g\u1ed1c \u0111\u1ebfn n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng \u0111\u01b0\u1ee3c gi\u1edbi h\u1ea1n b\u1edfi chi\u1ec1u cao c\u1ee7a c\u00e2y l\u00e0 \\(\\mathcal{O}(\\log{N})\\) n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c c\u1eadp nh\u1eadt s\u1ebd l\u00e0 \\(\\mathcal{O}(\\log{N})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#thao-tac-lay-gia-tri","title":"Thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb","text":"<p>Tr\u01b0\u1edbc ti\u00ean, ta h\u00e3y xem x\u00e9t t\u1eebng \u0111\u1ed9 s\u00e2u c\u1ee7a c\u1ee7a c\u00e2y. T\u1eeb \u0111\u00f3 c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng \u0111\u1ed1i v\u1edbi m\u1ed7i \u0111\u1ed9 s\u00e2u, ta ch\u1ec9 truy c\u1eadp kh\u00f4ng qu\u00e1 \\(4\\) n\u00fat. V\u00e0 v\u00ec chi\u1ec1u cao c\u1ee7a c\u00e2y l\u00e0 \\(\\mathcal{O}(\\log{N})\\) n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb l\u00e0 \\(\\mathcal{O}(\\log{N})\\).</p> <p>Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh r\u1eb1ng m\u1ec7nh \u0111\u1ec1 n\u00e0y (truy c\u1eadp nhi\u1ec1u nh\u1ea5t b\u1ed1n n\u00fat trong m\u1ed7i \u0111\u1ed9 s\u00e2u) l\u00e0 \u0111\u00fang b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p quy n\u1ea1p: - \u1ede \u0111\u1ed9 s\u00e2u \u0111\u1ea7u ti\u00ean, ta ch\u1ec9 truy c\u1eadp duy nh\u1ea5t m\u1ed9t n\u00fat l\u00e0 n\u00fat g\u1ed1c, v\u00ec v\u1eady \u1edf \u0111\u00e2y ta truy c\u1eadp \u00edt h\u01a1n \\(4\\) n\u00fat.  - B\u00e2y gi\u1edd, ta h\u00e3y xem x\u00e9t m\u1ed9t \u0111\u1ed9 s\u00e2u b\u1ea5t k\u00ec. Theo gi\u1ea3 thuy\u1ebft quy n\u1ea1p l\u00e0 ta th\u0103m nhi\u1ec1u nh\u1ea5t \\(4\\) n\u00fat. N\u1ebfu ta ch\u1ec9 th\u0103m nhi\u1ec1u nh\u1ea5t \\(2\\) n\u00fat, th\u00ec \u1edf \u0111\u1ed9 s\u00e2u ti\u1ebfp theo, s\u1ed1 l\u01b0\u1ee3ng n\u00fat \u0111\u01b0\u1ee3c th\u0103m nhi\u1ec1u nh\u1ea5t s\u1ebd l\u00e0 \\(4\\) n\u00fat. \u0110i\u1ec1u \u0111\u00f3 th\u1eadt hi\u1ec3n nhi\u00ean, b\u1edfi v\u00ec m\u1ed7i n\u00fat c\u00f3 th\u1ec3 t\u1ea1o ra nhi\u1ec1u nh\u1ea5t \\(2\\) l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy.  - V\u00ec v\u1eady, gi\u1ea3 s\u1eed r\u1eb1ng ta truy c\u1eadp \\(3\\) ho\u1eb7c \\(4\\) n\u00fat trong \u0111\u1ed9 s\u00e2u hi\u1ec7n t\u1ea1i. T\u1eeb c\u00e1c n\u00fat \u0111\u00f3, ta s\u1ebd ph\u00e2n t\u00edch k\u1ef9 h\u01a1n c\u00e1c n\u00fat n\u1eb1m \u1edf gi\u1eefa (ngh\u0129a l\u00e0 n\u00fat th\u1ee9 hai t\u1eeb tr\u00e1i sang v\u1edbi s\u1ed1 l\u01b0\u1ee3ng n\u00fat \u0111ang \u0111\u01b0\u1ee3c truy c\u1eadp l\u00e0 \\(3\\) v\u00e0 n\u00fat th\u1ee9 \\(2, \\space 3\\) v\u1edbi s\u1ed1 n\u00fat \u0111ang \u0111\u01b0\u1ee3c truy c\u1eadp l\u00e0 \\(4\\)) . V\u00ec truy v\u1ea5n y\u00eau c\u1ea7u l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t \u0111o\u1ea1n con li\u00ean t\u1ee5c, ta bi\u1ebft r\u1eb1ng c\u00e1c ph\u00e2n \u0111o\u1ea1n t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c n\u00fat \u0111\u00e3 th\u0103m \u1edf gi\u1eefa s\u1ebd \u0111\u01b0\u1ee3c bao ph\u1ee7 ho\u00e0n to\u00e0n b\u1edfi ph\u00e2n \u0111o\u1ea1n c\u1ee7a truy v\u1ea5n. Do \u0111\u00f3 c\u00e1c n\u00fat n\u00e0y s\u1ebd kh\u00f4ng th\u1ef1c hi\u1ec7n b\u1ea5t k\u1ef3 l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy n\u00e0o t\u1edbi c\u00e1c n\u00fat con n\u1eefa. V\u00ec v\u1eady, ch\u1ec9 n\u00fat b\u00ean tr\u00e1i nh\u1ea5t v\u00e0 n\u00fat b\u00ean ph\u1ea3i nh\u1ea5t m\u1edbi c\u00f3 kh\u1ea3 n\u0103ng ti\u1ebfp t\u1ee5c g\u1ecdi \u0111\u1ec7 quy. V\u00e0 hai n\u00fat \u0111\u00f3 s\u1ebd ch\u1ec9 t\u1ea1o ra nhi\u1ec1u nh\u1ea5t \\(4\\) l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy, v\u00ec v\u1eady \u0111\u1ed9 s\u00e2u ti\u1ebfp theo c\u0169ng s\u1ebd \u0111\u00e1p \u1ee9ng \u0111\u00fang m\u1ec7nh \u0111\u1ec1.      - V\u00ed d\u1ee5: Gi\u1ea3 s\u1eed, \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n l\u00e0 \u0111o\u1ea1n \\([2, 5]\\). \u1ede \u0111\u1ed9 s\u00e2u th\u1ee9 \\(3\\), ta s\u1ebd truy c\u1eadp v\u00e0o ba n\u00fat qu\u1ea3n l\u00ed c\u00e1c \u0111o\u1ea1n \\([1, 2]\\), \\([3, 4]\\) v\u00e0 \\([5, 6]\\) (\u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1eb1ng m\u00e0u xanh d\u01b0\u01a1ng). Khi \u0111\u00f3, v\u00ec n\u00fat qu\u1ea3n l\u00ed \u0111o\u1ea1n \\([3, 4]\\) n\u1eb1m ho\u00e0n to\u00e0n b\u00ean trong \u0111o\u1ea1n \\([2, 5]\\) n\u00ean h\u00e0m \u0111\u1ec7 quy s\u1ebd tr\u1ea3 ra lu\u00f4n gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \u0111\u00f3, m\u00e0 kh\u00f4ng g\u1ecdi \u0111\u1ec7 quy t\u1edbi c\u00e1c n\u00fat con. Ch\u1ec9 c\u00f3 hai n\u00fat l\u00e0 n\u00fat b\u00ean tr\u00e1i nh\u1ea5t qu\u1ea3n l\u00ed \u0111o\u1ea1n \\([1, 2]\\) v\u00e0 n\u00fat b\u00ean ph\u1ea3i nh\u1ea5t qu\u1ea3n l\u00ed \u0111o\u1ea1n \\([5, 6]\\) m\u1edbi \u0111\u01b0\u1ee3c ti\u1ebfp t\u1ee5c g\u1ecdi \u0111\u1ec7 quy.</p> <pre><code>![/uploads/segment-tree-basic_img6.png](/uploads/segment-tree-basic_img6.png)\n</code></pre> <ul> <li>Ta c\u0169ng c\u00f3 th\u1ec3 n\u00f3i r\u1eb1ng m\u1ed9t nh\u00e1nh c\u00e2y ph\u00e2n \u0111o\u1ea1n s\u1ebd ti\u1ebfp c\u1eadn d\u1ea7n t\u1edbi gi\u1edbi h\u1ea1n b\u00ean tr\u00e1i c\u1ee7a truy v\u1ea5n v\u00e0 nh\u00e1nh th\u1ee9 hai ti\u1ebfp c\u1eadn t\u1edbi gi\u1edbi h\u1ea1n b\u00ean ph\u1ea3i.</li> </ul> <p>Do \u0111\u00f3, ta s\u1ebd ch\u1ec9 truy c\u1eadp nhi\u1ec1u nh\u1ea5t \\(4 \\times \\log{N}\\) n\u00fat tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n, v\u00e0 \u0111\u00f3 c\u0169ng ch\u00ednh l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb.</p>"},{"location":"algo/data-structures/segment-tree-basic/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>VNOI - ITEZ2</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>B\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t m\u1ea3ng g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean. Ban \u0111\u1ea7u t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 c\u1ee7a m\u1ea3ng \u0111\u1ec1u l\u00e0 \\(0\\). Nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n l\u00e0 x\u1eed l\u00ed \\(2\\) lo\u1ea1i truy v\u1ea5n: - Lo\u1ea1i \\(1\\) c\u00f3 d\u1ea1ng \\(1 \\space x \\space y\\) : G\u00e1n ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(x\\) trong d\u00e3y th\u00e0nh s\u1ed1 \\(y\\) \\((1 \\le x \\le n, \\|y\\| \\le 10^9)\\). - Lo\u1ea1i \\(2\\) c\u00f3 d\u1ea1ng \\(2 \\space l \\space r\\) : In ra t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) \\((1 \\le l \\le r \\le n)\\).</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n lo\u1ea1i \\(2\\), h\u00e3y in ra c\u00e2u tr\u1ea3 l\u1eddi tr\u00ean m\u1ed9t d\u00f2ng.</p> <p>\\(\\circ \\space \\space 1 \\le n, q \\le 10^5\\) (v\u1edbi \\(q\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n).</p>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>V\u00ec ban \u0111\u1ea7u gi\u00e1 tr\u1ecb c\u1ee7a t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong m\u1ea3ng \u0111\u1ec1u b\u1eb1ng \\(0\\) n\u00ean ta kh\u00f4ng c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n thao t\u00e1c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n.</p> <p>Nh\u1eadn th\u1ea5y r\u1eb1ng, tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n, m\u1ed7i n\u00fat kh\u00f4ng ph\u1ea3i l\u00e1 s\u1ebd ch\u1ee9a t\u1ed5ng gi\u00e1 tr\u1ecb t\u1ea1i c\u00e1c n\u00fat con c\u1ee7a n\u00f3. Do \u0111\u00f3, ta ch\u1ec9 c\u1ea7n thay th\u1ebf t\u1ea5t c\u1ea3 c\u00e1c ph\u00e9p to\u00e1n min \u1edf v\u00ed d\u1ee5 tr\u00ean (trong ph\u1ea7n C\u00e0i \u0111\u1eb7t) b\u1eb1ng c\u00e1c ph\u00e9p to\u00e1n c\u1ed9ng.</p>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>M\u1ea3ng <code>st[]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 1e5 + 7;\n\nint n, q;\nint a[maxN];\nlong long st[4 * maxN];\n\n// Th\u1ee7 t\u1ee5c c\u1eadp nh\u1eadt\nvoid update(int id, int l, int r, int i, int val) {\n    if (l &gt; i || r &lt; i) return;\n    if (l == r) {\n        st[id] = val;\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    update(2 * id, l, mid, i, val);\n    update(2 * id + 1, mid + 1, r, i, val);\n    st[id] = st[2 * id] + st[2 * id + 1];\n}\n\n// H\u00e0m l\u1ea5y t\u1ed5ng gi\u00e1 tr\u1ecb\nlong long get(int id, int l, int r, int u, int v) {\n    if (l &gt;  v || r &lt;  u) return 0;\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[id];\n\n    int mid = l + r &gt;&gt; 1;\n    long long get1 = get(2 * id, l, mid, u, v);\n    long long get2 = get(2 * id + 1, mid + 1, r, u, v);\n    return get1 + get2;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; q;\n    while (q--){\n        int type, x, y;\n        cin &gt;&gt; type &gt;&gt; x &gt;&gt; y;\n        if (type == 1) update(1, 1, n, x, y);\n        else cout &lt;&lt; get(1, 1, n, x, y) &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia_1","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n, ta s\u1ebd m\u1ea5t \\(\\mathcal{O}(\\log{n})\\) cho m\u1ed7i thao t\u00e1c tr\u00ean Segment Tree. Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(q \\times \\log{n})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>VNOI - GSS</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-toan_1","title":"B\u00e0i to\u00e1n","text":"<p>Cho d\u00e3y s\u1ed1 \\(a_1, a_2, ..., a_n\\) \\((\\|a_i\\| \\le 15000, \\space n \\le 50000)\\).</p> <p>H\u00e0m \\(q(x, y)\\) =  \\(\\max \\Big( \\displaystyle\\sum_{k = i}^{j} a_k\\), v\u1edbi \\(x \\le i \\le j \\le y \\Big)\\).</p> <p>Cho \\(m\\) \\((m \\le 50000)\\) c\u00e2u h\u1ecfi d\u1ea1ng \\(x, y\\) \\((1 \\le x \\le y \\le n)\\), h\u00e3y t\u00ednh c\u00e1c \\(q(x, y)\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>\u1ede b\u00e0i to\u00e1n n\u00e0y, m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u01b0u l\u1ea1i c\u00e1c th\u00f4ng tin sau: - <code>pre</code> : Ti\u1ec1n t\u1ed1 c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t tr\u00ean \u0111o\u1ea1n. - <code>suf</code> : H\u1eadu t\u1ed1 c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t tr\u00ean \u0111o\u1ea1n. - <code>sum</code> : T\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c ph\u1ea7n t\u1eed tr\u00ean \u0111o\u1ea1n. - <code>maxsum</code> : T\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a \u0111o\u1ea1n con n\u1eb1m trong \u0111o\u1ea1n m\u00e0 n\u00fat \u0111\u00f3 qu\u1ea3n l\u00ed.</p> <p>B\u00e2y gi\u1edd, ta c\u1ea7n ph\u1ea3i x\u00e1c \u0111\u1ecbnh c\u00e1c ph\u00e9p to\u00e1n \u0111\u1ec3 \"h\u1ee3p nh\u1ea5t\" hai n\u00fat con: - <code>pre</code> : D\u1ec5 th\u1ea5y r\u1eb1ng ti\u1ec1n t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a n\u00fat cha s\u1ebd b\u1eb1ng max ti\u1ec1n t\u1ed1 c\u1ee7a n\u00fat con b\u00ean tr\u00e1i v\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat con b\u00ean tr\u00e1i c\u1ed9ng v\u1edbi ti\u1ec1n t\u1ed1 c\u1ee7a n\u00fat con b\u00ean ph\u1ea3i.     - Minh h\u1ecda: \\(\\mathrm{pre}[l, r] = \\max{(\\mathrm{pre}[l, mid], \\space \\mathrm{sum}[l, mid] + \\mathrm{pre}[mid + 1, r])}\\) v\u1edbi \\(mid = \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor\\).</p> <pre><code>![/uploads/segment-tree-basic_img7.png](/uploads/segment-tree-basic_img7.png)\n</code></pre> <ul> <li><code>suf</code> : H\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a n\u00fat cha s\u1ebd b\u1eb1ng max h\u1eadu t\u1ed1 c\u1ee7a n\u00fat con b\u00ean ph\u1ea3i v\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat con b\u00ean ph\u1ea3i c\u1ed9ng v\u1edbi h\u1eadu t\u1ed1 c\u1ee7a n\u00fat con b\u00ean tr\u00e1i. C\u00e1ch t\u00ednh h\u1eadu t\u1ed1 t\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1edbi ti\u1ec1n t\u1ed1 n\u00ean s\u1ebd kh\u00f4ng minh h\u1ecda l\u1ea1i n\u1eefa.</li> <li><code>sum</code> : Ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh to\u00e1n gi\u1ed1ng nh\u01b0 \u1edf V\u00ed d\u1ee5 1 b\u1eb1ng c\u00e1ch l\u1ea5y t\u1ed5ng gi\u00e1 tr\u1ecb \\(2\\) n\u00fat con.</li> <li> <p><code>maxsum</code> : </p> <ul> <li>X\u00e9t \\(3\\) tr\u01b0\u1eddng h\u1ee3p:<ul> <li>TH1: \u0110o\u1ea1n con c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t n\u1eb1m ho\u00e0n to\u00e0n b\u00ean trong n\u00fat con b\u00ean tr\u00e1i.</li> <li>TH2: \u0110o\u1ea1n con c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t n\u1eb1m ho\u00e0n to\u00e0n b\u00ean trong n\u00fat con b\u00ean ph\u1ea3i.</li> <li>TH3: M\u1ed9t ph\u1ea7n c\u1ee7a \u0111o\u1ea1n con c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t n\u1eb1m \u1edf n\u00fat con b\u00ean ph\u1ea3i, v\u00e0 ph\u1ea7n c\u00f2n l\u1ea1i n\u1eb1m \u1edf n\u00fat con b\u00ean tr\u00e1i.</li> </ul> </li> <li>\u1ede \\(2\\) tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u ti\u00ean th\u00ec ta ch\u1ec9 c\u1ea7n tr\u1ef1c ti\u1ebfp l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a \u0111o\u1ea1n con l\u1edbn nh\u1ea5t t\u1eeb c\u00e1c n\u00fat con.</li> <li> <p>\u1ede tr\u01b0\u1eddng h\u1ee3p th\u1ee9 \\(3\\), gi\u00e1 tr\u1ecb c\u1ee7a \u0111o\u1ea1n con l\u1edbn nh\u1ea5t s\u1ebd l\u00e0 t\u1ed5ng h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a n\u00fat con b\u00ean tr\u00e1i v\u1edbi ti\u1ec1n t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a n\u00fat con b\u00ean ph\u1ea3i.</p> <ul> <li>Minh h\u1ecda: Tr\u01b0\u1eddng h\u1ee3p \\(3\\), v\u1edbi \\(mid = \\big\\lfloor \\frac{l + r}{2} \\big\\rfloor\\) :</li> </ul> <p></p> </li> <li> <p>Khi \u0111\u00f3, gi\u00e1 tr\u1ecb c\u1ee7a \u0111o\u1ea1n con l\u1edbn nh\u1ea5t n\u1eb1m trong \u0111o\u1ea1n \u0111\u01b0\u1ee3c qu\u1ea3n l\u00ed b\u1edfi n\u00fat cha s\u1ebd l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a c\u1ea3 ba tr\u01b0\u1eddng h\u1ee3p tr\u00ean.</p> </li> </ul> </li> </ul> <p>V\u1edbi m\u1ed7i truy v\u1ea5n, \u0111\u00e1p \u00e1n ch\u00ednh l\u00e0 \\(\\mathrm{maxsum}[x, y]\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>inf = 1000000007</code>.</li> <li>H\u1eb1ng s\u1ed1 <code>maxN = 50007</code>.</li> <li>M\u1ea3ng <code>st[]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int inf  = 1e9 + 7;\nconst int maxN = 5e4 + 7;\n\n// Th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat\nstruct node {\n    int pre, suf, sum, maxsum;  \n\n    static node base() { return { -inf, -inf, 0, -inf }; }\n\n    // H\u00e0m h\u1ee3p nh\u1ea5t 2 n\u00fat con\n    static node merge(const node&amp; a, const node&amp; b)  {\n        node res;\n        res.pre = max(a.pre, b.pre + a.sum);\n        res.suf = max(b.suf, a.suf + b.sum);\n        res.sum = a.sum + b.sum;\n        res.maxsum = max(a.maxsum, b.maxsum);\n        res.maxsum = max(res.maxsum, a.suf + b.pre);\n        return res;\n    }\n};\n\nint n, m;\nint a[maxN];\nnode st[4 * maxN];\n\n// Th\u1ee7 t\u1ee5c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n\nvoid build(int id, int l ,int r) {\n    if (l == r) {\n        st[id] = { a[l], a[l], a[l], a[l] };\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    build(2 * id, l, mid);\n    build(2 * id + 1, mid + 1, r);\n    st[id] = node::merge(st[2 * id], st[2 * id + 1]);\n}\n\n// H\u00e0m l\u1ea5y gi\u00e1 tr\u1ecb\nnode get(int id, int l, int r, int u, int v){\n    if (l &gt;  v || r &lt;  u) return node::base();\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[id];\n\n    int mid = l + r &gt;&gt; 1;\n    node g1 = get(2 * id, l, mid, u, v);\n    node g2 = get(2 * id + 1, mid + 1, r, u, v);\n    return node::merge(g1, g2);\n}\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    build(1, 1, n);\n\n    cin &gt;&gt; m;\n    while (m--) {\n        int x, y;\n        cin &gt;&gt; x &gt;&gt; y;\n        cout &lt;&lt; get(1, 1, n, x, y).maxsum &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia_2","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ec3 x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(4 \\times n)\\). V\u1edbi m\u1ed7i truy v\u1ea5n, ta m\u1ea5t th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{n})\\) cho m\u1ed7i thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb tr\u00ean Segment Tree. </p> <p>Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(4 \\times n + m \\times \\log{n})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#vi-du-3","title":"V\u00ed d\u1ee5 3","text":"<p>VNOI - ITDS1</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-toan_2","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t d\u00e3y s\u1ed1 c\u00f3 \\(N\\) s\u1ed1. B\u1ea1n c\u1ea7n x\u1eed l\u00ed \\(2\\) lo\u1ea1i truy v\u1ea5n: - Truy v\u1ea5n lo\u1ea1i \\(1\\) c\u00f3 d\u1ea1ng \\(1 \\space i \\space v\\), ta \u0111\u1ed5i s\u1ed1 \u1edf v\u1ecb tr\u00ed \\(i\\) th\u00e0nh \\(v\\). - Truy v\u1ea5n lo\u1ea1i \\(2\\) c\u00f3 d\u1ea1ng \\(2 \\space L \\space R \\space k\\), ta c\u1ea7n in ra s\u1ed1 nh\u1ecf nh\u1ea5t m\u00e0 l\u1edbn h\u01a1n b\u1eb1ng \\(k\\) trong kho\u1ea3ng \\([L..R]\\).</p> <p>\\(\\circ \\space \\space 1 \\le N, M \\le 10^5\\) (v\u1edbi \\(M\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n).</p>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>Trong b\u00e0i to\u00e1n n\u00e0y, m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u00e0 m\u1ed9t multiset ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n m\u00e0 n\u00f3 qu\u1ea3n l\u00ed. Khi \u0111\u00f3, \u0111\u1ec3 h\u1ee3p nh\u1ea5t c\u00e1c n\u00fat con, ta ch\u1ec9 c\u1ea7n insert to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed c\u1ee7a c\u1ea3 \\(2\\) n\u00fat con v\u00e0o n\u00fat cha. </p> <p>M\u1ed7i khi c\u1eadp nh\u1eadt c\u00e2y ph\u00e2n \u0111o\u1ea1n, n\u1ebfu ta duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a c\u00e1c n\u00fat con \u0111\u1ec3 insert v\u00e0o n\u00fat cha th\u00ec v\u1edbi s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n \\(M\\), ta s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00ean t\u1edbi h\u01a1n \\(\\mathcal{O}(M \\times N)\\) (ch\u01b0a k\u1ec3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thao t\u00e1c tr\u00ean multiset), v\u00ec s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ee7a m\u1ed7i n\u00fat c\u00f3 th\u1ec3 l\u00ean t\u1edbi \\(N\\).</p> <p>Thay v\u00e0o \u0111\u00f3, ta nh\u1eadn th\u1ea5y r\u1eb1ng, khi thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \\(a[i]\\) th\u00e0nh \\(v\\) th\u00ec t\u1ea5t c\u1ea3 multiset c\u1ee7a c\u00e1c n\u00fat qu\u1ea3n l\u00ed ph\u00e2n \u0111o\u1ea1n ch\u1ee9a ph\u1ea7n t\u1eed \\(a[i]\\) (c\u00e1c n\u00fat n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n t\u1eeb g\u1ed1c \u0111\u1ebfn n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng) \u0111\u1ec1u s\u1ebd ph\u1ea3i x\u00f3a \u0111i m\u1ed9t gi\u00e1 tr\u1ecb \\(a[i]\\) v\u00e0 th\u00eam v\u00e0o m\u1ed9t gi\u00e1 tr\u1ecb \\(v\\). Do \u0111\u00f3, v\u1edbi truy v\u1ea5n lo\u1ea1i \\(1\\), khi c\u1eadp nh\u1eadt m\u1ed9t n\u00fat, ta kh\u00f4ng c\u1ea7n ph\u1ea3i insert l\u1ea1i to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed c\u1ee7a c\u1ea3 \\(2\\) n\u00fat con, m\u00e0 ch\u1ec9 c\u1ea7n x\u00f3a \u0111i m\u1ed9t gi\u00e1 tr\u1ecb c\u0169 trong multiset v\u00e0 ch\u00e8n th\u00eam gi\u00e1 tr\u1ecb m\u1edbi. </p> <p>V\u1edbi truy v\u1ea5n lo\u1ea1i \\(2\\), ta th\u1ef1c hi\u1ec7n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb. Tuy nhi\u00ean, m\u1ed7i khi x\u00e9t \u0111\u1ebfn n\u00fat m\u00e0 \u0111o\u1ea1n n\u00f3 qu\u1ea3n l\u00ed n\u1eb1m ho\u00e0n to\u00e0n b\u00ean trong \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n (tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf), ta s\u1eed d\u1ee5ng h\u00e0m \\(\\textit{lower_bound()}\\) \u0111\u1ec3 tr\u1ea3 ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t m\u00e0 v\u1eabn l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(k\\) trong multiset c\u1ee7a n\u00fat \u0111\u00f3.</p>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>inf = 1000000007</code>.</li> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>M\u1ea3ng <code>st[]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int inf  = 1e9 + 7;\nconst int maxN = 1e5 + 7;\n\nint n, m;\nint a[maxN];\nmultiset &lt;int&gt; st[4 * maxN];\n\nvoid build(int id, int l, int r) {\n    if (l == r) {\n        st[id].insert(a[l]);\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    build(2 * id, l, mid);\n    build(2 * id + 1, mid + 1, r);\n\n    st[id] = st[2 * id + 1];\n    for (auto x : st[2 * id]) st[id].insert(x);\n}\n\nvoid update(int id, int l, int r, int i, int old, int val) {\n    if (l &gt; i || r &lt; i) return;\n    if (l == r) {\n        st[id].clear();\n        st[id].insert(val);\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    update(2 * id, l, mid, i, old, val);\n    update(2 * id + 1, mid + 1, r, i, old, val);\n    st[id].erase(st[id].find(old));\n    st[id].insert(val);\n}\n\nint get(int id, int l, int r, int u, int v, int k) {\n    if (l &gt;  v || r &lt;  u) return inf; \n    if (l &gt;= u &amp;&amp; r &lt;= v) {\n        auto it = st[id].lower_bound(k);\n        if (it == st[id].end()) return inf;\n        return *it;\n    }\n\n    int mid = l + r &gt;&gt; 1;\n    int get1 = get(2 * id, l, mid, u, v, k);\n    int get2 = get(2 * id + 1, mid + 1, r, u, v, k);\n    return min(get1, get2);\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    build(1, 1, n);\n\n    while (m--){\n        int type, l, r, k;\n        cin &gt;&gt; type;\n        if (type == 1) {\n            cin &gt;&gt; l &gt;&gt; k;\n            update(1, 1, n, l, a[l], k);\n            a[l] = k;\n        }\n        else {\n            cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;\n            int ans = get(1, 1, n, l, r, k);\n            cout &lt;&lt; ((ans == inf) ? -1 : ans) &lt;&lt; '\\n';\n        }\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia_3","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ngo\u00e0i ra c\u00f2n c\u00f3 c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c \u0111\u01a1n gi\u1ea3n h\u01a1n, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t h\u00e0m <code>update</code> theo c\u00e1ch c\u1eadp nh\u1eadt \"t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean\" (kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy) nh\u01b0 sau:  - Ta s\u1ebd b\u1eaft \u0111\u1ea7u xu\u1ea5t ph\u00e1t t\u1eeb n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi ph\u1ea7n t\u1eed c\u1ea7n s\u1eeda \u0111\u1ed5i v\u00e0 \u0111i d\u1ea7n l\u00ean n\u00fat g\u1ed1c. </p> <pre><code>void update(int i, int val){\n    /* leaf[i] l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a n\u00fat l\u00e1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \n    ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed i trong d\u00e3y s\u1ed1 */\n    int id = leaf[i]; \n\n    int old = *st[id].begin();\n    while (id) {\n        st[id].erase(st[id].find(old));\n        st[id].insert(val);\n        id /= 2;\n    }\n}\n</code></pre> <p>Tham kh\u1ea3o code chu\u1ea9n t\u1ea1i \u0111\u00e2y.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1edbi thao t\u00e1c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n, ta th\u1ea5y r\u1eb1ng, \u1edf m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, ta s\u1ebd ph\u1ea3i duy\u1ec7t h\u1ebft to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed trong d\u00e3y \u0111\u1ec3 insert v\u00e0o multiset c\u1ee7a c\u00e1c n\u00fat cha.  - V\u00ed d\u1ee5: X\u00e9t tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t, v\u1edbi \\(N = 8\\) l\u00e0 l\u0169y th\u1eeba c\u1ee7a \\(2\\), ta c\u00f3 c\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u1ea7y \u0111\u1ee7 sau:</p> <pre><code>![/uploads/segment-tree-basic_img9.png](/uploads/segment-tree-basic_img9.png)\n\n- \u1ede \u0111\u1ed9 s\u00e2u th\u1ee9 $4$, m\u1ed7i n\u00fat l\u00e0 n\u00fat l\u00e1 c\u1ee7a c\u00e2y n\u00ean ta c\u00f3 th\u1ec3 l\u1ea5y tr\u1ef1c ti\u1ebfp gi\u00e1 tr\u1ecb t\u1eeb c\u00e1c ph\u1ea7n t\u1eed t\u01b0\u01a1ng \u1ee9ng trong d\u00e3y s\u1ed1. V\u00ec c\u00f3 $N$ n\u00fat l\u00e1 n\u00ean ta s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p $\\mathcal{O}(N)$.\n- \u1ede \u0111\u1ed9 s\u00e2u th\u1ee9 $3$, \u0111\u1ec3 c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb cho n\u00fat qu\u1ea3n l\u00ed \u0111o\u1ea1n $[1, 2]$ ta s\u1ebd ph\u1ea3i duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a c\u1ea3 hai n\u00fat con, ngh\u0129a l\u00e0 ta s\u1ebd ph\u1ea3i duy\u1ec7t h\u1ebft c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n $[1, 1]$ v\u00e0 $[2, 2]$. T\u01b0\u01a1ng t\u1ef1 v\u1edbi c\u00e1c n\u00fat qu\u1ea3n l\u00ed \u0111o\u1ea1n $[3, 4]$, $[5, 6]$, $[7, 8]$. Do \u0111\u00f3, ta c\u0169ng s\u1ebd m\u1ea5t th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p $\\mathcal{O}(N)$.\n- \u1ede \u0111\u1ed9 s\u00e2u th\u1ee9 $2$, \u0111\u1ec3 c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb cho n\u00fat qu\u1ea3n l\u00ed \u0111o\u1ea1n $[1, 4]$ ta s\u1ebd ph\u1ea3i duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a c\u1ea3 hai n\u00fat con, ngh\u0129a l\u00e0 ta s\u1ebd ph\u1ea3i duy\u1ec7t h\u1ebft c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n $[1, 2]$ v\u00e0 $[3, 4]$. T\u01b0\u01a1ng t\u1ef1 v\u1edbi n\u00fat qu\u1ea3n l\u00ed \u0111o\u1ea1n $[5, 8]$. Do \u0111\u00f3, ta c\u0169ng s\u1ebd m\u1ea5t th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p $\\mathcal{O}(N)$.\n- Nh\u1eadn th\u1ea5y r\u1eb1ng, v\u1edbi m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, ta \u0111\u1ec1u ph\u1ea3i duy\u1ec7t l\u1ea1i to\u00e0n b\u1ed9 ph\u1ea7n t\u1eed trong d\u00e3y n\u00ean s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p $\\mathcal{O}(N)$.\n</code></pre> <p>M\u00e0 chi\u1ec1u cao c\u1ee7a c\u00e2y l\u00e0 \\(\\mathcal{O}(\\log{N})\\) n\u00ean thao t\u00e1c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(N \\times \\log^2{N})\\) (\u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian cho vi\u1ec7c ch\u00e8n, x\u00f3a v\u00e0 truy xu\u1ea5t th\u00f4ng tin tr\u00ean multiset l\u00e0 \\(\\mathcal{O}(\\log{N})\\)).</p> <p>V\u1edbi m\u1ed7i thao t\u00e1c c\u1eadp nh\u1eadt ho\u1eb7c l\u1ea5y gi\u00e1 tr\u1ecb, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log^2{N})\\).</p> <p>Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(N \\times \\log^2{N} + M \\times \\log^2{N})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#cap-nhat-luoi-lazy-propagation","title":"C\u1eadp nh\u1eadt l\u01b0\u1eddi (Lazy Propagation)","text":"<p>\u0110\u00e2y l\u00e0 k\u0129 thu\u1eadt \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong Segment Tree \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a Segment Tree v\u1edbi c\u00e1c truy v\u1ea5n c\u1eadp nh\u1eadt \u0111o\u1ea1n.</p>"},{"location":"algo/data-structures/segment-tree-basic/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<p>Gi\u1ea3 s\u1eed ta c\u1ea7n c\u1eadp nh\u1eadt \u0111o\u1ea1n \\([u, v]\\). D\u1ec5 th\u1ea5y r\u1eb1ng, vi\u1ec7c c\u1eadp nh\u1eadt t\u1ea5t c\u1ea3 c\u00e1c n\u00fat tr\u00ean Segment Tree s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p r\u1ea5t l\u1edbn l\u00e0 \\(\\mathcal{O}(N \\times \\log{N})\\) (do t\u1ed5ng s\u1ed1 ph\u1ea7n t\u1eed n\u1eb1m trong \u0111o\u1ea1n \\([u, v]\\) c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn \\(O(N)\\)). Do \u0111\u00f3, v\u1edbi s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n c\u1eadp nh\u1eadt \u0111o\u1ea1n l\u1edbn, thao t\u00e1c n\u00e0y s\u1ebd kh\u00f4ng \u0111\u1ee7 t\u1ed1t. </p> <p>V\u1eady n\u00ean, trong qu\u00e1 tr\u00ecnh c\u1eadp nh\u1eadt, ta ch\u1ec9 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u1edf c\u00e1c n\u00fat g\u1ea7n g\u1ed1c nh\u1ea5t sao cho t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea1m vi m\u00e0 c\u00e1c n\u00fat \u0111\u00f3 qu\u1ea3n l\u00ed \u0111\u00fang b\u1eb1ng \u0111o\u1ea1n \\([u, v]\\).  - V\u00ed d\u1ee5:  Cho m\u1ea3ng \\(\\(A = \\{9,2,6,3,1,5,7\\}\\)\\) v\u00e0 ta c\u1ea7n c\u1eadp nh\u1eadt \u0111o\u1ea1n \\([1, 6]\\) :</p> <pre><code>![/uploads/segment-tree-basic_img10.png](/uploads/segment-tree-basic_img10.png)\n\n- Ta ch\u1ec9 c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb \u1edf c\u00e1c n\u00fat qu\u1ea3n l\u00fd \u0111o\u1ea1n $[1, 4]$ v\u00e0 $[5, 6]$. Gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c n\u00fat qu\u1ea3n l\u00fd \u0111o\u1ea1n $[1, 2]$, $[3, 4]$, $[1, 1]$, $[2, 2]$, $[3, 3]$, $[4, 4]$, $[5, 5]$, $[6, 6]$ s\u1ebd kh\u00f4ng \u0111\u00fang. Ta s\u1ebd ch\u1ec9 c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c n\u00fat n\u00e0y khi th\u1eadt s\u1ef1 c\u1ea7n thi\u1ebft (Do \u0111\u00f3 k\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 lazy - l\u01b0\u1eddi bi\u1ebfng).\n</code></pre> <p>C\u1ee5 th\u1ec3, ta xem x\u00e9t b\u00e0i to\u00e1n sau:</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-toan_3","title":"B\u00e0i to\u00e1n","text":"<p>VNOI - ITLAZY </p> <p>B\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t m\u1ea3ng g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean \\(a_1, a_2, ..., a_n\\) \\((|a_i| \\le 10^9,\\) v\u1edbi \\(1 \\le i \\le n)\\). Nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n l\u00e0 x\u1eed l\u00ed \\(2\\) lo\u1ea1i truy v\u1ea5n: - Lo\u1ea1i \\(1\\) c\u00f3 d\u1ea1ng \\(1 \\space x \\space y \\space val\\) : T\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed t\u1eeb v\u1ecb tr\u00ed th\u1ee9 \\(x\\) \u0111\u1ebfn v\u1ecb tr\u00ed th\u1ee9 \\(y\\) trong d\u00e3y l\u00ean \\(val\\) \u0111\u01a1n v\u1ecb \\((1 \\le x \\le y \\le n, 1 \\le val \\le 10^9)\\). - Lo\u1ea1i \\(2\\) c\u00f3 d\u1ea1ng \\(2 \\space l \\space r\\) : In ra ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t c\u1ee7a d\u00e3y t\u1eeb ph\u1ea7n t\u1eed th\u1ee9 \\(l\\) \u0111\u1ebfn ph\u1ea7n t\u1eed th\u1ee9 \\(r\\) \\((1 \\le l \\le r \\le n)\\).</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n lo\u1ea1i \\(2\\), h\u00e3y in ra c\u00e2u tr\u1ea3 l\u1eddi tr\u00ean m\u1ed9t d\u00f2ng.</p> <p>\\(\\circ \\space \\space 1 \\le n, q \\le 10^5\\) (v\u1edbi \\(q\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n).</p>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<p>Ban \u0111\u1ea7u, ta th\u1ef1c hi\u1ec7n th\u1ee7 t\u1ee5c x\u00e2y d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n nh\u01b0 b\u00ecnh th\u01b0\u1eddng.</p> <p>Truy v\u1ea5n lo\u1ea1i \\(2\\) l\u00e0 thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb c\u01a1 b\u1ea3n tr\u00ean Segment Tree \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00e2n t\u00edch tr\u01b0\u1edbc \u0111\u00f3.</p> <p>V\u1edbi truy v\u1ea5n lo\u1ea1i \\(1\\), thao t\u00e1c c\u1eadp nh\u1eadt \u0111o\u1ea1n \\([u, v]\\). Gi\u1ea3 s\u1eed ta g\u1ecdi \\(f[id]\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t trong \u0111o\u1ea1n m\u00e0 n\u00fat \\(id\\) qu\u1ea3n l\u00fd. Trong l\u00fac c\u1eadp nh\u1eadt, mu\u1ed1n h\u00e0m n\u00e0y th\u1ef1c hi\u1ec7n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng qu\u00e1 \\(O(\\log{N})\\), th\u00ec khi x\u00e9t \u0111\u1ebfn \\(1\\) n\u00fat \\(id\\) qu\u1ea3n l\u00fd \u0111o\u1ea1n \\([l, r]\\) m\u00e0 \u0111o\u1ea1n \\([l, r]\\) n\u1eb1m ho\u00e0n to\u00e0n trong \u0111o\u1ea1n \\([u, v]\\), th\u00ec ta kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ec7 quy v\u00e0o c\u00e1c n\u00fat con c\u1ee7a n\u00f3 n\u1eefa (n\u1ebfu kh\u00f4ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(N)\\) do ta \u0111i v\u00e0o t\u1ea5t c\u1ea3 c\u00e1c n\u00fat n\u1eb1m trong \u0111o\u1ea1n \\([u, v]\\)). </p> <p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft, ta d\u00f9ng k\u0129 thu\u1eadt Lazy Propagation nh\u01b0 sau: - M\u1ed7i n\u00fat c\u1ee7a Segment Tree s\u1ebd l\u01b0u th\u00eam m\u1ed9t gi\u00e1 tr\u1ecb \\(lazy[id]\\) v\u1edbi \u00fd ngh\u0129a l\u00e0 t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([l, r]\\) m\u00e0 n\u00fat \\(id\\) qu\u1ea3n l\u00fd \u0111\u1ec1u \u0111\u01b0\u1ee3c t\u0103ng th\u00eam \\(lazy[id]\\). N\u00f3i c\u00e1ch kh\u00e1c, n\u00f3 s\u1ebd l\u01b0u tr\u1eef c\u00e1c gi\u00e1 tr\u1ecb c\u1ea7n c\u1eadp nh\u1eadt c\u1ee7a m\u1ed7i n\u00fat. - Ban \u0111\u1ea7u, ta kh\u1edfi t\u1ea1o t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng \\(lazy[]\\) b\u1eb1ng \\(0\\). N\u1ebfu \\(lazy[id] = 0\\) c\u00f3 ngh\u0129a l\u00e0 kh\u00f4ng c\u00f3 c\u1eadp nh\u1eadt n\u00e0o \u0111ang ch\u1edd \u0111\u01b0\u1ee3c x\u1eed l\u00fd tr\u00ean n\u00fat \\(id\\) trong c\u00e2y ph\u00e2n \u0111o\u1ea1n. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu \\(lazy[id] \\neq 0\\) ngh\u0129a l\u00e0 ta c\u1ea7n c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \\(id\\) theo \\(lazy[id]\\) tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n b\u1ea5t k\u1ef3 thao t\u00e1c n\u00e0o v\u1edbi n\u00fat \u0111\u00f3 (vi\u1ec7c c\u1eadp nh\u1eadt n\u00e0y t\u00f9y v\u00e0o m\u1ee5c \u0111\u00edch c\u1ee7a c\u00e2y; v\u00ed d\u1ee5 nh\u01b0 trong b\u00e0i to\u00e1n tr\u00ean, gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \\(id\\) s\u1ebd \u0111\u01b0\u1ee3c t\u0103ng th\u00eam \\(lazy[id]\\) ). - N\u1ebfu n\u00fat \\(id\\) \u0111ang x\u00e9t c\u00f2n c\u00f3 gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c th\u00eam v\u00e0o ch\u01b0a x\u00e9t \u0111\u1ebfn (t\u1eeb c\u00e1c truy v\u1ea5n c\u1eadp nh\u1eadt x\u1ea3y ra tr\u01b0\u1edbc \u0111\u00f3, m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt h\u1ebft), ta bu\u1ed9c ph\u1ea3i c\u1eadp nh\u1eadt n\u00f3 tr\u01b0\u1edbc khi l\u1ea5y gi\u00e1 tr\u1ecb ho\u1eb7c ti\u1ebfp t\u1ee5c \u0111\u1ec7 quy s\u00e2u h\u01a1n. Sau khi c\u1eadp nh\u1eadt xong n\u00fat \\(id\\), ta ph\u1ea3i \u0111\u1ea9y gi\u00e1 tr\u1ecb \\(lazy\\) \u1edf n\u00fat \\(id\\) xu\u1ed1ng c\u00e1c con c\u1ee7a n\u00f3 \u0111\u1ec3 ti\u1ebfp t\u1ee5c c\u1eadp nh\u1eadt v\u00e0 \u0111\u1eb7t l\u1ea1i \\(lazy\\) c\u1ee7a n\u00fat \\(id\\) v\u1ec1 \\(0\\). - \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, \u1edf \u0111\u1ea7u c\u00e1c h\u00e0m <code>get</code> v\u00e0 <code>update</code> ta th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c sau:     - <code>st[id] += lazy[id]</code> - c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb n\u00fat \\(id\\) theo \\(lazy[id]\\).     - N\u1ebfu n\u00fat \\(id\\) kh\u00f4ng ph\u1ea3i l\u00e0 n\u00fat l\u00e1 th\u00ec ta \u0111\u1ea9y gi\u00e1 tr\u1ecb \\(lazy\\) xu\u1ed1ng c\u00e1c con c\u1ee7a n\u00f3 :         - <code>lazy[2 * id] += lazy[id]</code>         - <code>lazy[2 * id + 1] += lazy[id]</code>     - <code>lazy[id] = 0</code> - ch\u00fa \u00fd ta c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n thao t\u00e1c n\u00e0y, n\u1ebfu kh\u00f4ng m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y s\u1ebd b\u1ecb t\u0103ng l\u00ean nhi\u1ec1u l\u1ea7n, do ta \u0111\u1ea9y xu\u1ed1ng nhi\u1ec1u l\u1ea7n. - B\u00e2y gi\u1edd, \u0111\u1ec3 c\u1eadp nh\u1eadt \u0111o\u1ea1n, ta th\u1ef1c hi\u1ec7n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 \u1edf thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb, l\u00e0 x\u00e1c \u0111\u1ecbnh t\u1eadp h\u1ee3p \u00edt n\u00fat nh\u1ea5t sao cho t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea1m vi m\u00e0 c\u00e1c n\u00fat \u0111\u00f3 qu\u1ea3n l\u00ed \u0111\u00fang b\u1eb1ng \u0111o\u1ea1n c\u1ea7n c\u1eadp nh\u1eadt. Khi \u0111\u00f3, ta s\u1eeda l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c n\u00fat thu\u1ed9c t\u1eadp h\u1ee3p n\u00e0y v\u00e0 l\u01b0u l\u1ea1i gi\u00e1 tr\u1ecb c\u1ea7n c\u1eadp nh\u1eadt v\u00e0o \\(lazy\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c n\u00fat con c\u1ee7a ch\u00fang.</p>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at_4","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>inf = 1000000007</code>.</li> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>M\u1ea3ng <code>st[]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> <li>M\u1ea3ng <code>lazy[]</code> - L\u01b0u tr\u1eef c\u00e1c gi\u00e1 tr\u1ecb c\u1ea7n c\u1eadp nh\u1eadt c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int inf  = 1e9 + 7;\nconst int maxN = 1e5 + 7;\n\nint n, q;\nint a[maxN];\nlong long st[4 * maxN], lazy[4 * maxN];\n\nvoid build(int id, int l, int r) {\n    if (l == r) {\n        st[id] = a[l];\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    build(2 * id, l, mid);\n    build(2 * id + 1, mid + 1, r);\n    st[id] = max(st[2 * id], st[2 * id + 1]);\n}\n\n// C\u1eadp nh\u1eadt n\u00fat \u0111ang x\u00e9t v\u00e0 \u0111\u1ea9y gi\u00e1 tr\u1ecb lazy xu\u1ed1ng c\u00e1c n\u00fat con\nvoid fix(int id, int l, int r) {\n    if (!lazy[id]) return;\n    st[id] += lazy[id];\n\n    // N\u1ebfu id kh\u00f4ng ph\u1ea3i l\u00e0 n\u00fat l\u00e1 th\u00ec \u0111\u1ea9y gi\u00e1 tr\u1ecb xu\u1ed1ng c\u00e1c n\u00fat con\n    if (l != r){\n        lazy[2 * id] += lazy[id];\n        lazy[2 * id + 1] += lazy[id];\n    }\n\n    lazy[id] = 0;\n}\n\nvoid update(int id, int l, int r, int u, int v, int val) {\n    fix(id, l, r);\n    if (l &gt;  v || r &lt;  u) return;\n    if (l &gt;= u &amp;&amp; r &lt;= v) {\n        /* Khi c\u00e0i \u0111\u1eb7t, ta LU\u00d4N \u0110\u1ea2M B\u1ea2O gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt \u0110\u1ed2NG TH\u1edcI v\u1edbi\n        gi\u00e1 tr\u1ecb Lazy Propagation. Nh\u01b0 v\u1eady s\u1ebd tr\u00e1nh sai s\u00f3t. */\n        lazy[id] += val;\n        fix(id, l, r);\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    update(2 * id, l, mid, u, v, val);\n    update(2 * id + 1, mid + 1, r, u, v, val);\n    st[id] = max(st[2 * id], st[2 * id + 1]);\n}\n\nlong long get(int id, int l, int r, int u, int v) {\n    fix(id, l, r);\n    if (l &gt;  v || r &lt;  u) return -inf;\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[id];\n\n    int mid  = l + r &gt;&gt; 1;\n    long long get1 = get(2 * id, l, mid, u, v);\n    long long get2 = get(2 * id + 1, mid + 1, r, u, v);\n    return max(get1, get2);\n}\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    build(1, 1, n);\n\n    cin &gt;&gt; q;\n    while (q--){\n        int type, l, r, val;\n        cin &gt;&gt; type &gt;&gt; l &gt;&gt; r;\n        if (type == 1) {\n            cin &gt;&gt; val;\n            update(1, 1, n, l, r, val);\n        }\n        else cout &lt;&lt; get(1, 1, n, l, r) &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia_4","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c Lazy Propagation l\u00e0 \\(\\mathcal{O}(\\log{n})\\). </p> <p>Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u1ea3 b\u00e0i to\u00e1n l\u00e0 \\(\\mathcal{O}(q \\times \\log{n})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#vi-du-4","title":"V\u00ed d\u1ee5 4","text":"<p>Codeforces - 558E A Simple Task</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-toan_4","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t chu\u1ed7i k\u00ed t\u1ef1 \\(S\\) \u0111\u1ed9 d\u00e0i \\(n\\) (ch\u1ec9 ch\u1ee9a c\u00e1c ch\u1eef c\u00e1i ti\u1ebfng Anh in th\u01b0\u1eddng) v\u00e0 \\(q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n c\u00f3 d\u1ea1ng \\(i \\space j \\space k\\) c\u00f3 ngh\u0129a l\u00e0 h\u00e3y s\u1eafp x\u1ebfp chu\u1ed7i con g\u1ed3m c\u00e1c k\u00ed t\u1ef1 t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) theo th\u1ee9 t\u1ef1 kh\u00f4ng gi\u1ea3m n\u1ebfu \\(k = 1\\) ho\u1eb7c theo th\u1ee9 t\u1ef1 kh\u00f4ng t\u0103ng n\u1ebfu \\(k = 0\\).</p> <p>In ra chu\u1ed7i cu\u1ed1i c\u00f9ng sau khi \u0111\u00e3 th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n.</p> <ul> <li>\\(1 \\le n \\le 10^5; \\space 0 \\le q \\le 50000\\).</li> <li>\\(1 \\le i \\le j \\le n; \\space k \\in \\{ 0, 1 \\}\\).</li> </ul>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich_4","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n, ta s\u1eed d\u1ee5ng k\u0129 thu\u1eadt s\u1eafp x\u1ebfp \u0111\u1ebfm ph\u00e2n ph\u1ed1i (Counting sort). V\u00ec v\u1eady, \u0111\u1ed1i v\u1edbi m\u1ed7i truy v\u1ea5n, ta s\u1ebd \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed7i k\u00fd t\u1ef1 v\u00e0 sau \u0111\u00f3 c\u1eadp nh\u1eadt \u0111o\u1ea1n nh\u01b0 sau:</p> <pre><code>for (int x = i; x &lt;= j; ++x) ++cnt[s[x] - 'a'];\n\nint ind = (k ? 0 : 25);\nfor (int x = i; x &lt;= j; ++x) {\n    while (ind &gt;= 0 &amp;&amp; !cnt[ind]) ind += (k ? 1 : -1);\n    s[x] = ind + 'a';\n    --cnt[ind];\n}\n</code></pre> <p>Tuy nhi\u00ean thu\u1eadt to\u00e1n tr\u00ean kh\u00f4ng \u0111\u1ee7 t\u1ed1t \u0111\u1ed1i v\u1edbi s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n l\u1edbn. Do \u0111\u00f3, ta c\u1ea7n m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00f3 th\u1ec3 h\u1ed7 tr\u1ee3 c\u00e1c ho\u1ea1t \u0111\u1ed9ng tr\u00ean trong th\u1eddi gian th\u00edch h\u1ee3p.</p> <p>Ta s\u1ebd t\u1ea1o ra \\(26\\) m\u1ea3ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i k\u00ed t\u1ef1. M\u1ea3ng n\u00e0y l\u01b0u l\u1ea1i v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n c\u1ee7a t\u1eebng k\u00ed t\u1ef1 trong chu\u1ed7i. V\u00e0 m\u1ed7i m\u1ea3ng s\u1ebd \u0111\u01b0\u1ee3c ki\u1ec3m so\u00e1t b\u1edfi m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n.</p> <ul> <li>V\u00ed d\u1ee5: Cho chu\u1ed7i \\(S = \"dabedaba\"\\). K\u00ed t\u1ef1 \\('a'\\) s\u1ebd c\u00f3 m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n ki\u1ec3m so\u00e1t m\u1ea3ng \\(\\(\\{0, 1, 0, 0, 0, 1, 0, 1\\}\\)\\). C\u00f2n k\u00ed t\u1ef1 \\('b'\\) c\u00f3 m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n ki\u1ec3m so\u00e1t m\u1ea3ng \\(\\(\\{0, 0, 1, 0, 0, 0, 1, 0\\}\\)\\), v.v...</li> </ul> <p>V\u1edbi m\u1ed7i truy v\u1ea5n s\u1eafp x\u1ebfp \u0111o\u1ea1n \\([i, j]\\), ta d\u00f9ng Segment Tree \u0111\u1ec3 t\u00ednh s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed7i k\u00fd t\u1ef1 trong \u0111o\u1ea1n, sau \u0111\u00f3 s\u1eafp x\u1ebfp ch\u00fang v\u00e0 c\u1eadp nh\u1eadt m\u1ed7i c\u00e2y ph\u00e2n \u0111o\u1ea1n v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb m\u1edbi.  - V\u00ed d\u1ee5: Cho chu\u1ed7i \\(S = \"dabedaba\"\\), gi\u1ea3 s\u1eed ta c\u1ea7n ph\u1ea3i s\u1eafp x\u1ebfp c\u00e1c k\u00ed t\u1ef1 c\u1ee7a chu\u1ed7i \\(S\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n:     - G\u1ecdi \\(cnt[i]\\) l\u00e0 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a k\u00ed t\u1ef1 \\(i\\) trong chu\u1ed7i \\(S\\). Ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh to\u00e1n m\u1ea3ng \\(cnt\\) b\u1eb1ng c\u00e1ch l\u1ea5y gi\u00e1 tr\u1ecb t\u1eeb c\u00e1c c\u00e2y ph\u00e2n \u0111o\u1ea1n t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i k\u00ed t\u1ef1.      - Sau khi l\u1ea5y gi\u00e1 tr\u1ecb xong, tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n, ta s\u1ebd c\u1eadp nh\u1eadt l\u1ea1i t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1eebng k\u00ed t\u1ef1 b\u1eb1ng gi\u00e1 tr\u1ecb \\(0\\).     - Ti\u1ebfp theo, ta d\u00f9ng c\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u1ec3 c\u1eadp nh\u1eadt m\u1ea3ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi k\u00ed t\u1ef1 \\('a'\\) t\u1eeb v\u1ecb tr\u00ed \\(1\\) \u0111\u1ebfn v\u1ecb tr\u00ed \\(3\\) (do \\(cnt['a'] = 3\\)) b\u1eb1ng gi\u00e1 tr\u1ecb \\(1\\) . R\u1ed3i l\u1ea1i ti\u1ebfp t\u1ee5c c\u1eadp nh\u1eadt m\u1ea3ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi k\u00ed t\u1ef1 \\('b'\\) t\u1eeb v\u1ecb tr\u00ed \\(4\\) \u0111\u1ebfn v\u1ecb tr\u00ed \\(5\\) (do \\(cnt['b'] = 2\\)) b\u1eb1ng gi\u00e1 tr\u1ecb \\(1\\). V\u00ec \\(cnt['c'] = 0\\) n\u00ean ta b\u1ecf qua k\u00ed t\u1ef1 \\('c'\\). V\u00e0 l\u1ea1i ti\u1ebfp t\u1ee5c v\u1edbi k\u00ed t\u1ef1 \\('d'\\), ... \u0111\u1ebfn k\u00ed t\u1ef1 \\('z'\\).      - T\u01b0\u01a1ng t\u1ef1, \u0111\u1ec3 s\u1eafp x\u1ebfp gi\u1ea3m d\u1ea7n, ta ch\u1ec9 c\u1ea7n x\u00e9t t\u1eeb k\u00ed t\u1ef1 \\('z'\\) v\u1ec1 k\u00ed t\u1ef1 \\('a'\\).</p> <p>Ta s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt Lazy Propagation \u0111\u1ec3 c\u1eadp nh\u1eadt c\u00e1c \u0111o\u1ea1n. Kh\u00e1c v\u1edbi v\u00ed d\u1ee5 tr\u00ean (\u1edf m\u1ee5c B\u00e0i to\u00e1n trong ph\u1ea7n C\u1eadp nh\u1eadt l\u01b0\u1eddi (Lazy Propagation)), khi c\u1eadp nh\u1eadt n\u00fat \\(id\\) qu\u1ea3n l\u00ed \u0111o\u1ea1n \\([l, r]\\) theo gi\u00e1 tr\u1ecb \\(lazy[id]\\) th\u00ec gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \\(id\\) s\u1ebd \u0111\u01b0\u1ee3c t\u0103ng th\u00eam \\(lazy[id] \\times (r - l + 1)\\). V\u00ec \u0111\u00e2y l\u00e0 c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u1ea5y t\u1ed5ng, n\u00ean khi m\u1ed7i ph\u1ea7n t\u1eed t\u0103ng th\u00eam \\(lazy[id]\\) th\u00ec t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a c\u1ea3 \u0111o\u1ea1n \\([l, r]\\) s\u1ebd t\u0103ng th\u00eam \\(lazy[id] \\times (r - l + 1)\\).</p> <p>V\u00ec thao t\u00e1c c\u1eadp nh\u1eadt c\u00e2y ph\u00e2n \u0111o\u1ea1n n\u00e0y l\u00e0 g\u00e1n gi\u00e1 tr\u1ecb (\\(0\\) ho\u1eb7c \\(1\\)) n\u00ean ta s\u1ebd kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb ban \u0111\u1ea7u c\u1ee7a m\u1ea3ng \\(lazy\\) b\u1eb1ng \\(-1\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at_5","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>M\u1ea3ng <code>cnt[]</code> - L\u01b0u l\u1ea1i s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed7i k\u00ed t\u1ef1.</li> <li>M\u1ea3ng <code>st[][]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i k\u00ed t\u1ef1.</li> <li>M\u1ea3ng <code>lazy[][]</code> - L\u01b0u tr\u1eef c\u00e1c gi\u00e1 tr\u1ecb c\u1ea7n c\u1eadp nh\u1eadt c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i k\u00ed t\u1ef1.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 1e5 + 7;\n\nint n, q;\nstring s;\nint cnt[30];\nint st[30][4 * maxN], lazy[30][4 * maxN];\n\nvoid build(int id, int l, int r) {\n    // Kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb m\u1ea3ng lazy ban \u0111\u1ea7u b\u1eb1ng -1\n    for (int ch = 0; ch &lt;= 25; ++ch) lazy[ch][id] = -1;\n\n    if (l == r) {\n        st[s[l - 1] - 'a'][id] = 1;\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    build(2 * id, l, mid);\n    build(2 * id + 1, mid + 1, r);\n    for (int ch = 0; ch &lt;= 25; ++ch)\n        st[ch][id] = st[ch][2 * id] + st[ch][2 * id + 1];\n}\n\nvoid fix(int id, int l, int r, int ch) {\n    if (lazy[ch][id] == -1) return;\n    st[ch][id] = lazy[ch][id] * (r - l + 1);\n    if (l != r){\n\n        /* V\u00ec l\u00e0 thao t\u00e1c g\u00e1n gi\u00e1 tr\u1ecb ch\u1ee9 KH\u00d4NG ph\u1ea3i l\u00e0 t\u0103ng th\u00eam m\u1ed9t l\u01b0\u1ee3ng\n        n\u00ean lazy c\u1ee7a n\u00fat con s\u1ebd g\u00e1n b\u1eb1ng lazy c\u1ee7a n\u00fat cha */\n        lazy[ch][2 * id] = lazy[ch][id]; \n        lazy[ch][2 * id + 1] = lazy[ch][id];\n    }\n    lazy[ch][id] = -1;\n}\n\nvoid update(int id, int l, int r, int u, int v, int val, int ch) {\n    fix(id, l, r, ch);\n    if (l &gt;  v || r &lt;  u) return;\n    if (l &gt;= u &amp;&amp; r &lt;= v) {\n        lazy[ch][id] = val;\n        fix(id, l, r, ch);\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    update(2 * id, l, mid, u, v, val, ch);\n    update(2 * id + 1, mid + 1, r, u, v, val, ch);\n    st[ch][id] = st[ch][2 * id] + st[ch][2 * id + 1];\n}\n\nint get(int id, int l, int r, int u, int v, int ch) {\n    fix(id, l, r, ch);\n    if (l &gt;  v || r &lt;  u) return 0;\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[ch][id];\n\n    int mid  = l + r &gt;&gt; 1;\n    int get1 = get(2 * id, l, mid, u, v, ch);\n    int get2 = get(2 * id + 1, mid + 1, r, u, v, ch);\n    return get1 + get2;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; q;\n    cin &gt;&gt; s;\n    build(1, 1, n);\n\n    while (q--) {\n        int i, j, k;\n        cin &gt;&gt; i &gt;&gt; j &gt;&gt; k;\n\n        for (int ch = 0; ch &lt;= 25; ++ch) {\n            cnt[ch] = get(1, 1, n, i, j, ch);\n            update(1, 1, n, i, j, 0, ch);\n        }\n\n        int ch = (k ? 0 : 25), l = i;\n        while (0 &lt;= ch &amp;&amp; ch &lt;= 25) {\n            if (cnt[ch]) {\n                update(1, 1, n, l, l + cnt[ch] - 1, 1, ch);\n                l += cnt[ch];\n            }\n            ch += (k ? 1 : -1);\n        }\n    }\n\n    // In ra \u0111\u00e1p \u00e1n\n    for (int i = 1; i &lt;= n; ++i)\n        for (int ch = 0; ch &lt;= 25; ++ch)\n            if (get(1, 1, n, i, i, ch)) {\n                cout &lt;&lt; (char)(ch + 'a');\n                break;\n            }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia_5","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(q \\times 26 \\times \\log{n})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#vi-du-5","title":"V\u00ed d\u1ee5 5","text":"<p>VNOI - ITLADDER</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-toan_5","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t d\u00e3y s\u1ed1 c\u00f3 \\(N\\) s\u1ed1, ban \u0111\u1ea7u t\u1ea5t c\u1ea3 b\u1eb1ng \\(0\\). B\u1ea1n c\u1ea7n x\u1eed l\u00ed \\(2\\) lo\u1ea1i truy v\u1ea5n: - Truy v\u1ea5n lo\u1ea1i \\(1\\) c\u00f3 d\u1ea1ng \\(1 \\space L \\space R \\space A \\space B\\), ta c\u1ed9ng th\u00eam v\u00e0o ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) th\u00eam \\((i \u2212 L)A + B\\) \u0111\u01a1n v\u1ecb v\u1edbi m\u1ecdi \\(L \\le i \\le R\\). - Truy v\u1ea5n lo\u1ea1i \\(2\\) c\u00f3 d\u1ea1ng \\(2 \\space L \\space R\\), ta c\u1ea7n in ra t\u1ed5ng c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong kho\u1ea3ng \\([L..R]\\), l\u1ea5y d\u01b0 cho \\(10^9 + 7\\).</p> <p>\\(\\circ \\space \\space 1 \\le N, M \\le 10^5\\) (v\u1edbi \\(M\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n). C\u00e1c s\u1ed1 trong input \u0111\u1ec1u l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng \\(1\\) v\u00e0 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(10^9\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#phan-tich_5","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>V\u1edbi truy v\u1ea5n lo\u1ea1i \\(1\\): Ta \u0111\u1ec3 \u00fd \u0111\u1ebfn gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c c\u1ed9ng v\u00e0o. V\u1edbi m\u1ecdi \\(L \\le i \\le R\\), ta c\u1ed9ng th\u00eam v\u00e0o ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) th\u00eam \\((i \u2212 L)A + B = iA + B - LA\\) \u0111\u01a1n v\u1ecb. Trong \u0111\u00f3 \\(B \u2013 LA\\) l\u00e0 kh\u00f4ng \u0111\u1ed5i v\u1edbi m\u1ecdi ph\u1ea7n t\u1eed trong truy v\u1ea5n \u0111\u1ec1 c\u1eadp \u0111\u1ebfn n\u00ean ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng s\u1eed d\u1ee5ng k\u0129 thu\u1eadt Lazy Propagation \u0111\u1ec3 c\u1eadp nh\u1eadt. C\u00f2n l\u1ea1i l\u00e0 \\(iA\\) \u0111\u01a1n v\u1ecb, gi\u00e1 tr\u1ecb n\u00e0y thay \u0111\u1ed5i n\u00ean ph\u1ea3i d\u00f9ng m\u1ea3ng \\(lazy\\) th\u1ee9 \\(2\\) \u0111\u1ec3 l\u01b0u l\u1ea1i nh\u1eefng gi\u00e1 tr\u1ecb d\u1ea1ng n\u00e0y. Nh\u1eadn th\u1ea5y r\u1eb1ng, khi m\u1ed7i ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([l, r]\\) t\u0103ng th\u00eam \\(iA\\) \u0111\u01a1n v\u1ecb th\u00ec t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a c\u1ea3 \u0111o\u1ea1n \\([l, r]\\) s\u1ebd t\u0103ng th\u00eam \\(A \\times (r + l) \\times (r - l + 1) \\space / \\space 2\\).     T\u1eeb \u0111\u00f3, b\u00e0i to\u00e1n chuy\u1ec3n v\u1ec1 Segment Tree b\u00ecnh th\u01b0\u1eddng v\u1edbi \\(2\\) m\u1ea3ng \\(lazy\\).</li> <li>V\u1edbi truy v\u1ea5n lo\u1ea1i \\(2\\) : Ta th\u1ef1c hi\u1ec7n thao t\u00e1c l\u1ea5y gi\u00e1 tr\u1ecb tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n. </li> </ul>"},{"location":"algo/data-structures/segment-tree-basic/#cai-at_6","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>M\u1ea3ng <code>st[]</code> - L\u01b0u th\u00f4ng tin c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> <li>M\u1ea3ng <code>lazy[]</code> - L\u01b0u tr\u1eef c\u00e1c gi\u00e1 tr\u1ecb c\u1ea7n c\u1eadp nh\u1eadt c\u1ee7a m\u1ed7i n\u00fat tr\u00ean Segment Tree.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod  = 1e9 + 7;\nconst int maxN = 1e5 + 7;\n\nint n, m;\nint st[4 * maxN];\npair &lt;int, int&gt; lazy[4 * maxN];\n\nvoid fix(int id, int l, int r) {\n    int a = lazy[id].first;\n    int b = lazy[id].second;\n    st[id] += (1ll * a * (r + l) * (r - l + 1) / 2) % mod;\n    st[id] %= mod;\n    st[id] += (1ll * b * (r - l + 1)) % mod;\n    st[id] %= mod;\n\n    if (l != r) {\n        lazy[2 * id].first  = (lazy[2 * id].first  + a) % mod;\n        lazy[2 * id].second = (lazy[2 * id].second + b) % mod;\n        lazy[2 * id + 1].first  = (lazy[2 * id + 1].first  + a) % mod;\n        lazy[2 * id + 1].second = (lazy[2 * id + 1].second + b) % mod;\n    }\n    lazy[id] = {0, 0};\n}\n\nvoid update(int id, int l, int r, int u, int v, int a, int b) {\n    fix(id, l, r);\n    if (l &gt;  v || r &lt;  u) return;\n    if (l &gt;= u &amp;&amp; r &lt;= v) {\n        lazy[id].first  = a;\n        lazy[id].second = (1ll * b - 1ll * u * a + 1ll * mod * mod) % mod;\n        fix(id, l, r);\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    update(2 * id, l, mid, u, v, a, b);\n    update(2 * id + 1, mid + 1, r, u, v, a, b);\n    st[id] = (st[2 * id] + st[2 * id + 1]) % mod;\n}\n\nint get(int id, int l, int r, int u, int v) {\n    fix(id, l, r);\n    if (l &gt;  v || r &lt;  u) return 0;\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[id];\n\n    int mid  = l + r &gt;&gt; 1;\n    int get1 = get(2 * id, l, mid, u, v);\n    int get2 = get(2 * id + 1, mid + 1, r, u, v);\n    return (get1 + get2) % mod;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int type, l, r, a, b;\n        cin &gt;&gt; type &gt;&gt; l &gt;&gt; r;\n        if (type == 1) {\n            cin &gt;&gt; a &gt;&gt; b;\n            update(1, 1, n, l, r, a, b);\n        }\n        else cout &lt;&lt; get(1, 1, n, l, r) &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-basic/#anh-gia_6","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(M \\times \\log{N})\\).</p>"},{"location":"algo/data-structures/segment-tree-basic/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>VNOI - Educational Segment Tree Contest</li> <li>VOJ - Blogspot Segment Tree</li> <li>Codeforces - Segment Tree Problems</li> <li>Codeforces - ITMO Academy: pilot course</li> <li>Codeforces - 1371F Raging Thunder</li> </ul>"},{"location":"algo/data-structures/segment-tree-extend/","title":"T\u1ea5t t\u1ea7n t\u1eadt v\u1ec1 C\u00e2y Ph\u00e2n \u0110o\u1ea1n (Segment Tree)","text":"<p>L\u01afU \u00dd:</p> <ul> <li>Khi Segment Tree m\u1edbi \u0111\u01b0\u1ee3c du nh\u1eadp v\u00e0o Vi\u1ec7t Nam, m\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u g\u1ecdi l\u00e0 Interval Tree. \u0110\u00e2y l\u00e0 c\u00e1ch g\u1ecdi kh\u00f4ng ch\u00ednh x\u00e1c, b\u1edfi Interval Tree l\u00e0 m\u1ed9t CTDL kh\u00e1c.</li> <li>T\u1ea5t c\u1ea3 h\u00e0m trong b\u00e0i \u0111\u1ec1u \u0111\u00e1nh s\u1ed1 t\u1eeb 1. C\u00e1c n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n s\u1ebd qu\u1ea3n l\u00fd \u0111o\u1ea1n \\([l,r]\\)</li> <li>Segment Tree c\u00f2n c\u00f3 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c s\u1eed d\u1ee5ng \u00edt b\u1ed9 nh\u1edb h\u01a1n (t\u1ed1i \u0111a \\(2*N\\) ph\u1ea7n t\u1eed), c\u00e0i \u0111\u1eb7t ng\u1eafn h\u01a1n v\u00e0 ch\u1ea1y nhanh h\u01a1n. Tuy nhi\u00ean theo c\u00e1 nh\u00e2n m\u00ecnh kh\u00f4ng d\u1ec5 hi\u1ec3u b\u1eb1ng c\u00e1ch c\u00e0i \u0111\u1eb7t trong b\u00e0i vi\u1ebft n\u00e0y.</li> </ul>"},{"location":"algo/data-structures/segment-tree-extend/#0-gioi-thieu","title":"0. Gi\u1edbi thi\u1ec7u","text":"<p>Segment Tree l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t nhi\u1ec1u trong c\u00e1c k\u1ef3 thi, \u0111\u1eb7c bi\u1ec7t l\u00e0 trong nh\u1eefng b\u00e0i to\u00e1n x\u1eed l\u00fd tr\u00ean d\u00e3y s\u1ed1.</p> <p>Segment Tree l\u00e0 m\u1ed9t c\u00e2y. C\u1ee5 th\u1ec3 h\u01a1n, n\u00f3 l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 (m\u1ed7i n\u00fat l\u00e0 l\u00e1 ho\u1eb7c c\u00f3 \u0111\u00fang 2 n\u00fat con), v\u1edbi m\u1ed7i n\u00fat qu\u1ea3n l\u00fd m\u1ed9t \u0111o\u1ea1n tr\u00ean d\u00e3y s\u1ed1. V\u1edbi m\u1ed9t d\u00e3y s\u1ed1 g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed, n\u00fat g\u1ed1c s\u1ebd l\u01b0u th\u00f4ng tin v\u1ec1 \u0111o\u1ea1n \\([1, N]\\), n\u00fat con tr\u00e1i c\u1ee7a n\u00f3 s\u1ebd l\u01b0u th\u00f4ng tin v\u1ec1 \u0111o\u1ea1n \\([1, \u230aN/2\u230b]\\) v\u00e0 n\u00fat con ph\u1ea3i s\u1ebd l\u01b0u th\u00f4ng tin v\u1ec1 \u0111o\u1ea1n \\([\u230aN/2\u230b+1, N]\\). T\u1ed5ng qu\u00e1t h\u01a1n: n\u1ebfu n\u00fat \\(A\\) l\u01b0u th\u00f4ng tin \u0111o\u1ea1n \\([i, j]\\), th\u00ec 2 con c\u1ee7a n\u00f3: \\(A1\\) v\u00e0 \\(A2\\) s\u1ebd l\u01b0u th\u00f4ng tin c\u1ee7a c\u00e1c \u0111o\u1ea1n \\([i, \u230a(i+j)/2\u230b]\\) v\u00e0 \u0111o\u1ea1n \\([\u230a(i+j)/2\u230b + 1, j]\\).</p>"},{"location":"algo/data-structures/segment-tree-extend/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>X\u00e9t m\u1ed9t d\u00e3y g\u1ed3m 7 ph\u1ea7n t\u1eed, Segment Tree s\u1ebd qu\u1ea3n l\u00fd c\u00e1c \u0111o\u1ea1n nh\u01b0 sau:</p> <p></p>"},{"location":"algo/data-structures/segment-tree-extend/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u0110\u1ec3 c\u00e0i \u0111\u1eb7t, ta c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t m\u1ea3ng 1 chi\u1ec1u, ph\u1ea7n t\u1eed th\u1ee9 nh\u1ea5t c\u1ee7a m\u1ea3ng th\u1ec3 hi\u1ec7n n\u00fat g\u1ed1c. Ph\u1ea7n t\u1eed th\u1ee9 \\(id\\) s\u1ebd c\u00f3 2 con l\u00e0 \\(2 \\* id\\) (con tr\u00e1i) v\u00e0 \\(2 \\* id+1\\) (con ph\u1ea3i). V\u1edbi c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y, ng\u01b0\u1eddi ta \u0111\u00e3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c b\u1ed9 nh\u1edb c\u1ea7n d\u00f9ng cho ST kh\u00f4ng qu\u00e1 \\(4 \\* N\\) ph\u1ea7n t\u1eed.</p>"},{"location":"algo/data-structures/segment-tree-extend/#ap-dung","title":"\u00c1p d\u1ee5ng","text":"<p>\u0110\u1ec3 d\u1ec5 h\u00ecnh dung, ta l\u1ea5y 1 v\u00ed d\u1ee5 c\u1ee5 th\u1ec3:</p> <ul> <li>Cho d\u00e3y \\(N\\) ph\u1ea7n t\u1eed \\((N \\le 10^5)\\). Ban \u0111\u1ea7u m\u1ed7i ph\u1ea7n t\u1eed c\u00f3 gi\u1ea3 tr\u1ecb 0.</li> <li>C\u00f3 \\(Q\\) truy v\u1ea5n \\((Q \\le 10^5)\\). M\u1ed7i truy v\u1ea5n c\u00f3 1 trong 2 lo\u1ea1i:<ol> <li>G\u00e1n gi\u00e1 tr\u1ecb \\(v\\) cho ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\u00ed \\(i\\).</li> <li>T\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t cho \u0111o\u1ea1n \\([i, j]\\).</li> </ol> </li> </ul> <p>C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 d\u00f9ng 1 m\u1ea3ng \\(A\\) duy tr\u00ec gi\u00e1 tr\u1ecb c\u00e1c ph\u1ea7n t\u1eed. V\u1edbi thao t\u00e1c 1 th\u00ec ta g\u00e1n \\(A[i] = v\\). V\u1edbi thao t\u00e1c 2 th\u00ec ta d\u00f9ng 1 v\u00f2ng l\u1eb7p t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t. R\u00f5 r\u00e0ng c\u00e1ch n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(N*Q)\\) v\u00e0 kh\u00f4ng th\u1ec3 ch\u1ea1y trong th\u1eddi gian cho ph\u00e9p.</p> <p>C\u00e1ch d\u00f9ng Segment Tree nh\u01b0 sau:</p> <ul> <li>V\u1edbi truy v\u1ea5n lo\u1ea1i 1, ta s\u1ebd c\u1eadp nh\u1eadt th\u00f4ng tin c\u1ee7a c\u00e1c n\u00fat tr\u00ean c\u00e2y ST m\u00e0 \u0111o\u1ea1n n\u00f3 qu\u1ea3n l\u00fd ch\u1ee9a ph\u1ea7n t\u1eed \\(i\\).</li> <li>V\u1edbi truy v\u1ea5n lo\u1ea1i 2, ta s\u1ebd t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c n\u00fat tr\u00ean c\u00e2y ST m\u00e0 \u0111o\u1ea1n n\u00f3 qu\u1ea3n l\u00fd n\u1eb1m trong \\([i, j]\\), r\u1ed3i l\u1ea5y max c\u1ee7a c\u00e1c n\u00fat n\u00e0y.</li> </ul> <p>C\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>// Truy v\u1ea5n: A(i) = v\n// H\u00e0m c\u1eadp nh\u1eadt tr\u00ean c\u00e2y ST, c\u1eadp nh\u1eadt c\u00e2y con g\u1ed1c id qu\u1ea3n l\u00fd \u0111\u1ecdan [l, r]\nvoid update(int id, int l, int r, int i, int v) {\n    if (i &lt; l || r &lt; i) {\n        // i n\u1eb1m ngo\u00e0i \u0111o\u1ea1n [l, r], ta b\u1ecf qua n\u00fat i\n        return ;\n    }\n    if (l == r) {\n        // \u0110o\u1ea1n ch\u1ec9 g\u1ed3m 1 ph\u1ea7n t\u1eed, kh\u00f4ng c\u00f3 n\u00fat con\n        ST[id] = v;\n        return ;\n    }\n\n    // G\u1ecdi \u0111\u1ec7 quy \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c n\u00fat con c\u1ee7a n\u00fat id\n    int mid = (l + r) / 2;\n    update(id*2, l, mid, i, v);\n    update(id*2 + 1, mid+1, r, i, v);\n\n    // C\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb max c\u1ee7a \u0111o\u1ea1n [l, r] theo 2 n\u00fat con:\n    ST[id] = max(ST[id*2], ST[id*2 + 1]);\n}\n\n// Truy v\u1ea5n: t\u00ecm max \u0111o\u1ea1n [u, v]\n// H\u00e0m t\u00ecm max c\u00e1c ph\u1ea7n t\u1eed tr\u00ean c\u00e2y ST n\u1eb1m trong c\u00e2y con g\u1ed1c id - qu\u1ea3n l\u00fd \u0111o\u1ea1n [l, r]\nint get(int id, int l, int r, int u, int v) {\n    if (v &lt; l || r &lt; u) {\n        // \u0110o\u1ea1n [u, v] kh\u00f4ng giao v\u1edbi \u0111o\u1ea1n [l, r], ta b\u1ecf qua \u0111o\u1ea1n n\u00e0y\n        return -INFINITY;\n    }\n    if (u &lt;= l &amp;&amp; r &lt;= v) {\n        // \u0110o\u1ea1n [l, r] n\u1eb1m ho\u00e0n to\u00e0n trong \u0111o\u1ea1n [u, v] m\u00e0 ta \u0111ang truy v\u1ea5n, ta tr\u1ea3 l\u1ea1i\n        // th\u00f4ng tin l\u01b0u \u1edf n\u00fat id\n        return ST[id];\n    }\n    int mid = (l + r) / 2;\n    // G\u1ecdi \u0111\u1ec7 quy v\u1edbi c\u00e1c con c\u1ee7a n\u00fat id\n    return max(get(id*2, l, mid, u, v), get(id*2 + 1, mid+1, r, u, v));\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#phan-tich-thoi-gian-chay","title":"Ph\u00e2n t\u00edch th\u1eddi gian ch\u1ea1y","text":"<p>M\u1ed7i thao t\u00e1c truy v\u1ea5n tr\u00ean c\u00e2y ST c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log{N})\\). \u0110\u1ec3 ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y, ta x\u00e9t 2 lo\u1ea1i thao t\u00e1c tr\u00ean c\u00e2y ST:</p> <ol> <li>Truy v\u1ea5n 1 ph\u1ea7n t\u1eed tr\u00ean ST (gi\u1ed1ng thao t\u00e1c <code>update</code> \u1edf tr\u00ean)</li> <li>Truy v\u1ea5n nhi\u1ec1u ph\u1ea7n t\u1eed tr\u00ean ST (gi\u1ed1ng thao t\u00e1c <code>get</code> \u1edf tr\u00ean)</li> </ol> <p>\u0110\u1ea7u ti\u00ean ta c\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c:</p> <ul> <li>\u0110\u1ed9 cao c\u1ee7a c\u00e2y ST kh\u00f4ng qu\u00e1 \\(O(\\log{N})\\).</li> <li>T\u1ea1i m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, kh\u00f4ng c\u00f3 ph\u1ea7n t\u1eed n\u00e0o n\u1eb1m trong 2 n\u00fat kh\u00e1c nhau c\u1ee7a c\u00e2y.</li> </ul>"},{"location":"algo/data-structures/segment-tree-extend/#thao-tac-loai-1","title":"Thao t\u00e1c lo\u1ea1i 1","text":"<p>V\u1edbi thao t\u00e1c n\u00e0y, \u1edf m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, ta ch\u1ec9 g\u1ecdi \u0111\u1ec7 quy c\u00e1c con c\u1ee7a kh\u00f4ng qu\u00e1 1 n\u00fat. Ph\u00e2n t\u00edch \u0111o\u1ea1n code tr\u00ean, ta x\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>Ph\u1ea7n t\u1eed c\u1ea7n x\u00e9t kh\u00f4ng n\u1eb1m trong \u0111o\u1ea1n \\([l, r]\\) do n\u00fat \\(id\\) qu\u1ea3n l\u00fd. Tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta d\u1eebng l\u1ea1i, kh\u00f4ng x\u00e9t ti\u1ebfp.</li> <li>Ph\u1ea7n t\u1eed c\u1ea7n x\u00e9t n\u1eb1m trong \u0111o\u1ea1n \\([l, r]\\) do n\u00fat \\(id\\) qu\u1ea3n l\u00fd. Ta x\u00e9t c\u00e1c con c\u1ee7a n\u00fat <code>id</code>. Tuy nhi\u00ean ch\u1ec9 c\u00f3 1 con c\u1ee7a n\u00fat <code>id</code> ch\u1ee9a ph\u1ea7n t\u1eed c\u1ea7n x\u00e9t v\u00e0 ta s\u1ebd ph\u1ea3i x\u00e9t ti\u1ebfp c\u00e1c con c\u1ee7a n\u00fat n\u00e0y. V\u1edbi con c\u00f2n l\u1ea1i, ta s\u1ebd d\u1eebng ngay m\u00e0 kh\u00f4ng x\u00e9t c\u00e1c con c\u1ee7a n\u00f3 n\u1eefa.</li> </ul> <p>Do \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c n\u00e0y kh\u00f4ng qu\u00e1 \\(O(\\log{N})\\).</p>"},{"location":"algo/data-structures/segment-tree-extend/#thao-tac-loai-2","title":"Thao t\u00e1c lo\u1ea1i 2","text":"<p>V\u1edbi thao n\u00e0y, ta c\u0169ng ch\u1ee9ng minh t\u01b0\u01a1ng t\u1ef1, nh\u01b0ng \u1edf m\u1ed7i \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y, ta ch\u1ec9 g\u1ecdi h\u00e0m \u0111\u1ec7 quy v\u1edbi c\u00e1c con c\u1ee7a kh\u00f4ng qu\u00e1 2 n\u00fat.</p> <p>Ta ch\u1ee9ng minh b\u1eb1ng ph\u1ea3n ch\u1ee9ng, gi\u1ea3 s\u1eed ta g\u1ecdi \u0111\u1ec7 quy v\u1edbi 3 n\u00fat kh\u00e1c nhau c\u1ee7a c\u00e2y ST (\u0111\u00e1nh d\u1ea5u m\u00e0u \u0111\u1ecf):</p> <p></p> <p>Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, r\u00f5 r\u00e0ng to\u00e0n b\u1ed9 \u0111o\u1ea1n c\u1ee7a n\u00fat \u1edf gi\u1eefa qu\u1ea3n l\u00fd n\u1eb1m trong \u0111o\u1ea1n \u0111ang truy v\u1ea5n. Do \u0111\u00f3 ta kh\u00f4ng c\u1ea7n ph\u1ea3i g\u1ecdi \u0111\u1ec7 quy c\u00e1c con c\u1ee7a n\u00fat \u1edf gi\u1eefa. T\u1eeb \u0111\u00f3 suy ra v\u00f4 l\u00fd, ngh\u0129a l\u00e0 \u1edf m\u1ed7i \u0111\u1ed9 s\u00e2u ta ch\u1ec9 g\u1ecdi \u0111\u1ec7 quy v\u1edbi kh\u00f4ng qu\u00e1 2 n\u00fat.</p>"},{"location":"algo/data-structures/segment-tree-extend/#phan-tich-bo-nho","title":"Ph\u00e2n t\u00edch b\u1ed9 nh\u1edb","text":"<p>Ta x\u00e9t 2 tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>\\(N = 2^k\\): C\u00e2y ST \u0111\u1ea7y \u0111\u1ee7, \u1edf \u0111\u1ed9 s\u00e2u cu\u1ed1i c\u00f9ng c\u00f3 \u0111\u00fang \\(2^k\\) l\u00e1, v\u00e0 c\u00e1c \u0111\u1ed9 s\u00e2u th\u1ea5p h\u01a1n kh\u00f4ng c\u00f3 n\u00fat l\u00e1 n\u00e0o (v\u00e0 c\u00e1c n\u00fat n\u00e0y \u0111\u1ec1u c\u00f3 \u0111\u00fang 2 con). Nh\u01b0 v\u1eady:<ul> <li>T\u1ea7ng \\(k\\): c\u00f3 \\(2^k\\) n\u00fat</li> <li>T\u1ea7ng \\(k-1\\): c\u00f3 \\(2^{k-1}\\) n\u00fat</li> <li>... T\u1ed5ng s\u1ed1 n\u00fat kh\u00f4ng qu\u00e1 \\(2^{k+1}\\).</li> </ul> </li> <li>V\u1edbi \\(N &gt; 2^k\\) v\u00e0 \\(N &lt; 2^{k+1}\\). S\u1ed1 n\u00fat c\u1ee7a c\u00e2y ST kh\u00f4ng qu\u00e1 s\u1ed1 n\u00fat c\u1ee7a c\u00e2y ST v\u1edbi \\(N = 2^{k+1}\\).</li> </ul> <p>Do \u0111\u00f3, s\u1ed1 n\u00fat c\u1ee7a c\u00e2y cho d\u00e3y \\(N\\) ph\u1ea7n t\u1eed, v\u1edbi \\(N \\le 2^k\\) l\u00e0 kh\u00f4ng qu\u00e1 \\(2^{k+1}\\), gi\u00e1 tr\u1ecb n\u00e0y x\u1ea5p x\u1ec9 \\(4 \\* N\\). B\u1eb1ng th\u1ef1c nghi\u1ec7m, ta th\u1ea5y d\u00f9ng \\(4 \\* N\\) l\u00e0 \u0111\u1ee7.</p>"},{"location":"algo/data-structures/segment-tree-extend/#1-segment-tree-co-ien","title":"1. Segment Tree c\u1ed5 \u0111i\u1ec3n","text":"<p>T\u1ea1i sao l\u1ea1i g\u1ecdi l\u00e0 c\u1ed5 \u0111i\u1ec3n? \u0110\u00e2y l\u00e0 d\u1ea1ng ST \u0111\u01a1n gi\u1ea3n nh\u1ea5t, ch\u00fang ta ch\u1ec9 gi\u1ea3i quy\u1ebft truy v\u1ea5n update m\u1ed9t ph\u1ea7n t\u1eed v\u00e0 truy v\u1ea5n \u0111o\u1ea1n, m\u1ed7i n\u00fat l\u01b0u m\u1ed9t lo\u1ea1i d\u1eef li\u1ec7u c\u01a1 b\u1ea3n nh\u01b0 s\u1ed1 nguy\u00ean, boolean, ...</p>"},{"location":"algo/data-structures/segment-tree-extend/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>B\u00e0i to\u00e1n: 380C-Codeforces</p>"},{"location":"algo/data-structures/segment-tree-extend/#tom-tat-e","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<p>Cho m\u1ed9t d\u00e3y ngo\u1eb7c \u0111\u1ed9 d\u00e0i \\(N\\) \\((N\\le10^6)\\), cho \\(M\\) truy v\u1ea5n c\u00f3 d\u1ea1ng \\(l_i, r_i (1\\le l_i\\le r_i \\le N)\\). Y\u00eau c\u1ea7u c\u1ee7a b\u00e0i to\u00e1n l\u00e0 v\u1edbi m\u1ed7i truy v\u1ea5n t\u00ecm m\u1ed9t chu\u1ed7i con (kh\u00f4ng c\u1ea7n li\u00ean ti\u1ebfp) c\u1ee7a chu\u1ed7i t\u1eeb \\(l_i\\) \u0111\u1ebfn \\(r_i\\) d\u00e0i nh\u1ea5t m\u00e0 t\u1ea1o th\u00e0nh d\u00e3y ngo\u1eb7c \u0111\u00fang.</p>"},{"location":"algo/data-structures/segment-tree-extend/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<p>V\u1edbi m\u1ed7i n\u00fat(v\u00ed d\u1ee5 nh\u01b0 n\u00fat \\(id\\), qu\u1ea3n l\u00fd \u0111o\u1ea1n \\([l, r]\\)) ch\u00fang ta l\u01b0u ba bi\u1ebfn nguy\u00ean:</p> <ul> <li><code>optimal</code>: L\u00e0 k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u trong \u0111o\u1ea1n \\([l, r]\\).</li> <li><code>open</code>: S\u1ed1 l\u01b0\u1ee3ng d\u1ea5u <code>(</code> sau khi \u0111\u00e3 x\u00f3a h\u1ebft c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c d\u00e3y ngo\u1eb7c \u0111\u00fang \u0111\u1ed9 d\u00e0i <code>optimal</code> trong \u0111o\u1ea1n.</li> <li><code>close</code>: S\u1ed1 l\u01b0\u1ee3ng d\u1ea5u <code>)</code> sau khi \u0111\u00e3 x\u00f3a h\u1ebft c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c d\u00e3y ngo\u1eb7c \u0111\u00fang \u0111\u1ed9 d\u00e0i <code>optimal</code> trong \u0111o\u1ea1n.</li> </ul> <p>Ta t\u1ea1o 1 ki\u1ec3u d\u1eef li\u1ec7u cho 1 n\u00fat c\u1ee7a c\u00e2y ST nh\u01b0 sau:</p> <pre><code>struct Node {\n    int optimal;\n    int open;\n    int close;\n\n    Node(int opt, int o, int c) { // Kh\u1edfi t\u1ea1o struct Node\n        optimal = opt;\n        open = o;\n        close = c;\n    }\n};\n</code></pre> <p>V\u00e0 ta khai b\u00e1o c\u00e2y ST nh\u01b0 sau:</p> <pre><code>Node st[MAXN * 4];\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#inh-ly","title":"\u0110\u1ecbnh l\u00fd","text":"<p>\u0110\u1ec3 t\u00ednh th\u00f4ng tin \u1edf n\u00fat \\(id\\) qu\u1ea3n l\u00fd \u0111o\u1ea1n \\([l, r]\\), d\u1ef1a tr\u00ean 2 n\u00fat con \\(2\\*id\\) v\u00e0 \\(2\\*id+1\\), ta \u0111\u1ecbnh ngh\u0129a 1 thao t\u00e1c k\u1ebft h\u1ee3p 2 n\u00fat c\u1ee7a c\u00e2y ST:</p> <pre><code>Node operator + (const Node&amp; left, const Node&amp; right) {\n    Node res;\n    // min(s\u1ed1 d\u1ea5u \"(\" th\u1eeba ra \u1edf c\u00e2y con tr\u00e1i, v\u00e0 s\u1ed1 d\u1ea5u \")\" th\u1eeba ra \u1edf c\u00e2y con ph\u1ea3i)\n    int tmp = min(left.open, right.close);\n\n    // \u0110\u1ec3 x\u00e2y d\u1ef1ng k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u \u1edf n\u00fat id, ta n\u1ed1i d\u00e3y ngo\u1eb7c t\u1ed1i \u01b0u \u1edf 2 con, r\u1ed3i th\u00eam\n    // min(s\u1ed1 \"(\" th\u1eeba ra \u1edf con tr\u00e1i, s\u1ed1 \")\" th\u1eeba ra \u1edf con ph\u1ea3i).\n    res.optimal = left.optimal + right.optimal + tmp * 2;\n\n    res.open = left.open + right.open - tmp;\n    res.close = left.close + right.close - tmp;\n\n    return res;\n}\n</code></pre> <p>Ban \u0111\u1ea7u ta c\u00f3 th\u1ec3 kh\u1edfi t\u1ea1o c\u00e2y nh\u01b0 sau:</p> <pre><code>void build(int id, int l, int r) {\n    if (l == r) {\n        // \u0110o\u1ea1n [l, r] ch\u1ec9 c\u00f3 1 ph\u1ea7n t\u1eed.\n        if (s[l] == '(') st[id] = Node(0, 1, 0);\n        else st[id] = Node(0, 0, 1);\n        return ;\n    }\n    int mid = (l + r) / 2;\n    build(id * 2, l, mid);\n    build(id * 2 + 1, mid+1, r);\n\n    st[id] = st[id * 2] + st[id * 2 + 1];\n}\n</code></pre> <p>\u0110\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n, ta c\u0169ng l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 trong b\u00e0i to\u00e1n c\u01a1 b\u1ea3n:</p> <pre><code>Node query(int id, int l, int r, int u, int v) {\n    if (v &lt; l || r &lt; u) {\n        // Tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng giao nhau\n        return Node(0, 0, 0);\n    }\n    if (u &lt;= l &amp;&amp; r &lt;= v) {\n        // Tr\u01b0\u1eddng h\u1ee3p [l, r] n\u1eb1m ho\u00e0n to\u00e0n trong [u, v]\n        return st[id];\n    }\n\n    int mid = (l + r) / 2;\n    return query(id * 2, l, mid, u, v) + query(id * 2 + 1, mid+1, r, u, v);\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>B\u00e0i to\u00e1n: SPOJ-KQUERY</p> <p>T\u00f3m \u0111\u1ec1:</p> <ul> <li>Cho m\u1ed9t d\u00e3y s\u1ed1 \\(a_i(1\\le a_i \\le 10^9)\\) c\u00f3 \\(N(1\\le N \\le 30,000)\\) ph\u1ea7n t\u1eed</li> <li>Cho \\(Q(1\\le Q \\le 200,000)\\) truy v\u1ea5n c\u00f3 d\u1ea1ng 3 s\u1ed1 nguy\u00ean l\u00e0 \\(l_i, r_i, k_i\\) \\((1\\le l_i\\le r_i\\le N, 1\\le k \\le 10^9)\\). Y\u00eau c\u1ea7u c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 \\(a_j (l_i\\le j \\le r_i)\\) m\u00e0 \\(a_j\\ge k\\).</li> </ul> <p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 m\u1ed9t m\u1ea3ng \\(b\\) v\u1edbi \\(b_i=1\\) n\u1ebfu \\(a_i&gt;k\\) v\u00e0 b\u1eb1ng \\(0\\) n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i. Th\u00ec ch\u00fang ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng tr\u1ea3 l\u1eddi truy v\u1ea5n \\((i, j, k)\\) b\u1eb1ng c\u00e1ch l\u1ea5y t\u1ed5ng t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\).</p> <p>C\u00e1ch l\u00e0m c\u1ee7a b\u00e0i n\u00e0y l\u00e0 x\u1eed l\u00fd c\u00e1c truy v\u1ea5n theo m\u1ed9t th\u1ee9 t\u1ef1 kh\u00e1c, \u0111\u1ec3 ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c m\u1ea3ng \\(b\\). K\u0129 n\u0103ng n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 x\u1eed l\u00fd offline (t\u01b0\u01a1ng t\u1ef1 n\u1ebfu ta tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n theo \u0111\u00fang th\u1ee9 t\u1ef1 trong input, th\u00ec \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 x\u1eed l\u00fd online):</p> <ul> <li>S\u1eafp x\u1ebfp c\u00e1c truy v\u1ea5n theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a \\(k\\).</li> <li>L\u00fac \u0111\u1ea7u m\u1ea3ng \\(b\\) g\u1ed3m to\u00e0n b\u1ed9 c\u00e1c s\u1ed1 1.</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n, ta xem trong m\u1ea3ng \\(a\\) c\u00f3 nh\u1eefng ph\u1ea7n t\u1eed n\u00e0o l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb \\(k\\) c\u1ee7a truy v\u1ea5n tr\u01b0\u1edbc, v\u00e0 nh\u1ecf h\u01a1n gi\u00e1 tr\u1ecb \\(k\\) c\u1ee7a truy v\u1ea5n hi\u1ec7n t\u1ea1i, r\u1ed3i \u0111\u00e1nh d\u1ea5u c\u00e1c v\u1ecb tr\u00ed \u0111\u00f3 tr\u00ean m\u1ea3ng \\(b\\) th\u00e0nh 0. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c vi\u1ec7c n\u00e0y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3, ta c\u0169ng c\u1ea7n s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng \\(a\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n.</li> </ul> <p>Ta t\u1ea1o ki\u1ec3u d\u1eef li\u1ec7u cho truy v\u1ea5n:</p> <pre><code>struct Query {\n    int k;\n    int l, r;\n};\n\n// so s\u00e1nh 2 truy v\u1ea5n \u0111\u1ec3 d\u00f9ng v\u00e0o vi\u1ec7c sort.\nbool operator &lt; (const Query&amp; a, const Query &amp;b) {\n    return a.k &lt; b.k;\n}\n</code></pre> <p>Ph\u1ea7n x\u1eed l\u00fd ch\u00ednh s\u1ebd nh\u01b0 sau:</p> <pre><code>vector&lt; Query &gt; queries; // c\u00e1c truy v\u1ea5n\n// \u0110\u1ecdc v\u00e0o c\u00e1c truy v\u1ea5n\nreadInput();\n\n// S\u1eafp x\u1ebfp c\u00e1c truy v\u1ea5n\nsort(queries.begin(), queries.end());\n\n// Kh\u1edfi t\u1ea1o m\u1ea3ng id sao cho:\n// a[id[1]], a[id[2]], a[id[3]] l\u00e0 m\u1ea3ng a \u0111\u00e3 s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n.\n\n// Kh\u1edfi t\u1ea1o Segment Tree\n\nfor(Query q : queries) {\n    while (a[id[i]] &lt;= q.k) {\n        b[id[i]] = 0;\n        // C\u1eadp nh\u1eadt c\u00e2y Segment Tree.\n        ++i;\n    }\n}\n</code></pre> <p>V\u1eady ta c\u00f3 th\u1ec3 vi\u1ebft h\u00e0m x\u00e2y d\u1ef1ng c\u00e2y nh\u01b0 sau:</p> <pre><code>void build(int id, int l, int r) {\n    if (l == r) {\n        // N\u00fat id ch\u1ec9 g\u1ed3m 1 ph\u1ea7n t\u1eed\n        st[id] = 1;\n        return ;\n    }\n    int mid = (l + r) / 2;\n    build(id * 2, l, mid);\n    build(id * 2 + 1, mid+1, r);\n\n    st[id] = st[id*2] + st[id*2+1];\n}\n</code></pre> <p>M\u1ed9t h\u00e0m c\u1eadp nh\u1eadt khi ta mu\u1ed1n g\u00e1n l\u1ea1i m\u1ed9t v\u1ecb tr\u00ed b\u1eb1ng 0:</p> <pre><code>void update(int id, int l, int r, int u) {\n    if (u &lt; l || r &lt; u) {\n        // u n\u1eb1m ngo\u00e0i \u0111o\u1ea1n [l, r]\n        return ;\n    }\n    if (l == r) {\n        st[id] = 0;\n        return ;\n    }\n    int mid = (l + r) / 2;\n    update(id*2, l, mid, u);\n    update(id*2 + 1, mid+1, r, u);\n\n    st[id] = st[id*2] + st[id*2+1];\n}\n</code></pre> <p>V\u00e0 cu\u1ed1i c\u00f9ng l\u00e0 th\u1ef1c hi\u1ec7n truy v\u1ea5n l\u1ea5y t\u1ed5ng m\u1ed9t \u0111o\u1ea1n:</p> <pre><code>int get(int id, int l, int r, int u, int v) {\n    if (v &lt; l || r &lt; u) {\n        // \u0110o\u1ea1n [l, r] n\u1eb1m ngo\u00e0i \u0111o\u1ea1n [u, v]\n        return 0;\n    }\n    if (u &lt;= l &amp;&amp; r &lt;= v) {\n        // \u0110o\u1ea1n [l, r] n\u1eb1m ho\u00e0n to\u00e0n trong \u0111o\u1ea1n [u, v]\n        return st[id];\n    }\n    int mid = (l + r) / 2;\n    return get(id*2, l, mid, u, v)\n        + get(id*2+1, mid+1, r, u, v);\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#2-lazy-propagation","title":"2. Lazy Propagation","text":"<p>\u0110\u00e2y l\u00e0 k\u0129 thu\u1eadt \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong ST \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ST v\u1edbi c\u00e1c truy v\u1ea5n c\u1eadp nh\u1eadt \u0111o\u1ea1n.</p>"},{"location":"algo/data-structures/segment-tree-extend/#tu-tuong","title":"T\u01b0 t\u01b0\u1edfng","text":"<p>Gi\u1ea3 s\u1eed ta c\u1ea7n c\u1eadp nh\u1eadt \u0111o\u1ea1n \\([u, v]\\). D\u1ec5 th\u1ea5y ta kh\u00f4ng th\u1ec3 n\u00e0o c\u1eadp nh\u1eadt t\u1ea5t c\u1ea3 c\u00e1c n\u00fat tr\u00ean Segment Tree (do t\u1ed5ng s\u1ed1 n\u00fat n\u1eb1m trong \u0111o\u1ea1n \\([u, v]\\) c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn \\(O(N)\\)). Do \u0111\u00f3, trong qu\u00e1 tr\u00ecnh c\u1eadp nh\u1eadt, ta ch\u1ec9 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u1edf c\u00e1c n\u00fat qu\u1ea3n l\u00fd c\u00e1c \u0111o\u1ea1n to nh\u1ea5t n\u1eb1m trong \\([u, v]\\). V\u00ed d\u1ee5 v\u1edbi \\(N = 7\\), c\u00e2y Segment tree nh\u01b0 h\u00ecnh minh ho\u1ea1 \u1edf \u0111\u1ea7u b\u00e0i. Gi\u1ea3 s\u1eed b\u1ea1n c\u1ea7n c\u1eadp nh\u1eadt \\([1, 6]\\):</p> <ul> <li>B\u1ea1n ch\u1ec9 c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb \u1edf c\u00e1c n\u00fat qu\u1ea3n l\u00fd c\u00e1c \u0111o\u1ea1n \\([1, 4]\\) v\u00e0 \\([5, 6]\\).</li> <li>Gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c n\u00fat qu\u1ea3n l\u00fd c\u00e1c \u0111o\u1ea1n \\([1, 2]\\), \\([3, 4]\\), \\([1, 1]\\), \\([2, 2]\\), \\([5, 5]\\), ... s\u1ebd kh\u00f4ng \u0111\u00fang. Ta s\u1ebd ch\u1ec9 c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c n\u00fat n\u00e0y khi th\u1eadt s\u1ef1 c\u1ea7n thi\u1ebft (Do \u0111\u00f3 k\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 lazy - l\u01b0\u1eddi bi\u1ebfng).</li> </ul> <p>C\u1ee5 th\u1ec3, ch\u00fang ta c\u00f9ng xem b\u00e0i to\u00e1n sau:</p>"},{"location":"algo/data-structures/segment-tree-extend/#bai-toan","title":"B\u00e0i To\u00e1n","text":"<p>VNOJ - QMAX2</p>"},{"location":"algo/data-structures/segment-tree-extend/#tom-tat-e_1","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<p>Cho d\u00e3y s\u1ed1 \\(A\\) v\u1edbi \\(N\\) ph\u1ea7n t\u1eed \\((N \\le 50,000)\\). B\u1ea1n c\u1ea7n th\u1ef1c hi\u1ec7n 2 lo\u1ea1i truy v\u1ea5n:</p> <ol> <li>C\u1ed9ng t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 trong \u0111o\u1ea1n \\([l, r]\\) l\u00ean gi\u00e1 tr\u1ecb \\(val\\).</li> <li>In ra gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a c\u00e1c s\u1ed1 trong \u0111o\u1ea1n \\([l, r]\\).</li> </ol>"},{"location":"algo/data-structures/segment-tree-extend/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>Thao t\u00e1c 2 l\u00e0 thao t\u00e1c c\u01a1 b\u1ea3n tr\u00ean Segment Tree, \u0111\u00e3 \u0111\u01b0\u1ee3c ta ph\u00e2n t\u00edch \u1edf b\u00e0i to\u00e1n \u0111\u1ea7u ti\u00ean.</p> <p>V\u1edbi thao t\u00e1c 1, truy v\u1ea5n \u0111o\u1ea1n \\([u, v]\\). Gi\u1ea3 s\u1eed ta g\u1ecdi \\(F(id)\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t trong \u0111o\u1ea1n m\u00e0 n\u00fat \\(id\\) qu\u1ea3n l\u00fd. Trong l\u00fac c\u1eadp nh\u1eadt, mu\u1ed1n h\u00e0m n\u00e0y th\u1ef1c hi\u1ec7n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng qu\u00e1 \\(O(\\log{N})\\), th\u00ec khi \u0111\u1ebfn 1 n\u00fat \\(id\\) qu\u1ea3n l\u00fd \u0111o\u1ea1n \\([l, r]\\) v\u1edbi \u0111o\u1ea1n \\([l, r]\\) n\u1eb1m ho\u00e0n to\u00e0n trong \u0111o\u1ea1n \\([u, v]\\), th\u00ec ta kh\u00f4ng \u0111\u01b0\u1ee3c \u0111i v\u00e0o c\u00e1c n\u00fat con c\u1ee7a n\u00f3 n\u1eefa (n\u1ebfu kh\u00f4ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(N)\\) do ta \u0111i v\u00e0o t\u1ea5t c\u1ea3 c\u00e1c n\u00fat n\u1eb1m trong \u0111o\u1ea1n \\([u, v]\\)). \u0110\u1ec3 gi\u1ea3i quy\u1ebft, ta d\u00f9ng k\u0129 thu\u1eadt Lazy Propagation nh\u01b0 sau:</p> <ul> <li>L\u01b0u \\(T(id)\\) v\u1edbi \u00fd ngh\u0129a, t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n \\([l, r]\\) m\u00e0 n\u00fat \\(id\\) qu\u1ea3n l\u00fd \u0111\u1ec1u \u0111\u01b0\u1ee3c c\u1ed9ng th\u00eam \\(T(id)\\).</li> <li>Tr\u01b0\u1edbc khi ta c\u1eadp nh\u1eadt ho\u1eb7c l\u1ea5y 1 gi\u00e1 tr\u1ecb c\u1ee7a 1 n\u00fat \\(id'\\) n\u00e0o \u0111\u00f3, ta ph\u1ea3i \u0111\u1ea3m b\u1ea3o ta \u0111\u00e3 \"\u0111\u1ea9y\" gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng \\(T\\) \u1edf t\u1ea5t c\u1ea3 c\u00e1c n\u00fat t\u1ed5 ti\u00ean c\u1ee7a \\(id'\\) xu\u1ed1ng \\(id'\\). \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, \u1edf c\u00e1c h\u00e0m <code>get</code> v\u00e0 <code>update</code>, tr\u01b0\u1edbc khi g\u1ecdi \u0111\u1ec7 quy xu\u1ed1ng c\u00e1c con \\(2 \\* id\\) v\u00e0 \\(2 \\* id+1\\), ta ph\u1ea3i g\u00e1n:<ul> <li><code>T[id*2] += T[id]</code></li> <li><code>T[id*2+1] += T[id]</code></li> <li><code>T[id] = 0</code> ch\u00fa \u00fd ta c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n thao t\u00e1c n\u00e0y, n\u1ebfu kh\u00f4ng m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y s\u1ebd b\u1ecb c\u1ed9ng nhi\u1ec1u l\u1ea7n, do ta \u0111\u1ea9y xu\u1ed1ng nhi\u1ec1u l\u1ea7n.</li> </ul> </li> </ul> <p>Ch\u00fa \u00fd: B\u00e0i QMAX2 n\u00e0y c\u00f3 c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c kh\u00f4ng s\u1eed d\u1ee5ng Lazy Propagation, tuy nhi\u00ean s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf \u0111\u00e2y.</p>"},{"location":"algo/data-structures/segment-tree-extend/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u cho 1 n\u00fat c\u1ee7a ST nh\u01b0 sau:</p> <pre><code>struct Node {\n    int lazy; // gi\u00e1 tr\u1ecb T trong ph\u00e2n t\u00edch tr\u00ean\n    int val; // gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t.\n} nodes[MAXN * 4];\n</code></pre> <p>H\u00e0m \"\u0111\u1ea9y\" gi\u00e1 tr\u1ecb \\(T\\) xu\u1ed1ng c\u00e1c con:</p> <pre><code>void down(int id) {\n    int t = nodes[id].lazy;\n    nodes[id*2].lazy += t;\n    nodes[id*2].val += t;\n\n    nodes[id*2+1].lazy += t;\n    nodes[id*2+1].val += t;\n\n    nodes[id].lazy = 0;\n}\n</code></pre> <p>H\u00e0m c\u1eadp nh\u1eadt:</p> <pre><code>void update(int id, int l, int r, int u, int v, int val) {\n    if (v &lt; l || r &lt; u) {\n        return ;\n    }\n    if (u &lt;= l &amp;&amp; r &lt;= v) {\n        // Khi c\u00e0i \u0111\u1eb7t, ta LU\u00d4N \u0110\u1ea2M B\u1ea2O gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt \u0110\u1ed2NG TH\u1edcI v\u1edbi\n        // gi\u00e1 tr\u1ecb lazy propagation. Nh\u01b0 v\u1eady s\u1ebd tr\u00e1nh sai s\u00f3t.\n        nodes[id].val += val;\n        nodes[id].lazy += val;\n        return ;\n    }\n    int mid = (l + r) / 2;\n\n    down(id); // \u0111\u1ea9y gi\u00e1 tr\u1ecb lazy propagation xu\u1ed1ng c\u00e1c con\n\n    update(id*2, l, mid, u, v, val);\n    update(id*2+1, mid+1, r, u, v, val);\n\n    nodes[id].val = max(nodes[id*2].val, nodes[id*2+1].val);\n}\n</code></pre> <p>H\u00e0m l\u1ea5y gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t:</p> <pre><code>int get(int id, int l, int r, int u, int v) {\n    if (v &lt; l || r &lt; u) {\n        return -INFINITY;\n    }\n    if (u &lt;= l &amp;&amp; r &lt;= v) {\n        return nodes[id].val;\n    }\n    int mid = (l + r) / 2;\n    down(id); // \u0111\u1ea9y gi\u00e1 tr\u1ecb lazy propagation xu\u1ed1ng c\u00e1c con\n\n    return max(get(id*2, l, mid, u, v),\n        get(id*2+1, mid+1, r, u, v));\n    // Trong c\u00e1c b\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t, gi\u00e1 tr\u1ecb \u1edf n\u00fat id c\u00f3 th\u1ec3 b\u1ecb thay \u0111\u1ed5i (do ta \u0111\u1ea9y lazy propagation\n    // xu\u1ed1ng c\u00e1c con). Khi \u0111\u00f3, ta c\u1ea7n c\u1eadp nh\u1eadt l\u1ea1i th\u00f4ng tin c\u1ee7a n\u00fat id d\u1ef1a tr\u00ean th\u00f4ng tin c\u1ee7a c\u00e1c con.\n}\n</code></pre> <p>\u0110\u1ebfn \u0111\u00e2y c\u00e1c b\u1ea1n \u0111\u00e3 n\u1eafm \u0111\u01b0\u1ee3c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 Segment Tree. Nh\u1eefng ph\u1ea7n ti\u1ebfp theo n\u00f3i v\u1ec1 c\u00e1c ki\u1ebfn th\u1ee9c n\u00e2ng cao - c\u00e1c m\u1edf r\u1ed9ng c\u1ee7a ST. B\u1ea1n n\u00ean l\u00e0m nhi\u1ec1u b\u00e0i luy\u1ec7n t\u1eadp (tham kh\u1ea3o \u1edf cu\u1ed1i b\u00e0i) tr\u01b0\u1edbc khi nghi\u00ean c\u1ee9u ti\u1ebfp.</p>"},{"location":"algo/data-structures/segment-tree-extend/#3-ung-dung-voi-cau-truc-mang-ong","title":"3. \u1ee8ng d\u1ee5ng v\u1edbi c\u1ea5u tr\u00fac m\u1ea3ng \u0111\u1ed9ng","text":"<p>Trong lo\u1ea1i b\u00e0i to\u00e1n n\u00e0y v\u1edbi m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ta l\u01b0u l\u1ea1i m\u1ed9t <code>vector</code> v\u00e0 m\u1ed9t s\u1ed1 bi\u1ebfn kh\u00e1c.</p>"},{"location":"algo/data-structures/segment-tree-extend/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>C\u00e1ch l\u00e0m online cho b\u00e0i KQUERY.</p>"},{"location":"algo/data-structures/segment-tree-extend/#tom-tat-e_2","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<ul> <li>Cho d\u00e3y \\(A\\) v\u1edbi \\(N\\) ph\u1ea7n t\u1eed. C\u1ea7n tr\u1ea3 l\u1eddi \\(Q\\) truy v\u1ea5n.</li> <li>Truy v\u1ea5n: \u0111\u1ebfm s\u1ed1 ph\u1ea7n t\u1eed l\u1edbn h\u01a1n \\(k\\) trong \u0111o\u1ea1n \\([l, r]\\).</li> <li>Gi\u1edbi h\u1ea1n:<ul> <li>\\(N \\le 30,000\\)</li> <li>\\(A_i \\le 10^9\\)</li> <li>\\(Q \\le 200,000\\)</li> </ul> </li> </ul>"},{"location":"algo/data-structures/segment-tree-extend/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>C\u00f3 \\(\\log{N}\\) n\u00fat m\u00e0 ta c\u1ea7n x\u00e9t khi tr\u1ea3 l\u1eddi truy v\u1ea5n c\u1ee7a \u0111o\u1ea1n \\([u, v]\\).</li> <li>N\u1ebfu tr\u00ean m\u1ed7i n\u00fat ch\u00fang ta c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i danh s\u00e1ch c\u00e1c ph\u1ea7n t\u1eed \u0111\u00f3 theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n, ta c\u00f3 th\u1ec3 t\u00ecm ra k\u1ebft qu\u1ea3 \u1edf m\u1ed7i n\u00fat b\u1eb1ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n.</li> </ul> <p>V\u00ec th\u1ebf v\u1edbi m\u1ed7i n\u00fat ta l\u01b0u l\u1ea1i m\u1ed9t <code>vector</code> ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n. \u0110i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u1edbi b\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(\\mathcal{O}(N\\log{N})\\) do m\u1ed7i ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 \u1edf t\u1ed1i \u0111a \\(\\mathcal{O}(\\log{N})\\) n\u00fat (\u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y kh\u00f4ng qu\u00e1 \\(\\mathcal{O}(\\log{N})\\)). \u1ede m\u1ed7i n\u00fat cha c\u00f3 ta c\u00f3 th\u1ec3 g\u1ed9p hai n\u00fat con v\u00e0o n\u00fat cha b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p gi\u1ed1ng nh\u01b0 Merge Sort (l\u01b0u l\u1ea1i hai bi\u1ebfn ch\u1ea1y v\u00e0 so s\u00e1nh l\u1ea7n l\u01b0\u1ee3t t\u1eebng ph\u1ea7n t\u1eed \u1edf hai m\u1ea3ng) \u0111\u1ec3 c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng c\u00e2y trong \\(\\mathcal{O}(N\\log{N})\\).</p> <p>H\u00e0m x\u00e2y c\u00e2y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c nh\u01b0 sau:</p> <pre><code>void build(int id, int l, int r) {\n    if (l == r) {\n        // \u0110o\u1ea1n g\u1ed3m 1 ph\u1ea7n t\u1eed. Ta d\u1ec5 d\u00e0ng kh\u1edfi t\u1ea1o n\u00fat tr\u00ean ST.\n        st[id].push_back(a[l]);\n        return ;\n    }\n    int mid = (l + r) / 2;\n    build(id*2, l, mid);\n    build(id*2+1, mid+1, r);\n\n    merge(st[id*2].begin(), st[id*2].end(), st[id*2+1].begin(), st[id*2+1].end(), st[id].begin());\n}\n</code></pre> <p>V\u00e0 h\u00e0m truy v\u1ea5n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>int get(int id, int l, int r, int u, int v, int k) { // Tr\u1ea3 l\u1eddi truy v\u1ea5n (x, y, k)\n    if (v &lt; l || r &lt; u) {\n        return 0;\n    }\n    if (u &lt;= l &amp;&amp; r &lt;= v) {\n        // \u0110\u1ebfm s\u1ed1 ph\u1ea7n t\u1eed &gt; K b\u1eb1ng ch\u1eb7t nh\u1ecb ph\u00e2n\n        return st[id].size() - (upper_bound(st[id].begin(), st[id].end(), k) - st[id].begin());\n    }\n    int mid = (l + r) / 2;\n    return get(id*2, l, mid, u, v, k) + get(id*2+1, mid+1, r, u, v, k);\n}\n</code></pre> <p>M\u1ed9t v\u00ed d\u1ee5 kh\u00e1c l\u00e0 b\u00e0i Component Tree</p>"},{"location":"algo/data-structures/segment-tree-extend/#4-ung-dung-voi-cau-truc-set","title":"4. \u1ee8ng d\u1ee5ng v\u1edbi c\u1ea5u tr\u00fac set","text":"<p>\u1ede c\u1ea5u tr\u00fac n\u00e0y m\u1ed7i n\u00fat ch\u00fang ta l\u01b0u m\u1ed9t <code>set</code>,<code>multiset</code>, <code>hashmap</code>, ho\u1eb7c <code>unodered map</code> v\u00e0 m\u1ed9t s\u1ed1 bi\u1ebfn kh\u00e1c.</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n v\u00ed d\u1ee5: Cho \\(n\\) vector \\(a_1, a_2, a_3,...,a_n\\) r\u1ed7ng ban \u0111\u1ea7u. Ch\u00fang ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \\(m\\) truy v\u1ea5n tr\u00ean nh\u1eefng vector n\u00e0y:</p> <ol> <li>Truy v\u1ea5n \\(A\\) \\(p\\) \\(k\\) l\u00e0 th\u00eam s\u1ed1 \\(k\\) v\u00e0o cu\u1ed1i vector \\(a_p\\).</li> <li>Truy v\u1ea5n \\(C\\) \\(l\\) \\(r\\) \\(k\\) l\u00e0 xu\u1ea5t ra \\(\\sum_{i=l}^rcount(a_i,k)\\), v\u1edbi \\(count(a_i,k)\\) l\u00e0 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a s\u1ed1 \\(k\\) trong vector \\(a_i\\).</li> </ol> <p>B\u00e0i to\u00e1n n\u00e0y ch\u00fang ta l\u01b0u l\u1ea1i m\u1ed7i n\u00fat c\u1ee7a c\u00e2y l\u00e0 m\u1ed9t <code>multiset</code> \\(s\\), v\u1edbi m\u1ed7i n\u00fat l\u01b0u s\u1ed1 \\(k\\) \u0111\u00fang \\(\\sum_{i=l}^rcount(a_i,k)\\) l\u1ea7n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb ch\u1ec9 \\(\\mathcal{O}(q\\log{n})\\).</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n  \\(C\\) \\(x\\) \\(y\\) \\(k\\) ch\u00fang ta s\u1ebd in ra t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 d\u00f9ng c\u00e2y ph\u00e2n \u0111o\u1ea1n v\u00e0 truy v\u1ea5n tr\u00ean set trong m\u1ed7i \u0111o\u1ea1n thu\u1ed9c \u0111o\u1ea1n \\(x\\) \u0111\u1ebfn \\(y\\) nh\u01b0 truy tr\u00ean truy v\u1ea5n c\u00e2y ph\u00e2n \u0111o\u1ea1n b\u00ecnh th\u01b0\u1eddng.</p> <p>Ch\u00fang ta s\u1ebd kh\u00f4ng c\u00f3 h\u00e0m x\u00e2y c\u00e2y do c\u00e1c vector ban \u0111\u1ea7u \u0111ang l\u00e0 r\u1ed7ng, nh\u01b0ng ch\u00fang ta s\u1ebd c\u00f3 th\u00eam h\u00e0m c\u1ed9ng ph\u1ea7n t\u1eed v\u00e0o nh\u01b0 sau:</p> <pre><code>void add(int id, int l, int r, int p, int k) {  // Th\u1ef1c hi\u1ec7n truy v\u1ea5n A p k\n    s[id].insert(k);\n    if (l == r) return ;\n\n    int mid = (l + r) / 2;\n    if (p &lt;= mid) add(id*2, l, mid, p, k);\n    else add(id*2 + 1, mid+1, r, p, k);\n}\n</code></pre> <p>V\u00e0 m\u1ed9t h\u00e0m cho truy v\u1ea5n 2:</p> <pre><code>int ask(int id, int l, int r, int x, int y, int k) { // Tr\u1ea3 l\u1eddi C x y k\n    if (y &lt; l || r &lt; x) return 0;\n    if (x &lt;= l &amp;&amp; r &lt;= y) {\n        return s[id].count(k);\n    }\n    int mid = (l + r) / 2;\n    return ask(id*2, l, mid, x, y, k) + ask(id*2+1, mid+1, r, x, y, k);\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#5-ung-dung-voi-cac-cau-truc-du-lieu-khac","title":"5. \u1ee8ng d\u1ee5ng v\u1edbi c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c","text":"<p>C\u00e2y ph\u00e2n \u0111o\u1ea1n c\u00f2n c\u00f3 th\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t c\u00e1ch linh ho\u1ea1t v\u1edbi c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c nh\u01b0 \u1edf tr\u00ean. S\u1eed d\u1ee5ng m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n kh\u00e1c tr\u00ean t\u1eebng n\u00fat c\u00f3 th\u1ec3 gi\u00fap ch\u00fang ta truy v\u1ea5n d\u1ec5 d\u00e0ng h\u01a1n tr\u00ean m\u1ea3ng hai chi\u1ec1u. Tr\u00ean \u0111\u00e2y c\u0169ng c\u00f3 th\u1ec3 l\u00e0 c\u00e1c lo\u1ea1i c\u00e2y nh\u01b0 C\u00e2y ti\u1ec1n t\u1ed1(Trie) ho\u1eb7c c\u0169ng c\u00f3 th\u1ec3 l\u00e0 c\u1ea5u tr\u00fac Disjoint Set. Sau \u0111\u00e2y m\u00ecnh xin gi\u1edbi thi\u1ec7u m\u1ed9t lo\u1ea1i c\u00e2y kh\u00e1c c\u0169ng s\u1eed d\u1ee5ng nhi\u1ec1u trong c\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u00f3 ch\u00ednh l\u00e0 C\u00e2y Fenwick (Binary Indexed Tree):</p> <p>Nh\u01b0 tr\u00ean m\u1ed7i n\u00fat c\u1ee7a c\u00e2y s\u1ebd l\u00e0 m\u1ed9t c\u00e2y Fenwick v\u00e0 c\u00f3 th\u1ec3 m\u1ed9t s\u1ed1 bi\u1ebfn kh\u00e1c. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n v\u00ed d\u1ee5:</p> <p>Cho \\(n\\) vectors \\(a_1,a_2,a_3,...,a_n\\) r\u1ed7ng ban \u0111\u1ea7u. Ch\u00fang ta c\u1ea7n th\u1ef1c hi\u1ec7n hai lo\u1ea1i truy v\u1ea5n:</p> <ol> <li>Truy v\u1ea5n \\(A\\) \\(p\\) \\(k\\) l\u00e0 th\u00eam s\u1ed1 \\(k\\) v\u00e0o \u0111\u1eb1ng sau vector \\(a_p\\).</li> <li>Truy v\u1ea5n \\(C\\) \\(l\\) \\(r\\) \\(k\\) l\u00e0 xu\u1ea5t ra \\(\\sum_{i=l}^rcount(a_i,j)\\) v\u1edbi \\(j\\le k\\) v\u1edbi \\(count(a_i,j)\\) l\u00e0 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n \\(k\\) trong \\(a_i\\).</li> </ol> <p>V\u1edbi b\u00e0i to\u00e1n n\u00e0y, ta c\u0169ng l\u01b0u l\u1ea1i \u1edf m\u1ed9t n\u00fat l\u00e0 m\u1ed9t <code>vector</code> \\(v\\) ch\u1ee9a s\u1ed1 \\(k\\) khi v\u00e0 ch\u1ec9 khi \\(\\sum_{i=l}^rcount(a_i,j)\\ne 0\\) (\u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb s\u1ebd l\u00e0 \\(\\mathcal{O}(q\\log{n})\\) ) (c\u00e1c s\u1ed1 theo theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n)</p> <p>\u0110\u1ea7u ti\u00ean, \u0111\u1ecdc v\u00e0 l\u01b0u c\u00e1c truy v\u1ea5n l\u1ea1i v\u1edbi m\u1ed7i truy v\u1ea5n lo\u1ea1i 1 ta s\u1ebd th\u00eam \\(v\\) v\u00e0o t\u1ea5t c\u1ea3 vector c\u00f3 ch\u1ee9a ph\u1ea7n t\u1eed \\(p\\). Sau \u0111\u00f3 ta ti\u1ebfn h\u00e0nh s\u1eafp x\u1ebfp c\u00e1c truy v\u1ea5n theo ph\u01b0\u01a1ng ph\u00e1p Merge Sort \u0111\u00e3 n\u00f3i \u1edf tr\u00ean v\u00e0 d\u00f9ng h\u00e0m <code>unique</code> \u0111\u1ec3 lo\u1ea1i c\u00e1c ph\u1ea7n t\u1eed tr\u00f9ng.</p> <p>Sau \u0111\u00f3 ch\u00fang ta s\u1ebd x\u00e2y d\u1ee5ng \u1edf m\u1ed7i n\u00fat m\u1ed9t c\u00e2y Fenwick c\u00f3 \u0111\u1ed9 l\u1edbn b\u1eb1ng \u0111\u1ed9 d\u00e0i vector. Sau \u0111\u00e2y l\u00e0 h\u00e0m th\u00eam gi\u00e1 tr\u1ecb:</p> <pre><code>void insert(int id, int l, int r, int p, int k) { // Th\u1ef1c hi\u1ec7n A p k\n    if (l == r) {\n        v[id].push_back(k);\n        return ;\n    }\n    int mid = (l+r) / 2;\n    if (p &lt; mid)\n        insert(id*2, l, mid, p, k);\n    else\n        insert(id*2+1, mid+1, r, p, k);\n}\n</code></pre> <p>H\u00e0m s\u1eafp x\u1ebfp sau khi \u0111\u00e3 \u0111\u1ecdc h\u1ebft c\u00e1c truy v\u1ea5n:</p> <pre><code>void sort_(int id, int l, int r) {\n    if (l == r) return ;\n    int mid = (l + r) / 2;\n    sort_(id*2, l, mid);\n    sort_(id*2+1, mid+1, r);\n\n    merge(v[2 * id].begin(), v[2 * id].end(), v[2 * id + 1].begin(), v[2 * id +1].end(), v[id].begin());\n}\n</code></pre> <p>V\u1edbi m\u1ed7i truy v\u1ea5n lo\u1ea1i 1 ta l\u00e0m nh\u01b0 sau v\u1edbi m\u1ed7i n\u00fat x:</p> <pre><code>for(int i = a + 1; i &lt; fen[x].size(); i += i &amp; -i)\n    fen[x][i] ++;\n</code></pre> <p>V\u1edbi t\u1ea5t c\u1ea3 \\(v[x][a]=k\\):</p> <pre><code>void update(int id, int l, int r, int p, int k) {\n    int a = lower_bound(v[id].begin(), v[id].end(), k) - v[id].begin();\n    for(int i = a + 1; i &lt; fen[id].size(); i += i &amp; -i)\n        fen[id][i]++;\n\n    if (l == r) return ;\n\n    int mid = (l + r) / 2;\n    if (p &lt; mid)\n        update(id*2, l, mid, p, k);\n    else\n        update(id*2+1, mid+1, r, p, k);\n}\n</code></pre> <p>C\u00f2n l\u1ea1i vi\u1ec7c t\u00ednh to\u00e1n truy v\u1ea5n lo\u1ea1i 2 tr\u1edf n\u00ean d\u1ec5 d\u00e0ng h\u01a1n:</p> <pre><code>int ask(int id, int l, int r, int x, int y, int k) { // Tr\u1ea3 l\u1eddi C x y-1 k\n    if (y &lt; l || r &lt; x) return 0;\n    if (x &lt;= l &amp;&amp; r &lt;= y) {\n        int a = lower_bound(v[id].begin(), v[id].end(), k) - v[id].begin();\n        int ans = 0;\n        for(int i = a + 1; i &gt; 0; i -= i &amp; -i)\n            ans += fen[id][i];\n        return ans;\n    }\n    int mid = (l + r) / 2;\n    return ask(id*2, l, mid, x, y, k)\n        + ask(id*2+1, mid+1, r, x, y, k);\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#6-ung-dung-trong-cay-co-goc","title":"6. \u1ee8ng d\u1ee5ng trong c\u00e2y c\u00f3 g\u1ed1c","text":"<p>Ta c\u00f3 th\u1ec3 th\u1ea5y c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u00e0 m\u1ed9t \u1ee9ng d\u1ee5ng trong m\u1ea3ng, v\u00ec l\u00ed do \u0111\u00f3 n\u1ebfu ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1ed5i c\u00e2y th\u00e0nh c\u00e1c m\u1ea3ng, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng x\u1eed l\u00fd c\u00e1c truy v\u1ea5n tr\u00ean c\u00e2y. \u0110\u00e2y l\u00e0 t\u01b0 t\u01b0\u1edfng c\u1ee7a Heavy Light Decomposition.</p> <p>B\u00e0i t\u1eadp v\u00ed d\u1ee5: 396C - On Changing Tree</p> <p>G\u1ecdi \\(h_v\\) l\u00e0 \u0111\u1ed9 cao t\u01b0\u01a1ng \u1ee9ng c\u1ee7a n\u00fat \\(v\\).</p> <p>Ta c\u00f3 v\u1edbi m\u1ed7i n\u00fat \\(u\\) trong c\u00e2y con g\u1ed1c \\(v\\) sau truy v\u1ea5n m\u1ed9t gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 s\u1ebd t\u0103ng m\u1ed9t l\u01b0\u1ee3ng l\u00e0 \\(x+(h_u-h_v)\\*-k=x+k\\* h_v-k\\* h\\). K\u1ebft qu\u1ea3 c\u1ee7a truy v\u1ea5n 2 s\u1ebd l\u00e0 \\(\\sum_{i\\in s}(k_i\\*h_{v_i}+x_i)-h_u\\*\\sum_{i\\in s}k_i\\). V\u00ec v\u1eady ta ch\u1ec9 c\u1ea7n t\u00ednh hai gi\u00e1 tr\u1ecb l\u00e0 \\(\\sum_{i\\in s}(k_i\\* h_{v_i}+x_i)\\) v\u00e0 \\(\\sum_{i\\in s}k_i\\). V\u1eady v\u1edbi m\u1ed7i n\u00fat ta c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i hai gi\u00e1 tr\u1ecb l\u00e0 \\(hkx=\\sum x +h*k\\) v\u00e0 \\(sk=\\sum k\\) (kh\u00f4ng c\u1ea7n lazy propagation do ch\u00fang ta ch\u1ec9 update n\u00fat \u0111\u1ea7u ti\u00ean th\u1ecfa vi\u1ec7c n\u1eb1m trong \u0111o\u1ea1n.</p> <p>V\u1edbi truy v\u1ea5n c\u1eadp nh\u1eadt:</p> <pre><code>void update(int id, int l, int r, int x, int k, int v) {\n    if (s[v] &gt;= r || l &gt;= f[v]) return ;\n    if (s[v] &lt;= l &amp;&amp; r &lt;= f[v]) {\n        hkx[id] = (hkx[id] + x) % mod;\n            int a = (1LL * h[v] * k) % mod;\n            hkx[id] = (hkx[id] + a) % mod;\n            sk[id] = (sk[id] + k) % mod;\n            return ;\n    }\n    int mid = (l+r) / 2;\n    update(id*2, l, mid, x, k, v);\n    update(id*2+1, mid+1, r, x, k, v);\n}\n</code></pre> <p>V\u00e0 truy v\u1ea5n:</p> <pre><code>int ask(int id, int l, int r, int v) {\n    int a = (1LL * h[v] * sk[id]) % mod;\n    int ans = (hkx[id] + mod - a) % mod;\n    if (l == r) return ans;\n    int mid = (l+r) / 2;\n    if(s[v] &lt; mid)\n        return (ans + ask(2 * id, l, mid, v)) % mod;\n    return (ans + ask(2*id + 1, mid, r, v)) % mod;\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#7-persistent-segment-trees","title":"7. Persistent Segment Trees","text":"<p>Persistent Data Structures l\u00e0 nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c d\u00f9ng khi ch\u00fang ta c\u1ea7n c\u00f3 to\u00e0n b\u1ed9 l\u1ecbch s\u1eed c\u1ee7a c\u00e1c thay \u0111\u1ed5i tr\u00ean 1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u (CTDL).</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam \u1edf: Persistent Data Structures</p>"},{"location":"algo/data-structures/segment-tree-extend/#8-it-oan-thang","title":"8. IT \u0111o\u1ea1n th\u1eb3ng","text":"<p>B\u00e0i to\u00e1n</p> <p>Cho m\u1ed9t t\u1eadp h\u1ee3p ch\u1ee9a c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng c\u00f3 d\u1ea1ng \\(ax + b\\), m\u1ed7i \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t c\u1eb7p s\u1ed1 \\((a, b)\\). C\u1ea7n th\u1ef1c hi\u1ec7n hai truy v\u1ea5n:</p> <ol> <li>Th\u00eam m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0o t\u1eadp h\u1ee3p.</li> <li>Tr\u1ea3 l\u1eddi xem t\u1ea1i ho\u00e0nh \u0111\u1ed9 \\(q\\), \u0111i\u1ec3m n\u00e0o thu\u1ed9c \u00edt nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng trong t\u1eadp c\u00f3 tung \u0111\u1ed9 l\u1edbn nh\u1ea5t. N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u01b0\u1eddng th\u1eb3ng \\((a, b)\\) n\u00e0o c\u00f3 \\(aq + b\\) l\u1edbn nh\u1ea5t.</li> </ol> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y, hai c\u00e1ch ph\u1ed5 bi\u1ebfn l\u00e0 \u1ee9ng d\u1ee5ng bao l\u1ed3i v\u00e0 s\u1eed d\u1ee5ng c\u00e2y Interval Tree l\u01b0u \u0111o\u1ea1n th\u1eb3ng</p>"},{"location":"algo/data-structures/segment-tree-extend/#9-chat-nhi-phan-tren-segment-tree","title":"9. Ch\u1eb7t nh\u1ecb ph\u00e2n tr\u00ean Segment tree","text":"<p>Ngu\u1ed3n: Binary Search on Segment Tree</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t thao t\u00e1c kh\u00e1 th\u01b0\u1eddng g\u1eb7p khi d\u00f9ng Segment tree, n\u00f3 c\u00f3 t\u00ean g\u1ecdi l\u00e0 ch\u1eb7t nh\u1ecb ph\u00e2n tr\u00ean Segment tree, t\u00ean ti\u1ebfng anh l\u00e0 \"Binary search over/on Segment tree\", ho\u1eb7c l\u00e0 \"Walk on Segment tree\".</p> <p>Tr\u01b0\u1edbc h\u1ebft, ta c\u1ea7n ph\u1ea3i n\u1eafm \u0111\u01b0\u1ee3c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 Segment tree v\u00e0 ch\u1eb7t nh\u1ecb ph\u00e2n. B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u thu\u1eadt to\u00e1n ch\u1eb7t nh\u1ecb ph\u00e2n \u1edf \u0111\u00e2y.</p>"},{"location":"algo/data-structures/segment-tree-extend/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>Cho m\u1ed9t m\u1ea3ng c\u00e1c s\u1ed1 nguy\u00ean \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed. C\u00f3 \\(q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng:  - \\(k\\) : t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(a[i] \\le k\\).</p>"},{"location":"algo/data-structures/segment-tree-extend/#cach-giai","title":"C\u00e1ch gi\u1ea3i","text":"<p>Ta nh\u1eadn th\u1ea5y do \\(a[i] \\le k\\) v\u00e0 \\(i\\) nh\u1ecf nh\u1ea5t, cho n\u00ean \\(a[j] &gt; k\\) v\u1edbi m\u1ecdi \\(1 \\le j &lt; i\\). </p> <p>Do \u0111\u00f3, \\(min(a[1], a[2], ..., a[i]) = a[i]\\).</p> <p>\u0110\u1eb7t \\(f[i] = min(a[1], a[2], ..., a[i])\\). </p> <p>Nh\u1eadn x\u00e9t 1: Vi\u1ec7c t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(a[i] \\le k\\) c\u0169ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(f[i] \\le k\\).</p> <p>Nh\u1eadn x\u00e9t 2: \\(f[i - 1] \\ge f[i]\\). N\u00f3i c\u00e1ch kh\u00e1c, \\(f\\) l\u00e0 m\u1ea3ng kh\u00f4ng t\u0103ng. </p> <p>V\u1eady b\u00e0i to\u00e1n c\u00f3 th\u1ec3 ph\u00e1t bi\u1ec3u l\u1ea1i nh\u01b0 sau: </p> <p>Cho m\u1ed9t m\u1ea3ng c\u00e1c s\u1ed1 nguy\u00ean \\(f\\) \u0111\u00e3 \"s\u1eafp x\u1ebfp\" gi\u1ea3m d\u1ea7n, c\u00f3 \\(q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng: - \\(k\\) : t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(f[i] \\le k\\).</p> <p>R\u00f5 r\u00e0ng b\u00e0i to\u00e1n n\u00e0y ch\u1ec9 l\u00e0 b\u00e0i to\u00e1n ch\u1eb7t nh\u1ecb ph\u00e2n c\u01a1 b\u1ea3n, v\u00ec m\u1ea3ng \\(f\\) \u0111\u00e3 \u0111\u01b0\u1ee3c \"s\u1eafp x\u1ebfp\". T\u1edbi \u0111\u00e2y ta c\u00f3 th\u1ec3 tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log{n})\\). Code th\u00ec n\u00f3 s\u1ebd gi\u1ed1ng gi\u1ed1ng th\u1ebf n\u00e0y: </p> <pre><code>int query(int k) {\n    int l = 1, r = n, pos = -1;\n    while (l &lt;= r) {\n        int mid = (l + r) / 2;\n        if (f[mid] &lt;= k) \n            pos = mid, r = mid - 1;\n        else \n            l = mid + 1;\n    }\n    return pos;\n}\n</code></pre>"},{"location":"algo/data-structures/segment-tree-extend/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Cho m\u1ed9t m\u1ea3ng c\u00e1c s\u1ed1 nguy\u00ean \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed. C\u00f3 \\(q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng:  - \\(i\\) \\(x\\) : g\u00e1n \\(a[i] = x\\). - \\(k\\) : t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(a[i] \\le k\\)</p> <p>B\u00e0i to\u00e1n n\u00e0y gi\u1ed1ng b\u00e0i to\u00e1n 1, nh\u01b0ng c\u00f3 th\u00eam truy v\u1ea5n c\u1eadp nh\u1eadt ph\u1ea7n t\u1eed, \u0111i\u1ec1u n\u00e0y l\u00e0m cho m\u1ea3ng \\(f\\) b\u1ecb thay \u0111\u1ed5i. Ta c\u00f3 th\u1ec3 s\u1eeda l\u1ea1i y\u00eau c\u1ea7u b\u00e0i to\u00e1n m\u1ed9t ch\u00fat, l\u00e0 c\u00f3 \\(3\\) lo\u1ea1i truy v\u1ea5n: - \\(i\\) \\(x\\) : g\u00e1n \\(a[i] = x\\). - \\(k\\) : t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(a[i] \\le k\\) - \\(i\\) : t\u00ednh \\(min(a[1], a[2], ..., a[i])\\). </p> <p>R\u00f5 r\u00e0ng truy v\u1ea5n 1 v\u00e0 3 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n b\u1eb1ng Segment tree v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log{n})\\), v\u1eady th\u00ec t\u1edbi \u0111\u00e2y b\u00e0i to\u00e1n quay v\u1ec1 b\u00e0i to\u00e1n 1, ch\u1ec9 c\u00f3 \u0111i\u1ec1u khi ta c\u1ea7n t\u00ednh \\(f[i]\\) th\u00ec ta ph\u1ea3i g\u1ecdi h\u00e0m tr\u00ean Segment tree \u0111\u1ec3 l\u1ea5y min, \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho vi\u1ec7c tr\u1ea3 l\u1eddi truy v\u1ea5n 2 l\u00e0 \\(O(\\log^2{n})\\):</p> <pre><code>int query(int k) {\n    int l = 1, r = n, pos = -1;\n    while (l &lt;= r) {\n        int mid = (l + r) / 2;\n        if (getMin(1, mid) &lt;= k) \n            pos = mid, r = mid - 1;\n        else \n            l = mid + 1;\n    }\n    return pos;\n}\n</code></pre> <p>Nh\u01b0ng n\u1ebfu ch\u1ec9 d\u1eebng \u1edf \u0111\u00e2y th\u00ec \u0111\u00e3 kh\u00f4ng c\u1ea7n ph\u1ea3i nh\u1eafc \u0111\u1ebfn trong b\u00e0i vi\u1ebft n\u00e0y r\u1ed3i &lt;(\") . Ta nh\u00ecn m\u1ed9t ch\u00fat v\u00e0o c\u1ea5u tr\u00fac c\u00e2y Segment tree (qu\u1ea3n l\u00fd min) d\u01b0\u1edbi d\u00e2y: </p> <p></p> <p>Gi\u1ea3 s\u1eed ta c\u1ea7n t\u00ecm v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u00f3 gi\u00e1 tr\u1ecb kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(2\\). Ta \u0111\u1ee9ng t\u1eeb g\u1ed1c, x\u00e9t \\(2\\) con tr\u00e1i ph\u1ea3i l\u1ea7n l\u01b0\u1ee3t c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(3\\) v\u00e0 \\(2\\):  </p> <p>Do ta \u0111ang c\u1ea7n t\u00ecm gi\u00e1 tr\u1ecb kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(2\\), n\u00ean ta ch\u1eafc ch\u1eafn k\u1ebft qu\u1ea3 kh\u00f4ng n\u1eb1m trong c\u00e2y con b\u00ean tr\u00e1i (v\u00ec min c\u1ee7a c\u00e2y con n\u00e0y l\u00e0 \\(3\\), suy ra m\u1ecdi ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi c\u00e2y con n\u00e0y \u0111\u1ec1u l\u1edbn h\u01a1n \\(2\\)). V\u00e0 do c\u00e2y con ph\u1ea3i c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(2\\), suy ra k\u1ebft qu\u1ea3 ch\u1eafc ch\u1eafn n\u1eb1m c\u00e2y con n\u00e0y, ta \u0111\u1ec7 quy xu\u1ed1ng c\u00e2y con b\u00ean tr\u00e1i: </p> <p></p> <p>T\u01b0\u01a1ng t\u1ef1, c\u00e2y con n\u00e0y c\u00f3 \\(2\\) c\u00e2y con tr\u00e1i v\u00e0 ph\u1ea3i, c\u1ea3 \\(2\\) \u0111\u1ec1u c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(2\\), ngh\u0129a l\u00e0 lu\u00f4n t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t s\u1ed1 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(2\\) trong c\u1ea3 \\(2\\) c\u00e2y con n\u00e0y, t\u1eeb \u0111\u00f3 suy ra c\u1ea3 \\(2\\) c\u00e2y con \u0111\u1ec1u c\u00f3 th\u1ec3 ch\u1ee9a k\u1ebft qu\u1ea3 ta c\u1ea7n t\u00ecm. Nh\u01b0ng do ta mu\u1ed1n t\u00ecm v\u1ecb tr\u00ed c\u00f3 \\(i\\) b\u00e9 nh\u1ea5t, n\u00ean ta s\u1ebd \u01b0u ti\u00ean \u0111i v\u00e0o c\u00e2y con b\u00ean tr\u00e1i (c\u00e2y con n\u00e0y qu\u1ea3n l\u00fd c\u00e1c v\u1ecb tr\u00ed nh\u1ecf h\u01a1n c\u00e1c v\u1ecb tr\u00ed c\u1ee7a c\u00e2y con ph\u1ea3i). </p> <p></p> <p>L\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1 th\u00ec ta s\u1ebd bi\u1ebft \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 n\u1eb1m \u1edf c\u00e2y con tr\u00e1i, l\u00fac n\u00e0y c\u00e2y ch\u1ec9 qu\u1ea3n l\u00fd duy nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed n\u00ean ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn lu\u00f4n v\u1ecb tr\u00ed c\u1ea7n t\u00ecm. </p> <p>\u0110o\u1ea1n code m\u1eabu cho vi\u1ec7c t\u00ecm v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 s\u1ed1 \\(k\\) c\u00f3 th\u1ec3 code nh\u01b0 sau, l\u01b0u \u00fd, trong code n\u00e0y m\u00ecnh xem m\u1ea3ng \\(st\\) l\u00e0 m\u1ea3ng l\u01b0u gi\u00e1 tr\u1ecb c\u1ee7a Segment tree, \\(3\\) tham s\u1ed1 \\(root, l, r\\) th\u1ec3 hi\u1ec7n cho vi\u1ec7c n\u00fat \\(root\\) qu\u1ea3n l\u00fd m\u1ed9t \u0111o\u1ea1n t\u1eeb \\([l, r]\\):</p> <pre><code>int query(int root, int l, int r, int k) {\n    if (st[root] &gt; k) return -1; //n\u1ebfu c\u1ea3 \u0111o\u1ea1n [l, r] \u0111\u1ec1u l\u1edbn h\u01a1n k th\u00ec kh\u00f4ng th\u1ecfa m\u00e3n\n    if (l == r) return l; //khi \u0111o\u1ea1n c\u00f3 1 ph\u1ea7n t\u1eed th\u00ec \u0111\u00f3 l\u00e0 k\u1ebft qu\u1ea3\n    int mid = (l + r) / 2;\n    if (st[root * 2] &lt;= k) //n\u1ebfu min c\u00e2y con tr\u00e1i kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 k\n        return query(root * 2, l, mid, k);\n    //ng\u01b0\u1ee3c l\u1ea1i th\u00ec k\u1ebft qu\u1ea3 n\u1eb1m \u1edf b\u00ean c\u00e2y con ph\u1ea3i\n    return query(root * 2 + 1, mid + 1, r, k)\n}\n//cout &lt;&lt; query(1, 1, n, k);\n</code></pre> <p>H\u00e0m tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(\\log{n})\\), b\u1edfi v\u00ec m\u1ed7i l\u1ea7n \u0111\u1ec7 quy ch\u1ec9 g\u1ecdi ra m\u1ed9t h\u00e0m kh\u00e1c (t\u1eeb m\u1ed9t n\u00fat ch\u1ec9 \u0111i qua m\u1ed9t n\u00fat kh\u00e1c), v\u00e0 s\u1ed1 l\u1ea7n g\u1ecdi \u0111\u1ec7 quy ch\u00ednh b\u1eb1ng \u0111\u1ed9 cao c\u1ee7a Segment tree. T\u1edbi \u0111\u00e2y ta \u0111\u00e3 xong b\u00e0i to\u00e1n 2. </p> <p>L\u01b0u \u00fd l\u00e0, v\u1edbi c\u00e1c b\u00e0i to\u00e1n m\u00e0 truy v\u1ea5n c\u1eadp nh\u1eadt l\u00e0 m\u1ed9t \u0111o\u1ea1n (thay v\u00ec m\u1ed9t ph\u1ea7n t\u1eed nh\u01b0 b\u00e0i to\u00e1n 2), th\u00ec vi\u1ec7c c\u00e0i \u0111\u1eb7t h\u00e0m \\(query\\) \u1edf tr\u00ean v\u1eabn kh\u00f4ng \u0111\u1ed5i, ch\u1ec9 c\u00f3 th\u00eam v\u00e0o lazy tr\u01b0\u1edbc khi x\u00e9t \\(2\\) c\u00e2y con tr\u00e1i ph\u1ea3i, m\u00ecnh xin gi\u00e0nh cho b\u1ea1n \u0111\u1ecdc v\u1eady. </p>"},{"location":"algo/data-structures/segment-tree-extend/#bai-toan-3","title":"B\u00e0i to\u00e1n 3:","text":"<p>Cho m\u1ed9t m\u1ea3ng c\u00e1c s\u1ed1 nguy\u00ean \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed. C\u00f3 \\(q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng:  - \\(i\\) \\(x\\) : g\u00e1n \\(a[i] = x\\). - \\(L\\) \\(k\\) : t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(L \\le i\\) v\u00e0 \\(a[i] \\le k\\)</p> <p>B\u00e0i to\u00e1n n\u00e0y kh\u00f3 h\u01a1n b\u00e0i to\u00e1n 2 m\u1ed9t ch\u00fat, \u0111\u00f3 l\u00e0 c\u00f3 th\u00eam m\u1ed9t c\u1eadn d\u01b0\u1edbi c\u1ee7a \\(i\\) (thay v\u00ec t\u00ecm \\(i\\) b\u00e9 nh\u1ea5t, th\u00ec ta c\u1ea7n t\u00ecm \\(i\\) b\u00e9 nh\u1ea5t nh\u01b0ng l\u1edbn h\u01a1n m\u1ed9t s\u1ed1 n\u00e0o \u0111\u00f3), ta c\u00f3 th\u1ec3 thay \u0111\u1ed5i code m\u1ed9t t\u00ed nh\u01b0 sau:</p> <p><pre><code>int query(int root, int l, int r, int lowerbound, int k) {\n    if (st[root] &gt; k) return -1; //n\u1ebfu c\u1ea3 \u0111o\u1ea1n [l, r] \u0111\u1ec1u l\u1edbn h\u01a1n k th\u00ec kh\u00f4ng th\u1ecfa m\u00e3n\n    if (r &lt; lowerbound) return -1; //ta ch\u1ec9 x\u00e9t nh\u1eefng v\u1ecb tr\u00ed kh\u00f4ng nh\u1ecf h\u01a1n lowerbound\n    if (l == r) return l; //khi \u0111o\u1ea1n c\u00f3 1 ph\u1ea7n t\u1eed th\u00ec \u0111\u00f3 l\u00e0 k\u1ebft qu\u1ea3\n    int mid = (l + r) / 2;\n    int res = -1; \n    if (st[root * 2] &lt;= k) //n\u1ebfu min c\u00e2y con tr\u00e1i kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 k\n        res = query(root * 2, l, mid, lowerbound, k);\n    //n\u1ebfu c\u00e2y con tr\u00e1i kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 &lt;=&gt; min n\u1eb1m ngo\u00e0i lowerbound\n    //th\u00ec ta s\u1ebd t\u00ecm k\u1ebft qu\u1ea3 \u1edf c\u00e2y con ph\u1ea3i\n    if (res == -1)  \n        res = query(root * 2, mid + 1, r, lowerbound, k);\n    return res;\n}\n//cout &lt;&lt; query(1, 1, n, l, k);\n</code></pre> Code n\u00e0y c\u00f3 m\u1ed9t ch\u00fat l\u1ea1, kh\u00e1c so v\u1edbi code \u1edf b\u00e0i to\u00e1n 2 m\u1ed9t ch\u00fat, \u1edf b\u00e0i to\u00e1n 2, th\u00ec m\u1ed7i l\u1ea7n \u0111\u1ec7 quy ch\u1ec9 th\u0103m duy nh\u1ea5t m\u1ed9t con tr\u00e1i ho\u1eb7c ph\u1ea3i, nh\u01b0ng \u1edf code m\u1edbi n\u00e0y th\u00ec m\u1ed9t l\u1ea7n \u0111\u1ec7 quy c\u00f3 th\u1ec3 ph\u1ea3i th\u0103m c\u1ea3 \\(2\\) con, l\u00fd do l\u00e0 v\u00ec c\u00f3 th\u1ec3 m\u1ed9t c\u00e2y con n\u00f3 c\u00f3 min kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(k\\), nh\u01b0ng v\u1ecb tr\u00ed \u0111\u1ea1t min n\u00f3 c\u00f3 th\u1ec3 nh\u1ecf h\u01a1n \\(lowerbound\\), v\u00ec th\u1ebf ta ph\u1ea3i t\u00ecm \u1edf c\u00e2y con kh\u00e1c. </p> <p>\u0110\u1ec3 \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p code tr\u00ean th\u00ec h\u01a1i r\u01b0\u1eddm r\u00e0 m\u1ed9t ch\u00fat, nh\u01b0ng n\u00f3 v\u1eabn l\u00e0 \\(O(\\log{n})\\). \u0110\u1ea1i \u00fd l\u00e0 ta c\u00f3 th\u1ec3 ch\u1ee9ng minh s\u1ed1 l\u1ea7n m\u00e0 \\(r &lt; lowerbound\\) s\u1ebd kh\u00f4ng qu\u00e1 \\(O(\\log{n})\\).</p>"},{"location":"algo/data-structures/segment-tree-extend/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:","text":"<ul> <li>VNOJ - Educational Segment Tree Contest</li> <li>VNOJ - QMAX</li> <li>VNOJ - NKLINEUP</li> <li>VNOJ - GSS</li> <li>VNOJ - LITES</li> <li>VNOJ - DQUERY</li> <li>VNOJ - KQUERY</li> <li>FREQUENT</li> <li>VNOJ - KQUERY2</li> <li>GSS2</li> <li>GSS3</li> <li>MULTQ3</li> <li>POSTERS</li> <li>PATULJCI</li> <li>New Year Domino</li> <li>Copying Data</li> <li>DZY Loves Fibonacci Numbers</li> <li>FRBSUM</li> </ul>"},{"location":"algo/data-structures/segment-tree-extend/#oc-them","title":"\u0110\u1ecdc th\u00eam:","text":"<ul> <li>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t - \u0110o\u00e0n M\u1ea1nh H\u00f9ng</li> <li>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t - Nguy\u1ec5n Minh Hi\u1ebfu</li> </ul>"},{"location":"algo/data-structures/segment-tree-extend/#cac-nguon-tham-khao","title":"C\u00e1c ngu\u1ed3n tham kh\u1ea3o:","text":"<ul> <li>Codeforces</li> <li>M\u1ed9t s\u1ed1 v\u1ea5n \u0111\u1ec1 \u0111\u00e1ng ch\u00fa \u00fd trong m\u00f4n Tin h\u1ecdc</li> </ul>"},{"location":"algo/data-structures/sqrt-decomposition/","title":"Chia c\u0103n (sqrt decomposition) v\u00e0 \u1ee9ng d\u1ee5ng: Ph\u1ea7n 1","text":"<p>T\u00e1c gi\u1ea3: Ho\u00e0ng Xu\u00e2n Nh\u1eadt &amp; V\u01b0\u01a1ng Ho\u00e0ng Long</p> <p>Chia c\u0103n l\u00e0 t\u00ean g\u1ecdi chung c\u1ee7a m\u1ed9t nh\u00f3m c\u00e1c thu\u1eadt to\u00e1n th\u01b0\u1eddng li\u00ean quan \u0111\u1ebfn vi\u1ec7c chia c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng th\u00e0nh \\(\\sqrt{N}\\) ph\u1ea7n.</p> <p>Sau \u0111\u00e2y ta s\u1ebd x\u00e9t m\u1ed9t d\u1ea1ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t: chia m\u1ea3ng ra l\u00e0m \\(\\sqrt{N}\\) \u0111o\u1ea1n, th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i to\u00e1n truy v\u1ea5n.</p>"},{"location":"algo/data-structures/sqrt-decomposition/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>Cho m\u1ed9t m\u1ea3ng \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m. B\u1ea1n c\u1ea7n tr\u1ea3 l\u1eddi \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n c\u00f3 d\u1ea1ng \\((l, r, k)\\) y\u00eau c\u1ea7u t\u00ecm \u0111\u1ebfm s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a A n\u1eb1m trong \u0111o\u1ea1n \\([l..r]\\) c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(k\\). Gi\u1edbi h\u1ea1n: \\(N, Q, A_i \\le 10^5\\).</p> <p>Gi\u1ea3 s\u1eed ta lu\u00f4n c\u00f3 \\(l = 1\\) v\u00e0 \\(r = N\\), b\u00e0i to\u00e1n tr\u00ean c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch t\u1ea1o m\u1ed9t m\u1ea3ng $cnt[x] = $ s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(x\\).</p> <p>Ta \u00e1p d\u1ee5ng \u00fd t\u01b0\u1edfng n\u00e0y \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t, b\u1eb1ng c\u00e1ch t\u1ea1o ra \\(\\sqrt{N}\\) m\u1ea3ng cnt, m\u1ed7i m\u1ea3ng qu\u1ea3n l\u00fd m\u1ed9t \u0111o\u1ea1n \\(\\sqrt{N}\\) ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp c\u1ee7a \\(A\\). \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, ta c\u00f3 th\u1ec3 xem v\u00ed d\u1ee5 sau.</p> <p>Ta c\u00f3 m\u1ea3ng A g\u1ed1m 13 ph\u1ea7n t\u1eed, ch\u1ec9 s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh b\u1eaft \u0111\u1ea7u t\u1eeb 0. Ta s\u1ebd chia m\u1ea3ng \\(A\\) th\u00e0nh c\u00e1c \u0111o\u1ea1n c\u00f3 \u0111\u1ed9 d\u00e0i 4, \u0111o\u1ea1n cu\u1ed1i c\u00f9ng s\u1ebd ch\u1ec9 ch\u1ee9a 1 ph\u1ea7n t\u1eed. N\u1ed9i dung m\u1ea3ng \\(A\\) v\u00e0 c\u00e1c m\u1ea3ng \\(cnt\\) \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh s\u1eb5n nh\u01b0 trong h\u00ecnh sau:</p> <p></p> <p>V\u1edbi c\u1ea5u tr\u00fac tr\u00ean, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n. V\u00ed d\u1ee5, x\u00e9t truy v\u1ea5n \\((1, 11, 0)\\).</p> <p></p> <p>C\u00f3 th\u1ec3 th\u1ea5y, \u0111o\u1ea1n truy v\u1ea5n s\u1ebd lu\u00f4n \u0111\u01b0\u1ee3c chia th\u00e0nh c\u00e1c \u0111o\u1ea1n ch\u1ee9a \u0111\u1ee7 \\(\\sqrt{N}\\) ph\u1ea7n t\u1eed (trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \u0111o\u1ea1n \\([4..7]\\) v\u00e0 \\([8..11]\\)), v\u00e0 c\u00f3 th\u1ec3 th\u00eam m\u1ed9t s\u1ed1 \u0111o\u1ea1n kh\u00f4ng \u0111\u1ea7y \u0111\u1ee7 \u1edf hai \u0111\u1ea7u (\u1edf \u0111\u00e2y l\u00e0 \u0111o\u1ea1n \\([1..3]\\)).</p> <p>V\u1edbi nh\u1eefng \u0111o\u1ea1n \u0111\u1ea7y \u0111\u1ee7, ta c\u1ed9ng \\(cnt[0]\\) c\u1ee7a ch\u00fang v\u00e0o k\u1ebft qu\u1ea3. V\u1edbi nh\u1eefng \u0111o\u1ea1n kh\u00f4ng \u0111\u1ea7y \u0111\u1ee7, ta x\u00e9t t\u1eebng ph\u1ea7n t\u1eed. Ph\u1ea7n t\u1eed n\u00e0o b\u1eb1ng 0, ta s\u1ebd t\u0103ng bi\u1ebfn \u0111\u1ebfm k\u1ebft qu\u1ea3 l\u00ean 1. V\u1edbi truy v\u1ea5n \\((1, 11, 0)\\), ta c\u00f3 k\u1ebft qu\u1ea3 l\u00e0 \\(2 + 3 + 1 + 1 = 7\\).</p> <p></p> <p>C\u1ea5u tr\u00fac tr\u00ean v\u1eabn c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y khi c\u00f3 th\u00eam truy v\u1ea5n ch\u1ec9nh s\u1eeda m\u1ed9t ph\u1ea7n t\u1eed c\u1ee7a \\(A\\), b\u1ea1n ch\u1ec9 c\u1ea7n thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \\(cnt\\) c\u1ee7a m\u1ed9t \u0111o\u1ea1n duy nh\u1ea5t ch\u1ee9a ph\u1ea7n t\u1eed c\u1ea7n c\u1eadp nh\u1eadt.</p>"},{"location":"algo/data-structures/sqrt-decomposition/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ea7u ti\u00ean, ta ph\u1ea3i tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c c\u00e2u h\u1ecfi: t\u1ea1i sao l\u1ea1i chia th\u00e0nh \\(\\sqrt{N}\\) \u0111o\u1ea1n, m\u00e0 kh\u00f4ng ph\u1ea3i $1, 2, 10, N/2, ... $ ? </p> <p>G\u1ecdi s\u1ed1 \u0111o\u1ea1n ta chia ra l\u00e0 \\(S\\). V\u1eady m\u1ed7i \u0111o\u1ea1n s\u1ebd c\u00f3 \u0111\u1ed9 d\u00e0i \\(N/S\\) (ta t\u1ea1m b\u1ecf qua \u0111o\u1ea1n cu\u1ed1i).</p> <p>Khi truy v\u1ea5n, ta ph\u1ea3i x\u00e9t 2 th\u1ee9: m\u1ed9t l\u00e0 nh\u1eefng \u0111o\u1ea1n \u0111\u1ea7y \u0111\u1ee7, n\u1eb1m trong \u0111o\u1ea1n truy v\u1ea5n. Hai l\u00e0 \u0111o\u1ea1n d\u01b0 ra \u1edf hai \u0111\u1ea7u c\u1ee7a truy v\u1ea5n.</p> <p>V\u1edbi nh\u1eefng \u0111o\u1ea1n \u0111\u1ea7y \u0111\u1ee7, trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t ch\u00fang ta ph\u1ea3i x\u00e9t c\u1ea3 \\(S\\) \u0111o\u1ea1n. M\u1ed7i \u0111o\u1ea1n ta c\u1ed9ng \\(cnt[k]\\) v\u00e0o k\u1ebft qu\u1ea3 trong \\(O(1)\\), v\u1eady t\u1ed5ng c\u1ed9ng m\u1ea5t \\(O(S)\\).</p> <p>V\u1edbi \u0111o\u1ea1n d\u01b0 ra \u1edf hai \u0111\u1ea7u, ta x\u00e9t ri\u00eang t\u1eebng ph\u1ea7n t\u1eed m\u1ea5t \\(O(1)\\). C\u00e1c \u0111o\u1ea1n \u0111\u1ec1u c\u00f3 \u0111\u1ed9 d\u00e0i \\(N/S\\), n\u00ean ta m\u1ea5t \\(O(N/S)\\) cho ph\u1ea7n n\u00e0y.</p> <p>M\u1ed7i truy v\u1ea5n ta m\u1ea5t th\u1eddi gian l\u00e0 \\(O(S + N/S)\\). Ta c\u1ea7n t\u00ecm gi\u00e1 tr\u1ecb \\(S\\) sao cho \\(S + N/S\\) \u0111\u1ea1t gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t. \u00c1p d\u1ee5ng b\u1ea5t \u0111\u1eb3ng th\u1ee9c AM-GM, gi\u00e1 tr\u1ecb n\u00e0y l\u00e0 nh\u1ecf nh\u1ea5t khi \\(S = N/S \\iff S = \\sqrt{N}\\). Th\u1eddi gian \u0111\u1ec3 th\u1ef1c hi\u1ec7n \\(Q\\) truy v\u1ea5n s\u1ebd l\u00e0 \\(O(Q\\sqrt{N})\\).</p>"},{"location":"algo/data-structures/sqrt-decomposition/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u1ea7n ph\u1ea3i l\u01b0u nh\u1eefng c\u1ea5u tr\u00fac sau:  * \\(\\sqrt{N}\\) m\u1ea3ng \\(cnt\\), m\u1ed7i m\u1ea3ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(max(A_i)\\), t\u1ed1n \\(O(\\sqrt{N} * max(A_i)\\)) b\u1ed9 nh\u1edb. * M\u1ea3ng \\(A\\), t\u1ed1n \\(O(N)\\) b\u1ed9 nh\u1edb.</p> <p>Khi gi\u1ea3i b\u00e0i to\u00e1n, ta th\u01b0\u1eddng chia th\u00e0nh c\u00e1c h\u00e0m ti\u1ec1n x\u1eed l\u00fd \u0111\u1ec3 d\u1ef1ng ra c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, v\u00e0 c\u00e1c h\u00e0m tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n.</p> <pre><code>const int BLOCK_SIZE = 320;\nconst int N = 1e5 + 2;\n\nint n;\nint cnt[N / BLOCK_SIZE + 2][N];\nint a[N];\n\nvoid preprocess()\n{\n    for (int i = 0; i &lt; n; ++i)\n        ++cnt[i / BLOCK_SIZE][a[i]];\n}\n</code></pre> <p>Sau khi \u0111\u00e3 ti\u1ec1n x\u1eed l\u00fd, h\u00e0m tr\u1ea3 l\u1eddi truy v\u1ea5n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau. L\u01b0u \u00fd, ta ph\u1ea3i x\u00e9t ri\u00eang tr\u01b0\u1eddng h\u1ee3p c\u1ea3 hai \u0111\u1ea7u c\u1ee7a truy v\u1ea5n n\u1eb1m trong c\u00f9ng m\u1ed9t \u0111o\u1ea1n. Trong code b\u00ean d\u01b0\u1edbi, t\u00e1c gi\u1ea3 d\u00f9ng h\u00e0m count c\u1ee7a th\u01b0 vi\u1ec7n C++ STL.</p> <pre><code>int query(int l, int r, int k)\n{\n    int blockL = (l + BLOCK_SIZE - 1) / BLOCK_SIZE;\n    int blockR = r / BLOCK_SIZE;\n    if (blockL &gt;= blockR)\n        return count(a + l, a + r + 1, k);\n\n    int sum = 0;\n    for (int i = blockL; i &lt; blockR; ++i)\n        sum += cnt[i][k];\n\n    for (int i = l, lim = blockL * BLOCK_SIZE; i &lt; lim; ++i)\n        if (a[i] == k) ++sum;\n\n    for (int i = blockR * BLOCK_SIZE; i &lt;= r; ++i)\n        if (a[i] == k) ++sum;\n\n    return sum;\n}\n</code></pre> <p>Thao t\u00e1c c\u1eadp nh\u1eadt m\u1ed9t ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 th\u00eam v\u00e0o nh\u01b0 sau (v\u1edbi \\(u\\) l\u00e0 v\u1ecb tr\u00ed c\u1ea7n c\u1eadp nh\u1eadt, v\u00e0 \\(v\\) l\u00e0 gi\u00e1 tr\u1ecb m\u1edbi):</p> <pre><code>void update(int u, int v)\n{\n    int block = u / BLOCK_SIZE;\n    --cnt[block][a[u]];\n    a[u] = v;\n    ++cnt[block][a[u]];\n}\n</code></pre>"},{"location":"algo/data-structures/sqrt-decomposition/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Ti\u1ebfp n\u1ed1i b\u00e0i to\u00e1n \u0111\u1ea7u ti\u00ean, ch\u00fang ta h\u00e3y c\u00f9ng \u0111i s\u00e2u h\u01a1n v\u00e0o c\u00e1c b\u00e0i to\u00e1n chia m\u1ea3ng ra l\u00e0m \\(\\sqrt{N}\\) \u0111o\u1ea1n nh\u01b0ng c\u00f3 truy v\u1ea5n c\u1eadp nh\u1eadt. </p> <p>L\u01b0u \u00fd: B\u00e0i t\u1eadp c\u00f3 c\u00e1ch gi\u1ea3i t\u1ed1i \u01b0u nh\u1ea5t s\u1eed d\u1ee5ng Segment Tree, tuy nhi\u00ean v\u00ec m\u1ee5c \u0111\u00edch c\u1ee7a b\u00e0i vi\u1ebft n\u00e0y n\u00ean b\u00e0i t\u1eadp s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i b\u1eb1ng chia c\u0103n. </p>"},{"location":"algo/data-structures/sqrt-decomposition/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 n\u1ed9p b\u00e0i \u1edf \u0111\u00e2y</p> <p>Cho m\u1ed9t m\u1ea3ng \\(A\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean. B\u1ea1n c\u1ea7n th\u1ef1c hi\u1ec7n \\(Q\\) truy v\u1ea5n c\u00f3 d\u1ea1ng \\((l,r,oval,nval)\\) l\u00e0 v\u1edbi c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\), n\u1ebfu \\(A[i] == oval\\), g\u00e1n \\(A[i] = nval\\). B\u1ea1n c\u1ea7n in ra m\u1ea3ng sau khi th\u1ef1c hi\u1ec7n \\(Q\\) truy v\u1ea5n. Gi\u1edbi h\u1ea1n \\(1 \\le N,Q \\le 2*10^5, 1 \\le A_i \\le 100\\)</p> <p>Ghi ch\u00fa: \\(oval,nval\\) l\u00e0 vi\u1ebft t\u1eaft cho old value v\u00e0 new value.</p>"},{"location":"algo/data-structures/sqrt-decomposition/#cach-giai","title":"C\u00e1ch gi\u1ea3i","text":""},{"location":"algo/data-structures/sqrt-decomposition/#gia-su-cac-truy-van-eu-co-l-1-rn","title":"Gi\u1ea3 s\u1eed c\u00e1c truy v\u1ea5n \u0111\u1ec1u c\u00f3 \\(l = 1, r=N\\)","text":"<p>V\u1edbi gi\u1ea3 s\u1eed tr\u00ean, ta s\u1ebd gi\u1ea3i b\u00e0i to\u00e1n v\u1edbi \u0111pt \\(O(Q*100 + N)\\). Ta s\u1ebd t\u1ea1o m\u1ea3ng \\(lazy[oval]\\) v\u1edbi \u00fd ngh\u0129a l\u00e0 c\u00e1c s\u1ed1 ban \u0111\u1ea7u l\u00e0 \\(oval\\) th\u00ec hi\u1ec7n t\u1ea1i \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1ed5i gi\u00e1 tr\u1ecb sang \\(lazy[oval]\\). Ban \u0111\u1ea7u \\(lazy[oval] = oval\\) v\u1edbi \\(1 \\le oval \\le 100\\). V\u1edbi m\u1ed7i truy v\u1ea5n \\((l,r,oval,nval)\\), ta s\u1ebd l\u00e0m nh\u01b0 sau: </p> <pre><code>for (int i = 1; i &lt;= 100; ++i) {\n    if (lazy[i] == oval) lazy[i] = nval;\n}\n</code></pre> <p>V\u1edbi thao t\u00e1c c\u1eadp nh\u1eadt m\u1ea3ng lazy n\u00e0y, v\u1ec1 m\u1eb7t \u00fd ngh\u0129a, t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 hi\u1ec7n \u0111ang c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(oval\\) s\u1ebd \u0111\u01b0\u1ee3c g\u00e1n l\u1ea1i th\u00e0nh \\(nval\\). Sau khi th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n, ch\u00fang ta c\u00f3 th\u1ec3 l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c s\u1ed1 trong m\u1ea3ng nh\u01b0 sau:  <pre><code>for (int i = 1; i &lt;= n; ++i) {\n    a[i] = lazy[a[i]];\n}\n</code></pre> V\u1eady l\u00e0 ch\u00fang ta \u0111\u00e3 gi\u1ea3i xong b\u00e0i to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(Q*100 + N)\\).</p>"},{"location":"algo/data-structures/sqrt-decomposition/#giai-bai-toan-goc","title":"Gi\u1ea3i b\u00e0i to\u00e1n g\u1ed1c","text":"<p>Ta s\u1ebd \u00e1p d\u1ee5ng \u00fd t\u01b0\u1edfng tr\u00ean v\u00e0o \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n g\u1ed1c. Ta c\u0169ng chia m\u1ea3ng th\u00e0nh \\(\\sqrt{N}\\) \u0111o\u1ea1n. X\u00e9t m\u1ed9t truy v\u1ea5n \\((l,r,oval,nval)\\) ta c\u00f3: * \\(blockL\\) l\u00e0 block \u0111\u1ea7u ti\u00ean \u1edf b\u00ean ph\u1ea3i \\(l\\) * \\(blockR\\) l\u00e0 block ch\u1ee9a \\(r\\) * V\u1edbi m\u1ed7i block, ta s\u1ebd c\u00f3 m\u1ea3ng \\(lazy\\) v\u1edbi \u0111\u1ecbnh ngh\u0129a nh\u01b0 tr\u00ean. V\u00ed d\u1ee5 block \\(3\\), c\u00e1c s\u1ed1 \u0111ang c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(oval\\) s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ed5i th\u00e0nh gi\u00e1 tr\u1ecb \\(nval\\) \\(\\Leftrightarrow\\) \\(lazy[3][oval]=nval\\)</p> <p>V\u1eady truy v\u1ea5n c\u1ee7a ch\u00fang ta s\u1ebd \u0111\u01b0\u1ee3c chia l\u00e0m 3 ph\u1ea7n (c\u00f3 th\u1ec3 r\u1ed7ng) nh\u01b0 sau: * Ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i: \\([ l ... blockL * BLOCK\\\\_SIZE - 1 ]\\)  * Ph\u1ea7n d\u01b0 b\u00ean ph\u1ea3i: \\([ blockR * BLOCK\\\\_SIZE ... r ]\\) * Ph\u1ea7n \u0111\u1ea7y \u0111\u1ee7 c\u00e1c block: \\([ blockL * BLOCK\\\\_SIZE ... blockR * BLOCK\\\\_SIZE - 1 ]\\)</p>"},{"location":"algo/data-structures/sqrt-decomposition/#au-tien-chung-ta-cap-nhat-phan-ay-u-cac-block","title":"\u0110\u1ea7u ti\u00ean, ch\u00fang ta c\u1eadp nh\u1eadt ph\u1ea7n \u0111\u1ea7y \u0111\u1ee7 c\u00e1c block:","text":"<p>Ta s\u1ebd c\u1eadp nh\u1eadt l\u1ea7n l\u01b0\u1ee3t cho t\u1eebng block \u0111\u01a1n l\u1ebb. G\u1ecdi block hi\u1ec7n t\u1ea1i l\u00e0 \\(id\\), ta s\u1ebd l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 khi gi\u1ea3i b\u00e0i to\u00e1n \\(l = 1, r=N\\):</p> <pre><code>void blockUpdate(int id, int oval, int nval) {\n    for (int i = 1; i &lt;= LIM; ++i) {\n        if (lazy[id][i] == oval) {\n            lazy[id][i] = nval;\n        }\n    }\n}\n</code></pre> <p>V\u1eady l\u00e0 ch\u00fang ta \u0111\u00e3 c\u1eadp nh\u1eadt xong cho t\u1ea5t c\u1ea3 c\u00e1c block thu\u1ed9c ph\u1ea7n \u0111\u1ea7y \u0111\u1ee7 c\u00e1c block. Ch\u00fa \u00fd, vi\u1ec7c c\u1eadp nh\u1eadt n\u00e0y ch\u00fang ta ch\u1ec9 \u0111\u00e1nh d\u1ea5u l\u00e0 c\u00e1c ph\u1ea7n t\u1eed \u0111ang c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(oval\\) s\u1ebd \u0111\u01b0\u1ee3c thay \u0111\u1ed5i th\u00e0nh \\(nval\\). Gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n n\u00e0y sau c\u1eadp nh\u1eadt kh\u00f4ng c\u00f3 s\u1ef1 thay \u0111\u1ed5i n\u00e0o (\u00fd t\u01b0\u1edfng gi\u1ed1ng nh\u01b0 Lazy Propagation.</p>"},{"location":"algo/data-structures/sqrt-decomposition/#tiep-theo-chung-ta-cap-nhat-phan-du-ben-trai","title":"Ti\u1ebfp theo, ch\u00fang ta c\u1eadp nh\u1eadt ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i:","text":"<p>G\u1ecdi block c\u1ee7a ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i l\u00e0 \\(id\\).</p> <p>V\u00ec ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i kh\u00f4ng bao ph\u1ee7 tr\u1ecdn v\u1eb9n 1 block, n\u00ean ch\u00fang ta s\u1ebd kh\u00f4ng th\u1ec3 d\u00f9ng m\u1ea3ng \\(lazy\\) \u0111\u1ec3 c\u1eadp nh\u1eadt \u0111\u01b0\u1ee3c nh\u01b0 \u1edf tr\u00ean. Thay v\u00e0o \u0111\u00f3 ch\u00fang ta s\u1ebd ph\u1ea3i duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed trong ph\u1ea7n n\u00e0y v\u00e0 c\u1eadp nh\u1eadt (x\u00e9t m\u1ed7i ph\u1ea7n t\u1eed, n\u1ebfu gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 l\u00e0 \\(oval\\) th\u00ec g\u00e1n gi\u00e1 tr\u1ecb m\u1edbi l\u00e0 \\(nval\\)): </p> <pre><code>void manualUpdate(int L, int R, int oval, int nval) { // L R l\u00e0 \u0111\u1ea7u tr\u00e1i v\u00e0 \u0111\u1ea7u ph\u1ea3i c\u1ee7a ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i\n    for (int i = L; i &lt;= R; ++i) {\n        if (a[i] == oval) {\n            a[i] = nval;\n        }\n    }\n}\n</code></pre> <p>Tuy nhi\u00ean, c\u00e1c ph\u1ea7n t\u1eed trong ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i n\u00e0y c\u00f3 th\u1ec3 \u0111ang ch\u1ecbu \u1ea3nh h\u01b0\u1edfng t\u1eeb m\u1ea3ng \\(lazy\\) c\u1ee7a c\u00e1c truy v\u1ea5n tr\u01b0\u1edbc \u0111\u00f3, n\u00ean ch\u00fang ta c\u1ea7n th\u1ef1c s\u1ef1 c\u1eadp nh\u1eadt c\u00e1c ph\u1ea7n t\u1eed n\u00e0y b\u1eb1ng m\u1ea3ng \\(lazy\\), sau \u0111\u00f3 m\u1edbi th\u1ef1c hi\u1ec7n \\(manualUpdate\\) (gi\u1ed1ng nh\u01b0 b\u01b0\u1edbc Propagate trong Lazy Propagation). </p> <pre><code>void doLazy(int id) { // L R l\u00e0 \u0111\u1ea7u tr\u00e1i v\u00e0 \u0111\u1ea7u ph\u1ea3i c\u1ee7a ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i\n    int L = id * BLOCK_SIZE;\n    int R = min(n - 1, (id + 1) * BLOCK_SIZE - 1);\n    for (int i = L; i &lt;= R; ++i) {\n        a[i] = lazy[id][a[i]]; // thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u00e1c ph\u1ea7n t\u1eed b\u1eb1ng m\u1ea3ng lazy\n    }\n    for (int i = 1; i &lt;= 100; ++i) {\n        lazy[id][i] = i; // \u0111\u00e3 c\u1eadp nh\u1eadt xong, reset l\u1ea1i m\u1ea3ng lazy v\u1ec1 ban \u0111\u1ea7u \n    }\n}\n</code></pre> <p>V\u1eady t\u1ed5ng k\u1ebft l\u1ea1i, ta s\u1ebd c\u00f3 h\u00e0m c\u1eadp nh\u1eadt cho ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i (v\u00e0 c\u1ea3 *ph\u1ea7n d\u01b0 b\u00ean ph\u1ea3i) nh\u01b0 sau:</p> <pre><code>void manualUpdate(int L, int R, int oval, int nval) { // L R l\u00e0 \u0111\u1ea7u tr\u00e1i v\u00e0 \u0111\u1ea7u ph\u1ea3i c\u1ee7a ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i\n    doLazy(R / BLOCK_SIZE); // R / BLOCK_SIZE ch\u00ednh l\u00e0 block c\u1ee7a c\u1ee7a ph\u1ea7n n\u00e0y. L / BLOCK_SIZE = R / BLOCK_SIZE\n    for (int i = L; i &lt;= R; ++i) {\n        if (a[i] == oval) {\n            a[i] = nval;\n        }\n    }\n}\n\n/* Ch\u00fang ta s\u1ebd g\u1ecdi h\u00e0m nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 c\u1eadp nh\u1eadt cho ph\u1ea7n d\u01b0 b\u00ean tr\u00e1i */\nmanualUpdate(l, blockL * BLOCK_SIZE - 1, oval, nval);\n\n/* Ch\u00fang ta s\u1ebd g\u1ecdi h\u00e0m nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 c\u1eadp nh\u1eadt cho ph\u1ea7n d\u01b0 b\u00ean ph\u1ea3i */\nmanualUpdate(blockR * BLOCK_SIZE, r, oval, nval);\n</code></pre>"},{"location":"algo/data-structures/sqrt-decomposition/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>Ghi ch\u00fa: V\u00ec h\u1eb1ng s\u1ed1 c\u1ee7a l\u1eddi gi\u1ea3i n\u00e0y t\u01b0\u01a1ng \u0111\u1ed1i l\u1edbn n\u00ean t\u00e1c gi\u1ea3 s\u1ebd gi\u1eef h\u1eb1ng s\u1ed1 trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi c\u1ea7n thi\u1ebft</p> <p>Ta s\u1ebd c\u00f9ng xem x\u00e9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a l\u1eddi gi\u1ea3i n\u00e0y:</p> <p>D\u1ec5 th\u1ea5y h\u00e0m \\(blockUpdate\\) c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(100)\\). H\u00e0m n\u00e0y m\u1ed7i truy v\u1ea5n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi kh\u00f4ng qu\u00e1 \\(\\sqrt{N}\\) l\u1ea7n, v\u00e0 c\u00f3 \\(Q\\) truy v\u1ea5n n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c l\u1ea7n g\u1ecdi h\u00e0m n\u00e0y l\u00e0 \\(O(Q\\*\\sqrt{N}\\*100)\\). (1)</p> <p>H\u00e0m \\(doLazy\\) c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(\\sqrt{N} + 100)\\) do c\u00e1c ph\u1ea7n d\u01b0 c\u00f3 \u0111\u1ed9 l\u1edbn \\(\\leq \\sqrt{N}\\). C\u1ed9ng v\u1edbi ph\u1ea7n <code>for (int i = L; i &lt;= R; ++i)</code> c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\sqrt{N})\\), h\u00e0m \\(manualUpdate\\) c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(\\sqrt{N} + \\sqrt{N} + 100) = O(\\sqrt{N})\\).</p> <p>D\u1ec5 th\u1ea5y h\u00e0m \\(manualUpdate\\) s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u00fang \\(2\\) l\u1ea7n trong m\u1ed7i truy v\u1ea5n. V\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a vi\u1ec7c g\u1ecdi h\u00e0m n\u00e0y l\u00e0 \\(O(Q\\*\\sqrt{N})\\). (2)</p> <p>V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a l\u1eddi gi\u1ea3i chia c\u0103n n\u00e0y s\u1ebd l\u00e0 (1) + (2) = \\(O(Q\\*\\sqrt{N}\\*100) + O(Q\\*\\sqrt{N})\\).</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem code m\u1eabu \u1edf \u0111\u00e2y</p>"},{"location":"algo/data-structures/sqrt-decomposition/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 th\u1eed s\u1ee9c t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/data-structures/sqrt-decomposition/#luu-y","title":"L\u01b0u \u00fd","text":"<ul> <li>Trong ph\u1ea7n l\u1edbn tr\u01b0\u1eddng h\u1ee3p, ta n\u00ean \u0111\u1eb7t \\(BLOCK\\\\_SIZE\\) l\u00e0 h\u1eb1ng s\u1ed1, ch\u1ee9 kh\u00f4ng n\u00ean th\u1ef1c s\u1ef1 l\u1ea5y c\u0103n c\u1ee7a \\(N\\) trong d\u1eef li\u1ec7u nh\u1eadp v\u00e0o. L\u00fd do l\u00e0 vi\u1ec7c chia cho h\u1eb1ng s\u1ed1, c\u0169ng nh\u01b0 vi\u1ec7c d\u00f9ng m\u1ea3ng t\u0129nh s\u1ebd gi\u00fap code c\u1ee7a b\u1ea1n ch\u1ea1y nhanh h\u01a1n nhi\u1ec1u so v\u1edbi vi\u1ec7c chia cho bi\u1ebfn v\u00e0 x\u00e0i m\u1ea3ng \u0111\u1ed9ng.</li> <li>Khi c\u00e0i \u0111\u1eb7t, c\u00e1c b\u1ea1n c\u1ea7n tr\u00e1nh vi\u1ec7c th\u1ef1c hi\u1ec7n \\(O(Q \\sqrt{N})\\) ph\u00e9p chia (c\u1ea3 chia l\u1ea5y nguy\u00ean l\u1eabn chia l\u1ea5y d\u01b0), v\u00ec ph\u00e9p chia l\u00e0 m\u1ed9t thao t\u00e1c ch\u1eadm h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1c ph\u00e9p to\u00e1n kh\u00e1c. C\u00e1c b\u1ea1n d\u1ec5 l\u00e0m \u0111i\u1ec1u n\u00e0y khi c\u1ea7n t\u00ednh \\(id\\) c\u1ee7a c\u00e1c block l\u00fac truy v\u1ea5n/c\u1eadp nh\u1eadt. Ph\u1ea1m v\u00e0o \u0111i\u1ec1u n\u00e0y nhi\u1ec1u kh\u1ea3 n\u0103ng s\u1ebd khi\u1ebfn code b\u1ea1n b\u1ecb ch\u1ea1y qu\u00e1 th\u1eddi gian (TLE).</li> <li>V\u00ec th\u01b0\u1eddng y\u00eau c\u1ea7u b\u1ed9 nh\u1edb l\u1edbn, c\u00e1c b\u1ea1n c\u1ea7n t\u00ednh to\u00e1n \u0111\u1ec3 kh\u00f4ng b\u1ecb qu\u00e1 b\u1ed9 nh\u1edb (MLE). C\u00e1ch t\u00ednh nh\u01b0 sau: 1MB = \\(10^6\\) byte, 1 int = \\(4\\) byte, 1 long long = \\(8\\) byte. V\u00ed d\u1ee5, m\u1ea3ng \\(cnt\\) trong code m\u1eabu \u1edf tr\u00ean s\u1ebd t\u1ed1n \\(320 * 10^5 * 4 = 128 000 000 = 128 MB\\).</li> </ul>"},{"location":"algo/data-structures/sqrt-decomposition/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>Chia c\u0103n c\u00f2n r\u1ea5t nhi\u1ec1u d\u1ea1ng kh\u00e1c. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc ti\u1ebfp v\u1ec1 k\u0129 thu\u1eadt n\u00e0y t\u1ea1i Ph\u1ea7n 2.</p>"},{"location":"algo/data-structures/suffix-array/","title":"M\u1ea3ng h\u1eadu t\u1ed1 (Suffix Array)","text":"<p>M\u1ea3ng H\u1eadu T\u1ed1 l\u00e0 m\u1ed9t CTDL gi\u00fap sort c\u00e1c h\u1eadu t\u1ed1 theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n.</p> <p>M\u1ea3ng n\u00e0y ch\u1ee9a c\u00e1c s\u1ed1 nguy\u00ean, kh\u1edfi \u0111\u1ea7u c\u1ee7a c\u00e1c h\u1eadu t\u1ed1.</p> <p>C\u00f3 2 c\u00e1ch \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t m\u1ea3ng h\u1eadu t\u1ed1:</p> <ol> <li>Thu\u1eadt to\u00e1n kh\u00f4ng x\u00e1c \u0111\u1ecbnh: S\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Rabin-Karp v\u00e0 ki\u1ec3m tra n\u1ebfu m\u1ed9t h\u1eadu t\u1ed1 c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf h\u01a1n m\u1ed9t h\u1eadu t\u1ed1 kh\u00e1c,t\u00ecm m\u1ea3ng ti\u1ec1n t\u1ed1 chung l\u1edbn nh\u1ea5t (LCP), sau \u0111\u00f3 s\u1eed d\u1ee5ng T\u00ecm Ki\u1ebfm Nh\u1ecb Ph\u00e2n v\u00e0 h\u00e0m b\u0103m (Hash) v\u00e0 ki\u1ec3m tra k\u00fd t\u1ef1 ti\u1ebfp theo sau LCP c\u1ee7a ch\u00fang.</li> </ol> <p>Code C++:</p> <pre><code>namespace HashSuffixArray {\n\n    const int MAXN = 1 &lt;&lt; 21;\n\n    typedef unsigned long long hash;\n    const hash BASE = 137;\n\n    int N;\n    char * S;\n    int sa[MAXN];\n    hash h[MAXN], hPow[MAXN];\n\n    #define getHash(lo, size) (h[lo] - h[(lo) + (size)] * hPow[size])\n\n    inline bool sufCmp(int i, int j)\n    {\n        int lo = 1, hi = min(N - i, N - j);\n        while (lo &lt;= hi)\n        {\n            int mid = (lo + hi) &gt;&gt; 1;\n            if (getHash(i, mid) == getHash(j, mid))\n                lo = mid + 1;\n            else\n                hi = mid - 1;\n        }\n        return S[i + hi] &lt; S[j + hi];\n    }\n\n    void buildSA()\n    {\n        N = strlen(S);\n        hPow[0] = 1;\n        for (int i = 1; i &lt;= N; ++i)\n            hPow[i] = hPow[i - 1] * BASE;\n        h[N] = 0;\n        for (int i = N - 1; i &gt;= 0; --i)\n            h[i] = h[i + 1] * BASE + S[i], sa[i] = i;\n\n        stable_sort(sa, sa + N, sufCmp);\n    }\n\n} // end namespace HashSuffixArray\n</code></pre> <ol> <li>Thu\u1eadt to\u00e1n x\u00e1c \u0111\u1ecbnh: Sort log(\u0110\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t) b\u01b0\u1edbc, v\u1edbi b\u01b0\u1edbc th\u1ee9 i (t\u00ednh t\u1eeb 0), sort ch\u00fang theo \\(2^i\\) k\u00fd t\u1ef1 \u0111\u1ea7u ti\u00ean v\u00e0 \u0111\u01b0a h\u1eadu t\u1ed1 c\u00f3 c\u00f9ng ti\u1ec1n t\u1ed1 v\u1edbi \\(2^{i}\\) k\u00fd t\u1ef1 v\u00e0o c\u00f9ng m\u1ed9t bucket.</li> </ol> <p>Code:</p> <pre><code>/*\nSuffix array O(n lg^2 n)\nLCP table O(n)\n*/\n## include &lt;cstdio&gt;\n## include &lt;algorithm&gt;\n## include &lt;cstring&gt;\n\nusing namespace std;\n\n## define REP(i, n) for (int i = 0; i &lt; (int)(n); ++i)\n\nnamespace SuffixArray\n{\n    const int MAXN = 1 &lt;&lt; 21;\n    char * S;\n    int N, gap;\n    int sa[MAXN], pos[MAXN], tmp[MAXN], lcp[MAXN];\n\n    bool sufCmp(int i, int j)\n    {\n        if (pos[i] != pos[j])\n            return pos[i] &lt; pos[j];\n        i += gap;\n        j += gap;\n        return (i &lt; N &amp;&amp; j &lt; N) ? pos[i] &lt; pos[j] : i &gt; j;\n    }\n\n    void buildSA()\n    {\n        N = strlen(S);\n        REP(i, N) sa[i] = i, pos[i] = S[i];\n        for (gap = 1;; gap *= 2)\n        {\n            sort(sa, sa + N, sufCmp);\n            REP(i, N - 1) tmp[i + 1] = tmp[i] + sufCmp(sa[i], sa[i + 1]);\n            REP(i, N) pos[sa[i]] = tmp[i];\n            if (tmp[N - 1] == N - 1) break;\n        }\n    }\n\n    void buildLCP()\n    {\n        for (int i = 0, k = 0; i &lt; N; ++i) if (pos[i] != N - 1)\n        {\n            for (int j = sa[pos[i] + 1]; S[i + k] == S[j + k];)\n            ++k;\n            lcp[pos[i]] = k;\n            if (k)--k;\n        }\n    }\n} // end namespace SuffixArray\n</code></pre> <p>Source: mukel</p>"},{"location":"algo/data-structures/suffix-array/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>Codeforces</li> </ul>"},{"location":"algo/data-structures/suffix-automaton/","title":"Suffix Automaton","text":"<p>T\u00e1c gi\u1ea3: Cao Xu\u00e2n H\u01b0ng</p>"},{"location":"algo/data-structures/suffix-automaton/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":""},{"location":"algo/data-structures/suffix-automaton/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li> <p>Suffix automaton c\u1ee7a m\u1ed9t chu\u1ed7i \\(S\\) l\u00e0 \u0111\u1ed3 th\u1ecb li\u00ean th\u00f4ng c\u00f3 h\u01b0\u1edbng kh\u00f4ng chu tr\u00ecnh (DAG) trong \u0111\u00f3 m\u1ed7i n\u00fat l\u00e0 m\u1ed9t tr\u1ea1ng th\u00e1i c\u1ee7a chu\u1ed7i v\u00e0 m\u1ed7i c\u1ea1nh n\u1ed1i l\u00e0 m\u1ed9t b\u01b0\u1edbc chuy\u1ec3n tr\u1ea1ng th\u00e1i \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1eb1ng m\u1ed9t k\u00ed t\u1ef1 trong \\(S\\).</p> </li> <li> <p>\u0110\u1ed3 th\u1ecb g\u1ed3m m\u1ed9t n\u00fat g\u1ed1c (initial state) \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u i. T\u1eeb n\u00fat g\u1ed1c, ta c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c n\u00fat trong \u0111\u1ed3 th\u1ecb.</p> </li> <li> <p>M\u1ed9t s\u1ed1 n\u00fat k\u1ebft th\u00fac (terminal state) \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u (*) v\u1edbi \u00fd ngh\u0129a n\u1ebfu ta \u0111i t\u1eeb n\u00fat g\u1ed1c \u0111\u1ebfn m\u1ed9t n\u00fat k\u1ebft th\u00fac b\u1ea5t k\u00ec, ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c m\u1ed9t h\u1eadu t\u1ed1 (suffix) c\u1ee7a S.</p> </li> <li> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 suffix automaton c\u1ee7a chu\u1ed7i \"acbcbc\".</p> </li> </ul>"},{"location":"algo/data-structures/suffix-automaton/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>CF Round 94 - B</li> </ul>"},{"location":"algo/data-structures/suffix-automaton/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Saisumit - Suffix Automaton</li> <li>A short guide to suffix automata</li> </ul>"},{"location":"algo/data-structures/trie/","title":"Trie","text":"<p>Ngu\u1eddi vi\u1ebft:  - Ng\u00f4 Nh\u1eadt Quang - HUS High School for Gifted Students</p> <p>Reviewer: - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM-University of Science - L\u00ea Minh Ho\u00e0ng - VNUHCM-University of Science - Cao Thanh H\u1eadu - VNUHCM-University of Science</p>"},{"location":"algo/data-structures/trie/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trie, hay m\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u c\u00f2n g\u1ecdi l\u00e0 c\u00e2y ti\u1ec1n t\u1ed1, l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u d\u1ea1ng c\u00e2y h\u1eefu d\u1ee5ng \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 qu\u1ea3n l\u00ed m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c x\u00e2u. M\u1eb7c d\u00f9 d\u1ec5 hi\u1ec3u v\u00e0 d\u1ec5 c\u00e0i \u0111\u1eb7t, trie l\u1ea1i c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng. Do v\u1eady, trie th\u01b0\u1eddng xuy\u00ean xu\u1ea5t hi\u1ec7n trong c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh \u1edf Vi\u1ec7t Nam n\u00f3i ri\u00eang v\u00e0 qu\u1ed1c t\u1ebf n\u00f3i chung.</p> <p>M\u1ed9t trie c\u01a1 b\u1ea3n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n ba thao t\u00e1c sau v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian tuy\u1ebfn t\u00ednh: - Th\u00eam m\u1ed9t x\u00e2u v\u00e0o t\u1eadp h\u1ee3p - X\u00f3a m\u1ed9t x\u00e2u kh\u1ecfi t\u1eadp h\u1ee3p - Ki\u1ec3m tra m\u1ed9t x\u00e2u c\u00f3 n\u1eb1m trong t\u1eadp h\u1ee3p \u0111\u00f3 hay kh\u00f4ng</p>"},{"location":"algo/data-structures/trie/#cau-truc","title":"C\u1ea5u tr\u00fac","text":"<p>Trie l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u d\u1ea1ng c\u00e2y d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t danh s\u00e1ch c\u00e1c x\u00e2u v\u1edbi b\u1ed9 k\u00ed t\u1ef1 h\u1eefu h\u1ea1n, cho ph\u00e9p vi\u1ec7c l\u01b0u tr\u1eef c\u00e1c x\u00e2u hi\u1ec7u qu\u1ea3 c\u00f3 ti\u1ec1n t\u1ed1 gi\u1ed1ng nhau.</p> <p>H\u00e3y xem x\u00e9t m\u1ed9t v\u00ed d\u1ee5 sau:</p> <p> <p> </p> <p>Trong m\u1ed9t trie, m\u1ed7i c\u1ea1nh \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t k\u00ed t\u1ef1, m\u1ed7i \u0111\u1ec9nh v\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c \u0111\u1ebfn \u0111\u1ec9nh \u0111\u00f3 bi\u1ec3u di\u1ec5n m\u1ed9t x\u00e2u g\u1ed3m c\u00e1c k\u00ed t\u1ef1 thu\u1ed9c c\u00e1c c\u1ea1nh tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u00f3. V\u00ed d\u1ee5, \u0111\u1ec9nh \\(5\\) bi\u1ec3u di\u1ec5n x\u00e2u <code>ab</code>, \u0111\u1ec9nh \\(10\\) bi\u1ec3u di\u1ec5n x\u00e2u <code>caa</code>.</p> <p>C\u1ea5u tr\u00fac c\u1ee7a trie r\u1ea5t d\u1ec5 hi\u1ec3u v\u00e0 c\u00e0i \u0111\u1eb7t. G\u1ecdi <code>child(u, c)</code> l\u00e0 \u0111\u1ec9nh con c\u1ee7a \u0111\u1ec9nh \\(u\\) \u0111\u01b0\u1ee3c n\u1ed1i b\u1edfi c\u1ea1nh \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng k\u00ed t\u1ef1 \\(c\\), ho\u1eb7c b\u1eb1ng \\(-1\\) n\u1ebfu \u0111\u1ec9nh con \u0111\u00f3 kh\u00f4ng t\u1ed3n t\u1ea1i. X\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh con n\u00e0y s\u1ebd ch\u00ednh l\u00e0 x\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh \\(u\\), th\u00eam k\u00ed t\u1ef1 \\(c\\) v\u00e0o cu\u1ed1i. Do v\u1eady, ta ch\u1ec9 c\u1ea7n m\u1ea3ng <code>child</code> n\u00e0y v\u1edbi m\u1ed7i \u0111\u1ec9nh \u0111\u1ec3 duy tr\u00ec c\u1ea5u tr\u00fac c\u1ee7a trie. V\u00ed d\u1ee5, trong \u1ea3nh tr\u00ean, <code>child(1, 'b') = 5</code>, <code>child(3, 'c') = 9</code>, <code>child(11, 'b') = -1</code>.</p>"},{"location":"algo/data-structures/trie/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>V\u1edbi c\u1ea5u tr\u00fac d\u1eef li\u1ec7u trie, c\u00f3 hai c\u00e1ch c\u00e0i \u0111\u1eb7t ch\u00ednh ch\u00ednh l\u00e0 s\u1eed d\u1ee5ng m\u1ea3ng v\u00e0 s\u1eed d\u1ee5ng con tr\u1ecf.</p> <p>N\u1ebfu \u0111\u1ecbnh ngh\u0129a c\u1ea5u tr\u00fac nh\u01b0 ph\u1ea7n tr\u01b0\u1edbc, ta ch\u1ec9 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n truy v\u1ea5n th\u00eam x\u00e2u v\u00e0o t\u1eadp h\u1ee3p. \u0110\u1ec3 th\u1ef1c hi\u1ec7n hai truy v\u1ea5n c\u00f2n l\u1ea1i, v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\) trong trie, ta l\u01b0u th\u00eam hai bi\u1ebfn: - <code>exist</code>: c\u00f3 bao nhi\u00eau x\u00e2u l\u00e0 x\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh \\(u\\) - <code>cnt</code>: c\u00f3 bao nhi\u00eau x\u00e2u c\u00f3 ti\u1ec1n t\u1ed1 l\u00e0 x\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh \\(u\\).</p> <p>L\u01b0u \u00fd: Tuy nhi\u00ean v\u1edbi t\u1eebng b\u00e0i to\u00e1n, hai bi\u1ebfn n\u00e0y c\u00f3 th\u1ec3 kh\u00f4ng c\u1ea7n thi\u1ebft v\u00e0 c\u00f3 th\u1ec3 b\u1ecf \u0111i.</p> <p>V\u1edbi h\u00e0m th\u00eam x\u00e2u v\u00e0o trie, ta b\u1eaft \u0111\u1ea7u t\u1ea1i n\u00fat g\u1ed1c. Ta duy\u1ec7t qua l\u1ea7n l\u01b0\u1ee3t c\u00e1c k\u00ed t\u1ef1 trong x\u00e2u v\u00e0 \u0111i xu\u1ed1ng c\u1ea1nh ch\u1ee9a k\u00ed t\u1ef1 t\u01b0\u01a1ng \u1ee9ng. N\u1ebfu nh\u01b0 c\u1ea1nh t\u01b0\u01a1ng \u1ee9ng \u0111\u00f3 ch\u01b0a t\u1ed3n t\u1ea1i th\u00ec ta t\u1ea1o \u0111\u1ec9nh m\u1edbi r\u1ed3i th\u00eam n\u00f3 v\u00e0o m\u1ea3ng <code>child</code>. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 trie c\u1ee7a t\u1eadp h\u1ee3p c\u00e1c x\u00e2u <code>aa</code>, <code>aba</code>, <code>ba</code>, <code>caaa</code>, <code>cab</code>, <code>cba</code>, <code>ca</code>.</p> <p> </p> <p>\u1ede h\u00e0m x\u00f3a x\u00e2u, \u0111\u1ea7u ti\u00ean ki\u1ec3m tra x\u00e2u \u0111\u00f3 c\u00f3 t\u1ed3n t\u1ea1i trong trie hay kh\u00f4ng. N\u1ebfu c\u00f3 nhi\u1ec1u x\u00e2u nh\u01b0 v\u1eady, ta gi\u1ea3m gi\u00e1 tr\u1ecb <code>exist</code> c\u1ee7a \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng x\u00e2u \u0111\u00f3 \u0111i m\u1ed9t. N\u1ebfu kh\u00f4ng, ta s\u1ebd \u0111\u1ec7 quy t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean \u0111\u1ec3 x\u00f3a d\u1ea7n c\u00e1c \u0111\u1ec9nh d\u01b0 th\u1eeba.</p> <p>H\u00e0m t\u00ecm x\u00e2u \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t kh\u00e1 gi\u1ed1ng h\u00e0m th\u00eam x\u00e2u. Ch\u1ec9 kh\u00e1c l\u00e0 n\u1ebfu kh\u00f4ng c\u00f3 c\u1ea1nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi k\u00ed t\u1ef1 \u0111ang duy\u1ec7t, ta d\u1eebng ngay l\u1eadp t\u1ee9c v\u00ec x\u00e2u \u0111\u00f3 s\u1ebd kh\u00f4ng th\u1ec3 xu\u1ea5t hi\u1ec7n trong trie. Sau khi duy\u1ec7t xong ta ki\u1ec3m tra \u1edf \u0111\u1ec9nh \u0111\u00f3 c\u00f3 x\u00e2u n\u00e0o k\u1ebft th\u00fac hay kh\u00f4ng, hay <code>exist != 0</code>.</p>"},{"location":"algo/data-structures/trie/#cai-at-bang-mang","title":"C\u00e0i \u0111\u1eb7t b\u1eb1ng m\u1ea3ng","text":"<pre><code>const int NUMBEROFNODES = ...;\nstruct Trie{\n    struct Node{\n        int child[26];\n        int exist, cnt;\n    } nodes[NUMBEROFNODES];\n\n    int cur; // Hi\u1ec7n trong trie \u0111ang c\u00f3 bao nhi\u00eau \u0111\u1ec9nh\n    Trie() : cur(0) { // T\u1ea1o n\u00fat g\u1ed1c cho Trie l\u00e0 \u0111\u1ec9nh 0 khi kh\u1edfi t\u1ea1o Trie\n        memset(nodes[0].child, -1, sizeof(nodes[cur].child));\n        nodes[0].exist = nodes[0].cnt = 0;\n    };\n\n    int new_node() { // T\u1ea1o v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o ra\n        cur++;\n        memset(nodes[cur].child, -1, sizeof(nodes[cur].child));\n        nodes[cur].exist = nodes[cur].cnt = 0;\n        return cur;\n    }\n\n    void add_string(string s) {\n        int pos = 0;\n        for (auto f : s) {\n            int c = f - 'a';\n            if (nodes[pos].child[c] == -1) { // N\u1ebfu c\u1ea1nh t\u01b0\u01a1ng \u1ee9ng ch\u1eef c\u00e1i c \n                                             // ch\u01b0a t\u1ed3n t\u1ea1i th\u00ec ta t\u1ea1o ra \u0111\u1ec9nh m\u1edbi\n                nodes[pos].child[c] = new_node();\n            }\n            pos = nodes[pos].child[c];\n            nodes[pos].cnt++; // C\u00f3 th\u00eam m\u1ed9t x\u00e2u trong trie c\u00f3 ti\u1ec1n t\u1ed1\n                              // l\u00e0 x\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1eb1ng \u0111\u1ec9nh hi\u1ec7n t\u1ea1i\n        }\n        nodes[pos].exist++; // \u0110\u00e3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi x\u00e2u s,\n                            // ta t\u0103ng bi\u1ebfn exist c\u1ee7a \u0111\u1ec9nh l\u00ean 1\n    }\n\n    bool delete_string_recursive(int pos, string&amp; s, int i) { // Tr\u1ea3 v\u1ec1 li\u1ec7u \u0111\u1ec9nh pos\n                                                              // c\u00f3 b\u1ecb x\u00f3a \u0111i hay kh\u00f4ng\n        if (i != (int)s.size()) { // N\u1ebfu ch\u01b0a \u0111\u1ebfn \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi x\u00e2u s\n                                  // th\u00ec ti\u1ebfp t\u1ee5c \u0111\u1ec7 quy xu\u1ed1ng d\u01b0\u1edbi\n            int c = s[i] - 'a';\n            bool isChildDeleted = delete_string_recursive(nodes[pos].child[c], s, i + 1);\n            if (isChildDeleted) nodes[pos].child[c] = -1; // N\u1ebfu \u0111\u1ec9nh con t\u01b0\u01a1ng \u1ee9ng b\u1ecb x\u00f3a th\u00ec\n                                                          // ta g\u00e1n l\u1ea1i \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng b\u1eb1ng -1\n        }\n        else nodes[pos].exist--; // N\u1ebfu \u0111\u00e3 \u0111\u1ebfn \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi x\u00e2u s\n                                 // th\u00ec ta gi\u1ea3m bi\u1ebfn exist c\u1ee7a \u0111\u1ec9nh \u0111i 1\n\n        if (pos != 0) { // N\u1ebfu \u0111\u1ec9nh \u0111ang x\u00e9t kh\u00f4ng ph\u1ea3i g\u1ed1c th\u00ec ta gi\u1ea3m bi\u1ebfn cnt c\u1ee7a \u0111\u1ec9nh \u0111i 1\n                        // v\u00e0 ki\u1ec3m tra \u0111\u1ec9nh c\u00f3 b\u1ecb x\u00f3a \u0111i hay kh\u00f4ng\n                        // \u0110\u1ec9nh b\u1ecb x\u00f3a n\u1ebfu kh\u00f4ng c\u00f2n x\u00e2u n\u00e0o \u0111i qua n\u00f3, n\u00f3i c\u00e1ch kh\u00e1c l\u00e0\n                        // kh\u00f4ng c\u00f2n x\u00e2u n\u00e0o c\u00f3 ti\u1ec1n t\u1ed1 l\u00e0 x\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh pos\n            nodes[pos].cnt--;\n            if (nodes[pos].cnt == 0) return true;\n        }\n        return false;\n    }\n\n    void delete_string(string s) {\n        if (find_string(s) == false) return; // Ki\u1ec3m tra x\u00e2u s c\u00f3 trong\n                                             // trie hay kh\u00f4ng\n        delete_string_recursive(0, s, 0); // G\u1ecdi h\u00e0m \u0111\u1ec7 quy x\u00f3a x\u00e2u s kh\u1ecfi trie\n    }\n\n    bool find_string(string s) {\n        int pos = 0;\n        for (auto f : s) {\n            int c = f - 'a';\n            if (nodes[pos].child[c] == -1) return false;\n            pos = nodes[pos].child[c];\n        }\n        return (nodes[pos].exist != 0); // Ki\u1ec3m tra c\u00f3 x\u00e2u n\u00e0o\n                                        // k\u1ebft th\u00fac t\u1ea1i \u0111\u1ec9nh n\u00e0y hay kh\u00f4ng\n    }\n};\n</code></pre>"},{"location":"algo/data-structures/trie/#cai-at-bang-con-tro","title":"C\u00e0i \u0111\u1eb7t b\u1eb1ng con tr\u1ecf","text":"<p>G\u1ea7n nh\u01b0 m\u1ecdi ph\u1ea7n trong \u0111o\u1ea1n code d\u01b0\u1edbi ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng ph\u1ea7n c\u00e0i \u0111\u1eb7t b\u1eb1ng m\u1ea3ng n\u00ean s\u1ebd kh\u00f4ng ch\u00fa th\u00edch l\u1ea1i.</p> <pre><code>struct Trie{\n    struct Node{\n        Node* child[26];\n        int exist, cnt;\n\n        Node() {\n            for (int i = 0; i &lt; 26; i++) child[i] = NULL;\n            exist = cnt = 0;\n        }\n    };\n\n    int cur;\n    Node* root;\n    Trie() : cur(0) {\n        root = new Node();\n    };\n\n    void add_string(string s) {\n        Node* p = root;\n        for (auto f : s) {\n            int c = f - 'a';\n            if (p-&gt;child[c] == NULL) p-&gt;child[c] = new Node();\n\n            p = p-&gt;child[c];\n            p-&gt;cnt++;\n        }\n        p-&gt;exist++;\n    }\n\n    bool delete_string_recursive(Node* p, string&amp; s, int i) {\n        if (i != (int)s.size()) {\n            int c = s[i] - 'a';\n            bool isChildDeleted = delete_string_recursive(p-&gt;child[c], s, i + 1);\n            if (isChildDeleted) p-&gt;child[c] = NULL;\n        }\n        else p-&gt;exist--;\n\n        if (p != root) {\n            p-&gt;cnt--;\n            if (p-&gt;cnt == 0) {\n                delete(p); // Kh\u00e1c v\u1edbi c\u00e0i \u0111\u1eb7t b\u1eb1ng m\u1ea3ng,\n                           // ta c\u00f3 th\u1ec3 th\u1ef1c s\u1ef1 x\u00f3a \u0111\u1ec9nh n\u00e0y \u0111i\n                return true;\n            }\n        }\n        return false;\n    }\n\n    void delete_string(string s) {\n        if (find_string(s) == false) return;\n\n        delete_string_recursive(root, s, 0);\n    }\n\n    bool find_string(string s) {\n        Node* p = root;\n        for (auto f : s) {\n            int c = f - 'a';\n            if (p-&gt;child[c] == NULL) return false;\n            p = p-&gt;child[c];\n        }\n        return (p-&gt;exist != 0);\n    }\n};\n</code></pre>"},{"location":"algo/data-structures/trie/#uu-va-nhuoc-iem-cua-cai-at-bang-con-tro","title":"\u01afu v\u00e0 nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a c\u00e0i \u0111\u1eb7t b\u1eb1ng con tr\u1ecf","text":"<p>\u01afu \u0111i\u1ec3m: - Kh\u00f4ng c\u1ea7n ph\u1ea3i t\u00ednh to\u00e1n tr\u01b0\u1edbc \u0111\u1ed9 d\u00e0i m\u1ea3ng c\u1ea7n d\u00f9ng. Tuy c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t trie b\u1eb1ng vector nh\u01b0ng s\u1ebd t\u1ed1n th\u1eddi gian truy c\u1eadp h\u01a1n v\u00e0 \u0111\u00f4i khi t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n. - C\u00f3 th\u1ec3 t\u1ea1o nhi\u1ec1u trie m\u00e0 kh\u00f4ng lo t\u1edbi b\u1ed9 nh\u1edb, ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c b\u00e0i multitest. - C\u00f3 th\u1ec3 x\u00f3a th\u1ef1c s\u1ef1 c\u00e1c \u0111\u1ec9nh d\u01b0 th\u1eeba.</p> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m: - D\u1ec5 code sai n\u1ebfu kh\u00f4ng th\u1ef1c s\u1ef1 hi\u1ec3u con tr\u1ecf l\u00e0 g\u00ec. - T\u00f9y thu\u1ed9c v\u00e0o compiler m\u00e0 con tr\u1ecf c\u00f3 th\u1ec3 c\u00f2n t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n d\u00f9ng m\u1ea3ng.</p> <p>Trong ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a b\u00e0i vi\u1ebft, t\u00e1c gi\u1ea3 s\u1ebd \u01b0u ti\u00ean c\u00e0i \u0111\u1eb7t trie b\u1eb1ng m\u1ea3ng n\u1ebfu \u0111\u01b0\u1ee3c. B\u1ea1n \u0111\u1ecdc l\u01b0u \u00fd xem t\u00f9y v\u00e0o b\u00e0i to\u00e1n m\u00e0 l\u1ef1a ch\u1ecdn c\u00e1ch c\u00e0i \u0111\u1eb7t ph\u00f9 h\u1ee3p.</p>"},{"location":"algo/data-structures/trie/#trie-nhi-phan","title":"Trie nh\u1ecb ph\u00e2n","text":"<p>C\u00f3 c\u1ea5u tr\u00fac t\u01b0\u01a1ng t\u1ef1 v\u1edbi trie \u0111\u00e3 gi\u1edbi thi\u1ec7u \u1edf ph\u1ea7n tr\u01b0\u1edbc (t\u1ea1m g\u1ecdi l\u00e0 trie x\u00e2u), trie nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 x\u1eed l\u00ed m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n li\u00ean quan t\u1edbi thao t\u00e1c bit. M\u1ed9t trie nh\u1ecb ph\u00e2n bao g\u1ed3m c\u00e1c c\u1ea1nh l\u00e0 bit \\(0/1\\) v\u00e0 c\u00e1c \u0111\u1ec9nh l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean g\u1ed3m c\u00e1c bit tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c \u0111\u1ebfn n\u00f3.</p> <p>C\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o trie s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n th\u00e0nh d\u1ea1ng nh\u1ecb ph\u00e2n r\u1ed3i th\u00eam c\u00e1c bit \\(0\\) v\u00e0o \u0111\u1ea7u sao cho \u0111\u1ed9 d\u00e0i c\u00e1c s\u1ed1 nh\u1ecb ph\u00e2n \u0111\u1ec1u b\u1eb1ng nhau. Th\u00f4ng th\u01b0\u1eddng \u0111\u1ed9 d\u00e0i n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00e0 \\({\\log_2{(\\max a_i)}}\\) v\u1edbi \\(a_i\\) l\u00e0 c\u00e1c s\u1ed1 trong danh s\u00e1ch \u0111\u00e3 cho. Khi th\u00eam v\u00e0o trie, ta s\u1ebd th\u00eam c\u00e1c bit v\u00e0o trie theo chi\u1ec1u t\u1eeb tr\u00e1i sang ph\u1ea3i.</p> <p>L\u01b0u \u00fd r\u1eb1ng c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a trie x\u00e2u (li\u1ec7t k\u00ea b\u00ean d\u01b0\u1edbi) \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho trie nh\u1ecb ph\u00e2n.</p> <p> <p> </p> <pre><code>const int NUMBEROFNODES = ...;\nconst int LG = ...;\nstruct Trie{\n    struct Node{\n        int child[2];\n        int exist, cnt;\n    } nodes[NUMBEROFNODES];\n\n    int cur;\n    Trie() : cur(0) {\n        memset(nodes[0].child, -1, sizeof(nodes[cur].child));\n        nodes[0].exist = nodes[0].cnt = 0;\n    };\n\n    int new_node() {\n        cur++;\n        memset(nodes[cur].child, -1, sizeof(nodes[cur].child));\n        nodes[cur].exist = nodes[cur].cnt = 0;\n        return cur;\n    }\n\n    void add_number(int x) {\n        int pos = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (nodes[pos].child[c] == -1) nodes[pos].child[c] = new_node();\n            pos = nodes[pos].child[c];\n            nodes[pos].cnt++;\n        }\n        nodes[pos].exist++;\n    }\n\n    void delete_number(int x) {\n        if (find_number(x) == false) return;\n        int pos = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n\n            int tmp = nodes[pos].child[c];\n            nodes[tmp].cnt--;\n            if (nodes[tmp].cnt == 0) {\n                nodes[pos].child[c] = -1;\n                return;\n            }\n\n            pos = tmp;\n        }\n        nodes[pos].exist--;\n    }\n\n    bool find_number(int x) {\n        int pos = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &amp; (1 &lt;&lt; i) ? 1 : 0);\n            if (nodes[pos].child[c] == -1) return false;\n            pos = nodes[pos].child[c];\n        }\n        return (nodes[pos].exist != 0);\n    }\n};\n</code></pre>"},{"location":"algo/data-structures/trie/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":"<p>Trie tuy tr\u00f4ng \u0111\u01a1n gi\u1ea3n nh\u01b0ng n\u00f3 c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c nhau, x\u1eed l\u00ed c\u00e1c thao t\u00e1c tr\u00ean c\u00e1c danh s\u00e1ch s\u1ed1 nguy\u00ean v\u00e0 danh s\u00e1ch x\u00e2u.</p> <p>Trong \u0111\u1eddi s\u1ed1ng, trie l\u00e0 n\u1ec1n t\u1ea3ng cho m\u1ed9t s\u1ed1 th\u1ee9 ch\u00fang ta r\u1ea5t th\u00e2n thu\u1ed9c nh\u01b0 c\u00e1c c\u00f4ng c\u1ee5 t\u00ecm ki\u1ebfm(Google, Bing, ...), t\u00ednh n\u0103ng t\u1ef1 \u0111\u1ed9ng ho\u00e0n th\u00e0nh t\u1eeb (autocomplete), ... nh\u01b0ng trong b\u00e0i vi\u1ebft n\u00e0y s\u1ebd t\u1eadp trung v\u00e0o c\u00e1c \u1ee9ng d\u1ee5ng trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u.</p>"},{"location":"algo/data-structures/trie/#sap-xep-mot-danh-sach-cac-xau","title":"S\u1eafp x\u1ebfp m\u1ed9t danh s\u00e1ch c\u00e1c x\u00e2u","text":""},{"location":"algo/data-structures/trie/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t danh s\u00e1ch c\u00e1c x\u00e2u, h\u00e3y in ra c\u00e1c x\u00e2u \u0111\u00f3 theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n t\u0103ng d\u1ea7n.</p>"},{"location":"algo/data-structures/trie/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<p>Sau khi x\u00e2y d\u1ef1ng trie g\u1ed3m c\u00e1c x\u00e2u trong danh s\u00e1ch, ta dfs m\u1ed9t l\u01b0\u1ee3t qua trie \u0111\u00f3, \u0111i l\u1ea7n l\u01b0\u1ee3t c\u00e1c c\u1ea1nh theo th\u1ee9 t\u1ef1 ch\u1eef c\u00e1i t\u0103ng d\u1ea7n. Duy\u1ec7t t\u1edbi m\u1ed9t \u0111\u1ec9nh t\u1edbi b\u1ea5t k\u00ec, ta s\u1ebd in ra c\u00e1c x\u00e2u \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh \u0111\u00f3 n\u1ebfu c\u00f3. D\u1ec5 th\u1ea5y ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t thu \u0111\u01b0\u1ee3c c\u00e1c x\u00e2u trong danh s\u00e1ch theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n t\u0103ng d\u1ea7n.</p> <p>Qua \u0111\u00f3 m\u00e0 ta \u0111\u1ea1t \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp m\u1ed9t danh s\u00e1ch c\u00e1c x\u00e2u trong th\u1eddi gian tuy\u1ebfn t\u00ednh.</p> <p> </p> <pre><code>void dfs(int pos, string&amp; current_string, vector&lt;string&gt;&amp; res) {\n    for (int i = 1; i &lt;= nodes[pos].exist; i++) res.push_back(current_string);\n\n    for (int i = 0; i &lt; 26; i++) if (nodes[pos].child[i] != -1) {\n        current_string += char(i + 'a');\n        dfs(nodes[pos].child[i], current_string, res);\n        current_string.pop_back();\n    }\n}\n\nvector&lt;string&gt; sort_strings() {\n    vector&lt;string&gt; res;\n    string current_string = \"\";\n    dfs(0, current_string, res);\n    return res;\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#xu-li-truy-van-tien-to-chung-dai-nhat-cua-hai-xau","title":"X\u1eed l\u00ed truy v\u1ea5n ti\u1ec1n t\u1ed1 chung d\u00e0i nh\u1ea5t c\u1ee7a hai x\u00e2u","text":""},{"location":"algo/data-structures/trie/#bai-toan_1","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t danh s\u00e1ch c\u00e1c x\u00e2u. H\u00e3y tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n t\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a ti\u1ec1n t\u1ed1 chung d\u00e0i nh\u1ea5t c\u1ee7a hai x\u00e2u b\u1ea5t k\u00ec trong danh s\u00e1ch \u0111\u00f3.</p>"},{"location":"algo/data-structures/trie/#loi-giai_1","title":"L\u1eddi gi\u1ea3i","text":"<p>\u0110\u1ea7u ti\u00ean, ta d\u1ef1ng m\u1ed9t trie c\u1ee7a danh s\u00e1ch c\u00e1c x\u00e2u \u0111\u00e3 cho.</p> <p>V\u1edbi hai x\u00e2u b\u1ea5t k\u00ec trong danh s\u00e1ch, ta c\u00f3 th\u1ec3 th\u1ea5y ti\u1ec1n t\u1ed1 chung d\u00e0i nh\u1ea5t c\u1ee7a ch\u00fang c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1eb1ng m\u1ed9t \u0111\u1ec9nh trong trie. Nh\u00ecn h\u00ecnh v\u1ebd ta c\u00f3 d\u1ec5 d\u00e0ng nh\u1eadn ra \u0111\u1ec9nh c\u1ea7n t\u00ecm n\u00e0y c\u0169ng ch\u00ednh l\u00e0 t\u1ed5 ti\u00ean chung th\u1ea5p nh\u1ea5t c\u1ee7a hai \u0111\u1ec9nh th\u1ec3 hi\u1ec7n cho hai x\u00e2u \u0111\u00e3 cho.</p> <p>Do v\u1eady b\u00e0i to\u00e1n quy v\u1ec1 x\u1eed l\u00ed truy v\u1ea5n t\u00ecm t\u1ed5 ti\u00ean chung th\u1ea5p nh\u1ea5t c\u1ee7a hai \u0111\u1ec9nh b\u1ea5t k\u00ec tr\u00ean c\u00e2y, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o l\u1eddi gi\u1ea3i \u1edf blog n\u00e0y.</p>"},{"location":"algo/data-structures/trie/#xu-li-truy-van-tim-xau-co-thu-tu-tu-ien-thu-k","title":"X\u1eed l\u00ed truy v\u1ea5n t\u00ecm x\u00e2u c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n th\u1ee9 k","text":""},{"location":"algo/data-structures/trie/#bai-toan_2","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t danh s\u00e1ch c\u00e1c x\u00e2u. X\u1eed l\u00ed c\u00e1c truy v\u1ea5n t\u00ecm x\u00e2u c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n l\u1edbn th\u1ee9 \\(k\\).</p>"},{"location":"algo/data-structures/trie/#loi-giai_2","title":"L\u1eddi gi\u1ea3i","text":"<p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n tr\u01b0\u1edbc, ta x\u00e2y d\u1ef1ng m\u1ed9t trie cho c\u00e1c x\u00e2u trong danh s\u00e1ch \u0111\u00e3 cho.</p> <p>Ta tham kh\u1ea3o h\u00e0m t\u00ecm \u0111\u00e1p \u00e1n d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>string find_kth_string(int k) {\n    int pos = 0;\n    string res = \"\";\n\n    while (true) {\n        if (nodes[pos].exist &gt;= k) break;\n        k -= nodes[pos].exist;\n\n        for (int i = 0; i &lt; 26; i++) if (nodes[pos].child[i] != -1) {\n            int nxt = nodes[pos].child[i];\n            if (nodes[nxt].cnt &gt;= k) {\n                res += char(i + 'a');\n                pos = nxt;\n                break;\n            }\n            k -= nodes[nxt].cnt;\n        } \n    }\n\n    return res;\n}\n</code></pre> <p>Trong \u0111o\u1ea1n code, d\u1ec5 th\u1ea5y r\u1eb1ng ta x\u00e2y d\u1ef1ng \u0111\u00e1p \u00e1n t\u1eeb tr\u00e1i qua ph\u1ea3i. \u1ede \u0111\u1ec9nh hi\u1ec7n t\u1ea1i \u0111ang x\u00e9t, ta s\u1eed d\u1ee5ng bi\u1ebfn \u0111\u1ebfm \\(cnt\\) \u1edf m\u1ed7i \u0111\u1ec9nh con \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh k\u00ed t\u1ef1 ti\u1ebfp theo c\u1ee7a x\u00e2u \u0111\u00e1p \u00e1n l\u00e0 g\u00ec. Sau \u0111\u00f3 di chuy\u1ec3n xu\u1ed1ng \u0111\u1ec9nh con \u0111\u00f3 \u0111\u1ec3 ti\u1ebfp t\u1ee5c t\u00ecm k\u00ed t\u1ef1 ti\u1ebfp theo.</p>"},{"location":"algo/data-structures/trie/#xu-li-truy-van-tim-xor-lon-nhat-voi-gia-tri-uoc-cho","title":"X\u1eed l\u00ed truy v\u1ea5n t\u00ecm XOR l\u1edbn nh\u1ea5t v\u1edbi gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c cho","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n \u0111i\u1ec3n h\u00ecnh s\u1eed d\u1ee5ng trie nh\u1ecb ph\u00e2n. \u0110a s\u1ed1 c\u00e1c b\u00e0i to\u00e1n li\u00ean quan t\u1edbi thao t\u00e1c bit s\u1eed d\u1ee5ng trie \u0111\u1ec1u l\u00e0 bi\u1ebfn th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n n\u00e0y.</p>"},{"location":"algo/data-structures/trie/#bai-toan_3","title":"B\u00e0i to\u00e1n","text":"<p>Cho danh s\u00e1ch c\u00e1c s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m \\(a_1, a_2, \\ldots, a_n\\). X\u1eed l\u00ed c\u00e1c truy v\u1ea5n cho s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m \\(x\\), t\u00ecm \\(\\max_{i = 1}^{n} a_i \\oplus x\\) v\u1edbi \\(\\oplus\\) l\u00e0 ph\u00e9p XOR hai s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m.</p>"},{"location":"algo/data-structures/trie/#loi-giai_3","title":"L\u1eddi gi\u1ea3i","text":"<p>\u0110\u1ea7u ti\u00ean x\u00e2y d\u1ef1ng m\u1ed9t trie nh\u1ecb ph\u00e2n v\u1edbi c\u00e1c s\u1ed1 nguy\u00ean \u0111\u00e3 cho.</p> <p>X\u00e9t l\u1ea7n l\u01b0\u1ee3t c\u00e1c bit t\u1eeb l\u1edbn \u0111\u1ebfn b\u00e9 c\u1ee7a \u0111\u00e1p \u00e1n. Coi bit \u0111ang x\u00e9t l\u00e0 bit th\u1ee9 \\(i\\). Ta s\u1ebd x\u00e2y d\u1ef1ng \u0111\u00e1p \u00e1n m\u1ed9t c\u00e1ch tham lam b\u1eb1ng c\u00e1ch c\u1ed1 g\u1eafng \u0111\u1eb7t bit th\u1ee9 \\(i\\) c\u1ee7a \u0111\u00e1p \u00e1n l\u00e0 \\(1\\) do \\(2^i &gt; \\sum_{i = 0}^{j - 1}2^j\\). N\u00f3i c\u00e1ch kh\u00e1c, d\u00f9 \u0111\u1eb7t c\u1ea3 \\(i - 1\\) bit c\u00f2n l\u1ea1i c\u1ee7a \u0111\u00e1p \u00e1n l\u00e0 \\(1\\) th\u00ec c\u0169ng kh\u00f4ng c\u00f3 l\u1ee3i b\u1eb1ng \u0111\u1eb7t bit \\(i\\) l\u00e0 \\(1\\).</p> <p>Ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t x\u00e2y \u0111\u00e1p \u00e1n b\u1eb1ng c\u00e1c \u0111i xu\u1ed1ng t\u1eeb g\u1ed1c c\u1ee7a trie. Coi ta \u0111ang x\u00e2y bit th\u1ee9 \\(i\\) c\u1ee7a \u0111\u00e1p \u00e1n. N\u1ebfu \u0111\u1ec9nh hi\u1ec7n t\u1ea1i \u0111ang x\u00e9t c\u00f3 th\u1ec3 \u0111i xu\u1ed1ng c\u1ea1nh c\u00f3 bit l\u00e0 \\(f(x, i) \\oplus 1\\) v\u1edbi \\(f(x, i)\\) l\u00e0 bit th\u1ee9 \\(i\\) c\u1ee7a s\u1ed1 \\(x\\), ta s\u1ebd \u0111i qua c\u1ea1nh \u0111\u00f3 \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c bit \\(i\\) trong \u0111\u00e1p \u00e1n l\u00e0 \\(1\\). N\u1ebfu kh\u00f4ng, ta \"\u0111\u00e0nh\" \u0111i xu\u1ed1ng c\u1ea1nh c\u00f2n l\u1ea1i c\u1ee7a \u0111\u1ec9nh \u0111ang x\u00e9t v\u00e0 c\u00f3 \u0111\u01b0\u1ee3c bit \\(i\\) c\u1ee7a \u0111\u00e1p \u00e1n l\u00e0 \\(0\\).</p> <p> <p> </p> <pre><code>int query(int x) {\n    int pos = 0, res = 0;\n    for (int i = LG; i &gt;= 0; i--) {\n        int c = (x &gt;&gt; i) &amp; 1;\n\n        if (nodes[pos].child[c ^ 1] != -1) {\n            res += (1ll &lt;&lt; i);\n            pos = nodes[pos].child[c ^ 1];\n        }\n        else {\n            pos = nodes[pos].child[c];\n        }\n    }\n    return res;\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#ap-dung","title":"\u00c1p d\u1ee5ng","text":"<p>D\u01b0\u1edbi \u0111\u00e2y s\u1ebd l\u00e0 m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n hay (theo g\u00f3c nh\u00ecn c\u1ee7a ng\u01b0\u1eddi vi\u1ebft) v\u00e0 l\u1eddi gi\u1ea3i d\u1ec5 hi\u1ec3u s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u trie.</p>"},{"location":"algo/data-structures/trie/#codeforces-kuro-and-gcd-and-xor-and-sum","title":"Codeforces - Kuro and GCD and XOR and SUM","text":""},{"location":"algo/data-structures/trie/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ea3ng s\u1ed1 \\(a\\) ban \u0111\u1ea7u r\u1ed7ng. X\u1eed l\u00ed \\(q\\) truy v\u1ea5n thu\u1ed9c hai lo\u1ea1i sau: - \\(1\\,u_i\\): Th\u00eam s\u1ed1 \\(u_i\\) v\u00e0o m\u1ea3ng \\(a\\). - \\(2\\,x_i\\,k_i\\,s_i\\): T\u00ecm s\u1ed1 \\(v\\) thu\u1ed9c m\u1ea3ng \\(a\\) sao cho \\(GCD(x_i, v)\\) chia h\u1ebft cho \\(k_i\\), \\(x_i + v \\le s_i\\), v\u00e0 \\(x_i \\oplus v\\) l\u00e0 l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 v\u1edbi \\(GCD(a, b)\\) l\u00e0 \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a \\(a\\) v\u00e0 \\(b\\). In ra \\(-1\\) n\u1ebfu kh\u00f4ng c\u00f3 s\u1ed1 \\(v\\) n\u00e0o trong m\u1ea3ng \\(a\\) th\u1ecfa m\u00e3n.</p> <p>Gi\u1edbi h\u1ea1n: - \\(2 \\le q \\le 10^5\\) - \\(1 \\le u_i, x_i, k_i, s_i \\le 10^5\\)</p>"},{"location":"algo/data-structures/trie/#loi-giai_4","title":"L\u1eddi gi\u1ea3i","text":"<p>Nh\u00ecn th\u1ea5y b\u00e0i to\u00e1n t\u00ecm \\(x_i \\oplus v\\) l\u1edbn nh\u1ea5t ngay l\u1eadp t\u1ee9c g\u1ee3i cho ch\u00fang ta l\u1eddi gi\u1ea3i s\u1eed d\u1ee5ng trie \u0111\u1ec3 gi\u1ea3i. V\u00ec v\u1eady ta s\u1ebd c\u1ed1 g\u1eafng thi\u1ebft k\u1ebf trie \u0111\u1ec3 truy v\u1ea5n tr\u00ean t\u1eadp c\u00e1c s\u1ed1 th\u1ecfa m\u00e3n hai \u0111i\u1ec1u ki\u1ec7n c\u00f2n l\u1ea1i.</p> <p>\u0110\u1ec3 \\(GCD(x_i, v)\\) chia h\u1ebft cho \\(k_i\\), d\u1ec5 nh\u1eadn th\u1ea5y c\u1ea3 \\(x_i\\) v\u00e0 \\(v\\) \u0111\u1ec1u ph\u1ea3i chia h\u1ebft cho \\(k_i\\). Do v\u1eady, ta s\u1ebd t\u1ea1o \\(10^5\\) trie, v\u1edbi trie th\u1ee9 \\(i\\) l\u00e0 c\u00e1c s\u1ed1 trong m\u1ea3ng \\(a\\) chia h\u1ebft cho \\(i\\). \u0110\u1ec3 \\(x_i + v \\le s_i\\) th\u00ec d\u0129 nhi\u00ean \\(v \\le s_i - x_i\\), ta l\u01b0u v\u1edbi m\u1ed7i \u0111\u1ec9nh trong trie s\u1ed1 b\u00e9 nh\u1ea5t trong c\u00e2y con c\u1ee7a \u0111\u1ec9nh \u0111\u00f3 l\u00e0 bao nhi\u00eau. </p> <p>V\u1eady \u0111\u1ec3 gi\u1ea3i quy\u1ebft m\u1ed9t truy v\u1ea5n, ta s\u1ebd t\u00ecm gi\u00e1 tr\u1ecb XOR l\u1edbn nh\u1ea5t tr\u00ean trie th\u1ee9 \\(k_i\\) (c\u00e1ch gi\u1ea3i \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean) v\u00e0 ch\u1ec9 \u0111i v\u00e0o m\u1ed9t \u0111\u1ec9nh con n\u1ebfu nh\u01b0 gi\u00e1 tr\u1ecb b\u00e9 nh\u1ea5t c\u1ee7a c\u00e2y con \u0111\u00f3 b\u00e9 h\u01a1n ho\u1eb7c b\u1eb1ng \\(s_i - x_i\\).</p> Code m\u1eabu <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int LG = 18;\nconst int INF = 1e9;\nstruct Trie{\n    struct Node{\n        Node* child[2];\n        int mn;\n\n        Node() {\n            for (int i = 0; i &lt; 2; i++) child[i] = NULL;\n            mn = INF;\n        }\n    };\n\n    int cur;\n    Node* root;\n    Trie() : cur(0) {\n        root = new Node();\n    };\n\n    void add_number(int x) {\n        Node* p = root;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (p-&gt;child[c] == NULL) p-&gt;child[c] = new Node();\n\n            p = p-&gt;child[c];\n            p-&gt;mn = min(p-&gt;mn, x);\n        }\n    }\n\n    int query(int x, int val) {\n        Node* p = root;\n        int res = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (p-&gt;child[c ^ 1] != NULL &amp;&amp; p-&gt;child[c ^ 1]-&gt;mn &lt;= val) {\n                res += ((c ^ 1) &lt;&lt; i);\n                p = p-&gt;child[c ^ 1];\n            }\n            else {\n                if (p-&gt;child[c] == NULL || p-&gt;child[c]-&gt;mn &gt; val) return -1;\n                p = p-&gt;child[c];\n                res += (c &lt;&lt; i);\n            }\n        }\n        return res;\n    }\n};\n\nconst int N = 1e5;\nTrie tries[N + 5];\nvector&lt;int&gt; d[N + 5];\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n\n    for (int i = 1; i &lt;= N; i++) {\n        for (int j = i; j &lt;= N; j += i) d[j].push_back(i);\n    }\n\n    int q;\n    cin &gt;&gt; q;\n    while (q--) {\n        int t;\n        cin &gt;&gt; t;\n\n        if (t == 1) {\n            int u;\n            cin &gt;&gt; u;\n            for (auto x : d[u]) tries[x].add_number(u); \n        }\n        else {\n            int x, k, s;\n            cin &gt;&gt; x &gt;&gt; k &gt;&gt; s;\n\n            if (x % k != 0) cout &lt;&lt; \"-1\\n\";\n            else cout &lt;&lt; tries[k].query(x, s - x) &lt;&lt; \"\\n\";\n        }\n    }\n\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#codeforces-vitya-and-strange-lesson","title":"Codeforces - Vitya and Strange Lesson","text":""},{"location":"algo/data-structures/trie/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho d\u00e3y s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m \\(a_1, a_2, \\ldots, a_n\\) v\u00e0 \\(m\\) truy v\u1ea5n thu\u1ed9c hai lo\u1ea1i: - Cho \\(x\\), XOR t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 trong d\u00e3y v\u1edbi \\(x\\). - In ra MEX (s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m nh\u1ecf nh\u1ea5t m\u00e0 kh\u00f4ng xu\u1ea5t hi\u1ec7n) c\u1ee7a d\u00e3y.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le n, m \\le 3 \\times 10^5\\) - \\(0 \\le a_i, x \\le 3 \\times 10^5\\)</p>"},{"location":"algo/data-structures/trie/#loi-giai_5","title":"L\u1eddi gi\u1ea3i","text":"<p>V\u1edbi c\u00e1c truy v\u1ea5n lo\u1ea1i \\(1\\), thay v\u00ec thay \u0111\u1ed5i c\u1ea3 d\u00e3y, ta nh\u1eadn th\u1ea5y r\u1eb1ng \\((a \\oplus b) \\oplus c = a \\oplus (b \\oplus c)\\). T\u1ee9c l\u00e0 n\u1ebfu \u00e1p d\u1ee5ng hai truy v\u1ea5n lo\u1ea1i \\(1\\) v\u1edbi hai s\u1ed1 nguy\u00ean \\(b, c\\) th\u00ec c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 \u00e1p d\u1ee5ng m\u1ed9t truy v\u1ea5n v\u1edbi s\u1ed1 nguy\u00ean \\(b \\oplus c\\). Do v\u1eady, ta ch\u1ec9 c\u1ea7n duy tr\u00ec c\u1ea3 d\u00e3y \u0111ang b\u1ecb XOR b\u1edfi s\u1ed1 nguy\u00ean n\u00e0o. G\u1ecdi s\u1ed1 \u0111\u00f3 l\u00e0 \\(z\\).</p> <p>Gi\u1ea3 d\u1ee5 ta \u0111\u00e3 c\u00f3 m\u1ed9t trie nh\u1ecb ph\u00e2n c\u1ee7a d\u00e3y s\u1ed1 \\(a_1, a_2, \\ldots, a_n\\) v\u00e0 ta mu\u1ed1n t\u00ecm MEX c\u1ee7a c\u00e1c s\u1ed1 trong \u0111\u00f3. Ta s\u1ebd s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n t\u01b0\u01a1ng t\u1ef1 ch\u1eb7t nh\u1ecb ph\u00e2n. G\u1ecdi \u0111\u1ed9 cao c\u1ee7a trie l\u00e0 \\(k\\). Kh\u1edfi \u0111\u1ea7u t\u1ea1i g\u1ed1c trie, ta ki\u1ec3m tra xem c\u00e2y con b\u00ean tr\u00e1i (c\u1ea1nh th\u1ec3 hi\u1ec7n bit \\(0\\)) c\u00f3 ph\u1ea3i l\u00e0 c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n h\u1ea3o hay kh\u00f4ng. N\u00f3i c\u00e1ch kh\u00e1c, t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 trong kho\u1ea3ng \\([0, 2^k - 1]\\) c\u00f3 t\u1ed3n t\u1ea1i hay kh\u00f4ng. N\u1ebfu c\u00f3, ta ch\u1eafc ch\u1eafn MEX c\u1ee7a d\u00e3y s\u1ed1 n\u1eb1m trong kho\u1ea3ng n\u00e0y. N\u1ebfu kh\u00f4ng, ta ch\u1eafc ch\u1eafn MEX c\u1ee7a d\u00e3y s\u1ed1 n\u1eb1m trong kho\u1ea3ng \\([2^k, 2^{k + 1} - 1]\\). Sau \u0111\u00f3, ta \u0111i xu\u1ed1ng \u0111\u1ec9nh con t\u01b0\u01a1ng \u1ee9ng v\u00e0 ti\u1ebfp t\u1ee5c x\u00e9t hai \u0111\u1ec9nh con c\u1ee7a n\u00f3. L\u00e0m nh\u01b0 v\u1eady v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c bit l\u00e0 s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n.</p> <p> <p> </p> <p>V\u1eady ph\u1ea7n c\u00f2n l\u1ea1i ph\u1ea3i x\u1eed l\u00ed l\u00e0 k\u1ebft h\u1ee3p thu\u1eadt t\u00ecm MEX tr\u00ean v\u1edbi vi\u1ec7c c\u1ea3 m\u1ea3ng \u0111ang b\u1ecb XOR b\u1edfi s\u1ed1 \\(z\\). D\u1ec5 nh\u1eadn th\u1ea5y l\u00e0, n\u1ebfu bit th\u1ee9 \\(k\\) c\u1ee7a \\(z\\) \u0111\u01b0\u1ee3c b\u1eadt, th\u00ec n\u00f3 t\u01b0\u01a1ng t\u1ef1 vi\u1ec7c hai c\u00e2y con tr\u00e1i v\u00e0 ph\u1ea3i c\u1ee7a \u0111\u1ec9nh \u0111ang x\u00e9t \u0111\u01b0\u1ee3c \u0111\u1ed5i ch\u1ed7 cho nhau. V\u00ec v\u1eady thu\u1eadt to\u00e1n cu\u1ed1i c\u00f9ng t\u01b0\u01a1ng t\u1ef1 v\u1edbi thu\u1eadt to\u00e1n t\u00ecm MEX tr\u00ean, th\u00eam vi\u1ec7c x\u00e9t bit th\u1ee9 \\(k\\) c\u1ee7a \\(z\\) m\u00e0 ta s\u1ebd x\u00e9t c\u00e2y con tr\u00e1i tr\u01b0\u1edbc (n\u1ebfu bit \u0111\u00f3 l\u00e0 \\(0\\)) hay c\u00e2y con ph\u1ea3i tr\u01b0\u1edbc (n\u1ebfu bit \u0111\u00f3 l\u00e0 \\(1\\)).</p> Code m\u1eabu <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int NUMBEROFNODES = 5400005;\nconst int LG = 18;\nstruct Trie{\n    struct Node{\n        int child[2];\n        int cnt;\n    } nodes[NUMBEROFNODES];\n\n    int cur;\n    Trie() : cur(0) {\n        memset(nodes[0].child, -1, sizeof(nodes[cur].child));\n        nodes[0].cnt = 0;\n    };\n\n    int new_node() {\n        cur++;\n        memset(nodes[cur].child, -1, sizeof(nodes[cur].child));\n        nodes[cur].cnt = 0;\n        return cur;\n    }\n\n    void add_number(int x) {\n        int pos = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (nodes[pos].child[c] == -1) nodes[pos].child[c] = new_node();\n            pos = nodes[pos].child[c];\n            nodes[pos].cnt++;\n        }\n    }\n\n    int query(int x) {\n        int pos = 0, res = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n\n            if (nodes[pos].child[c] != -1 &amp;&amp; nodes[nodes[pos].child[c]].cnt == (1 &lt;&lt; i)) {\n                pos = nodes[pos].child[c ^ 1];\n                res += (1 &lt;&lt; i);\n            }\n            else pos = nodes[pos].child[c];\n\n            if (pos == -1) break;\n        }\n        return res;\n    }\n};\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n\n    Trie trie;\n    vector&lt;int&gt; v;\n    for (int i = 1; i &lt;= n; i++) {\n        int x; cin &gt;&gt; x;\n        v.push_back(x);\n    }\n\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    for (auto x : v) trie.add_number(x);\n\n    int cur_xor = 0;\n    while (m--) {\n        int x; cin &gt;&gt; x;\n        cur_xor ^= x;\n        cout &lt;&lt; trie.query(cur_xor) &lt;&lt; \"\\n\";\n    }\n\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#codechef-english","title":"Codechef - English","text":""},{"location":"algo/data-structures/trie/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \\(N\\) x\u00e2u \\(W_1, W_2, \\ldots, W_N\\). M\u1ed9t c\u1eb7p x\u00e2u c\u00f3 \u0111\u1ed9 d\u00e0i ti\u1ec1n t\u1ed1 chung d\u00e0i nh\u1ea5t l\u00e0 \\(l_p\\), \u0111\u1ed9 d\u00e0i h\u1eadu t\u1ed1 chung d\u00e0i nh\u1ea5t l\u00e0 \\(l_s\\), th\u00ec v\u1ebb \u0111\u1eb9p c\u1ee7a c\u1eb7p x\u00e2u \u0111\u00f3 l\u00e0 l\u00e0 \\(\\min(l_p, l_s)^2\\). H\u00e3y gh\u00e9p c\u1eb7p c\u00e1c x\u00e2u, m\u1ed7i x\u00e2u n\u1eb1m trong t\u1ed1i \u0111a m\u1ed9t c\u1eb7p sao cho t\u1ed5ng v\u1ebb \u0111\u1eb9p c\u00e1c c\u1eb7p x\u00e2u l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le N \\le 10^5\\) - \\(1 \\le \\lvert W_i \\rvert \\le 10^5\\) - \\(1 \\le \\sum^N_{i = 1} \\lvert W_i \\rvert \\le 10^5\\)</p>"},{"location":"algo/data-structures/trie/#loi-giai_6","title":"L\u1eddi gi\u1ea3i","text":"<p>Gi\u1ea3 s\u1eed b\u00e0i to\u00e1n \u0111\u1ecbnh ngh\u0129a v\u1ebb \u0111\u1eb9p m\u1ed9t c\u1eb7p x\u00e2u l\u00e0 \\(l_p^2\\), th\u00ec b\u00e0i to\u00e1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft b\u1eb1ng c\u00e1ch dfs tr\u00ean trie c\u00e1c x\u00e2u \u0111\u00e3 cho.</p> <p>Tuy nhi\u00ean, v\u00ec \u0111\u1ec1 b\u00e0i \u0111\u1ecbnh ngh\u0129a v\u1ebb \u0111\u1eb9p m\u1ed9t c\u1eb7p x\u00e2u l\u00e0 \\(\\min(l_p, l_s)^2\\), ta c\u1ea7n m\u1ed9t c\u00e1ch n\u00e0o \u0111\u00f3 \u0111\u1ec3 so s\u00e1nh c\u1ea3 ti\u1ec1n t\u1ed1 v\u00e0 h\u1eadu t\u1ed1 c\u00f9ng m\u1ed9t l\u00fac tr\u00ean trie. Ta c\u00f3 th\u1ec3 l\u00e0m \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch bi\u1ebfn \u0111\u1ed5i c\u00e1c x\u00e2u \\(W\\). Ch\u00ednh x\u00e1c h\u01a1n, n\u1ebfu \\(W = C_1C_2 \\ldots C_M\\) th\u00ec ta bi\u1ebfn \u0111\u1ed5i \\(W = (C_1, C_M)(C_2, C_{M - 1}) \\ldots (C_M, C_1)\\) v\u1edbi \\((C_1, C_M)\\) l\u00e0 \"k\u00ed t\u1ef1\" \u0111\u1ea7u ti\u00ean. N\u00f3i c\u00e1ch kh\u00e1c, ta thay \u0111\u1ed5i b\u1ea3ng ch\u1eef c\u00e1i t\u1eeb \\(26\\) k\u00ed t\u1ef1 th\u00e0nh b\u1ea3ng ch\u1eef c\u00e1i c\u00f3 \\(676\\) k\u00ed t\u1ef1 \\((a, a), (a, b), \\ldots, (z, z)\\). </p> <p>T\u1eeb \u0111\u00f3 ta c\u00f3 th\u1ec3 th\u1ea5y b\u00e0i to\u00e1n \u0111\u00e3 tr\u1edf th\u00e0nh m\u1ed9t c\u1eb7p x\u00e2u c\u00f3 v\u1ebb \u0111\u1eb9p l\u00e0 \\(l_p^2\\). C\u00e1ch t\u00ednh \u0111\u00e1p \u00e1n chi ti\u1ebft b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o trong code m\u1eabu.</p> Code m\u1eabu <pre><code>## include &lt;bits/stdc++.h&gt;\n\n## define ll long long\n\nusing namespace std;\n\nll sqr(ll x) {\n    return x * x;\n}\n\nstruct Trie{\n    struct Node{\n        Node* child[26][26];\n        int cnt;\n\n        Node() {\n            for (int i = 0; i &lt; 26; i++)\n                for (int j = 0; j &lt; 26; j++) child[i][j] = NULL;\n            cnt = 0;\n        }\n    };\n\n    Node* root;\n    Trie() {\n        root = new Node();\n    };\n\n    void add_string(string s) {\n        Node* p = root;\n        int n = (int)s.size();\n        for (int i = 0; i &lt; n; i++) {\n            int c1 = s[i] - 'a';\n            int c2 = s[n - i - 1] - 'a';\n\n            if (p-&gt;child[c1][c2] == NULL) p-&gt;child[c1][c2] = new Node();\n            p = p-&gt;child[c1][c2];\n            p-&gt;cnt++;\n        }\n    }\n\n    ll solve(Node* p, int depth) {\n        ll res = (p == root ? 0 : (ll)(p-&gt;cnt / 2) * (sqr(depth) - sqr(depth - 1)));\n        for (int c1 = 0; c1 &lt; 26; c1++) {\n            for (int c2 = 0; c2 &lt; 26; c2++) if (p-&gt;child[c1][c2] != NULL) {\n                res += solve(p-&gt;child[c1][c2], depth + 1);\n            }\n        }\n        return res;\n    }\n};\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n\n    int t;\n    cin &gt;&gt; t;\n    while (t--) {\n        Trie trie;\n        int n;\n        cin &gt;&gt; n;\n\n        for (int i = 1; i &lt;= n; i++) {\n            string s; \n            cin &gt;&gt; s;\n            trie.add_string(s);\n        }\n\n        cout &lt;&lt; trie.solve(trie.root, 0) &lt;&lt; \"\\n\";\n    }\n\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#joi-open-contest-2016-selling-rna-strands","title":"JOI Open Contest 2016 - Selling RNA Strands","text":""},{"location":"algo/data-structures/trie/#e-bai_3","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho danh s\u00e1ch \\(N\\) x\u00e2u \\(S_1, S_2, \\ldots, S_N\\) v\u00e0 \\(M\\) truy v\u1ea5n. Truy v\u1ea5n th\u1ee9 \\(j\\) g\u1ed3m hai x\u00e2u \\(P_j\\) v\u00e0 \\(Q_j\\), h\u00e3y t\u00ecm s\u1ed1 l\u01b0\u1ee3ng x\u00e2u trong danh s\u00e1ch ban \u0111\u1ea7u c\u00f3 ti\u1ec1n t\u1ed1 l\u00e0 \\(P_j\\) v\u00e0 h\u1eadu t\u1ed1 l\u00e0 \\(Q_j\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le N, M, \\lvert S_i \\rvert, \\lvert P_j \\rvert, \\lvert Q_j \\rvert \\le 10^5\\) - \\(1 \\le \\sum^{N}_{i = 1} \\lvert S_i \\rvert \\le 2 \\times 10^6\\). - \\(1 \\le \\sum^{N}_{i = 1} \\lvert P_j \\rvert \\le 2 \\times 10^6\\). - \\(1 \\le \\sum^{N}_{i = 1} \\lvert Q_j \\rvert \\le 2 \\times 10^6\\). - C\u00e1c x\u00e2u ch\u1ec9 g\u1ed3m c\u00e1c k\u00ed t\u1ef1 <code>A</code>, <code>G</code>, <code>C</code>, <code>U</code>.</p>"},{"location":"algo/data-structures/trie/#loi-giai_7","title":"L\u1eddi gi\u1ea3i","text":"<p>\u0110\u1ea7u ti\u00ean, ta s\u1eafp x\u1ebfp v\u00e0 \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c x\u00e2u theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n t\u0103ng d\u1ea7n.</p> <p>X\u00e2y m\u1ed9t trie cho \\(N\\) x\u00e2u \u0111\u00f3. Kh\u00f4ng kh\u00f3 \u0111\u1ec3 nh\u1eadn ra r\u1eb1ng v\u1edbi m\u1ed7i \u0111\u1ec9nh trie n\u00e0y, n\u00f3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi ti\u1ec1n t\u1ed1 c\u1ee7a m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp \\([l, r]\\) c\u00e1c x\u00e2u n\u00e0y. Ta s\u1ebd l\u01b0u tr\u00ean m\u1ed7i \u0111\u1ec9nh hai gi\u00e1 tr\u1ecb \\(l, r\\) c\u00f3 \u00fd ngh\u0129a nh\u01b0 tr\u00ean.</p> <p>X\u00e2y m\u1ed9t trie th\u1ee9 hai c\u0169ng cho \\(N\\) x\u00e2u n\u00e0y nh\u01b0ng b\u1ecb \u0111\u1ea3o ng\u01b0\u1ee3c, t\u1ee9c m\u1ed7i \u0111\u1ec9nh tr\u00ean trie \u0111\u00f3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t h\u1eadu t\u1ed1 c\u1ee7a m\u1ed9t (ho\u1eb7c nhi\u1ec1u) x\u00e2u n\u00e0o \u0111\u00f3. V\u1edbi m\u1ed7i \u0111\u1ec9nh tr\u00ean trie, ta l\u01b0u m\u1ed9t vector ch\u1ee9a th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c x\u00e2u c\u00f3 h\u1eadu t\u1ed1 l\u00e0 x\u00e2u th\u1ec3 hi\u1ec7n b\u1edfi \u0111\u1ec9nh \u0111\u00f3. L\u01b0u \u00fd kh\u00f4ng th\u1ec3 l\u01b0u \\(l, r\\) nh\u01b0 trie tr\u01b0\u1edbc do n\u00f3 c\u00f3 th\u1ec3 kh\u00f4ng li\u00ean ti\u1ebfp v\u00ec ta \u0111\u00e3 \u0111\u1ea3o ng\u01b0\u1ee3c c\u00e1c x\u00e2u.</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n \\(j\\), ta t\u00ecm \u0111\u1ec9nh tr\u00ean trie th\u1ee9 nh\u1ea5t th\u1ec3 hi\u1ec7n cho ti\u1ec1n t\u1ed1 \\(P_j\\) v\u00e0 c\u00f3 \u0111\u01b0\u1ee3c kho\u1ea3ng li\u00ean ti\u1ebfp c\u00e1c x\u00e2u c\u00f3 ti\u1ec1n t\u1ed1 n\u00e0y. Ti\u1ebfp theo, ta t\u00ecm \u0111\u1ec9nh tr\u00ean trie th\u1ee9 hai th\u1ec3 hi\u1ec7n cho h\u1eadu t\u1ed1 \\(Q_j\\) v\u00e0 c\u00f3 \u0111\u01b0\u1ee3c vector ch\u1ee9a c\u00e1c x\u00e2u c\u00f3 h\u1eadu t\u1ed1 n\u00e0y. T\u1ea1i \u0111\u00e2y, b\u00e0i to\u00e1n quy tr\u1edf v\u1ec1 cho m\u1ed9t vector c\u00e1c s\u1ed1, t\u00ecm s\u1ed1 s\u1ed1 n\u1eb1m trong kho\u1ea3ng \\([l, r]\\). B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft b\u1eb1ng thu\u1eadt to\u00e1n ch\u1eb7t nh\u1ecb ph\u00e2n.</p> Code m\u1eabu <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint get_val(char f) {\n    if (f == 'A') return 0;\n    if (f == 'G') return 1;\n    if (f == 'C') return 2;\n    return 3;\n}\n\nchar get_char(int x) {\n    if (x == 0) return 'A';\n    if (x == 1) return 'G';\n    if (x == 2) return 'C';\n    return 'U';\n}\n\nconst int NUMBEROFNODES = 2e6 + 5;\nconst int INF = 1e9;\nstruct Trie{\n    struct Node{\n        int child[4];\n        int l, r;\n        int exist;\n    } nodes[numberOfNodes];\n\n    int cur;\n    Trie() : cur(0) {\n        memset(nodes[0].child, -1, sizeof(nodes[cur].child));\n        nodes[0].l = INF; nodes[0].r = -INF;\n        nodes[0].exist = 0;\n    };\n\n    int new_node() {\n        cur++;\n        memset(nodes[cur].child, -1, sizeof(nodes[cur].child));\n        nodes[cur].l = INF; nodes[cur].r = -INF;\n        nodes[cur].exist = 0;\n        return cur;\n    }\n\n    void add_string(string s, int id) {\n        int pos = 0;\n        for (auto f : s) {\n            int c = get_val(f);\n            if (nodes[pos].child[c] == -1) nodes[pos].child[c] = new_node();\n            pos = nodes[pos].child[c];\n\n            nodes[pos].l = min(nodes[pos].l, id);\n            nodes[pos].r = max(nodes[pos].r, id);\n        }\n        nodes[pos].exist++;\n    }\n\n    pair&lt;int, int&gt; get_range(string s) {\n        int pos = 0;\n        for (auto f : s) {\n            int c = get_val(f);\n            if (nodes[pos].child[c] == -1) return {-1, -1};\n            pos = nodes[pos].child[c];\n        }\n        return {nodes[pos].l, nodes[pos].r};\n    }\n\n    void dfs(int pos, string&amp; current_string, vector&lt;string&gt;&amp; res) {\n        for (int i = 1; i &lt;= nodes[pos].exist; i++) res.push_back(current_string);\n\n        for (int i = 0; i &lt; 4; i++) if (nodes[pos].child[i] != -1) {\n            current_string += get_char(i);\n            dfs(nodes[pos].child[i], current_string, res);\n            current_string.pop_back();\n        }\n    }\n\n    vector&lt;string&gt; sort_strings() {\n        vector&lt;string&gt; res;\n        string current_string = \"\";\n        dfs(0, current_string, res);\n        return res;\n    }\n};\n\nstruct ReversedTrie{\n    struct Node{\n        int child[4];\n        vector&lt;int&gt; ids;\n    } nodes[NUMBEROFNODES];\n\n    int cur;\n    ReversedTrie() : cur(0) {\n        memset(nodes[0].child, -1, sizeof(nodes[cur].child));\n        nodes[0].ids.clear();\n    };\n\n    int new_node() {\n        cur++;\n        memset(nodes[cur].child, -1, sizeof(nodes[cur].child));\n        nodes[cur].ids.clear();\n        return cur;\n    }\n\n    void add_string(string s, int id) {\n        reverse(s.begin(), s.end());\n        int pos = 0;\n        for (auto f : s) {\n            int c = get_val(f);\n            if (nodes[pos].child[c] == -1) nodes[pos].child[c] = new_node();\n            pos = nodes[pos].child[c];\n            nodes[pos].ids.push_back(id);\n        }\n    }\n\n    int query(string s, pair&lt;int, int&gt; range) {\n        reverse(s.begin(), s.end());\n        int pos = 0;\n        for (auto f : s) {\n            int c = get_val(f);\n            if (nodes[pos].child[c] == -1) return 0;\n            pos = nodes[pos].child[c];\n        }\n\n        int l = lower_bound(nodes[pos].ids.begin(), nodes[pos].ids.end(), range.first) - nodes[pos].ids.begin();\n        int r = upper_bound(nodes[pos].ids.begin(), nodes[pos].ids.end(), range.second) - nodes[pos].ids.begin() - 1;\n\n        return r - l + 1;\n    }\n};\n\nvector&lt;string&gt; sort_strings(vector&lt;string&gt; v) {\n    Trie list;\n    for (auto s : v) list.add_string(s, -1);\n    return list.sort_strings();\n}\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n\n    vector&lt;string&gt; v;\n    for (int i = 1; i &lt;= n; i++) {\n        string s;\n        cin &gt;&gt; s;\n        v.push_back(s);\n    }\n    v = sort_strings(v);\n\n    Trie trie1;\n    ReversedTrie trie2;\n    for (int i = 1; i &lt;= n; i++) {\n        trie1.add_string(v[i - 1], i);\n        trie2.add_string(v[i - 1], i);\n    }\n\n    while (m--) {\n        string p, q;\n        cin &gt;&gt; p &gt;&gt; q;\n\n        pair&lt;int, int&gt; range = trie1.get_range(p);\n        if (range.first == -1) cout &lt;&lt; \"0\\n\";\n        else cout &lt;&lt; trie2.query(q, range) &lt;&lt; \"\\n\";\n    }\n\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#xx-open-cup-grand-prix-of-kazan-bitwise-xor","title":"XX Open Cup, Grand Prix of Kazan - Bitwise Xor","text":""},{"location":"algo/data-structures/trie/#e-bai_4","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho d\u00e3y s\u1ed1 nguy\u00ean \\(a_1, a_2, \\ldots, a_N\\) v\u00e0 s\u1ed1 nguy\u00ean \\(x\\). \u0110\u1ebfm s\u1ed1 d\u00e3y con \\(1 \\le b_1 &lt; b_2 &lt; \\ldots &lt; b_k \\le n\\) m\u00e0 \\(a_{b_i} \\oplus a_{b_j} \\ge x\\) v\u1edbi m\u1ecdi c\u1eb7p \\((i, j)\\) th\u1ecfa m\u00e3n \\(1 \\le i &lt; j \\le k\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le N \\le 3 \\times 10^5\\) - \\(0 \\le a_i, x &lt; 2^{60}\\)</p>"},{"location":"algo/data-structures/trie/#loi-giai_8","title":"L\u1eddi gi\u1ea3i","text":"<p>V\u1edbi m\u1ed9t d\u00e3y s\u1ed1 \\({x_1, x_2, \\ldots, x_k}\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec1 b\u00e0i, nh\u1eadn th\u1ea5y r\u1eb1ng n\u1ebfu ta s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c gi\u00e1 tr\u1ecb \u0111\u00f3 t\u1eeb b\u00e9 \u0111\u1ebfn l\u1edbn, th\u00ec gi\u00e1 tr\u1ecb b\u00e9 nh\u1ea5t c\u1ee7a \\(x_i \\oplus x_j\\) s\u1ebd c\u00f3 \\(\\lvert i - j \\rvert = 1\\). Ph\u1ea7n ch\u1ee9ng minh xin d\u00e0nh cho b\u1ea1n \u0111\u1ecdc.</p> <p>V\u00ec v\u1eady, ta c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng \\(a\\) t\u0103ng d\u1ea7n, v\u00e0 \u0111\u1ebfm s\u1ed1 d\u00e3y \\(b\\) th\u1ecfa m\u00e3n. M\u1ed9t c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n^2)\\) kh\u00e1 d\u1ec5 \u0111\u1ec3 th\u1ea5y. G\u1ecdi \\(dp[i]\\) l\u00e0 s\u1ed1 d\u00e3y \\(b\\) th\u1ecfa m\u00e3n v\u1edbi \\(b_k = i\\), th\u00ec \\(dp[i] = \\sum^{i - 1}_{j = 1,\\,a_i \\oplus a_j \\ge x} dp[j]\\).</p> <p>C\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u s\u1eed d\u1ee5ng m\u1ed9t trie nh\u1ecb ph\u00e2n. Gi\u1ea3 d\u1ee5 x\u00e9t bit th\u1ee9 \\(i\\), v\u1edbi \\(i - 1\\) bit \u0111\u1ea7u ti\u00ean c\u1ee7a \\(a_i \\oplus a_j\\) b\u1eb1ng \\(i - 1\\) bit \u0111\u1ea7u ti\u00ean c\u1ee7a \\(x\\), ta chia hai tr\u01b0\u1eddng h\u1ee3p: - Bit th\u1ee9 \\(i\\) c\u1ee7a \\(x\\) l\u00e0 \\(1\\): Bit th\u1ee9 \\(i\\) c\u1ee7a \\(a_i \\oplus a_j\\) c\u0169ng ph\u1ea3i b\u1eb1ng \\(1\\). Ta \u0111i xu\u1ed1ng c\u00e2y con t\u01b0\u01a1ng \u1ee9ng bit \\(1\\) \u0111\u1ec3 x\u00e9t bit th\u1ee9 \\(i + 1\\). - Bit th\u1ee9 \\(i\\) c\u1ee7a \\(x\\) l\u00e0 \\(0\\): Bit th\u1ee9 \\(i\\) c\u1ee7a \\(a_i \\oplus a_j\\) c\u00f3 th\u1ec3 l\u00e0 \\(0\\) ho\u1eb7c \\(1\\). N\u1ebfu l\u00e0 \\(1\\) th\u00ec c\u00e1c bit c\u00f2n l\u1ea1i ta \u0111i\u1ec1n g\u00ec c\u0169ng v\u1eabn th\u1ecfa m\u00e3n \\(a_i \\oplus a_j \\ge x\\), t\u1ee9c c\u00f3 th\u1ec3 l\u1ea5y t\u1ed5ng t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb \\(dp\\) trong c\u00e2y con t\u01b0\u01a1ng \u1ee9ng bit \\(1\\). R\u1ed3i ta \u0111i xu\u1ed1ng c\u00e2y con t\u01b0\u01a1ng \u1ee9ng bit \\(0\\) \u0111\u1ec3 x\u00e9t bit th\u1ee9 \\(i + 1\\).</p> <p>D\u1ef1a v\u00e0o bit th\u1ee9 \\(i\\) c\u1ee7a \\(a_i \\oplus a_j\\) v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a \\(a_i\\) ta ho\u00e0n to\u00e1n c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c bit th\u1ee9 \\(i\\) c\u1ee7a \\(a_j\\). L\u01b0u \u00fd m\u1ecdi d\u00e3y con g\u1ed3m \\(1\\) ph\u1ea7n t\u1eed \u0111\u1ec1u th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c\u1ee7a \u0111\u1ec1 b\u00e0i.</p> <p>L\u00fac n\u00e0y, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng trie nh\u01b0 m\u1ed9t c\u00e2y ph\u00e2n \u0111o\u1ea1n, truy v\u1ea5n tr\u00ean trie y h\u1ec7t nh\u01b0 truy v\u1ea5n nh\u01b0 c\u00e2y ph\u00e2n \u0111o\u1ea1n nh\u01b0ng \u0111i\u1ec1u ki\u1ec7n \u0111i xu\u1ed1ng c\u00e2y con b\u00ean n\u00e0o b\u1ecb thay \u0111\u1ed5i.</p> Code m\u1eabu <pre><code>## include &lt;bits/stdc++.h&gt;\n\n## define ll long long\n\nusing namespace std;\n\nconst int MOD = 998244353;\nvoid add(int&amp; a, int b) {\n    if ((a += b) &gt;= MOD) a -= MOD;\n}\n\nconst int NUMBEROFNODES = 18000005;\nconst int LG = 60;\nstruct Trie{\n    struct Node{\n        int child[2];\n        int sum;\n    } nodes[NUMBEROFNODES];\n\n    int cur;\n    Trie() : cur(0) {\n        memset(nodes[0].child, -1, sizeof(nodes[cur].child));\n        nodes[0].sum = 0;\n    };\n\n    int new_node() {\n        cur++;\n        memset(nodes[cur].child, -1, sizeof(nodes[cur].child));\n        nodes[cur].sum = 0;\n        return cur;\n    }\n\n    void add_value(ll x, int val) {\n        int pos = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (nodes[pos].child[c] == -1) nodes[pos].child[c] = new_node();\n            pos = nodes[pos].child[c];\n            add(nodes[pos].sum, val);\n        }\n    }\n\n    int query(ll x, ll k) {\n        int pos = 0, res = 0;\n        for (int i = LG; i &gt;= 0; i--) {\n            int c1 = (x &gt;&gt; i) &amp; 1;\n            int c2 = (k &gt;&gt; i) &amp; 1;\n\n            if (c2 == 1) {\n                if (nodes[pos].child[c1 ^ 1] == -1) break;\n                pos = nodes[pos].child[c1 ^ 1];\n            }\n            else {\n                if (nodes[pos].child[c1 ^ 1] != -1) add(res, nodes[nodes[pos].child[c1 ^ 1]].sum);\n                if (nodes[pos].child[c1] == -1) break;\n                pos = nodes[pos].child[c1];\n            }\n\n            if (i == 0) add(res, nodes[pos].sum);\n        }\n        return res;\n    }\n};\n\nconst int N = 3e5 + 5;\nint n;\nll k;\nll a[N];\n\nsigned main() {\n\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n    sort(a + 1, a + n + 1);\n\n    Trie trie;\n\n    int res = n;\n    for (int i = 1; i &lt;= n; i++) {\n        int val = trie.query(a[i], k);\n        trie.add_value(a[i], val + 1);\n        add(res, val);\n    }\n    cout &lt;&lt; res;\n\n}\n</code></pre>"},{"location":"algo/data-structures/trie/#bai-tap","title":"B\u00e0i t\u1eadp","text":"<p>VNOJ Tag Problem List</p>"},{"location":"algo/data-structures/trie/#trie-xau","title":"Trie x\u00e2u","text":"<p>SPOJ - Ada and Indexing (D\u1ec5)</p> <p>SPOJ - Try to complete (D\u1ec5)</p> <p>IOI 2008 - Type Printer (D\u1ec5)</p> <p>Codechef - Query On Strings (D\u1ec5)</p> <p>Codeforces Gym - Know Your Statement (Trung b\u00ecnh)</p> <p>Codechef - Paisa Double (Trung b\u00ecnh)</p> <p>VOI 2021 - Ph\u1ea7n th\u01b0\u1edfng (Trung b\u00ecnh)</p> <p>Atcoder - Prefix-tree Game (Kh\u00f3)</p> <p>PVHOI 2.2 - Ti\u1ec1n t\u1ed1 chung d\u00e0i nh\u1ea5t (Kh\u00f3)</p>"},{"location":"algo/data-structures/trie/#trie-nhi-phan_1","title":"Trie nh\u1ecb ph\u00e2n","text":"<p>Hackerrank - XOR Key (D\u1ec5)</p> <p>SPOJ - SubXor (D\u1ec5)</p> <p>SPOJ - x-Xor It! (D\u1ec5)</p> <p>CSAcademy - Xor Submatrix (Trung b\u00ecnh)</p> <p>HDU - I love counting (Trung b\u00ecnh)</p> <p>Hackerrank - The Black Box (Kh\u00f3)</p> <p>CCO 2017 - Vera and Modern Art (Kh\u00f3)</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/","title":"M\u1ed9t s\u1ed1 k\u0129 thu\u1eadt t\u1ed1i \u01b0u ho\u00e1 thu\u1eadt to\u00e1n Quy Ho\u1ea1ch \u0110\u1ed9ng","text":"<p>T\u00e1c gi\u1ea3: L\u00ea Anh \u0110\u1ee9c - A2K42-PBC</p> <p>Quy ho\u1ea1ch \u0111\u1ed9ng (QH\u0110) l\u00e0 m\u1ed9t l\u1edbp thu\u1eadt to\u00e1n r\u1ea5t quan tr\u1ecdng v\u00e0 c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng trong ng\u00e0nh khoa h\u1ecdc m\u00e1y t\u00ednh. Trong c\u00e1c cu\u1ed9c thi Olympic tin h\u1ecdc hi\u1ec7n \u0111\u1ea1i, QH\u0110 lu\u00f4n l\u00e0 m\u1ed9t trong nh\u1eefng ch\u1ee7 \u0111\u1ec1 ch\u00ednh. Tuy v\u1eady, theo t\u00f4i th\u1ea5y, t\u00e0i li\u1ec7u n\u00e2ng cao v\u1ec1 QH\u0110 b\u1eb1ng ti\u1ebfng Vi\u1ec7t hi\u1ec7n c\u00f2n c\u1ef1c k\u1ef3 khan hi\u1ebfm, d\u1eabn \u0111\u1ebfn h\u1ecdc sinh/sinh vi\u00ean Vi\u1ec7t Nam b\u1ecb h\u1ea1n ch\u1ebf kh\u1ea3 n\u0103ng ti\u1ebfp c\u1eadn v\u1edbi nh\u1eefng k\u1ef9 thu\u1eadt hi\u1ec7n \u0111\u1ea1i. Trong b\u00e0i vi\u1ebft n\u00e0y, t\u00f4i s\u1ebd tr\u00ecnh b\u00e0y m\u1ed9t v\u00e0i k\u1ef9 thu\u1eadt \u0111\u1ec3 t\u1ed1i \u01b0u h\u00f3a \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n QH\u0110.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#1-oi-bien","title":"1. \u0110\u1ed5i bi\u1ebfn","text":"<p>Nhi\u1ec1u khi trong tr\u1ea1ng th\u00e1i QH\u0110 c\u00f3 m\u1ed9t th\u00e0nh ph\u1ea7n n\u00e0o \u0111\u1ea5y v\u1edbi kho\u1ea3ng gi\u00e1 tr\u1ecb qu\u00e1 l\u1edbn, trong khi k\u1ebft qu\u1ea3 c\u1ee7a h\u00e0m l\u1ea1i c\u00f3 kho\u1ea3ng gi\u00e1 tr\u1ecb nh\u1ecf. Trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p, ta c\u00f3 th\u1ec3 \u0111\u1ea3o nh\u00e3n \u0111\u1ec3 gi\u1ea3m s\u1ed1 tr\u1ea1ng th\u00e1i.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bai-tap-vi-du","title":"B\u00e0i t\u1eadp v\u00ed d\u1ee5","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#longest-common-subsequence-lcs","title":"Longest Common Subsequence (LCS)","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho x\u00e2u A \u0111\u1ed9 d\u00e0i m, x\u00e2u B \u0111\u1ed9 d\u00e0i n. H\u00e3y t\u00ecm \u0111\u1ed9 d\u00e0i x\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a hai x\u00e2u, ch\u00fa \u00fd l\u00e0 x\u00e2u con chung c\u00f3 th\u1ec3 kh\u00f4ng li\u00ean ti\u1ebfp.</p> <p>Gi\u1edbi h\u1ea1n</p> <ul> <li>\\(m \\le 10^6\\)</li> <li>\\(n \\le 5000\\)</li> <li>C\u00e1c k\u00ed t\u1ef1 trong c\u1ea3 hai x\u00e2u l\u00e0 c\u00e1c ch\u1eef c\u00e1i ti\u1ebfng Anh in hoa 'A'..'Z'</li> </ul> <p>V\u00ed d\u1ee5</p> <pre><code>A = ADBCC\nB = ABCD\n\nLCS = ABC\nK\u1ebft qu\u1ea3 = 3\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<p>Thu\u1eadt to\u00e1n \u0111\u01a1n gi\u1ea3n</p> <p>G\u1ecdi \\(F(i, j)\\) l\u00e0 LCS c\u1ee7a hai ti\u1ec1n t\u1ed1 \\(A_{1..i}\\) v\u00e0 \\(B_{1..j}\\).</p> <p>Khi \u0111\u00f3 ta c\u00f3 th\u1ec3 maximize \\(F(i, j)\\) theo \\(F(i-1, j)\\) v\u00e0 \\(F(i, j-1)\\).</p> <p>N\u1ebfu \\(A_i = B_j\\) th\u00ec ta c\u00f3 th\u1ec3 c\u1eadp nh\u1eadt \\(F(i, j)\\) theo \\(F(i-1, j-1) + 1\\).</p> <p>K\u1ebft qu\u1ea3 b\u00e0i to\u00e1n l\u00e0 \\(F(m, n)\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(m*n)\\), kh\u00f4ng kh\u1ea3 thi v\u1edbi gi\u1edbi h\u1ea1n c\u1ee7a \u0111\u1ec1 b\u00e0i.</p> <p>\u0110\u1ed5i bi\u1ebfn</p> <p>\u0110\u1eb7t \\(L = min(m, n)\\)</p> <p>\u0110\u1ec3 \u00fd r\u1eb1ng trong h\u00e0m QH\u0110 tr\u00ean, c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(F(i, j)\\) s\u1ebd kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(L\\), trong khi \u0111\u00f3 chi\u1ec1u th\u1ee9 hai c\u1ee7a tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 kh\u00e1 l\u1edbn (l\u00ean t\u1edbi \\(MAXM = 10^6\\)).</p> <p>\u0110\u1ec3 t\u1ed1i \u01b0u h\u00f3a, ta s\u1ebd \u0111\u1ed5i bi\u1ebfn. G\u1ecdi \\(dp(i, j)\\) l\u00e0 v\u1ecb tr\u00ed \\(k\\) nh\u1ecf nh\u1ea5t sao cho \\(LCS(A_{1..i}, B_{1..k}) = j\\).</p> <p>\u0110\u1ec3 t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(dp\\), ta s\u1ebd QH\u0110 theo ki\u1ec3u c\u1eadp nh\u1eadt \u0111i, thay v\u00ec \u0111i t\u00ecm c\u00f4ng th\u1ee9c tr\u1ef1c ti\u1ebfp cho c\u00e1c \\(dp(i, j)\\).</p> <p>G\u1ecdi \\(nextPos(i, c) = j &gt; i\\) nh\u1ecf nh\u1ea5t m\u00e0 \\(A_j = c\\) (v\u1edbi \\(c\\) l\u00e0 m\u1ed9t k\u00fd t\u1ef1 t\u1eeb 'A' \u0111\u1ebfn 'Z').</p> <p>M\u1ea3ng \\(nextPos\\) c\u00f3 th\u1ec3 t\u00ednh trong \\(T(M*26)\\).</p> <p>Nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb QH\u0110 nh\u01b0 sau:</p> <ul> <li>Ban \u0111\u1ea7u kh\u1edfi t\u1ea1o c\u00e1c gi\u00e1 tr\u1ecb \\(dp(i, j) = \\infty\\), \\(dp(0, 0) = 0\\).</li> <li>For \\(i\\) v\u00e0 \\(j\\) t\u0103ng d\u1ea7n, v\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb \\(dp(i, j)\\) kh\u00e1c v\u00f4 c\u00f9ng:<ul> <li>C\u1eadp nh\u1eadt \\(dp(i+1, j)\\) theo \\(dp(i, j)\\).</li> <li>G\u1ecdi \\(k\\) l\u00e0 v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n ti\u1ebfp theo c\u1ee7a \\(B_{i+1}\\) trong x\u00e2u \\(A\\) b\u1eaft \u0111\u1ea7u t\u1eeb v\u1ecb tr\u00ed \\(dp(i, j)\\), t\u1ee9c l\u00e0 \\(k = nextPos(dp(i, j), B_{i+1})\\).</li> <li>N\u1ebfu t\u1ed3n t\u1ea1i \\(k\\), c\u1eadp nh\u1eadt \\(dp(i+1, j+1)\\) theo \\(k\\).</li> </ul> </li> </ul> <p>\u0110\u1ec3 t\u00ednh k\u1ebft qu\u1ea3, ta s\u1ebd ch\u1ec9 c\u1ea7n t\u00ecm \\(j\\) l\u1edbn nh\u1ea5t m\u00e0 t\u1ed3n t\u1ea1i \\(dp(i, j)\\) kh\u00e1c v\u00f4 c\u00f9ng.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int M = 1e6 + 6;\nconst int N = 5005;\n\nint dp[N][N];\n\nchar a[M], b[N];\nint nextPos[M][26];\nint m, n;\n\nvoid minimize(int &amp;a, int b) {\n    if (a == -1 || a &gt; b) a = b;\n}\n\nint main() {\n    cin &gt;&gt; a + 1 &gt;&gt; b + 1;\n    m = strlen(a + 1); n = strlen(b + 1);\n    for (int c = 0; c &lt; 26; ++c)\n        for (int i = m - 1; i &gt;= 0; --i)\n            nextPos[i][c] = (a[i + 1] - 'A' == c) ? i + 1 : nextPos[i + 1][c];\n    int maxLength = min(m, n);\n    memset(dp, -1, sizeof dp);\n    dp[0][0] = 0;\n    for (int i = 0; i &lt; n; ++i) {\n        for (int j = 0; j &lt;= i; ++j) if (dp[i][j] &gt;= 0) {\n            minimize(dp[i + 1][j], dp[i][j]);\n            int new_value = nextPos[dp[i][j]][b[i + 1] - 'A'];\n            if (new_value &gt; 0)\n                minimize(dp[i + 1][j + 1], new_value);\n        }\n    }\n    int ans = 0;\n    for (int j = maxLength; j &gt; 0; --j) {\n        for (int i = j; i &lt;= n; ++i)\n            if (dp[i][j] &gt;= 0) ans = j;\n        if (ans != 0) break;\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#computer-vnoi-marathon-2010","title":"Computer (VNOI Marathon 2010)","text":"<p>Problem Link: COMPUTER - VNOJ.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>C\u00f4ng ty ph\u1ea7n m\u1ec1m XYZ m\u1edbi mua x m\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n v\u00e0 y m\u00e1y t\u00ednh x\u00e1ch tay. Gi\u00e1 m\u1ed9t m\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n l\u00e0 a \u0111\u1ed3ng c\u00f2n gi\u00e1 m\u1ed9t m\u00e1y t\u00ednh x\u00e1ch tay l\u00e0 b \u0111\u1ed3ng. \u0110\u1ec3 tr\u00e1nh s\u1ef1 th\u1eafc m\u1eafc gi\u1eefa c\u00e1c ph\u00f2ng b\u00e0n, T\u1ed5ng gi\u00e1m \u0111\u1ed1c \u0111\u00e3 \u0111\u01b0a ra c\u00e1ch ph\u00e2n b\u1ed1 c\u00e1c m\u00e1y t\u00ednh n\u00e0y v\u1ec1 n ph\u00f2ng ban nh\u01b0 sau:</p> <ul> <li>S\u1eafp x\u1ebfp n ph\u00f2ng ban theo th\u1ee9 t\u1ef1 v\u1ec1 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng c\u1ee7a c\u00e1c ph\u00f2ng ban.</li> <li>Ti\u1ebfn h\u00e0nh ph\u00e2n b\u1ed1 c\u00e1c m\u00e1y t\u00ednh cho c\u00e1c ph\u00f2ng ban b\u1ea3o \u0111\u1ea3m n\u1ebfu ph\u00f2ng ban i c\u00f3 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng nh\u1ecf h\u01a1n m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng c\u1ee7a ph\u00f2ng ban j th\u00ec t\u1ed5ng gi\u00e1 tr\u1ecb m\u00e1y t\u00ednh \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 cho ph\u00f2ng ban i kh\u00f4ng \u0111\u01b0\u1ee3c v\u01b0\u1ee3t qu\u00e1 t\u1ed5ng gi\u00e1 tr\u1ecb m\u00e1y t\u00ednh \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 cho ph\u00f2ng ban j.</li> <li>Ph\u00f2ng ban nh\u1eadn \u0111\u01b0\u1ee3c t\u1ed5ng gi\u00e1 tr\u1ecb m\u00e1y t\u00ednh nh\u1ecf nh\u1ea5t l\u00e0 l\u1edbn nh\u1ea5t.</li> </ul> <p>L\u00e0 m\u1ed9t l\u1eadp tr\u00ecnh vi\u00ean gi\u1ecfi nh\u01b0ng l\u1ea1i thu\u1ed9c ph\u00f2ng ban c\u00f3 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng nh\u1ecf nh\u1ea5t, Th\u1eafng mu\u1ed1n ch\u1ee9ng t\u1ecf tay ngh\u1ec1 c\u1ee7a m\u00ecnh v\u1edbi \u0111\u1ed3ng nghi\u1ec7p n\u00ean \u0111\u00e3 l\u1eadp tr\u00ecnh t\u00ednh ra ngay \u0111\u01b0\u1ee3c t\u1ed5ng gi\u00e1 tr\u1ecb m\u00e1y tr\u00ecnh m\u00e0 ph\u00f2ng ban m\u00ecnh nh\u1eadn \u0111\u01b0\u1ee3c r\u1ed3i m\u1eddi b\u1ea1n t\u00ednh l\u1ea1i th\u1eed xem!</p> <p>Y\u00eau c\u1ea7u</p> <p>Cho x, a, y, b, n. H\u00e3y t\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb m\u00e1y t\u00ednh m\u00e0 ph\u00f2ng Th\u1eafng nh\u1eadn \u0111\u01b0\u1ee3c.</p> <p>Input</p> <p>x, a, y, b, n kh\u00f4ng qu\u00e1 1000</p> <p>V\u00ed d\u1ee5</p> <pre><code>Input\n3 300 2 500 2\n\nOutput\n900\n\nInput\n4 300 3 500 2\n\nOutput\n1300\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_1","title":"L\u1eddi gi\u1ea3i","text":"<p>Tr\u01b0\u1edbc h\u1ebft ta s\u1ebd ch\u1eb7t nh\u1ecb ph\u00e2n k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n. V\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb ch\u1eb7t nh\u1ecb ph\u00e2n, ta c\u1ea7n ki\u1ec3m tra xem c\u00f3 t\u1ed3n t\u1ea1i ph\u01b0\u01a1ng \u00e1n th\u1ecfa m\u00e3n hay kh\u00f4ng.</p> <p>Thu\u1eadt to\u00e1n s\u01a1 khai</p> <p>\u0110\u1eb7t gi\u00e1 tr\u1ecb c\u1ea7n ki\u1ec3m tra l\u00e0 v.</p> <p>X\u00e9t c\u00e1c ph\u00f2ng ban theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n v\u1ec1 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng, \u0111\u00e1nh s\u1ed1 t\u1eeb 1.</p> <p>S\u1eed d\u1ee5ng m\u1ed9t m\u1ea3ng \u0111a chi\u1ec1u \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 \u0111\u1ea1t t\u1edbi. C\u00e1c gi\u00e1 tr\u1ecb c\u1ea7n qu\u1ea3n l\u00ed l\u00e0: ch\u1ec9 s\u1ed1 c\u1ee7a ph\u00f2ng ban, \u0111\u00e3 d\u00f9ng s\u1ed1 m\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n x, \u0111\u00e3 d\u00f9ng s\u1ed1 m\u00e1y t\u00ednh x\u00e1ch tay y, t\u1ed5ng gi\u00e1 tr\u1ecb m\u00e1y t\u00ednh c\u1ee7a ph\u00f2ng ban tr\u01b0\u1edbc \u0111\u00f3.</p> <p>B\u1eaft \u0111\u1ea7u t\u1eeb tr\u1ea1ng th\u00e1i (0, 0, 0, 0), ta s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n loang (BFS). Cu\u1ed1i c\u00f9ng n\u1ebfu tr\u1ea1ng th\u00e1i (n, 0, 0, ...) c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c, th\u00ec ta s\u1ebd c\u00f3 c\u00e1ch ph\u00e2n ho\u1ea1ch c\u00e1c m\u00e1y t\u00ednh v\u00e0o c\u00e1c ph\u00f2ng ban \u1ee9ng v\u1edbi gi\u00e1 tr\u1ecb c\u1eadn d\u01b0\u1edbi v.</p> <p>Kh\u00f4ng c\u1ea7n t\u00ednh to\u00e1n c\u1ee5 th\u1ec3 c\u0169ng c\u00f3 th\u1ec3 th\u1ea5y thu\u1eadt to\u00e1n n\u00e0y kh\u00f4ng th\u1ec3 \u0111\u00e1p \u1ee9ng v\u1ec1 m\u1eb7t th\u1eddi gian (v\u00e0 b\u1ed9 nh\u1edb) v\u1edbi gi\u1edbi h\u1ea1n c\u1ee7a \u0111\u1ec1 b\u00e0i.</p> <p>N\u00e2ng c\u1ea5p b\u1eb1ng nh\u1eadn x\u00e9t</p> <p>Nh\u1eadn x\u00e9t r\u1eb1ng ta kh\u00f4ng c\u1ea7n quan t\u00e2m t\u1edbi th\u1ee9 t\u1ef1 v\u1ec1 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng c\u1ee7a c\u00e1c ph\u00f2ng ban. V\u1edbi m\u1ed9t c\u00e1ch ph\u00e2n ho\u1ea1ch c\u00e1c m\u00e1y t\u00ednh sao cho m\u1ed7i ph\u00f2ng nh\u1eadn \u0111\u01b0\u1ee3c t\u1ed5ng gi\u00e1 tr\u1ecb kh\u00f4ng nh\u1ecf h\u01a1n v, ta lu\u00f4n c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp c\u00e1c b\u1ed9 theo gi\u00e1 tr\u1ecb kh\u00f4ng gi\u1ea3m \u1ee9ng v\u1edbi c\u00e1c ph\u00f2ng ban.</p> <p>Ta c\u00f3 tr\u1ea1ng th\u00e1i QH\u0110 l\u00e0 \\(F(i, x, y, value) = true\\) n\u1ebfu c\u00f3 th\u1ec3 ph\u00e2n b\u1ed5 m\u00e1y t\u00ednh cho i ph\u00f2ng ban, \u0111\u00e3 d\u00f9ng x m\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n v\u00e0 y m\u00e1y t\u00ednh x\u00e1ch tay, \u0111\u00e3 gom \u0111\u01b0\u1ee3c t\u1ed5ng gi\u00e1 tr\u1ecb v cho ph\u00f2ng th\u1ee9 \\(i+1\\). C\u00e1ch l\u00e0m n\u00e0y s\u1ed1 tr\u1ea1ng th\u00e1i v\u1eabn nh\u01b0 tr\u01b0\u1edbc nh\u01b0ng ta \u0111\u00e3 c\u00f3 th\u1ec3 chuy\u1ec3n tr\u1ea1ng th\u00e1i trong \\(O(1)\\). C\u1ee5 th\u1ec3 t\u1eeb \\(F(i, x, y, value)\\) ta chuy\u1ec3n \u0111\u1ebfn \\(F(i, x+1, y, value+a)\\) ho\u1eb7c \\(F(i, x, y+1, value+b)\\), ch\u00fa \u00fd l\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 d\u00f9ng th\u00eam m\u00e1y x\u00e1ch tay n\u1ebfu \\(x&lt;X\\) v\u00e0 d\u00f9ng th\u00eam m\u00e1y \u0111\u1ec3 b\u00e0n n\u1ebfu \\(y&lt;Y\\), \u0111\u1ed3ng th\u1eddi n\u1ebfu gi\u00e1 tr\u1ecb value \u0111\u1ee7 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng v th\u00ec ta chuy\u1ec3n sang tr\u1ea1ng th\u00e1i \\(F(i+1, x, y, 0)\\) lu\u00f4n.</p> <p>\u0110\u1ed5i bi\u1ebfn</p> <p>\u1ede b\u00e0i n\u00e0y, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u1ed5i bi\u1ebfn value ra l\u00e0m h\u00e0m m\u1ee5c ti\u00eau. Nh\u01b0ng kh\u00f4ng ch\u1ec9 c\u00f3 v\u1eady, ta c\u00f3 th\u1ec3 \u0111\u1ea9y c\u1ea3 i ra ngo\u00e0i! C\u1ee5 th\u1ec3, \\(F(x, y)\\) = m\u1ed9t c\u1eb7p s\u1ed1 \\((i, value)\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 s\u1ed1 ph\u00f2ng ph\u00e2n b\u1ed1 \u0111\u01b0\u1ee3c v\u00e0 s\u1ed1 ti\u1ec1n gom \u0111\u01b0\u1ee3c. H\u00e0m m\u1ee5c ti\u00eau c\u1ee7a \\(F(x, y)\\) l\u00e0 m\u1ed9t c\u1eb7p s\u1ed1 ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 so s\u00e1nh \u0111\u01b0\u1ee3c, trong \u0111\u00f3 gi\u00e1 tr\u1ecb \u0111\u1ea7u (i) \u0111\u01b0\u1ee3c \u01b0u ti\u00ean so s\u00e1nh tr\u01b0\u1edbc.</p> <p>C\u00e1ch c\u1eadp nh\u1eadt c\u00e1c \\(F(x, y)\\) gi\u1ed1ng nh\u01b0 ph\u1ea7n tr\u01b0\u1edbc, \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1eabn l\u00e0 O(1) cho b\u01b0\u1edbc chuy\u1ec3n tr\u1ea1ng th\u00e1i, trong khi s\u1ed1 tr\u1ea1ng th\u00e1i l\u00fac n\u00e0y l\u00e0 \u0111\u1ee7 nh\u1ecf \u0111\u1ed1i v\u1edbi gi\u1edbi h\u1ea1n c\u1ee7a \u0111\u1ec1 b\u00e0i.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1010;\n\nint x, y, a, b, n;\n\npair&lt;int, int&gt; F[N][N];\n\npair&lt;int, int&gt; newState(pair&lt;int, int&gt; s, int a, int v) {\n    s.second += a;\n    if (s.second &gt;= v) {\n        ++s.first;\n        s.second = 0;\n    }\n    return s;\n}\n\nbool dp(int value) {\n    for (int i = 0; i &lt;= x; ++i) for (int j = 0; j &lt;= y; ++j)\n        F[i][j] = make_pair(0, 0);\n    for (int i = 0; i &lt;= x; ++i) for (int j = 0; j &lt;= y; ++j) {\n        if (F[i][j].first == n) return 1;\n        if (i &lt; x)\n            F[i + 1][j] = max(F[i + 1][j], newState(F[i][j], a, value));\n        if (j &lt; y)\n            F[i][j + 1] = max(F[i][j + 1], newState(F[i][j], b, value));\n    }\n    return 0;\n}\n\nint solve() {\n    int l = 0, r = (a * x + b * y) / n;\n    int ans = 0;\n    while (l &lt;= r) {\n        int mid = l + r &gt;&gt; 1;\n        if (dp(mid)) {\n            ans = mid;\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return ans;\n}\n\nint main() {\n    cin &gt;&gt; x &gt;&gt; a &gt;&gt; y &gt;&gt; b &gt;&gt; n;\n    cout &lt;&lt; solve() &lt;&lt; endl;\n    cin &gt;&gt; x &gt;&gt; a &gt;&gt; y &gt;&gt; b &gt;&gt; n;\n    cout &lt;&lt; solve() &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bai-luyen-tap","title":"B\u00e0i luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOJ - BINPACK</li> </ul>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#2-chia-e-tri","title":"2. Chia \u0111\u1ec3 tr\u1ecb","text":"<p>\u0110\u00e2y l\u00e0 k\u1ef9 thu\u1eadt kh\u00e1 hi\u1ebfm g\u1eb7p, tuy nhi\u00ean l\u1ea1i c\u1ef1c k\u1ef3 m\u1ea1nh.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bai-tap-vi-du_1","title":"B\u00e0i t\u1eadp v\u00ed d\u1ee5","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#hai-nha-may-ceoi-2004","title":"Hai nh\u00e0 m\u00e1y CEOI 2004","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>C\u00f3 \\(n\\) c\u00e2y c\u1ed5 th\u1ee5 \u0111\u01b0\u1ee3c tr\u1ed3ng tr\u00ean m\u1ed9t con \u0111\u01b0\u1eddng t\u1eeb \u0111\u1ec9nh \u0111\u1ed5i \u0111\u1ebfn ch\u00e2n \u0111\u1ed3i. Ch\u00ednh ph\u1ee7 \u0111\u1ecba ph\u01b0\u01a1ng quy\u1ebft \u0111\u1ecbnh c\u1eaft b\u1ecf ch\u00fang. \u0110\u1ec3 tr\u00e1nh hoang ph\u00ed, m\u1ed7i c\u00e1i c\u00e2y c\u1ea7n \u0111\u01b0\u1ee3c chuy\u1ec3n \u0111\u1ebfn m\u1ed9t nh\u00e0 m\u00e1y c\u01b0a.</p> <p>C\u00e2y ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c v\u1eadn chuy\u1ec3n theo m\u1ed9t chi\u1ec1u duy nh\u1ea5t: h\u01b0\u1edbng v\u1ec1 ch\u00e2n \u0111\u1ed3i. C\u00f3 m\u1ed9t nh\u00e0 m\u00e1y c\u01b0a \u1edf cu\u1ed1i con \u0111\u01b0\u1eddng. Hai nh\u00e0 m\u00e1y c\u01b0a c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ecdc theo con \u0111\u01b0\u1eddng. H\u00e3y x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed t\u1ed1i \u01b0u \u0111\u1ec3 x\u00e2y d\u1ef1ng ch\u00fang, \u0111\u1ec3 c\u1ef1c ti\u1ec3u h\u00f3a chi ph\u00ed v\u1eadn chuy\u1ec3n. Chi ph\u00ed v\u1eadn chuy\u1ec3n 1kg g\u1ed7 \u0111i 1 m\u00e9t l\u00e0 1 cent.</p> <p>Y\u00eau c\u1ea7u</p> <p>Vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh:</p> <ul> <li>\u0111\u1ecdc d\u1eef li\u1ec7u t\u1eeb \u0111\u1ea7u v\u00e0o chu\u1ea9n s\u1ed1 l\u01b0\u1ee3ng c\u00e2y, kh\u1ed1i l\u01b0\u1ee3ng v\u00e0 v\u1ecb tr\u00ed c\u1ee7a ch\u00fang,</li> <li>t\u00ednh to\u00e1n chi ph\u00ed v\u1eadn chuy\u1ec3n t\u1ed1i \u01b0u nh\u1ea5t,</li> <li>xu\u1ea5t k\u1ebft qu\u1ea3 ra \u0111\u1ea7u ra chu\u1ea9n.</li> </ul> <p>Input</p> <p>D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a s\u1ed1 \\(n\\) - s\u1ed1 l\u01b0\u1ee3ng c\u00e2y \\((2 \\le n \\le 20,000)\\). C\u00e1c c\u00e2y \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 \\(1, 2, ..., n\\), theo chi\u1ec1u t\u1eeb \u0111\u1ec9nh \u0111\u1ed3i \u0111\u1ebfn ch\u00e2n \u0111\u1ed3i.</p> <p>\\(n\\) d\u00f2ng ti\u1ebfp theo m\u1ed7i d\u00f2ng ch\u1ee9a hai s\u1ed1 nguy\u00ean d\u01b0\u01a1ng c\u00e1ch nhau b\u1edfi d\u1ea5u c\u00e1ch. D\u00f2ng th\u1ee9 \\(i + 1\\) ch\u1ee9a \\(w_i\\) - kh\u1ed1i l\u01b0\u1ee3ng t\u00ednh theo kg c\u1ee7a c\u00e1i c\u00e2y th\u1eed i v\u00e0 \\(d_i\\) - kho\u1ea3ng c\u00e1ch t\u00ednh theo m\u00e9t gi\u1eefa c\u00e2y th\u1ee9 i v\u00e0 c\u00e2y \\(i + 1\\), \\(1 \\le w_i \\le 10000, 0 \\le d_i \\le 10000\\). S\u1ed1 cu\u1ed1i c\u00f9ng, \\(d_n\\) l\u00e0 kho\u1ea3ng c\u00e1ch t\u1eeb c\u00e2y th\u1ee9 n \u0111\u1ebfn ch\u00e2n \u0111\u1ed3i. D\u1eef li\u1ec7u v\u00e0o \u0111\u1ea3m b\u1ea3o k\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(2 * 10^9\\) cent.</p> <p>Output</p> <p>M\u1ed9t d\u00f2ng duy nh\u1ea5t ch\u1ee9a m\u1ed9t s\u1ed1 l\u00e0 k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n: chi ph\u00ed v\u1eadn chuy\u1ec3n nh\u1ecf nh\u1ea5t.</p> <p>V\u00ed d\u1ee5</p> <pre><code>Input\n\n9\n1 2\n2 1\n3 3\n1 1\n3 2\n1 6\n2 1\n1 2\n1 1\n\nOutput\n\n26\n</code></pre> <p></p> <p>H\u00ecnh v\u1ebd tr\u00ean minh h\u1ecda cho test v\u00ed d\u1ee5. C\u00e1c h\u00ecnh tr\u00f2n \u0111\u01b0\u1ee3c t\u00f4 \u0111en l\u00e0 c\u00e1c v\u1ecb tr\u00ed c\u00f3 nh\u00e0 m\u00e1y. K\u1ebft qu\u1ea3 s\u1ebd l\u00e0:</p> <p>\\(1 * (2+1) + 2 * 1 + 1 * (1 + 2) + 3 * 2 + 2 * (1 + 2 + 1) + 1 * (2 + 1) + 1 * 1 = 26\\).</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_2","title":"L\u1eddi gi\u1ea3i","text":"<p>Tr\u01b0\u1edbc h\u1ebft ta s\u1ebd gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 t\u00ednh chi ph\u00ed v\u1eadn chuy\u1ec3n n\u1ebfu bi\u1ebft v\u1ecb tr\u00ed c\u1ee7a hai nh\u00e0 m\u00e1y \u0111\u1eb7t th\u00eam.</p> <p>N\u1ebfu ta c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c chi ph\u00ed n\u00e0y trong \\(O(1)\\), b\u00e0i to\u00e1n s\u1ebd c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c trong \\(O(N^2)\\) - ta c\u00f3 th\u1ec3 for h\u1ebft c\u00e1c c\u1eb7p v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u1eb7t nh\u00e0 m\u00e1y.</p> <p>G\u1ecdi:</p> <ul> <li>\\(sumW_i\\) l\u00e0 t\u1ed5ng c\u1ee7a c\u00e1c \\(w_j\\) v\u1edbi \\(i \\le j\\).</li> <li>\\(sumD_i\\) l\u00e0 t\u1ed5ng c\u1ee7a c\u00e1c \\(d_j\\) v\u1edbi \\(i \\le j\\).</li> <li>\\(sumWS_i\\) l\u00e0 t\u1ed5ng c\u1ee7a c\u00e1c \\(w_j * sumD_j\\) v\u1edbi \\(i \\le j\\).</li> </ul> <p>Khi \u0111\u00f3 \\(cost(L, R)\\) l\u00e0 chi ph\u00ed v\u1eadn chuy\u1ec3n c\u00e1c c\u00e2y c\u00f3 ch\u1ec9 s\u1ed1 trong \u0111o\u1ea1n \\([L,R]\\) \u0111\u1ebfn nh\u00e0 m\u00e1y \u0111\u1eb7t \u1edf \\(R\\) l\u00e0: \\(sumWS_L - sumWS_R - sumD_R * (sumW_L - sumW_R)\\).</p> <p>Nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng h\u00e0m \\(eval(i, j)\\) = chi ph\u00ed n\u1ebfu \u0111\u1eb7t th\u00eam hai nh\u00e0 m\u00e1y \u1edf i v\u00e0 j = \\(cost(1, i) + cost(i + 1, j) + cost(j + 1, n + 1)\\).</p> <p>Tuy nhi\u00ean l\u1eddi gi\u1ea3i \\(O(N^2)\\) l\u00e0 ch\u01b0a \u0111\u1ee7 t\u1ed1t \u0111\u1ec3 c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft tr\u1ecdn v\u1eb9n b\u00e0i to\u00e1n n\u00e0y.</p> <p>G\u1ecdi \\(best(i)\\) l\u00e0 v\u1ecb tr\u00ed \\(j &gt; i\\) t\u1ed1t nh\u1ea5t n\u1ebfu ta \u0111\u00e3 \u0111\u1eb7t m\u1ed9t nh\u00e0 m\u00e1y \u1edf i.</p> <p>Nh\u01b0 v\u1eady k\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(min(eval(i, best_i)\\) v\u1edbi \\(1 \\le i &lt; n\\).</p> <p>Nh\u1eadn x\u00e9t:</p> <ul> <li>\\(best_i \\le best_{i + 1}\\). C\u00f3 th\u1ec3 vi\u1ebft t\u01b0\u1eddng minh c\u00f4ng th\u1ee9c \u0111\u1ec3 ch\u1ee9ng minh.</li> <li>Ta c\u00f3 th\u1ec3 t\u00ednh c\u00e1c \\(best_i\\) theo th\u1ee9 t\u1ef1 b\u1ea5t k\u1ef3. V\u00ec c\u00e1c gi\u00e1 tr\u1ecb \\(best\\) kh\u00f4ng li\u00ean quan \u0111\u1ebfn nhau n\u00ean VD ta c\u00f3 th\u1ec3 t\u00ednh \\(best(3)\\) r\u1ed3i \\(best(1)\\) v\u00e0 \\(best(2)\\).</li> </ul> <p>Nh\u01b0 v\u1eady ta c\u00f3 thu\u1eadt to\u00e1n s\u1eed d\u1ee5ng t\u01b0 t\u01b0\u1edfng chia \u0111\u1ec3 tr\u1ecb nh\u01b0 sau:</p> <p>H\u00e0m \\(solve(L, R, from, to)\\) s\u1ebd \u0111i t\u00ednh c\u00e1c \\(best(L..R)\\), bi\u1ebft r\u1eb1ng ch\u00fang n\u1eb1m trong \u0111o\u1ea1n \\([from..to]\\).</p> <pre><code>void solve(int L, int R, int from, int to) {\n    if (L &gt; R) return;\n    int mid = L + R &gt;&gt; 1;\n    best[mid] = from;\n    for (int i = from + 1; i &lt;= to; ++i)\n        if (eval(mid + 1, best[mid]) &gt; eval(mid + 1, i))\n            best[mid] = i;\n    solve(L, mid - 1, from, best[mid]);\n    solve(mid + 1, R, best[mid], to);\n}\n</code></pre> <p>\u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n: v\u00ec m\u1ed7i l\u1ea7n g\u1ecdi \u0111\u1ec3 quy kho\u1ea3ng \\([L,R]\\) \u0111\u01b0\u1ee3c chia \u0111\u00f4i, n\u00ean s\u1ebd c\u00f3 \\(O(logN)\\) t\u1ea7ng, m\u1ed7i t\u1ea7ng v\u00f2ng for ch\u1ec9 ch\u1ea1y qua \\(O(N)\\) ph\u1ea7n t\u1eed, v\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(NlogN)\\).</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#seqpart-hackerrank","title":"SEQPART - Hackerrank","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_3","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho d\u00e3y \\(L\\) s\u1ed1 \\(C[1..L]\\), c\u1ea7n chia d\u00e3y n\u00e0y th\u00e0nh \\(G\\) \u0111o\u1ea1n li\u00ean ti\u1ebfp. V\u1edbi ph\u1ea7n t\u1eed th\u1ee9 \\(i\\), ta \u0111\u1ecbnh ngh\u0129a chi ph\u00ed c\u1ee7a n\u00f3 l\u00e0 t\u00edch c\u1ee7a \\(C[i]\\) v\u00e0 s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 n\u1eb1m c\u00f9ng \u0111o\u1ea1n li\u00ean ti\u1ebfp v\u1edbi n\u00f3. Chi ph\u00ed c\u1ee7a d\u00e3y s\u1ed1 \u1ee9ng v\u1edbi m\u1ed9t c\u00e1ch ph\u00e2n ho\u1ea1ch l\u00e0 t\u1ed5ng c\u00e1c chi ph\u00ed c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed.</p> <p>H\u00e3y x\u00e1c \u0111\u1ecbnh c\u00e1ch ph\u00e2n ho\u1ea1ch d\u00e3y s\u1ed1 \u0111\u1ec3 chi ph\u00ed l\u00e0 nh\u1ecf nh\u1ea5t.</p> <p>Input</p> <ul> <li>D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a 2 s\u1ed1 \\(L\\) v\u00e0 \\(G\\).</li> <li>\\(L\\) d\u00f2ng ti\u1ebfp theo, ch\u1ee9a gi\u00e1 tr\u1ecb c\u1ee7a d\u00e3y \\(C\\).</li> </ul> <p>Output</p> <ul> <li>M\u1ed9t d\u00f2ng duy nh\u1ea5t ch\u1ee9a chi ph\u00ed nh\u1ecf nh\u1ea5t.</li> </ul> <p>Gi\u1edbi h\u1ea1n</p> <ul> <li>\\(1 \\le L \\le 8000\\).</li> <li>\\(1 \\le G \\le 800\\).</li> <li>\\(1 \\le C(i) \\le 10^9\\).</li> </ul> <p>V\u00ed d\u1ee5</p> <pre><code>Input\n6 3\n11\n11\n11\n24\n26\n100\n\nOutput\n299\n</code></pre> <p>Gi\u1ea3i th\u00edch: c\u00e1ch t\u1ed1i \u01b0u l\u00e0 \\(C[] = (11, 11, 11), (24, 26), (100)\\).</p> <p>Chi ph\u00ed l\u00e0 \\(11 * 3 + 11 * 3 + 11 * 3 + 24 * 2 + 26 * 2 + 100 * 1 = 299\\).</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_3","title":"L\u1eddi gi\u1ea3i","text":"<p>\u0110\u00e2y l\u00e0 d\u1ea1ng b\u00e0i to\u00e1n ph\u00e2n ho\u1ea1ch d\u00e3y s\u1ed1 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng gi\u1ea3i b\u00e0i QH\u0110. G\u1ecdi \\(F(g, i)\\) l\u00e0 chi ph\u00ed nh\u1ecf nh\u1ea5t n\u1ebfu ta ph\u00e2n ho\u1ea1ch \\(i\\) ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean th\u00e0nh \\(g\\) nh\u00f3m, khi \u0111\u00f3 k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(F(G, L)\\).</p> <p>\u0110\u1ec3 t\u00ecm c\u00f4ng th\u1ee9c truy h\u1ed3i cho h\u00e0m \\(F(g, i)\\), ta s\u1ebd quan t\u00e2m \u0111\u1ebfn nh\u00f3m cu\u1ed1i c\u00f9ng. Coi ph\u1ea7n t\u1eed 0 l\u00e0 ph\u1ea7n t\u1eed c\u1ea7m canh \u1edf tr\u01b0\u1edbc ph\u1ea7n t\u1eed th\u1ee9 nh\u1ea5t, th\u00ec ng\u01b0\u1eddi cu\u1ed1i c\u00f9ng kh\u00f4ng thu\u1ed9c nh\u00f3m cu\u1ed1i c\u00f3 ch\u1ec9 s\u1ed1 trong \u0111o\u1ea1n \\([0, i]\\). Gi\u1ea3 s\u1eed \u0111\u00f3 l\u00e0 ng\u01b0\u1eddi v\u1edbi ch\u1ec9 s\u1ed1 k, th\u00ec chi ph\u00ed c\u1ee7a c\u00e1ch ph\u00e2n ho\u1ea1ch s\u1ebd l\u00e0 \\(F(g-1, k) + Cost(k+1, i)\\), v\u1edbi \\(Cost(i, j)\\) l\u00e0 chi ph\u00ed n\u1ebfu ph\u00e2n \\(j-i+1\\) ng\u01b0\u1eddi c\u00f3 ch\u1ec9 s\u1ed1 \\([i, j]\\) v\u00e0o m\u1ed9t nh\u00f3m. Nh\u01b0 v\u1eady:</p> <p>\\(F(g, i) = min(F(g-1, k) + Cost(k+1, l))\\) v\u1edbi \\(0 &lt;= k &lt;= i\\).</p> <p>Ch\u00fa \u00fd l\u00e0 c\u00f4ng th\u1ee9c n\u00e0y ch\u1ec9 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng v\u1edbi \\(g&gt;1\\), n\u1ebfu \\(g=1, F(1, i) = Cost(1, i)\\), \u0111\u00e2y l\u00e0 tr\u01b0\u1eddng h\u1ee3p c\u01a1 s\u1edf.</p> <p>Vi\u1ec7c c\u00e0i \u0111\u1eb7t ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 d\u1ef1ng m\u1ea3ng 2 chi\u1ec1u \\(F[][]\\), code nh\u01b0 sau:</p> <pre><code>## include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int MAXL = 8008;\nconst int MAXG = 808;\nconst long long INF = (long long)1e18;\n\nlong long C[MAXL];\nlong long sum[MAXL];\nlong long F[MAXG][MAXL];\n\nlong long cost(int i, int j) {\n    return (sum[j] - sum[i - 1]) * (j - i + 1);\n}\n\nint main() {\n    int G, L;\n    cin &gt;&gt; L &gt;&gt; G;\n    for (int i = 1; i &lt;= L; ++i) {\n        cin &gt;&gt; C[i];\n        sum[i] = sum[i - 1] + C[i];\n    }\n\n    for (int g = 1; g &lt;= G; ++g) {\n        for (int i = 0; i &lt;= L; ++i) {\n            if (g == 1) {\n                F[g][i] = cost(1, i);\n            } else {\n                F[g][i] = INF;\n                for (int k = 0; k &lt;= i; ++k) {\n                    long long new_cost = F[g - 1][k] + cost(k + 1, i);\n                    if (F[g][i] &gt; new_cost) F[g][i] = new_cost;\n                }\n            }\n        }\n    }\n    cout &lt;&lt; F[G][L] &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>Ch\u00fa \u00fd l\u00e0 ta s\u1eed d\u1ee5ng m\u1ea3ng \\(sum[]\\) ti\u1ec1n x\u1eed l\u00ed \\(O(L)\\) \u0111\u1ec3 c\u00f3 th\u1ec3 truy v\u1ea5n t\u1ed5ng m\u1ed9t \u0111o\u1ea1n (d\u00f9ng \u1edf h\u00e0m \\(cost()\\)) trong \\(O(1)\\). Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(G \\*L \\* L)\\).</p> <p>Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u h\u01a1n</p> <p>G\u1ecdi \\(P(g, i)\\) l\u00e0 k nh\u1ecf nh\u1ea5t \u0111\u1ec3 c\u1ef1c ti\u1ec3u h\u00f3a \\(F(g, i)\\), n\u00f3i c\u00e1ch kh\u00e1c, \\(P(g, i)\\) l\u00e0 k nh\u1ecf nh\u1ea5t m\u00e0 \\(F(g, i) = F(g-1, k) + Cost(k+1, i)\\).</p> <p>T\u00ednh ch\u1ea5t quan tr\u1ecdng \u0111\u1ec3 c\u00f3 th\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n tr\u00ean l\u00e0 d\u1ef1a v\u00e0o t\u00ednh \u0111\u01a1n \u0111i\u1ec7u c\u1ee7a \\(P(g, i)\\), c\u1ee5 th\u1ec3:</p> <p>\\(P(g, 0) \\le P(g, 1) \\le P(g, 2) \\le \\cdots \\le P(g, L-1) \\le P(g, L)\\)</p> <p>Ta s\u1ebd kh\u00f4ng ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y \u1edf \u0111\u00e2y, \u0111\u1ed9c gi\u1ea3 c\u00f3 th\u1ec3 t\u1ef1 thuy\u1ebft ph\u1ee5c r\u1eb1ng \u0111i\u1ec1u n\u00e0y l\u00e0 \u0111\u00fang.</p> <p>Chia \u0111\u1ec3 tr\u1ecb</p> <p>\u0110\u1ec3 \u00fd r\u1eb1ng \u0111\u1ec3 t\u00ednh \\(F(g, i)\\), ta ch\u1ec9 c\u1ea7n quan t\u00e2m t\u1edbi h\u00e0ng tr\u01b0\u1edbc \\(F(g-1)\\) c\u1ee7a ma tr\u1eadn:</p> <p>\\(F(g-1, 0), F(g-1, 1), ... , F(g-1, L)\\).</p> <p>Nh\u01b0 v\u1eady, ta c\u00f3 th\u1ec3 t\u00ednh h\u00e0ng \\(F(g)\\) theo th\u1ee9 t\u1ef1 b\u1ea5t k\u1ef3.</p> <p>\u00dd t\u01b0\u1edfng l\u00e0 v\u1edbi h\u00e0ng \\(g\\), tr\u01b0\u1edbc h\u1ebft ta t\u00ednh \\(F(g, mid)\\) v\u00e0 \\(P(g, mid)\\) v\u1edbi \\(mid=L/2\\), sau \u0111\u00f3 s\u1eed d\u1ee5ng t\u00ednh ch\u1ea5t n\u00eau tr\u00ean \\(P(g, i) \\le P(g, mid)\\) v\u1edbi \\(i &lt; mid\\) v\u00e0 \\(P(g, i) \\ge P(g, mid)\\) v\u1edbi \\(i &gt; mid\\) \u0111\u1ec3 \u0111i g\u1ecdi \u0111\u1ec7 quy \u0111i t\u00ednh hai n\u1eeda c\u00f2n l\u1ea1i.</p> <pre><code>## include &lt;iostream&gt;\n\nconst int MAXL = 8008;\nconst int MAXG = 808;\nconst long long INF = (long long)1e18;\n\nusing namespace std;\n\nlong long F[MAXG][MAXL], sum[MAXL], C[MAXL];\nint P[MAXG][MAXL];\n\nlong long cost(int i, int j) {\n    if (i &gt; j) return 0;\n    return (sum[j] - sum[i - 1]) * (j - i + 1);\n}\n\nvoid solve(int g, int L, int R, int optL, int optR) {\n    if (L &gt; R) return;\n    int mid = (L + R) / 2;\n    F[g][mid] = INF;\n    for (int i = optL; i &lt;= optR; ++i) {\n        long long new_cost = F[g - 1][i] + cost(i + 1, mid);\n        if (F[g][mid] &gt; new_cost) {\n            F[g][mid] = new_cost;\n            P[g][mid] = i;\n        }\n    }\n    solve(g, L, mid - 1, optL, P[g][mid]);\n    solve(g, mid + 1, R, P[g][mid], optR);\n}\n\nint main() {\n    int G, L;\n    cin &gt;&gt; L &gt;&gt; G;\n    for (int i = 1; i &lt;= L; ++i) {\n        cin &gt;&gt; C[i];\n        sum[i] = sum[i - 1] + C[i];\n    }\n    for (int i = 1; i &lt;= L; ++i) F[1][i] = cost(1, i);\n    for (int g = 2; g &lt;= G; ++g) solve(g, 1, L, 1, L);\n    cout &lt;&lt; F[G][L] &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>Ch\u00fa \u00fd r\u1eb1ng ta kh\u00f4ng th\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng \\(P(g,mid)\\) chia \u0111\u00f4i \u0111o\u1ea1n \\([optL, optR]\\), th\u1ef1c t\u1ebf m\u1ed9t v\u00e0i h\u00e0m \\(solve()\\) s\u1ebd ch\u1ea1y ch\u1eadm h\u01a1n nhi\u1ec1u h\u00e0m \\(solve()\\) kh\u00e1c.</p> <p>Tuy nhi\u00ean ta c\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c, x\u00e9t v\u1ec1 t\u1ed5ng th\u1ebf thu\u1eadt to\u00e1n n\u00e0y ch\u1ea1y \u0111\u1ee7 nhanh. M\u1ed7i l\u1ea7n ta chia \u0111\u00f4i \u0111o\u1ea1n \\([L, R]\\), n\u00ean ta s\u1ebd \u0111\u1ea3m b\u1ea3o c\u00f3 t\u1ed1i \u0111a \\(O(log(L))\\) t\u1ea7ng \u0111\u1ec7 quy, nh\u01b0 v\u1eady v\u1edbi m\u1ed7i h\u00e0ng \\(g\\), ta ch\u1ec9 m\u1ea5t \\(O(L \\* logL)\\) \u0111\u1ec3 t\u00ednh. To\u00e0n b\u1ed9 thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(G \\* L \\* logL)\\).</p> <p></p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#ieu-kien-e-chia-e-tri-ung","title":"\u0110i\u1ec1u ki\u1ec7n \u0111\u1ec3 Chia \u0111\u1ec3 tr\u1ecb \u0111\u00fang","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#ieu-kien-theo-best","title":"\u0110i\u1ec1u ki\u1ec7n theo best","text":"<p>Nh\u01b0 \u1edf b\u00e0i Hai nh\u00e0 m\u00e1y CEOI 2004:</p> <p>N\u1ebfu \\(best(i) \\le best(i+1)\\), ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng chia \u0111\u1ec3 tr\u1ecb.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#ieu-kien-theo-cost","title":"\u0110i\u1ec1u ki\u1ec7n theo cost","text":"<p>N\u1ebfu h\u00e0m cost tho\u1ea3 m\u00e3n quadrangle inequalities:</p> <p>\\(cost(a, d) + cost(b, c) \\ge cost(a, c) + cost(b, d)\\) v\u1edbi m\u1ecdi \\(a &lt; b &lt; c &lt; d\\),</p> <p>ta c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng QH\u0110 chia \u0111\u1ec3 tr\u1ecb.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bai-luyen-tap_1","title":"B\u00e0i luy\u1ec7n t\u1eadp","text":"<ul> <li>F - ACM ICPC Vietnam Regional 2017</li> <li>Hackerrank - Mining</li> </ul>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#3-bao-loi-uong-thang","title":"3. Bao l\u1ed3i \u0111\u01b0\u1eddng th\u1eb3ng","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 k\u1ef9 thu\u1eadt bao l\u1ed3i \u1edf link n\u00e0y</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#4-toi-uu-bang-stack","title":"4. T\u1ed1i \u01b0u b\u1eb1ng stack","text":"<p>C\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a stack cho ph\u00e9p ta x\u00e2y d\u1ef1ng m\u1ed9t s\u1ed1 k\u1ef9 thu\u1eadt \u0111\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bai-tap-vi-du_2","title":"B\u00e0i t\u1eadp v\u00ed d\u1ee5","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#blocks-izho-2014","title":"BLOCKS - IZHO 2014","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_4","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho d\u00e3y s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(a[1], a[2], \u2026, a[N]\\). X\u00e9t c\u00e1c chia d\u00e3y s\u1ed1 \\(a\\) th\u00e0nh \\(K\\) nh\u00f3m sao cho m\u1ed7i nh\u00f3m ch\u1ee9a m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a \\(a\\). G\u1ecdi tr\u1ecdng s\u1ed1 c\u1ee7a m\u1ed9t c\u00e1ch chia l\u00e0 t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t c\u1ee7a m\u1ed7i nh\u00f3m.</p> <p>Y\u00eau c\u1ea7u</p> <p>T\u00ecm c\u00e1ch chia d\u00e3y s\u1ed1 th\u00e0nh \\(K\\) nh\u00f3m sao cho tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e1ch chia l\u00e0 nh\u1ecf nh\u1ea5t.</p> <p>Input  - D\u00f2ng 1 ch\u1ee9a hai s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(N\\) v\u00e0 \\(K\\) (\\(K \\le N\\))  - D\u00f2ng 2 g\u1ed3m \\(N\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(a[1], a[2], \u2026, a[N]\\)</p> <p>Output  - G\u1ed3m m\u1ed9t s\u1ed1 nguy\u00ean duy nh\u1ea5t l\u00e0 tr\u1ecdng s\u1ed1 t\u00ecm \u0111\u01b0\u1ee3c</p> <p>V\u00ed d\u1ee5 <pre><code>Input\n5 1\n1 2 3 4 5\nOutput\n5\n\nInput\n5 2\n1 2 3 4 5\nOutput\n6\n</code></pre></p> <p>Gi\u1edbi h\u1ea1n  - \\(1 \\le N \\le 100000\\)  - \\(1 \\le K \\le 100\\)  - \\(a[i] \\le 1000000\\)</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_4","title":"L\u1eddi gi\u1ea3i","text":"<p>Thu\u1eadt to\u00e1n QH\u0110 c\u01a1 s\u1edf</p> <p>G\u1ecdi \\(F(i, j)\\) l\u00e0 t\u1ed5ng tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t \u0111\u1ec3 chia \\(j\\) s\u1ed1 \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y th\u00e0nh \\(i\\) nh\u00f3m. C\u00f4ng th\u1ee9c truy h\u1ed3i l\u00e0 \\(F(i, j) = min[F(i-1, j\u2019) + max(a[j\u2019+1 .. j])]\\) v\u1edbi \\(j\u2019&lt;j\\).</p> <p>C\u00f4ng th\u1ee9c QH\u0110 n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i trong \\(O(N^2 * K)\\), tuy nhi\u00ean nh\u01b0 v\u1eady c\u0169ng ch\u01b0a \u0111\u1ea1t y\u00eau c\u1ea7u.</p> <p>N\u00e2ng c\u1ea5p thu\u1eadt to\u00e1n</p> <p>Ta th\u1ea5y r\u1eb1ng chi ph\u00ed chuy\u1ec3n tr\u1ea1ng th\u00e1i c\u1ee7a c\u00f4ng th\u1ee9c QH\u0110 tr\u00ean \u0111ang l\u00e0 \\(O(N)\\), ta c\u00f3 th\u1ec3 t\u1eadp trung \u0111\u1ec3 t\u1ed1i \u01b0u h\u00f3a \u0111i\u1ec3m n\u00e0y.</p> <p>V\u1edbi m\u1ed7i v\u1ecb tr\u00ed \\(i\\), ta g\u1ecdi \\(L[i]\\) l\u00e0 v\u1ecb tr\u00ed \\(j &lt; i\\) l\u1edbn nh\u1ea5t th\u1ecfa m\u00e3n \\(a[j] &gt; a[i]\\). Nh\u01b0 v\u1eady trong c\u00f4ng th\u1ee9c chuy\u1ec3n tr\u1ea1ng th\u00e1i tr\u00ean, ta kh\u00f4ng c\u1ea7n ph\u1ea3i for \\(j\u2019 &lt; L[i]\\) v\u00ec khi \u0111\u00f3 ta chuy\u1ec3n tr\u1ef1c ti\u1ebfp \\(F(i, j) = F(i, L[j])\\).</p> <p>Gi\u1edd ta ch\u1ec9 c\u1ea7n quan t\u00e2m t\u1edbi c\u00e1c \\(j\u2019\\) thu\u1ed9c \u0111o\u1ea1n \\([L[j], j)\\). L\u00fac n\u00e0y \\(max(a[j\u2019+1..j) = a[j]\\), n\u00ean ta ch\u1ec9 c\u1ea7n t\u00ecm \\(min(F(i-1, j\u2019))\\). \u0110\u00e2y l\u00e0 b\u00e0i to\u00e1n truy v\u1ea5n \u0111o\u1ea1n c\u00f3 th\u1ec3 gi\u1ea3i trong \\(O(logN)\\) m\u1ed7i truy v\u1ea5n. \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u00e0i to\u00e1n \u0111\u1ebfn \u0111\u00e2y l\u00e0 \\(O(N*K*logN)\\).</p> <p>Ta v\u1eabn c\u00f3 th\u1ec3 t\u1ed1i \u01b0u h\u01a1n n\u1eefa b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng stack \u0111\u1ec3 h\u1ed7 tr\u1ee3 x\u1eed l\u00ed c\u00e1c truy v\u1ea5n. Ta duy tr\u00ec m\u00f4t stack, m\u1ed7i ph\u1ea7n t\u1eed ch\u1ee9a hai tham s\u1ed1 l\u00e0 \\(minF\\) v\u00e0 \\(index\\). Stack lu\u00f4n ch\u1ee9a c\u00e1c \\(a[index]\\) gi\u1ea3m d\u1ea7n, c\u00f2n \\(minF\\) \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt l\u1ea1i \u0111\u1ec3 ch\u1ee9a \\(minF\\) trong \u0111o\u1ea1n \\([L[index]..index-1]\\).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1e5 + 5;\nconst int K = 105;\nconst int INF = 0x3f3f3f3f;\n\nint a[N];\nint L[N], minF[N];\nint dp[K][N];\nint n, k;\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    memset(dp, 0x3f, sizeof dp);\n    dp[1][0] = 0;\n    for (int i = 1; i &lt;= n; ++i) dp[1][i] = max(dp[1][i - 1], a[i]);\n    for (int i = 2; i &lt;= k; ++i) {\n        stack&lt;pair&lt;int, int&gt; &gt; S;\n        for (int j = i; j &lt;= n; ++j) {\n            int minF = dp[i - 1][j - 1];\n            while (!S.empty() &amp;&amp; a[S.top().second] &lt;= a[j]) {\n                minF = min(minF, S.top().first);\n                S.pop();\n            }\n            dp[i][j] = min(dp[i][S.empty() ? 0 : S.top().second], minF + a[j]);\n            S.push(make_pair(minF, j));\n        }\n    }\n    cout &lt;&lt; dp[k][n] &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u1ede b\u00e0i n\u00e0y ta c\u0169ng c\u00f3 th\u1ec3 thay th\u1ebf stack ho\u00e0n to\u00e0n b\u1eb1ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Left-Right:</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1e5 + 5;\nconst int K = 105;\nconst int INF = 0x3f3f3f3f;\n\nint a[N], L[N], minF[N];\nint dp[K][N];\nint n, k;\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    memset(dp, 0x3f, sizeof dp);\n    dp[1][0] = 0;\n    for (int i = 1; i &lt;= n; ++i) dp[1][i] = max(dp[1][i - 1], a[i]);\n    for (int i = 1; i &lt;= n; ++i)\n        for (L[i] = i - 1; L[i] &amp;&amp; a[L[i]] &lt;= a[i]; ) L[i] = L[L[i]];\n    for (int i = 2; i &lt;= k; ++i) {\n        minF[i - 1] = INF;\n        for (int j = i; j &lt;= n; ++j) {\n            minF[j] = dp[i - 1][j - 1];\n            for (int t = j - 1; t &gt; L[j]; t = L[t])\n                minF[j] = min(minF[j], minF[t]);\n            dp[i][j] = min(dp[i][L[j]], minF[j] + a[j]);\n        }\n    }\n    cout &lt;&lt; dp[k][n] &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#on-cay-e-thi-hsg-quoc-gia-nam-2016","title":"\u0110\u1ed1n c\u00e2y (\u0110\u1ec1 thi HSG qu\u1ed1c gia n\u0103m 2016)","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_5","title":"\u0110\u1ec1 b\u00e0i","text":"<p>H\u00f9ng \u0111ang l\u00e0m vi\u1ec7c trong C\u00f4ng ty cao su X. C\u00f4ng ty c\u00f3 r\u1eebng cao su r\u1ea5t r\u1ed9ng, v\u1edbi nh\u1eefng h\u00e0ng c\u00e2y cao su tr\u1ed3ng c\u00e1ch \u0111\u1ec1u th\u1eb3ng t\u1eafp. Theo \u0111\u1ecbnh k\u1ef3, ng\u01b0\u1eddi ta th\u01b0\u1eddng ph\u1ea3i ch\u1eb7t h\u1ea1 c\u1ea3 h\u00e0ng c\u00e2y cao su \u0111\u00e3 h\u1ebft h\u1ea1n khai th\u00e1c \u0111\u1ec3 tr\u1ed3ng thay th\u1ebf b\u1eb1ng h\u00e0ng c\u00e2y m\u1edbi. H\u00f9ng ph\u00e1t hi\u1ec7n ra m\u1ed9t b\u00e0i to\u00e1n tin h\u1ecdc li\u00ean quan \u0111\u1ebfn v\u1ea5n \u0111\u1ec1 n\u00e0y: M\u1ed9t nh\u00f3m c\u00f4ng nh\u00e2n \u0111\u01b0\u1ee3c giao nhi\u1ec7m v\u1ee5 ch\u1eb7t h\u1ea1 h\u00e0ng c\u00e2y g\u1ed3m \\(N\\) c\u00e2y \u0111\u01b0\u1ee3c tr\u1ed3ng d\u1ecdc theo m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng v\u1edbi kho\u1ea3ng c\u00e1ch c\u1ed1 \u0111\u1ecbnh gi\u1eefa hai c\u00e2y li\u00ean ti\u1ebfp. N\u1ebfu c\u00e1c c\u00f4ng nh\u00e2n c\u01b0a \u0111\u1ed5 m\u1ed9t c\u00e2y, h\u1ecd c\u00f3 th\u1ec3 cho n\u00f3 \u0111\u1ed5 v\u1ec1 ph\u00eda b\u00ean tr\u00e1i ho\u1eb7c b\u00ean ph\u1ea3i d\u1ecdc theo h\u00e0ng c\u00e2y. M\u1ed9t c\u00e2y khi \u0111\u1ed5 c\u00f3 th\u1ec3 l\u1eadt \u0111\u1ed5 c\u00e2y kh\u00e1c b\u1ecb n\u00f3 r\u01a1i v\u00e0o v\u00e0 c\u00f3 th\u1ec3 l\u00e0m \u0111\u1ed5 nhi\u1ec1u c\u00e2y kh\u00e1c, theo hi\u1ec7u \u1ee9ng lan truy\u1ec1n domino. Sau khi kh\u1ea3o s\u00e1t k\u1ef9, H\u00f9ng \u0111\u00e3 m\u00f4 t\u1ea3 \u0111\u01b0\u1ee3c hi\u1ec7u \u1ee9ng lan truy\u1ec1n domino nh\u01b0 sau: Gi\u1ea3 s\u1eed c\u00e1c c\u00e2y tr\u00ean h\u00e0ng c\u00e2y \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\), t\u1eeb tr\u00e1i qua ph\u1ea3i v\u00e0 chi\u1ec1u cao c\u1ee7a c\u00e2y \\(i\\) l\u00e0 \\(h_i\\) (\\(1 \\le i \\le N\\))  - N\u1ebfu c\u00e2y \\(i\\) \u0111\u1ed5 v\u1ec1 b\u00ean tr\u00e1i th\u00ec t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y \\(j\\) v\u1edbi \\(i - h_i &lt; j &lt; i\\) c\u0169ng s\u1ebd \u0111\u1ed5;  - N\u1ebfu c\u00e2y \\(i\\) \u0111\u1ed5 v\u1ec1 b\u00ean ph\u1ea3i th\u00ec t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y \\(j\\) v\u1edbi \\(i &lt; j &lt; i + h_i\\) c\u0169ng s\u1ebd \u0111\u1ed5;  - M\u1ed7i c\u00e2y ch\u1ec9 \u0111\u1ed5 m\u1ed9t l\u1ea7n v\u1ec1 b\u00ean tr\u00e1i ho\u1eb7c b\u00ean ph\u1ea3i.</p> <p>Do \u0111\u00f3 b\u00e0i to\u00e1n \u0111\u1eb7t ra \u0111\u1ed1i v\u1edbi H\u00f9ng l\u00e0: X\u00e1c \u0111\u1ecbnh s\u1ed1 l\u01b0\u1ee3ng nh\u1ecf nh\u1ea5t c\u00e1c c\u00e2y m\u00e0 c\u00e1c c\u00f4ng nh\u00e2n c\u1ea7n c\u01b0a \u0111\u1ed5 \u0111\u1ea3m b\u1ea3o h\u1ea1 \u0111\u1ed5 to\u00e0n b\u1ed9 h\u00e0ng c\u00e2y.</p> <p>Y\u00eau c\u1ea7u: Gi\u00fap H\u00f9ng gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n \u0111\u1eb7t ra.</p> <p>D\u1eef li\u1ec7u  - D\u00f2ng \u0111\u1ea7u ti\u00ean ghi s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(N\\);  - D\u00f2ng th\u1ee9 hai ch\u1ee9a \\(N\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(h_1, h_2, \u2026, h_n\\) \u0111\u01b0\u1ee3c ghi c\u00e1ch nhau b\u1edfi d\u1ea5u c\u00e1ch, m\u1ed7i s\u1ed1 kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(10^6\\).</p> <p>K\u1ebft qu\u1ea3  - D\u00f2ng \u0111\u1ea7u ti\u00ean ghi s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(k\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u00e2y m\u00e0 c\u00e1c c\u00f4ng nh\u00e2n c\u1ea7n c\u01b0a \u0111\u1ed5;  - D\u00f2ng th\u1ee9 hai ghi d\u00e3y s\u1ed1 nguy\u00ean \\(c_1, c_2, \u2026, c_k\\) trong \u0111\u00f3 \\(\\|c_j\\|\\) (\\(1 \\le j \\le k\\)) l\u00e0 d\u00e3y ch\u1ec9 s\u1ed1 c\u1ee7a c\u00e1c c\u00e2y theo th\u1ee9 t\u1ef1 c\u00e1c c\u00f4ng nh\u00e2n ph\u1ea3i l\u1ea7n l\u01b0\u1ee3t c\u01b0a \u0111\u1ed5, \\(c_j\\) l\u00e0 s\u1ed1 d\u01b0\u01a1ng n\u1ebfu c\u00e2y c\u1ea7n cho \u0111\u1ed5 v\u1ec1 b\u00ean ph\u1ea3i v\u00e0 l\u00e0 s\u1ed1 \u00e2m n\u1ebfu c\u00e2y c\u1ea7n cho \u0111\u1ed5 v\u1ec1 b\u00ean tr\u00e1i.</p> <p>N\u1ebfu c\u00f3 nhi\u1ec1u c\u00e1ch th\u00ec ch\u1ec9 c\u1ea7n \u0111\u01b0a ra m\u1ed9t c\u00e1ch t\u00f9y \u00fd.</p> <p>V\u00ed d\u1ee5</p> <pre><code>INPUT\n5\n1 2 3 1 1\n\nOUTPUT\n2\n3 -2\n</code></pre> <p>Ch\u00fa \u00fd: C\u00f2n m\u1ed9t c\u00e1ch \u0111\u1ed1n c\u00e2y kh\u00e1c: C\u01b0a hai c\u00e2y \\(1\\) v\u00e0 \\(2\\) v\u00e0 \u0111\u1ec1u cho \u0111\u1ed5 v\u1ec1 b\u00ean ph\u1ea3i.</p> <p>R\u00e0ng bu\u1ed9c  - C\u00f3 40% s\u1ed1 test \u1ee9ng v\u1edbi 40% s\u1ed1 \u0111i\u1ec3m c\u1ee7a b\u00e0i c\u00f3 \\(1 \\le N \\le 10000\\).  - C\u00f3 40% s\u1ed1 test kh\u00e1c \u1ee9ng v\u1edbi 40% s\u1ed1 \u0111i\u1ec3m c\u1ee7a b\u00e0i c\u00f3 \\(1 \\le N \\le 100000\\).  - C\u00f3 20% s\u1ed1 test c\u00f2n l\u1ea1i \u1ee9ng v\u1edbi 20% s\u1ed1 \u0111i\u1ec3m c\u1ee7a b\u00e0i c\u00f3 \\(1 \\le N \\le 4000000\\).</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_5","title":"L\u1eddi gi\u1ea3i","text":"<p>B\u01b0\u1edbc 1: Chu\u1ea9n b\u1ecb</p> <p>Ta s\u1ebd x\u00e2y d\u1ef1ng hai m\u1ea3ng \\(L[]\\) v\u00e0 \\(R[]\\), trong \u0111\u00f3 \\(L[i]\\) l\u00e0 v\u1ecb tr\u00ed \\(j\\) nh\u1ecf nh\u1ea5t m\u00e0 b\u1ecb c\u00e2y \\(i\\) l\u00e0m \u0111\u1ed5 n\u1ebfu \u0111\u1ea9y v\u1ec1 b\u00ean tr\u00e1i, t\u01b0\u01a1ng t\u1ef1 v\u1edbi \\(R\\).</p> <p>\\(L[i] = min[ i, min(L[j]) v\u1edbi i-h[i] &lt; j &lt; i ]\\)</p> <p>\u0110\u1ec3 t\u00ednh \\(L[]\\) ta duy tr\u00ec m\u1ed9t \\(stack\\) ch\u1ee9a c\u00e1c ch\u1ec9 s\u1ed1 t\u0103ng d\u1ea7n. Tr\u01b0\u1edbc khi th\u00eam m\u1ed9t c\u00e2y \\(i\\) m\u1edbi v\u00e0o, c\u00e1c c\u00e2y b\u1ecb n\u00f3 tr\u1ef1c ti\u1ebfp l\u00e0m \u0111\u1ed5 s\u1ebd b\u1ecb \\(pop\\) ra, \u0111\u1ed3ng th\u1eddi ta c\u1eadp nh\u1eadt \\(L[i]\\).</p> <p>B\u01b0\u1edbc 2: Quy ho\u1ea1ch \u0111\u1ed9ng</p> <p>G\u1ecdi \\(F(i)\\) l\u00e0 s\u1ed1 c\u00e2y c\u1ea7n ph\u1ea3i \u0111\u1ed5 nh\u1ecf nh\u1ea5t \u0111\u1ec3 c\u00e1c c\u00e2y c\u00f3 ch\u1ec9 s\u1ed1 \\(1..i\\) \u0111\u1ec1u \u0111\u1ed5.</p> <p>\u0110\u1ec3 t\u00ednh \\(F(i)\\) c\u1ea7n x\u00e9t 2 tr\u01b0\u1eddng h\u1ee3p:  - N\u1ebfu ta \u0111\u1ea9y c\u00e2y \\(i\\) qua tr\u00e1i: \\(F(i) = min[ F(j-1) + 1 ]\\) v\u1edbi \\(L[i] \\le j \\le i\\) \\((1)\\)  - N\u1ebfu c\u00e2y \\(i\\) b\u1ecb \u0111\u1ea9y qua ph\u1ea3i b\u1edfi c\u00e2y \\(j\\) \\(F(i) = min[ F(j-1) + 1 ]\\) v\u1edbi \\(1 \\le j \\le i\\) v\u00e0 \\(R[j] \\ge i\\) \\((2)\\)</p> <p>C\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh c\u00e1c \\(F[]\\) trong \\(O(N^2)\\). C\u00f3 th\u1ec3 d\u00f9ng c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u qu\u1ea3n l\u00ed \u0111o\u1ea1n \u0111\u1ec3 gi\u1ea3m xu\u1ed1ng \\(O(NlogN)\\).</p> <p>Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \\(stack\\) \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p xu\u1ed1ng \\(O(N)\\).</p> <p>\u0110\u1ec3 x\u1eed l\u00ed \\((1)\\) ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt t\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i BLOCK \u0111\u00e3 tr\u00ecnh b\u00e0y, tuy nhi\u00ean ta c\u00f3 th\u1ec3 \u0111\u00e1nh gi\u00e1 \u0111\u1ec3 c\u00e0i \u0111\u1eb7t \u0111\u01b0\u1ee3c ng\u1eafn g\u1ecdn h\u01a1n:</p> <p>\\(F[L[i]-1] = min[ F(j-1) + 1 ]\\) v\u1edbi \\(L[i] \\le j \\le i\\) (ph\u1ea7n ch\u1ee9ng minh xin d\u00e0nh l\u1ea1i cho \u0111\u1ed9c gi\u1ea3)</p> <p>\u0110\u1ec3 x\u1eed l\u00ed \\((2)\\) ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t \\(stack\\) \u0111\u1ec3 l\u01b0u c\u00e1c v\u1ecb tr\u00ed c\u00f3 \\(R[]\\) gi\u1ea3m d\u1ea7n, \u0111\u1ed3ng th\u1eddi lu\u00f4n duy tr\u00ec sao cho gi\u00e1 tr\u1ecb \u1edf \\(top\\) c\u1ee7a \\(stack\\) lu\u00f4n l\u00e0 t\u1ed1t nh\u1ea5t. Ch\u00fa \u00fd l\u00e0 v\u1edbi \\(j &lt; i\\) v\u00e0 \\(R[j] \\ge i\\) th\u00ec \\(R[j] \\ge R[i]\\). Nh\u01b0 v\u1eady n\u1ebfu t\u1ea1i m\u1ed7i b\u01b0\u1edbc ta \\(pop\\) c\u00e1c v\u1ecb tr\u00ed \\(j\\) c\u00f3 \\(R[j] &lt; i\\) ra kh\u1ecfi \\(stack\\), th\u00ec s\u1ebd lu\u00f4n duy tr\u00ec \u0111\u01b0\u1ee3c t\u00ednh ch\u1ea5t c\u1ee7a \\(stack\\) v\u00ec l\u00fac n\u00e0y \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c \\(R[i]\\) l\u00e0 nh\u1ecf h\u01a1n c\u00e1c \\(R[]\\) \u0111ang \u1edf trong \\(stack\\), \u0111\u1ed3ng th\u1eddi n\u1ebfu \\(F(i-1)\\) kh\u00f4ng t\u1ed1t b\u1eb1ng gi\u00e1 tr\u1ecb \u1edf \u0111\u1ea7u \\(stack\\) th\u00ec ta s\u1ebd kh\u00f4ng \u0111\u1ea9y \\(i\\) v\u00e0o (\u0111\u1ec3 \u0111\u1ea3m b\u1ea3o gi\u00e1 tr\u1ecb \u1edf \\(top\\) lu\u00f4n l\u00e0 t\u1ed1t nh\u1ea5t).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 4e6 + 6;\n\nint n;\nint a[N];\nint L[N], R[N];\nint dp[N], trace[N];\n\nvoid initialize() {\n    vector&lt;int&gt; S;\n    for (int i = 1; i &lt;= n; ++i) {\n        L[i] = i;\n        while (!S.empty() &amp;&amp; S.back() &gt; i - a[i])\n        L[i] = min(L[i], L[S.back()]), S.pop_back();\n        S.push_back(i);\n    }\n    S.clear();\n    for (int i = n; i &gt;= 1; --i) {\n        R[i] = i;\n        while (!S.empty() &amp;&amp; S.back() &lt; i + a[i])\n        R[i] = max(R[i], R[S.back()]), S.pop_back();\n        S.push_back(i);\n    }\n}\n\nvoid solve() {\n    for (int i = 1; i &lt;= n; ++i) dp[i] = i, trace[i] = -i;\n    vector&lt;int&gt; S;\n    for (int i = 1; i &lt;= n; ++i) {\n        if (dp[i] &gt; dp[L[i] - 1] + 1) dp[i] = dp[L[i] - 1] + 1, trace[i] = -(L[i]);\n        while (!S.empty() &amp;&amp; R[S.back()] &lt; i) S.pop_back();\n        if (!S.empty() &amp;&amp; dp[i] &gt; dp[S.back() - 1] + 1) {\n            dp[i] = dp[S.back() - 1] + 1;\n            trace[i] = S.back();\n        }\n        if (S.empty() || (dp[S.back() - 1] &gt; dp[i - 1])) S.push_back(i);\n    }\n    cout &lt;&lt; dp[n] &lt;&lt; endl;\n    for (int i = n; i; i = abs(trace[i]) - 1)\n    cout &lt;&lt; (trace[i] &lt; 0 ? -i : trace[i]) &lt;&lt; ' ';\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    initialize();\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#5-quan-li-o-thi-ham-quy-hoach-ong-slope-trick","title":"5. Qu\u1ea3n l\u00ed \u0111\u1ed3 th\u1ecb h\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng (Slope Trick)","text":"<p>\u1ede ph\u1ea7n n\u00e0y ta h\u00e3y xem x\u00e9t m\u1ed9t b\u00e0i to\u00e1n c\u1ee5 th\u1ec3 v\u1ec1 \u00fd t\u01b0\u1edfng quan s\u00e1t \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m QH\u0110 \u0111\u1ec3 t\u1ed1i \u01b0u \u0111\u1ed9 ph\u1ee9c t\u1ea1p.</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bai-tap-vi-du_3","title":"B\u00e0i t\u1eadp v\u00ed d\u1ee5","text":""},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#bien-oi-day-so","title":"Bi\u1ebfn \u0111\u1ed5i d\u00e3y s\u1ed1","text":"<p>Link: Codeforces</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_6","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho d\u00e3y s\u1ed1 \\(N\\) ph\u1ea7n t\u1eed. M\u1ed7i ph\u00e9p bi\u1ebfn \u0111\u1ed5i c\u00f3 th\u1ec3 t\u0103ng/gi\u1ea3m m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3 c\u1ee7a d\u00e3y 1 \u0111\u01a1n v\u1ecb. H\u00e3y t\u00ecm s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t \u0111\u1ec3 d\u00e3y tr\u1edf th\u00e0nh d\u00e3y t\u0103ng.</p> <p>Input  - D\u00f2ng \u0111\u1ea7u ti\u00ean l\u00e0 s\u1ed1 t\u1ef1 nhi\u00ean \\(N\\). D\u00f2ng ti\u1ebfp theo l\u00e0 \\(N\\) s\u1ed1 nguy\u00ean \\(A[1..N]\\)</p> <p>Output  - M\u1ed9t d\u00f2ng duy nh\u1ea5t ch\u1ee9a s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t.</p> <p>Gi\u1edbi h\u1ea1n  - \\(N \\le 100 000\\)  - \\(1 \\le A[i] \\le 1 000 000 000\\)</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_6","title":"L\u1eddi gi\u1ea3i","text":"<p>Tr\u01b0\u1edbc h\u1ebft ta g\u00e1n \\(A[i] = A[i] - i\\) v\u1edbi m\u1ecdi \\(i\\). B\u00e0i to\u00e1n tr\u1edf th\u00e0nh bi\u1ebfn \u0111\u1ed5i \u0111\u1ec3 d\u00e3y tr\u1edf th\u00e0nh d\u00e3y kh\u00f4ng gi\u1ea3m.</p> <p>Thu\u1eadt to\u00e1n QH\u0110 c\u01a1 s\u1edf</p> <p>\u0110\u1eb7t $F(i, j) = $ s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i d\u00e3y \\(A[1..i]\\) th\u00e0nh d\u00e3y kh\u00f4ng gi\u1ea3m sao cho \\(A[i] \\le j\\). Ta c\u00f3:  - V\u1edbi \\(i = 1\\): \\(F(i, j) = \\|A[i] - j\\|\\)   - V\u1edbi \\(i &gt; 1\\): \\(F(i, j) = min(F(i - 1, k) + \\|A[i] - k\\|)\\) \\(\\forall k \\le j\\) </p> <p>K\u1ebft h\u1ee3p v\u1edbi nh\u1eadn x\u00e9t: Lu\u00f4n t\u1ed3n t\u1ea1i d\u00e3y cu\u1ed1i c\u00f9ng v\u1edbi s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i t\u1ed1i \u01b0u m\u00e0 ch\u1ec9 ch\u1ee9a c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 trong d\u00e3y ban \u0111\u1ea7u. Ta c\u00f3 th\u1ec3 gi\u1ea3i c\u00f4ng th\u1ee9c QH\u0110 n\u00e0y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N^2)\\)</p> <p>Quan s\u00e1t \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m QH\u0110</p> <p>\u1ede \u0111\u00e2y \\(F_i(j)\\) l\u00e0 m\u1ed9t h\u00e0m theo bi\u1ebfn \\(j\\). Nh\u1eadn x\u00e9t r\u1eb1ng h\u00e0m s\u1ed1 n\u00e0y kh\u00f4ng t\u0103ng, t\u1ee9c l\u00e0 n\u00f3 c\u00f3 \u0111\u1ed9 d\u1ed1c \u00e2m t\u1ea1i m\u1ecdi \u0111i\u1ec3m (\u1edf \u0111\u00e2y ta coi \\(F_i(j+1) - F_i(j)\\) l\u00e0 \u201c\u0111\u1ed9 d\u1ed1c\u201d t\u1ea1i \u0111i\u1ec3m \\(j\\)). \u0110\u1ec3 qu\u1ea3n l\u00ed h\u00e0m s\u1ed1 n\u00e0y, ta s\u1ebd l\u01b0u l\u1ea1i t\u1eadp h\u1ee3p \\(S\\) nh\u1eefng \u0111i\u1ec3m m\u00e0 t\u1ea1i \u0111\u00f3 \u0111\u1ed9 d\u1ed1c c\u1ee7a h\u00e0m thay \u0111\u1ed5i, ch\u00fa \u00fd l\u00e0 n\u1ebfu \u0111\u1ed9 d\u1ed1c t\u1ea1i \\(x\\) so v\u1edbi \u0111\u1ed9 d\u1ed1c t\u1ea1i \\(x-1\\) kh\u00e1c nhau bao nhi\u00eau th\u00ec ta l\u01b0u l\u1ea1i \\(x\\) b\u1ea5y nhi\u00eau l\u1ea7n.</p> <p>G\u1ecdi \\(Opt(i)\\) l\u00e0 v\u1ecb tr\u00ed \\(x\\) nh\u1ecf nh\u1ea5t m\u00e0 t\u1ea1i \u0111\u00f3 \\(F_i(x)\\) \u0111\u1ea1t gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t, t\u1ee9c l\u00e0 t\u1eeb \\(x\\) th\u00ec \u0111\u1ed9 d\u1ed1c c\u1ee7a \\(F_i\\) b\u1eb1ng \\(0\\). V\u1eady \\(F_n(Opt(n))\\) l\u00e0 \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n.</p> <p>H\u00e3y c\u1ed1 g\u1eafng ph\u00e1c h\u1ecda h\u00e0m \\(F\\) tr\u00ean gi\u1ea5y \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng h\u00ecnh dung ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a l\u1eddi gi\u1ea3i.</p> <p>\u0110\u1ec3 c\u1eadp nh\u1eadt l\u1ea1i t\u1eadp h\u1ee3p \\(S_i\\) th\u00e0nh \\(S_{i+1}\\) ta quan t\u00e2m t\u1edbi 2 tr\u01b0\u1eddng h\u1ee3p sau:  - \\(Opt(i-1) \\le a[i]\\): Tr\u01b0\u1eddng h\u1ee3p n\u00e0y, d\u1ec5 th\u1ea5y d\u1ed9 d\u1ed1c c\u1ee7a h\u00e0m s\u1ed1 c\u1ee7a t\u1ea5t c\u1ea3 nh\u1eefng \u0111i\u1ec3m nh\u1ecf h\u01a1n \\(a[i]\\) s\u1ebd gi\u1ea3m \u0111i \\(1\\) (b\u1edfi v\u00ec ph\u1ea7n n\u00e0y c\u1ee7a h\u00e0m s\u1ed1 \u0111\u01b0\u1ee3c c\u1ed9ng th\u00eam b\u1edfi m\u1ed9t h\u00e0m b\u1eadc nh\u1ea5t c\u00f3 \u0111\u1ed9 d\u1ed1c l\u00e0 \\(-1\\)). \u0110\u1ed3ng th\u1eddi \\(Opt(i) = a[i]\\).  - \\(Opt(i-1) &gt; a[i]\\): Tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta c\u1ea7n \u0111\u1ea9y \\(a[i]\\) v\u00e0o t\u1eadp h\u1ee3p \\(S\\) hai l\u1ea7n. B\u1edfi ph\u1ea7n h\u00e0m s\u1ed1 b\u00ean tr\u00e1i \\(a[i]\\) s\u1ebd c\u00f3 \u0111\u1ed9 d\u1ed1c gi\u1ea3m \u0111i \\(1\\), trong khi ph\u1ea7n t\u1eeb \\(a[i]\\) \u0111\u1ebfn \\(Opt(i-1)\\) c\u00f3 \u0111\u1ed9 d\u1ed1c t\u0103ng th\u00eam \\(1\\). \u0110\u1ec3 \u00fd l\u00e0 \\(Opt(i-1)\\) kh\u00f4ng c\u00f2n l\u00e0 \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean m\u00e0 t\u1eeb \u0111\u00f3 h\u00e0m \\(F\\) \u0111\u1ea1t c\u1ef1c ti\u1ec3u n\u1eefa, ta x\u00f3a \\(Opt(i-1)\\) kh\u1ecfi t\u1eadp h\u1ee3p \\(S\\).</p> <p>C\u00e1c thao t\u00e1c ch\u00e8n x\u00f3a v\u00e0 l\u1ea5y \\(max\\) c\u1ee7a t\u1eadp h\u1ee3p c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t b\u1eb1ng std::multiset trong C++, hay s\u1eed d\u1ee5ng Binary Heap n\u1ebfu code Pascal. <p>Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a l\u1eddi gi\u1ea3i tr\u00ean l\u00e0 \\(O(NlogN)\\).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n    int n; cin &gt;&gt; n;\n    multiset&lt;int&gt; slope_changing_points;\n    long long answer = 0;\n    for (int i = 1; i &lt;= n; ++i) {\n        int Ai; cin &gt;&gt; Ai;\n        Ai -= i;\n        slope_changing_points.insert(Ai);\n        if (i == 1) continue;\n        int opt = *slope_changing_points.rbegin();\n        if (Ai &lt; opt) {\n            slope_changing_points.erase(--slope_changing_points.end());\n            slope_changing_points.insert(Ai);\n            answer += opt - Ai;\n        }\n    }\n    cout &lt;&lt; answer &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#ao-vang","title":"\u0110\u00e0o v\u00e0ng","text":"<p>Link: Topcoder SRM 610 Div1.Level3</p>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#e-bai_7","title":"\u0110\u1ec1 b\u00e0i","text":"<p>M\u1ecf v\u00e0ng l\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c coi l\u00e0 m\u1ed9t l\u01b0\u1edbi g\u1ed3m \\((M+1)*(N+1)\\) \u00f4 vu\u00f4ng. C\u00e1c h\u00e0ng \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(N\\), c\u00e1c c\u1ed9t \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(M\\).</p> <p>B\u1ea1n c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c \u1edf m\u1ecf v\u00e0ng m\u1ed9t v\u00e0i ng\u00e0y. B\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn v\u1ecb tr\u00ed \u0111\u1ec3 \u0111\u00e0o trong ng\u00e0y \u0111\u1ea7u ti\u00ean (ng\u00e0y \\(0\\)). Trong nh\u1eefng ng\u00e0y ti\u1ebfp theo, b\u1ea1n c\u00f3 th\u1ec3 gi\u1eef nguy\u00ean v\u1ecb tr\u00ed, ho\u1eb7c di chuy\u1ec3n \u0111\u1ebfn m\u1ed9t \u00f4 vu\u00f4ng kh\u00e1c n\u1eb1m trong gi\u1edbi h\u1ea1n \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 sau \u0111\u00e2y.</p> <p>Khi v\u00e0ng \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y \u1edf m\u1ed9t \u00f4 b\u1ea5t k\u1ef3 n\u00e0o \u0111\u1ea5y, b\u1ea1n s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c l\u1ee3i nhu\u1eadn. Ti\u1ec1n l\u1eddi \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng \\(N+M\\) tr\u1eeb \u0111i kho\u1ea3ng c\u00e1ch Manhattan t\u1eeb \u00f4 b\u1ea1n \u0111ang \u0111\u1ee9ng \u0111\u1ebfn \u00f4 m\u00e0 v\u00e0ng \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y. C\u1ee5 th\u1ec3 n\u1ebfu v\u00e0ng \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y \u1edf \u00f4 \\((a, b)\\), v\u00e0 b\u1ea1n \u0111ang \u0111\u1ee9ng \u1edf \u00f4 \\((c, d)\\), ti\u1ec1n l\u1eddi b\u1ea1n nh\u1eadn \u0111\u01b0\u1ee3c l\u00e0 \\(N+M - \\|a-c\\| - \\|b-d\\|\\), trong \u0111\u00f3 k\u00ed hi\u1ec7u \\(\\|\\|\\) bi\u1ec3u th\u1ecb gi\u00e1 tr\u1ecb tuy\u1ec7t \u0111\u1ed1i.</p> <p>B\u1ea1n \u0111\u01b0\u1ee3c cho hai s\u1ed1 nguy\u00ean \\(N\\) v\u00e0 \\(M\\), hai m\u1ea3ng s\u1ed1 nguy\u00ean \\(event_i\\) v\u00e0 \\(event_j\\). V\u1edbi m\u1ed7i s\u1ed1 \\(k\\) h\u1ee3p l\u1ec7, c\u00f3 m\u1ed9t m\u1ecf v\u00e0ng xu\u1ea5t hi\u1ec7n v\u00e0o ng\u00e0y th\u1ee9 \\(k\\), \u1edf \u00f4 \\((event_i[k], event_j[k])\\).</p> <p>Cu\u1ed1i c\u00f9ng b\u1ea1n c\u00f3 2 m\u1ea3ng s\u1ed1 nguy\u00ean \\(event_{di}\\) v\u00e0 \\(event_{dj}\\). S\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a hai m\u1ea3ng n\u00e0y \u00edt h\u01a1n s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a hai m\u1ea3ng tr\u00ean 1 \u0111\u01a1n v\u1ecb. Hai m\u1ea3ng n\u00e0y th\u1ec3 hi\u1ec7n gi\u1edbi h\u1ea1n c\u1ee7a vi\u1ec7c di chuy\u1ec3n c\u1ee7a b\u1ea1n trong ng\u00e0y. C\u1ee5 th\u1ec3, v\u1edbi m\u1ed7i \\(k\\), gi\u1eefa ng\u00e0y \\(k\\) v\u00e0 \\(k+1\\), b\u1ea1n \u0111ang \u1edf \u00f4 \\((a, b)\\) v\u00e0 ch\u1ec9 \u0111i \u0111\u01b0\u1ee3c \u0111\u1ebfn \u00f4 \\((c, d)\\) n\u1ebfu \\(\\|a-c\\| \\le event_{di}[k]\\) v\u00e0 \\(\\|b-d\\| \\le event_{dj}[k]\\).</p> <p>H\u00e3y x\u00e1c \u0111\u1ecbnh t\u1ed5ng l\u1ee3i nhu\u1eadn c\u1ef1c \u0111\u1ea1i b\u1ea1n c\u00f3 th\u1ec3 ki\u1ebfm \u0111\u01b0\u1ee3c n\u1ebfu l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u l\u00e0m vi\u1ec7c t\u1ea1i \u00f4 n\u00e0o trong m\u1ed7i ng\u00e0y.</p> <p>Input  - D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a hai s\u1ed1 nguy\u00ean \\(N\\) v\u00e0 \\(M\\).  - D\u00f2ng th\u1ee9 2 ch\u1ee9a s\u1ed1 ng\u00e0y m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c \\(K\\).  - D\u00f2ng th\u1ee9 3 ch\u1ee9a \\(K\\) s\u1ed1 nguy\u00ean m\u00f4 t\u1ea3 m\u1ea3ng \\(event_i\\).  - D\u00f2ng th\u1ee9 4 ch\u1ee9a \\(K\\) s\u1ed1 nguy\u00ean m\u00f4 t\u1ea3 m\u1ea3ng \\(event_j\\).</p> <p>N\u1ebfu \\(K&gt;1\\)  - D\u00f2ng th\u1ee9 5 ch\u1ee9a \\(K-1\\) s\u1ed1 nguy\u00ean m\u00f4 t\u1ea3 m\u1ea3ng \\(event_{di}\\).  - D\u00f2ng cu\u1ed1i c\u00f9ng ch\u1ee9a \\(K-1\\) s\u1ed1 nguy\u00ean m\u00f4 t\u1ea3 m\u1ea3ng \\(event_{dj}\\).</p> <p>Output</p> <p>M\u1ed9t s\u1ed1 nguy\u00ean duy nh\u1ea5t ch\u1ee9a s\u1ed1 ti\u1ec1n l\u1edbn nh\u1ea5t m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 ki\u1ebfm \u0111\u01b0\u1ee3c.</p> <p>Gi\u1edbi h\u1ea1n  - \\(1 \\le N, M \\le 1 000 000\\)  - \\(1 \\le K \\le 1 000\\)</p> <p>V\u00ed d\u1ee5</p> <pre><code>Input\n3 3\n1\n1\n1\nOutput\n6\n\nV\u00e0ng t\u00ecm \u0111\u01b0\u1ee3c \u1edf \u00f4 (1, 1). Chi\u1ebfn l\u01b0\u1ee3c t\u1ed1t nh\u1ea5t l\u00e0 l\u00e0m vi\u1ec7c t\u1ea1i \u0111\u00f3. \n\n\nInput\n3 3\n2\n0 2\n0 2\n1\n1\nOutput\n10\n\nV\u00e0ng s\u1ebd \u0111\u01b0\u1ee3c ph\u00e1t hi\u1ec7n \u1edf \u00f4 (0, 0) h\u00f4m nay v\u00e0 \u00f4 (2, 2) v\u00e0o ng\u00e0y mai. Chi\u1ebfn l\u01b0\u1ee3c l\u00e0 \u1edf \u00f4 (0, 0) h\u00f4m nay v\u00e0 \u1edf \u00f4 (1, 1) v\u00e0o ng\u00e0y mai. L\u1ee3i nhu\u1eadn s\u1ebd l\u00e0 6 + 4 = 10.\n\n\nInput\n4 2\n3\n1 4 4\n1 2 0\n1 1\n1 1\nOutput\n15\n\nInput\n6 6\n6\n0 2 1 5 6 4\n4 3 1 6 2 0\n2 3 1 5 6\n2 4 0 5 1\nOutput\n63\n</code></pre>"},{"location":"algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong/#loi-giai_7","title":"L\u1eddi gi\u1ea3i","text":"<p>Tr\u01b0\u1edbc h\u1ebft ta t\u00f3m t\u1eaft l\u1ea1i \u0111\u1ec1 b\u00e0i. C\u00f3 \\(K\\) ng\u00e0y \u1ee9ng v\u1edbi \\(K\\) s\u1ef1 ki\u1ec7n. M\u1ed7i ng\u00e0y v\u00e0ng \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y \u1edf c\u00e1c \u00f4 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 qua hai m\u1ea3ng \\(event_i[]\\) v\u00e0 \\(event_j[]\\). Ng\u00e0y \u0111\u1ea7u ti\u00ean b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ee9ng \u1edf v\u1ecb tr\u00ed b\u1ea5t k\u1ef3, nh\u01b0ng t\u1eeb ng\u00e0y th\u1ee9 hai ch\u1ec9 c\u00f3 th\u1ec3 di chuy\u1ec3n \u0111\u1ebfn m\u1ed9t s\u1ed1 \u00f4 trong kho\u1ea3ng x\u00e1c \u0111\u1ecbnh qua hai m\u1ea3ng \\(event_{di}[]\\) v\u00e0 \\(event_{dj}[]\\).</p> <p>H\u00e0m m\u1ee5c ti\u00eau l\u00e0 \\(N+M-\\|e_i-x\\|-\\|e_j-y\\|\\), trong \u0111\u00f3 \\((e_i, e_j)\\) l\u00e0 v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n v\u00e0ng, c\u00f2n gi\u1edbi h\u1ea1n di chuy\u1ec3n l\u00e0 \\(d_i\\) theo chi\u1ec1u d\u1ecdc v\u00e0 \\(d_j\\) theo chi\u1ec1u ngang. Nh\u01b0 v\u1eady l\u1eddi gi\u1ea3i c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \u0111\u1ed9c l\u1eadp \u0111\u1ed1i v\u1edbi chi\u1ec1u t\u1ecda \u0111\u1ed9. Ch\u1ec9 c\u1ea7n xem \\(N-\\|e_i-x\\|\\) v\u00e0 \\(M-\\|e_j-y\\|\\) l\u00e0 c\u00e1c th\u00e0nh ph\u1ea7n \u0111\u1ed9c l\u1eadp c\u1ee7a h\u00e0m m\u1ee5c ti\u00eau.</p> <p>B\u00e0i to\u00e1n hai chi\u1ec1u gi\u1edd tr\u1edf th\u00e0nh hai b\u00e0i to\u00e1n m\u1ed9t chi\u1ec1u: C\u00f3 \\(N+1\\) \u0111i\u1ec3m \\(x[] = 0..N\\); \u1edf b\u01b0\u1edbc \u0111\u1ea7u ti\u00ean ta c\u00f3 th\u1ec3 ch\u1ecdn xu\u1ea5t ph\u00e1t \u1edf \u0111i\u1ec3m b\u1ea5t k\u1ef3, sau s\u1ef1 ki\u1ec7n \\(i\\) v\u00e0 b\u1ea1n \u1edf v\u1ecb tr\u00ed \\(e_i\\), b\u1ea1n ki\u1ebfm \u0111\u01b0\u1ee3c \\(N-\\|e_i-x\\|\\) v\u00e0 c\u00f3 quy\u1ec1n t\u0103ng/gi\u1ea3m \\(x\\) m\u1ed9t l\u01b0\u1ee3ng t\u1ed1i \u0111a l\u00e0 \\(d_i\\), nh\u01b0ng kh\u00f4ng \u0111\u01b0\u1ee3c ra ngo\u00e0i \u0111o\u1ea1n \\([0..N]\\). N\u1ebfu ta gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n n\u00e0y, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 gi\u1ea3i t\u01b0\u01a1ng t\u1ef1 b\u00e0i to\u00e1n \u0111\u1ed1i v\u1edbi tr\u1ee5c \\(y\\).</p> <p>Thu\u1eadt to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng c\u01a1 s\u1edf</p> <p>G\u1ecdi \\(F(i, x)\\) l\u00e0 s\u1ed1 ti\u1ec1n l\u1eddi nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3 n\u1ebfu hi\u1ec7n t\u1ea1i \u0111ang b\u1eaft \u0111\u1ea7u l\u01b0\u1ee3t th\u1ee9 \\(i\\) v\u00e0 \u0111ang \u0111\u1ee9ng \u1edf t\u1ecda \u0111\u1ed9 \\(x\\).</p> <p>N\u1ebfu \\(i=K\\), \\(F(i, x) = 0\\).</p> <p>V\u1edbi \\(i&lt;K\\), ta s\u1ebd l\u1eddi th\u00eam \\(N-\\|e_i-x\\|\\), v\u00e0 c\u1ea7n ph\u1ea3i quy\u1ebft \u0111\u1ecbnh xem ti\u1ebfp theo s\u1ebd \u0111i t\u1edbi \u00f4 n\u00e0o. C\u1ea7n ch\u1ecdn m\u1ed9t gi\u00e1 tr\u1ecb \\(x\u2019\\) th\u1ecfa m\u00e3n \\(0 \\le x\u2019 \\le N\\) v\u00e0 \\(\\|x-x\u2019\\| \\le d_i\\), \u0111\u1ed3ng th\u1eddi gi\u00e1 tr\u1ecb \\(F(i+1, x\u2019)\\) l\u00e0 l\u1edbn nh\u1ea5t. Khi \u0111\u00f3 \\(F(i, x) = N-\\|e_i-x\\| + F(i+1, x\u2019)\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u1ebfu c\u00e0i \u0111\u1eb7t th\u00f4ng th\u01b0\u1eddng l\u00e0 \\(O(NNK)\\), c\u00f3 th\u1ec3 t\u1ed1i \u01b0u th\u00e0nh \\(O(NK)\\) s\u1eed d\u1ee5ng deque nh\u01b0ng v\u1eabn ch\u01b0a \u0111\u1ea1t y\u00eau c\u1ea7u v\u1edbi gi\u1edbi h\u1ea1n \u0111\u1ec1 b\u00e0i.</p> <p>\u0110\u1ed3 th\u1ecb c\u1ee7a h\u00e0m QH\u0110</p> <p>Ta c\u00f3 th\u1ec3 coi h\u00e0m QH\u0110 \\(F(i, x)\\) \u1edf tr\u00ean l\u00e0 m\u1ed9t h\u00e0m \\(f_i(x)\\) nh\u1eadn \\(x\\) l\u00e0 bi\u1ebfn. X\u00e9t \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m s\u1ed1 n\u00e0y. D\u1ec5 th\u1ea5y \\(f_k(x) = F(K, x) = 0\\), \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m s\u1ed1 n\u00e0y l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng.</p> <p>X\u00e9t h\u00e0m s\u1ed1 \\(f_{k-1}(x) = N - \\|e_k-1 \u2013 x\\|\\). \u0110\u1ed3 th\u1ecb c\u1ee7a n\u00f3 s\u1ebd c\u00f3 d\u1ea1ng:</p> <p></p> <p>V\u1ea5n \u0111\u1ec1 tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p h\u01a1n v\u1edbi h\u00e0m \\(f_{k-2}\\). \u0110\u1eb7t \\(g_{k-1}(x) = max(f_{k-1}(x\u2019))\\) v\u1edbi \\(\\|x\u2019 \u2013 x\\| \\le d_{k-2}\\). \u0110\u1ed3 th\u1ecb c\u1ee7a h\u00e0m s\u1ed1 n\u00e0y c\u00f3 d\u1ea1ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m s\u1ed1 \\(f_{k-1}(x)\\):</p> <p></p> <p>Ta c\u1ed9ng th\u00eam \\(N-\\|e_{k-2} \u2013 x\\|\\) v\u00e0o h\u00e0m \\(g_{k-1}(x)\\), ta s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb d\u1ea1ng:</p> <p></p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady, \u00fd t\u01b0\u1edfng \u1edf \u0111\u00e2y l\u00e0 ta s\u1ebd duy tr\u00ec \u0111\u1ed3 th\u1ecb c\u1ee7a c\u00e1c h\u00e0m s\u1ed1 \\(f_i(x)\\) v\u1edbi \\(i\\) t\u1eeb \\(k\\) v\u1ec1 \\(0\\). \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y ta c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n m\u1ed9t v\u00e0i thao t\u00e1c:</p> <ul> <li>T\u1ecbnh ti\u1ebfn v\u1ec1 hai ph\u00eda: \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c h\u00e0m \\(f(x)\\) th\u00ec tr\u01b0\u1edbc h\u1ebft c\u1ea7n x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c h\u00e0m \\(g(x) = max(f_i(x\u2019) : \\|x\u2019 \u2013 x\\| \\le d)\\). Ta ch\u1ec9 c\u1ea7n t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ec9nh c\u1ee7a h\u00e0m s\u1ed1, r\u1ed3i t\u1ecbnh ti\u1ebfn c\u1ea3 hai ph\u00eda tr\u00e1i ph\u1ea3i c\u1ee7a h\u00e0m th\u00eam m\u1ed9t kho\u1ea3ng \\(d\\).</li> </ul> <p></p> <ul> <li>T\u1ecbnh ti\u1ebfn theo tr\u1ee5c tung: Ta bi\u1ec3u di\u1ec5n h\u00e0m s\u1ed1 b\u1eb1ng danh s\u00e1ch c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u01b0\u1eddng g\u1ea5p kh\u00fac th\u00ec thao t\u00e1c n\u00e0y c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u1ef1c hi\u1ec7n.</li> </ul> <p>Cu\u1ed1i c\u00f9ng ta ch\u1ec9 c\u1ea7n ch\u1ee9ng minh h\u00e0m \\(f(x)\\) lu\u00f4n l\u00e0 h\u00e0m l\u00f5m th\u00ec c\u00e1ch l\u00e0m tr\u00ean l\u00e0 \u0111\u00fang. Ban \u0111\u1ea7u h\u00e0m s\u1ed1 ch\u1ec9 l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng th\u1eb1ng \\(y=0\\), sau \u0111\u00f3 ta th\u1ef1c hi\u1ec7n hai thao t\u00e1c t\u1ecbnh ti\u1ebfn v\u1ec1 hai ph\u00eda \\((1)\\) v\u00e0 t\u1ecbnh ti\u1ebfn theo tr\u1ee5c tung \\((2)\\). Trong \u0111\u00f3 \\((1)\\) ch\u1ec9 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi h\u00e0m l\u00f5m, v\u00e0 sau thao t\u00e1c n\u00e0y th\u00ec h\u00e0m s\u1ed1 v\u1eabn l\u00e0 h\u00e0m l\u00f5m. V\u1edbi \\((2)\\) th\u00ec ta c\u1ed9ng th\u00eam m\u1ed9t h\u00e0m l\u00f5m (h\u00e0m \\(N-\\|e_i-x\\|\\)), m\u00e0 ta c\u00f3 \u0111\u1ecbnh l\u00fd t\u1ed5ng hai h\u00e0m l\u00f5m c\u0169ng l\u00e0 h\u00e0m l\u00f5m, n\u00ean thao t\u00e1c n\u00e0y c\u0169ng v\u1eabn \u0111\u1ea3m b\u1ea3o \\(f(x)\\) l\u00e0 h\u00e0m l\u00f5m.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n</p> <p>Ta bi\u1ec3u di\u1ec5n \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m s\u1ed1 b\u1eb1ng danh s\u00e1ch c\u00e1c \u0111i\u1ec3m, sau m\u1ed7i thao t\u00e1c th\u00ec s\u1ed1 \u0111\u1ecbnh c\u1ee7a \u0111\u01b0\u1eddng g\u1ea5p kh\u00fac t\u0103ng th\u00eam t\u1ed1i \u0111a l\u00e0 \\(1\\), n\u00ean s\u1ed1 \u0111\u1ec9nh n\u00e0y l\u00e0 m\u1ed9t \u0111\u1ea1i l\u01b0\u1ee3ng \\(O(K)\\). Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a to\u00e0n b\u1ed9 thu\u1eadt to\u00e1n l\u00e0 \\(O(K^2)\\).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int INF = 2e9;\n\nvoid maximize(int &amp;a, int b) {\n    if (a &lt; b) a = b;\n}\n\nstruct Point {\n    long long x, y;\n    Point(long long x, long long y): x(x), y(y) {}\n    bool operator &lt; (const Point &amp;o) const {\n        return x &lt; o.x;\n    }\n};\n\nvector&lt;Point&gt; H;\n\nvoid incConst(int delta) {\n    for (int i = 0; i &lt; H.size(); ++i) H[i].y += delta;\n}\n\nvoid expand(int delta) {\n    int L = 0, R = 0;\n    for (int i = 1; i &lt; H.size(); ++i) {\n        if (H[i].y &gt; H[L].y) {\n            L = R = i;\n        } else if (H[i].y == H[L].y) {\n            R = i;\n        }\n    }\n    if (L == R) {\n        H.insert(H.begin() + L + 1, H[L]);\n        ++R;\n    }\n    for (int i = 0; i &lt;= L; ++i) H[i].x -= delta;\n    for (int i = R; i &lt; H.size(); ++i) H[i].x += delta;\n}\n\nint calc(Point P, Point Q, int x) {\n    if (P.y == Q.y) return P.y;\n    int diff = P.y - Q.y;\n    long long y = min(P.y, Q.y);\n    long long L = x - P.x;\n    long long R = Q.x - x;\n    if (L == 0) return P.y;\n    if (R == 0) return Q.y;\n    if (diff &lt; 0)\n        y -= L * diff / (L + R);\n    else\n        y += R * diff / (L + R);\n    return y;\n}\n\nint eval(int x) {\n    for (int i = 0; i + 1 &lt; H.size(); ++i) if (H[i].x &lt;= x &amp;&amp; x &lt;= H[i + 1].x)\n        return calc(H[i], H[i + 1], x);\n}\n\nvoid mergeHull(int v) {\n    //merge with y = -abs(x - v)\n    int exist = -1;\n    for (int i = 0; i &lt; H.size(); ++i) if (H[i].x == v) {\n        exist = i;\n        break;\n    }\n    if (exist == -1) {\n        H.push_back(Point(v, eval(v)));\n        sort(H.begin(), H.end());\n    }\n    for (int i = 0; i &lt; H.size(); ++i) H[i].y -= abs(H[i].x - v);\n}\n\nint solve(int len, vector&lt;int&gt; pos, vector&lt;int&gt; range) {\n    H.clear();\n    int n = pos.size();\n    H.push_back(Point(0, len - pos[0]));\n    if (pos[0] != 0) H.push_back(Point(pos[0], len));\n    if (pos[0] != len) H.push_back(Point(len, len - abs(pos[0] - len)));\n    for (int i = 1; i &lt; n; ++i) {\n        expand(range[i - 1]);\n        mergeHull(pos[i]);\n        incConst(len);\n    }\n    int ans = 0;\n    int last = 0;\n    for (int x = 0; x &lt;= len; ++x) {\n        while (last &lt; H.size() &amp;&amp; H[last].x &lt;= x) ++last;\n        if (last == H.size()) --last;\n        ans = max(ans, calc(H[last - 1], H[last], x));\n    }\n    return ans;\n}\n\nint getMaximumGold(int N, int M, vector&lt;int&gt; event_i, vector&lt;int&gt; event_j, vector&lt;int&gt; event_di, vector&lt;int&gt; event_dj) {\n    return solve(N, event_i, event_di) + solve(M, event_j, event_dj);\n}\n\nint main() {\n    int N, M, D;\n    cin &gt;&gt; N &gt;&gt; M &gt;&gt; D;\n    vector&lt;int&gt; event_i(D), event_j(D), event_di(D - 1), event_dj(D - 1);\n    for (int i = 0; i &lt; D; ++i) cin &gt;&gt; event_i[i];\n    for (int i = 0; i &lt; D; ++i) cin &gt;&gt; event_j[i];\n    for (int i = 0; i &lt; D - 1; ++i) cin &gt;&gt; event_di[i];\n    for (int i = 0; i &lt; D - 1; ++i) cin &gt;&gt; event_dj[i];\n    cout &lt;&lt; getMaximumGold(N, M, event_i, event_j, event_di, event_dj) &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/","title":"Quy ho\u1ea1ch \u0111\u1ed9ng c\u01a1 b\u1ea3n (Ph\u1ea7n 1)","text":"<p>B\u00e0i vi\u1ebft c\u00f3 tham kh\u1ea3o v\u00e0 b\u1ed5 sung, ch\u1ec9nh s\u1eeda t\u1eeb TopCoder v\u00e0 m\u1ed9t s\u1ed1 ngu\u1ed3n kh\u00e1c.</p> <p>Ng\u01b0\u1eddi vi\u1ebft: Nguy\u1ec5n Anh B\u1ea3o - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i</p> <p>Reviewer: * H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM * Ng\u00f4 Nh\u1eadt Quang - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Quy ho\u1ea1ch \u0111\u1ed9ng (QH\u0110) (Dynamic Programming) l\u00e0 m\u1ed9t trong nh\u1eefng k\u0129 thu\u1eadt quan tr\u1ecdng v\u00e0 c\u01a1 b\u1ea3n nh\u1ea5t trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd tr\u00ecnh b\u00e0y v\u00e0 gi\u1ea3i th\u00edch c\u00e1c kh\u00e1i ni\u1ec7m li\u00ean quan \u0111\u1ebfn quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ed3ng th\u1eddi \u0111\u01b0a ra c\u00e1c v\u00ed d\u1ee5 minh h\u1ecda.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#beginner","title":"Beginner","text":"<p>\u0110\u1ec3 m\u1edf \u0111\u1ea7u, ta x\u00e9t v\u00ed d\u1ee5 sau:</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>B\u1ea1n An c\u00f3 \\(n\\) chi\u1ebfc gh\u1ebf m\u00e0u tr\u1eafng, \\(n\\) chi\u1ebfc gh\u1ebf m\u00e0u \u0111en v\u00e0 \\(n\\) chi\u1ebfc gh\u1ebf m\u00e0u \u0111\u1ecf. An mu\u1ed1n ch\u1ecdn ra \\(n\\) chi\u1ebfc gh\u1ebf \u0111\u1ec3 x\u1ebfp th\u00e0nh m\u1ed9t h\u00e0ng ngang. Do An kh\u00f4ng th\u00edch m\u00e0u \u0111\u1ecf n\u00ean An kh\u00f4ng mu\u1ed1n x\u1ebfp hai chi\u1ebfc gh\u1ebf \u0111\u1ecf c\u1ea1nh nhau. T\u00ednh s\u1ed1 c\u00e1ch x\u1ebfp gh\u1ebf th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n \u0111\u00f3. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 10^5\\).</p> <p>L\u01b0u \u00fd: hai c\u00e1ch x\u1ebfp \u0111\u01b0\u1ee3c xem l\u00e0 kh\u00e1c nhau khi t\u1ed3n t\u1ea1i m\u1ed9t v\u1ecb tr\u00ed m\u00e0 hai c\u00e1ch c\u00f3 hai lo\u1ea1i gh\u1ebf kh\u00e1c nhau.</p> <p></p> <p>B\u00e2y gi\u1edd ta s\u1ebd x\u00e2y d\u1ef1ng thu\u1eadt gi\u1ea3i:</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#thuat-toan-e-quy","title":"Thu\u1eadt to\u00e1n \u0111\u1ec7 quy","text":"<p>G\u1ecdi s\u1ed1 c\u00e1ch x\u1ebfp \\(i\\) c\u00e1i gh\u1ebf l\u00e0 \\(f[i]\\). Ta x\u00e9t chi\u1ebfc gh\u1ebf th\u1ee9 \\(n\\).  * N\u1ebfu n\u00f3 c\u00f3 m\u00e0u \u0111en ho\u1eb7c tr\u1eafng th\u00ec chi\u1ebfc gh\u1ebf c\u1ea1nh n\u00f3 c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t trong ba m\u00e0u. Do \u0111\u00f3 ta ch\u1ec9 c\u1ea7n b\u1ed1 tr\u00ed \\(n-1\\) chi\u1ebfc gh\u1ebf c\u00f2n l\u1ea1i th\u1ecfa m\u00e3n y\u00eau c\u1ea7u. Do c\u00f3 2 c\u00e1ch ch\u1ecdn m\u00e0u cho gh\u1ebf th\u1ee9 \\(n\\) v\u00e0 \\(f[n-1]\\) c\u00e1ch ch\u1ecdn m\u00e0u cho c\u00e1c gh\u1ebf c\u00f2n l\u1ea1i n\u00ean s\u1ed1 c\u00e1ch x\u1ebfp trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \\(2 * f[n-1]\\).</p> <p></p> <ul> <li>N\u1ebfu n\u00f3 c\u00f3 m\u00e0u \u0111\u1ecf th\u00ec chi\u1ebfc gh\u1ebf c\u1ea1nh n\u00f3 ch\u1ec9 c\u00f3 th\u1ec3 c\u00f3 m\u00e0u tr\u1eafng ho\u1eb7c \u0111en. Do v\u1eady n\u00ean chi\u1ebfc gh\u1ebf th\u1ee9 \\(n-2\\) c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t trong ba m\u00e0u. Khi \u0111\u00f3 ta c\u0169ng ch\u1ec9 c\u1ea7n b\u1ed1 tr\u00ed \\(n-2\\) chi\u1ebfc gh\u1ebf c\u00f2n l\u1ea1i th\u1ecfa m\u00e3n y\u00eau c\u1ea7u. S\u1ed1 c\u00e1ch x\u1ebfp trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \\(1* 2* f[n-2]\\).</li> </ul> <p></p> <p>V\u1edbi \u00fd t\u01b0\u1edfng tr\u00ean, ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y nh\u01b0 c\u00e1c b\u00e0i to\u00e1n \u0111\u1ec7 quy \u0111\u01a1n gi\u1ea3n. C\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <p><pre><code>// T\u00ednh s\u1ed1 c\u00e1ch s\u1eafp x\u1ebfp n c\u00e1i gh\u1ebf\nint solve(int n)\n{\n    // Tr\u01b0\u1eddng h\u1ee3p c\u01a1 b\u1ea3n\n    if (n == 1)\n        return 3;\n    if (n == 2)\n        return 8;\n    // B\u01b0\u1edbc \u0111\u1ec7 quy\n    return 2 * solve(n - 1) + 2 * solve(n - 2);\n}\n</code></pre> Thu\u1eadt to\u00e1n tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u0169y th\u1eeba n\u00ean ch\u1ec9 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c v\u1edbi \\(n\\) nh\u1ecf \\((n &lt; 45)\\), kh\u00f4ng \u0111\u1ee7 nhanh so v\u1edbi y\u00eau c\u1ea7u b\u00e0i to\u00e1n.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#toi-uu-thuat-toan-e-quy","title":"T\u1ed1i \u01b0u thu\u1eadt to\u00e1n \u0111\u1ec7 quy","text":"<p>Thu\u1eadt to\u00e1n tr\u00ean ch\u1ea1y ch\u1eadm v\u00ec m\u1ed9t s\u1ed1 h\u00e0m <code>solve(i)</code> \u0111\u01b0\u1ee3c g\u1ecdi r\u1ea5t nhi\u1ec1u l\u1ea7n. Ta l\u1ea5y v\u00ed d\u1ee5 sau:</p> <p>Gi\u1ea3 s\u1eed c\u1ea7n t\u00ednh <code>solve(1000)</code>. Khi \u0111\u00f3 c\u1ea7n t\u00ednh <code>solve(999)</code> v\u00e0 <code>solve(998)</code>.</p> <p>\u0110\u1ec3 t\u00ednh <code>solve(999)</code> c\u1ea7n g\u1ecdi h\u00e0m <code>solve(998)</code> v\u00e0 <code>solve(997)</code>. \u0110\u1ec3 t\u00ednh <code>solve(998)</code> c\u1ea7n g\u1ecdi h\u00e0m <code>solve(997)</code> v\u00e0 <code>solve(996)</code>. \u0110\u1ec3 t\u00ednh <code>solve(997)</code> c\u1ea7n g\u1ecdi h\u00e0m <code>solve(996)</code> v\u00e0 <code>solve(995)</code>. \\(\\ldots\\) Ta c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n c\u00e1c h\u00e0m \u0111\u01b0\u1ee3c g\u1ecdi b\u1eb1ng m\u1ed9t s\u01a1 \u0111\u1ed3 nh\u01b0 sau:</p> <p></p> <p>T\u1eeb s\u01a1 \u0111\u1ed3 tr\u00ean ta th\u1ea5y c\u00f3 nhi\u1ec1u h\u00e0m b\u1ecb g\u1ecdi r\u1ea5t nhi\u1ec1u l\u1ea7n m\u1ed9t c\u00e1ch kh\u00f4ng c\u1ea7n thi\u1ebft: * <code>solve(998)</code> \u0111\u01b0\u1ee3c g\u1ecdi \\(2\\) l\u1ea7n * <code>solve(997)</code> \u0111\u01b0\u1ee3c g\u1ecdi \\(3\\) l\u1ea7n * <code>solve(996)</code> \u0111\u01b0\u1ee3c g\u1ecdi \\(5\\) l\u1ea7n * \\(\\ldots\\)</p> <p>\u0110\u1ec3 kh\u1eafc ph\u1ee5c \u0111i\u1ec1u n\u00e0y ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t m\u1ea3ng nh\u1edb \\(d\\) sao cho \\(d[i]\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a <code>solve(i)</code>:</p> <p><pre><code>int d[100010];\n\nint solve(int n)\n{\n    if (n == 1)\n        return 3;\n    else if (n == 2)\n        return 8;\n    else if (d[n] != 0)\n        return d[n];\n    else\n    {\n        d[n] = 2 * f(n - 1) + 2 * f(n - 2);\n        return d[n];\n    }\n}\n</code></pre> Thu\u1eadt to\u00e1n tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\).</p> <p>V\u1edbi c\u00e1ch ti\u1ebfp c\u1eadn tr\u00ean, ta quan t\u00e2m \u0111\u1ebfn gi\u00e1 tr\u1ecb cu\u1ed1i c\u00f9ng \\(f[n]\\), sau \u0111\u00f3 m\u1edbi xem x\u00e9t nh\u1eefng gi\u00e1 tr\u1ecb b\u00e9 h\u01a1n c\u1ea7n thi\u1ebft cho t\u00ednh to\u00e1n.</p> <p>Nh\u01b0ng v\u1edbi ph\u01b0\u01a1ng ph\u00e1p quy ho\u1ea1ch \u0111\u1ed9ng, ta s\u1ebd quan t\u00e2m \u0111\u1ebfn c\u00e1c b\u00e0i to\u00e1n v\u1edbi tham s\u1ed1 nh\u1ecf h\u01a1n tr\u01b0\u1edbc ti\u00ean.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#phuong-phap-tiep-can","title":"Ph\u01b0\u01a1ng ph\u00e1p ti\u1ebfp c\u1eadn","text":""},{"location":"algo/dp/basic-dynamic-programming-1/#khi-nao-co-the-ap-dung-qh","title":"Khi n\u00e0o c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng QH\u0110","text":"<p>Quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi ta t\u00ecm \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c li\u00ean h\u1ec7 gi\u1eefa k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n c\u00f3 \u0111\u1ea7u v\u00e0o cho tr\u01b0\u1edbc v\u1edbi m\u1ed9t (ho\u1eb7c m\u1ed9t s\u1ed1) b\u00e0i to\u00e1n con t\u01b0\u01a1ng t\u1ef1 nh\u01b0ng c\u00f3 \u0111\u1ea7u v\u00e0o nh\u1ecf h\u01a1n. Khi ta bi\u1ebft \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 tr\u1ea1ng th\u00e1i b\u1eaft \u0111\u1ea7u c\u1ee7a b\u00e0i to\u00e1n, n\u00f3i c\u00e1ch kh\u00e1c - b\u00e0i to\u00e1n con v\u1edbi nh\u1eefng \u0111\u1ea7u v\u00e0o r\u1ea5t nh\u1ecf, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng QH\u0110 \u0111\u1ec3 t\u00ednh ra k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#trang-thai-cua-bai-toan-la-gi","title":"Tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n l\u00e0 g\u00ec?","text":"<p>Tr\u1ea1ng th\u00e1i l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p, m\u1ed9t b\u00e0i to\u00e1n con c\u1ee7a b\u00e0i to\u00e1n l\u1edbn v\u1edbi tham s\u1ed1 cho tr\u01b0\u1edbc.</p> <p>V\u00ed d\u1ee5, tr\u1ea1ng th\u00e1i trong b\u00e0i n\u00e0y l\u00e0 s\u1ed1 c\u00e1ch s\u1eafp x\u1ebfp \\(n\\) chi\u1ebfc gh\u1ebf th\u1ecfa m\u00e3n kh\u00f4ng c\u00f3 hai gh\u1ebf \u0111\u1ecf c\u1ea1nh nhau.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#lien-he-giua-cac-trang-thai","title":"Li\u00ean h\u1ec7 gi\u1eefa c\u00e1c tr\u1ea1ng th\u00e1i","text":"<p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng, \u0111i\u1ec1u quan tr\u1ecdng nh\u1ea5t l\u00e0 t\u00ecm ra m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa m\u1ed9t tr\u1ea1ng th\u00e1i v\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 tham s\u1ed1 nh\u1ecf h\u01a1n.</p> <p>G\u1ecdi \\(f[i]\\) l\u00e0 c\u00e1ch s\u1eafp x\u1ebfp \\(i\\) chi\u1ebfc gh\u1ebf th\u00e0nh m\u1ed9t h\u00e0ng d\u1ecdc. Khi \u0111\u00f3 ta c\u00f3:</p> \\[\\begin{cases} f[1] = 3; f[2] = 8 \\newline f[i] = 2f[i - 1] + 2f[i - 2], \\forall i=3;4;\\ldots;n(*) \\end{cases}\\] <p>C\u00f4ng th\u1ee9c \\((*)\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00f4ng th\u1ee9c truy h\u1ed3i.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#tim-ket-qua-cuoi-cung","title":"T\u00ecm k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng","text":"<p>Sau khi \u0111\u00e3 bi\u1ebft c\u00f4ng th\u1ee9c truy h\u1ed3i v\u00e0 t\u00ednh \u0111\u01b0\u1ee3c \\(f[1]\\), \\(f[2]\\), ta c\u00f3 th\u1ec3 t\u00ecm \\(f[n]\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#code-mau","title":"Code m\u1eabu:","text":"<p><pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nlong long n, f[100010];\n\nint main()\n{\n    cin &gt;&gt; n;\n    f[1] = 3;\n    f[2] = 8;\n    for (int i = 3; i &lt;= n; i++)\n        f[i] = 2 * f[i - 1] + 2 * f[i - 2];\n    cout &lt;&lt; f[n];\n    return 0;\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean l\u00e0 \\(O(n)\\), nh\u01b0ng c\u00e1ch th\u1ef1c hi\u1ec7n \u0111\u01a1n gi\u1ea3n h\u01a1n \u0111\u1ec7 quy c\u00f3 nh\u1edb.</p> <p>Ph\u00e2n t\u00edch: T\u1eeb v\u00ed d\u1ee5 tr\u00ean, ta th\u1ea5y ph\u01b0\u01a1ng ph\u00e1p QH\u0110 \u0111\u01b0\u1ee3c tri\u1ec3n khai theo c\u00e1c b\u01b0\u1edbc sau: * X\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n * T\u00ecm m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa c\u00e1c tr\u1ea1ng th\u00e1i (t\u00ecm c\u00f4ng th\u1ee9c truy h\u1ed3i) * Kh\u1edfi t\u1ea1o c\u00e1c gi\u00e1 tr\u1ecb ban \u0111\u1ea7u v\u00e0 c\u00e0i \u0111\u1eb7t c\u00f4ng th\u1ee9c truy h\u1ed3i</p> <p>Ta ti\u1ebfp t\u1ee5c v\u1edbi v\u00ed d\u1ee5 ti\u1ebfp theo:</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>Cho \\(N\\) lo\u1ea1i \u0111\u1ed3ng xu v\u00e0 gi\u00e1 ti\u1ec1n c\u1ee7a m\u1ed7i lo\u1ea1i l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean \\(v_1,v_2,\\ldots,v_n\\), v\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(S\\). T\u00ecm s\u1ed1 \u0111\u1ed3ng xu nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang b\u1eb1ng \\(S\\) (s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed3ng xu kh\u00f4ng gi\u1edbi h\u1ea1n), n\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i m\u1ed9t s\u1ed1 \u0111\u1ed3ng xu c\u00f3 t\u1ed5ng l\u00e0 \\(S\\) th\u00ec in ra \\(-1\\). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le S,N\\le1000\\) v\u00e0 \\(1\\le v_1,v_2,\\dots,v_n\\le S\\).</p> <p>Ta x\u00e2y d\u1ef1ng thu\u1eadt to\u00e1n QH\u0110:</p> <p>Tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n l\u00e0 s\u1ed1 \u0111\u1ed3ng xu nh\u1ecf nh\u1ea5t c\u00f3 t\u1ed5ng gi\u00e1 ti\u1ec1n l\u00e0 \\(i\\). Ta s\u1ebd d\u00f9ng m\u1ea3ng \\(f[i]\\) \u0111\u1ec3 l\u01b0u s\u1ed1 \u0111\u1ed3ng xu \u00edt nh\u1ea5t c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb l\u00e0 \\(i\\), n\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i c\u00e1c \u0111\u1ed3ng xu c\u00f3 t\u1ed5ng l\u00e0 \\(i\\) th\u00ec g\u00e1n \\(f[i] = -1\\).</p> <p>C\u1ea7n m\u1ed9t c\u00f4ng th\u1ee9c truy h\u1ed3i \u0111\u1ec3 t\u00ednh \\(f[i]\\) theo \\(f[1],f[2],\\ldots,f[i-1]\\).</p> <p>\u0110\u1ec3 \u00fd th\u1ea5y v\u1edbi \\(i\\) b\u1ea5t k\u00ec, n\u1ebfu c\u00f3 m\u1ed9t \u0111\u1ed3ng xu gi\u00e1 tr\u1ecb \\(v_j \\le i\\) th\u00ec ta c\u00f3 th\u1ec3 th\u00eam \u0111\u1ed3ng \u0111\u00f3 v\u00e0o c\u00e1c \u0111\u1ed3ng c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb l\u00e0 \\(i-v_j\\). Gi\u1ea3 s\u1eed \\(m\\) l\u00e0 s\u1ed1 \u0111\u1ed3ng xu \u00edt nh\u1ea5t c\u00f3 t\u1ed5ng l\u00e0 \\(i-v_j\\), khi \u0111\u00f3 c\u00f3 \\(m+1\\) \u0111\u1ed3ng xu c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb \\(i\\). N\u1ebfu \\(f[i] = -1\\) th\u00ec ta c\u1eadp nh\u1eadt \\(f[i] = m + 1\\), n\u1ebfu \\(f[i] \\ne -1\\) th\u00ec \\(f[i]=\\min(f[i], m+1)\\). </p> <p>Sau \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5: Cho c\u00e1c \u0111\u1ed3ng xu v\u1edbi gi\u00e1 ti\u1ec1n \\(1,3,5\\). V\u00e0 \\(S = 11\\).</p> <p>\u0110\u1ea7u ti\u00ean, ta b\u1eaft \u0111\u1ea7u t\u1eeb tr\u1ea1ng th\u00e1i c\u01a1 b\u1ea3n nh\u1ea5t: \\(f[0]=0\\).</p> <p>X\u00e9t \u0111\u1ebfn t\u1ed5ng \\(1\\). C\u00f3 duy nh\u1ea5t \u0111\u1ed3ng xu \\(1\\) nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng t\u1ed5ng \\(1\\), n\u00ean ta c\u00f3 \\(f[1]=f[1\u2212v_1]+1=f[0]+1=1\\). </p> <p>X\u00e9t \u0111\u1ebfn t\u1ed5ng \\(2\\). C\u0169ng gi\u1ed1ng nh\u01b0 t\u1ed5ng tr\u01b0\u1edbc, ch\u1ec9 c\u00f3 \\(1\\) \u0111\u1ed5ng xu kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(2\\), suy ra \\(f[2]=f[2\u2212v_1]+1=f[1]+1=2\\). </p> <p>\u0110\u1ebfn t\u1ed5ng \\(3\\). L\u1ea7n n\u00e0y c\u00f3 hai \u0111\u1ed3ng xu kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(3\\) l\u00e0 \\(1\\) v\u00e0 \\(3\\). N\u1ebfu ta ch\u1ecdn \u0111\u1ed3ng \\(1\\), ta c\u00f3 \\(f[3]=f[3\u2212v_1]+1=f[2]+1=3\\); n\u1ebfu ta ch\u1ecdn \u0111\u1ed3ng \\(3\\), ta c\u00f3 \\(f[3]=f[3\u2212v_2]+1=f[0]+1=1\\). R\u00f5 r\u00e0ng \\(1 \u2264 3\\) n\u00ean ta ch\u1ecdn \u0111\u1ed3ng \\(3\\) v\u00e0 \\(f[3]=1\\).</p> <p>X\u00e9t ti\u1ebfp \u0111\u1ebfn t\u1ed5ng \\(4,\\) t\u1ed5ng \\(5,\\ldots\\) \u0111\u1ebfn \\(11\\) b\u1eb1ng c\u00e1ch nh\u01b0 tr\u00ean.</p> <p>\u0110\u00e2y l\u00e0 l\u1eddi gi\u1ea3i cho t\u1ea5t c\u1ea3 c\u00e1c t\u1ed5ng:</p> T\u1ed5ng L\u01b0\u1ee3ng xu nh\u1ecf nh\u1ea5t Xu \u0111\u01b0\u1ee3c ch\u1ecdn(T\u1ed5ng c\u00f2n l\u1ea1i) \\(0\\) \\(0\\) - \\(1\\) \\(1\\) \\(1 (0)\\) \\(2\\) \\(2\\) \\(1 (1)\\) \\(3\\) \\(1\\) \\(3 (0)\\) \\(4\\) \\(2\\) \\(1 (3)\\) \\(5\\) \\(1\\) \\(5 (0)\\) \\(6\\) \\(2\\) \\(3 (3)\\) \\(7\\) \\(3\\) \\(1 (6)\\) \\(8\\) \\(2\\) \\(3 (5)\\) \\(9\\) \\(3\\) \\(1 (8)\\) \\(10\\) \\(2\\) \\(5 (5)\\) \\(11\\) \\(3\\) \\(1 (10)\\)"},{"location":"algo/dp/basic-dynamic-programming-1/#code-tham-khao","title":"Code tham kh\u1ea3o:","text":"<p><pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint f[N], v[N], n, S;\n// G\u00e1n f[i] = -1 n\u1ebfu kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 \u0111\u1ed3ng xu t\u1ed5ng b\u1eb1ng i\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; S;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; v[i];\n\n    for (int i = 1; i &lt;= S; i++)\n        f[i] = -1;\n\n    for (int i = 1; i &lt;= S; i++)\n        for (int j = 1; j &lt;= n; j++)\n            if (v[j] &lt;= i &amp;&amp; f[i - v[j]] != -1)\n                {\n                    if (f[i] != -1)\n                        f[i] = min(f[i], f[i - v[j]] + 1);\n                    else\n                        f[i] = f[i - v[j]] + 1;\n                }\n    cout &lt;&lt; f[S];\n}\n</code></pre> Nh\u1eadn x\u00e9t: \u0110\u00f4i khi, tr\u1ea1ng th\u00e1i trong b\u00e0i QH\u0110 ch\u00ednh l\u00e0 y\u00eau c\u1ea7u c\u1ee7a b\u00e0i to\u00e1n.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#tim-o-dai-day-con-khong-giam-dai-nhat","title":"T\u00ecm \u0111\u1ed9 d\u00e0i d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t","text":"<p>Ph\u1ea7n n\u00e0y gi\u1edbi thi\u1ec7u m\u1ed9t l\u1edbp b\u00e0i to\u00e1n QH\u0110 \u0111i\u1ec3n h\u00ecnh. Ta b\u1eaft \u0111\u1ea7u b\u1eb1ng b\u00e0i to\u00e1n sau:</p> <p>Cho d\u00e3y s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(a_1,a_2,\\ldots,a_n\\). T\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t c\u1ee7a d\u00e3y. D\u00e3y con c\u1ee7a m\u1ed9t d\u00e3y l\u00e0 d\u00e3y s\u1ed1 thu \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch b\u1ecf \u0111i m\u1ed9t s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y ban \u0111\u1ea7u. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 1000\\) v\u00e0 \\(1\\le a_1,a_2,\\dots,a_n\\le 10^9\\).</p> <p>\u0110\u1ea7u ti\u00ean c\u1ea7n x\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n.</p> <p>Ta \u0111\u1eb7t \\(f[i]\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t k\u1ebft th\u00fac \u1edf \\(a_i\\). \\(f[i]\\) l\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n. Ta kh\u1edfi t\u1ea1o \\(f[i] = 1\\) (\\(a_i\\) l\u00e0 m\u1ed9t d\u00e3y kh\u00f4ng gi\u1ea3m).</p> <p>V\u1edbi \\(j&lt;i\\) m\u00e0 \\(a_j \\ge a_i\\) th\u00ec ta c\u00f3 th\u1ec3 th\u00eam \\(a_i\\) v\u00e0o d\u00e3y kh\u00f4ng gi\u1ea3m k\u1ebft th\u00fac \u1edf \\(a_j\\), do \u0111\u00f3 n\u1ebfu \\(f[j] + 1\\) l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i c\u1ee7a \\(f[i]\\) th\u00ec ta c\u1eadp nh\u1eadt \\(f[i] = f[j] + 1\\).</p> <p>Cu\u1ed1i c\u00f9ng \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ed9 d\u00e0i d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t ta t\u00ednh \\(\\max  (f[1],f[2],\\ldots,f[n])\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#code-tham-khao_1","title":"Code tham kh\u1ea3o","text":"<pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint f[N], a[N], n;\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    for (int i = 1; i &lt;= n; i++)\n        f[i] = 1;\n    for (int i = 2; i &lt;= n; i++)\n        for (int j = 1; j &lt; i; j++)\n            if (a[j] &lt;= a[i])\n                f[i] = max(f[i], f[j] + 1);\n    int mx = f[1];\n    for (int i = 2; i &lt;= n; i++)\n        mx = max(mx, f[i]);\n    cout &lt;&lt; mx;\n}\n</code></pre> <p>V\u00ed d\u1ee5 minh h\u1ecda: </p> \\(i\\) \\(1\\) \\(2\\) \\(3\\) \\(4\\) \\(5\\) \\(a[i]\\) \\(1\\) \\(4\\) \\(2\\) \\(3\\) \\(7\\) \\(f[i]\\) \\(1\\) \\(f[1]+1=2\\) \\(f[1]+1=2\\) \\(f[3]+1=3\\) \\(f[4]+1=4\\) <p>Nh\u1eadn x\u00e9t: M\u1ed9t s\u1ed1 b\u00e0i QH\u0110 c\u00f3 tr\u1ea1ng th\u00e1i l\u00e0 y\u00eau c\u1ea7u b\u00e0i to\u00e1n v\u1edbi \\(i\\) ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y s\u1ed1.</p> <p>B\u00e0i to\u00e1n t\u00ecm d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p QH\u0110. M\u1ed9t s\u1ed1 bi\u1ebfn th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n n\u00e0y t\u1ea1o th\u00e0nh m\u1ed9t l\u1edbp c\u00e1c b\u00e0i to\u00e1n t\u01b0\u01a1ng t\u1ef1 nhau. C\u00e1c b\u00e0i to\u00e1n \u0111\u00f3 c\u00f3 m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t \u0111\u1eb7c tr\u01b0ng sau:</p> <ul> <li>M\u1ed7i ph\u1ea7n t\u1eed \\(a_i\\) xu\u1ea5t hi\u1ec7n t\u1ed1i \u0111a m\u1ed9t l\u1ea7n trong d\u00e3y con. V\u00ec v\u1eady ta s\u1ebd d\u00f9ng v\u00f2ng <code>For</code> duy\u1ec7t qua c\u00e1c ph\u1ea7n t\u1eed \\(a_i\\) trong d\u00e3y.</li> <li>Th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\u1ecdn ph\u1ea3i \u0111\u01b0\u1ee3c gi\u1eef nguy\u00ean so v\u1edbi d\u00e3y ban \u0111\u1ea7u.</li> </ul> <p>M\u1ed9t s\u1ed1 bi\u1ebfn th\u1ec3:</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#tim-day-con-khong-giam-dai-nhat","title":"T\u00ecm d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t","text":"<p>B\u00e0i to\u00e1n gi\u1ed1ng v\u00ed d\u1ee5 3, nh\u01b0ng y\u00eau c\u1ea7u in ra d\u00e3y con \u0111\u00f3. Ta c\u00f3 th\u1ec3 l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean, nh\u01b0ng th\u00eam m\u1ea3ng truy v\u1ebft \\(d[i]\\) l\u01b0u v\u1ecb tr\u00ed \\(j&lt;i\\) m\u00e0 \\(f[i]=f[j]+1\\). Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau: </p> <pre><code>## include &lt;iostream&gt;\n## include &lt;vector&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint f[N], a[N], d[N], n;\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    // B\u01b0\u1edbc QH\u0110\n    for (int i = 1; i &lt;= n; i++)\n    {\n        f[i] = 1;\n        for (int j = 1; j &lt; i; j++)\n            if (a[j] &lt;= a[i] &amp;&amp; f[i] &lt; f[j] + 1)\n            {\n                f[i] = f[j] + 1;\n                d[i] = j;\n            }\n    }\n    // T\u00ecm t l\u00e0 v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng c\u1ee7a d\u00e3y d\u00e0i nh\u1ea5t\n    int t = 1;\n    for (int i = 1; i &lt;= n; i++)\n        if (f[i] &gt; f[t])\n            t = i;\n    // In ra d\u00e3y con \u0111\u00f3\n    vector&lt;int&gt; seq;\n    while (t)\n    {\n        seq.push_back(a[t]);\n        t = d[t];\n    }\n    for (auto i = seq.rbegin(); i != seq.rend(); i++)\n        cout &lt;&lt; (*i) &lt;&lt; ' ';\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/#bo-tri-phong-hop-mat-tinh-thu-tu-so-voi-day-ban-au","title":"B\u1ed1 tr\u00ed ph\u00f2ng h\u1ecdp (m\u1ea5t t\u00ednh th\u1ee9 t\u1ef1 so v\u1edbi d\u00e3y ban \u0111\u1ea7u)","text":"<p>C\u00f3 \\(n\\) cu\u1ed9c h\u1ecdp, cu\u1ed9c h\u1ecdp th\u1ee9 \\(i\\) b\u1eaft \u0111\u1ea7u v\u00e0o th\u1eddi \u0111i\u1ec3m \\(A_i\\) v\u00e0 k\u1ebft th\u00fac \u1edf th\u1eddi \u0111i\u1ec3m \\(B_i\\). Do ch\u1ec9 c\u00f3 m\u1ed9t ph\u00f2ng h\u1ed9i th\u1ea3o n\u00ean 2 cu\u1ed9c h\u1ecdp b\u1ea5t k\u00ec s\u1ebd \u0111\u01b0\u1ee3c c\u00f9ng b\u1ed1 tr\u00ed ph\u1ee5c v\u1ee5 n\u1ebfu kho\u1ea3ng th\u1eddi gian l\u00e0m vi\u1ec7c c\u1ee7a ch\u00fang ch\u1ec9 giao nhau t\u1ea1i \u0111\u1ea7u m\u00fat ho\u1eb7c kh\u00f4ng giao nhau. H\u00e3y b\u1ed1 tr\u00ed ph\u00f2ng h\u1ecdp \u0111\u1ec3 ph\u1ee5c v\u1ee5 \u0111\u01b0\u1ee3c nhi\u1ec1u cu\u1ed9c h\u1ecdp nh\u1ea5t. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le1000\\) v\u00e0 \\(1\\le A_i\\le B_i\\le10^9\\) v\u1edbi m\u1ecdi \\(i=1;2;\\dots;n\\). Input: S\u1ed1 nguy\u00ean \\(n\\) v\u00e0 \\(n\\) d\u00f2ng ti\u1ebfp theo c\u00f3 d\u00f2ng th\u1ee9 \\(i\\) l\u00e0 th\u1eddi \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u \\(A_i\\) v\u00e0 k\u1ebft th\u00fac \\(B_i\\) c\u1ee7a cu\u1ed9c h\u1ecdp th\u1ee9 \\(i\\). Output: m\u1ed9t d\u00f2ng g\u1ed3m s\u1ed1 th\u1ee9 t\u1ef1 ban \u0111\u1ea7u c\u1ee7a c\u00e1c cu\u1ed9c h\u1ecdp \u0111\u01b0\u1ee3c b\u1ed1 tr\u00ed, theo th\u1ee9 t\u1ef1 th\u1eddi gian.</p> <p> H\u01b0\u1edbng d\u1eabn:</p> <p>S\u1eafp x\u1ebfp c\u00e1c cu\u1ed9c h\u1ecdp t\u0103ng d\u1ea7n theo th\u1eddi \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u \\(A_i\\). Th\u1ebf th\u00ec cu\u1ed9c h\u1ecdp \\(i\\) s\u1ebd b\u1ed1 tr\u00ed \u0111\u01b0\u1ee3c sau cu\u1ed9c h\u1ecdp \\(j\\) khi v\u00e0 ch\u1ec9 khi \\(j&lt;i\\) v\u00e0 \\(B_j \\le A_i\\). Y\u00eau c\u1ea7u b\u1ed1 tr\u00ed \u0111\u01b0\u1ee3c nhi\u1ec1u cu\u1ed9c h\u1ecdp nh\u1ea5t c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 vi\u1ec7c t\u00ecm d\u00e3y c\u00e1c cu\u1ed9c h\u1ecdp d\u00e0i nh\u1ea5t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n tr\u00ean.</p> <p></p> <pre><code>## include &lt;iostream&gt;\n## include &lt;vector&gt;\n## include &lt;algorithm&gt;\nusing namespace std;\n\nstruct Meeting\n{\n    Meeting(int aa = 1, int bb = 1, int nn = 1)\n    : a(aa), b(bb), num(nn)\n    { };\n    int a; // Th\u1eddi \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u cu\u1ed9c h\u1ecdp\n    int b; // Th\u1eddi \u0111i\u1ec3m k\u1ebft th\u00fac cu\u1ed9c h\u1ecdp\n    int num; // S\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a cu\u1ed9c h\u1ecdp\n};\n\nconst int N = 1e3 + 10;\nint n, f[N], d[N];\nMeeting m[N];\n\n// H\u00e0m so s\u00e1nh \u0111\u1ec3 s\u1eafp x\u1ebfp\nbool compare(const Meeting&amp; x, const Meeting&amp; y)\n{\n    return x.a &lt; y.a || (x.a == y.a &amp;&amp; x.b &lt; y.b);\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n    {\n        m[i].num = i;\n        cin &gt;&gt; m[i].a &gt;&gt; m[i].b;\n    }\n    sort(m + 1, m + n + 1, compare);\n    // B\u01b0\u1edbc quy ho\u1ea1ch \u0111\u1ed9ng\n    for (int i = 1; i &lt;= n; i++)\n    {\n        f[i] = 1;\n        for (int j = 1; j &lt; i; j++)\n            if (m[j].b &lt;= m[i].a &amp;&amp; f[i] &lt; f[j] + 1)\n            {\n                f[i] = f[j] + 1;\n                d[i] = j;\n            }\n    }\n    // Truy v\u1ebft\n    int t = 1;\n    for (int i = 1; i &lt;= n; i++)\n        if (f[i] &gt; f[t])\n            t = i;\n    vector&lt;int&gt; seq;\n    while (t)\n    {\n        seq.push_back(m[t].num);\n        t = d[t];\n    }\n    for (auto i = seq.rbegin(); i != seq.rend(); i++)\n        cout &lt;&lt; (*i) &lt;&lt; ' ';\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/#cho-thue-may","title":"Cho thu\u00ea m\u00e1y","text":"<p>Trung t\u00e2m t\u00ednh to\u00e1n hi\u1ec7u n\u0103ng cao nh\u1eadn \u0111\u01b0\u1ee3c \u0111\u01a1n \u0111\u1eb7t h\u00e0ng c\u1ee7a \\(n\\) kh\u00e1ch h\u00e0ng. Kh\u00e1ch h\u00e0ng \\(i\\) mu\u1ed1n s\u1eed d\u1ee5ng m\u00e1y trong kho\u1ea3ng th\u1eddi gian t\u1eeb \\(a_i\\) \u0111\u1ebfn \\(b_i\\) v\u00e0 tr\u1ea3 ti\u1ec1n thu\u00ea l\u00e0 \\(c_i\\). H\u00e3y b\u1ed1 tr\u00ed l\u1ecbch thu\u00ea m\u00e1y \u0111\u1ec3 t\u1ed5ng s\u1ed1 ti\u1ec1n thu \u0111\u01b0\u1ee3c l\u00e0 l\u1edbn nh\u1ea5t m\u00e0 th\u1eddi gian s\u1eed d\u1ee5ng m\u00e1y c\u1ee7a 2 kh\u00e1ch h\u00e0ng b\u1ea5t k\u00ec \u0111\u01b0\u1ee3c ph\u1ee5c v\u1ee5 \u0111\u1ec1u kh\u00f4ng giao nhau (c\u1ea3 trung t\u00e2m ch\u1ec9 c\u00f3 m\u1ed9t m\u00e1y cho thu\u00ea). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le1000\\) v\u00e0 \\(1\\le A_i\\le B_i\\le10^9, 1\\le c_i\\le10^6\\) v\u1edbi m\u1ecdi \\(i=1;2;\\dots;n\\).</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n b\u1ed1 tr\u00ed ph\u00f2ng h\u1ecdp, n\u1ebfu s\u1eafp x\u1ebfp c\u00e1c \u0111\u01a1n \u0111\u1eb7t h\u00e0ng theo th\u1eddi \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u, ta s\u1ebd \u0111\u01b0a \u0111\u01b0\u1ee3c v\u1ec1 b\u00e0i to\u00e1n t\u00ecm d\u00e3y con c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t. B\u00e0i to\u00e1n n\u00e0y l\u00e0 bi\u1ebfn th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n t\u00ecm d\u00e3y con t\u0103ng d\u00e0i nh\u1ea5t, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t b\u1eb1ng \u0111o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <pre><code>struct Value\n{\n    Value(int aa = 1, int bb = 1, int cc = 1, int nn = 1)\n    : a(aa), b(bb), num(nn)\n    { };\n    int a; // Th\u1eddi \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u thu\u00ea\n    int b; // Th\u1eddi \u0111i\u1ec3m k\u1ebft th\u00fac thu\u00ea\n    int c; // Ti\u1ec1n thu\u00ea\n    int num; // S\u1ed1 th\u1ee9 t\u1ef1\n}\n\nconst int N = 1e3 + 10;\nint n, f[N], d[N];\nValue m[N];\n\nbool compare(const Value&amp; x, const Value&amp; y)\n{\n    return x.a &lt; y.a || (x.a == y.a &amp;&amp; x.b &lt; y.b);\n}\nint main()\n{\n    // ...\n    sort(m + 1, m + n + 1, compare);\n    // B\u01b0\u1edbc quy ho\u1ea1ch \u0111\u1ed9ng\n    for (int i = 1; i &lt;= n; i++)\n    {\n        f[i] = m[i].c;\n        for (int j = 1; j &lt; i; j++)\n            if (m[j].b &lt;= m[i].a &amp;&amp; f[i] &lt; f[j] + m[i].c)\n            {\n                f[i] = f[j] + m[i].c;\n                d[i] = j;\n            }\n    }\n    // ... truy v\u1ebft\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/#day-tam-giac-bao-nhau","title":"D\u00e3y tam gi\u00e1c bao nhau","text":"<p>Cho \\(n\\) tam gi\u00e1c tr\u00ean m\u1eb7t ph\u1eb3ng. Tam gi\u00e1c \\(i\\) bao tam gi\u00e1c \\(j\\) n\u1ebfu 3 \u0111\u1ec9nh c\u1ee7a tam gi\u00e1c \\(j\\) \u0111\u1ec1u n\u1eb1m trong tam gi\u00e1c \\(i\\) (c\u00f3 th\u1ec3 n\u1eb1m tr\u00ean c\u1ea1nh). H\u00e3y t\u00ecm d\u00e3y tam gi\u00e1c bao nhau c\u00f3 nhi\u1ec1u tam gi\u00e1c nh\u1ea5t. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 1000\\) v\u00e0 t\u1ecda \u0111\u1ed9 c\u00e1c \u0111\u1ec9nh c\u1ee7a c\u00e1c tam gi\u00e1c thu\u1ed9c \u0111o\u1ea1n \\({-10}^6\\) \u0111\u1ebfn \\(10^6\\).</p> <p></p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>S\u1eafp x\u1ebfp c\u00e1c tam gi\u00e1c t\u0103ng d\u1ea7n v\u1ec1 di\u1ec7n t\u00edch. Khi \u0111\u00f3 tam gi\u00e1c \\(i\\) s\u1ebd bao tam gi\u00e1c \\(j\\) n\u1ebfu \\(j&lt;i\\) v\u00e0 3 \u0111\u1ec9nh c\u1ee7a \\(j\\) n\u1eb1m trong \\(i\\). T\u1eeb \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 b\u00e0i to\u00e1n t\u00ecm d\u00e3y \u201ct\u0103ng\u201d d\u00e0i nh\u1ea5t.</p> <p>B\u00e0i to\u00e1n c\u00f3 m\u1ed9t s\u1ed1 bi\u1ebfn th\u1ec3 kh\u00e1c nh\u01b0 t\u00ecm d\u00e3y h\u00ecnh tam gi\u00e1c, h\u00ecnh ch\u1eef nh\u1eadt\u2026 bao nhau c\u00f3 t\u1ed5ng di\u1ec7n t\u00edch l\u1edbn nh\u1ea5t.</p> <p>Vi\u1ec7c ki\u1ec3m tra \u0111i\u1ec3m \\(M\\) c\u00f3 n\u1eb1m trong tam gi\u00e1c \\(ABC\\) kh\u00f4ng c\u00f3 th\u1ec3 d\u1ef1a tr\u00ean 2 ph\u01b0\u01a1ng ph\u00e1p sau:</p> <ul> <li>T\u00ednh di\u1ec7n t\u00edch: \u0111i\u1ec3m \\(M\\) n\u1eb1m trong n\u1ebfu \\(S(ABC) = S(ABM) + S(ACM) + S(BCM)\\).</li> <li>K\u1ebb m\u1ed9t tia song song \\(Ox\\) t\u1eeb \\(M\\) v\u00e0 \u0111\u1ebfm s\u1ed1 giao \u0111i\u1ec3m v\u1edbi \\(3\\) \u0111o\u1ea1n \\(AB,BC,CA\\). N\u1ebfu s\u1ed1 giao \u0111i\u1ec3m l\u00e0 s\u1ed1 l\u1ebb th\u00ec \\(M\\) n\u1eb1m trong tam gi\u00e1c.</li> </ul> <p></p>"},{"location":"algo/dp/basic-dynamic-programming-1/#day-oi-dau","title":"D\u00e3y \u0111\u1ed5i d\u1ea5u","text":"<p>Cho d\u00e3y s\u1ed1 nguy\u00ean g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed \\(a_1, a_2,\\ldots, a_n\\) v\u00e0 c\u00e1c s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(L,U\\). H\u00e3y t\u00ecm d\u00e3y con \u0111\u1ed5i d\u1ea5u d\u00e0i nh\u1ea5t c\u1ee7a d\u00e3y \u0111\u00f3. D\u00e3y con c\u1ee7a d\u00e3y \\(a\\) l\u00e0 d\u00e3y thu \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch x\u00f3a \u0111i m\u1ed9t s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a \\(a\\). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le L\\le n\\le1000, 1\\le U\\le10^9\\) v\u00e0 \\(1\\le a_1, a_2,\\dots, a_n\\le10^9\\).</p> <p>D\u00e3y con \u0111\u1ed5i d\u1ea5u \\(a_{i_1},a_{i_2},\\ldots, a_{i_k}\\) ph\u1ea3i tho\u1ea3 m\u00e3n c\u00e1c \u0111i\u1ec1u ki\u1ec7n sau:</p> <ul> <li>\\(A_{i_1} &lt; A_{i_2} &gt; A_{i_3} &lt;\\ldots\\) ho\u1eb7c \\(A_{i_1} &gt; A_{i_2} &lt; A_{i_3} &gt;\\ldots\\)</li> <li>C\u00e1c ch\u1ec9 s\u1ed1 ph\u1ea3i c\u00e1ch nhau \u00edt nh\u1ea5t \\(L: i_2 - i_1 \\ge L, i_3 - i_2 \\ge L, \\ldots\\)</li> <li>Ch\u00eanh l\u1ec7ch gi\u1eefa 2 ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(U:\\) \\(\\|A_{i1} - A_{i2}\\| \\le U,\\) \\(\\|A_{i2} - A_{i3}\\| \\le U, \\ldots\\)</li> </ul> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>G\u1ecdi \\(Q[i]\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y con \u0111\u1ed5i d\u1ea5u c\u00f3 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng l\u00e0 \\(a_i\\) v\u00e0 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng l\u1edbn h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc. T\u01b0\u01a1ng t\u1ef1, \\(P[i]\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y con \u0111\u1ed5i d\u1ea5u c\u00f3 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng l\u00e0 \\(a_i\\) v\u00e0 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng nh\u1ecf h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc.</p> <p>Ta d\u1ec5 d\u00e0ng suy ra: - \\(Q[i] = \\max  (1, P[j] + 1)\\), v\u1edbi m\u1ecdi \\(j\\) th\u1ecfa m\u00e3n: \\(j \\le i-L\\) v\u00e0 \\(A_i - U \\le A_j &lt; A_i\\). - \\(P[i] = \\max  (1, Q[j] + 1)\\), v\u1edbi m\u1ecdi \\(j\\) th\u1ecfa m\u00e3n: \\(j \\le i-L\\) v\u00e0 \\(A_i &lt; A_j \\le A_i + U\\).</p> <pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint a[N], P[N], Q[N], n, U, L;\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; U &gt;&gt; L;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    for (int i = 1; i &lt;= n; i++)\n    {\n        P[i] = 1; Q[i] = 1;\n        for (int j = 1; j &lt;= i - L; j++)\n        {\n            if (a[i] - U &lt;= a[j] &amp;&amp; a[j] &lt; a[i])\n                Q[i] = max(Q[i], P[j] + 1);\n            if (a[j] &gt; a[i] &amp;&amp; a[j] &lt;= a[i] + U)\n                P[i] = max(P[i], Q[j] + 1);\n        }\n    }\n    int mx = Q[1];\n    for (int i = 1; i &lt;= n; i++)\n        mx = max(mx, max(P[i], Q[i]));\n    cout &lt;&lt; mx;\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/#day-so-wavio","title":"D\u00e3y s\u1ed1 WAVIO","text":"<p>D\u00e3y s\u1ed1 nguy\u00ean \\(a_1,a_2,a_3,\\ldots,a_k\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 d\u00e3y s\u1ed1 WAVIO n\u1ebfu t\u1ed3n t\u1ea1i s\u1ed1 t\u1ef1 nhi\u00ean \\(1\\le m\\le k\\) sao cho: * \\(a_1\\le a_2 \\le \\ldots \\le a_m\\) * \\(a_k\\le a_{k-1} \\le \\ldots \\le a_m\\)</p> <p>V\u00ed d\u1ee5 d\u00e3y s\u1ed1 <code>1 2 3 4 5 2 1</code> l\u00e0 1 d\u00e3y WAVIO \u0111\u1ed9 d\u00e0i 7. Cho d\u00e3y \\(a\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean, h\u00e3y ch\u1ec9 ra m\u1ed9t d\u00e3y con Wavio c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t tr\u00edch ra t\u1eeb d\u00e3y \u0111\u00f3. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 1000\\) v\u00e0 \\(1\\le a_1,a_2,\\ldots,a_n\\le10^9\\) v\u1edbi m\u1ecdi \\(i=1;2;\\ldots;n\\).</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>Ta s\u1ebd quy ho\u1ea1ch \u0111\u1ed9ng theo ph\u1ea7n t\u1eed \\(a_m\\) c\u1ee7a d\u00e3y WAVIO nh\u01b0 sau:</p> <ul> <li>\\(Q[i]\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a d\u00e3y con t\u0103ng d\u1ea7n d\u00e0i nh\u1ea5t k\u1ebft th\u00fac \u1edf \\(i\\)</li> <li>\\(P[i]\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a d\u00e3y con gi\u1ea3m d\u1ea7n d\u00e0i nh\u1ea5t b\u1eaft \u0111\u1ea7u \u1edf \\(i\\)</li> </ul> <p>Khi \u0111\u00f3, trong c\u00e1c d\u00e3y WAVIO c\u00f3 \\(i\\) l\u00e0 \u0111\u1ec9nh th\u00ec d\u00e3y d\u00e0i nh\u1ea5t s\u1ebd c\u00f3 \u0111\u1ed9 d\u00e0i \\(Q[i]+P[i]-1\\). \u0110\u1ebfn \u0111\u00e2y, ch\u1ec9 c\u1ea7n t\u00ecm \\(\\max(Q[i]+P[i]-1)\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#intermediate","title":"Intermediate","text":"<p>\u1ede m\u1ee5c n\u00e0y, ch\u00fang ta s\u1ebd l\u00e0m quen v\u1edbi QH\u0110 hai chi\u1ec1u, ta b\u1eaft \u0111\u1ea7u b\u1eb1ng v\u00ed d\u1ee5 sau:</p> <p>Cho m\u1ed9t b\u1ea3ng \u00f4 vu\u00f4ng g\u1ed3m \\(m\\) h\u00e0ng v\u00e0 \\(n\\) c\u1ed9t. K\u00ed hi\u1ec7u \\((i, j)\\) l\u00e0 \u00f4 \u1edf h\u00e0ng \\(i\\), c\u1ed9t \\(j\\). Gi\u1ea3 s\u1eed \\((i, j)\\) c\u00f3 \\(a_{i,j}\\) qu\u1ea3 t\u00e1o. B\u1ea1n An mu\u1ed1n \u0111i t\u1eeb \\((1, 1)\\) \u0111\u1ebfn \\((m, n)\\). \u1ede m\u1ed7i b\u01b0\u1edbc, An \u0111i sang ph\u1ea3i ho\u1eb7c xu\u1ed1ng d\u01b0\u1edbi \u0111\u00fang m\u1ed9t \u00f4. Khi An \u1edf \u00f4 \\((i, j)\\), An c\u00f3 th\u1ec3 l\u1ea5y h\u1ebft c\u00e1c qu\u1ea3 t\u00e1o \u1edf \u00f4 \u0111\u00f3. T\u00ednh s\u1ed1 qu\u1ea3 t\u00e1o nhi\u1ec1u nh\u1ea5t m\u00e0 An c\u00f3 th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le mn\\le10^6\\) v\u00e0 \\(1\\le a_{i, j}\\le 10^9\\) v\u1edbi m\u1ecdi \\(i,j\\).</p> <p></p> <p>\u00dd t\u01b0\u1edfng: </p> <p>B\u00e0i to\u00e1n n\u00e0y c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c v\u00ed d\u1ee5 tr\u01b0\u1edbc.</p> <p>\u0110\u1ea7u ti\u00ean, tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n ch\u00ednh l\u00e0 s\u1ed1 qu\u1ea3 t\u00e1o nhi\u1ec1u nh\u1ea5t An c\u00f3 th\u1ec3 l\u1ea5y khi \u0111i t\u1eeb \u00f4 \\((1,1)\\) \u0111\u1ebfn \u00f4 \\((i,j)\\), g\u1ecdi l\u00e0 \\(f[i][j]\\).</p> <p>\u0110\u1ea7u ti\u00ean ta kh\u1edfi t\u1ea1o \\(f[1][1] = a_{1,1}\\).</p> <p>V\u1edbi m\u1ecdi \\(i,j\\ge 2\\), \u0111\u1ec3 \u0111i t\u1eeb \\((1, 1)\\) \u0111\u1ebfn \\((i, j)\\) An c\u00f3 hai l\u1ef1a ch\u1ecdn: \u0111i qua \\((i - 1, j)\\) ho\u1eb7c \u0111i qua \\((i, j - 1)\\). An s\u1ebd ch\u1ecdn \u0111\u01b0\u1eddng \u0111i thu \u0111\u01b0\u1ee3c nhi\u1ec1u t\u00e1o nh\u1ea5t, do \u0111\u00f3 \\(f[i][j] = a_{i, j} + \\max(f[i][j - 1], f[i - 1][j])\\).</p> <p></p> <pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint m, n, a[N][N];\nlong long f[N][N];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++)\n        for (int j = 1; j &lt;= n; j++)\n            cin &gt;&gt; a[i][j];\n    for (int i = 1; i &lt;= m; i++)\n        for (int j = 1; j &lt;= n; j++)\n            f[i][j] = max(f[i - 1][j], f[i][j - 1]) + a[i][j];\n    cout &lt;&lt; f[m][n];\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/#vi-du-khac","title":"V\u00ed d\u1ee5 kh\u00e1c","text":"<p>AvoidRoads - 2003 TCO Semifinals 4 ChessMetrics - 2003 TCCC Round 4</p> <p>QH\u0110 hai chi\u1ec1u \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng nhi\u1ec1u trong nh\u1eefng b\u00e0i to\u00e1n ph\u1ee9c t\u1ea1p h\u01a1n. Ti\u00eau bi\u1ec3u l\u00e0 l\u1edbp b\u00e0i to\u00e1n x\u1ebfp \u0111\u1ed3.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#xep-vali-knapsack","title":"X\u1ebfp vali (Knapsack)","text":""},{"location":"algo/dp/basic-dynamic-programming-1/#mo-hinh","title":"M\u00f4 h\u00ecnh","text":"<p>C\u00f3 \\(n\\) \u0111\u1ed3 v\u1eadt, v\u1eadt th\u1ee9 \\(i\\) c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng \\(A_i\\) v\u00e0 gi\u00e1 tr\u1ecb \\(B_i\\). H\u00e3y ch\u1ecdn ra m\u1ed9t s\u1ed1 c\u00e1c \u0111\u1ed3 v\u1eadt, m\u1ed7i v\u1eadt m\u1ed9t c\u00e1i \u0111\u1ec3 x\u1ebfp v\u00e0o 1 vali c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng t\u1ed1i \u0111a \\(W\\) sao cho t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a vali l\u00e0 l\u1edbn nh\u1ea5t.</p> <p></p>"},{"location":"algo/dp/basic-dynamic-programming-1/#cong-thuc","title":"C\u00f4ng th\u1ee9c","text":"<p>Tr\u1ea1ng th\u00e1i b\u00e0i to\u00e1n: t\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a vali n\u1ebfu kh\u1ed1i l\u01b0\u1ee3ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(i\\).</p> <p>Nh\u1eadn x\u00e9t: gi\u00e1 tr\u1ecb c\u1ee7a vali ph\u1ee5 thu\u1ed9c v\u00e0o 2 y\u1ebfu t\u1ed1: c\u00f3 bao nhi\u00eau v\u1eadt \u0111ang \u0111\u01b0\u1ee3c x\u00e9t v\u00e0 tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a c\u00e1c v\u1eadt. Do \u0111\u00f3 b\u1ea3ng ph\u01b0\u01a1ng \u00e1n s\u1ebd l\u00e0 b\u1ea3ng 2 chi\u1ec1u:</p> <ul> <li>\\(L[i,j]\\): t\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a vali khi x\u00e9t t\u1eeb v\u1eadt 1 \u0111\u1ebfn v\u1eadt \\(i\\) v\u00e0 tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a vali ch\u01b0a v\u01b0\u1ee3t qu\u00e1 \\(j\\). Ch\u00fa \u00fd r\u1eb1ng khi x\u00e9t \u0111\u1ebfn \\(L[i,j]\\) th\u00ec c\u00e1c gi\u00e1 tr\u1ecb tr\u00ean b\u1ea3ng ph\u01b0\u01a1ng \u00e1n \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u.</li> </ul> <p>T\u00ednh \\(L[i,j]\\): v\u1eadt \u0111ang x\u00e9t l\u00e0 \\(A_i\\) v\u1edbi tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a vali kh\u00f4ng \u0111\u01b0\u1ee3c qu\u00e1 \\(j\\). C\u00f3 2 kh\u1ea3 n\u0103ng x\u1ea3y ra:</p> <ul> <li>N\u1ebfu ch\u1ecdn \\(A_i\\) \u0111\u01b0a v\u00e0o vali, tr\u1ecdng l\u01b0\u1ee3ng vali tr\u01b0\u1edbc \u0111\u00f3 ph\u1ea3i kh\u00f4ng qu\u00e1 \\(j - A_i\\). V\u00ec m\u1ed7i v\u1eadt ch\u1ec9 \u0111\u01b0\u1ee3c ch\u1ecdn 1 l\u1ea7n n\u00ean gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a vali l\u00fac \u0111\u00f3 l\u00e0 \\(L[i-1, j - A_i] + B_i\\).</li> <li>N\u1ebfu kh\u00f4ng ch\u1ecdn \\(A_i\\), tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a vali l\u00e0 nh\u01b0 c\u0169 (nh\u01b0 l\u00fac tr\u01b0\u1edbc khi ch\u1ecdn \\(A_i\\)): \\(L[i-1,j]\\).</li> </ul> <p>T\u00f3m l\u1ea1i ta c\u00f3 \\(L[i,j] = \\max(L[i-1, j - A_i] + B_i, L[i-1, j])\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#23-cai-at","title":"2.3. C\u00e0i \u0111\u1eb7t","text":"<pre><code>long long L[1010];\n\nfor (int i = 1; i &lt;= n; i++)\n    for (int j = 1; j &lt;= W; j++)\n        if (A[i] &lt;= j)\n            L[i][j] = max(L[i - 1][j - A[i]]  + B[i], L[i - 1][j]);\n        else\n            L[i][j] = L[i - 1][j];\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-1/#24-mot-so-bai-toan-khac","title":"2.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-dynamic-programming-1/#day-con-co-tong-bang-s","title":"D\u00e3y con c\u00f3 t\u1ed5ng b\u1eb1ng S","text":"<p>Cho d\u00e3y \\(A_1,A_2,\\ldots, A_N\\). T\u00ecm m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y \u0111\u00f3 c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 1000\\) v\u00e0 \\(1\\le A_1,A_2,\\ldots,A_n\\le10^9\\).</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>\u0110\u1eb7t \\(L[i,t]=1\\) n\u1ebfu c\u00f3 th\u1ec3 t\u1ea1o ra t\u1ed5ng \\(t\\) t\u1eeb m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed \\(A_1,A_2,\\ldots,A_i\\). Ng\u01b0\u1ee3c l\u1ea1i th\u00ec \\(L[i,t]=0\\). N\u1ebfu \\(L[n,S]=1\\) th\u00ec \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n tr\u00ean l\u00e0 \u201cc\u00f3\u201d.</p> <p>Ta c\u00f3 th\u1ec3 t\u00ednh \\(L[i,t]\\) theo c\u00f4ng th\u1ee9c: \\(L[i,t]=1\\) n\u1ebfu \\(L[i-1,t]=1\\) ho\u1eb7c \\(L[i-1,t-a[i]]=1\\).</p> <p>C\u00e0i \u0111\u1eb7t:</p> <p>N\u1ebfu \u00e1p d\u1ee5ng lu\u00f4n c\u00f4ng th\u1ee9c tr\u00ean th\u00ec ta c\u1ea7n d\u00f9ng b\u1ea3ng ph\u01b0\u01a1ng \u00e1n hai chi\u1ec1u. Ta c\u00f3 th\u1ec3 nh\u1eadn x\u00e9t r\u1eb1ng \u0111\u1ec3 t\u00ednh d\u00f2ng th\u1ee9 \\(i\\), ta ch\u1ec9 c\u1ea7n d\u00f2ng \\(i-1\\). B\u1ea3ng ph\u01b0\u01a1ng \u00e1n khi \u0111\u00f3 ch\u1ec9 c\u1ea7n 1 m\u1ea3ng 1 chi\u1ec1u \\(L[0..S]\\) v\u00e0 \u0111\u01b0\u1ee3c t\u00ednh nh\u01b0 sau:</p> <pre><code>long long L[1010];\n\nL[0] = 1;\nfor (int i = 1; i &lt;= n; i++)\n    for (int t = S; t &gt;= a[i]; t--)\n        if (L[t - a[i]] == 1)\n            L[t] = 1;\n</code></pre> <p>D\u1ec5 th\u1ea5y \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean l\u00e0 \\(O(m)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O(nm)\\), v\u1edbi \\(m\\) l\u00e0 t\u1ed5ng c\u1ee7a \\(n\\) s\u1ed1.</p> <p>Bonus: H\u00e3y th\u1eed ki\u1ec3m tra xem v\u00ec sao trong v\u00f2ng <code>for</code> th\u1ee9 hai, \\(t\\) \u0111\u01b0\u1ee3c duy\u1ec7t t\u1eeb \\(S\\) v\u1ec1 \\(a[i]\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u1eeb \\(a[i]\\) l\u00ean \\(S\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#chia-keo","title":"Chia k\u1eb9o","text":"<p>Cho \\(n\\) g\u00f3i k\u1eb9o, g\u00f3i th\u1ee9 \\(i\\) c\u00f3 \\(a_i\\) vi\u00ean. H\u00e3y chia c\u00e1c g\u00f3i th\u00e0nh 2 ph\u1ea7n sao cho ch\u00eanh l\u1ec7ch gi\u1eefa 2 ph\u1ea7n l\u00e0 \u00edt nh\u1ea5t. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 300\\) v\u00e0 \\(1\\le a_1,a_2,\\ldots,a_n\\le1000\\).</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>G\u1ecdi \\(T\\) l\u00e0 t\u1ed5ng s\u1ed1 k\u1eb9o c\u1ee7a \\(n\\) g\u00f3i. Ch\u00fang ta c\u1ea7n t\u00ecm s\u1ed1 \\(S\\) l\u1edbn nh\u1ea5t tho\u1ea3 m\u00e3n:</p> <ul> <li>\\(S \\le T/2\\).</li> <li>C\u00f3 m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y \\(a\\) c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\).</li> </ul> <p>Khi \u0111\u00f3 s\u1ebd c\u00f3 c\u00e1ch chia v\u1edbi ch\u00eanh l\u1ec7ch 2 ph\u1ea7n l\u00e0 \\(T-2S\\) l\u00e0 nh\u1ecf nh\u1ea5t v\u00e0 d\u00e3y con c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\) \u1edf tr\u00ean g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed l\u00e0 c\u00e1c g\u00f3i k\u1eb9o thu\u1ed9c ph\u1ea7n th\u1ee9 nh\u1ea5t. Ph\u1ea7n th\u1ee9 hai l\u00e0 c\u00e1c g\u00f3i k\u1eb9o c\u00f2n l\u1ea1i. Ta quy ho\u1ea1ch \u0111\u1ed9ng m\u1ea3ng \\(L[i,j]\\) \\((j\\le \\frac{T}{2})\\) nh\u01b0 sau: \\(L[i,j]=true\\) n\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y \\(a\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(i\\) c\u00f3 t\u1ed5ng b\u1eb1ng \\(j\\). Khi \u0111\u00f3: * N\u1ebfu \\(L[i-1,j]=true\\) th\u00ec \\(L[i,j] = true\\). * N\u1ebfu \\(L[i-1,j-a[i]]=true\\) th\u00ec \\(L[i,j] = true\\).</p> <p>Cu\u1ed1i c\u00f9ng, ta c\u1ea7n t\u00ecm s\u1ed1 \\(j\\) l\u1edbn nh\u1ea5t kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(\\frac{T}{2}\\) sao cho t\u1ed3n t\u1ea1i s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(i\\) \u0111\u1ec3 \\(L[i,j]=true\\), hay \\(L[n,j]=true\\). <pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 310;\nint n, a[N];\nbool L[N][N];\n\nint main()\n{\n    cin &gt;&gt; n;\n    int t = 0;\n    for (int i = 1; i &lt;= n; i++)\n    {\n        cin &gt;&gt; a[i];\n        t += a[i];\n    }\n    for (int i = 0; i &lt;= n; i++)\n        L[i][0] = true;\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; 2 * j &lt;= t; j++)\n        {\n            L[i][j] |= L[i - 1][j];\n            if (a[i] &lt;= j)\n                L[i][j] |= L[i - 1][j - a[i]];\n        }\n    int mx = 0;\n    for (int i = 1; 2 * i &lt;= t; i++)\n        if (L[n][i])\n            mx = i;\n    cout &lt;&lt; mx &lt;&lt; ' ' &lt;&lt; t - mx;\n}\n</code></pre></p>"},{"location":"algo/dp/basic-dynamic-programming-1/#market-olympic-balkan-2000","title":"Market (Olympic Balkan 2000)","text":"<p>Ng\u01b0\u1eddi \u0111\u00e1nh c\u00e1 Clement b\u1eaft \u0111\u01b0\u1ee3c \\(n\\) con c\u00e1, kh\u1ed1i l\u01b0\u1ee3ng con c\u00e1 th\u1ee9 \\(i\\) l\u00e0 \\(a_i\\), \u0111em b\u00e1n ngo\u00e0i ch\u1ee3. \u1ede ch\u1ee3 c\u00e1, ng\u01b0\u1eddi ta kh\u00f4ng mua c\u00e1 theo t\u1eebng con m\u00e0 mua theo m\u1ed9t l\u01b0\u1ee3ng n\u00e0o \u0111\u00f3. Ch\u1eb3ng h\u1ea1n \\(3 kg\\), \\(5kg\\)...</p> <p>V\u00ed d\u1ee5: c\u00f3 3 con c\u00e1, kh\u1ed1i l\u01b0\u1ee3ng l\u1ea7n l\u01b0\u1ee3t l\u00e0: \\(3, 2, 4\\). Mua l\u01b0\u1ee3ng \\(6kg\\) s\u1ebd ph\u1ea3i l\u1ea5y con c\u00e1 th\u1ee9 2 v\u00e0 v\u00e0 th\u1ee9 3. Mua l\u01b0\u1ee3ng \\(3 kg\\) th\u00ec l\u1ea5y con th\u1ee9 nh\u1ea5t. Kh\u00f4ng th\u1ec3 mua l\u01b0\u1ee3ng \\(8 kg\\). N\u1ebfu b\u1ea1n l\u00e0 ng\u01b0\u1eddi \u0111\u1ea7u ti\u00ean mua c\u00e1, c\u00f3 bao nhi\u00eau l\u01b0\u1ee3ng b\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn? \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le1000\\), \\(1\\le a_i\\le1000\\).</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>Th\u1ef1c ch\u1ea5t b\u00e0i to\u00e1n l\u00e0 t\u00ecm c\u00e1c s\u1ed1 \\(S\\) m\u00e0 c\u00f3 m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y \\(a\\) c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\). </p> <p>Ta c\u00f3 th\u1ec3 d\u00f9ng ph\u01b0\u01a1ng ph\u00e1p \u0111\u00e1nh d\u1ea5u c\u1ee7a b\u00e0i chia k\u1eb9o \u1edf tr\u00ean r\u1ed3i \u0111\u1ebfm c\u00e1c gi\u00e1 tr\u1ecb \\(t\\) m\u00e0 \\(L[n, t]=true\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#ien-dau","title":"\u0110i\u1ec1n d\u1ea5u","text":"<p>Cho \\(n\\) s\u1ed1 t\u1ef1 nhi\u00ean \\(A_1,A_2, \\ldots,A_n\\). Ban \u0111\u1ea7u c\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u1eb7t li\u00ean ti\u1ebfp theo \u0111\u00fang th\u1ee9 t\u1ef1 c\u00e1ch nhau b\u1edfi d\u1ea5u \"?\": <code>A1 ? A2 ? ... ? AN</code>. Cho tr\u01b0\u1edbc s\u1ed1 nguy\u00ean \\(S\\), c\u00f3 c\u00e1ch n\u00e0o thay c\u00e1c d\u1ea5u <code>?</code> b\u1eb1ng d\u1ea5u <code>+</code> hay d\u1ea5u <code>\u2212</code> \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ed9t bi\u1ec3u th\u1ee9c s\u1ed1 h\u1ecdc cho gi\u00e1 tr\u1ecb l\u00e0 \\(S\\) kh\u00f4ng?</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>\u0110\u1eb7t \\(L[i,t]=1\\) n\u1ebfu c\u00f3 th\u1ec3 \u0111i\u1ec1n d\u1ea5u v\u00e0o \\(i\\) s\u1ed1 \u0111\u1ea7u ti\u00ean v\u00e0 cho k\u1ebft qu\u1ea3 b\u1eb1ng \\(t\\). Ta c\u00f3 c\u00f4ng th\u1ee9c sau \u0111\u1ec3 t\u00ednh \\(L\\): - <code>L[1, a[1]] = 1</code> - <code>L[i, t] = 1</code> n\u1ebfu <code>L[i - 1, t + a[i]] = 1</code> ho\u1eb7c <code>L[i - 1, t - a[i]] = 1</code>.</p> <p>N\u1ebfu <code>L[n, S] = 1</code> th\u00ec c\u00e2u tr\u1ea3 l\u1eddi c\u1ee7a b\u00e0i to\u00e1n l\u00e0 c\u00f3.</p> <p>Khi c\u00e0i \u0111\u1eb7t, c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t m\u1ea3ng 2 chi\u1ec1u (l\u01b0u to\u00e0n b\u1ed9 b\u1ea3ng ph\u01b0\u01a1ng \u00e1n) ho\u1eb7c 2 m\u1ea3ng m\u1ed9t chi\u1ec1u (\u0111\u1ec3 l\u01b0u d\u00f2ng \\(i\\) v\u00e0 d\u00f2ng \\(i-1\\)). Ch\u00fa \u00fd l\u00e0 ch\u1ec9 s\u1ed1 theo \\(t\\) c\u1ee7a c\u00e1c m\u1ea3ng ph\u1ea3i c\u00f3 c\u1ea3 ph\u1ea7n \u00e2m (t\u1ee9c l\u00e0 t\u1eeb \\(-T\\) \u0111\u1ebfn \\(T\\), v\u1edbi \\(T\\) l\u00e0 t\u1ed5ng c\u1ee7a \\(n\\) s\u1ed1), v\u00ec trong b\u00e0i n\u00e0y ch\u00fang ta d\u00f9ng c\u1ea3 d\u1ea5u <code>-</code> n\u00ean c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u1ed5ng \u00e2m.</p> <p>B\u00e0i n\u00e0y c\u00f3 m\u1ed9t bi\u1ebfn th\u1ec3 l\u00e0 \u0111\u1eb7t d\u1ea5u sao cho k\u1ebft qu\u1ea3 l\u00e0 m\u1ed9t s\u1ed1 chia h\u1ebft cho \\(k\\). Ta c\u00f3 thu\u1eadt gi\u1ea3i t\u01b0\u01a1ng t\u1ef1 b\u00e0i to\u00e1n tr\u00ean b\u1eb1ng c\u00e1ch thay c\u00e1c ph\u00e9p c\u1ed9ng, tr\u1eeb b\u1eb1ng c\u00e1c ph\u00e9p c\u1ed9ng v\u00e0 tr\u1eeb theo modulo \\(k\\) v\u00e0 d\u00f9ng m\u1ea3ng \u0111\u00e1nh d\u1ea5u v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn \\(k-1\\) (l\u00e0 c\u00e1c s\u1ed1 d\u01b0 c\u00f3 th\u1ec3 c\u00f3 khi chia cho \\(k\\)). \u0110\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(L[n,0]\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#expression","title":"Expression","text":"<p>Cho \\(n\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng. H\u00e3y chia ch\u00fang th\u00e0nh 2 nh\u00f3m sao cho t\u00edch c\u1ee7a t\u1ed5ng 2 nh\u00f3m l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <ul> <li>G\u1ecdi \\(T\\) l\u00e0 t\u1ed5ng \\(n\\) s\u1ed1 nguy\u00ean \u0111\u00f3. Gi\u1ea3 s\u1eed ta chia d\u00e3y th\u00e0nh 2 nh\u00f3m, g\u1ecdi \\(S\\) l\u00e0 t\u1ed5ng c\u1ee7a m\u1ed9t nh\u00f3m, t\u1ed5ng nh\u00f3m c\u00f2n l\u1ea1i l\u00e0 \\(T-S\\) v\u00e0 t\u00edch c\u1ee7a t\u1ed5ng 2 nh\u00f3m l\u00e0 \\(S(T-S)\\). B\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p \u0111\u00e1nh d\u1ea5u ta x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c m\u1ecdi s\u1ed1 \\(S\\) l\u00e0 t\u1ed5ng c\u1ee7a m\u1ed9t nh\u00f3m (nh\u01b0 b\u00e0i Market) v\u00e0 t\u00ecm s\u1ed1 \\(S\\) sao cho \\(S(T-S)\\) \u0111\u1ea1t \\(\\max\\).</li> <li>B\u00e0i to\u00e1n tr\u00ean c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 b\u00e0i chia k\u1eb9o. Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(S\\le \\frac{T}{2}\\). \u0110\u1ec3 \u00fd r\u1eb1ng \\(S+(T-S)=T\\), l\u00e0 m\u1ed9t s\u1ed1 c\u1ed1 \u0111\u1ecbnh. C\u00f3 th\u1ec3 ch\u1ee9ng minh \\(S(T-S)\\) \u0111\u1ea1t max khi v\u00e0 ch\u1ec9 khi \\(S\\) l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3. Khi \u0111\u00f3 ch\u1ec9 c\u1ea7n chia c\u00e1c s\u1ed1 th\u00e0nh hai nh\u00f3m sao cho ch\u00eanh l\u1ec7ch gi\u1eefa hai nh\u00f3m l\u00e0 \u00edt nh\u1ea5t.</li> </ul>"},{"location":"algo/dp/basic-dynamic-programming-1/#farmer-ioi-2004","title":"Farmer (IOI 2004)","text":"<p>M\u1ed9t ng\u01b0\u1eddi c\u00f3 \\(N\\) m\u1ea3nh \u0111\u1ea5t v\u00e0 \\(M\\) d\u1ea3i \u0111\u1ea5t. C\u00e1c m\u1ea3nh \u0111\u1ea5t c\u00f3 th\u1ec3 coi l\u00e0 m\u1ed9t t\u1ee9 gi\u00e1c v\u00e0 c\u00e1c d\u1ea3i \u0111\u1ea5t th\u00ec coi nh\u01b0 m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng. D\u1ecdc theo c\u00e1c d\u1ea3i \u0111\u1ea5t \u00f4ng ta tr\u1ed3ng c\u00e1c c\u00e2y b\u00e1ch, d\u1ea3i \u0111\u1ea5t th\u1ee9 \\(i\\) c\u00f3 \\(A_i\\) c\u00e2y b\u00e1ch. \u00d4ng ta c\u0169ng tr\u1ed3ng c\u00e1c c\u00e2y b\u00e1ch tr\u00ean vi\u1ec1n c\u1ee7a c\u00e1c m\u1ea3nh \u0111\u1ea5t, m\u1ea3nh \u0111\u1ea5t th\u1ee9 \\(j\\) c\u00f3 \\(B_j\\) c\u00e2y b\u00e1ch. C\u1ea3 \u1edf tr\u00ean c\u00e1c m\u1ea3nh \u0111\u1ea5t v\u00e0 d\u1ea3i \u0111\u1ea5t, xen gi\u1eefa 2 c\u00e2y b\u00e1ch \u00f4ng ta tr\u1ed3ng m\u1ed9t c\u00e2y \u00f4liu. \u00d4ng ta cho con trai \u0111\u01b0\u1ee3c ch\u1ecdn c\u00e1c m\u1ea3nh \u0111\u1ea5t v\u00e0 d\u1ea3i \u0111\u1ea5t tu\u1ef3 \u00fd v\u1edbi \u0111i\u1ec1u ki\u1ec7n t\u1ed5ng s\u1ed1 c\u00e2y b\u00e1ch kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(Q\\). Ng\u01b0\u1eddi con trai ph\u1ea3i ch\u1ecdn th\u1ebf n\u00e0o \u0111\u1ec3 c\u00f3 nhi\u1ec1u c\u00e2y \u00f4liu (lo\u00e0i c\u00e2y m\u00e0 anh ta th\u00edch) nh\u1ea5t.</p> <p></p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>D\u1ec5 th\u1ea5y m\u1ea3nh \u0111\u1ea5t th\u1ee9 \\(i\\) c\u00f3 \\(A_i\\) c\u00e2y \u00f4liu v\u00e0 d\u1ea3i \u0111\u1ea5t th\u1ee9 \\(j\\) c\u00f3 \\(B_j-1\\) c\u00e2y \u00f4liu. Coi c\u00e1c m\u1ea3nh \u0111\u1ea5t v\u00e0 d\u1ea3i \u0111\u1ea5t l\u00e0 c\u00e1c \u201c\u0111\u1ed3 v\u1eadt\u201d, \u0111\u1ed3 v\u1eadt th\u1ee9 \\(k\\) c\u00f3 kh\u1ed1i l\u01b0\u1ee3ng \\(W_k\\) v\u00e0 gi\u00e1 tr\u1ecb \\(V_k\\) (n\u1ebfu \\(k\\) l\u00e0 m\u1ea3nh \u0111\u1ea5t \\(i\\) th\u00ec \\(W_k=V_k=A_i\\), n\u1ebfu \\(k\\) l\u00e0 d\u1ea3i \u0111\u1ea5t \\(j\\) th\u00ec \\(W_k=B_j,V_k=B_j-1\\)). Ta c\u1ea7n ch\u1ecdn c\u00e1c \u201c\u0111\u1ed3 v\u1eadt\u201d, sao cho t\u1ed5ng \u201ckh\u1ed1i l\u01b0\u1ee3ng\u201d c\u1ee7a ch\u00fang kh\u00f4ng v\u01b0\u1ee3t \\(Q\\) v\u00e0 t\u1ed5ng \u201cgi\u00e1 tr\u1ecb\u201d l\u00e0 l\u1edbn nh\u1ea5t. \u0110\u00e2y ch\u00ednh l\u00e0 b\u00e0i to\u00e1n x\u1ebfp bal\u00f4 \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean.</p>"},{"location":"algo/dp/basic-dynamic-programming-1/#ket","title":"K\u1ebft","text":"<p>Quy ho\u1ea1ch \u0111\u1ed9ng l\u00e0 ph\u01b0\u01a1ng ph\u00e1p t\u1ef1 nhi\u00ean v\u00e0 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c trong r\u1ea5t nhi\u1ec1u b\u00e0i to\u00e1n. Khi g\u1eb7p m\u1ed9t b\u00e0i to\u00e1n, h\u00e3y \u0111\u1ec3 \u00fd xem n\u00f3 c\u00f3 \u0111\u01b0\u1ee3c gi\u1ea3i trong th\u1eddi gian \u0111a th\u1ee9c kh\u00f4ng. N\u1ebfu c\u00f3, h\u00e3y th\u1eed x\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i c\u1ee7a n\u00f3 v\u00e0 m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa c\u00e1c tr\u1ea1ng th\u00e1i. \u0110\u00f4i khi ta c\u1ea7n ph\u00e2n t\u00edch m\u1ed9t ch\u00fat \u0111\u1ec3 \u0111\u01b0a b\u00e0i to\u00e1n v\u1ec1 QH\u0110 nh\u01b0 c\u00e1c v\u00ed d\u1ee5 \u1edf tr\u00ean.</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp t\u1ed1t!</p>"},{"location":"algo/dp/basic-dynamic-programming-2/","title":"Quy ho\u1ea1ch \u0111\u1ed9ng c\u01a1 b\u1ea3n (Ph\u1ea7n 2)","text":"<p>B\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c s\u01b0u t\u1ea7m v\u00e0 b\u1ed5 sung t\u1eeb b\u00e0i vi\u1ebft \"M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng kinh \u0111i\u1ec3n\" c\u1ee7a th\u1ea7y Nguy\u1ec5n Thanh T\u00f9ng, T\u1ea1p ch\u00ed Tin h\u1ecdc v\u00e0 Nh\u00e0 tr\u01b0\u1eddng s\u1ed1 \\(1\\), n\u0103m \\(2005\\).</p> <p>Ng\u01b0\u1eddi vi\u1ebft: Nguy\u1ec5n Anh B\u1ea3o - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i</p> <p>Reviewer: * H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM * Ng\u00f4 Nh\u1eadt Quang - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>\u1ede ph\u1ea7n tr\u01b0\u1edbc, ch\u00fang ta \u0111\u00e3 \u0111\u01b0\u1ee3c l\u00e0m quen v\u1edbi kh\u00e1i ni\u1ec7m Quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ed3ng th\u1eddi xem x\u00e9t m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n \u0111i\u1ec3n h\u00ecnh. B\u00e0i vi\u1ebft n\u00e0y nh\u1eb1m gi\u1edbi thi\u1ec7u th\u00eam m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng th\u01b0\u1eddng g\u1eb7p kh\u00e1c.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#1-bien-oi-xau","title":"1. Bi\u1ebfn \u0111\u1ed5i x\u00e2u","text":"<p>\u0110\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c tr\u00ecnh b\u00e0y v\u00e0 t\u00ednh to\u00e1n, trong m\u1ee5c \\((1)\\) ta s\u1ebd quy \u01b0\u1edbc c\u00e1c x\u00e2u \u0111\u1ec1u b\u1eaft \u0111\u1ea7u t\u1eeb ch\u1ec9 s\u1ed1 \\(1\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#11-mo-hinh","title":"1.1. M\u00f4 h\u00ecnh","text":"<p>Cho hai x\u00e2u \\(A\\), \\(B\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(m\\) v\u00e0 \\(n\\), b\u1eaft \u0111\u1ea7u t\u1eeb ch\u1ec9 s\u1ed1 \\(1\\). Ta mu\u1ed1n bi\u1ebfn \u0111\u1ed5i x\u00e2u \\(A\\) v\u1ec1 x\u00e2u \\(B\\) qua m\u1ed9t s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i thu\u1ed9c c\u00e1c lo\u1ea1i sau: * Ch\u00e8n k\u00ed t\u1ef1 \\(C\\) v\u00e0o sau k\u00ed t\u1ef1 th\u1ee9 \\(i\\): <code>I i C</code>, <code>i</code> c\u00f3 th\u1ec3 b\u1eb1ng \\(0\\) * Thay th\u1ebf k\u00ed t\u1ef1 \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(i\\) b\u1eb1ng k\u00ed t\u1ef1 \\(C\\): <code>R i C</code> * Xo\u00e1 k\u00ed t\u1ef1 \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(i\\): <code>D i</code></p> <p>H\u00e3y t\u00ecm s\u1ed1 \u00edt nh\u1ea5t c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u0111\u1ec3 bi\u1ebfn x\u00e2u \\(A\\) th\u00e0nh x\u00e2u \\(B\\). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n \\times m \\le 10^6\\).</p> <p>V\u00ed d\u1ee5 1: <code>ILoveVNOI</code>\\(\\to\\)<code>ILoveVNOIMore</code></p> L\u01b0\u1ee3t bi\u1ebfn \u0111\u1ed5i Ph\u00e9p bi\u1ebfn \u0111\u1ed5i A \\(1\\) <code>I 9 e</code> <code>ILoveVNOIe</code> \\(2\\) <code>I 9 r</code> <code>ILoveVNOIre</code> \\(3\\) <code>I 9 o</code> <code>ILoveVNOIore</code> \\(4\\) <code>I 9 M</code> <code>ILoveVNOIMore</code> <p>V\u00ed d\u1ee5 2: <code>asrefghuar</code>\\(\\to\\)<code>regular</code></p> L\u01b0\u1ee3t bi\u1ebfn \u0111\u1ed5i Ph\u00e9p bi\u1ebfn \u0111\u1ed5i A \\(1\\) <code>R 8 l</code> <code>asrefghlar</code> \\(2\\) <code>R 7 u</code> <code>asrefgular</code> \\(3\\) <code>D 5</code> <code>asregular</code> \\(4\\) <code>D 1</code> <code>sregular</code> \\(5\\) <code>D 1</code> <code>regular</code> <p>V\u00ed d\u1ee5 3: <code>D9M12Y2022</code>\\(\\to\\)<code>D1M1Y2023</code></p> L\u01b0\u1ee3t bi\u1ebfn \u0111\u1ed5i Ph\u00e9p bi\u1ebfn \u0111\u1ed5i A \\(1\\) <code>R 2 1</code> <code>D1M12Y2022</code> \\(2\\) <code>R 10 3</code> <code>D1M12Y2023</code> \\(3\\) <code>D 5</code> <code>D1M1Y2023</code>"},{"location":"algo/dp/basic-dynamic-programming-2/#12-loi-giai","title":"1.2. L\u1eddi gi\u1ea3i","text":"<p>Ch\u00fa \u00fd: Ch\u1ec9 s\u1ed1 b\u1eaft \u0111\u1ea7u c\u1ee7a \\(A\\) v\u00e0 \\(B\\) l\u00e0 \\(1\\), kh\u00f4ng ph\u1ea3i \\(0\\).</p> <p>\u0110\u1eb7t \\(A_i\\) l\u00e0 x\u00e2u g\u1ed3m \\(i\\) k\u00ed t\u1ef1 \u0111\u1ea7u ti\u00ean c\u1ee7a \\(A\\), \\(B_j\\) l\u00e0 x\u00e2u g\u1ed3m \\(j\\) k\u00ed t\u1ef1 \u0111\u1ea7u c\u1ee7a \\(B\\). Quy \u01b0\u1edbc \\(A_0\\) v\u00e0 \\(B_0\\) l\u00e0 2 x\u00e2u r\u1ed7ng (c\u00f3 \\(0\\) k\u00ed t\u1ef1).</p> <p>\u00dd t\u01b0\u1edfng b\u00e0i to\u00e1n n\u00e0y l\u00e0 quy ho\u1ea1ch \u0111\u1ed9ng m\u1ea3ng \\(L[i][j]\\) - s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t \u0111\u1ec3 bi\u1ebfn x\u00e2u \\(A_i\\) th\u00e0nh x\u00e2u \\(B_j\\).</p> <p>D\u1ec5 th\u1ea5y \\(L[0][j]=j\\) v\u00e0 \\(L[i][0]=i\\).</p> <p>Ta \u0111i t\u00ecm c\u00f4ng th\u1ee9c truy h\u1ed3i:</p> <p>C\u00f3 2 tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra:</p> <ul> <li>N\u1ebfu \\(A[i] = B[j] = C\\): C\u1ea7n bi\u1ebfn x\u00e2u \\(A_{i-1}C\\) th\u00e0nh x\u00e2u \\(B_{j-1}C\\). \u0110\u1ec3 bi\u1ebfn \u0111\u1ed5i t\u1ed1i \u01b0u, c\u1ea7n bi\u1ebfn \u0111\u1ed5i x\u00e2u \\(A_{i-1}\\) th\u00e0nh x\u00e2u \\(B_{j-1}\\) sau \u00edt ph\u00e9p bi\u1ebfn \u0111\u1ed5i nh\u1ea5t, gi\u1eef nguy\u00ean k\u00ed t\u1ef1 \\(C\\). S\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i c\u1ea7n thi\u1ebft l\u00e0 \\(L[i - 1][ j - 1]\\).</li> <li>N\u1ebfu \\(A[i] = C \\ne B[j] = D\\): \u0110\u1ec3 bi\u1ebfn \u0111\u1ed5i \\(A_{i-1}C\\) th\u00e0nh \\(B_{j-1}D\\), ta c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t trong c\u00e1c c\u00e1ch sau:<ol> <li>Xo\u00e1 k\u00ed t\u1ef1 \\(C\\): Sau khi x\u00f3a, c\u1ea7n bi\u1ebfn \\(A_{i-1}\\) th\u00e0nh \\(B_{j}\\). S\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t l\u00e0 \\(L[i-1][j]\\). Do \u0111\u00f3 s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i ph\u1ea3i d\u00f9ng l\u00e0 \\(L[i-1][j]+1\\).</li> <li>Thay th\u1ebf \\(C\\) b\u1edfi \\(D\\): Sau \u0111\u00f3, c\u1ea7n bi\u1ebfn \\(A_{i-1}D\\) th\u00e0nh \\(B_{j-1}D\\). S\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t l\u00e0 \\(L[i-1][j-1]+1\\).</li> <li>Ch\u00e8n \\(D\\) v\u00e0o sau \\(C\\): Sau \u0111\u00f3, c\u1ea7n bi\u1ebfn \u0111\u1ed5i \\(A_{i}D\\) th\u00e0nh \\(B_{j-1}D\\). S\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t l\u00e0 \\(L[i][j -1] + 1\\).</li> <li>C\u00e1c c\u00e1ch bi\u1ebfn \u0111\u1ed5i kh\u00e1c \u0111\u1ec1u ph\u1ea3i ch\u1ee9a ph\u00e9p bi\u1ebfn \u0111\u1ed5i \\(1,2\\) ho\u1eb7c \\(3\\). Do \u0111\u00f3, ta c\u00f3 th\u1ec3 \u0111\u1ea3o th\u1ee9 t\u1ef1 c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u0111\u1ec3 \u0111\u01b0a v\u1ec1 l\u1ea7n bi\u1ebfn \u0111\u1ed5i \u0111\u1ea7u ti\u00ean l\u00e0 \\(1,2\\) ho\u1eb7c \\(3\\).</li> </ol> </li> </ul> <p>T\u1ed5ng k\u1ebft l\u1ea1i, ta c\u00f3 c\u00f4ng th\u1ee9c QH\u0110 sau:</p> <ul> <li>\\(L[0][j]=j\\), v\u1edbi m\u1ecdi \\(j=0,1,\\ldots,n\\).</li> <li>\\(L[i][0]=i\\), v\u1edbi m\u1ecdi \\(i=0,1,\\ldots,m\\).</li> <li>\\(L[i][j] =L[i\u22121][j\u22121]\\) n\u1ebfu \\(A[i] = B[j]\\).</li> <li>\\(L[i][j] = \\min(L[i\u22121][j], L[i][j\u22121], L[i\u22121][j\u22121]) + 1\\) n\u1ebfu \\(A[i] \\ne B[j]\\).</li> </ul> <p>B\u00e0i n\u00e0y ta c\u00f3 th\u1ec3 ti\u1ebft ki\u1ec7m bi\u1ebfn h\u01a1n b\u1eb1ng c\u00e1ch d\u00f9ng 2 m\u1ea3ng 1 chi\u1ec1u t\u00ednh l\u1eabn nhau v\u00e0 m\u1ed9t m\u1ea3ng \u0111\u00e1nh d\u1ea5u 2 chi\u1ec1u \u0111\u1ec3 truy v\u1ebft.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#13-code-tham-khao","title":"1.3. Code tham kh\u1ea3o","text":"<p>C\u1ea7n l\u01b0u \u00fd th\u1ee9 t\u1ef1 t\u00ednh. \u0110\u1ec3 t\u00ednh \\(L[i][j]\\) c\u1ea7n bi\u1ebft \\(L[i - 1][j -1],L[i-1][j]\\) v\u00e0 \\(L[i][j-1]\\). H\u01a1n n\u1eefa, \\(L[i][0]\\) v\u00e0 \\(L[0][j]\\) c\u00f3 th\u1ec3 t\u00ednh tr\u1ef1c ti\u1ebfp n\u00ean ta c\u00f3 th\u1ec3 t\u00ednh theo tr\u00ecnh t\u1ef1 sau:</p> <p></p> <pre><code>## include &lt;iostream&gt;\n## include &lt;string&gt;\n## include &lt;vector&gt;\nusing namespace std;\n\nint m, n;\nstring a, b;\nvector&lt;vector&lt;int&gt;&gt; L;\n\nint main()\n{\n    cin &gt;&gt; a &gt;&gt; b;\n    m = a.length();\n    n = b.length();\n    L.resize(m + 1);\n    for (auto&amp; i : L)\n        i.resize(n + 1);\n    /* V\u00ec a v\u00e0 b b\u1eaft \u0111\u1ea7u t\u1eeb ch\u1ec9 s\u1ed1 1 n\u00ean \n     * ch\u00e8n th\u00eam 1 k\u00ed t\u1ef1 v\u00e0o \u0111\u1ea7u 2 x\u00e2u */\n    a = \"_\" + a;\n    b = \"_\" + b;\n\n    for (int i = 0; i &lt;= m; i++)\n        L[i][0] = i;\n    for (int j = 0; j &lt;= n; j++)\n        L[0][j] = j;\n    for (int i = 1; i &lt;= m; i++)\n        for (int j = 1; j &lt;= n; j++)\n        {\n            if (a[i] == b[j])\n                L[i][j] = L[i - 1][j - 1];\n            else\n                L[i][j] = 1 + min(L[i - 1][j - 1],\n                              min(L[i - 1][j], L[i][j - 1]));\n        }\n    cout &lt;&lt; L[m][n];\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-2/#14-mot-so-bai-toan-khac","title":"1.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#141-xau-con-chung-dai-nhat","title":"1.4.1. X\u00e2u con chung d\u00e0i nh\u1ea5t","text":"<p>Link n\u1ed9p b\u00e0i: VNOJ-LCS</p> <p>Cho \\(2\\) x\u00e2u A v\u00e0 B. T\u00ecm x\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a \\(A\\) v\u00e0 \\(B\\). X\u00e2u \\(X\\) l\u00e0 x\u00e2u con c\u1ee7a x\u00e2u \\(Y\\) khi v\u00e0 ch\u1ec9 khi c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c \\(X\\) b\u1eb1ng c\u00e1ch x\u00f3a m\u1ed9t s\u1ed1 k\u00ed t\u1ef1 c\u1ee7a \\(Y\\) (c\u00f3 th\u1ec3 t\u1ea5t c\u1ea3 ho\u1eb7c kh\u00f4ng k\u00ed t\u1ef1 n\u00e0o). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le |A|\\times |B| \\le 10^6\\). Input: \\(2\\) x\u00e2u \\(A\\) v\u00e0 \\(B\\). Output: \u0110\u1ed9 d\u00e0i x\u00e2u con chung d\u00e0i nh\u1ea5t.</p> <p>L\u1eddi gi\u1ea3i:</p> <p>G\u1ecdi \\(L[i][j]\\) l\u00e0 \u0111\u1ed9 d\u00e0i x\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a x\u00e2u \\(A_i\\) g\u1ed3m \\(i\\) k\u00ed t\u1ef1 ph\u1ea7n \u0111\u1ea7u c\u1ee7a \\(A\\) (\\(A_i = A[1..i]\\)) v\u00e0 x\u00e2u \\(B_j\\) g\u1ed3m \\(j\\) k\u00ed t\u1ef1 ph\u1ea7n \u0111\u1ea7u c\u1ee7a \\(B\\) (\\(B_j = B[1..j]\\)). </p> <ul> <li>N\u1ebfu \\(A[i]=B[j]\\) th\u00ec ta ch\u1ec9 c\u1ea7n ch\u1ecdn x\u00e2u con d\u00e0i nh\u1ea5t c\u1ee7a \\(A_{i-1}\\) v\u00e0 \\(B_{j-1}\\), do \u0111\u00f3 \u0111\u1ed9 d\u00e0i x\u00e2u con d\u00e0i nh\u1ea5t c\u1ee7a \\(A_i\\) v\u00e0 \\(B_j\\) l\u00e0 \\(L[i-1][j-1]+1\\). </li> <li>N\u1ebfu \\(A[i]\\ne B[j]\\) th\u00ec x\u00e2u con chung d\u00e0i nh\u1ea5t s\u1ebd l\u00e0 x\u00e2u con c\u1ee7a \\(A_{i-1}\\) v\u00e0 \\(B_j\\) ho\u1eb7c \\(A_i\\) v\u00e0 \\(B_{i-1}\\). </li> </ul> <p>T\u1eeb \u0111\u00f3 c\u00f3 c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng nh\u01b0 sau:</p> <ul> <li>\\(L[0][j] = L[i][0] = 0\\)</li> <li>\\(L[i][j] = L[i\u22121][j\u22121] + 1\\) n\u1ebfu \\(A[i] = B[j]\\)</li> <li>\\(L[i][j] = \\max(L[i\u22121][j], L[i][j\u22121])\\) n\u1ebfu \\(A[i] \\ne B[j]\\).</li> </ul> <p>C\u00e0i \u0111\u1eb7t: L\u01b0u \u00fd do \\(m\\) v\u00e0 \\(n\\) c\u00f3 th\u1ec3 l\u1edbn \u0111\u1ebfn \\(10^6\\) n\u00ean m\u1ea3ng \\(L\\) ph\u1ea3i l\u00e0 m\u1ea3ng \u0111\u1ed9ng (v\u00ed d\u1ee5 <code>std::vector</code> trong <code>c++</code>).</p> <p>N\u1ebfu \u0111\u1ec1 b\u00e0i y\u00eau c\u1ea7u ph\u1ea3i in ra x\u00e2u con d\u00e0i nh\u1ea5t th\u00ec ph\u1ea3i th\u1ef1c hi\u1ec7n truy v\u1ebft. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t tham kh\u1ea3o:</p> <pre><code>## include &lt;iostream&gt;\n## include &lt;string&gt;\n## include &lt;vector&gt;\nusing namespace std;\n\n// Struct d\u00f9ng \u0111\u1ec3 truy v\u1ebft \nstruct Trace\n{\n    // V\u1ecb tr\u00ed c\u1ee7a k\u00ed t\u1ef1 tr\u01b0\u1edbc \u0111\u00f3 trong A v\u00e0 B\n    int i;\n    int j;   \n    // K\u00ed t\u1ef1 c\u1ea7n th\u00eam v\u00e0o x\u00e2u k\u1ebft qu\u1ea3 \n    // (c\u00f3 th\u1ec3 l\u00e0 k\u00ed t\u1ef1 NULL)\n    char c;\n    Trace(int ii = 0, int jj = 0, char cc = '\\0')\n      : i(ii), j(jj), c(cc)\n    { };\n};\n\nint m, n;\nstring a, b;\nvector&lt;vector&lt;int&gt;&gt; L;\nvector&lt;vector&lt;Trace&gt;&gt; Tr;\n\nint main()\n{\n    cin &gt;&gt; a &gt;&gt; b;\n    m = a.length();\n    n = b.length();\n    L.resize(m + 1);\n    Tr.resize(m + 1);\n    for (auto&amp; i : L)\n        i.resize(n + 1);\n    for (auto&amp; i : Tr)\n        i.resize(n + 1);\n    // V\u00ec a v\u00e0 b b\u1eaft \u0111\u1ea7u t\u1eeb ch\u1ec9 s\u1ed1 1 n\u00ean \n    // ch\u00e8n th\u00eam 1 k\u00ed t\u1ef1 v\u00e0o \u0111\u1ea7u 2 x\u00e2u\n    a = \"_\" + a;\n    b = \"_\" + b;\n\n    for (int i = 0; i &lt;= m; i++)\n        L[i][0] = 0;\n    for (int j = 0; j &lt;= n; j++)\n        L[0][j] = 0;\n    for (int i = 1; i &lt;= m; i++)\n        for (int j = 1; j &lt;= n; j++)\n        {\n            if (a[i] == b[j])\n            {\n                L[i][j] = L[i - 1][j - 1] + 1;\n                Tr[i][j] = Trace(i - 1, j - 1, a[i]);\n            }\n            else if (L[i - 1][j] &gt; L[i][j - 1])\n            {\n                L[i][j] = L[i - 1][j];\n                Tr[i][j] = Trace(i - 1, j);\n            }\n            else\n            {\n                L[i][j] = L[i][j - 1];\n                Tr[i][j] = Trace(i, j - 1);\n            }\n        }\n    // Truy v\u1ebft x\u00e2u con chung d\u00e0i nh\u1ea5t t\u1eeb Tr[m][n]\n    Trace t = Tr[m][n];\n    string ans = \"\";\n    while (true)\n    {                 \n        if (t.c != '\\0')\n            ans = t.c + ans;\n        if (t.i == 0 &amp;&amp; t.j == 0)\n            break;\n        else\n            t = Tr[t.i][t.j];\n    }\n    cout &lt;&lt; ans;\n}\n</code></pre> <p>Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(\\mathcal{O}(mn)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(mn)\\).</p> <p>C\u00f3 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t t\u1ed1t h\u01a1n, ch\u1ec9 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb \\(\\mathcal{O}(\\min(m, n))\\) d\u1ef1a tr\u00ean nh\u1eadn x\u00e9t \u1edf v\u00ed d\u1ee5 \u0111\u1ea7u: </p> <p>\u0110\u1ec3 t\u00ednh \\(L[i][j]\\), ta ch\u1ec9 c\u1ea7n 3 \u00f4 \\(L[i-1][j-1]\\), \\(L[i-1][j]\\) v\u00e0 \\(L[i][j-1]\\). </p> <p>T\u1ee9c l\u00e0 \u0111\u1ec3 t\u00ednh h\u00e0ng \\(L[i]\\) th\u00ec ch\u1ec9 c\u1ea7n h\u00e0ng \\(L[i-1]\\) v\u00e0 \\(L[i][0] = 0\\). Do \u0111\u00f3 ta ch\u1ec9 c\u1ea7n 2 m\u1ea3ng 1 chi\u1ec1u \u0111\u1ec3 l\u01b0u h\u00e0ng v\u1eeba t\u00ednh \\(P\\) v\u00e0 h\u00e0ng \u0111ang t\u00ednh \\(L\\). C\u00e1ch c\u00e0i \u0111\u1eb7t m\u1edbi nh\u01b0 sau:</p> <pre><code>vector&lt;int&gt; P(n + 1), L(n + 1);\nfor (int i = 1; i &lt;= m; i++)\n{\n    L[0] = 0;\n    for (int j = 1; j &lt;= n; j++)\n        if (a[i] == b[j])\n            L[j] = P[j - 1] + 1;\n        else\n            L[j] = max(L[j - 1], P[j]);\n    P = L;\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-2/#142-bac-cau","title":"1.4.2. B\u1eafc c\u1ea7u","text":"<p>Hai n\u01b0\u1edbc Alpha v\u00e0 Beta n\u1eb1m \u1edf hai b\u00ean b\u1edd s\u00f4ng Omega, Alpha n\u1eb1m \u1edf b\u1edd b\u1eafc v\u00e0 c\u00f3 \\(m\\) th\u00e0nh ph\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(m\\), Beta n\u1eb1m \u1edf b\u1edd nam v\u00e0 c\u00f3 \\(n\\) th\u00e0nh ph\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) (theo v\u1ecb tr\u00ed t\u1eeb t\u00e2y sang \u0111\u00f4ng).  M\u1ed7i th\u00e0nh ph\u1ed1 c\u1ee7a n\u01b0\u1edbc n\u00e0y th\u01b0\u1eddng c\u00f3 quan h\u1ec7 k\u1ebft ngh\u0129a v\u1edbi m\u1ed9t s\u1ed1 th\u00e0nh ph\u1ed1 c\u1ee7a n\u01b0\u1edbc kia. \u0110\u1ec3 t\u0103ng c\u01b0\u1eddng t\u00ecnh h\u1eefu ngh\u1ecb, hai n\u01b0\u1edbc mu\u1ed1n x\u00e2y c\u00e1c c\u00e2y c\u1ea7u b\u1eafc qua s\u00f4ng, m\u1ed7i c\u00e2y c\u1ea7u s\u1ebd l\u00e0 nh\u1ecbp c\u1ea7u n\u1ed1i 2 th\u00e0nh ph\u1ed1 k\u1ebft ngh\u0129a. V\u1edbi y\u00eau c\u1ea7u l\u00e0 c\u00e1c c\u00e2y c\u1ea7u kh\u00f4ng \u0111\u01b0\u1ee3c c\u1eaft nhau v\u00e0 m\u1ed7i th\u00e0nh ph\u1ed1 ch\u1ec9 l\u00e0 \u0111\u1ea7u c\u1ea7u cho nhi\u1ec1u nh\u1ea5t l\u00e0 m\u1ed9t c\u00e2y c\u1ea7u, h\u00e3y \u0111\u1ebfm s\u1ed1 c\u00e2y c\u1ea7u nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n \\times m \\le 10^6\\).</p> <p></p> <p>L\u1eddi gi\u1ea3i:</p> <p>B\u00e0i to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u l\u1ea1i nh\u01b0 sau: Cho \u0111\u1ed3 th\u1ecb hai ph\u00eda \\(G(A,B,E)\\). C\u00e1c \u0111\u1ec9nh c\u1ee7a \\(A\\) l\u00e0 \\(a_1,a_2,\\ldots,a_m\\). T\u01b0\u01a1ng t\u1ef1, c\u00e1c \u0111\u1ec9nh c\u1ee7a \\(B\\) l\u00e0 \\(b_1,b_2,\\ldots,b_n\\). C\u1ea7n t\u00ecm \\(k\\) l\u1edbn nh\u1ea5t \u0111\u1ec3 c\u00f3 hai d\u00e3y \u0111\u1ec9nh \\(a'_1 &lt; a'_2 &lt; \\ldots &lt; a'_k\\in A\\) v\u00e0 \\(b'_1 &lt; b'_2 &lt; \\ldots &lt; b'_k\\in B\\) sao cho: \\((a'_i,b'_i)\\in E\\) v\u1edbi m\u1ecdi \\(i=1;2;\\ldots;k\\).</p> <p>\u00dd t\u01b0\u1edfng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c b\u00e0i tr\u00ean, ta x\u00e9t m\u1ea3ng \\(L[i][j]\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u1ea7u nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3 b\u1eafc t\u1eeb c\u00e1c th\u00e0nh ph\u1ed1 \\(a_1,a_2,\\ldots,a_i\\) \u0111\u1ebfn \\(b_1,b_2,\\ldots,b_j\\).</p> <p>Khi \u0111\u00f3 c\u00f4ng th\u1ee9c QH\u0110 s\u1ebd l\u00e0: * \\(L[i][0] =0,L[0][j] = 0\\) * \\(L[i][j] = 1 + L[i-1][j-1]\\) n\u1ebfu \\(a_i\\) v\u00e0 \\(b_j\\) l\u00e0 hai th\u00e0nh ph\u1ed1 k\u1ebft ngh\u0129a * \\(L[i][j] = \\max(L[i][j-1], L[i-1][j])\\) n\u1ebfu \\(a_i\\) v\u00e0 \\(b_j\\) kh\u00f4ng l\u00e0 hai th\u00e0nh ph\u1ed1 k\u1ebft ngh\u0129a</p> <p>Nh\u1eadn x\u00e9t: Kh\u00f4ng m\u1ea5t t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed th\u1ee9 t\u1ef1 x\u00e2y c\u00e1c c\u00e2y c\u1ea7u l\u00e0 t\u0103ng d\u1ea7n theo m\u00fat \u1edf th\u00e0nh ph\u1ed1 \\(A\\). Khi \u0111\u00f3, n\u1ebfu ta \u0111\u00e3 ch\u1ecdn x\u00e2y c\u1ea7u gi\u1eefa hai th\u00e0nh ph\u1ed1 \\(a_i\\) v\u00e0 \\(b_j\\) th\u00ec c\u00e2y c\u1ea7u ti\u1ebfp theo, gi\u1ea3 s\u1eed l\u00e0 c\u00e2y c\u1ea7u n\u1ed1i \\(a_u\\) v\u00e0 \\(b_v\\) s\u1ebd ph\u1ea3i th\u1ecfa m\u00e3n \\(u&gt;i,v&gt;j\\). Do \u0111\u00f3, b\u00e0i to\u00e1n c\u00f3 th\u1ec3 gi\u1ea3i nh\u01b0 b\u00e0i to\u00e1n t\u00ecm x\u00e2u con d\u00e0i nh\u1ea5t, v\u1edbi \\(a_i\\) v\u00e0 \\(b_j\\) \u0111\u01b0\u1ee3c xem l\u00e0 \"b\u1eb1ng nhau\" khi v\u00e0 ch\u1ec9 khi ch\u00fang l\u00e0 hai th\u00e0nh ph\u1ed1 k\u1ebft ngh\u0129a.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#143-palindrome-ioi-2000","title":"1.4.3. Palindrome (IOI 2000)","text":"<p>Link n\u1ed9p b\u00e0i: SPOJ - IOIPALIN</p> <p>Cho m\u1ed9t x\u00e2u \\(S\\). \u1ede m\u1ed7i b\u01b0\u1edbc, b\u1ea1n An c\u00f3 th\u1ec3 ch\u00e8n \\(1\\) k\u00ed t\u1ef1 t\u00f9y \u00fd v\u00e0o b\u1ea5t k\u00ec v\u1ecb tr\u00ed n\u00e0o trong x\u00e2u \\(S\\). H\u00e3y t\u00ednh s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t c\u1ea7n th\u1ef1c hi\u1ec7n \u0111\u1ec3 bi\u1ebfn \\(S\\) th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng. X\u00e2u \\(S[1..n]\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng n\u1ebfu \\(S[i] = S[n + 1 - i]\\), v\u1edbi m\u1ecdi \\(i=1;2;\\ldots;n\\). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le|S|\\le5000\\).</p> <p>L\u1eddi gi\u1ea3i:</p> <p>C\u00e1ch 1:  C\u00f4ng th\u1ee9c QH\u0110 c\u1ee7a b\u00e0i n\u00e0y nh\u01b0 sau:</p> <p>G\u1ecdi \\(L[i][j]\\) l\u00e0 s\u1ed1 k\u00ed t\u1ef1 \u00edt nh\u1ea5t c\u1ea7n th\u00eam v\u00e0o x\u00e2u con \\(S[i..j]\\) c\u1ee7a \\(S\\) \u0111\u1ec3 x\u00e2u \u0111\u00f3 tr\u1edf th\u00e0nh \u0111\u1ed1i x\u1ee9ng. Nh\u1eadn x\u00e9t \u0111\u1ea7u ti\u00ean l\u00e0 x\u00e2u thu \u0111\u01b0\u1ee3c sau khi th\u00eam m\u1ed9t s\u1ed1 k\u00ed t\u1ef1 v\u00e0o \\(S[i..j]\\) ph\u1ea3i c\u00f3 k\u00ed t\u1ef1 \u0111\u1ea7u ti\u00ean v\u00e0 cu\u1ed1i c\u00f9ng l\u00e0 \\(S[i]\\) ho\u1eb7c \\(S[j]\\). * N\u1ebfu \\(S[i] = S[j]\\) th\u00ec x\u00e2u \u0111\u1ed1i x\u1ee9ng thu \u0111\u01b0\u1ee3c t\u1eeb \\(S[i][j]\\) c\u0169ng c\u00f3 k\u00ed t\u1ef1 \u0111\u1ea7u ti\u00ean l\u00e0 \\(S[i]\\) v\u00e0 k\u00ed t\u1ef1 cu\u1ed1i c\u00f9ng l\u00e0 \\(S[j]\\). Do \u0111\u00f3, ch\u1ec9 c\u1ea7n t\u00ecm s\u1ed1 k\u00ed t\u1ef1 \u00edt nh\u1ea5t \u0111\u1ec3 th\u00eam v\u00e0o \\(S[i+1][j-1]\\) \u0111\u1ec3 t\u1ea1o th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng. * N\u1ebfu \\(S[i]\\ne S[j]\\) th\u00ec tr\u01b0\u1edbc ti\u00ean ta c\u1ea7n th\u00eam k\u00ed t\u1ef1 \\(S[j]\\) v\u00e0o \u0111\u1ea7u ho\u1eb7c \\(S[i]\\) v\u00e0o cu\u1ed1i x\u00e2u \\(S[i..j]\\). Do \u0111\u00f3, ch\u1ec9 c\u1ea7n t\u00ecm s\u1ed1 k\u00ed t\u1ef1 \u00edt nh\u1ea5t c\u1ea7n th\u00eam v\u00e0o \u0111\u1ec3 \\(S[i][j-1]\\) ho\u1eb7c \\(S[i+1][j]\\) tr\u1edf th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng.</p> <p>T\u00f3m l\u1ea1i, c\u00f4ng th\u1ee9c QH\u0110 l\u00e0: * \\(L[i][j]=0\\) n\u1ebfu \\(i\\ge j\\) * \\(L[i][j]=L[i+1][j-1]\\) n\u1ebfu \\(i &lt; j\\) v\u00e0 \\(S_i=S_j\\) * \\(L[i][j]=1 + \\min(L[i+1][j], L[i][j-1])\\) n\u1ebfu \\(i &lt; j\\) v\u00e0 \\(S_i \\ne S_j\\)</p> <p>\u0110\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(L[1][n]\\) v\u1edbi \\(n\\) l\u00e0 s\u1ed1 k\u00ed t\u1ef1 c\u1ee7a \\(S\\). </p> <p>C\u00e0i \u0111\u1eb7t: Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t tr\u1ef1c ti\u1ebfp thu\u1eadt to\u00e1n tr\u00ean m\u00e0 kh\u00f4ng c\u1ea7n quan t\u00e2m \u0111\u1ebfn th\u1ee9 t\u1ef1 t\u00ednh nh\u01b0 sau:</p> <pre><code>## include &lt;iostream&gt;\n## include &lt;string&gt;\nusing namespace std;\n\nconst int N = 5010;\nint n, d[N][N];\nstring s;\n\nint calc(int i, int j)\n{\n    // N\u1ebfu L[i, j] ch\u01b0a \u0111\u01b0\u1ee3c t\u00ednh th\u00ec l\u01b0u gi\u00e1 tr\u1ecb v\u00e0o d[i][j]\n    if (d[i][j] == -1)\n    {\n        if (i &gt;= j)\n            d[i][j] = 0;\n        else\n        {\n            if (s[i] == s[j])\n                d[i][j] = calc(i + 1, j - 1);\n            else\n                d[i][j] = 1 + min(calc(i, j - 1), calc(i + 1, j));\n        }\n    }\n    return d[i][j];\n}\n\nint main()\n{\n    cin &gt;&gt; s;\n    n = s.length();\n    s = \"_\" + s;\n    for (int i = 0; i &lt;= n; i++)\n    for (int j = 0; j &lt;= n; j++)\n        d[i][j] = -1;\n    cout &lt;&lt; calc(1, n) &lt;&lt; '\\n';\n}\n</code></pre> <p>Nh\u1eadn x\u00e9t: \u0110\u00e2y l\u00e0 ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec7 quy c\u00f3 nh\u1edb (memoization). \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(n^2)\\). C\u00f3 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t ti\u1ebft ki\u1ec7m h\u01a1n nh\u01b0 sau:</p> <p>\u0110\u1ec3 \u00fd \u0111\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c m\u1ea3ng \\(L[1..n][j]\\) th\u00ec ta ch\u1ec9 c\u1ea7n m\u1ea3ng \\(L[1..n][j - 1]\\). Do \u0111\u00f3 ta s\u1ebd d\u00f9ng hai m\u1ea3ng m\u1ed9t chi\u1ec1u \\(P\\) v\u00e0 \\(L\\) \u0111\u1ec3 l\u01b0u gi\u00e1 tr\u1ecb m\u1ea3ng \u0111\u00e3 t\u00ednh v\u00e0 c\u1ea7n t\u00ednh. \u1ede m\u1ed7i v\u00f2ng l\u1eb7p ta c\u00f3 \\(P=L[1..n][j-1],L=L[1..n][j]\\). \u0110\u00e1p \u00e1n b\u00e0i to\u00e1n l\u00e0 \\(L[1]\\).</p> <p>C\u00e1ch 2: T\u1eeb \u00fd t\u01b0\u1edfng c\u1ee7a b\u00e0i x\u00e2u con chung d\u00e0i nh\u1ea5t, ta c\u00f3 thu\u1eadt to\u00e1n sau:</p> <ul> <li>G\u1ecdi \\(P\\) l\u00e0 x\u00e2u \u0111\u1ea3o c\u1ee7a \\(S\\) v\u00e0 \\(T\\) l\u00e0 x\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a \\(S\\) v\u00e0 \\(P\\). Khi \u0111\u00f3 c\u00e1c k\u00ed t\u1ef1 c\u1ee7a \\(S\\) kh\u00f4ng thu\u1ed9c \\(T\\) c\u0169ng l\u00e0 c\u00e1c k\u00ed t\u1ef1 c\u1ea7n th\u00eam v\u00e0o \u0111\u1ec3 \\(S\\) tr\u1edf th\u00e0nh \u0111\u1ed1i x\u1ee9ng. \u0110\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(n-k\\), v\u1edbi \\(k\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a \\(T\\).</li> </ul> <p>V\u00ed d\u1ee5: \\(S=edbabcd\\), x\u00e2u \u0111\u1ea3o c\u1ee7a \\(S\\) l\u00e0 \\(P=dcbabde\\). X\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a \\(S\\) v\u00e0 \\(P\\) l\u00e0 \\(T=dbabd\\). Nh\u01b0 v\u1eady c\u1ea7n th\u00eam \\(\\|S\\|-\\|T\\|=7-5=2\\) k\u00ed t\u1ef1 v\u00e0o \\(S\\) \u0111\u1ec3 \\(S\\) tr\u1edf th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng. V\u00ed d\u1ee5, ta c\u00f3 th\u1ec3 th\u00eam k\u00ed t\u1ef1 <code>e</code> v\u00e0 <code>c</code> v\u00e0o \\(S\\) v\u00e0 thu \u0111\u01b0\u1ee3c x\u00e2u \\(S=edcbabcde\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#2-xep-vali-khong-gioi-han-unbounded-knapsack","title":"2. X\u1ebfp vali kh\u00f4ng gi\u1edbi h\u1ea1n (Unbounded Knapsack)","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#21-mo-hinh","title":"2.1. M\u00f4 h\u00ecnh","text":"<p>C\u00f3 \\(n\\) \u0111\u1ed3 v\u1eadt, v\u1eadt th\u1ee9 \\(i\\) c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng \\(A_i\\) v\u00e0 gi\u00e1 tr\u1ecb \\(B_i\\). H\u00e3y ch\u1ecdn ra m\u1ed9t s\u1ed1 c\u00e1c \u0111\u1ed3 v\u1eadt \u0111\u1ec3 x\u1ebfp v\u00e0o vali c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng t\u1ed1i \u0111a \\(W\\) sao cho t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a vali l\u00e0 l\u1edbn nh\u1ea5t (Ch\u00fa \u00fd m\u1ed7i v\u1eadt c\u00f3 th\u1ec3 ch\u1ecdn nhi\u1ec1u l\u1ea7n). \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\times W\\le 10^6,1\\le A_i,B_i\\le 10^9\\).</p> <p></p> <p>Ch\u00fa \u00fd: B\u00e0i to\u00e1n n\u00e0y kh\u00e1c v\u1edbi b\u00e0i to\u00e1n X\u1ebfp Vali \u1edf ph\u1ea7n tr\u01b0\u1edbc \u1edf ch\u1ed7 m\u1ed7i v\u1eadt kh\u00f4ng ph\u1ea3i l\u00e0 duy nh\u1ea5t v\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ecdn v\u00e0o vali nhi\u1ec1u l\u1ea7n.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#22-loi-giai","title":"2.2. L\u1eddi gi\u1ea3i","text":"<p>Tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n ph\u1ee5 thu\u1ed9c v\u00e0o hai y\u1ebfu t\u1ed1: s\u1ed1 v\u1eadt \u0111ang \u0111\u01b0\u1ee3c ch\u1ecdn v\u00e0 t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng c\u1ee7a ch\u00fang. Ta c\u00f3 th\u1ec3 g\u1ecdi \\(L[i][ j]\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3 khi ta ch\u1ecdn c\u00e1c v\u1eadt t\u1eeb \\(1\\) \u0111\u1ebfn \\(i\\) sao cho kh\u1ed1i l\u01b0\u1ee3ng c\u1ee7a ch\u00fang kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(j\\). Khi \u0111\u00f3, \u0111\u00e1p s\u1ed1 b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(L[n][W]\\).</p> <p>Ta \u0111i t\u00ecm c\u00f4ng th\u1ee9c truy h\u1ed3i c\u1ee7a \\(L[i][j]\\): * \\(L[i][ 0] = 0\\) * \\(L[0][ j] = 0\\) * \\(L[i][j] = L[i -1, j]\\) n\u1ebfu \\(A_i &gt; j\\) * \\(L[i][j] = \\max(L[i-1][j],L[i][ j-A_i] + B_i)\\) n\u1ebfu \\(A_i\\le j\\)</p> <p>Trong \u0111\u00f3, \\(L[i-1][j]\\) l\u00e0 gi\u00e1 tr\u1ecb c\u00f3 \u0111\u01b0\u1ee3c n\u1ebfu kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1eadt \\(i\\) v\u00e0o bal\u00f4, \\(L[i][j-A_i] + B_i\\)  l\u00e0 gi\u00e1 tr\u1ecb c\u00f3 \u0111\u01b0\u1ee3c n\u1ebfu \u0111\u01b0\u1ee3c ph\u00e9p \u0111\u01b0a v\u1eadt \\(i\\) v\u00e0o bal\u00f4.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#23-code-tham-khao","title":"2.3. Code tham kh\u1ea3o","text":"<p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c v\u00ed d\u1ee5 tr\u01b0\u1edbc, ta c\u00f3 th\u1ec3 d\u00f9ng m\u1ea3ng hai chi\u1ec1u \\(L[i][j]\\) \u0111\u1ec3 l\u01b0u k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n. Khi t\u00ednh, ta c\u00f3 th\u1ec3 t\u00ednh theo t\u1eebng h\u00e0ng ho\u1eb7c \u0111\u1ec7 quy c\u00f3 nh\u1edb. C\u1ea3 hai c\u00e1ch \u0111\u1ec3u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb \\(\\mathcal{O}(nW)\\).</p> <p>\u0110\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb xu\u1ed1ng \\(\\mathcal{O}(n)\\), \u1edf m\u1ed7i b\u01b0\u1edbc ta ch\u1ec9 c\u1ea7n l\u01b0u k\u1ebft qu\u1ea3 c\u1ee7a hai h\u00e0ng v\u1eeba t\u00ednh (\\(L[i-1]\\) v\u00e0 \\(L[i]\\)). Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>## include &lt;iostream&gt;\n## include &lt;vector&gt;\nusing namespace std;\n\nlong long n, w;\nvector&lt;long long&gt; a, b, L, P;\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; w;\n    a.resize(n + 1);\n    b.resize(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i] &gt;&gt; b[i];\n    P = L = vector&lt;long long&gt;(w + 1);\n    for (int i = 1; i &lt;= n; i++)\n    {\n        for (int j = 1; j &lt;= w; j++)\n        {\n            if (a[i] &gt; j)\n                L[j] = P[j];\n            else\n                L[j] = max(P[j], L[j - a[i]] + b[i]);\n        }\n        P = L;\n    }\n    cout &lt;&lt; L[w];\n}\n</code></pre> <p>L\u01b0u \u00fd r\u1eb1ng \u0111o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean m\u1edbi ch\u1ec9 c\u00e0i \u0111\u1eb7t y nguy\u00ean c\u00f4ng th\u1ee9c QH\u0110 ch\u1ee9 ch\u01b0a t\u1ed1i \u01b0u. V\u00ed d\u1ee5 v\u1edbi c\u00e1c \\(j&lt;A_i\\), ta g\u00e1n \\(L[j]=P[j]\\) nh\u01b0ng sau \u0111\u00f3 l\u1ea1i g\u00e1n \\(P=L\\). B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 r\u00fat g\u1ecdn \u0111o\u1ea1n code l\u1ea1i \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh t\u1ed1i \u01b0u h\u01a1n.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#24-mot-so-bai-toan-khac","title":"2.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#241-oi-tien","title":"2.4.1. \u0110\u1ed5i ti\u1ec1n","text":"<p>\u1ede \u0111\u1ea5t n\u01b0\u1edbc Omega ng\u01b0\u1eddi ta ch\u1ec9 ti\u00eau ti\u1ec1n xu. C\u00f3 \\(n\\) lo\u1ea1i ti\u1ec1n xu, lo\u1ea1i th\u1ee9 \\(i\\) c\u00f3 m\u1ec7nh gi\u00e1 l\u00e0 \\(A_i\\) \u0111\u1ed3ng. M\u1ed9t ng\u01b0\u1eddi kh\u00e1ch du l\u1ecbch \u0111\u1ebfn Omega du l\u1ecbch v\u1edbi s\u1ed1 ti\u1ec1n \\(m\\) \u0111\u1ed3ng. \u00d4ng ta mu\u1ed1n \u0111\u1ed5i s\u1ed1 ti\u1ec1n \u0111\u00f3 ra ti\u1ec1n xu Omega \u0111\u1ec3 ti\u1ec7n ti\u00eau d\u00f9ng. \u00d4ng ta c\u0169ng mu\u1ed1n s\u1ed1 \u0111\u1ed3ng ti\u1ec1n sau khi \u0111\u1ed5i l\u00e0 \u00edt nh\u1ea5t (cho t\u00fai ti\u1ec1n \u0111\u1ee1 n\u1eb7ng khi \u0111i \u0111\u00e2y \u0111i \u0111\u00f3). B\u1ea1n h\u00e3y gi\u00fap \u00f4ng ta t\u00ecm c\u00e1ch \u0111\u1ed5i ti\u1ec1n. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n \\times m\\le 10^6,1\\le A_i\\le 10^9\\). Input: Hai s\u1ed1 \\(m,n\\) v\u00e0 \\(A_1,A_2,\\ldots,A_n\\). Output: N\u1ebfu kh\u00f4ng th\u1ec3 \u0111\u1ed5i \u0111\u01b0\u1ee3c, in ra \\(-1\\). Ng\u01b0\u1ee3c l\u1ea1i, in ra hai d\u00f2ng: * D\u00f2ng \u0111\u1ea7u ti\u00ean in ra s\u1ed1 \u0111\u1ed3ng ti\u1ec1n \u00edt nh\u1ea5t c\u00f3 th\u1ec3. * D\u00f2ng th\u1ee9 hai in ra \\(n\\) s\u1ed1, s\u1ed1 th\u1ee9 \\(i\\) l\u00e0 s\u1ed1 \u0111\u1ed3ng xu c\u1ee7a m\u1ec7nh gi\u00e1 th\u1ee9 \\(i\\).</p> <p>L\u1eddi gi\u1ea3i:</p> <p>N\u1ebfu xem \"kh\u1ed1i l\u01b0\u1ee3ng\" l\u00e0 m\u1ec7nh gi\u00e1 v\u00e0 \"gi\u00e1 tr\u1ecb\" b\u1eb1ng \\(1\\), b\u00e0i to\u00e1n n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u l\u1ea1i th\u00e0nh: x\u1ebfp c\u00e1c v\u1eadt c\u00f3 t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng \u0111\u00fang b\u1eb1ng \\(m\\) v\u00e0o vali sao cho t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang l\u00e0 nh\u1ecf nh\u1ea5t. L\u01b0u \u00fd trong m\u00f4 h\u00ecnh b\u00e0i to\u00e1n g\u1ed1c th\u00ec t\u1ed5ng gi\u00e1 tr\u1ecb ph\u1ea3i l\u00e0 l\u1edbn nh\u1ea5t, v\u00e0 t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng c\u00f3 th\u1ec3 b\u00e9 h\u01a1n \\(m\\).</p> <p>Ta x\u00e2y d\u1ef1ng m\u1ea3ng \\(L[i][j]\\) l\u00e0 s\u1ed1 \u0111\u1ed3ng xu (gi\u00e1 tr\u1ecb) nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 khi \u0111\u1ed5i \\(j\\) \u0111\u1ed3ng (kh\u1ed1i l\u01b0\u1ee3ng) ra ti\u1ec1n xu b\u1eb1ng \\(i\\) lo\u1ea1i ti\u1ec1n \\(A_1,A_2,\\ldots,A_i\\). C\u00f4ng th\u1ee9c truy h\u1ed3i c\u1ee7a m\u1ea3ng \\(L\\) nh\u01b0 sau: * \\(L[0][j] = \\inf\\) * \\(L[i][0] = 0\\) * \\(L[i][j] = L[i - 1][j]\\) n\u1ebfu \\(A_i &gt; j\\) * \\(L[i][j] = \\min(L[i - 1][j], L[i][j - A_i] + 1)\\) n\u1ebfu \\(A_i\\le j\\)</p> <p>K\u1ebft qu\u1ea3 c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(L[n][m]\\) ho\u1eb7c \\(-1\\) n\u1ebfu \\(L[n][m ]=\\inf\\). \u0110\u1ec3 truy v\u1ebft c\u00e1c \u0111\u1ed3ng ti\u1ec1n \u0111\u01b0\u1ee3c \u0111\u1ed5i, ta c\u00f3 th\u1ec3 d\u00f9ng m\u1ea3ng \\(d[i][j]\\in \\{1;2;\\ldots;n\\}\\) l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a \u0111\u1ed3ng ti\u1ec1n \u0111\u01b0\u1ee3c th\u00eam v\u00e0o khi t\u00ednh \\(L[i][j]\\).</p> <p>C\u00e0i \u0111\u1eb7t:</p> <pre><code>## include &lt;iostream&gt;\n## include &lt;vector&gt;\nusing namespace std;\n\n// Struct \u0111\u1ec3 truy v\u1ebft\nstruct Trace\n{\n    int coin; // Ch\u1ec9 s\u1ed1 \u0111\u1ed3ng ti\u1ec1n \u0111\u01b0\u1ee3c th\u00eam v\u00e0o\n    int i; // i v\u00e0 j d\u00f9ng \u0111\u1ec3 truy v\u1ebft trong b\u1ea3ng QH\u0110\n    int j;\n\n    Trace(int c = 0, int row = 0, int col = 0)\n        : coin(c), i(row), j(col) {};\n};\n\nconst int N = 1e6 + 10;\nint n, m, A[N];\nvector&lt;int&gt; L, P;\nvector&lt;vector&lt;Trace&gt;&gt; d;\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; A[i];\n\n    // Quy \u01b0\u1edbc inf = -1\n    P = vector&lt;int&gt;(m + 1, -1);\n    L.resize(m + 1);\n    d = vector&lt;vector&lt;Trace&gt;&gt;(n + 1, vector&lt;Trace&gt;(m + 1));\n\n    // B\u01b0\u1edbc QH\u0110\n    for (int i = 1; i &lt;= n; i++)\n    {\n        L[0] = 0;\n        for (int j = 1; j &lt;= m; j++)\n            if (A[i] &gt; j)\n            {\n                L[j] = P[j];\n                d[i][j] = Trace(0, i - 1, j);\n            }\n            else\n            {\n                // L[j] = min(P[j], L[j - A[i]]);\n                // N\u1ebfu P[j] v\u00e0 L[j - A[i]] kh\u00e1c inf\n                if (P[j] != -1 &amp;&amp; L[j - A[i]] != -1)\n                {\n                    if (P[j] &lt; L[j - A[i]] + 1)\n                    {\n                        L[j] = P[j];\n                        d[i][j] = Trace(0, i - 1, j);\n                    }\n                    else\n                    {\n                        L[j] = L[j - A[i]] + 1;\n                        d[i][j] = Trace(i, i, j - A[i]);\n                    }\n                }\n                // Ch\u1ec9 L[j - A[i]] l\u00e0 inf\n                else if (P[j] != -1)\n                {\n                    L[j] = P[j];\n                    d[i][j] = Trace(0, i - 1, j);\n                }\n                // Ch\u1ec9 P[j] l\u00e0 inf\n                else if (L[j - A[i]] != -1)\n                {\n                    L[j] = L[j - A[i]] + 1;\n                    d[i][j] = Trace(i, i, j - A[i]);\n                }\n                // C\u1ea3 hai s\u1ed1 l\u00e0 inf\n                else\n                    L[j] = -1;\n            }\n        P = L;\n    }\n    cout &lt;&lt; L[m] &lt;&lt; '\\n';\n\n    // Truy v\u1ebft\n    if (L[m] != -1)\n    {\n        vector&lt;int&gt; cnt(n + 1);\n        Trace t = d[n][m];\n        while (t.coin != 0 &amp;&amp; t.j != 0)\n        {\n            cnt[t.coin]++;\n            t = d[t.i][t.j];\n        }\n        for (int i = 1; i &lt;= n; i++)\n            cout &lt;&lt; cnt[i] &lt;&lt; ' ';\n    }\n}\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-2/#3-nhan-ma-tran","title":"3. Nh\u00e2n ma tr\u1eadn","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#31-mo-hinh","title":"3.1. M\u00f4 h\u00ecnh","text":"<p>Khi nh\u00e2n m\u1ed9t ma tr\u1eadn k\u00edch th\u01b0\u1edbc \\(m \\times n\\) v\u1edbi m\u1ed9t ma tr\u1eadn \\(n \\times p\\), s\u1ed1 ph\u00e9p nh\u00e2n ph\u1ea3i th\u1ef1c hi\u1ec7n l\u00e0 \\(m \\times n \\times p\\). M\u1eb7t kh\u00e1c ph\u00e9p nh\u00e2n c\u00e1c ma tr\u1eadn c\u00f3 t\u00ednh k\u1ebft h\u1ee3p, t\u1ee9c l\u00e0: \\((A \\times B) \\times C = A \\times (B \\times C).\\) Do \u0111\u00f3 khi t\u00ednh t\u00edch nhi\u1ec1u ma tr\u1eadn, ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n theo c\u00e1c tr\u00ecnh t\u1ef1 kh\u00e1c nhau, m\u1ed7i tr\u00ecnh t\u1ef1 t\u00ednh s\u1ebd quy\u1ebft \u0111\u1ecbnh s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n th\u1ef1c hi\u1ec7n. Cho \\(n+1\\) s\u1ed1 \\(d_0,d_1,\\ldots,d_n\\) v\u00e0 \\(n\\) ma tr\u1eadn \\(A_1, A_2, ..., A_n\\), ma tr\u1eadn th\u1ee9 \\(i\\) c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 \\(d_{i-1} \\times d_i\\). H\u00e3y x\u00e1c \u0111\u1ecbnh tr\u00ecnh t\u1ef1 nh\u00e2n ma tr\u1eadn \\(A_1 \\times A_2 \\times \\ldots \\times A_n\\) sao cho s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n th\u1ef1c hi\u1ec7n l\u00e0 \u00edt nh\u1ea5t. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\le 300,1\\le d_i\\le 100\\). Input: S\u1ed1 \\(n\\) v\u00e0 \\(n+1\\) s\u1ed1 \\(d_0,d_1,\\ldots,d_n\\). Output: S\u1ed1 nguy\u00ean duy nh\u1ea5t l\u00e0 s\u1ed1 ph\u00e9p nh\u00e2n \u00edt nh\u1ea5t.</p> <p></p>"},{"location":"algo/dp/basic-dynamic-programming-2/#32-loi-giai","title":"3.2. L\u1eddi gi\u1ea3i","text":"<p>G\u1ecdi \\(L[i][j]\\) l\u00e0 s\u1ed1 ph\u00e9p nh\u00e2n nh\u1ecf nh\u1ea5t c\u1ea7n d\u00f9ng \u0111\u1ec3 t\u00ednh t\u00edch c\u00e1c ma tr\u1eadn t\u1eeb \\(A_i\\) \u0111\u1ebfn \\(A_j\\) \\((A_i \\times A_{i+1} \\times \\ldots \\times A_j)\\).</p> <p>X\u00e9t t\u00edch \\((A_i \\times A_{i+1} \\times \\ldots \\times A_j)\\) v\u1edbi \\(i&lt;j.\\) Khi t\u00ednh t\u00edch tr\u00ean, ph\u00e9p nh\u00e2n ma tr\u1eadn cu\u1ed1i c\u00f9ng s\u1ebd c\u00f3 d\u1ea1ng \\(B\\times C\\), sao cho t\u1ed3n t\u1ea1i m\u1ed9t s\u1ed1 nguy\u00ean \\(i\\le k\\le j\\) th\u1ecfa m\u00e3n: * \\(B=A_i\\times A_{i+1}\\times\\ldots\\times A_k\\) * \\(C=A_{k+1}\\times A_{k+1}\\times\\ldots\\times A_j\\)</p> <p>N\u00f3i c\u00e1ch kh\u00e1c, t\u00edch \\(A_{k+1}\\times A_{k+1}\\times\\ldots\\times A_j\\) \u0111\u01b0\u1ee3c t\u00ednh theo tr\u00ecnh t\u1ef1 sau: \\((A_i \\times \\ldots \\times A_k)\\times(A_{k+1}\\times\\ldots\\times A_j)\\). \u0110\u1ec3 s\u1ed1 ph\u00e9p nh\u00e2n l\u00e0 nh\u1ecf nh\u1ea5t th\u00ec s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n d\u00f9ng khi t\u00ednh \\(B\\) v\u00e0 \\(C\\) c\u0169ng l\u00e0 nh\u1ecf nh\u1ea5t. Gi\u00e1 tr\u1ecb c\u1ee7a \\(L[i][j]\\) s\u1ebd l\u00e0 k\u1ebft qu\u1ea3 nh\u1ecf nh\u1ea5t n\u1ebfu \\(k\\) ch\u1ea1y t\u1eeb \\(i\\) \u0111\u1ebfn \\(j-1\\). T\u1eeb \u0111\u00f3, ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i nh\u01b0 sau:</p> <ul> <li>\\(L[i][i]=0\\)</li> <li>\\(L[i][j] = \\min(L[i][k] + L[k+1][j] + d_{i-1}\\times d_{k}\\times d_j)\\), trong \u0111\u00f3 \\(i\\le k &lt; j,\\) n\u1ebfu \\(i&lt;j\\)</li> </ul>"},{"location":"algo/dp/basic-dynamic-programming-2/#33-code-tham-khao","title":"3.3. Code tham kh\u1ea3o","text":"<p>\u0110\u1ec3 t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb \\(L[i][j]\\), ta c\u00f3 th\u1ec3 d\u00f9ng hai c\u00e1ch: \u0111\u1ec7 quy c\u00f3 nh\u1edb v\u00e0 t\u00ednh theo th\u1ee9 t\u1ef1.</p> <p>N\u1ebfu t\u00ednh theo th\u1ee9 t\u1ef1, \u0111\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c \\(L[i][j]\\) ta c\u1ea7n c\u00e1c gi\u00e1 tr\u1ecb \\(L[i][k]\\) v\u00e0 \\(L[k+1][j]\\) sao cho \\(i\\le k&lt;j\\). Do \u0111\u00f3, kh\u00f4ng th\u1ec3 t\u00ednh \\(L[i][j]\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a \\(i\\) ho\u1eb7c \\(j\\). Thay v\u00e0o \u0111\u00f3, ta s\u1ebd t\u00ednh theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a \\(j-i\\) nh\u01b0 sau: \u0111\u1ea7u ti\u00ean t\u00ednh c\u00e1c s\u1ed1 \\(L[i][j]\\) th\u1ecfa m\u00e3n \\(j-i=0\\), sau \u0111\u00f3 t\u00ednh gi\u00e1 tr\u1ecb c\u00e1c s\u1ed1 ti\u1ebfp theo v\u1edbi \\(j-i=1;2;\\ldots;n-1\\). Nh\u01b0 v\u1eady, khi t\u00ednh \\(L[i][j]\\) th\u00ec c\u00e1c gi\u00e1 tr\u1ecb \\(L[i][k],L[k+1][j]\\) \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh, v\u1edbi \\(i\\le k &lt; j\\).</p> <p>\u0110\u1ec7 quy c\u00f3 nh\u1edb: <pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 310;\nint d[N], L[N][N], n;\n\nint calc(int i, int j)\n{\n    if (L[i][j] == -1)\n    {\n        if (i == j)\n            L[i][j] = 0;\n        else\n        {\n            L[i][j] = calc(i + 1, j) + d[i - 1] * d[i] * d[j];\n            for (int k = i; k &lt; j; k++)\n                L[i][j] = min(L[i][j], calc(i, k) + calc(k + 1, j) + d[i - 1] * d[k] * d[j]);\n        }\n    }\n    return L[i][j];\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt;= n; i++)\n        cin &gt;&gt; d[i];\n\n    for (int i = 1; i &lt;= n; i++)\n    for (int j = 1; j &lt;= n; j++)\n        L[i][j] = -1;\n    cout &lt;&lt; calc(1, n);\n}\n</code></pre> T\u00ednh theo th\u1ee9 t\u1ef1: <pre><code>## include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 310;\nint d[N], L[N][N], n;\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt;= n; i++)\n        cin &gt;&gt; d[i];\n    for (int dis = 1; dis &lt; n; dis++)\n        for (int i = 1; i + dis &lt;= n; i++)\n        {\n            int j = i + dis;\n            L[i][j] = L[i + 1][j] + d[i - 1] * d[i] * d[j];\n            for (int k = i; k &lt; j; k++)\n                L[i][j] = min(L[i][j], L[i][k] + L[k + 1][j] + d[i - 1] * d[k] * d[j]);\n        }\n    cout &lt;&lt; L[1][n];\n}\n</code></pre> V\u1edbi hai c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(\\mathcal{O}(n^2)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(n^3)\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#34-mot-so-bai-toan-khac","title":"3.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#341-chia-a-giac","title":"3.4.1. Chia \u0111a gi\u00e1c","text":"<p>Cho m\u1ed9t \u0111a gi\u00e1c l\u1ed3i \\(n\\) \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3. B\u1eb1ng c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o kh\u00f4ng c\u1eaft nhau, ta c\u00f3 th\u1ec3 chia \u0111a gi\u00e1c th\u00e0nh \\(n-2\\) tam gi\u00e1c. H\u00e3y x\u00e1c \u0111\u1ecbnh c\u00e1ch chia c\u00f3 t\u1ed5ng c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o ng\u1eafn nh\u1ea5t. \u0110i\u1ec1u ki\u1ec7n: \\(4\\le n\\le 300,-10^6\\le x_i,y_i\\le 10^6\\) (v\u1edbi \\((x_i,y_i)\\) l\u00e0 t\u1ecda \u0111\u1ed9 c\u1ee7a \u0111\u1ec9nh th\u1ee9 \\(i\\)). Input: M\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean \\(n\\) v\u00e0 \\(n\\) b\u1ed9 \\((x_i,y_i)\\). Output: In ra t\u1ed5ng c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o c\u1ee7a c\u00e1ch chia ng\u1eafn nh\u1ea5t.</p> <p>L\u1eddi gi\u1ea3i:</p> <p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n ta coi m\u1ecdi \u0111o\u1ea1n th\u1eb3ng n\u1ed1i hai \u0111\u1ec9nh b\u1ea5t k\u00ec \u0111\u1ec1u l\u00e0 \u201c\u0111\u01b0\u1eddng ch\u00e9o\u201d (n\u1ebfu n\u1ed1i hai \u0111\u1ec9nh tr\u00f9ng nhau ho\u1eb7c hai \u0111\u1ec9nh li\u00ean ti\u1ebfp th\u00ec c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng \\(0\\)).</p> <p>G\u1ecdi \\(L[i][j], (i\\le j)\\) l\u00e0 t\u1ed5ng \u0111\u1ed9 d\u00e0i b\u00e9 nh\u1ea5t c\u00f3 th\u1ec3 c\u1ee7a c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o d\u00f9ng \u0111\u1ec3 chia \u0111a gi\u00e1c g\u1ed3m c\u00e1c \u0111\u1ec9nh t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) th\u00e0nh c\u00e1c tam gi\u00e1c.  * N\u1ebfu \\(j&lt;i+3\\) th\u00ec \u0111a gi\u00e1c \u0111\u00f3 c\u00f3 \u00edt h\u01a1n 4 \u0111\u1ec9nh, kh\u00f4ng c\u1ea7n ph\u1ea3i chia n\u00ean \\(L[i][j]=0\\).  * Ng\u01b0\u1ee3c l\u1ea1i ta x\u00e9t c\u00e1ch chia \u0111a gi\u00e1c \u0111\u00f3 b\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t \u0111\u1ec9nh \\(k\\) n\u1eb1m gi\u1eefa \\(i\\), \\(j\\) v\u00e0 n\u1ed1i \\(i\\), \\(j\\) v\u1edbi \\(k\\). Khi \u0111\u00f3 \\(L[i][j]=L[i][k]+L[k][j]+d(i,k)+d(k,j)\\) v\u1edbi \\(d(x,y)\\) l\u00e0 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng ch\u00e9o n\u1ed1i \u0111\u1ec9nh \\(x\\) v\u1edbi \u0111\u1ec9nh \\(y\\).</p> <p>T\u1eeb \u0111\u00f3, ta r\u00fat ra c\u00f4ng th\u1ee9c truy h\u1ed3i sau:</p> <ul> <li>\\(L[i][j]=0\\) n\u1ebfu \\(i\\le j&lt;i+3\\)</li> <li>\\(L[i][j]=\\min(L[i][k]+L[k][j]+d(i,k)+d(k,j))\\) v\u1edbi \\(k=i+1,...j-1\\), n\u1ebfu \\(j\\ge i+3\\)</li> </ul> <p>\\(L[1][n]\\) l\u00e0 t\u1ed5ng \u0111\u01b0\u1eddng ch\u00e9o c\u1ee7a c\u00e1ch chia t\u1ed1i \u01b0u.</p> <p>C\u00e0i \u0111\u1eb7t: <pre><code>## include &lt;iostream&gt;\n## include &lt;cmath&gt;\nusing namespace std;\n\nstruct Point\n{\n    double x;\n    double y;\n    Point(double xx = 0.0, double yy = 0.0)\n        : x(xx), y(yy) {};\n};\n\ndouble distance(const Point&amp; a, const Point&amp; b)\n{\n    return sqrtl((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n}\n\nconst int N = 310;\nint n;\ndouble L[N][N];\nPoint p[N];\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; p[i].x &gt;&gt; p[i].y;\n\n    for (int dis = 3; dis &lt;= n - 1; dis++)\n        for (int i = 1; i + dis &lt;= n; i++)\n        {\n            int j = i + dis;\n            L[i][j] = L[i + 1][j] + distance(p[i + 1], p[j]);\n            for (int k = i + 1; k &lt;= j - 1; k++)\n                L[i][j] = min(L[i][j], L[i][k] + L[k][j] + distance(p[i], p[k]) + distance(p[k], p[j]));\n        }\n    cout &lt;&lt; L[1][n];\n}\n</code></pre></p>"},{"location":"algo/dp/basic-dynamic-programming-2/#342-bieu-thuc-so-hoc","title":"3.4.2. Bi\u1ec3u th\u1ee9c s\u1ed1 h\u1ecdc","text":"<p>Cho \\(n\\) s\u1ed1 th\u1ef1c kh\u00f4ng \u00e2m \\(A_1,A_2,\\ldots,A_n\\) \u0111\u01b0\u1ee3c vi\u1ebft th\u00e0nh m\u1ed9t h\u00e0ng ngang theo th\u1ee9 t\u1ef1 \u0111\u00f3. Gi\u1eefa hai s\u1ed1 li\u00ean ti\u1ebfp c\u00f3 m\u1ed9t d\u1ea5u <code>+</code> ho\u1eb7c <code>*</code> cho tr\u01b0\u1edbc. H\u00e3y \u0111\u1eb7t c\u00e1c d\u1ea5u ngo\u1eb7c v\u00e0o bi\u1ec3u th\u1ee9c \u0111\u1ec3 gi\u00e1 tr\u1ecb thu \u0111\u01b0\u1ee3c l\u00e0 l\u1edbn nh\u1ea5t. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n \\le 300\\).</p> <p>L\u1eddi gi\u1ea3i: Gi\u1ea3 s\u1eed bi\u1ec3u th\u1ee9c ban \u0111\u1ea7u l\u00e0 \\(A_1\\cdot A_2\\cdot\\ldots\\cdot A_n\\), trong \u0111\u00f3 \\(\\cdot\\) l\u00e0 <code>+</code> ho\u1eb7c <code>*</code> theo \u0111\u1ec1 b\u00e0i. G\u1ecdi \\(L[i,j]\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3 c\u1ee7a bi\u1ec3u th\u1ee9c \\(A_i \\cdot A_{i+1} \\cdot ... \\cdot A_j\\).  * N\u1ebfu \\(i=j\\) th\u00ec \\(L[i][j]=A_i\\) * N\u1ebfu \\(j&gt;i\\) th\u00ec c\u00f3 th\u1ec3 t\u00ednh bi\u1ec3u th\u1ee9c \\(A_i \\cdot A_{i+1} \\cdot ... \\cdot A_j\\) b\u1eb1ng c\u00e1ch chia th\u00e0nh 2 nh\u00f3m: \\((A_i \\cdot A_{i+1} \\cdot ... \\cdot A_k) \\cdot (A_{k+1} \\cdot ... \\cdot A_j)(i\\le k &lt;j)\\) (l\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n nh\u00e2n ma tr\u1eadn). Do \\(A_i\\ge 0\\) n\u00ean \u0111\u1ec3 \\(L[i,j]\\) l\u1edbn nh\u1ea5t th\u00ec c\u00e1ch \u0111\u1eb7t ngo\u1eb7c c\u1ee7a hai bi\u1ec3u th\u1ee9c con c\u0169ng t\u1ed1i \u01b0u. Khi \u0111\u00f3 \\(L[i][j]=L[i][k] \\cdot L[k+1][j]\\), trong \u0111\u00f3 \\(i\\le k &lt;j\\) v\u00e0 \\(\\cdot\\) l\u00e0 ph\u00e9p to\u00e1n gi\u1eefa \\(A_k\\) v\u00e0 \\(A_{k+1}\\).</p> <p>V\u1eady ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i nh\u01b0 sau:</p> <ul> <li>\\(L[i][i]=A_i\\)</li> <li>\\(L[i][j]=\\max(L[i][k] \\cdot L[k+1][j])\\) v\u1edbi \\(i\\le k &lt;j\\)</li> </ul>"},{"location":"algo/dp/basic-dynamic-programming-2/#4-ghep-cap","title":"4. Gh\u00e9p c\u1eb7p","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#41-mo-hinh","title":"4.1. M\u00f4 h\u00ecnh","text":"<p>C\u00f3 \\(n\\) l\u1ecd hoa s\u1eafp th\u00e0nh m\u1ed9t h\u00e0ng ngang v\u00e0 \\(k\\) b\u00f3 hoa \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 th\u1ee9 t\u1ef1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(k\\). C\u1ea7n c\u1eafm \\(k\\) b\u00f3 hoa tr\u00ean v\u00e0o \\(n\\) l\u1ecd sao cho hoa c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 nh\u1ecf ph\u1ea3i \u0111\u1ee9ng tr\u01b0\u1edbc hoa c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 l\u1edbn. Gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 t\u01b0\u01a1ng \u1ee9ng khi c\u1eafm hoa \\(i\\) v\u00e0o l\u1ecd th\u1ee9 \\(j\\) l\u00e0 \\(v_{i,j}\\ge0\\). H\u00e3y t\u00ecm m\u1ed9t c\u00e1ch c\u1eafm sao cho t\u1ed5ng gi\u00e1 tr\u1ecb th\u1eabm m\u1ef9 l\u00e0 l\u1edbn nh\u1ea5t. Ch\u00fa \u00fd r\u1eb1ng m\u1ed7i b\u00f3 hoa ph\u1ea3i \u0111\u01b0\u1ee3c c\u1eafm v\u00e0o m\u1ed9t l\u1ecd v\u00e0 m\u1ed7i l\u1ecd c\u0169ng ch\u1ec9 c\u1eafm t\u1ed1i \u0111a m\u1ed9t b\u00f3 hoa. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n \\times k\\le10^6,1\\le v_{i,j}\\le10^9\\).</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#42-loi-giai","title":"4.2. L\u1eddi gi\u1ea3i","text":"<p>Nh\u1eadn x\u00e9t r\u1eb1ng b\u00e0i to\u00e1n n\u00eau tr\u00ean l\u00e0 m\u1ed9t b\u00e0i to\u00e1n gh\u00e9p c\u1eb7p c\u00f3 y\u00eau c\u1ea7u v\u1ec1 th\u1ee9 t\u1ef1 n\u00ean ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p QH\u0110.</p> <p>Tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n ph\u1ee5 thu\u1ed9c v\u00e0o hai y\u1ebfu t\u1ed1: s\u1ed1 b\u00f4ng hoa \u0111ang \u0111\u01b0\u1ee3c x\u00e9t v\u00e0 s\u1ed1 l\u1ecd hoa \u0111ang d\u00f9ng. Ta c\u00f3 th\u1ec3 g\u1ecdi \\(L[i][j]\\) l\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 l\u1edbn nh\u1ea5t khi c\u1eafm hoa \\(1\\) \u0111\u1ebfn hoa \\(j\\) d\u00f9ng \\(i\\) l\u1ecd \u0111\u1ea7u ti\u00ean. Khi \u0111\u00f3:</p> <ul> <li>N\u1ebfu \\(i = j\\): ch\u1ec9 c\u00f3 m\u1ed9t c\u00e1ch c\u1eafm, n\u00ean \\(L[i][i] = \\sum_{k=1}^iv_{k,k}\\)</li> <li>N\u1ebfu \\(i &lt; j\\): kh\u00f4ng th\u1ec3 c\u1eafm \\(j\\) hoa v\u00e0o \\(i\\) l\u1ecd</li> <li>N\u1ebfu \\(i &gt; j\\): ta c\u00f3 th\u1ec3 c\u1eafm hoa th\u1ee9 \\(j\\) v\u00e0o l\u1ecd \\(i\\) ho\u1eb7c c\u00e1c l\u1ecd tr\u01b0\u1edbc \u0111\u00f3. Do \u0111\u00f3 c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p:</li> <li>N\u1ebfu hoa \\(j\\) \u0111\u01b0\u1ee3c c\u1eafm v\u00e0o l\u1ecd \\(i\\): khi \u0111\u00f3 c\u00e1ch c\u1eafm \\(j-1\\) hoa v\u00e0o \\(i-1\\) l\u1ecd tr\u01b0\u1edbc \u0111\u00f3 c\u0169ng ph\u1ea3i c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 l\u1edbn nh\u1ea5t. Do \u0111\u00f3 \\(L[i][j] = L[i-1][j-1]+v_{i,j}\\)</li> <li>Kh\u00f4ng c\u1eafm hoa \\(j\\) v\u00e0o l\u1ecd \\(i\\) (c\u1eafm v\u00e0o l\u1ecd tr\u01b0\u1edbc \\(i\\)), gi\u00e1 tr\u1ecb th\u1eabm m\u1ef9 c\u1ee7a c\u00e1ch c\u1eafm l\u00e0 \\(L[i][j] = L[i - 1][j]\\)</li> </ul> <p>T\u00f3m l\u1ea1i, c\u00f4ng th\u1ee9c truy h\u1ed3i c\u1ee7a b\u00e0i to\u00e1n l\u00e0: * \\(L[0][j]=L[i][0]=0\\) * \\(L[i][i] = \\sum_{k=1}^iv_{k,k}\\) * \\(L[i][j] = \\max(L[i - 1][j - 1] + v_{i,j},L[i - 1][j])\\) n\u1ebfu \\(i&gt;j\\)</p> <p>\u0110\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(L[n][k]\\).</p> <p>Nh\u1eadn x\u00e9t:  * Ta ch\u1ec9 c\u1ea7n \u0111i\u1ec1u ki\u1ec7n \\(1\\) v\u00e0 \\(3\\) v\u00ec \u0111i\u1ec1u ki\u1ec7n \\(2\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c suy ra tr\u1ef1c ti\u1ebfp t\u1eeb hai \u0111i\u1ec1u ki\u1ec7n tr\u00ean. * C\u00f4ng th\u1ee9c QH\u0110 c\u1ee7a b\u00e0i n\u00e0y kh\u00f4ng c\u00f3 g\u00ec \u0111\u1eb7c bi\u1ec7t m\u1ed9t khi ta t\u00ecm ra tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#43-code-tham-khao","title":"4.3. Code tham kh\u1ea3o","text":"<p>T\u01b0\u01a1ng t\u1ef1 c\u00e1c b\u00e0i to\u00e1n tr\u01b0\u1edbc, c\u00f3 hai ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t QH\u0110, v\u1edbi ph\u01b0\u01a1ng ph\u00e1p t\u00ednh t\u1eebng h\u00e0ng c\u00e0i \u0111\u1eb7t nhanh v\u00e0 ti\u1ebft ki\u1ec7m h\u01a1n:</p> <pre><code>vector&lt;int&gt; P(k + 1), L(k + 1);\nfor (int i = 1; i &lt;= n; i++)\n{\n    for (int j = 1; j &lt;= i; j++)\n    {\n        L[j] = max(P[j - 1] + v[i][j], P[j]);\n    }\n    P = L;\n}\ncout &lt;&lt; L[k];\n</code></pre>"},{"location":"algo/dp/basic-dynamic-programming-2/#44-mot-so-bai-toan-khac","title":"4.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-dynamic-programming-2/#441-xep-phong-hoc","title":"4.4.1. X\u1ebfp ph\u00f2ng h\u1ecdc","text":"<p>M\u1ed9t tr\u01b0\u1eddng h\u1ecdc c\u00f3 \\(n\\) ph\u00f2ng h\u1ecdc \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\) v\u00e0 \\(k\\) nh\u00f3m h\u1ecdc sinh \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(k\\). C\u1ea7n x\u1ebfp \\(k\\) nh\u00f3m h\u1ecdc sinh v\u00e0o c\u00e1c ph\u00f2ng h\u1ecdc kh\u00e1c nhau sao cho v\u1edbi hai nh\u00f3m \\(i&lt;j\\) c\u00f3 \\(a, b\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 ph\u00f2ng h\u1ecdc c\u1ee7a hai nh\u00f3m th\u00ec \\(a&lt;b\\). N\u00f3i c\u00e1ch kh\u00e1c, nh\u00f3m c\u00f3 s\u1ed1 hi\u1ec7u l\u1edbn h\u01a1n s\u1ebd \u0111\u01b0\u1ee3c \u01b0u ti\u00ean ph\u00f2ng c\u00f3 s\u1ed1 hi\u1ec7u l\u1edbn h\u01a1n.  N\u1ebfu ph\u00f2ng h\u1ecdc n\u00e0o \u0111\u00f3 c\u00f3 ch\u1ee9a h\u1ecdc sinh th\u00ec s\u1ed1 gh\u1ebf th\u1eeba ph\u1ea3i \u0111\u01b0\u1ee3c chuy\u1ec3n ra ngo\u00e0i, n\u1ebfu thi\u1ebfu gh\u1ebf th\u00ec ph\u1ea3i l\u1ea5y th\u00eam. Bi\u1ebft s\u1ed1 gh\u1ebf c\u00f3 s\u1eb5n trong ph\u00f2ng th\u1ee9 \\(i\\) l\u00e0 \\(A_i\\) v\u00e0 s\u1ed1 h\u1ecdc sinh nh\u00f3m th\u1ee9 \\(j\\) l\u00e0 \\(B_j(1\\le i \\le n,1\\le j \\le k).\\) T\u00ednh s\u1ed1 l\u1ea7n chuy\u1ec3n gh\u1ebf ra v\u00e0o \u00edt nh\u1ea5t c\u00f3 th\u1ec3. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\times k\\le10^6, 1\\le A_i,B_j\\le10^9\\).</p> <p>L\u1eddi gi\u1ea3i:</p> <p>Khi x\u1ebfp nh\u00f3m \\(i\\) v\u00e0o ph\u00f2ng \\(j\\) th\u00ec s\u1ed1 l\u1ea7n chuy\u1ec3n gh\u1ebf ch\u00ednh l\u00e0 \u0111\u1ed9 ch\u00eanh l\u1ec7ch gi\u1eefa s\u1ed1 gh\u1ebf trong ph\u00f2ng \\(i\\) v\u00e0 s\u1ed1 h\u1ecdc sinh trong nh\u00f3m. Khi \u0111\u00f3, \"gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9\" n\u1ebfu l\u1edbp \\(j\\) h\u1ecdc \u1edf ph\u00f2ng \\(i\\) l\u00e0 \\(v_{i,j}=\\lvert A_i - B_j \\rvert\\). Ta c\u1ea7n t\u00ecm c\u00e1ch gh\u00e9p \\(k\\) nh\u00f3m h\u1ecdc sinh v\u1edbi \\(n\\) l\u1edbp h\u1ecdc sao cho nh\u00f3m c\u00f3 s\u1ed1 hi\u1ec7u nh\u1ecf h\u01a1n th\u00ec h\u1ecdc l\u1edbp c\u00f3 s\u1ed1 hi\u1ec7u nh\u1ecf h\u01a1n. \u0110\u1ec3 \u00fd trong b\u00e0i to\u00e1n n\u00e0y, t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 c\u1ee7a c\u00e1ch gh\u00e9p ph\u1ea3i l\u00e0 nh\u1ecf nh\u1ea5t.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#442-mua-giay-e-qg-bang-b-nam-2003","title":"4.4.2. Mua gi\u00e0y (\u0110\u1ec1 QG b\u1ea3ng B n\u0103m 2003)","text":"<p>C\u00f3 \\(n\\) \u0111\u00f4i gi\u00e0y, \u0111\u00f4i gi\u00e0y th\u1ee9 \\(i\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(H_i\\). C\u00f3 \\(k\\) ng\u01b0\u1eddi c\u1ea7n mua gi\u00e0y, ng\u01b0\u1eddi th\u1ee9 \\(j\\) c\u1ea7n mua \u0111\u00f4i gi\u00e0y k\u00edch th\u01b0\u1edbc \\(S_j\\). Khi ng\u01b0\u1eddi \\(i\\) ch\u1ecdn mua \u0111\u00f4i gi\u00e0y \\(j\\) th\u00ec \u0111\u1ed9 l\u1ec7ch s\u1ebd l\u00e0 \\(|H_i-S_j|\\). H\u00e3y t\u00ecm c\u00e1ch ch\u1ecdn mua gi\u00e0y cho \\(k\\) ng\u01b0\u1eddi tr\u00ean sao cho t\u1ed5ng \u0111\u1ed9 l\u1ec7ch l\u00e0 \u00edt nh\u1ea5t. Bi\u1ebft r\u1eb1ng m\u1ed7i ng\u01b0\u1eddi ch\u1ec9 mua 1 \u0111\u00f4i gi\u00e0y v\u00e0 1 \u0111\u00f4i gi\u00e0y c\u0169ng ch\u1ec9 c\u00f3 t\u1ed1i \u0111a m\u1ed9t ng\u01b0\u1eddi mua. \u0110i\u1ec1u ki\u1ec7n: \\(1\\le n\\times k\\le10^6, 1\\le H_i,S_j\\le10^9\\).</p> <p>L\u1eddi gi\u1ea3i:</p> <p>B\u00e0i n\u00e0y kh\u00e1c v\u1edbi b\u00e0i X\u1ebfp ph\u00f2ng h\u1ecdc \u1edf tr\u00ean \u1edf ch\u1ed7: ng\u01b0\u1eddi c\u00f3 th\u1ee9 t\u1ef1 nh\u1ecf h\u01a1n kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i mua \u0111\u00f4i gi\u00e0y th\u1ee9 t\u1ef1 nh\u1ecf h\u01a1n.</p> <p>Tuy nhi\u00ean, \u0111\u1ec3 \u0111\u01b0a b\u00e0i to\u00e1n v\u1ec1 d\u1ea1ng gh\u00e9p c\u1eb7p, ta c\u00f3 nh\u1eadn x\u00e9t sau: </p> <p>Cho \\(2\\) d\u00e3y s\u1ed1 nguy\u00ean d\u01b0\u01a1ng s\u1eafp th\u1ee9 t\u1ef1 \\(A_1\\le A_2\\le\\ldots\\le A_n\\) v\u00e0 \\(B_1\\le B_2\\le\\ldots\\le B_n\\). G\u1ecdi \\(C_1,C_2,\\ldots,C_n\\) l\u00e0 m\u1ed9t ho\u00e1n v\u1ecb c\u1ee7a \\(B_1,B_2,\\ldots,B_n\\). Khi \u0111\u00f3: \\(|A_1-B_1|+|A_2-B_2|+\\ldots+|A_n-B_n|\\le|A_1-C_1|+|A_2-C_2|+\\ldots+|A_n-C_n|\\)</p> <p>Ch\u1ee9ng minh:</p> <p>G\u1ecdi \\(P=(P_1,P_2,\\ldots,P_n)\\) l\u00e0 m\u1ed9t ho\u00e1n v\u1ecb c\u1ee7a \\(B_1,B_2,\\ldots,B_n\\). Ta \u0111\u1eb7t: \\(f(P)=|A_1-P_1|+|A_2-P_2|+\\ldots+|A_n-P_n|\\). Gi\u1ea3 s\u1eed trong ho\u00e1n v\u1ecb P t\u1ed3n t\u1ea1i m\u1ed9t ngh\u1ecbch th\u1ebf \\(u,v\\), t\u1ee9c l\u00e0 \\(u&lt;v\\) v\u00e0 \\(P_u\\ge P_v.\\) \u0110\u1eb7t \\(P'=P_1,P_2,\\ldots,P_{u-1},P_v,P_{u+1},\\ldots,P_{v-1},P_u,P_{v+1},\\ldots,P_n\\).</p> <p>X\u00e9t hi\u1ec7u: \\begin{align} f(P)-f(P') &amp; = |A_u-P_u|+|A_v-P_v|-|A_u-P_v|-|A_v-P_u| \\end{align} Tr\u01b0\u1eddng h\u1ee3p 1: \\(P_u\\ge A_v\\ge A_u\\), ta c\u00f3: \\begin{align} f(P)-f(P') &amp; = P_u-A_u+|A_v-P_v|-|A_u-P_v|-P_u+A_v\\ &amp;= |A_v-A_u|+|A_v-P_v|-|A_u-P_v|\\ &amp;\\ge0 \\end{align} Tr\u01b0\u1eddng h\u1ee3p 2: \\(A_v&gt; P_u\\ge P_v\\), ta c\u00f3: \\begin{align} f(P)-f(P') &amp; = |A_u-P_u|+A_v-P_v-|A_u-P_v|-A_v+P_u\\ &amp;= |A_v-P_u|+|P_u-P_v|-|A_u-P_v|\\ &amp;\\ge0 \\end{align}</p> <p>Do \u0111\u00f3 ta lu\u00f4n c\u00f3 \\(f(P')\\le f(P)\\). T\u1eeb \u0111\u00f3 suy ra v\u1edbi m\u1ed9t ho\u00e1n v\u1ecb \\(P\\) kh\u00e1c \\(B_1,B_2,\\ldots,B_n\\), ta lu\u00f4n c\u00f3 th\u1ec3 \u0111\u1ed5i ch\u1ed7 hai s\u1ed1 h\u1ea1ng trong m\u1ed9t c\u1eb7p ngh\u1ecbch th\u1ebf c\u1ee7a \\(P\\) \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ed9t ho\u00e1n v\u1ecb \\(P'\\) c\u00f3 gi\u00e1 tr\u1ecb \\(f(P')\\le f(P)\\). Suy ra \\(f(P)\\) \u0111\u1ea1t \\(\\min\\) khi \\(P\\) l\u00e0 \\(B_1,B_2,\\ldots,B_n.\\) \u0110\u1ebfn \u0111\u00e2y ta ch\u1ee9ng minh \u0111\u01b0\u1ee3c m\u1ec7nh \u0111\u1ec1 tr\u00ean.</p> <p>Tr\u1edf l\u1ea1i b\u00e0i to\u00e1n g\u1ed1c, n\u1ebfu ta s\u1eafp x\u1ebfp c\u00e1c \u0111\u00f4i gi\u00e0y v\u00e0 c\u00e1c ng\u01b0\u1eddi mua gi\u00e0y theo tr\u00ecnh t\u1ef1 c\u1ee1 gi\u00e0y t\u0103ng d\u1ea7n, t\u1eeb nh\u1eadn x\u00e9t \u0111\u00e3 ch\u1ee9ng minh ta suy ra t\u1ed5ng \u0111\u1ed9 l\u1ec7ch l\u00e0 nh\u1ecf nh\u1ea5t khi ng\u01b0\u1eddi c\u1ea7n c\u1ee1 gi\u00e0y nh\u1ecf h\u01a1n mua chi\u1ebfc gi\u00e0y nh\u1ecf h\u01a1n. \u0110\u1ebfn \u0111\u00e2y, b\u00e0i to\u00e1n gi\u1ed1ng v\u1edbi b\u00e0i to\u00e1n g\u1ed1c v\u00e0 c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p QH\u0110.</p>"},{"location":"algo/dp/basic-dynamic-programming-2/#ket","title":"K\u1ebft","text":"<p>\u0110i\u1ec1u kh\u00f3 nh\u1ea5t \u0111\u1ec3 gi\u1ea3i m\u1ed9t b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng l\u00e0 bi\u1ebft r\u1eb1ng \u0111\u00f3 l\u00e0 m\u1ed9t b\u00e0i to\u00e1n QH\u0110 v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c/tr\u1ea1ng th\u00e1i c\u1ee7a n\u00f3. Vi\u1ec7c m\u00f2 m\u1eabm t\u1eeb \u0111\u1ea7u kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng, nh\u01b0ng n\u1ebfu ta \u0111\u01b0a \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n c\u1ea7n gi\u1ea3i v\u1ec1 m\u1ed9t b\u00e0i to\u00e1n QH\u0110 kinh \u0111i\u1ec3n \u0111\u00e3 bi\u1ebft th\u00ec vi\u1ec7c x\u1eed l\u00fd s\u1ebd \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u. Do \u0111\u00f3, t\u00ecm hi\u1ec3u m\u00f4 h\u00ecnh, c\u00f4ng th\u1ee9c v\u00e0 c\u00e1ch c\u00e0i \u0111\u1eb7t nh\u1eefng b\u00e0i to\u00e1n QH\u0110 kinh \u0111i\u1ec3n l\u00e0 m\u1ed9t vi\u1ec7c r\u1ea5t c\u1ea7n thi\u1ebft. Hi v\u1ecdng trong b\u00e0i vi\u1ebft n\u00e0y, c\u00e1c b\u1ea1n \u0111\u00e3 t\u00ecm hi\u1ec3u th\u00eam \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 b\u00e0i t\u1eadp kinh \u0111i\u1ec3n c\u0169ng nh\u01b0 c\u00e1c bi\u1ebfn th\u1ec3 c\u1ee7a ch\u00fang.</p>"},{"location":"algo/dp/basic-problems/","title":"M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng \u0111i\u1ec3n h\u00ecnh","text":"<p>B\u00e0i vi\u1ebft s\u01b0u t\u1ea7m tr\u00ean m\u1ea1ng.</p>"},{"location":"algo/dp/basic-problems/#1-day-con-on-ieu-dai-nhat","title":"1. D\u00e3y con \u0111\u01a1n \u0111i\u1ec7u d\u00e0i nh\u1ea5t","text":""},{"location":"algo/dp/basic-problems/#11-mo-hinh","title":"1.1. M\u00f4 h\u00ecnh","text":"<p>Cho d\u00e3y \\(A_1,A_2,..., A_n\\). H\u00e3y t\u00ecm m\u1ed9t d\u00e3y con t\u0103ng c\u00f3 nhi\u1ec1u ph\u1ea7n t\u1eed nh\u1ea5t c\u1ee7a d\u00e3y.</p> <p>\u0110\u1eb7c tr\u01b0ng:</p> <ul> <li>C\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y k\u1ebft qu\u1ea3 ch\u1ec9 xu\u1ea5t hi\u1ec7n 1 l\u1ea7n. V\u00ec v\u1eady ph\u01b0\u01a1ng ph\u00e1p l\u00e0m l\u00e0 ta s\u1ebd d\u00f9ng v\u00f2ng <code>For</code> duy\u1ec7t qua c\u00e1c ph\u1ea7n t\u1eed \\(A\\) trong d\u00e3y, kh\u00e1c v\u1edbi c\u00e1c b\u00e0i to\u00e1n c\u1ee7a m\u00f4 h\u00ecnh 4 (\u0111\u1eb7c tr\u01b0ng l\u00e0 b\u00e0i to\u00e1n \u0111\u1ed5i ti\u1ec1n), c\u00e1c ph\u1ea7n t\u1eed trong d\u00e3y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ecdn nhi\u1ec1u l\u1ea7n n\u00ean ta th\u1ef1c hi\u1ec7n b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p cho gi\u00e1 tr\u1ecb c\u1ea7n quy \u0111\u1ed5i t\u0103ng d\u1ea7n t\u1eebng \u0111\u01a1n v\u1ecb.</li> <li>Th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\u1ecdn ph\u1ea3i \u0111\u01b0\u1ee3c gi\u1eef nguy\u00ean so v\u1edbi d\u00e3y ban \u0111\u1ea7u.</li> </ul> <p>\u0110\u1eb7c tr\u01b0ng n\u00e0y c\u00f3 th\u1ec3 m\u1ea5t \u0111i trong m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c t\u00f9y v\u00e0o y\u00eau c\u1ea7u c\u1ee5 th\u1ec3. Ch\u1eb3ng h\u1ea1n b\u00e0i: Tam gi\u00e1c bao nhau.</p>"},{"location":"algo/dp/basic-problems/#12-cong-thuc-qh","title":"1.2. C\u00f4ng th\u1ee9c QH\u0110","text":"<p>H\u00e0m m\u1ee5c ti\u00eau: \\(f\\): \u0111\u1ed9 d\u00e0i d\u00e3y con.</p> <p>V\u00ec \u0111\u1ed9 d\u00e0i d\u00e3y con ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o m\u1ed9t y\u1ebfu t\u1ed1 l\u00e0 d\u00e3y ban \u0111\u1ea7u n\u00ean b\u1ea3ng ph\u01b0\u01a1ng \u00e1n l\u00e0 b\u1ea3ng m\u1ed9t chi\u1ec1u. G\u1ecdi \\(L_i\\) l\u00e0 \u0111\u1ed9 d\u00e0i d\u00e3y con t\u0103ng d\u00e0i nh\u1ea5t, c\u00e1c ph\u1ea7n t\u1eed l\u1ea5y trong mi\u1ec1n t\u1eeb \\(A_1\\) \u0111\u1ebfn \\(A_i\\) v\u00e0 ph\u1ea7n t\u1eed  cu\u1ed1i c\u00f9ng l\u00e0 \\(A_i\\).</p> <p>Nh\u1eadn x\u00e9t v\u1edbi c\u00e1ch l\u00e0m n\u00e0y ta \u0111\u00e3 chia 1 b\u00e0i to\u00e1n l\u1edbn (d\u00e3y con c\u1ee7a \\(n\\) s\u1ed1) th\u00e0nh c\u00e1c b\u00e0i to\u00e1n con c\u00f9ng ki\u1ec3u c\u00f3 k\u00edch th\u01b0\u1edbc nh\u1ecf h\u01a1n (d\u00e3y con c\u1ee7a d\u00e3y \\(i\\) s\u1ed1). V\u1ea5n \u0111\u1ec1 l\u00e0 c\u00f4ng th\u1ee9c truy h\u1ed3i \u0111\u1ec3 ph\u1ed1i h\u1ee3p k\u1ebft qu\u1ea3 c\u1ee7a c\u00e1c b\u00e0i to\u00e1n con.</p> <p>Ta c\u00f3 c\u00f4ng th\u1ee9c QH\u0110 \u0111\u1ec3 t\u00ednh \\(L_i\\) nh\u01b0 sau:</p> <ul> <li>\\(L_1 = 1\\). (Hi\u1ec3n nhi\u00ean)</li> <li>\\(L_i = max(1, L_j + 1)\\) v\u1edbi m\u1ecdi ph\u1ea7n t\u1eed \\(j\\) th\u1ecfa m\u00e3n: \\(0&lt;j&lt;i\\) v\u00e0 \\(A_j \\le A_i\\)</li> </ul> <p>T\u00ednh \\(L_i\\): ph\u1ea7n t\u1eed \u0111ang \u0111\u01b0\u1ee3c x\u00e9t l\u00e0 \\(A_i\\). Ta t\u00ecm \u0111\u1ebfn ph\u1ea7n t\u1eed \\(A_j &lt; A_i\\) c\u00f3 \\(L_j\\) l\u1edbn nh\u1ea5t. Khi \u0111\u00f3 n\u1ebfu b\u1ed5 sung \\(A_i\\) v\u00e0o sau d\u00e3y con \\(...A_j\\) ta s\u1ebd \u0111\u01b0\u1ee3c d\u00e3y con t\u0103ng d\u1ea7n d\u00e0i nh\u1ea5t x\u00e9t t\u1eeb \\(A_1...A_i\\).</p>"},{"location":"algo/dp/basic-problems/#13-cai-at","title":"1.3. C\u00e0i \u0111\u1eb7t","text":"<p>B\u1ea3ng ph\u01b0\u01a1ng \u00e1n l\u00e0 m\u1ed9t m\u1ea3ng m\u1ed9t chi\u1ec1u \\(L\\) \u0111\u1ec3 l\u01b0u tr\u1eef c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m QH\u0110 \\(L_i\\). \u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng \\(L\\) nh\u01b0 sau:</p> <pre><code>for i:= 1 to n do\n   begin\n         L[i]:=1;\n         for j:=1 to i-1 do\n              if (A[j]&lt;=A[i]) and (L[i]&lt;L[j]+1) then L[i]:=L[j]+1;\n   end;\n</code></pre> <p>Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(n)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O(n^2)\\).</p> <p>C\u00f3 m\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t t\u1ed1t h\u01a1n so v\u1edbi ph\u01b0\u01a1ng ph\u00e1p tr\u00ean, cho chi ph\u00ed th\u1eddi gian l\u00e0 \\(O(nlogn)\\), m\u1ed9t trong nh\u1eefng c\u00e1ch \u0111\u00f3 l\u00e0 d\u00f9ng Segment Tree.</p>"},{"location":"algo/dp/basic-problems/#14-mot-so-bai-toan-khac","title":"1.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":"<p>B\u00e0i to\u00e1n d\u00e3y con \u0111\u01a1n \u0111i\u1ec7u t\u0103ng d\u00e0i nh\u1ea5t c\u00f3 bi\u1ebfn th\u1ec3 \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 b\u00e0i to\u00e1n d\u00e3y con \u0111\u01a1n \u0111i\u1ec7u gi\u1ea3m d\u00e0i nh\u1ea5t, tuy nhi\u00ean ch\u00fang ta c\u00f3 th\u1ec3 coi ch\u00fang nh\u01b0 l\u00e0 m\u1ed9t. Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c.</p>"},{"location":"algo/dp/basic-problems/#bo-tri-phong-hop-mat-tinh-thu-tu-so-voi-day-ban-au","title":"B\u1ed1 tr\u00ed ph\u00f2ng h\u1ecdp (m\u1ea5t t\u00ednh th\u1ee9 t\u1ef1 so v\u1edbi d\u00e3y ban \u0111\u1ea7u)","text":"<p>B\u00e0i to\u00e1n:</p> <p>C\u00f3 \\(n\\) cu\u1ed9c h\u1ecdp, cu\u1ed9c h\u1ecdp th\u1ee9 \\(i\\) b\u1eaft \u0111\u1ea7u v\u00e0o th\u1eddi \u0111i\u1ec3m \\(A_i\\) v\u00e0 k\u1ebft th\u00fac \u1edf th\u1eddi \u0111i\u1ec3m \\(B_i\\). Do ch\u1ec9 c\u00f3 m\u1ed9t ph\u00f2ng h\u1ed9i th\u1ea3o n\u00ean 2 cu\u1ed9c h\u1ecdp b\u1ea5t k\u00ec s\u1ebd \u0111\u01b0\u1ee3c c\u00f9ng b\u1ed1 tr\u00ed ph\u1ee5c v\u1ee5 n\u1ebfu kho\u1ea3ng th\u1eddi gian l\u00e0m vi\u1ec7c c\u1ee7a ch\u00fang ch\u1ec9 giao nhau t\u1ea1i \u0111\u1ea7u m\u00fat. H\u00e3y b\u1ed1 tr\u00ed ph\u00f2ng h\u1ecdp \u0111\u1ec3 ph\u1ee5c v\u1ee5 \u0111\u01b0\u1ee3c nhi\u1ec1u cu\u1ed9c h\u1ecdp nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>S\u1eafp x\u1ebfp c\u00e1c cu\u1ed9c h\u1ecdp t\u0103ng d\u1ea7n theo th\u1eddi \u0111i\u1ec3m k\u1ebft th\u00fac \\(B_i\\). Th\u1ebf th\u00ec cu\u1ed9c h\u1ecdp \\(i\\) s\u1ebd b\u1ed1 tr\u00ed \u0111\u01b0\u1ee3c sau cu\u1ed9c h\u1ecdp \\(j\\) khi v\u00e0 ch\u1ec9 khi \\(j&lt;i\\) v\u00e0 \\(B_j \\le A_i\\). Y\u00eau c\u1ea7u b\u1ed1 tr\u00ed \u0111\u01b0\u1ee3c nhi\u1ec1u cu\u1ed9c h\u1ecdp nh\u1ea5t c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 vi\u1ec7c t\u00ecm d\u00e3y c\u00e1c cu\u1ed9c h\u1ecdp d\u00e0i nh\u1ea5t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n tr\u00ean.</p>"},{"location":"algo/dp/basic-problems/#cho-thue-may","title":"Cho thu\u00ea m\u00e1y","text":"<p>B\u00e0i to\u00e1n:</p> <p>Trung t\u00e2m t\u00ednh to\u00e1n hi\u1ec7u n\u0103ng cao nh\u1eadn \u0111\u01b0\u1ee3c \u0111\u01a1n \u0111\u1eb7t h\u00e0ng c\u1ee7a \\(n\\) kh\u00e1ch h\u00e0ng. Kh\u00e1ch h\u00e0ng \\(i\\) mu\u1ed1n s\u1eed d\u1ee5ng m\u00e1y trong kho\u1ea3ng th\u1eddi gian t\u1eeb \\(a_i\\) \u0111\u1ebfn \\(b_i\\) v\u00e0 tr\u1ea3 ti\u1ec1n thu\u00ea l\u00e0 \\(c_i\\). H\u00e3y b\u1ed1 tr\u00ed l\u1ecbch thu\u00ea m\u00e1y \u0111\u1ec3 t\u1ed5ng s\u1ed1 ti\u1ec1n thu \u0111\u01b0\u1ee3c l\u00e0 l\u1edbn nh\u1ea5t m\u00e0 th\u1eddi gian s\u1eed d\u1ee5ng m\u00e1y c\u1ee7a 2 kh\u00e1ch h\u00e0ng b\u1ea5t k\u00ec \u0111\u01b0\u1ee3c ph\u1ee5c v\u1ee5 \u0111\u1ec1u kh\u00f4ng giao nhau (c\u1ea3 trung t\u00e2m ch\u1ec9 c\u00f3 m\u1ed9t m\u00e1y cho thu\u00ea).</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n b\u1ed1 tr\u00ed ph\u00f2ng h\u1ecdp, n\u1ebfu s\u1eafp x\u1ebfp c\u00e1c \u0111\u01a1n \u0111\u1eb7t h\u00e0ng theo th\u1eddi \u0111i\u1ec3m k\u1ebft th\u00fac, ta s\u1ebd \u0111\u01b0a \u0111\u01b0\u1ee3c v\u1ec1 b\u00e0i to\u00e1n t\u00ecm d\u00e3y con c\u00f3 t\u1ed5ng l\u1edbn nh\u1ea5t. B\u00e0i to\u00e1n n\u00e0y l\u00e0 bi\u1ebfn th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n t\u00ecm d\u00e3y con t\u0103ng d\u00e0i nh\u1ea5t, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t b\u1eb1ng \u0111o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <pre><code>for i:=1 to n do\n  begin\n          L[i]:=C[i];\n          for j:=1 to i-1 do\n               if (B[j]&lt;=A[i]) and (L[i]&lt;L[j]+C[i]) then L[i]:=L[j]+C[i];\n  end;\n</code></pre>"},{"location":"algo/dp/basic-problems/#day-tam-giac-bao-nhau","title":"D\u00e3y tam gi\u00e1c bao nhau","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho \\(n\\) tam gi\u00e1c tr\u00ean m\u1eb7t ph\u1eb3ng. Tam gi\u00e1c \\(i\\) bao tam gi\u00e1c \\(j\\) n\u1ebfu 3 \u0111\u1ec9nh c\u1ee7a tam gi\u00e1c \\(j\\) \u0111\u1ec1u n\u1eb1m trong tam gi\u00e1c \\(i\\) (c\u00f3 th\u1ec3 n\u1eb1m tr\u00ean c\u1ea1nh). H\u00e3y t\u00ecm d\u00e3y tam gi\u00e1c bao nhau c\u00f3 nhi\u1ec1u tam gi\u00e1c nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>S\u1eafp x\u1ebfp c\u00e1c tam gi\u00e1c t\u0103ng d\u1ea7n v\u1ec1 di\u1ec7n t\u00edch. Khi \u0111\u00f3 tam gi\u00e1c \\(i\\) s\u1ebd bao tam gi\u00e1c \\(j\\) n\u1ebfu \\(j&lt;i\\) v\u00e0 3 \u0111\u1ec9nh c\u1ee7a \\(j\\) n\u1eb1m trong \\(i\\). T\u1eeb \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 b\u00e0i to\u00e1n t\u00ecm d\u00e3y \u201ct\u0103ng\u201d d\u00e0i nh\u1ea5t.</p> <p>B\u00e0i to\u00e1n c\u00f3 m\u1ed9t s\u1ed1 bi\u1ebfn th\u1ec3 kh\u00e1c nh\u01b0 t\u00ecm d\u00e3y h\u00ecnh tam gi\u00e1c, h\u00ecnh ch\u1eef nh\u1eadt\u2026 bao nhau c\u00f3 t\u1ed5ng di\u1ec7n t\u00edch l\u1edbn nh\u1ea5t.</p> <p>Vi\u1ec7c ki\u1ec3m tra \u0111i\u1ec3m \\(M\\) c\u00f3 n\u1eb1m trong tam gi\u00e1c \\(ABC\\) kh\u00f4ng c\u00f3 th\u1ec3 d\u1ef1a tr\u00ean ph\u01b0\u01a1ng ph\u00e1p t\u00ednh di\u1ec7n t\u00edch: \u0111i\u1ec3m \\(M\\) n\u1eb1m trong n\u1ebfu \\(S(ABC) = S(ABM) + S(ACM) + S(BCM)\\).</p>"},{"location":"algo/dp/basic-problems/#day-oi-dau","title":"D\u00e3y \u0111\u1ed5i d\u1ea5u","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho d\u00e3y \\(A_1, A_2,..., A_N\\). H\u00e3y t\u00ecm d\u00e3y con \u0111\u1ed5i d\u1ea5u d\u00e0i nh\u1ea5t c\u1ee7a d\u00e3y \u0111\u00f3. D\u00e3y con \u0111\u1ed5i d\u1ea5u \\(A_{i1},A_{i2},..., A_{ik}\\) ph\u1ea3i tho\u1ea3 m\u00e3n c\u00e1c \u0111i\u1ec1u ki\u1ec7n sau:</p> <ul> <li>\\(A_{i1} &lt; A_{i2} &gt; A_{i3} &lt;...\\) ho\u1eb7c \\(A_{i1} &gt; A_{i2} &lt; A_{i3} &gt;...\\)</li> <li>C\u00e1c ch\u1ec9 s\u1ed1 ph\u1ea3i c\u00e1ch nhau \u00edt nh\u1ea5t \\(L\\): \\(i_2 - i_1 \\ge L\\), \\(i_3 - i_2 \\ge L\\), ...</li> <li>Ch\u00eanh l\u1ec7ch gi\u1eefa 2 ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp nh\u1ecf h\u01a1n \\(U\\): \\(\\|A_{i1} - A_{i2}\\| \\le U\\), \\(\\|A_{i2} - A_{i3}\\| \\le U\\), ...</li> </ul> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>G\u1ecdi \\(L_i\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y con \u0111\u1ed5i d\u1ea5u c\u00f3 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng l\u00e0 \\(A_i\\) v\u00e0 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng l\u1edbn h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc. T\u01b0\u01a1ng t\u1ef1, \\(P_i\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y con \u0111\u1ed5i d\u1ea5u c\u00f3 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng l\u00e0 \\(A_i\\) v\u00e0 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng nh\u1ecf h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc.</p> <p>Ta d\u1ec5 d\u00e0ng suy ra: - \\(L_i = max(1, P_j + 1)\\), v\u1edbi m\u1ecdi \\(j\\) th\u1ecfa m\u00e3n: \\(j \\le i-L\\) v\u00e0 \\(A_i - U \\le A_j &lt; A_i\\). - \\(P_i = max(1, L_j + 1)\\), v\u1edbi m\u1ecdi \\(j\\) th\u1ecfa m\u00e3n: \\(j \\le i-L\\) v\u00e0 \\(A_i &lt; A_j \\le A_i + U\\).</p>"},{"location":"algo/dp/basic-problems/#day-so-wavio","title":"D\u00e3y s\u1ed1 WAVIO","text":"<p>B\u00e0i to\u00e1n:</p> <p>D\u00e3y s\u1ed1 Wavio l\u00e0 d\u00e3y s\u1ed1 nguy\u00ean th\u1ecfa m\u00e3n c\u00e1c t\u00ednh ch\u1ea5t: c\u00e1c ph\u1ea7n t\u1eed \u0111\u1ea7u s\u1eafp x\u1ebfp th\u00e0nh 1 d\u00e3y t\u0103ng d\u1ea7n \u0111\u1ebfn 1 ph\u1ea7n t\u1eed \u0111\u1ec9nh sau \u0111\u00f3 gi\u1ea3m d\u1ea7n. V\u00ed d\u1ee5 d\u00e3y s\u1ed1 <code>1 2 3 4 5 2 1</code> l\u00e0 1 d\u00e3y Wavio \u0111\u1ed9 d\u00e0i 7. Cho 1 d\u00e3y g\u1ed3m \\(N\\) s\u1ed1 nguy\u00ean, h\u00e3y ch\u1ec9 ra m\u1ed9t d\u00e3y con Wavio c\u00f3 \u0111\u1ecd d\u00e0i l\u1edbn nh\u1ea5t tr\u00edch ra t\u1eeb d\u00e3y \u0111\u00f3.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>\\(L1_i\\) l\u00e0 m\u1ea3ng ghi \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a 1 d\u00e3y con t\u0103ng d\u1ea7n tr\u00edch ra t\u1eeb d\u00e3y \\(N\\) ph\u1ea7n t\u1eed k\u1ec3 t\u1eeb ph\u1ea7n t\u1eed 1 \u0111\u1ebfn ph\u1ea7n t\u1eed \\(a_i\\).</p> <p>\\(L2_i\\): m\u1ea3ng ghi \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a d\u00e3y con gi\u1ea3m d\u1ea7n tr\u00edch ra t\u1eeb d\u00e3y \\(N\\) ph\u1ea7n t\u1eed k\u1ec3 t\u1eeb ph\u1ea7n t\u1eed \\(A_N\\) \u0111\u1ebfn \\(A_i\\). Ta t\u00ecm ph\u1ea7n t\u1eed \\(j\\) trong 2 m\u1ea3ng \\(L1\\), \\(L2\\) th\u1ecfa m\u00e3n \\(L1_j + L2_j\\) l\u1edbn nh\u1ea5t.</p>"},{"location":"algo/dp/basic-problems/#xep-cac-khoi-a","title":"X\u1ebfp c\u00e1c kh\u1ed1i \u0111\u00e1","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho \\(N\\) kh\u1ed1i \u0111\u00e1 \\((N \\le 5000)\\).</p> <p>C\u00e1c kh\u1ed1i \u0111\u00e1 \u0111\u1ec1u c\u00f3 d\u1ea1ng h\u00ecnh h\u1ed9p ch\u1eef nh\u1eadt v\u00e0 \u0111\u01b0\u1ee3c \u0111\u1eb7c tr\u01b0ng b\u1edbi 3 k\u00edch th\u01b0\u1edbc: d\u00e0i, r\u1ed9ng, cao. M\u1ed9t c\u00e1ch x\u00e2y d\u1ef1ng th\u00e1p l\u00e0 m\u1ed9t c\u00e1ch \u0111\u1eb7t m\u1ed9t s\u1ed1 c\u00e1c kh\u1ed1i \u0111\u00e1 trong c\u00e1c kh\u1ed1i \u0111\u00e1 \u0111\u00e3 cho ch\u1ed3ng l\u00ean nhau theo quy t\u1eafc:</p> <ul> <li>Chi\u1ec1u cao m\u1ed7i kh\u1ed1i \u0111\u00e1 l\u00e0 k\u00edch th\u01b0\u1edbc nh\u1ecf nh\u1ea5t trong 3 k\u00edch th\u01b0\u1edbc.</li> <li>C\u00e1c m\u00e9p c\u1ee7a kh\u1ed1i \u0111\u00e1 \u0111\u01b0\u1ee3c \u0111\u1eb7t song song v\u1edbi nhau sao cho kh\u00f4ng c\u00f3 ph\u1ea7n n\u00e0o c\u1ee7a kh\u1ed1i tr\u00ean n\u1eb1m ch\u00eca ra ngo\u00e0i kh\u1ed1i d\u01b0\u1edbi.</li> </ul> <p>H\u00e3y ch\u1ec9 ra c\u00e1ch \u0111\u1ec3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c m\u1ed9t c\u00e1i th\u00e1p sao cho s\u1ed1 kh\u1ed1i \u0111\u00e1 \u0111\u01b0\u1ee3c d\u00f9ng l\u00e0 nhi\u1ec1u nh\u1ea5t.</p>"},{"location":"algo/dp/basic-problems/#2-vali-b","title":"2. Vali (B)","text":""},{"location":"algo/dp/basic-problems/#21-mo-hinh","title":"2.1. M\u00f4 h\u00ecnh","text":"<p>C\u00f3 \\(n\\) \u0111\u1ed3 v\u1eadt, v\u1eadt th\u1ee9 \\(i\\) c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng \\(A_i\\) v\u00e0 gi\u00e1 tr\u1ecb \\(B_i\\). H\u00e3y ch\u1ecdn ra m\u1ed9t s\u1ed1 c\u00e1c \u0111\u1ed3 v\u1eadt, m\u1ed7i v\u1eadt m\u1ed9t c\u00e1i \u0111\u1ec3 x\u1ebfp v\u00e0o 1 vali c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng t\u1ed1i \u0111a \\(W\\) sao cho t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a vali l\u00e0 l\u1edbn nh\u1ea5t.</p>"},{"location":"algo/dp/basic-problems/#22-cong-thuc","title":"2.2. C\u00f4ng th\u1ee9c","text":"<p>H\u00e0m m\u1ee5c ti\u00eau: \\(f\\): t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a vali.</p> <p>Nh\u1eadn x\u00e9t: gi\u00e1 tr\u1ecb c\u1ee7a vali ph\u1ee5 thu\u1ed9c v\u00e0o 2 y\u1ebfu t\u1ed1: c\u00f3 bao nhi\u00eau v\u1eadt \u0111ang \u0111\u01b0\u1ee3c x\u00e9t v\u00e0 tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a c\u00e1c v\u1eadt. Do \u0111\u00f3 b\u1ea3ng ph\u01b0\u01a1ng \u00e1n s\u1ebd l\u00e0 b\u1ea3ng 2 chi\u1ec1u:     - \\(L(i,j)\\): t\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a vali khi x\u00e9t t\u1eeb v\u1eadt 1 .. v\u1eadt \\(i\\) v\u00e0 tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a vali ch\u01b0a v\u01b0\u1ee3t qu\u00e1 \\(j\\). Ch\u00fa \u00fd r\u1eb1ng khi x\u00e9t \u0111\u1ebfn \\(L[i,j]\\) th\u00ec c\u00e1c gi\u00e1 tr\u1ecb tr\u00ean b\u1ea3ng ph\u01b0\u01a1ng \u00e1n \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u.</p> <p>T\u00ednh \\(L(i,j)\\): v\u1eadt \u0111ang x\u00e9t l\u00e0 \\(a_i\\) v\u1edbi tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a vali kh\u00f4ng \u0111\u01b0\u1ee3c qu\u00e1 \\(j\\). C\u00f3 2 kh\u1ea3 n\u0103ng x\u1ea3y ra:</p> <ul> <li>N\u1ebfu ch\u1ecdn \\(A_i\\) \u0111\u01b0a v\u00e0o vali, tr\u1ecdng l\u01b0\u1ee3ng vali tr\u01b0\u1edbc \u0111\u00f3 ph\u1ea3i kh\u00f4ng qu\u00e1 \\(j - A_i\\). V\u00ec m\u1ed7i v\u1eadt ch\u1ec9 \u0111\u01b0\u1ee3c ch\u1ecdn 1 l\u1ea7n n\u00ean gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a vali l\u00fac \u0111\u00f3 l\u00e0 \\(L(i-1, j - A_i) + B_i\\).</li> <li>N\u1ebfu kh\u00f4ng ch\u1ecdn \\(A_i\\), tr\u1ecdng l\u01b0\u1ee3ng c\u1ee7a vali l\u00e0 nh\u01b0 c\u0169 (nh\u01b0 l\u00fac tr\u01b0\u1edbc khi ch\u1ecdn \\(A_i\\)): \\(L(i-1,j)\\).</li> </ul> <p>T\u00f3m l\u1ea1i ta c\u00f3 \\(L[i,j] = max(L(i-1, j - A_i) + B_i, L(i-1, j))\\).</p>"},{"location":"algo/dp/basic-problems/#23-cai-at","title":"2.3. C\u00e0i \u0111\u1eb7t","text":"<pre><code>For i:=1 to n do\n    For j:=1 to W do\n          If   b[i]&lt;=j then L[i,j]:=max(L[ i-1,j-A[i] ] + B[i], L[i-1,j])\n          else L[i,j]:=L[i-1,j];\n</code></pre>"},{"location":"algo/dp/basic-problems/#24-mot-so-bai-toan-khac","title":"2.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-problems/#day-con-co-tong-bang-s","title":"D\u00e3y con c\u00f3 t\u1ed5ng b\u1eb1ng S","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho d\u00e3y \\(A_1,A_2,..., A_N\\). T\u00ecm m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y \u0111\u00f3 c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\).</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>\u0110\u1eb7t \\(L[i,t]=1\\) n\u1ebfu c\u00f3 th\u1ec3 t\u1ea1o ra t\u1ed5ng \\(t\\) t\u1eeb m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed \\(A_1,A_2,...,A_i\\). Ng\u01b0\u1ee3c l\u1ea1i th\u00ec \\(L[i,t]=0\\). N\u1ebfu \\(L[n,S]=1\\) th\u00ec \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n tr\u00ean l\u00e0 \u201cc\u00f3\u201d.</p> <p>Ta c\u00f3 th\u1ec3 t\u00ednh \\(L[i,t]\\) theo c\u00f4ng th\u1ee9c: \\(L[i,t]=1\\) n\u1ebfu \\(L[i-1,t]=1\\) ho\u1eb7c \\(L[i-1,t-a[i]]=1\\).</p> <p>C\u00e0i \u0111\u1eb7t:</p> <p>N\u1ebfu \u00e1p d\u1ee5ng lu\u00f4n c\u00f4ng th\u1ee9c tr\u00ean th\u00ec ta c\u1ea7n d\u00f9ng b\u1ea3ng ph\u01b0\u01a1ng \u00e1n hai chi\u1ec1u. Ta c\u00f3 th\u1ec3 nh\u1eadn x\u00e9t r\u1eb1ng \u0111\u1ec3 t\u00ednh d\u00f2ng th\u1ee9 \\(i\\), ta ch\u1ec9 c\u1ea7n d\u00f2ng \\(i-1\\). B\u1ea3ng ph\u01b0\u01a1ng \u00e1n khi \u0111\u00f3 ch\u1ec9 c\u1ea7n 1 m\u1ea3ng 1 chi\u1ec1u \\(L[0..S]\\) v\u00e0 \u0111\u01b0\u1ee3c t\u00ednh nh\u01b0 sau:</p> <pre><code>L[t]:=0; L[0]:=1;\n\nfor i := 1 to n do\n    for t := S downto a[i] do\n          if (L[t]=0) and (L[t-a[i]]=1) then L[t]:=1;\n</code></pre> <p>D\u1ec5 th\u1ea5y \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean l\u00e0 \\(O(m)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O(n \\* m)\\), v\u1edbi \\(m\\) l\u00e0 t\u1ed5ng c\u1ee7a \\(n\\) s\u1ed1. H\u00e3y t\u1ef1 ki\u1ec3m tra xem t\u1ea1i sao v\u00f2ng for th\u1ee9 2 l\u1ea1i l\u00e0 <code>for downto</code> ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 <code>for to</code>.</p>"},{"location":"algo/dp/basic-problems/#chia-keo","title":"Chia k\u1eb9o","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho \\(n\\) g\u00f3i k\u1eb9o, g\u00f3i th\u1ee9 \\(i\\) c\u00f3 \\(a_i\\) vi\u00ean. H\u00e3y chia c\u00e1c g\u00f3i th\u00e0nh 2 ph\u1ea7n sao cho ch\u00eanh l\u1ec7ch gi\u1eefa 2 ph\u1ea7n l\u00e0 \u00edt nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>G\u1ecdi \\(T\\) l\u00e0 t\u1ed5ng s\u1ed1 k\u1eb9o c\u1ee7a \\(n\\) g\u00f3i. Ch\u00fang ta c\u1ea7n t\u00ecm s\u1ed1 \\(S\\) l\u1edbn nh\u1ea5t tho\u1ea3 m\u00e3n:</p> <ul> <li>\\(S \\le T/2\\).</li> <li>C\u00f3 m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y \\(a\\) c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\).</li> </ul> <p>Khi \u0111\u00f3 s\u1ebd c\u00f3 c\u00e1ch chia v\u1edbi ch\u00eanh l\u1ec7ch 2 ph\u1ea7n l\u00e0 \\(T-2S\\) l\u00e0 nh\u1ecf nh\u1ea5t v\u00e0 d\u00e3y con c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\) \u1edf tr\u00ean g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed l\u00e0 c\u00e1c g\u00f3i k\u1eb9o thu\u1ed9c ph\u1ea7n th\u1ee9 nh\u1ea5t. Ph\u1ea7n th\u1ee9 hai l\u00e0 c\u00e1c g\u00f3i k\u1eb9o c\u00f2n l\u1ea1i.</p>"},{"location":"algo/dp/basic-problems/#market-olympic-balkan-2000","title":"Market (Olympic Balkan 2000)","text":"<p>B\u00e0i to\u00e1n:</p> <p>Ng\u01b0\u1eddi \u0111\u00e1nh c\u00e1 Clement b\u1eaft \u0111\u01b0\u1ee3c \\(n\\) con c\u00e1, kh\u1ed1i l\u01b0\u1ee3ng m\u1ed7i con l\u00e0 \\(a_i\\), \u0111em b\u00e1n ngo\u00e0i ch\u1ee3. \u1ede ch\u1ee3 c\u00e1, ng\u01b0\u1eddi ta kh\u00f4ng mua c\u00e1 theo t\u1eebng con m\u00e0 mua theo m\u1ed9t l\u01b0\u1ee3ng n\u00e0o \u0111\u00f3. Ch\u1eb3ng h\u1ea1n 3 kg, 5kg...</p> <p>V\u00ed d\u1ee5: c\u00f3 3 con c\u00e1, kh\u1ed1i l\u01b0\u1ee3ng l\u1ea7n l\u01b0\u1ee3t l\u00e0: 3, 2, 4. Mua l\u01b0\u1ee3ng 6kg s\u1ebd ph\u1ea3i l\u1ea5y con c\u00e1 th\u1ee9 2 v\u00e0 v\u00e0 th\u1ee9 3. Mua l\u01b0\u1ee3ng 3 kg th\u00ec l\u1ea5y con th\u1ee9 nh\u1ea5t. Kh\u00f4ng th\u1ec3 mua l\u01b0\u1ee3ng 8 kg. N\u1ebfu b\u1ea1n l\u00e0 ng\u01b0\u1eddi \u0111\u1ea7u ti\u00ean mua c\u00e1, c\u00f3 bao nhi\u00eau l\u01b0\u1ee3ng b\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn?</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>Th\u1ef1c ch\u1ea5t b\u00e0i to\u00e1n l\u00e0 t\u00ecm c\u00e1c s\u1ed1 \\(S\\) m\u00e0 c\u00f3 m\u1ed9t d\u00e3y con c\u1ee7a d\u00e3y \\(a\\) c\u00f3 t\u1ed5ng b\u1eb1ng \\(S\\). Ta c\u00f3 th\u1ec3 d\u00f9ng ph\u01b0\u01a1ng ph\u00e1p \u0111\u00e1nh d\u1ea5u c\u1ee7a b\u00e0i chia k\u1eb9o \u1edf tr\u00ean r\u1ed3i \u0111\u1ebfm c\u00e1c gi\u00e1 tr\u1ecb \\(t\\) m\u00e0 \\(L[t]=1\\).</p>"},{"location":"algo/dp/basic-problems/#ien-dau","title":"\u0110i\u1ec1n d\u1ea5u","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho \\(n\\) s\u1ed1 t\u1ef1 nhi\u00ean \\(A_1,A_2, ...,A_N\\). Ban \u0111\u1ea7u c\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u1eb7t li\u00ean ti\u1ebfp theo \u0111\u00fang th\u1ee9 t\u1ef1 c\u00e1ch nhau b\u1edfi d\u1ea5u \"?\": <code>A1 ? A2 ? ... ? AN</code>. Cho tr\u01b0\u1edbc s\u1ed1 nguy\u00ean \\(S\\), c\u00f3 c\u00e1ch n\u00e0o thay c\u00e1c d\u1ea5u <code>?</code> b\u1eb1ng d\u1ea5u <code>+</code> hay d\u1ea5u <code>\u2212</code> \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ed9t bi\u1ec3u th\u1ee9c s\u1ed1 h\u1ecdc cho gi\u00e1 tr\u1ecb l\u00e0 \\(S\\) kh\u00f4ng?</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>\u0110\u1eb7t \\(L[i,t]=1\\) n\u1ebfu c\u00f3 th\u1ec3 \u0111i\u1ec1n d\u1ea5u v\u00e0o \\(i\\) s\u1ed1 \u0111\u1ea7u ti\u00ean v\u00e0 cho k\u1ebft qu\u1ea3 b\u1eb1ng \\(t\\). Ta c\u00f3 c\u00f4ng th\u1ee9c sau \u0111\u1ec3 t\u00ednh \\(L\\): - <code>L[1, a[1]] = 1</code> - <code>L[i, t] = 1</code> n\u1ebfu <code>L[i - 1, t + a[i]] = 1</code> ho\u1eb7c <code>L[i - 1, t - a[i]] = 1</code>.</p> <p>N\u1ebfu <code>L[n, S] = 1</code> th\u00ec c\u00e2u tr\u1ea3 l\u1eddi c\u1ee7a b\u00e0i to\u00e1n l\u00e0 c\u00f3.</p> <p>Khi c\u00e0i \u0111\u1eb7t, c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t m\u1ea3ng 2 chi\u1ec1u (l\u01b0u to\u00e0n b\u1ed9 b\u1ea3ng ph\u01b0\u01a1ng \u00e1n) ho\u1eb7c 2 m\u1ea3ng m\u1ed9t chi\u1ec1u (\u0111\u1ec3 l\u01b0u d\u00f2ng \\(i\\) v\u00e0 d\u00f2ng \\(i-1\\)). Ch\u00fa \u00fd l\u00e0 ch\u1ec9 s\u1ed1 theo \\(t\\) c\u1ee7a c\u00e1c m\u1ea3ng ph\u1ea3i c\u00f3 c\u1ea3 ph\u1ea7n \u00e2m (t\u1ee9c l\u00e0 t\u1eeb \\(-T\\) \u0111\u1ebfn \\(T\\), v\u1edbi \\(T\\) l\u00e0 t\u1ed5ng c\u1ee7a \\(n\\) s\u1ed1), v\u00ec trong b\u00e0i n\u00e0y ch\u00fang ta d\u00f9ng c\u1ea3 d\u1ea5u <code>-</code> n\u00ean c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u1ed5ng \u00e2m.</p> <p>B\u00e0i n\u00e0y c\u00f3 m\u1ed9t bi\u1ebfn th\u1ec3 l\u00e0 \u0111\u1eb7t d\u1ea5u sao cho k\u1ebft qu\u1ea3 l\u00e0 m\u1ed9t s\u1ed1 chia h\u1ebft cho \\(k\\). Ta c\u00f3 thu\u1eadt gi\u1ea3i t\u01b0\u01a1ng t\u1ef1 b\u00e0i to\u00e1n tr\u00ean b\u1eb1ng c\u00e1ch thay c\u00e1c ph\u00e9p c\u1ed9ng, tr\u1eeb b\u1eb1ng c\u00e1c ph\u00e9p c\u1ed9ng v\u00e0 tr\u1eeb theo modulo \\(k\\) v\u00e0 d\u00f9ng m\u1ea3ng \u0111\u00e1nh d\u1ea5u v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn \\(k-1\\) (l\u00e0 c\u00e1c s\u1ed1 d\u01b0 c\u00f3 th\u1ec3 c\u00f3 khi chia cho \\(k\\)). \u0110\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(L[n,0]\\).</p>"},{"location":"algo/dp/basic-problems/#expression","title":"Expression","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho \\(n\\) s\u1ed1 nguy\u00ean. H\u00e3y chia ch\u00fang th\u00e0nh 2 nh\u00f3m sao cho t\u00edch c\u1ee7a t\u1ed5ng 2 nh\u00f3m l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>G\u1ecdi \\(T\\) l\u00e0 t\u1ed5ng \\(n\\) s\u1ed1 nguy\u00ean \u0111\u00f3. Gi\u1ea3 s\u1eed ta chia d\u00e3y th\u00e0nh 2 nh\u00f3m, g\u1ecdi \\(S\\) l\u00e0 t\u1ed5ng c\u1ee7a m\u1ed9t nh\u00f3m, t\u1ed5ng nh\u00f3m c\u00f2n l\u1ea1i l\u00e0 \\(T-S\\) v\u00e0 t\u00edch c\u1ee7a t\u1ed5ng 2 nh\u00f3m l\u00e0 \\(S\\*(T-S)\\). B\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p \u0111\u00e1nh d\u1ea5u ta x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c m\u1ecdi s\u1ed1 \\(S\\) l\u00e0 t\u1ed5ng c\u1ee7a m\u1ed9t nh\u00f3m (nh\u01b0 b\u00e0i Market) v\u00e0 t\u00ecm s\u1ed1 \\(S\\) sao cho \\(S\\*(T-S)\\) \u0111\u1ea1t max.</p>"},{"location":"algo/dp/basic-problems/#farmer-ioi-2004","title":"Farmer (IOI 2004)","text":"<p>B\u00e0i to\u00e1n</p> <p>M\u1ed9t ng\u01b0\u1eddi c\u00f3 \\(N\\) m\u1ea3nh \u0111\u1ea5t v\u00e0 \\(M\\) d\u1ea3i \u0111\u1ea5t. C\u00e1c m\u1ea3nh \u0111\u1ea5t c\u00f3 th\u1ec3 coi l\u00e0 m\u1ed9t t\u1ee9 gi\u00e1c v\u00e0 c\u00e1c d\u1ea3i \u0111\u1ea5t th\u00ec coi nh\u01b0 m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng. D\u1ecdc theo c\u00e1c d\u1ea3i \u0111\u1ea5t \u00f4ng ta tr\u1ed3ng c\u00e1c c\u00e2y b\u00e1ch, d\u1ea3i \u0111\u1ea5t th\u1ee9 \\(i\\) c\u00f3 \\(A_i\\) c\u00e2y b\u00e1ch. \u00d4ng ta c\u0169ng tr\u1ed3ng c\u00e1c c\u00e2y b\u00e1ch tr\u00ean vi\u1ec1n c\u1ee7a c\u00e1c m\u1ea3nh \u0111\u1ea5t, m\u1ea3nh \u0111\u1ea5t th\u1ee9 \\(j\\) c\u00f3 \\(B_j\\) c\u00e2y b\u00e1ch. C\u1ea3 \u1edf tr\u00ean c\u00e1c m\u1ea3nh \u0111\u1ea5t v\u00e0 d\u1ea3i \u0111\u1ea5t, xen gi\u1eefa 2 c\u00e2y b\u00e1ch \u00f4ng ta tr\u1ed3ng m\u1ed9t c\u00e2y \u00f4liu. \u00d4ng ta cho con trai \u0111\u01b0\u1ee3c ch\u1ecdn c\u00e1c m\u1ea3nh \u0111\u1ea5t v\u00e0 d\u1ea3i \u0111\u1ea5t tu\u1ef3 \u00fd v\u1edbi \u0111i\u1ec1u ki\u1ec7n t\u1ed5ng s\u1ed1 c\u00e2y b\u00e1ch kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(Q\\). Ng\u01b0\u1eddi con trai ph\u1ea3i ch\u1ecdn th\u1ebf n\u00e0o \u0111\u1ec3 c\u00f3 nhi\u1ec1u c\u00e2y \u00f4liu (lo\u00e0i c\u00e2y m\u00e0 anh ta th\u00edch) nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>D\u1ec5 th\u1ea5y m\u1ea3nh \u0111\u1ea5t th\u1ee9 \\(i\\) c\u00f3 \\(A_i\\) c\u00e2y \u00f4liu v\u00e0 d\u1ea3i \u0111\u1ea5t th\u1ee9 \\(j\\) c\u00f3 \\(B_j-1\\) c\u00e2y \u00f4liu. Coi c\u00e1c m\u1ea3nh \u0111\u1ea5t v\u00e0 d\u1ea3i \u0111\u1ea5t l\u00e0 c\u00e1c \u201c\u0111\u1ed3 v\u1eadt\u201d, \u0111\u1ed3 v\u1eadt th\u1ee9 \\(k\\) c\u00f3 kh\u1ed1i l\u01b0\u1ee3ng \\(W_k\\) v\u00e0 gi\u00e1 tr\u1ecb \\(V_k\\) (n\u1ebfu \\(k\\) l\u00e0 m\u1ea3nh \u0111\u1ea5t \\(i\\) th\u00ec \\(W_k=V_k=A_i\\), n\u1ebfu \\(k\\) l\u00e0 d\u1ea3i \u0111\u1ea5t \\(j\\) th\u00ec \\(W_k=B_j\\), \\(V_k=B_j-1\\)). Ta c\u1ea7n ch\u1ecdn c\u00e1c \u201c\u0111\u1ed3 v\u1eadt\u201d, sao cho t\u1ed5ng \u201ckh\u1ed1i l\u01b0\u1ee3ng\u201d c\u1ee7a ch\u00fang kh\u00f4ng v\u01b0\u1ee3t \\(Q\\) v\u00e0 t\u1ed5ng \u201cgi\u00e1 tr\u1ecb\u201d l\u00e0 l\u1edbn nh\u1ea5t. \u0110\u00e2y ch\u00ednh l\u00e0 b\u00e0i to\u00e1n x\u1ebfp bal\u00f4 \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean.</p>"},{"location":"algo/dp/basic-problems/#3-bien-oi-xau","title":"3. Bi\u1ebfn \u0111\u1ed5i x\u00e2u","text":""},{"location":"algo/dp/basic-problems/#31-mo-hinh","title":"3.1. M\u00f4 h\u00ecnh","text":"<p>Cho 2 x\u00e2u \\(X\\), \\(F\\). X\u00e2u g\u1ed1c c\u00f3 \\(n\\) k\u00ed t\u1ef1 \\(X_1 X_2 ... X_n\\), x\u00e2u \u0111\u00edch c\u00f3 \\(m\\) k\u00ed t\u1ef1 \\(F_1 F_2 ... F_m\\). C\u00f3 3 ph\u00e9p bi\u1ebfn \u0111\u1ed5i:</p> <ul> <li>Ch\u00e8n 1 k\u00ed t\u1ef1 v\u00e0o sau k\u00ed t\u1ef1 th\u1ee9 \\(i\\): <code>I i C</code></li> <li>Thay th\u1ebf k\u00ed t\u1ef1 \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(i\\) b\u1eb1ng k\u00ed t\u1ef1 \\(C\\): <code>R i C</code></li> <li>Xo\u00e1 k\u00ed t\u1ef1 \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(i\\): <code>D i</code></li> </ul> <p>H\u00e3y t\u00ecm s\u1ed1 \u00edt nh\u1ea5t c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u0111\u1ec3 bi\u1ebfn x\u00e2u \\(X\\) th\u00e0nh x\u00e2u \\(F\\).</p>"},{"location":"algo/dp/basic-problems/#32-huong-dan","title":"3.2. H\u01b0\u1edbng d\u1eabn","text":"<p>H\u00e0m m\u1ee5c ti\u00eau: \\(f\\): s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i.</p> <p>D\u1ec5 th\u1ea5y s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i ph\u1ee5 thu\u1ed9c v\u00e0o v\u1ecb tr\u00ed \\(i\\) \u0111ang x\u00e9t c\u1ee7a x\u00e2u \\(X\\) v\u00e0 v\u1ecb tr\u00ed \\(j\\) \u0111ang x\u00e9t c\u1ee7a x\u00e2u \\(F\\). Do v\u1eady \u0111\u1ec3 c\u00e0i \u0111\u1eb7t cho b\u1ea3ng ph\u01b0\u01a1ng \u00e1n ta s\u1ebd d\u00f9ng m\u1ea3ng 2 chi\u1ec1u.</p> <p>G\u1ecdi \\(L[i,j]\\) l\u00e0 s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t \u0111\u1ec3 bi\u1ebfn x\u00e2u \\(X_i\\) g\u1ed3m \\(i\\) k\u00ed t\u1ef1 ph\u1ea7n \u0111\u1ea7u c\u1ee7a \\(X\\) (\\(X_i = X[1..i]\\)) th\u00e0nh x\u00e2u \\(F_j\\) g\u1ed3m \\(j\\) k\u00ed t\u1ef1 ph\u1ea7n \u0111\u1ea7u c\u1ee7a \\(F\\) (\\(F_j = F[1..j]\\)).</p> <p>D\u1ec5 th\u1ea5y \\(L[0,j]=j\\) v\u00e0 \\(L[i,0]=i\\).</p> <p>C\u00f3 2 tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra:</p> <ul> <li>N\u1ebfu \\(X[i] = F[j]\\):<ul> <li>\\(X_1 X_2 ... X_{i-1}\\) \\(X_i\\)</li> <li>\\(F_1 F_2 ... F_{j-1}\\) \\(X_i\\)</li> <li>th\u00ec ta ch\u1ec9 ph\u1ea3i bi\u1ebfn \u0111\u1ed5i x\u00e2u \\(X_{i-1}\\) th\u00e0nh x\u00e2u \\(F_{j-1}\\). Do \u0111\u00f3 \\(L[i,j]=L[i-1,j-1]\\).</li> </ul> </li> <li>Ng\u01b0\u1ee3c l\u1ea1i, ta c\u00f3 3 c\u00e1ch bi\u1ebfn \u0111\u1ed5i:<ul> <li>Xo\u00e1 k\u00ed t\u1ef1 \\(X_i\\):<ul> <li>\\(X_1 X_2 ... X_{i-1}\\)</li> <li>\\(F_1 F_2 ... F_{j-1}\\) \\(F_j\\)</li> <li>X\u00e2u \\(X_{i-1}\\) th\u00e0nh \\(F_j\\). Khi \u0111\u00f3 \\(L[i,j]=L[i-1,j]+1\\). (C\u1ed9ng 1 l\u00e0 do ta \u0111\u00e3 d\u00f9ng 1 ph\u00e9p x\u00f3a)</li> </ul> </li> <li>Thay th\u1ebf \\(X_i\\) b\u1edfi \\(F_j\\):<ul> <li>\\(X_1 X_2 ... X_{i-1}\\) \\(F_j\\)</li> <li>\\(F_1 F_2 ... F_{j-1}\\) \\(F_j\\)</li> <li>X\u00e2u \\(X_{i-1}\\) th\u00e0nh \\(F_{j-1}\\). Khi \u0111\u00f3 \\(L[i,j]=L[i-1,j-1]+1\\).</li> </ul> </li> <li>Ch\u00e8n \\(F_j\\) v\u00e0o sau \\(X_i\\):<ul> <li>\\(X_1 X_2 ... X_{i}\\) \\(F_j\\)</li> <li>\\(F_1 F_2 ... F_{j-1}\\) \\(F_j\\)</li> <li>X\u00e2u \\(X_i\\) th\u00e0nh \\(F_{j-1}\\). Khi \u0111\u00f3 \\(L[i,j]=L[i,j-1]+1\\)</li> </ul> </li> </ul> </li> </ul> <p>T\u1ed5ng k\u1ebft l\u1ea1i, ta c\u00f3 c\u00f4ng th\u1ee9c QH\u0110:</p> <ul> <li><code>L[0,j]=j</code></li> <li><code>L[i,0]=i</code></li> <li><code>L[i,j] =L[i\u22121,j\u22121]</code> n\u1ebfu \\(X_i = Y_j\\).</li> <li><code>L[i,j] = min(L[i\u22121,j], L[i,j\u22121], L[i\u22121,j\u22121]) + 1</code> n\u1ebfu \\(X_i \\ne F_j\\).</li> </ul> <p>B\u00e0i n\u00e0y ta c\u00f3 th\u1ec3 ti\u1ebft ki\u1ec7m bi\u1ebfn h\u01a1n b\u1eb1ng c\u00e1ch d\u00f9ng 2 m\u1ea3ng 1 chi\u1ec1u t\u00ednh l\u1eabn nhau v\u00e0 m\u1ed9t m\u1ea3ng \u0111\u00e1nh d\u1ea5u 2 chi\u1ec1u \u0111\u1ec3 truy v\u1ebft.</p>"},{"location":"algo/dp/basic-problems/#33-mot-so-bai-toan-khac","title":"3.3. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-problems/#xau-con-chung-dai-nhat","title":"X\u00e2u con chung d\u00e0i nh\u1ea5t","text":"<p>B\u00e0i to\u00e1n:</p> <p>Cho 2 x\u00e2u \\(X\\), \\(Y\\). H\u00e3y t\u00ecm x\u00e2u con c\u1ee7a \\(X\\) v\u00e0 c\u1ee7a \\(Y\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t. Bi\u1ebft x\u00e2u con c\u1ee7a m\u1ed9t x\u00e2u thu \u0111\u01b0\u1ee3c khi x\u00f3a m\u1ed9t s\u1ed1 k\u00ed t\u1ef1 thu\u1ed9c x\u00e2u \u0111\u00f3 (ho\u1eb7c kh\u00f4ng x\u00f3a k\u00ed t\u1ef1 n\u00e0o).</p> <p>C\u00f4ng th\u1ee9c QH\u0110:</p> <p>G\u1ecdi \\(L[i,j]\\) l\u00e0 \u0111\u1ed9 d\u00e0i x\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a x\u00e2u \\(X_i\\) g\u1ed3m \\(i\\) k\u00ed t\u1ef1 ph\u1ea7n \u0111\u1ea7u c\u1ee7a \\(X\\) (\\(X_i = X[1..i]\\)) v\u00e0 x\u00e2u \\(Y_j\\) g\u1ed3m \\(j\\) k\u00ed t\u1ef1 ph\u1ea7n \u0111\u1ea7u c\u1ee7a \\(Y\\) (\\(Y_j = Y[1..j]\\)). Ta c\u00f3 c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng nh\u01b0 sau:</p> <ul> <li><code>L[0,j] = L[i,0] = 0</code></li> <li><code>L[i,j] = L[i\u22121,j\u22121] + 1</code> n\u1ebfu \\(X_i = Y_j\\)</li> <li><code>L[i,j] = max(L[i\u22121,j], L[i,j\u22121])</code> n\u1ebfu \\(X_i \\ne  Y_j\\).</li> </ul> <p>C\u00e0i \u0111\u1eb7t:</p> <p>B\u1ea3ng ph\u01b0\u01a1ng \u00e1n l\u00e0 m\u1ed9t m\u1ea3ng 2 chi\u1ec1u <code>L[0..m,0..n]</code> \u0111\u1ec3 l\u01b0u c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m QH\u0110 \\(L[i,j]\\).</p> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh c\u00e0i \u0111\u1eb7t c\u00f4ng th\u1ee9c QH\u0110 tr\u00ean nh\u01b0 sau:</p> <pre><code>for i:=0 to m do L[i,0]:=0;\nfor j:=0 to n do L[0,j]:=0;\n\n\nfor i:=1 to m do\n    for j:=1 to n do\n           if X[i]=Y[j] then L[i,j]:=L[i-1,j-1]+1\n           else L[i,j]:=max(L[i-1,j],L[i,j-1]]);\n</code></pre> <p>Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(n^2)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O(n^2)\\).</p> <p>C\u00f3 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t t\u1ed1t h\u01a1n, ch\u1ec9 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb \\(O(n)\\) d\u1ef1a tr\u00ean nh\u1eadn x\u00e9t sau: \u0111\u1ec3 t\u00ednh \u00f4 \\(L[i,j]\\) c\u1ee7a b\u1ea3ng ph\u01b0\u01a1ng \u00e1n, ta ch\u1ec9 c\u1ea7n 3 \u00f4 \\(L[i-1,j-1]\\), \\(L[i-1,j]\\) v\u00e0 \\(L[i,j-1]\\). T\u1ee9c l\u00e0 \u0111\u1ec3 t\u00ednh d\u00f2ng \\(L[i]\\) th\u00ec ch\u1ec9 c\u1ea7n d\u00f2ng \\(L[i-1]\\). Do \u0111\u00f3 ta ch\u1ec9 c\u1ea7n 2 m\u1ea3ng 1 chi\u1ec1u \u0111\u1ec3 l\u01b0u d\u00f2ng v\u1eeba t\u00ednh (P) v\u00e0 d\u00f2ng \u0111ang t\u00ednh (L) m\u00e0 th\u00f4i. C\u00e1ch c\u00e0i \u0111\u1eb7t m\u1edbi nh\u01b0 sau:</p> <pre><code>for j:=0 to n do P[j]:=0;\n\nfor i:=1 to m do\n    begin\n          L[0] := 0;\n          for j:=1 to n do\n               if X[i]=Y[j] then L[i,j]:=P[j-1]+1\n                    else L[i,j]:=max(P[j], L[j-1]);\n          P := L;\n    end;\n</code></pre>"},{"location":"algo/dp/basic-problems/#bac-cau","title":"B\u1eafc c\u1ea7u","text":"<p>B\u00e0i to\u00e1n:</p> <p>Hai n\u01b0\u1edbc Alpha v\u00e0 Beta n\u1eb1m \u1edf hai b\u00ean b\u1edd s\u00f4ng Omega, Alpha n\u1eb1m \u1edf b\u1edd b\u1eafc v\u00e0 c\u00f3 \\(M\\) th\u00e0nh ph\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(M\\), Beta n\u1eb1m \u1edf b\u1edd nam v\u00e0 c\u00f3 \\(N\\) th\u00e0nh ph\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(N\\) (theo v\u1ecb tr\u00ed t\u1eeb \u0111\u00f4ng sang t\u00e2y). M\u1ed7i th\u00e0nh ph\u1ed1 c\u1ee7a n\u01b0\u1edbc n\u00e0y th\u01b0\u1eddng c\u00f3 quan h\u1ec7 k\u1ebft ngh\u0129a v\u1edbi m\u1ed9t s\u1ed1 th\u00e0nh ph\u1ed1 c\u1ee7a n\u01b0\u1edbc kia. \u0110\u1ec3 t\u0103ng c\u01b0\u1eddng t\u00ecnh h\u1eefu ngh\u1ecb, hai n\u01b0\u1edbc mu\u1ed1n x\u00e2y c\u00e1c c\u00e2y c\u1ea7u b\u1eafc qua s\u00f4ng, m\u1ed7i c\u00e2y c\u1ea7u s\u1ebd l\u00e0 nh\u1ecbp c\u1ea7u n\u1ed1i 2 th\u00e0nh ph\u1ed1 k\u1ebft ngh\u0129a. V\u1edbi y\u00eau c\u1ea7u l\u00e0 c\u00e1c c\u00e2y c\u1ea7u kh\u00f4ng \u0111\u01b0\u1ee3c c\u1eaft nhau v\u00e0 m\u1ed7i th\u00e0nh ph\u1ed1 ch\u1ec9 l\u00e0 \u0111\u1ea7u c\u1ea7u cho nhi\u1ec1u nh\u1ea5t l\u00e0 m\u1ed9t c\u00e2y c\u1ea7u, h\u00e3y ch\u1ec9 ra c\u00e1ch b\u1eafc c\u1ea7u \u0111\u01b0\u1ee3c nhi\u1ec1u c\u1ea7u nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>G\u1ecdi c\u00e1c th\u00e0nh ph\u1ed1 c\u1ee7a Alpha l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(A_1,A_2,..., A_M\\); c\u00e1c th\u00e0nh ph\u1ed1 c\u1ee7a Beta l\u00e0 \\(B_1,B_2,...,B_N\\). N\u1ebfu th\u00e0nh ph\u1ed1  \\(A_i\\) v\u00e0 \\(B_j\\) k\u1ebft ngh\u0129a v\u1edbi nhau th\u00ec coi \\(A_i\\) \"b\u1eb1ng\u201d \\(B_j\\). \u0110\u1ec3 c\u00e1c c\u00e2y c\u1ea7u kh\u00f4ng c\u1eaft nhau, n\u1ebfu ta \u0111\u00e3 ch\u1ecdn c\u1eb7p th\u00e0nh ph\u1ed1 \\((A_i,B_j)\\) \u0111\u1ec3 x\u00e2y c\u1ea7u th\u00ec c\u1eb7p ti\u1ebfp theo ph\u1ea3i l\u00e0 c\u1eb7p \\((A_u,B_v)\\) sao cho \\(u&gt;i\\) v\u00e0 \\(v&gt;j\\). Nh\u01b0 v\u1eady c\u00e1c c\u1eb7p th\u00e0nh ph\u1ed1 \u0111\u01b0\u1ee3c ch\u1ecdn x\u00e2y c\u1ea7u c\u00f3 th\u1ec3 coi l\u00e0 m\u1ed9t d\u00e3y con chung c\u1ee7a hai d\u00e3y \\(A\\) v\u00e0 \\(B\\).</p> <p>B\u00e0i to\u00e1n c\u1ee7a ch\u00fang ta tr\u1edf th\u00e0nh b\u00e0i to\u00e1n t\u00ecm d\u00e3y con chung d\u00e0i nh\u1ea5t, \u1edf  \u0111\u00e2y hai ph\u1ea7n t\u1eed \u201cb\u1eb1ng\u201d nhau n\u1ebfu ch\u00fang c\u00f3 quan h\u1ec7 k\u1ebft ngh\u0129a.</p>"},{"location":"algo/dp/basic-problems/#palindrome-ioi-2000","title":"Palindrome (IOI 2000)","text":"<p>B\u00e0i to\u00e1n:</p> <p>M\u1ed9t x\u00e2u g\u1ecdi l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng (palindrome) n\u1ebfu x\u00e2u \u0111\u00f3 \u0111\u1ecdc t\u1eeb tr\u00e1i sang ph\u1ea3i hay t\u1eeb ph\u1ea3i sang tr\u00e1i \u0111\u1ec1u nh\u01b0 nhau. Cho m\u1ed9t x\u00e2u \\(S\\), h\u00e3y t\u00ecm s\u1ed1 k\u00ed t\u1ef1 \u00edt nh\u1ea5t c\u1ea7n th\u00eam v\u00e0o \\(S\\) \u0111\u1ec3 \\(S\\) tr\u1edf th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng.</p> <p>H\u01b0\u1edbng d\u1eabn:</p> <p>B\u00e0i to\u00e1n n\u00e0y c\u00f3 m\u1ed9t c\u00f4ng th\u1ee9c QH\u0110 nh\u01b0 sau:</p> <ul> <li>G\u1ecdi \\(L[i,j]\\) l\u00e0 s\u1ed1 k\u00ed t\u1ef1 \u00edt nh\u1ea5t c\u1ea7n th\u00eam v\u00e0o x\u00e2u con \\(S[i..j]\\) c\u1ee7a \\(S\\) \u0111\u1ec3 x\u00e2u \u0111\u00f3 tr\u1edf th\u00e0nh \u0111\u1ed1i x\u1ee9ng.</li> <li>\u0110\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(L[1,n]\\) v\u1edbi \\(n\\) l\u00e0 s\u1ed1 k\u00ed t\u1ef1 c\u1ee7a \\(S\\). Ta c\u00f3 c\u00f4ng th\u1ee9c sau \u0111\u1ec3 t\u00ednh \\(L[i,j]\\):</li> <li>\\(L(i,i)=0\\).</li> <li>\\(L(i,j)=L(i+1,j-1)\\) n\u1ebfu \\(S_i=S_j\\)</li> <li>\\(L(i,j)=max(L(i+1,j), L(i,j-1))\\) n\u1ebfu \\(S_i \\ne S_j\\)</li> </ul> <p>B\u1ea1n \u0111\u1ecdc d\u1ec5 d\u00e0ng c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng c\u00f4ng th\u1ee9c \u0111\u00f3. Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t tr\u1ef1c ti\u1ebfp c\u00f4ng th\u1ee9c \u0111\u00f3 b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec7 quy c\u00f3 nh\u1edb. Tuy nhi\u00ean khi \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(O(n^2)\\). C\u00f3 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t ti\u1ebft ki\u1ec7m h\u01a1n, c\u00f3 th\u1ec3 tham kh\u1ea3o \u1edf b\u00e0i vi\u1ebft c\u1ee7a Nguy\u1ec5n Ho\u00e0nh Ti\u1ebfn</p> <p>Ta c\u00f3 thu\u1eadt to\u00e1n \u0111\u01a1n gi\u1ea3n h\u01a1n nh\u01b0 sau:</p> <ul> <li>G\u1ecdi \\(P\\) l\u00e0 x\u00e2u \u0111\u1ea3o c\u1ee7a \\(S\\) v\u00e0 \\(T\\) l\u00e0 x\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a \\(S\\) v\u00e0 \\(P\\). Khi \u0111\u00f3 c\u00e1c k\u00ed t\u1ef1 c\u1ee7a \\(S\\) kh\u00f4ng thu\u1ed9c \\(T\\) c\u0169ng l\u00e0 c\u00e1c k\u00ed t\u1ef1 c\u1ea7n th\u00eam v\u00e0o \u0111\u1ec3 \\(S\\) tr\u1edf th\u00e0nh \u0111\u1ed1i x\u1ee9ng. \u0110\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n s\u1ebd l\u00e0 \\(n-k\\), v\u1edbi \\(k\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a \\(T\\).</li> <li>V\u00ed d\u1ee5: <code>S=edbabcd</code>, x\u00e2u \u0111\u1ea3o c\u1ee7a \\(S\\) l\u00e0 <code>P=dcbabde</code>. X\u00e2u con chung d\u00e0i nh\u1ea5t c\u1ee7a \\(S\\) v\u00e0 \\(P\\) l\u00e0 <code>T=dbabd</code>. Nh\u01b0 v\u1eady c\u1ea7n th\u00eam 2 k\u00ed t\u1ef1 l\u00e0 <code>e</code> v\u00e0 <code>c</code> v\u00e0o \u0111\u1ec3 \\(S\\) tr\u1edf th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng.</li> </ul>"},{"location":"algo/dp/basic-problems/#4-vali-a","title":"4. Vali (A)","text":""},{"location":"algo/dp/basic-problems/#41-mo-hinh","title":"4.1. M\u00f4 h\u00ecnh","text":"<p>Cho \\(n\\) v\u1eadt, v\u1eadt \\(i\\) n\u1eb7ng \\(A_i\\) v\u00e0 c\u00f3 gi\u00e1 tr\u1ecb \\(B_i\\). H\u00e3y ch\u1ecdn ra m\u1ed9t s\u1ed1 v\u1eadt \u0111\u1ec3 cho v\u00e0o bal\u00f4 sao cho t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(W\\) v\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb l\u00e0 l\u1edbn nh\u1ea5t. Ch\u00fa \u00fd r\u1eb1ng m\u1ed7i v\u1eadt c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ecdn nhi\u1ec1u l\u1ea7n.</p>"},{"location":"algo/dp/basic-problems/#42-cong-thuc","title":"4.2. C\u00f4ng th\u1ee9c","text":"<p>G\u1ecdi \\(L(i,j)\\) l\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t khi \u0111\u01b0\u1ee3c ch\u1ecdn \\(i\\) v\u1eadt t\u1eeb 1 \u0111\u1ebfn \\(i\\) cho v\u00e0o bal\u00f4 v\u1edbi t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(j\\). \\(L(n,W)\\) s\u1ebd l\u00e0 \u0111\u00e1p s\u1ed1 c\u1ee7a b\u00e0i to\u00e1n (l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 \u0111\u01b0\u1ee3c n\u1ebfu ch\u1ecdn \\(n\\) v\u1eadt v\u00e0 t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(W\\)).</p> <p>C\u00f4ng th\u1ee9c t\u00ednh \\(L(i,t)\\) nh\u01b0 sau:</p> <ul> <li>\\(L(i, 0) = 0\\)</li> <li>\\(L(0, t) = 0\\)</li> <li>\\(L(i,t) = L(i-1,t)\\) n\u1ebfu \\(t&lt;A_i\\)</li> <li>\\(L(i,t) = max(L(i-1,t),  L(i,t-A_i) + B_i)\\) n\u1ebfu \\(t \\ge A_i\\)</li> </ul> <p>Trong \u0111\u00f3: \\(L(i-1,t)\\) l\u00e0 gi\u00e1 tr\u1ecb c\u00f3 \u0111\u01b0\u1ee3c n\u1ebfu kh\u00f4ng \u0111\u01b0a v\u1eadt \\(i\\) v\u00e0o bal\u00f4, \\(L(i,t-A_i) + B_i\\)  l\u00e0 gi\u00e1 tr\u1ecb c\u00f3 \u0111\u01b0\u1ee3c n\u1ebfu ch\u1ecdn v\u1eadt \\(i\\).</p>"},{"location":"algo/dp/basic-problems/#43-cai-at","title":"4.3. C\u00e0i \u0111\u1eb7t","text":"<p>Ta c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t m\u1ea3ng 2 chi\u1ec1u \u0111\u1ec3 l\u01b0u b\u1ea3ng ph\u01b0\u01a1ng \u00e1n, tuy nhi\u00ean d\u1ef1a tr\u00ean nh\u1eadn x\u00e9t r\u1eb1ng \u0111\u1ec3 t\u00ednh d\u00f2ng \\(i\\) c\u1ee7a b\u1ea3ng ph\u01b0\u01a1ng \u00e1n ch\u1ec9 c\u1ea7n d\u00f2ng \\(i-1\\), ta ch\u1ec9 c\u1ea7n d\u00f9ng 2 m\u1ea3ng m\u1ed9t chi\u1ec1u \\(P\\) v\u00e0 \\(L\\) c\u00f3 ch\u1ec9 s\u1ed1 t\u1eeb 0 \u0111\u1ebfn \\(m\\) \u0111\u1ec3 l\u01b0u 2 d\u00f2ng \u0111\u00f3. \u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh con t\u00ednh b\u1ea3ng ph\u01b0\u01a1ng \u00e1n nh\u01b0 sau.</p> <pre><code>L[t] := 0; {v\u1edbi m\u1ecdi t}\nfor i := 1 to n do\n   begin\n         P:=L;\n         for t := 0 to m do\n             if t&lt;a[i] then L[t]:=P[t]\n             else L[t] := max(P[t],L[t-a[i]]+b[i]);\n   end;\n</code></pre> <p>N\u1ebfu \u0111\u1ec3 \u00fd k\u0129 b\u1ea1n s\u1ebd th\u1ea5y r\u1eb1ng \u0111o\u1ea1n tr\u00ecnh tr\u00ean ch\u1ec9 vi\u1ebft gi\u1ed1ng c\u00f4ng th\u1ee9c QH\u0110 ch\u1ee9 ch\u01b0a t\u1ed1i \u01b0u. Ch\u1eb3ng h\u1ea1n \u0111\u00e3 c\u00f3 l\u1ec7nh g\u00e1n <code>P:=L</code>, sau \u0111\u00f3 l\u1ea1i c\u00f3 g\u00e1n <code>L[t]:=P[t]</code> v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb <code>t&lt;a[i]</code> l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 t\u1ef1 c\u1ea3i ti\u1ebfn \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh t\u1ed1i \u01b0u h\u01a1n. \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(O(m)\\) v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O(m \\* n)\\).</p>"},{"location":"algo/dp/basic-problems/#44-mot-so-bai-toan-khac","title":"4.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-problems/#oi-tien","title":"\u0110\u1ed5i ti\u1ec1n","text":"<p>B\u00e0i to\u00e1n</p> <p>\u1ede \u0111\u1ea5t n\u01b0\u1edbc Omega ng\u01b0\u1eddi ta ch\u1ec9 ti\u00eau ti\u1ec1n xu. C\u00f3 \\(N\\) lo\u1ea1i ti\u1ec1n xu, lo\u1ea1i th\u1ee9 \\(i\\) c\u00f3 m\u1ec7nh gi\u00e1 l\u00e0 \\(A_i\\) \u0111\u1ed3ng. M\u1ed9t ng\u01b0\u1eddi kh\u00e1ch du l\u1ecbch \u0111\u1ebfn Omega du l\u1ecbch v\u1edbi s\u1ed1 ti\u1ec1n \\(M\\) \u0111\u1ed3ng. \u00d4ng ta mu\u1ed1n \u0111\u1ed5i s\u1ed1 ti\u1ec1n \u0111\u00f3 ra ti\u1ec1n xu Omega \u0111\u1ec3 ti\u1ec7n ti\u00eau d\u00f9ng. \u00d4ng ta c\u0169ng mu\u1ed1n s\u1ed1 \u0111\u1ed3ng ti\u1ec1n \u0111\u1ed5i \u0111\u01b0\u1ee3c l\u00e0 \u00edt nh\u1ea5t (cho t\u00fai ti\u1ec1n \u0111\u1ee1 n\u1eb7ng khi \u0111i \u0111\u00e2y \u0111i \u0111\u00f3). B\u1ea1n h\u00e3y gi\u00fap \u00f4ng ta t\u00ecm c\u00e1ch \u0111\u1ed5i ti\u1ec1n.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>B\u00e0i to\u00e1n n\u00e0y kh\u00e1 gi\u1ed1ng b\u00e0i to\u00e1n x\u1ebfp bal\u00f4 (\u201ckh\u1ed1i l\u01b0\u1ee3ng\u201d l\u00e0 m\u1ec7nh gi\u00e1, \u201cgi\u00e1 tr\u1ecb\u201d l\u00e0 1), ch\u1ec9 c\u00f3 m\u1ed9t thay \u0111\u1ed5i nh\u1ecf: t\u1ed5ng gi\u00e1 tr\u1ecb y\u00eau c\u1ea7u l\u00e0 nh\u1ecf nh\u1ea5t.</p> <p>Do \u0111\u00f3 ta c\u0169ng x\u00e2y d\u1ef1ng h\u00e0m QH\u0110 m\u1ed9t c\u00e1ch t\u01b0\u01a1ng t\u1ef1: G\u1ecdi \\(L[i,t]\\) l\u00e0 s\u1ed1 \u0111\u1ed3ng xu \u00edt nh\u1ea5t n\u1ebfu \u0111\u1ed5i \\(t\\) \u0111\u1ed3ng ra \\(i\\) lo\u1ea1i ti\u1ec1n xu (t\u1eeb 1 \u0111\u1ebfn \\(i\\)). C\u00f4ng th\u1ee9c t\u00ednh \\(L[i,t]\\) nh\u01b0 sau:</p> <ul> <li>\\(L[i,0]=0\\)</li> <li>\\(L[0,t]= \\inf\\) v\u1edbi \\(t&gt;0\\).</li> <li>\\(L[i,t]=L[i-1,t]\\) n\u1ebfu \\(t&lt;A[i]\\).</li> <li>\\(L[i,t]=min(L[i-1,t], L[i,t-A[i]]+1)\\) n\u1ebfu \\(t \\ge A_i\\).</li> </ul> <p>C\u00f4ng th\u1ee9c n\u00e0y kh\u00e1c c\u00f4ng th\u1ee9c c\u1ee7a b\u00e0i x\u1ebfp bal\u00f4 \u1edf ch\u1ed7: d\u00f9ng h\u00e0m min ch\u1ee9 kh\u00f4ng ph\u1ea3i h\u00e0m max (v\u00ec c\u1ea7n t\u00ecm c\u00e1ch ch\u1ecdn \u00edt h\u01a1n).</p>"},{"location":"algo/dp/basic-problems/#5-nhan-ma-tran","title":"5. Nh\u00e2n ma tr\u1eadn","text":""},{"location":"algo/dp/basic-problems/#51-mo-hinh","title":"5.1. M\u00f4 h\u00ecnh","text":"<p>Nh\u00e2n m\u1ed9t ma tr\u1eadn k\u00edch th\u01b0\u1edbc \\(m \\* n\\) v\u1edbi m\u1ed9t ma tr\u1eadn \\(n \\* p\\), s\u1ed1 ph\u00e9p nh\u00e2n ph\u1ea3i th\u1ef1c hi\u1ec7n l\u00e0 \\(m \\* n \\* p\\). M\u1eb7t kh\u00e1c ph\u00e9p nh\u00e2n c\u00e1c ma tr\u1eadn c\u00f3 t\u00ednh k\u1ebft h\u1ee3p, t\u1ee9c l\u00e0: \\((A \\* B) \\* C = A \\* (B \\* C)\\)</p> <p>Do \u0111\u00f3 khi t\u00ednh t\u00edch nhi\u1ec1u ma tr\u1eadn, ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n theo c\u00e1c tr\u00ecnh t\u1ef1 kh\u00e1c nhau, m\u1ed7i tr\u00ecnh t\u1ef1 t\u00ednh s\u1ebd quy\u1ebft \u0111\u1ecbnh s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n th\u1ef1c hi\u1ec7n.</p> <p>Cho \\(N\\) ma tr\u1eadn \\(A_1, A_2, ..., A_N\\), ma tr\u1eadn \\(A\\) c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 \\(d_{i-1} \\* d_i\\). H\u00e3y x\u00e1c \u0111\u1ecbnh tr\u00ecnh t\u1ef1 nh\u00e2n ma tr\u1eadn \\(A_1 \\* A_2 \\* ... \\* A_N\\) sao cho s\u1ed1 ph\u00e9p nh\u00e2n c\u1ea7n th\u1ef1c hi\u1ec7n l\u00e0 \u00edt nh\u1ea5t.</p>"},{"location":"algo/dp/basic-problems/#52-cong-thuc","title":"5.2. C\u00f4ng th\u1ee9c","text":"<p>G\u1ecdi \\(F(i,j)\\) l\u00e0 s\u1ed1 ph\u00e9p nh\u00e2n \u0111\u1ec3 t\u00ednh t\u00edch c\u00e1c ma tr\u1eadn t\u1eeb \\(A_i\\) \u0111\u1ebfn \\(A_j\\) \\((A_i \\* A_{i+1} \\* ... \\* A_j)\\).</p> <ul> <li>\\(F[i,i]=0\\).</li> <li>\\(F[i,i+1]=d_{i-1} \\* d_i \\* d_{i+1}\\)</li> <li>\\(F[i,j] = min(F[i,k]+F[k+1,j] + d_{i-1} \\* d_k \\* d_{j}\\) v\u1edbi \\(k=i+1,i+2,...,j-1\\)</li> </ul> <p>C\u00f4ng th\u1ee9c h\u01a1i ph\u1ee9c t\u1ea1p n\u00ean t\u00f4i xin gi\u1ea3i th\u00edch nh\u01b0 sau:</p> <ul> <li>\\(F[i,i]=0\\) l\u00e0 hi\u1ec3n nhi\u00ean.</li> <li>\\(F[i,i+1]\\) l\u00e0 s\u1ed1 ph\u00e9p nh\u00e2n khi nh\u00e2n \\(A_i\\) v\u00e0 \\(A_{i+1}\\). \\(A_i\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(d_{i-1} \\* d_i\\), \\(A_{i+1}\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(d_i \\* d_{i+1}\\), do \u0111\u00f3 \\(F[i,i+1]=d_{i-1} \\* d_i \\* d_{i+1}\\)</li> <li>V\u1edbi \\(j&gt;i+1\\) th\u00ec ta th\u1ea5y c\u00f3 th\u1ec3 t\u00ednh \\(A_i \\* A_{i+1} \\* ... \\* A_j\\) b\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t v\u1ecb tr\u00ed \\(k\\) n\u00e0o \u0111\u00f3 \u0111\u1ec3 \u0111\u1eb7t ngo\u1eb7c theo tr\u00ecnh t\u1ef1: \\(A_i \\* A_{i+1} \\* ... \\* A_j = (A_i..A_k) \\* (A_{k+1}..A_j)\\)</li> </ul> <p>Ma tr\u1eadn k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p nh\u00e2n \\((A_i..A_k)\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(d_{i-1} \\* d_k\\), ma tr\u1eadn k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p nh\u00e2n \\((A_{k+1}..A_j)\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(d_k \\* d_j\\). V\u1edbi c\u00e1ch \u0111\u1eb7t \u0111\u00f3 ta s\u1ebd m\u1ea5t \\(F[i,k]\\) ph\u00e9p nh\u00e2n \u0111\u1ec3 c\u00f3 k\u1ebft qu\u1ea3 trong d\u1ea5u ngo\u1eb7c th\u1ee9 nh\u1ea5t, m\u1ea5t th\u00eam \\(F[k+1,j]\\) ph\u00e9p nh\u00e2n \u0111\u1ec3 c\u00f3 k\u1ebft qu\u1ea3 trong d\u1ea5u ngo\u1eb7c th\u1ee9 hai, v\u00e0 cu\u1ed1i c\u00f9ng m\u1ea5t \\(d_{i-1} \\* d_k \\* d_j\\) \u0111\u1ec3 nh\u00e2n 2 ma tr\u1eadn k\u1ebft qu\u1ea3 \u0111\u00f3. T\u1eeb \u0111\u00f3 t\u1ed5ng s\u1ed1 ph\u00e9p nh\u00e2n c\u1ee7a c\u00e1ch \u0111\u1eb7t \u0111\u00f3 l\u00e0: \\(F[i,k] + F[k+1,j] + d_{i-1} \\* d_k \\* d_j\\).</p> <p>Ta ch\u1ecdn v\u1ecb tr\u00ed \\(k\\) cho s\u1ed1 ph\u00e9p nh\u00e2n \u00edt nh\u1ea5t.</p>"},{"location":"algo/dp/basic-problems/#53-cai-at","title":"5.3. C\u00e0i \u0111\u1eb7t","text":"<p>B\u1ea3ng ph\u01b0\u01a1ng \u00e1n l\u00e0 m\u1ed9t m\u1ea3ng 2 chi\u1ec1u \\(F\\) \u0111\u1ec3 l\u01b0u \\(F[i,j]\\). Ch\u00fa \u00fd khi c\u00e0i \u0111\u1eb7t l\u00e0 \u0111\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c \\(F[i,j]\\), ta ph\u1ea3i t\u00ednh \\(F[i,k]\\) v\u00e0 \\(F[k+1,j]\\) tr\u01b0\u1edbc. Ph\u01b0\u01a1ng ph\u00e1p \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 l\u00e0m \u0111i\u1ec1u \u0111\u00f3 l\u00e0 ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec7 quy c\u00f3 nh\u1edb.</p> <p>Tuy nhi\u00ean d\u1ef1a v\u00e0o nh\u1eadn x\u00e9t l\u00e0 trong c\u00f4ng th\u1ee9c QH\u0110: \\(j-i\\) l\u1edbn h\u01a1n \\(k-i\\) v\u00e0 \\(j-k\\), ta c\u00f3 th\u1ec3 t\u00ednh theo tr\u00ecnh t\u1ef1 kh\u00e1c: t\u00ednh c\u00e1c ph\u1ea7n t\u1eed \\(F[i,j]\\) v\u1edbi \\(j-i\\) t\u1eeb nh\u1ecf \u0111\u1ebfn l\u1edbn (kh\u00f4ng ph\u1ea3i l\u00e0 t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb \\(F[i,j]\\) v\u1edbi \\(i\\), \\(j\\) t\u1eeb nh\u1ecf \u0111\u1ebfn l\u1edbn nh\u01b0 v\u1eabn l\u00e0m). V\u1edbi c\u00e1ch \u0111\u00f3, khi t\u00ednh \u0111\u1ebfn \\(F[i,j]\\) th\u00ec ta \u0111\u00e3 c\u00f3 \\(F[i,k]\\) v\u00e0 \\(F[k+1,j]\\).</p> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh t\u00ednh b\u1ea3ng ph\u01b0\u01a1ng \u00e1n nh\u01b0 sau:</p> <pre><code>for i:=1 to n do\n  F[i,i]:=0;\n\nfor i:=1 to n-1 do\n  F[i,i+1] := d[i-1]*d[i]*d[i+1];\n\nfor m:=2 to n-1 do\n  begin\n    for i:=1 to n-m do\n      begin\n        j:=i+m;\n        F[i,j]:=oo;\n        for k:=i+1 to j-1 do\n          F[i,j]:=min(F[i,j], F[i,k]+F[k+1,j]+d[i-1]*d[k]*d[j]);\n      end;\nend;\n</code></pre> <p>V\u1edbi c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(O(n^2)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(O(n^3)\\).</p>"},{"location":"algo/dp/basic-problems/#54-mot-so-bai-toan-khac","title":"5.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-problems/#chia-a-giac","title":"Chia \u0111a gi\u00e1c","text":"<p>B\u00e0i to\u00e1n</p> <p>Cho m\u1ed9t \u0111a gi\u00e1c l\u1ed3i \\(N\\) \u0111\u1ec9nh. B\u1eb1ng c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o kh\u00f4ng c\u1eaft nhau, ta c\u00f3 th\u1ec3 chia \u0111a gi\u00e1c th\u00e0nh \\(N-2\\) tam gi\u00e1c. H\u00e3y x\u00e1c \u0111\u1ecbnh c\u00e1ch chia c\u00f3 t\u1ed5ng c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o ng\u1eafn nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n ta coi m\u1ecdi \u0111o\u1ea1n th\u1eb3ng n\u1ed1i 2 \u0111\u1ec9nh \u0111\u1ec1u l\u00e0 \u201c\u0111\u01b0\u1eddng ch\u00e9o\u201d (n\u1ebfu n\u1ed1i 2 \u0111\u1ec9nh tr\u00f9ng nhau ho\u1eb7c 2 \u0111\u1ec9nh li\u00ean ti\u1ebfp th\u00ec c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng 0).</p> <p>G\u1ecdi \\(F(i,j)\\) l\u00e0 t\u1ed5ng \u0111\u1ed9 d\u00e0i c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o khi chia \u0111a gi\u00e1c g\u1ed3m c\u00e1c \u0111\u1ec9nh t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) th\u00e0nh c\u00e1c tam gi\u00e1c. N\u1ebfu \\(j&lt;i+3\\) th\u00ec \u0111a gi\u00e1c \u0111\u00f3 c\u00f3 \u00edt h\u01a1n 4 \u0111\u1ec9nh, kh\u00f4ng c\u1ea7n ph\u1ea3i chia n\u00ean \\(F(i,j)=0\\). Ng\u01b0\u1ee3c l\u1ea1i ta x\u00e9t c\u00e1ch chia \u0111a gi\u00e1c \u0111\u00f3 b\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t \u0111\u1ec9nh \\(k\\) n\u1eb1m gi\u1eefa \\(i\\), \\(j\\) v\u00e0 n\u1ed1i \\(i\\), \\(j\\) v\u1edbi \\(k\\). Khi \u0111\u00f3 \\(F[i,j]=F[i,k]+F[k,j]+d[i,k]+d[k,j]\\) v\u1edbi \\(d(i,k)\\) l\u00e0 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng ch\u00e9o \\((i,k)\\).</p> <p>T\u00f3m l\u1ea1i c\u00f4ng th\u1ee9c QH\u0110 nh\u01b0 sau:</p> <ul> <li>\\(F[i,j]=0\\) v\u1edbi \\(j&lt;i+3\\).</li> <li>\\(F[i,j]=min(F[i,k]+F[k,j]+d[i,k]+d[k,j])\\) v\u1edbi \\(k=i+1,...j-1\\). \\(F[1,n]\\) l\u00e0 t\u1ed5ng \u0111\u01b0\u1eddng ch\u00e9o c\u1ee7a c\u00e1ch chia t\u1ed1i \u01b0u.</li> </ul>"},{"location":"algo/dp/basic-problems/#bieu-thuc-so-hoc-ioi-1999","title":"Bi\u1ec3u th\u1ee9c s\u1ed1 h\u1ecdc (IOI 1999)","text":"<p>B\u00e0i to\u00e1n</p> <p>Cho bi\u1ec3u th\u1ee9c \\(A_1 \\cdot A_2 \\cdot ... \\cdot A_N\\), trong \u0111\u00f3 \\(A_i\\) l\u00e0 c\u00e1c s\u1ed1 th\u1ef1c kh\u00f4ng \u00e2m v\u00e0 \\(\\cdot\\) l\u00e0 m\u1ed9t ph\u00e9p to\u00e1n <code>+</code> ho\u1eb7c <code>*</code> cho tr\u01b0\u1edbc. H\u00e3y \u0111\u1eb7t c\u00e1c d\u1ea5u ngo\u1eb7c \u0111\u1ec3 bi\u1ec3u th\u1ee9c thu \u0111\u01b0\u1ee3c c\u00f3 k\u1ebft qu\u1ea3 l\u1edbn nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>G\u1ecdi \\(F[i,j]\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3 c\u1ee7a bi\u1ec3u th\u1ee9c \\(A_i \\cdot A_{i+1} \\cdot ... \\cdot A_j\\). D\u1ec5 th\u1ea5y n\u1ebfu \\(i=j\\) th\u00ec \\(F[i,j]=A_i\\), n\u1ebfu \\(j=i+1\\) th\u00ec \\(F[i,j]=A_i \\cdot A_j\\). N\u1ebfu \\(j&gt;i+1\\) th\u00ec c\u00f3 th\u1ec3 t\u00ednh bi\u1ec3u th\u1ee9c \\(A_i \\cdot A_{i+1} \\cdot ... \\cdot A_j\\) b\u1eb1ng c\u00e1ch chia th\u00e0nh 2 nh\u00f3m: \\((A_i \\cdot A_{i+1} \\cdot ... \\cdot A_k) \\cdot (A_{k+1} \\cdot ... \\cdot A_j)\\), Khi \u0111\u00f3 \\(F[i,j]=F[i,k] \\cdot F[k+1,j]\\).</p> <p>T\u00f3m l\u1ea1i, c\u00f4ng th\u1ee9c QH\u0110 l\u00e0:</p> <ul> <li>\\(F[i,i]=A_i\\)</li> <li>\\(F[i,i+1]=A_i \\cdot A_{i+1}\\)</li> <li>\\(F[i,j]=max(F[i,k] \\cdot F[k+1,j])\\) v\u1edbi \\(k=i+1,i+2,..j-1\\).</li> </ul> <p>(Ch\u00fa l\u00e0 l\u00e0 c\u00e1c h\u1ea1ng t\u1eed c\u1ee7a d\u00e3y \u0111\u1ec1u kh\u00f4ng \u00e2m v\u00e0 c\u00e1c ph\u00e9p to\u00e1n l\u00e0 <code>+</code> ho\u1eb7c <code>*</code> n\u00ean \\(F[i,k]\\) v\u00e0 \\(F[k+1,j]\\) \u0111\u1ea1t max th\u00ec \\(F[i,k] \\cdot F[k+1,j]\\) c\u0169ng \u0111\u1ea1t max).</p>"},{"location":"algo/dp/basic-problems/#6-ghep-cap","title":"6. Gh\u00e9p c\u1eb7p","text":""},{"location":"algo/dp/basic-problems/#61-mo-hinh","title":"6.1. M\u00f4 h\u00ecnh","text":"<p>C\u00f3 \\(n\\) l\u1ecd hoa s\u1eafp th\u1eb3ng h\u00e0ng v\u00e0 \\(k\\) b\u00f3 hoa \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 th\u1ee9 t\u1ef1 t\u1eeb nh\u1ecf \u0111\u1ebfn l\u1edbn. C\u1ea7n c\u1eafm \\(k\\) b\u00f3 hoa tr\u00ean v\u00e0o \\(n\\) l\u1ecd sao cho hoa c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 nh\u1ecf ph\u1ea3i \u0111\u1ee9ng tr\u01b0\u1edbc hoa c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 l\u1edbn. Gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 t\u01b0\u01a1ng \u1ee9ng khi c\u1eafm hoa \\(i\\) v\u00e0o l\u1ecd th\u1ee9 \\(j\\) l\u00e0 \\(v(i,j)\\). H\u00e3y t\u00ecm 1 c\u00e1ch c\u1eafm sao cho t\u1ed5ng gi\u00e1 tr\u1ecb th\u1eabm m\u1ef9 l\u00e0 l\u1edbn nh\u1ea5t. Ch\u00fa \u00fd r\u1eb1ng m\u1ed7i b\u00f3 hoa ch\u1ec9 \u0111\u01b0\u1ee3c c\u1eafm v\u00e0o 1 l\u1ecd v\u00e0 m\u1ed7i l\u1ecd c\u0169ng ch\u1ec9 c\u1eafm \u0111\u01b0\u1ee3c 1 b\u00f3 hoa.</p>"},{"location":"algo/dp/basic-problems/#62-cong-thuc","title":"6.2. C\u00f4ng th\u1ee9c","text":"<p>Nh\u1eadn x\u00e9t r\u1eb1ng b\u00e0i to\u00e1n n\u00eau tr\u00ean l\u00e0 m\u1ed9t b\u00e0i to\u00e1n gh\u00e9p c\u1eb7p c\u00f3 y\u00eau c\u1ea7u v\u1ec1 th\u1ee9 t\u1ef1 n\u00ean ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p QH\u0110.</p> <p>H\u00e0m m\u1ee5c ti\u00eau: \\(f\\): t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 c\u1ee7a c\u00e1ch c\u1eafm.</p> <p>Gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1c hoa v\u00e0 c\u00e1c l\u1ecd \u0111ang \u0111\u01b0\u1ee3c x\u00e9t n\u00ean ta s\u1ebd d\u00f9ng m\u1ea3ng 2 chi\u1ec1u \u0111\u1ec3 l\u01b0u b\u1ea3ng ph\u01b0\u01a1ng \u00e1n.</p> <p>\\(L(i,j)\\): t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 l\u1edbn nh\u1ea5t khi x\u00e9t \u0111\u1ebfn hoa \\(i\\) v\u00e0 l\u1ecd \\(j\\). Khi t\u00ednh \\(L(i,j)\\) hoa \u0111ang x\u00e9t s\u1ebd l\u00e0 hoa \\(i\\) v\u00e0 l\u1ecd \\(j\\).</p> <ul> <li>N\u1ebfu \\(i = j\\). Ch\u1ec9 c\u00f3 m\u1ed9t c\u00e1ch c\u1eafm \\(L[i,i]:= V[1,1]+V[2,2]+...+V[i,i]\\)</li> <li>N\u1ebfu \\(i&gt;j\\). Kh\u00f4ng c\u00f3 c\u00e1ch c\u1eafm h\u1ee3p l\u00fd</li> <li>N\u1ebfu \\(i&lt;j\\). C\u00f3 2 tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra:</li> <li>C\u1eafm hoa \\(i\\) v\u00e0o l\u1ecd \\(j\\). T\u1ed5ng gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 l\u00e0 \\(L[i-1,j-1]+V(i,j)\\). (B\u1eb1ng t\u1ed5ng gi\u00e1 tr\u1ecb tr\u01b0\u1edbc khi c\u1eafm c\u1ed9ng v\u1edbi gi\u00e1 tr\u1ecb th\u1ea9m m\u1ef9 khi c\u1eafm hoa \\(i\\) v\u00e0o l\u1ecd \\(j\\))</li> <li>Kh\u00f4ng c\u1eafm hoa \\(i\\) v\u00e0o l\u1ecd \\(j\\) (c\u00f3 th\u1ec3 c\u1eafm v\u00e0o l\u1ecd tr\u01b0\u1edbc \\(j\\)), gi\u00e1 tr\u1ecb th\u1eabm m\u1ef9 c\u1ee7a c\u00e1ch c\u1eafm l\u00e0 nh\u01b0 c\u0169: \\(L[i,j-1]\\)</li> </ul>"},{"location":"algo/dp/basic-problems/#63-cai-at","title":"6.3. C\u00e0i \u0111\u1eb7t","text":"<pre><code>L[i,j]:= -maxint;\n\nFor i:=1 to k do\n    For j:=i to n do\n         If i = j then L[i,j]:=sum(i)\n         else if i&lt;j then L[i,j]:=max(L[i-1,j-1]+v[i,j],L[i,j-1]);\n</code></pre>"},{"location":"algo/dp/basic-problems/#64-mot-so-bai-toan-khac","title":"6.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-problems/#cau-lac-bo","title":"C\u00e2u l\u1ea1c b\u1ed9","text":"<p>B\u00e0i to\u00e1n</p> <p>C\u00f3 \\(n\\) ph\u00f2ng h\u1ecdc chuy\u00ean \u0111\u1ec1 v\u00e0 \\(k\\) nh\u00f3m h\u1ecdc \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 th\u1ee9 t\u1ef1 t\u1eeb nh\u1ecf \u0111\u1ebfn l\u1edbn. C\u1ea7n x\u1ebfp \\(k\\) nh\u00f3m tr\u00ean v\u00e0o \\(n\\) ph\u00f2ng h\u1ecdc sao cho nh\u00f3m c\u00f3 s\u1ed1 hi\u1ec7u nh\u1ecf \u0111\u01b0\u1ee3c x\u1ebfp v\u00e0o ph\u00f2ng c\u00f3 s\u1ed1 hi\u1ec7u nh\u1ecf, nh\u00f3m c\u00f3 s\u1ed1 hi\u1ec7u l\u1edbn ph\u1ea3i \u0111\u01b0\u1ee3c x\u1ebfp v\u00e0o ph\u00f2ng c\u00f3 s\u1ed1 hi\u1ec7u l\u1edbn. V\u1edbi m\u1ed7i ph\u00f2ng c\u00f3 ch\u1ee9 h\u1ecdc sinh, c\u00e1c gh\u1ebf th\u1eeba ph\u1ea3i \u0111\u01b0\u1ee3c chuy\u1ec3n ra h\u1ebft, n\u1ebfu thi\u1ebfu gh\u1ebf th\u00ec l\u1ea5y v\u00e0o cho \u0111\u1ee7 gh\u1ebf. Bi\u1ebft ph\u00f2ng \\(i\\) c\u00f3 \\(A_i\\) gh\u1ebf, nh\u00f3m \\(j\\) c\u00f3 \\(B_j\\) h\u1ecdc sinh. H\u00e3y ch\u1ecdn 1 ph\u01b0\u01a1ng \u00e1n b\u1ed1 tr\u00ed sao cho t\u1ed5ng s\u1ed1 l\u1ea7n chuy\u1ec3n gh\u1ebf ra v\u00e0 v\u00e0o l\u00e0 \u00edt nh\u1ea5t.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>Khi x\u1ebfp nh\u00f3m \\(i\\) v\u00e0o ph\u00f2ng \\(j\\) th\u00ec s\u1ed1 l\u1ea7n chuy\u1ec3n gh\u1ebf ch\u00ednh l\u00e0 \u0111\u1ed9 ch\u00eanh l\u1ec7ch gi\u1eefa s\u1ed1 gh\u1ebf trong ph\u00f2ng \\(i\\) v\u00e0 s\u1ed1 h\u1ecdc sinh trong nh\u00f3m. \u0110\u1eb7t \\(V[i,j]:=\\|A_i - B_j\\|\\)</p>"},{"location":"algo/dp/basic-problems/#mua-giay-e-qg-bang-b-nam-2003","title":"Mua gi\u00e0y (\u0110\u1ec1 QG b\u1ea3ng B n\u0103m 2003)","text":"<p>B\u00e0i to\u00e1n</p> <p>Trong hi\u1ec7u c\u00f3 \\(n\\) \u0111\u00f4i gi\u00e0y, \u0111\u00f4i gi\u00e0y \\(i\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\(H_i\\). C\u00f3 \\(k\\) ng\u01b0\u1eddi c\u1ea7n mua gi\u00e0y, ng\u01b0\u1eddi \\(i\\) c\u1ea7n mua \u0111\u00f4i gi\u00e0y k\u00edch th\u01b0\u1edbc \\(S_i\\). Khi ng\u01b0\u1eddi \\(i\\) ch\u1ecdn mua \u0111\u00f4i gi\u00e0y \\(j\\) th\u00ec \u0111\u1ed9 l\u1ec7ch s\u1ebd l\u00e0 \\(\\|H_i-S_j\\|\\). H\u00e3y t\u00ecm c\u00e1ch ch\u1ecdn mua gi\u00e0y cho \\(k\\) ng\u01b0\u1eddi tr\u00ean sao cho t\u1ed5ng \u0111\u1ed9 l\u1ec7ch l\u00e0 \u00edt nh\u1ea5t. Bi\u1ebft r\u1eb1ng m\u1ed7i ng\u01b0\u1eddi ch\u1ec9 mua 1 \u0111\u00f4i gi\u00e0y v\u00e0 1 \u0111\u00f4i gi\u00e0y c\u0169ng ch\u1ec9 c\u00f3 m\u1ed9t ng\u01b0\u1eddi mua.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>L\u1eadp c\u00f4ng th\u1ee9c gi\u1ea3i nh\u01b0 b\u00e0i C\u00e2u l\u1ea1c b\u1ed9. Ch\u00fa \u00fd ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a b\u1ed5 \u0111\u1ec1 heuristic sau: Cho 2 d\u00e3y t\u0103ng d\u1ea7n c\u00e1c s\u1ed1 d\u01b0\u01a1ng \\(A_1, A_2, ..., A_N\\), \\(B_1, B_2, ..., B_N\\). G\u1ecdi \\(C_1, C_2, ..., C_N\\) l\u00e0 m\u1ed9t ho\u00e1n v\u1ecb b\u1ea5t k\u1ef3 c\u1ee7a d\u00e3y \\(B\\). Khi \u0111\u00f3: \\(\\|A_1-B_1\\| + \\|A_2-B_2\\| + ... + \\|A_N-B_N\\| \\le \\|A_1-C_1\\| + \\|A_2 - C_2\\| + ... + \\|A_N-C_N\\|\\)</p>"},{"location":"algo/dp/basic-problems/#7-di-chuyen","title":"7. Di chuy\u1ec3n","text":""},{"location":"algo/dp/basic-problems/#71-mo-hinh","title":"7.1. M\u00f4 h\u00ecnh","text":"<p>Cho b\u1ea3ng \\(A\\) g\u1ed3m \\(M \\* N\\) \u00f4. T\u1eeb \u00f4 \\((i,j)\\) c\u00f3 th\u1ec3 di chuy\u1ec3n sang 3 \u00f4 \\((i+1,j)\\), \\((i+1,j-1)\\) v\u00e0 \\((i+1,j+1)\\). H\u00e3y x\u00e1c \u0111\u1ecbnh m\u1ed9t l\u1ed9 tr\u00ecnh \u0111i t\u1eeb h\u00e0ng 1 \u0111\u1ebfn h\u00e0ng \\(M\\) sao cho t\u1ed5ng c\u00e1c \u00f4 \u0111i qua l\u00e0 l\u1edbn nh\u1ea5t.</p>"},{"location":"algo/dp/basic-problems/#72-cong-thuc","title":"7.2. C\u00f4ng th\u1ee9c","text":"<p>G\u1ecdi \\(F(i,j)\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 \u0111\u01b0\u1ee3c khi di chuy\u1ec3n \u0111\u1ebfn \u00f4 \\((i,j)\\). C\u00f3 3 \u00f4 c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn \u00f4 \\((i,j)\\) l\u00e0 \\((i-1,j)\\), \\((i-1,j-1)\\) v\u00e0 \\((i-1,j+1)\\). Do \u0111\u00f3 ta c\u00f3 c\u00f4ng th\u1ee9c QH\u0110 nh\u01b0 sau:</p> <ul> <li>\\(F[1,j]=A[1,j]\\)</li> <li>\\(F[i,j]=max(F[i-1,j],F([i-1,j-1],F[i-1,j+1])+A[i,j]\\) v\u1edbi \\(i&gt;1\\)</li> </ul>"},{"location":"algo/dp/basic-problems/#73-cai-at","title":"7.3. C\u00e0i \u0111\u1eb7t","text":"<p>B\u1ea3ng ph\u01b0\u01a1ng \u00e1n l\u00e0 b\u1ea3ng 2 chi\u1ec1u \\(F[0..m,0..n]\\). (T\u1ea5t c\u1ea3 c\u00e1c \u00f4 tr\u00ean bi\u00ean \u0111\u1ec1u cho gi\u00e1 tr\u1ecb b\u1eb1ng 0).</p> <p>Qu\u00e1 tr\u00ecnh t\u00ednh nh\u01b0 sau:</p> <pre><code>for i:=1 to m do\n     for j := 1 to n do\n          F[i,j]=max(F[i-1,j],F[i-1,j-1],F[i-1,j+1]]+A[i,j]);\n</code></pre> <p>C\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y cho \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb v\u00e0 th\u1eddi gian \u0111\u1ec1u l\u00e0 \\(O(n^2)\\). Ta c\u00f3 th\u1ec3 ti\u1ebft ki\u1ec7m kh\u00f4ng gian nh\u1edb b\u1eb1ng c\u00e1ch t\u00ednh tr\u1ef1c ti\u1ebfp tr\u00ean m\u1ea3ng \\(A\\).</p>"},{"location":"algo/dp/basic-problems/#74-mot-so-bai-toan-khac","title":"7.4. M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c","text":""},{"location":"algo/dp/basic-problems/#tam-giac-ioi-1994","title":"Tam gi\u00e1c (IOI 1994)","text":"<p>B\u00e0i to\u00e1n</p> <p>Cho m\u1ed9t tam gi\u00e1c g\u1ed3m c\u00e1c s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m. H\u00e3y t\u00ednh t\u1ed5ng l\u1edbn nh\u1ea5t c\u00e1c s\u1ed1 tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh tam gi\u00e1c xu\u1ed1ng m\u1ed9t \u0111i\u1ec3m n\u00e0o \u0111\u00f3 \u1edf \u0111\u00e1y tam gi\u00e1c n\u00e0o \u0111\u00f3. T\u1ea1i m\u1ed7i \u00f4 ta ch\u1ec9 c\u00f3 \u0111i th\u1eb3ng xu\u1ed1ng, sang \u00f4 b\u00ean tr\u00e1i ho\u1eb7c b\u00ean ph\u1ea3i.</p> <p>H\u01b0\u1edbng d\u1eabn</p> <p>M\u00f4 t\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a tam gi\u00e1c s\u1ed1 nh\u01b0 m\u1ed9t ma tr\u1eadn, \\(A[i,j]\\) l\u00e0 ph\u1ea7n t\u1eed th\u1ee9 \\(j\\) tr\u00ean d\u00f2ng \\(i\\) (v\u1edbi \\(1 \\le i \\le N\\) v\u00e0 \\(1 \\le j \\le i\\)). C\u00f3 2 \u00f4 c\u00f3 th\u1ec3 di ch\u01b0y\u1ec3n \u0111\u1ebfn \u00f4 \\((i,j)\\) l\u00e0 \u00f4 \\((i-1,j-1)\\) v\u00e0 \u00f4 \\((i-1,j)\\). G\u1ecdi \\(F(i,j)\\) l\u00e0 t\u1ed5ng l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3 khi \u0111i \u0111\u1ebfn \u00f4 \\((i,j)\\) ta c\u00f3:</p> <ul> <li>\\(F[1,1]=A[1,1]\\)</li> <li>\\(F[i,1]=F[i-1,1]+A[i,1]\\)</li> <li>\\(F[i,j]=max( F[i-1,j-1],F[i-1,j] ) + A[i,j]\\)</li> </ul>"},{"location":"algo/dp/palindrome-problems/","title":"M\u1ed9t v\u00e0i b\u00e0i t\u1eadp v\u1ec1 Palindrome","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n Ho\u00e0nh Ti\u1ebfn</p> <p>Palindrome hay c\u00f2n g\u1ecdi l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng, x\u00e2u \u0111\u1ed1i g\u01b0\u01a1ng l\u00e0 t\u00ean g\u1ecdi c\u1ee7a nh\u1eefng x\u00e2u k\u00ed t\u1ef1 m\u00e0 khi vi\u1ebft t\u1eeb ph\u1ea3i qua tr\u00e1i hay t\u1eeb tr\u00e1i qua ph\u1ea3i th\u00ec x\u00e2u \u0111\u00f3 kh\u00f4ng thay \u0111\u1ed5i. VD: MADAM, IOI,... Nh\u1edd t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t \u0111\u00f3 m\u00e0 c\u00f3 kh\u00e1 nhi\u1ec1u b\u00e0i t\u1eadp c\u00f3 li\u00ean quan \u0111\u1ebfn Palindrome, ph\u1ea7n l\u1edbn trong ch\u00fang th\u01b0\u1eddng \u0111i k\u00e8m v\u1edbi QH\u0110. T\u00f4i xin gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n m\u1ed9t v\u00e0i b\u00e0i t\u1eadp nh\u01b0 v\u1eady.</p>"},{"location":"algo/dp/palindrome-problems/#bai-1-kiem-tra-palindrome","title":"B\u00e0i 1: Ki\u1ec3m tra Palindrome","text":"<p>B\u00e0i to\u00e1n: Cho 1 x\u00e2u. Ki\u1ec3m tra n\u00f3 c\u00f3 ph\u1ea3i l\u00e0 Palindrome hay kh\u00f4ng?</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i c\u01a1 b\u1ea3n, nh\u01b0ng quan tr\u1ecdng v\u00ec n\u00f3 \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u0111\u1ebfn trong nhi\u1ec1u b\u00e0i t\u1eadp kh\u00e1c. C\u00e1ch l\u00e0m t\u1ed1t nh\u1ea5t l\u00e0 duy\u1ec7t \u0111\u01a1n thu\u1ea7n m\u1ea5t \\(O(N)\\).</p> <pre><code>function is_palindrome(s: string): boolean;\n\nvar i, n : integer;\n\nbegin\n      n := length(s);\n      for i := 1 to (n div 2) do\n           if s[i] &lt;&gt; s[n+1-i] then exit(false);\n      exit(true); \nend;\n</code></pre> <p>M\u1ed9t \u0111o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh kh\u00e1c:</p> <pre><code>function is_palindrome(s : string) : boolean;\n\nvar i, j : integer;\n\nbegin\n     i := 1;\n     j := length(n);\n     while (i&lt;j) \n        begin\n               if s[i] &lt;&gt; s[j] then exit(false);  \n               inc(i);\n               dec(j);\n        end;\n     exit(true);\nend;\n</code></pre>"},{"location":"algo/dp/palindrome-problems/#bai-2-xau-con-palindrome-dai-nhat","title":"B\u00e0i 2: X\u00e2u con Palindrome d\u00e0i nh\u1ea5t","text":"<p>B\u00e0i to\u00e1n: Cho m\u1ed9t x\u00e2u S, \u0111\u1ed9 d\u00e0i kh\u00f4ng qu\u00e1 1000 k\u00ed t\u1ef1. T\u00ecm palindrome d\u00e0i nh\u1ea5t l\u00e0 x\u00e2u con c\u1ee7a S (X\u00e2u con l\u00e0 m\u1ed9t d\u00e3y c\u00e1c k\u00ed t\u1ef1 li\u00ean ti\u1ebfp).</p> <p>\u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t b\u00e0i c\u01a1 b\u1ea3n v\u1edbi nhi\u1ec1u c\u00e1ch l\u00e0m.</p>"},{"location":"algo/dp/palindrome-problems/#cach-1-qh","title":"C\u00e1ch 1: QH\u0110","text":"<p>D\u00f9ng m\u1ea3ng <code>F[i, j]</code> c\u00f3 \u00fd ngh\u0129a: <code>F[i, j] = true/false</code> n\u1ebfu \u0111o\u1ea1n g\u1ed3m c\u00e1c k\u00ed t\u1ef1 t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) c\u1ee7a \\(S\\) c\u00f3/kh\u00f4ng l\u00e0 palindrome.</p> <p>Ta c\u00f3 c\u00f4ng th\u1ee9c l\u00e0:</p> <ul> <li><code>F[i, i] = True</code>: x\u00e2u 1 k\u00fd t\u1ef1 lu\u00f4n \u0111\u1ed1i x\u1ee9ng.</li> <li><code>F[i, j] = F[i+1, j-1]</code> n\u1ebfu \\(S_i = S_j\\).</li> <li><code>F[i, j] = False</code> n\u1ebfu \\(S_i \\ne S_j\\).</li> </ul> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <pre><code>FillChar( F, sizeof(F), false );\n\nfor i := 1 to n do\n    F[i, i] := True;\n\nfor i := 1 to n-1 do\n    F[i+1, i] := True;\n\n\nfor k := 1 to (n-1) do\n    for i := 1 to (n-k) do\n        begin\n              j := i + k;\n              F[i, j] := ( F[i+1, j-1] ) and (s[i] = s[j] );\n        end;\n</code></pre> <p>K\u1ebft qu\u1ea3 l\u00e0: \\(Max(j-i+1) \\le j\\) th\u1ecfa \\(F[i,j] = True\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(N^2)\\).</p> <p>Ch\u00fa \u00fd: V\u1edbi \\(N\\) l\u1edbn, ta ph\u1ea3i thay m\u1ea3ng 2 chi\u1ec1u \\(F\\) b\u1eb1ng 3 m\u1ea3ng 1 chi\u1ec1u v\u00e0 d\u00f9ng th\u00eam bi\u1ebfn max l\u01b0u gi\u00e1 tr\u1ecb t\u1ed1i \u01b0u.</p>"},{"location":"algo/dp/palindrome-problems/#cach-2-duyet-co-can","title":"C\u00e1ch 2: Duy\u1ec7t c\u00f3 c\u1eadn","text":"<p>Ta x\u00e9t t\u1eebng v\u1ecb tr\u00ed \\(i\\):</p> <ul> <li>Xem \\(S_i\\) c\u00f3 ph\u1ea3i l\u00e0 t\u00e2m c\u1ee7a Palindrome c\u00f3 l\u1ebb k\u00ed t\u1ef1 kh\u00f4ng? (v\u00ed d\u1ee5 Palindrome MADAM c\u00f3 t\u00e2m l\u00e0 k\u00ed t\u1ef1 D)</li> <li>Xem \\(S_i\\) v\u00e0 \\(S_{i+1}\\) c\u00f3 ph\u1ea3i l\u00e0 t\u00e2m c\u1ee7a Palindrome c\u00f3 ch\u1eb5n k\u00ed t\u1ef1 kh\u00f4ng? (v\u00ed d\u1ee5 Palindrome ABBA c\u00f3 t\u00e2m l\u00e0 2 k\u00ed t\u1ef1 BB)</li> <li>V\u1edbi m\u1ed7i k\u00ed t\u1ef1 ta t\u00ecm palindrome d\u00e0i nh\u1ea5t nh\u1eadn n\u00f3 l\u00e0 t\u00e2m, c\u1eadp nh\u1eadp l\u1ea1i k\u1ebft qu\u1ea3 khi duy\u1ec7t. Ta duy\u1ec7t t\u1eeb gi\u1eefa ra \u0111\u1ec3 d\u00f9ng k\u1ebft qu\u1ea3 hi\u1ec7n t\u1ea1i l\u00e0m c\u1eadn.</li> </ul> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <pre><code>Procedure Lam;\nvar i, j : Longint ;\n\nprocedure try( first, last : Longint );\nvar dd : Longint;\nbegin\n      if first = last then\n          begin \n                  dd := 1; \n                  dec(first); \n                  inc(last); \n          end\n      else dd := 0;\n\n      repeat\n           if (first &lt; 1) or (last &gt; N) then break; \n           if s[i] = s[j] then\n               begin\n                     dd := dd + 2;\n                     first := first - 1;\n                     last := last + 1;\n               end\n           else break;\n      until false;\n      if max &lt; dd then max := dd;\nend;\n\nbegin\n      i := n div 2;\n      j := n div 2 + 1;\n      max := 1;\n      while (i &gt; max div 2) and (j &lt;= N-max div 2) do\n          begin\n                 if i &gt; max div 2 then\n                     begin\n                          try( i, i );\n                          try( i, i+1 );\n                     end;\n                 if j &lt;= N - max div 2 then\n                     begin\n                          try( j, j );\n                          try( j, j+1 );\n                     end;\n                 i := i - 1;\n                 j := j + 1;\n          end;\nend;\n</code></pre> <p>C\u00e1ch l\u00e0m n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p: \\(max \\* (N-max)\\). V\u00ec v\u1eady n\u00f3 ch\u1ea1y nhanh h\u01a1n c\u00e1ch QH\u0110 tr\u00ean, th\u1eddi gian ch\u1eadm nh\u1ea5t khi t\u1ea5t c\u1ea3 c\u00e1c k\u00fd t\u1ef1 gi\u1ed1ng nhau (khi \u0111\u00f3, \\(max = N/2\\)): c\u0169ng ch\u1ec9 m\u1ea5t \\(N^2/4\\) v\u00e0 nhanh g\u1ea5p 4 l\u1ea7n c\u00e1ch d\u00f9ng QH\u0110. Nh\u1edd v\u1eady, ch\u00fang ta bi\u1ebft l\u00e0: kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o QH\u0110 c\u0169ng ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c v\u1ec1 m\u1eb7t th\u1eddi gian v\u00e0 kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o duy\u1ec7t l\u00fac n\u00e0o c\u0169ng ch\u1eadm.</p> <p>B\u00e0i n\u00e0y c\u00f2n c\u00f3 m\u1ed9t c\u00e1ch NlogN n\u1eefa l\u00e0 d\u00f9ng Suffix Aray, th\u1eadm ch\u00ed c\u00f3 c\u00e1ch \\(O(N)\\) l\u00e0 s\u1eed d\u1ee5ng Suffix Tree v\u00e0 thu\u1eadt to\u00e1n t\u00ecm LCA. \u0110\u01b0\u01a1ng nhi\u00ean c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng, t\u00f4i s\u1ebd th\u1ea3o lu\u1eadn v\u1edbi c\u00e1c b\u1ea1n v\u00e0o m\u1ed9t d\u1ecbp kh\u00e1c.</p>"},{"location":"algo/dp/palindrome-problems/#bai-3-chia-mot-xau-thanh-it-nhat-cac-palindrome","title":"B\u00e0i 3: Chia m\u1ed9t x\u00e2u th\u00e0nh \u00edt nh\u1ea5t c\u00e1c Palindrome","text":"<p>B\u00e0i to\u00e1n: Cho 1 x\u00e2u \u0111\u1ed9 d\u00e0i kh\u00f4ng qu\u00e1 1000. Chia n\u00f3 th\u00e0nh \u00edt nh\u1ea5t c\u00e1c Palindrome.</p> <p>B\u00e0i n\u00e0y ph\u1ee9c t\u1ea1p h\u01a1n b\u00e0i tr\u00ean, c\u00e1ch l\u00e0m th\u00ec v\u1eabn l\u00e0 QH\u0110.</p> <ul> <li>G\u1ecdi \\(F(i)\\) l\u00e0 s\u1ed1 palindrome \u00edt nh\u1ea5t m\u00e0 \u0111o\u1ea1n \\(1..i\\) chia th\u00e0nh \u0111\u01b0\u1ee3c.</li> <li>Ta c\u00f3 c\u00f4ng th\u1ee9c: \\(F[i] = min(F[i], F[j] + 1)\\) v\u1edbi \\(j &lt; i\\) th\u1ecfa m\u00e3n: \u0111o\u1ea1n \\(j+1..i\\) l\u00e0 palindrome</li> </ul> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <pre><code>F[0] := INFINITY;\n\nfor i := 1 to n do\n       for j := i-1 downto 0 do\n             if (isPalindrome(j+1, i)) then F[i] := min(F[i], F[j]+1);\n</code></pre> <p>Hai v\u00f2ng for l\u1ed3ng nhau m\u1ea5t \\(O(N^2)\\), ph\u1ea7n ki\u1ec3m tra \u0111o\u1ea1n \\(j+1..i\\) l\u00e0 palindrome hay kh\u00f4ng m\u1ea5t O(N), v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(N^3)\\). S\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c kh\u1ea3 thi n\u1ebfu \\(N = 1000\\). \u0110\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n, ta s\u1eed d\u1ee5ng m\u1ea3ng \\(L[i, j]\\) c\u00f3 \u00fd ngh\u0129a t\u01b0\u01a1ng t\u1ef1 nh\u01b0 m\u1ea3ng \\(F[i, j]\\) \u1edf b\u00e0i 1. QH\u0110 l\u1eadp m\u1ea3ng \\(L[i, j]\\) m\u1ea5t \\(O(N^2)\\). T\u1ed5ng c\u1ed9ng l\u00e0 \\(O(N^2)\\) v\u00ec m\u1ed7i l\u1ea7n ki\u1ec3m tra ch\u1ec9 m\u1ea5t \\(O(1)\\).</p> <p>M\u1ed9t c\u00e1ch kh\u00e1c s\u1eed d\u1ee5ng \u00edt b\u1ed9 nh\u1edb h\u01a1n l\u00e0 d\u00f9ng hai m\u1ea3ng m\u1ed9t chi\u1ec1u \\(L_i\\) v\u00e0 \\(C_i\\) c\u00f3 \u00fd ngh\u0129a:</p> <ul> <li>\\(L_i\\) l\u00e0 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a palindrome \u0111\u1ed9 d\u00e0i l\u1ebb nh\u1eadn \\(S_i\\) l\u00e0m t\u00e2m</li> <li>\\(C_i\\) l\u00e0 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a palindrome \u0111\u1ed9 d\u00e0i ch\u1eb5n nh\u1eadn \\(S_i\\) v\u00e0 \\(S_{i+1}\\) l\u00e0m t\u00e2m. \\(L_i\\) v\u00e0 \\(C_i\\) c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch 2 b\u00e0i 2 trong \\(O(N^2)\\). Ph\u1ea7n ki\u1ec3m tra ta vi\u1ebft l\u1ea1i nh\u01b0 sau:</li> </ul> <pre><code>function is_palindrome(i, j : integer) : boolean;\n\nvar dd : integer;\n\nbegin\n      dd := j-i+1;\n      if odd (dd) then is_palindrome := (L[(i+j) div 2] &gt;= n)\n            else is_palindrome := (C[(i+j) div 2] &gt;= n)\nend;\n</code></pre> <p>V\u1eady thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n l\u00e0 \\(O(N^2)\\), chi ph\u00ed b\u1ed9 nh\u1edb l\u00e0 \\(O(N)\\).</p>"},{"location":"algo/dp/palindrome-problems/#bai-4-pal-ioicamp-marathon-2005-2006","title":"B\u00e0i 4: Pal - Ioicamp - Marathon 2005-2006","text":"<p>B\u00e0i to\u00e1n: Cho m\u1ed9t x\u00e2u, h\u1ecfi n\u00f3 c\u00f3 bao nhi\u00eau x\u00e2u con l\u00e0 palindrome; x\u00e2u con \u1edf \u0111\u00e2y g\u1ed3m c\u00e1c k\u00ed t\u1ef1 kh\u00f4ng c\u1ea7n li\u00ean ti\u1ebfp \u0111\u1ed9 d\u00e0i kh\u00f4ng qu\u00e1 120.</p> <p>V\u00ed d\u1ee5, x\u00e2u \"IOICAMP\" c\u00f3 9 x\u00e2u con l\u00e0 palindrome:</p> <pre><code>I\nO\nI\nC\nA\nM\nP\nII\nIOI\n</code></pre> <p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i t\u1eadp r\u1ea5t th\u00fa v\u1ecb. Ph\u01b0\u01a1ng ph\u00e1p l\u00e0 d\u00f9ng QH\u0110.</p> <ul> <li>G\u1ecdi \\(F[i, j]\\) l\u00e0 s\u1ed1 palindrome l\u00e0 x\u00e2u con c\u1ee7a \u0111o\u1ea1n \\([i, j]\\).</li> <li>Ta c\u00f3 c\u00f4ng th\u1ee9c :<ul> <li><code>F[i, i] = 1</code></li> <li><code>F[i, j] = F[i+1, j] + F[i, j-1] - F[i+1, j-1] + T</code></li> <li>N\u1ebfu \\(S_i = S_j\\) th\u00ec <code>T = F[i+1, j-1] + 1</code></li> <li>N\u1ebfu \\(S_i \\ne S_j\\) th\u00ec <code>T = 0</code></li> </ul> </li> </ul> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <pre><code>procedure lam;\n\nvar k, i, j : integer;\n\nbegin\n     n := length(s);\n     for i := 1 to n do\n         F[i, i] := 1;\n\n     for k := 1 to n-1 do\n         for i := 1 to n-k do\n             begin\n                    j := i+k;\n                    F[i, j] := F[i, j-1] + F[i+1, j] - F[i+1, j-1];\n                    if s[i] = s[j] then F[i, j] := F[i, j] + F[i+1, j-1] + 1;\n             end;\nend;\n</code></pre> <p>\u0110\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y nhanh h\u01a1n, ch\u00fang ta s\u1eeda l\u1ea1i \u0111o\u1ea1n m\u00e3 m\u1ed9t ch\u00fat nh\u01b0 sau:</p> <pre><code>procedure lam2;\n\nvar k, i, j : integer;\n\nbegin\n      n := length(s);\n      for i := 1 to n do\n          F[i, i] := 1;\n\n      for k := 1 to n do\n           for i := 1 to n-k do\n               begin\n                       j := i+k;\n                       F[i, j] := F[i, j-1] + F[i+1, j];\n\n                       if s[i] = s[j] then F[i, j] := F[i, j] + 1\n                       else F[i, j] := F[i, j] - F[i+1, j-1];\n               end;\nend;\n</code></pre> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean ch\u1ec9 c\u00f3 t\u00ednh m\u00f4 ph\u1ecfng, mu\u1ed1n ho\u00e0n thi\u1ec7n b\u1ea1n ph\u1ea3i c\u00e0i \u0111\u1eb7t c\u00e1c ph\u00e9p t\u00ednh c\u1ed9ng tr\u1eeb s\u1ed1 l\u1edbn v\u00ec k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 l\u00ean t\u1edbi \\(2^{n-1}\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(N^2)\\). V\u00ec v\u1eady, ch\u00fang ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 l\u00e0m v\u1edbi \\(N = 1000\\), kh\u00ed \u0111\u00f3 c\u1ea7n r\u00fat g\u1ecdn m\u1ea3ng \\(F\\) th\u00e0nh ba m\u1ea3ng m\u1ed9t chi\u1ec1u.</p>"},{"location":"algo/dp/palindrome-problems/#bai-5-palindrome-ioi-2000","title":"B\u00e0i 5: Palindrome - IOI 2000","text":"<p>B\u00e0i to\u00e1n: Cho m\u1ed9t x\u00e2u \u0111\u1ed9 d\u00e0i kh\u00f4ng qu\u00e1 500, h\u1ecfi ph\u1ea3i th\u00eam v\u00e0o n\u00f3 \u00edt nh\u1ea5t bao nhi\u00eau x\u00e2u k\u00ed t\u1ef1 \u0111\u1ec3 n\u00f3 tr\u1edf th\u00e0nh m\u1ed9t palindrome.</p> <p>B\u00e0i n\u00e0y c\u0169ng s\u1eed d\u1ee5ng QH\u0110: G\u1ecdi \\(F[i, j]\\) l\u00e0 s\u1ed1 ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u00edt nh\u1ea5t c\u1ea7n th\u00eam v\u00e0o \u0111o\u1ea1n \\([i, j]\\) \u0111\u1ec3 \u0111o\u1ea1n \\([i, j]\\) tr\u1edf th\u00e0nh palindrome.</p> <p>Ta c\u00f3 c\u00f4ng th\u1ee9c:</p> <ul> <li><code>F[i, i] = 0</code></li> <li>N\u1ebfu \\(S_i = S_j\\) th\u00ec <code>F[i, j] = F[i+1, j-1]</code></li> <li>N\u1ebfu \\(S_i \\ne S_j\\) th\u00ec <code>F[i, j] = Min( F[i, j-1], F[i+1, j] ) + 1</code></li> </ul> <p>B\u00e0i n\u00e0y \u0111\u01b0\u1ee3c ra t\u1eeb th\u1eddi n\u0103m 2000, khi \u0111\u00f3 b\u1ed9 nh\u1edb cho ph\u00e9p r\u1ea5t nh\u1ecf. Mu\u1ed1n ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y v\u1edbi \\(n = 500\\) th\u00ec c\u1ea7n r\u00fat g\u1ecdn \\(F\\) th\u00e0nh ba m\u1ea3ng m\u1ed9t chi\u1ec1u. Mu\u1ed1n truy v\u1ebft, b\u1ea1n ph\u1ea3i d\u00f9ng m\u1ea3ng bit ho\u1eb7c d\u00f9ng d\u1eef li\u1ec7u \u0111\u1ed9ng.</p>"},{"location":"algo/dp/palindrome-problems/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp:","text":"<ul> <li>SPOJ - PALIN</li> </ul>"},{"location":"algo/dp/thac-mac-ve-qhd/","title":"Ph\u00e2n t\u00edch v\u1ec1 QH\u0110 - Th\u1ea7y L\u00ea Minh Ho\u00e0ng","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>Khi c\u00f3 1 b\u1ea1n h\u1ecfi Quy ho\u1ea1ch \u0111\u1ed9ng tr\u1ea1ng th\u00e1i l\u00e0 g\u00ec trong b\u00e0i QBSELECT, th\u1ea7y L\u00ea Minh Ho\u00e0ng c\u00f3 tr\u1ea3 l\u1eddi nh\u01b0 sau:</p> <p>B\u1ea1n c\u1ee9 hi\u1ec3u quy ho\u1ea1ch \u0111\u1ed9ng l\u00e0 quy ho\u1ea1ch \u0111\u1ed9ng. \u0110\u1eebng quan t\u00e2m \u0111\u1ebfn c\u00e1ch th\u1ee9c l\u01b0u tr\u1eef (m\u1ed9t chi\u1ec1u, hai chi\u1ec1u, r\u1eddi r\u1ea1c...), c\u0169ng \u0111\u1eebng quan t\u00e2m t\u1edbi th\u1ee9 t\u1ef1 t\u00ednh to\u00e1n (qu\u00e9t ngang, b\u0103m ch\u00e9o, tr\u00ean c\u00e2y, tr\u00ean DAG, tr\u00ean \u0111\u01b0\u1eddng, d\u01b0\u1edbi ao...) th\u00ec s\u1ebd th\u1ea5y v\u1ea5n \u0111\u1ec1 l\u00e0 do d\u00e2n competitive programmers t\u1ef1 th\u00eam thu\u1eadt ng\u1eef m\u1edbi v\u00e0o, ch\u1ee9 b\u1ea3n ch\u1ea5t r\u1ea5t \u0111\u01a1n gi\u1ea3n:</p> <p>Dynamic Programming = Solving Recurrence + Memoization</p> <p>V\u00ed d\u1ee5 nh\u01b0 c\u00e1i b\u00e0i QBSELECT, ch\u1eafc b\u1ea1n ti\u1ebfp c\u1eadn v\u00e0 d\u1ef1ng c\u00f4ng th\u1ee9c truy h\u1ed3i nh\u01b0 th\u1ebf n\u00e0y: c\u00e1ch ch\u1ecdn trong c\u00e1i b\u1ea3ng g\u1ed3m \\(n\\) c\u1ed9t n\u00f3 bao h\u00e0m c\u00e1ch ch\u1ecdn trong \\(n - 1\\) c\u1ed9t. Suy ngh\u0129 t\u1ef1 nhi\u00ean l\u00e0 ta th\u1eed m\u1ecdi c\u00e1ch ch\u1ecdn trong c\u1ed9t cu\u1ed1i, v\u1edbi m\u1ed7i c\u00e1ch \u0111\u00f3 th\u1eed kh\u1edbp v\u1edbi c\u00e1ch ch\u1ecdn t\u1ed1i \u01b0u nh\u1ea5t trong \\(n - 1\\) c\u1ed9t \u0111\u1ea7u m\u00e0 kh\u00f4ng xung \u0111\u1ed9t v\u1edbi c\u1ed9t cu\u1ed1i =&gt; V\u1edbi m\u1ed7i c\u00e1ch ch\u1ecdn trong \\(n - 1\\) c\u1ed9t \u0111\u1ea7u, ta ph\u1ea3i ph\u00e2n lo\u1ea1i theo c\u00e1ch ch\u1ecdn c\u1ed9t \\(n - 1\\) \u0111\u1ec3 kh\u1edbp v\u1edbi c\u00e1ch ch\u1ecdn trong c\u1ed9t \\(n\\) sau n\u00e0y. B\u00e0i to\u00e1n tr\u1edf th\u00e0nh d\u1ef1ng m\u1ed9t h\u00e0m m\u1ee5c ti\u00eau \\(f(x)\\) trong \u0111\u00f3 bi\u1ebfn \\(x\\) x\u00e1c \u0111\u1ecbnh b\u00e0i to\u00e1n.</p> <p>V\u1eady \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh b\u00e0i to\u00e1n, bi\u1ebfn \\(x\\) c\u1ea7n ch\u1ee9a \u0111\u1ee7 th\u00f4ng tin: Ta \u0111ang t\u00ednh t\u1edbi c\u1ed9t n\u00e0o v\u00e0 \u1edf c\u1ed9t cu\u1ed1i c\u00f9ng ta ch\u1ecdn c\u00e1c \u00f4 nh\u01b0 th\u1ebf n\u00e0o. C\u00e1i bi\u1ebfn \\(x\\) n\u00e0y ng\u01b0\u1eddi ta g\u1ecdi l\u00e0 tham s\u1ed1 x\u00e1c \u0111\u1ecbnh b\u00e0i to\u00e1n hay d\u00e2n Vi\u1ec7t g\u1ecdi l\u00e0 \"Tr\u1ea1ng Th\u00e1i\". T\u1ee9c l\u00e0 bi\u1ebfn x = m\u1ed9t b\u1ed9 {i, a, b, c, d} cho bi\u1ebft t\u00ednh \u0111\u1ebfn c\u1ed9t i, a = c\u00f3 ch\u1ecdn (1, i) kh\u00f4ng; b = c\u00f3 ch\u1ecdn \u00f4 (2, i) kh\u00f4ng, c = c\u00f3 ch\u1ecdn \u00f4 (3, i) kh\u00f4ng v\u00e0 d = c\u00f3 ch\u1ecdn \u00f4 (4, i) kh\u00f4ng.</p> <p>B\u00e2y gi\u1edd m\u1edbi ngh\u0129 v\u1ec1 c\u00e1ch th\u1ee9c l\u01b0u tr\u1eef v\u00e0 t\u00ednh to\u00e1n. Ta bi\u1ebft r\u1eb1ng h\u00e0m m\u1ee5c ti\u00eau \\(f(x)\\) x\u00e1c \u0111\u1ecbnh b\u1edfi gi\u00e1 tr\u1ecb \\(x = (i, a, b, c, d)\\). Trong \u0111\u00f3 a, b, c, d ch\u1ec9 l\u00e0 0 ho\u1eb7c 1 =&gt; c\u00f3 th\u1ec3 n\u00e9n 4 tham s\u1ed1 n\u00e0y v\u00e0o 4 bit c\u1ee7a m\u1ed9t bi\u1ebfn nguy\u00ean. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 \u0111\u1ec3 r\u1eddi v\u00e0 l\u01b0u tr\u1eef h\u00e0m m\u1ee5c ti\u00eau d\u01b0\u1edbi d\u1ea1ng m\u1ea3ng 5 chi\u1ec1u <code>f[x] = f[i][a][b][c][d]....</code> Nh\u01b0ng t\u00f9y v\u00e0o c\u00e1ch th\u1ee9c tri\u1ec3n khai t\u00ednh to\u00e1n m\u00e0 b\u1ea1n t\u00ecm c\u00e1ch m\u00e3 h\u00f3a x theo c\u00e1ch n\u00e0o h\u1ee3p l\u00fd nh\u1ea5t. nh\u1eb1m thu\u1eadn l\u1ee3i cho c\u00e1c thao t\u00e1c:</p> <ul> <li>X\u00e1c \u0111\u1ecbnh xem m\u1ed9t b\u00e0i to\u00e1n \u0111\u00e3 gi\u1ea3i ch\u01b0a, n\u1ebfu gi\u1ea3i r\u1ed3i th\u00ec gi\u00e1 tr\u1ecb h\u00e0m m\u1ee5c ti\u00eau = m\u1ea5y?</li> <li>Gi\u1ea3i c\u00f4ng th\u1ee9c truy h\u1ed3i v\u00e0 l\u01b0u tr\u1eef l\u1eddi gi\u1ea3i</li> </ul> <p>Ch\u1eb3ng h\u1ea1n n\u1ebfu b\u1ea1n gi\u1ea3i ki\u1ec3u qu\u00e9t ngang b\u1ea3ng ph\u01b0\u01a1ng \u00e1n (for i = 1....n) th\u00ec kh\u00f4ng n\u00ean m\u00e3 h\u00f3a c\u00e1i i v\u00e0o c\u00f9ng v\u1edbi a, b, c, d. N\u1ebfu b\u1ea1n gi\u1ea3i b\u1eb1ng TOP-DOWN + Memoization (m\u00e0 ta th\u01b0\u1eddng g\u1ecdi l\u00e0 \u0111\u1ec7 quy c\u00f3 nh\u1edb) th\u00ec ch\u1eb3ng c\u1ea7n m\u00e3 h\u00f3a. C\u1ee9 gi\u1ea3i xong <code>f(i, a, b, c, d)</code> n\u00e0o l\u01b0u n\u00f3 v\u00e0o m\u1ed9t t\u1eadp h\u1ee3p S, mu\u1ed1n xem m\u1ed9t b\u00e0i gi\u1ea3i ch\u01b0a th\u00ec t\u00ecm n\u00f3 trong S.... T\u1eadp S c\u00f3 th\u1ec3 c\u00e0i b\u1eb1ng Hash-Map (Pascal) ho\u1eb7c Unordered-Map(C++11) c\u00f3 t\u1ed1c \u0111\u1ed9 l\u01b0u tr\u1eef v\u00e0 truy v\u1ea5n O(1)...</p> <p>N\u00f3i nh\u01b0 v\u1eady m\u1ecdi b\u00e0i QH\u0110 \u0111\u1ec1u ph\u1ea3i t\u00ecm c\u00e1ch x\u00e1c \u0111\u1ecbnh b\u00e0i to\u00e1n, t\u1ee9c l\u00e0 kh\u00f4ng gian c\u00e1c x = c\u00e1c tr\u1ea1ng th\u00e1i c\u1ee7a n\u00f3. Hay n\u00f3i c\u00e1ch kh\u00e1c QH\u0110 l\u00e0 QH\u0110 tr\u1ea1ng th\u00e1i v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>Nh\u1eefng chuy\u1ec7n x\u1eed l\u00fd bit, n\u00e9n, ... l\u00e0 encoding, n\u00f3 l\u00e0 k\u1ef9 thu\u1eadt c\u01a1 b\u1ea3n kh\u00f4ng li\u00ean quan g\u00ec t\u1edbi QH\u0110 h\u1ebft m\u00e0 ch\u1ec9 d\u00f9ng \u0111\u1ec3 m\u00e3 h\u00f3a b\u00e0i to\u00e1n. Nh\u1eefng chuy\u1ec7n DFS, Topological Sorting c\u0169ng l\u00e0 \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u1ee9 t\u1ef1 t\u00ednh, ch\u1ee9 kh\u00f4ng ph\u1ea3i \u0111\u1eb7c tr\u01b0ng c\u1ee7a QH\u0110. B\u1ea1n n\u00ean coi c\u00e1c c\u00e1i n\u00e0y l\u00e0 k\u1ef9 thu\u1eadt b\u1ed5 tr\u1ee3 nh\u1eb1m t\u0103ng t\u00ednh hi\u1ec7u qu\u1ea3 c\u1ee7a ph\u00e9p c\u00e0i \u0111\u1eb7t m\u00e0 th\u00f4i. C\u00f2n v\u1ec1 c\u0103n b\u1ea3n nh\u01b0 b\u00e0i to\u00e1n \u1edf tr\u00ean, m\u1ecdi ct truy h\u1ed3i ta c\u00f3 th\u1ec3 gi\u1ea3i ki\u1ec3u d\u00f9ng hash-map, l\u00fac \u0111\u00f3 ta ch\u1eb3ng c\u1ea7n quan t\u00e2m t\u1edbi encoding v\u00e0 th\u1ee9 t\u1ef1 t\u00ednh n\u1eefa.</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/","title":"Gi\u1ea3i thu\u1eadt c\u1eaft t\u1ec9a Alpha-beta","text":"<p>T\u00e1c gi\u1ea3: V\u0169 Tr\u1ecdng Quang</p> <p>(Ngu\u1ed3n: https://www.stdio.vn/articles/giai-thuat-cat-tia-alpha-beta-564)</p> <p>Gi\u1ea3i thu\u1eadt c\u1eaft t\u1ec9a Alpha-beta c\u1ef1c k\u1ef3 quan tr\u1ecdng khi l\u1eadp tr\u00ecnh c\u00e1c tr\u00f2 ch\u01a1i nh\u01b0 c\u1edd vua hay c\u1edd t\u01b0\u1edbng, khi c\u00e1c kh\u00f4ng gian tr\u1ea1ng th\u00e1i c\u1ee7a nh\u1eefng tr\u00f2 ch\u01a1i n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p cao. C\u1eaft t\u1ec9a Alpha-beta s\u1ebd gi\u00fap lo\u1ea1i b\u1ecf nh\u1eefng kh\u00f4ng gian tr\u1ea1ng th\u00e1i kh\u00f4ng c\u1ea7n thi\u1ebft v\u00e0 h\u1ed7 tr\u1ee3 t\u1ed1i \u01b0u h\u00f3a thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm Minimax.</p> <p>Gi\u1ea3i thu\u1eadt c\u1eaft t\u1ec9a Alpha-beta t\u1eebng \u0111\u01b0\u1ee3c nhi\u1ec1u nh\u00e0 khoa h\u1ecdc m\u00e1y t\u00ednh \u0111\u1ec1 xu\u1ea5t \u00fd t\u01b0\u1edfng v\u00e0 kh\u00f4ng ng\u1eebng \u0111\u01b0\u1ee3c c\u1ea3i ti\u1ebfn cho \u0111\u1ebfn ng\u00e0y nay. Gi\u1ea3i thu\u1eadt n\u00e0y th\u01b0\u1eddng s\u1eed d\u1ee5ng chung v\u1edbi thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm Minimax nh\u1eb1m h\u1ed7 tr\u1ee3 gi\u1ea3m b\u1edbt c\u00e1c kh\u00f4ng gian tr\u1ea1ng th\u00e1i trong c\u00e2y tr\u00f2 ch\u01a1i, gi\u00fap thu\u1eadt to\u00e1n Minimax c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm s\u00e2u v\u00e0 nhanh h\u01a1n. Gi\u1ea3i thu\u1eadt c\u1eaft t\u1ec9a Alpha-beta c\u00f3 nguy\u00ean t\u1eafc \u0111\u01a1n gi\u1ea3n \"N\u1ebfu bi\u1ebft l\u00e0 tr\u01b0\u1eddng h\u1ee3p x\u00e1u th\u00ec kh\u00f4ng c\u1ea7n ph\u1ea3i x\u00e9t th\u00eam\".</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#tien-e-bai-viet","title":"Ti\u1ec1n \u0111\u1ec1 b\u00e0i vi\u1ebft","text":"<p>Trong th\u1eddi gian t\u00ecm hi\u1ec3u v\u00e0 th\u1ef1c thi thu\u1eadt to\u00e1n Minimax, ngu\u1ed3n t\u00e0i li\u1ec7u c\u1ee7a STDIO lu\u00f4n l\u00e0 \u01b0u ti\u00ean t\u00ecm ki\u1ebfm \u0111\u1ea7u ti\u00ean c\u1ee7a t\u00f4i. Trong l\u00fac th\u1ef1c hi\u1ec7n vi\u1ec7c t\u1ed1i \u01b0u thu\u1eadt to\u00e1n, c\u00e1c t\u00e0i li\u1ec7u n\u00f3i v\u1ec1 Minimax \u0111\u1ec1u n\u00f3i v\u1ec1 thu\u1eadt to\u00e1n c\u1eaft t\u1ec9a Alpha-beta v\u00e0 \u0111\u00e2y l\u00e0 \u0111\u1ed9ng l\u1ef1c \u0111\u1ec3 t\u00f4i vi\u1ebft b\u00e0i vi\u1ebft n\u00e0y nh\u1eb1m gi\u00fap ho\u00e0n thi\u1ec7n ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a b\u00e0i vi\u1ebft Gi\u1ea3i Thu\u1eadt T\u00ecm Ki\u1ebfm Minimax tr\u00ean STDIO.</p> <p>\u0110\u00e2y c\u0169ng l\u00e0 l\u1eddi c\u1ea3m \u01a1n \u0111\u1ebfn anh La Ki\u1ebfn Vinh, ng\u01b0\u1eddi th\u1ea7y \u0111\u00e3 mang l\u1ea1i nhi\u1ec1u c\u1ea3m h\u1ee9ng v\u00e0 \u1ea5n t\u01b0\u1ee3ng cho t\u00f4i.</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#oi-tuong-huong-en","title":"\u0110\u1ed1i t\u01b0\u1ee3ng h\u01b0\u1edbng \u0111\u1ebfn","text":"<p>B\u00e0i vi\u1ebft d\u00e0nh cho c\u00e1c b\u1ea1n \u0111\u00e3 v\u1eefng l\u1eadp tr\u00ecnh v\u00e0 c\u00f3 ki\u1ebfn th\u1ee9c v\u1ec1 c\u00e1c gi\u1ea3i thu\u1eadt t\u00ecm ki\u1ebfm. B\u00e0i vi\u1ebft c\u0169ng y\u00eau c\u1ea7u b\u1ea1n \u0111\u1ecdc xem qua Gi\u1ea3i Thu\u1eadt T\u00ecm Ki\u1ebfm Minimax tr\u01b0\u1edbc khi ti\u1ebfp t\u1ee5c.</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#giai-thuat-cat-tia-alpha-beta","title":"Gi\u1ea3i thu\u1eadt c\u1eaft t\u1ec9a Alpha-beta","text":""},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#chien-luoc-cat-tia","title":"Chi\u1ebfn l\u01b0\u1ee3c c\u1eaft t\u1ec9a","text":"<p>N\u00fat Max c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb alpha (l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng alpha \u2013 lu\u00f4n t\u0103ng), n\u00fat min c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb beta (nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng beta \u2013 lu\u00f4n gi\u1ea3m).</p> <p>Khi ch\u01b0a c\u00f3 alpha v\u00e0 beta x\u00e1c \u0111\u1ecbnh th\u00ec th\u1ef1c hi\u1ec7n t\u00ecm ki\u1ebfm s\u00e2u (depth-first) \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c alpha, beta, v\u00e0 truy\u1ec1n ng\u01b0\u1ee3c l\u00ean c\u00e1c n\u00fat cha.</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#cat-tia-nhu-the-nao","title":"C\u1eaft t\u1ec9a nh\u01b0 th\u1ebf n\u00e0o?","text":"<p>M\u1ed9t s\u1ed1 s\u00e1ch v\u00e0 t\u00e0i li\u1ec7u c\u00f3 \u0111\u1ec1 c\u1eadp v\u1edbi vi\u1ec7c c\u1eaft t\u1ec9a alpha v\u00e0 c\u1eaft t\u1ec9a beta, \u1edf \u0111\u00e2y t\u00f4i c\u0169ng s\u1ebd n\u00f3i v\u1ec1 vi\u1ec7c \u0111\u00f3 v\u00e0 d\u00f9ng m\u1ed9t c\u00e1ch kh\u00e1c \u0111\u00f3 l\u00e0 d\u00f9ng c\u00e1c kho\u1ea3ng trong to\u00e1n h\u1ecdc. H\u00e3y nh\u00ecn c\u00e2y tr\u00f2 ch\u01a1i ph\u00eda d\u01b0\u1edbi \u0111\u1ec3 h\u00ecnh dung c\u00e1ch \u0111\u1ec3 c\u1eaft t\u1ec9a.</p> <p></p> <p>Ch\u1eafc h\u1eb3n nh\u1eefng b\u1ea1n \u0111ang \u0111\u1ecdc b\u00e0i n\u00e0y s\u1ebd \u0111\u1ec1u th\u1eafc m\u1eafc v\u1ea5n \u0111\u1ec1 t\u1ea1i sao ch\u00fang ta c\u00f3 th\u1ec3 c\u1eaft b\u1ecf to\u00e0n b\u1ed9 nh\u1eefng n\u00fat con c\u1ee7a C tr\u00ean c\u00e2y tr\u00f2 ch\u01a1i tr\u00ean.</p> <p>\u0110\u1ea7u ti\u00ean l\u00e0 x\u00e9t c\u00e2y t\u1eeb tr\u00e1i sang ph\u1ea3i ta s\u1ebd th\u1ea5y S l\u00e0 Max, theo chi\u1ebfn l\u01b0\u1ee3c \u0111\u01b0a ra v\u1eady ch\u00fang ta s\u1ebd c\u00f3 gi\u00e1 tr\u1ecb alpha \u2265 10 t\u1ea1i S.</p> <p>Ti\u1ebfp theo, \u1edf C \u1edf \u0111\u00e2y l\u00e0 n\u00fat Min (tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i d\u00e0nh cho Max) t\u1ee9c l\u00e0 s\u1ebd l\u1ea5y gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c n\u00fat con \u1edf d\u01b0\u1edbi. N\u1ebfu nh\u01b0 v\u1eady th\u00ec gi\u00e1 tr\u1ecb ch\u00fang ta ph\u1ea3i l\u1ea5y l\u00e0 beta \u2264 3.</p> <p>Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c alpha v\u00e0 beta, ch\u00fang ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng x\u00e1c \u0111\u1ecbnh vi\u1ec7c c\u00f3 c\u1eaft t\u1ec9a hay kh\u00f4ng. \u1ede n\u00fat S (Max), gi\u00e1 tr\u1ecb alpha lu\u00f4n \u2265 10 (lu\u00f4n t\u0103ng) nh\u01b0ng \u1edf C (Min) th\u00ec gi\u00e1 tr\u1ecb lu\u00f4n lu\u00f4n \u2264 3 (lu\u00f4n gi\u1ea3m), n\u00ean vi\u1ec7c x\u00e9t c\u00e1c con c\u00f2n l\u1ea1i \u1edf C l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft.</p> <p>N\u1ebfu n\u00f3i theo kho\u1ea3ng th\u00ec hi\u1ec7n t\u1ea1i ch\u00fang ta ch\u1ec9 nh\u1eadn kho\u1ea3ng \u2265 10 t\u1ea1i n\u00fat g\u1ed1c  S, v\u1eady th\u00ec \u0111\u00e2u c\u1ea7n b\u1eadn t\u00e2m \u0111\u1ebfn vi\u1ec7c kho\u1ea3ng \u2264 3 t\u1ea1i n\u00fat C.</p> <p>V\u00ed d\u1ee5 v\u1edbi m\u1ed9t c\u00e2y tr\u00f2 ch\u01a1i trung b\u00ecnh </p> <p>\u1ede \u0111\u00e2y ch\u00fang ta c\u0169ng x\u00e9t t\u1eeb tr\u00e1i qua ph\u1ea3i b\u1eaft \u0111\u1ea7u t\u1eeb n\u00fat g\u1ed1c v\u00e0 n\u00fat con b\u00ean tr\u00e1i s\u1ebd \u0111\u01b0\u1ee3c \u01b0u ti\u00ean duy\u1ec7t tr\u01b0\u1edbc. Duy\u1ec7t nguy\u00ean c\u00e2y n\u00e0y s\u1ebd kh\u00e1 d\u00e0i d\u00f2ng nh\u01b0ng \u0111\u1ec3 b\u1ea1n hi\u1ec3u t\u00f4i s\u1ebd vi\u1ebft ra c\u00e1c b\u01b0\u1edbc sau.</p> <p>X\u00e9t duy\u1ec7t t\u1eeb tr\u00ean g\u1ed1c xu\u1ed1ng s\u00e2u (v\u00ec ban \u0111\u1ea7u ch\u01b0a h\u1ec1 t\u1ed3n t\u1ea1i gi\u00e1 tr\u1ecb alpha hay beta c\u1ee7a c\u00e1c n\u00fat). N\u00fat \u0111\u1ea7u ti\u00ean ta duy\u1ec7t l\u00e0 E s\u1ebd g\u1eb7p gi\u00e1 tr\u1ecb 2 (alpha \u2265 2), khi \u0111\u00f3 \u1edf tr\u00ean ch\u01b0a c\u00f3 gi\u00e1 tr\u1ecb beta \u0111\u1ec3 ta c\u00f3 th\u1ec3 so s\u00e1nh n\u00ean s\u1ebd b\u1eaft \u0111\u1ea7u duy\u1ec7t con ti\u1ebfp theo c\u1ee7a n\u00fat E \u0111\u00f3 v\u00e0 \u1edf \u0111\u00e2y ta s\u1ebd ch\u1ecdn cho alpha = 3 (Max).</p> <p>L\u01b0u \u00fd l\u00e0 ch\u00fang ta lu\u00f4n lu\u00f4n duy\u1ec7t t\u1eeb tr\u00e1i sang ph\u1ea3i v\u00e0 ph\u1ea3i l\u1ea7n l\u01b0\u1ee3t t\u1eebng nh\u00e1nh m\u1ed9t, sau \u0111\u00f3 sang nh\u00e1nh ti\u1ebfp theo c\u00f9ng g\u1ed1c. V\u1eady n\u00ean ti\u1ebfp theo ch\u00fang ta s\u1ebd \u0111\u01b0a gi\u00e1 tr\u1ecb alpha n\u00e0y l\u00ean n\u00fat B (Min) v\u00e0 n\u00fat B \u2013 beta \u2264 3, sau \u0111\u00f3 n\u00fat F s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t, v\u00e0 ta ph\u1ea3i t\u00ecm alpha c\u1ee7a F.  Khi duy\u1ec7t con \u0111\u1ea7u ti\u00ean mang gi\u00e1 tr\u1ecb 5 v\u1eady alpha c\u1ee7a F \u2013 alpha \u2265 5.</p> <p>T\u1ea1i B \u2013 beta \u2264 3 v\u00e0 t\u1ea1i F \u2013 alpha \u2265 5. Nh\u01b0 v\u1eady ch\u00fang ta kh\u00f4ng c\u1ea7n xem x\u00e9t c\u00e1c n\u00fat con c\u00f2n l\u1ea1i c\u1ee7a F v\u00ec c\u00e1i ta c\u1ea7n \u1edf \u0111\u00e2y ch\u1ec9 l\u00e0 kho\u1ea3ng \u2264 3 n\u00ean ta c\u1eaft to\u00e0n b\u1ed9 c\u00e1c con c\u00f2n l\u1ea1i.</p> <p>Sau khi duy\u1ec7t to\u00e0n b\u1ed9 c\u00e1c con c\u1ee7a B th\u00ec t\u1ea1i B \u2013 beta = 3, v\u00e0 t\u1ea1i n\u00fat A \u2013 alpha \u2265 3.</p> <p>C\u00e1c b\u1ea1n t\u1ef1 duy\u1ec7t ph\u1ea7n c\u00f2n l\u1ea1i nh\u00e9. \u0110\u1eebng lo l\u1eafng, n\u1ebfu kh\u00f4ng hi\u1ec3u c\u00f3 th\u1ec3 \u0111\u1ecdc l\u1ea1i v\u00e0i l\u1ea7n ho\u1eb7c c\u00f3 th\u1ec3 comment, m\u00ecnh s\u1ebd gi\u1ea3i \u0111\u00e1p gi\u00fap c\u00e1c b\u1ea1n.</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#tro-choi-giai-tri-voi-ai-hay","title":"Tr\u00f2 ch\u01a1i gi\u1ea3i tr\u00ed v\u1edbi AI hay","text":"<ul> <li>C\u1edd Car\u00f4 v\u1edbi AI hay</li> <li>C\u1edd Vua v\u1edbi AI hay</li> <li>C\u1edd Gomoku v\u1edbi AI hay</li> <li>Tr\u00f2 ch\u01a1i D\u00f2 M\u00ecn</li> </ul>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#loi-ket","title":"L\u1eddi k\u1ebft","text":"<p>B\u00e0i vi\u1ebft \u0111\u00e3 kh\u00e1i qu\u00e1t v\u1ec1 l\u00fd thuy\u1ebft vi\u1ec7c c\u1eaft t\u1ec9a alpha-beta, c\u00f2n vi\u1ec7c hi\u1ec7n th\u1ef1c n\u00f3 trong code nh\u01b0 th\u1ebf n\u00e0o th\u00ec c\u00f3 th\u1ec3 m\u00ecnh s\u1ebd d\u00e0nh m\u1ed9t b\u00e0i vi\u1ebft sau bao g\u1ed3m m\u00e3 gi\u1ea3 v\u00e0 c\u1ea3 c\u00e1ch hi\u1ec7n th\u1ef1c b\u1eb1ng Python 2.7.</p> <p>M\u1ed9t s\u1ed1 thu\u1eadt ng\u1eef ho\u1eb7c ki\u1ebfn th\u1ee9c ch\u01b0a ch\u00ednh x\u00e1c mong c\u00e1c b\u1ea1n ch\u1ec9 b\u1ea3o gi\u00fap m\u00ecnh v\u00ec kh\u1ea3 n\u0103ng m\u00ecnh c\u0169ng h\u01a1i k\u00e9m ch\u1ec9 mong c\u00f3 th\u1ec3 gi\u00fap m\u1ecdi ng\u01b0\u1eddi c\u00f3 c\u1ea3m h\u1ee9ng c\u00f9ng h\u1ecdc, c\u00f9ng hi\u1ec3u v\u00e0 c\u00f9ng \u0111am m\u00ea.</p>"},{"location":"algo/games/Giai-Thuat-Cat-Tia-Alpha-beta/#tham-khao","title":"Tham kh\u1ea3o","text":"<p>PDF v\u1ec1 Minimax v\u00e0 c\u1eaft t\u1ec9a Alpha-beta: http://staff.agu.edu.vn/nvhoa/AI/lecture4.pdf - 10/05/2017</p>"},{"location":"algo/geometry/Sweep-Line/","title":"Thu\u1eadt to\u00e1n \u0111\u01b0\u1eddng qu\u00e9t","text":"<p>Ngu\u1eddi vi\u1ebft:  - Ng\u00f4 Nh\u1eadt Quang - HUS High School for Gifted Students - B\u00f9i Nguy\u1ec5n Ng\u1ecdc Th\u1eafng - Carnegie Mellon University in Qatar - Tr\u1ea7n \u0110\u00ecnh Kh\u00e1nh D\u01b0\u01a1ng - Michigan State University</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - VNUHCM-University of Science - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM-University of Science - L\u00ea Minh Ho\u00e0ng - VNUHCM-University of Science - Nguy\u1ec5n Ph\u00fa B\u00ecnh - VNUHCM-University of Science</p>"},{"location":"algo/geometry/Sweep-Line/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd \u0111i t\u00ecm hi\u1ec3u v\u1ec1 thu\u1eadt to\u00e1n \u0111\u01b0\u1eddng qu\u00e9t - m\u1ed9t thu\u1eadt to\u00e1n kh\u00e1 h\u1eefu \u00edch trong h\u00ecnh h\u1ecdc t\u00ednh to\u00e1n. Thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1a tr\u00ean m\u1ed9t \u00fd t\u01b0\u1edfng m\u1ea1nh m\u00e0 \u0111\u01a1n gi\u1ea3n: s\u1eed d\u1ee5ng m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng d\u1ecdc v\u00e0 \"qu\u00e9t\" qua m\u1eb7t ph\u1eb3ng.</p> <p>Tuy v\u1eady, tr\u00ean th\u1ef1c t\u1ebf, vi\u1ec7c \"qu\u00e9t\" to\u00e0n b\u1ed9 c\u00e1c \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng l\u00e0 b\u1ea5t kh\u1ea3 thi n\u00ean ch\u00fang ta ch\u1ec9 c\u00f3 th\u1ec3 x\u00e9t m\u1ed9t v\u00e0i \u0111i\u1ec3m c\u1ea7n thi\u1ebft m\u00e0 th\u00f4i.</p>"},{"location":"algo/geometry/Sweep-Line/#luu-y-truoc-khi-oc-bai-viet","title":"L\u01b0u \u00fd tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i vi\u1ebft","text":"<p>C\u00e1c kh\u00e1i ni\u1ec7m sau \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp xuy\u00ean su\u1ed1t b\u00e0i vi\u1ebft:</p> <p>V\u1edbi hai \u0111i\u1ec3m \\(P(x_P, y_P)\\) v\u00e0 \\(Q(x_Q, y_Q)\\):</p> <ul> <li>Kho\u1ea3ng c\u00e1ch Euclid gi\u1eefa hai \u0111i\u1ec3m \\(P\\) v\u00e0 \\(Q\\) l\u00e0 kho\u1ea3ng c\u00e1ch thu \u0111\u01b0\u1ee3c khi t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c Pythagoras \\(\\sqrt{(x_Q - x_P)^2 + (y_Q - y_P)^2}\\)</li> <li>Kho\u1ea3ng c\u00e1ch Manhattan gi\u1eefa hai \u0111i\u1ec3m \\(P\\) v\u00e0 \\(Q\\) l\u00e0 kho\u1ea3ng c\u00e1ch gi\u1eefa n\u1ebfu ta ch\u1ec9 \u0111\u01b0\u1ee3c \u0111i d\u1ecdc ho\u1eb7c ngang khi t\u1eeb \u0111i\u1ec3m n\u00e0y qua \u0111i\u1ec3m kia, \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c: \\(\\lvert x_Q - x_P \\rvert + \\lvert y_Q - y_P \\rvert\\)</li> </ul> <p> /uploads/Sweep-Line_img1.png </p> <p> C\u00e1c \u0111\u01b0\u1eddng m\u00e0u \u0111\u1ecf, xanh lam, v\u00e0ng bi\u1ec3u di\u1ec5n kho\u1ea3ng c\u00e1ch Manhattan c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i \\((12)\\), trong khi \u0111\u01b0\u1eddng m\u00e0u xanh l\u1ee5c bi\u1ec3u di\u1ec5n kho\u1ea3ng c\u00e1ch Euclid v\u1edbi \u0111\u1ed9 d\u00e0i \\(6 * \\sqrt2 \\approx 8.48\\). </p> <p>Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf ph\u00eda tr\u00ean, khi \u1ee9ng d\u1ee5ng thu\u1eadt to\u00e1n \u0111\u01b0\u1eddng qu\u00e9t, vi\u1ec7c qu\u00e9t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng l\u00e0 b\u1ea5t kh\u1ea3 thi, v\u00e0 ch\u00fang ta c\u1ea7n s\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 k\u0129 thu\u1eadt hay c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c - ch\u1eb3ng h\u1ea1n, k\u0129 thu\u1eadt hai con tr\u1ecf, k\u0129 thu\u1eadt n\u00e9n s\u1ed1, c\u00e2y ph\u00e2n \u0111o\u1ea1n, c\u00e2y Fenwick (c\u00e2y ch\u1ec9 s\u1ed1 nh\u1ecb ph\u00e2n) - \u0111\u1ec3 l\u1ecdc ra v\u00e0 x\u1eed l\u00ed c\u00e1c \u0111i\u1ec3m thi\u1ebft y\u1ebfu c\u1ea7n quan t\u00e2m. Do \u0111\u00f3, \u0111\u1ed9c gi\u1ea3 n\u00ean n\u1eafm k\u0129 c\u00e1c ch\u1ee7 \u0111\u1ec1 li\u00ean quan n\u00eau tr\u00ean tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i vi\u1ebft.</p> <p>Ngo\u00e0i ra, b\u00e0i vi\u1ebft g\u1ed1c c\u00f3 \u0111\u1ec1 c\u1eadp t\u1edbi b\u00e0i to\u00e1n bao l\u1ed3i, nh\u01b0ng ch\u1ee7 \u0111\u1ec1 n\u00e0y s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp trong b\u00e0i vi\u1ebft n\u00e0y n\u00e0y b\u1edfi VNOI Wiki \u0111\u00e3 c\u00f3 m\u1ed9t b\u00e0i vi\u1ebft kh\u00e1 ho\u00e0n thi\u1ec7n \u1edf \u0111\u00e2y.</p>"},{"location":"algo/geometry/Sweep-Line/#bai-toan-tim-cap-iem-gan-nhat","title":"B\u00e0i to\u00e1n t\u00ecm c\u1eb7p \u0111i\u1ec3m g\u1ea7n nh\u1ea5t","text":"<p>Link b\u00e0i: SPOJ - CLOPPAIR</p>"},{"location":"algo/geometry/Sweep-Line/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t danh s\u00e1ch \\(n\\) \u0111i\u1ec3m. T\u00ecm kho\u1ea3ng c\u00e1ch Euclid ng\u1eafn nh\u1ea5t t\u1ea1o b\u1edfi hai trong s\u1ed1 c\u00e1c \u0111i\u1ec3m \u0111\u00f3.</p> <p>Gi\u1edbi h\u1ea1n:</p> <ul> <li>\\(2 \\leqslant n \\leqslant 50000\\)</li> <li>To\u1ea1 \u0111\u1ed9 c\u00e1c \u0111i\u1ec3m l\u00e0 s\u1ed1 nguy\u00ean \\(-10^6 \\leqslant x, y \\leqslant 10^6\\)</li> </ul>"},{"location":"algo/geometry/Sweep-Line/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>Ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y b\u00e0i n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\), nh\u01b0ng s\u1ebd kh\u00f4ng th\u1ec3 qua \u0111\u01b0\u1ee3c gi\u1edbi h\u1ea1n th\u1eddi gian 1 gi\u00e2y. Tuy v\u1eady, \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n \u0111\u01b0\u1eddng qu\u00e9t, ch\u00fang ta c\u00f3 th\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p xu\u1ed1ng \\(O(n\\log{n})\\).</p> <p>Tr\u01b0\u1edbc ti\u00ean, ch\u00fang ta s\u1ebd s\u1eafp x\u1ebfp l\u1ea1i danh s\u00e1ch \u0111i\u1ec3m theo th\u1ee9 t\u1ef1 ho\u00e0nh \u0111\u1ed9 c\u00e1c \u0111i\u1ec3m t\u0103ng d\u1ea7n. L\u1ea7n l\u01b0\u1ee3t duy\u1ec7t qua t\u1eebng \u0111i\u1ec3m trong danh s\u00e1ch \u0111\u00e3 s\u1eafp x\u1ebfp. \u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n c\u1ea3i ti\u1ebfn so v\u1edbi thu\u1eadt to\u00e1n tr\u00e2u b\u00f2 \u0111\u00f3 l\u00e0 thay v\u00ec ph\u1ea3i duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u1eb7p \u0111i\u1ec3m, v\u1edbi m\u1ed7i \u0111i\u1ec3m, ta ch\u1ec9 ph\u1ea3i x\u00e9t \u0111i\u1ec3m \u0111\u00f3 v\u1edbi m\u1ed9t s\u1ed1 \u00edt c\u00e1c \u0111i\u1ec3m kh\u00e1c \u0111\u00e1ng quan t\u00e2m, chi ph\u00ed \u0111\u1ec3 t\u00ecm c\u00e1c \u0111i\u1ec3m \u0111\u00e1ng quan t\u00e2m l\u00e0 \\(O(\\log{n})\\), do \u0111\u00f3 thu\u1eadt to\u00e1n c\u1ea3i ti\u1ebfn c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n \\log{n})\\).</p> <p>Gi\u1ea3 s\u1eed ch\u00fang ta \u0111\u00e3 x\u1eed l\u00ed xong \\(N - 1\\) \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean v\u00e0 kho\u1ea3ng c\u00e1ch ng\u1eafn nh\u1ea5t hi\u1ec7n c\u00f3 l\u00e0 \\(d\\). Nh\u01b0 v\u1eady t\u1eeb \u0111i\u1ec3m th\u1ee9 \\(N\\) v\u1ec1 sau, ta ch\u1ec9 quan t\u00e2m \u0111\u1ebfn c\u00e1c c\u1eb7p \u0111i\u1ec3m c\u00f3 kho\u1ea3ng c\u00e1ch b\u00e9 h\u01a1n \\(d\\). G\u1ecdi \u0111i\u1ec3m th\u1ee9 \\(N\\) (c\u0169ng l\u00e0 \u0111i\u1ec3m \u0111ang x\u00e9t) l\u00e0 \u0111i\u1ec3m \\(P\\).</p> <p>B\u1ed5 \u0111\u1ec1 1</p> <p>T\u1ea1i m\u1ed7i b\u01b0\u1edbc trong thu\u1eadt to\u00e1n, \u0111\u1ec3 t\u00ecm m\u1ed9t c\u1eb7p \u0111i\u1ec3m c\u00f3 kho\u1ea3ng c\u00e1ch b\u00e9 h\u01a1n \\(d\\), ta ch\u1ec9 c\u1ea7n quan t\u00e2m \u0111\u1ebfn t\u1ed1i \u0111a \\(8\\) \u0111i\u1ec3m kh\u00e1c.</p> <p>Ch\u1ee9ng minh</p> <p>T\u1eeb \\(P\\), v\u1ebd \\(8\\) h\u00ecnh vu\u00f4ng xung quanh, m\u1ed7i h\u00ecnh vu\u00f4ng c\u00f3 c\u1ea1nh \u0111\u00fang b\u1eb1ng \\(d/2\\), nh\u01b0 h\u00ecnh d\u01b0\u1edbi (\u0111i\u1ec3m m\u00e0u xanh l\u00e0 \\(P\\)).</p> <p> /uploads/Sweep-Line_img2.png </p> <p>Hi\u1ec3n nhi\u00ean t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m t\u1eeb \\(1\\) \u0111\u1ebfn \\(N - 1\\) \u0111\u1ec1u n\u1eb1m v\u1ec1 ph\u00eda b\u00ean tr\u00e1i c\u1ee7a \u0111i\u1ec3m \u0111ang x\u00e9t do ta duy\u1ec7t danh s\u00e1ch theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n v\u1ec1 ho\u00e0nh \u0111\u1ed9. Nh\u1eadn x\u00e9t r\u1eb1ng t\u1eeb \\(P\\), ta kh\u00f4ng c\u1ea7n quan t\u00e2m \u0111\u1ebfn nh\u1eefng \u0111i\u1ec3m \\(T\\) kh\u00f4ng n\u1eb1m trong \\(8\\) h\u00ecnh vu\u00f4ng b\u00ean tr\u00ean do khi \u0111\u00f3 kho\u1ea3ng c\u00e1ch gi\u1eefa \\(P\\) v\u00e0 \\(T\\) l\u1edbn h\u01a1n \\(d\\).</p> <p>X\u00e9t \\(8\\) h\u00ecnh vu\u00f4ng ta v\u1eeba v\u1ebd. Do \\(d\\) l\u00e0 kho\u1ea3ng c\u00e1ch ng\u1eafn nh\u1ea5t gi\u1eefa hai c\u1eb7p \u0111i\u1ec3m b\u1ea5t k\u00ec trong \\(N - 1\\) \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean n\u00ean trong m\u1ed7i h\u00ecnh vu\u00f4ng, c\u00f3 nhi\u1ec1u nh\u1ea5t m\u1ed9t \u0111i\u1ec3m. Do \u0111\u00f3, t\u1ed1i \u0111a ta ch\u1ec9 c\u1ea7n x\u00e9t \\(8\\) \u0111i\u1ec3m trong \\(8\\) h\u00ecnh vu\u00f4ng \u0111\u1ec3 c\u1eadp nh\u1eadt k\u1ebft qu\u1ea3. </p> <p>T\u1eeb b\u1ed5 \u0111\u1ec1 1, ta nh\u1eadn th\u1ea5y c\u1ea7n duy tr\u00ec m\u1ed9t danh s\u00e1ch \\(L\\) c\u00e1c \u0111i\u1ec3m c\u00f3 ho\u00e0nh \u0111\u1ed9 ch\u00eanh l\u1ec7ch kh\u00f4ng qu\u00e1 \\(d\\) so v\u1edbi \u0111i\u1ec3m \u0111ang x\u00e9t. Do \\(d\\) gi\u1ea3m d\u1ea7n n\u00ean ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n vi\u1ec7c n\u00e0y b\u1eb1ng k\u0129 thu\u1eadt hai con tr\u1ecf. \u0110\u1ed3ng th\u1eddi, t\u1ea1i m\u1ed7i b\u01b0\u1edbc ta c\u1ea7n t\u00ecm c\u00e1c \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 l\u00e2n c\u1eadn v\u1edbi \u0111i\u1ec3m \u0111ang x\u00e9t. Do \u0111\u00f3 c\u00e1c \u0111i\u1ec3m trong \\(L\\) c\u1ea7n \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 tung \u0111\u1ed9 t\u0103ng d\u1ea7n. C\u00e1c ti\u00eau ch\u00ed tr\u00ean c\u00f3 th\u1ec3 tho\u1ea3 m\u00e3n b\u1eb1ng c\u00e1ch c\u00e0i \u0111\u1eb7t m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm nh\u01b0 <code>std::set</code>.</p> <p>Thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta c\u1ee5 th\u1ec3 nh\u01b0 sau. \u0110\u1ea7u ti\u00ean s\u1eafp x\u1ebfp danh s\u00e1ch \u0111i\u1ec3m theo th\u1ee9 t\u1ef1 ho\u00e0nh \u0111\u1ed9 t\u0103ng d\u1ea7n. L\u1ea7n l\u01b0\u1ee3t duy\u1ec7t qua c\u00e1c \u0111i\u1ec3m trong danh s\u00e1ch, \u0111\u1ed3ng th\u1eddi duy tr\u00ec m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm \\(T\\). G\u1ecdi \\(d\\) l\u00e0 kho\u1ea3ng c\u00e1ch nh\u1ecf nh\u1ea5t gi\u1eefa hai \u0111i\u1ec3m b\u1ea5t k\u00ec \u0111\u00e3 x\u00e9t. T\u1ea1i m\u1ed7i b\u01b0\u1edbc:</p> <ul> <li>Lo\u1ea1i b\u1ecf kh\u1ecfi \\(T\\) c\u00e1c \u0111i\u1ec3m c\u00f3 ch\u00eanh l\u1ec7ch ho\u00e0nh \u0111\u1ed9 so v\u1edbi \u0111i\u1ec3m \u0111ang x\u00e9t l\u1edbn h\u01a1n \\(d\\).</li> <li>T\u00ecm c\u00e1c \u0111i\u1ec3m trong \\(T\\) c\u00f3 ch\u00eanh l\u1ec7ch tung \u0111\u1ed9 kh\u00f4ng qu\u00e1 \\(d\\), t\u00ednh kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c \u0111i\u1ec3m n\u00e0y v\u00e0 \u0111i\u1ec3m \u0111ang x\u00e9t, v\u00e0 c\u1eadp nh\u1eadt \\(d\\).</li> <li>Th\u00eam \u0111i\u1ec3m \u0111ang x\u00e9t v\u00e0o \\(T\\).</li> </ul> <p>Ta nh\u1eadn th\u1ea5y m\u1ed7i \u0111i\u1ec3m \u0111\u01b0\u1ee3c th\u00eam v\u00e0o v\u00e0 xo\u00e1 kh\u1ecfi \\(T\\) \u0111\u00fang m\u1ed9t l\u1ea7n. Do \u0111\u00f3 t\u1ed5ng chi ph\u00ed cho c\u00e1c thao t\u00e1c th\u00eam v\u00e0 xo\u00e1 \u0111i\u1ec3m l\u00e0 \\(O(n \\log{n})\\). T\u1ea1i m\u1ed7i b\u01b0\u1edbc, chi ph\u00ed t\u00ecm ki\u1ebfm l\u00e0 \\(O(\\log{n})\\) v\u00e0 c\u00f3 \\(O(1)\\) \u0111i\u1ec3m ta c\u1ea7n x\u00e9t. T\u00f3m l\u1ea1i, \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(n \\log{n})\\).</p>"},{"location":"algo/geometry/Sweep-Line/#cai-at-mau","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"<p>Trong ph\u1ea7n c\u00e0i \u0111\u1eb7t n\u00e0y, c\u00e1c kho\u1ea3ng c\u00e1ch \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng b\u00ecnh ph\u01b0\u01a1ng \u0111\u1ec3 tr\u00e1nh b\u1ecb sai s\u1ed1.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\n## define ll long long\n\nstruct Point{\n    ll x, y;\n    int id;\n\n    bool operator &lt; (const Point&amp; other) {\n        if (x != other.x) return x &lt; other.x;\n        return y &lt; other.y;\n    }\n};\n\nstruct cmp{\n    bool operator () (const Point&amp; a, const Point&amp; b) const {\n        if (a.y != b.y) return a.y &lt; b.y;\n        return a.x &lt; b.x;\n    }\n};\n\nint n;\nvector&lt;Point&gt; points; // Vector ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m\nset&lt;Point, cmp&gt; T;\n\nll squared_dist(Point a, Point b) { // Nh\u1eadn v\u00e0o hai \u0111i\u1ec3m, tr\u1ea3 v\u1ec3 \n                                     // b\u00ecnh ph\u01b0\u01a1ng kho\u1ea3ng c\u00e1ch gi\u1eefa hai \u0111i\u1ec3m\n    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i++) {\n        ll x, y;\n        cin &gt;&gt; x &gt;&gt; y;\n        points.push_back({x, y, i});\n    }\n\n    ll squared_d = squared_dist(points[0], points[1]); // L\u01b0u b\u00ecnh ph\u01b0\u01a1ng c\u1ee7a d\n    int res_id1 = 0, res_id2 = 1;\n\n    sort(points.begin(), points.end()); // S\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m theo ho\u00e0nh \u0111\u1ed9\n\n    for (auto p : points) {\n        ll x = p.x, y = p.y;\n        int id = p.id;\n\n        ll d = sqrt(squared_d);\n        Point cur = {-1000001, y - d, id};\n\n        while (1) { // T\u00ecm t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 trong kho\u1ea3ng [y - d, y + d]\n            auto it = T.upper_bound(cur);\n\n            if (it == T.end()) break;\n\n            cur = *it;\n            if (cur.y &gt; y + d) break; // D\u1eebng l\u1ea1i n\u1ebfu \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 l\u1edbn h\u01a1n y + d\n\n            if (cur.x &lt; x - d) {\n                T.erase(it);\n                continue;\n            } // X\u00f3a \u0111i\u1ec3m n\u1ebfu \u0111i\u1ec3m n\u00e0y c\u00f3 ho\u00e0nh \u0111\u1ed9 b\u00e9 h\u01a1n x - d\n\n\n            if (squared_dist(p, cur) &lt; squared_d) {\n                squared_d = squared_dist(p, cur);\n                res_id1 = id; res_id2 = cur.id;\n            } // G\u00e1n \u0111\u00e1p \u00e1n m\u1edbi n\u1ebfu t\u00ecm \u0111\u01b0\u1ee3c d nh\u1ecf h\u01a1n\n        }\n\n        T.insert(p); // Th\u00eam \u0111i\u1ec3m hi\u1ec7n t\u1ea1i v\u00e0o T\n    }\n\n    if (res_id1 &gt; res_id2) swap(res_id1, res_id2);\n    cout &lt;&lt; res_id1 &lt;&lt; \" \" &lt;&lt; res_id2 &lt;&lt; \" \";\n    cout &lt;&lt; fixed &lt;&lt; setprecision(6) &lt;&lt; sqrt(squared_d);\n}\n</code></pre>"},{"location":"algo/geometry/Sweep-Line/#bai-toan-tim-giao-iem-cua-cac-oan-thang-song-song-voi-truc-toa-o","title":"B\u00e0i to\u00e1n t\u00ecm giao \u0111i\u1ec3m c\u1ee7a c\u00e1c \u0111o\u1ea1n th\u1eb3ng song song v\u1edbi tr\u1ee5c to\u1ea1 \u0111\u1ed9","text":"<p>Link b\u00e0i: SPOJ - CS345A1</p>"},{"location":"algo/geometry/Sweep-Line/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho c\u00e1c \u0111o\u1ea1n th\u1eb3ng song song tr\u1ee5c \\(Ox\\) ho\u1eb7c tr\u1ee5c \\(Oy\\), y\u00eau c\u1ea7u tr\u1ea3 l\u1ea1i s\u1ed1 c\u00e1c giao \u0111i\u1ec3m.</p> <p>Gi\u1edbi h\u1ea1n:</p> <ul> <li>\\(1 \\leqslant n \\leqslant 100000\\)</li> <li>To\u1ea1 \u0111\u1ed9 \\(x\\), \\(y\\) c\u1ee7a m\u1ed7i \u0111i\u1ec3m l\u00e0 s\u1ed1 th\u1ef1c th\u1ecfa m\u00e3n \\(0 \\leqslant x, y \\leqslant 1\\)</li> </ul>"},{"location":"algo/geometry/Sweep-Line/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>Ta b\u1eaft \u0111\u1ea7u v\u1edbi \u00fd t\u01b0\u1edfng qu\u00e9t qua t\u1ea5t c\u1ea3 \u0111o\u1ea1n th\u1eb3ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n t\u00ecm c\u1eb7p \u0111i\u1ec3m g\u1ea7n nh\u1ea5t.</p> <p>Tuy nhi\u00ean, ta s\u1ebd g\u1eb7p ph\u1ea3i v\u1ea5n \u0111\u1ec1 l\u00e0 m\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang s\u1ebd bao g\u1ed3m c\u00e1c \u0111i\u1ec3m c\u00f3 ho\u00e0nh \u0111\u1ed9 kh\u00e1c nhau n\u00ean ch\u00fang ta kh\u00f3 c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp c\u00e1c \u0111o\u1ea1n th\u1eb3ng theo m\u1ed9t th\u1ee9 t\u1ef1 n\u00e0o \u0111\u00f3 li\u00ean quan \u0111\u1ebfn ho\u00e0nh \u0111\u1ed9 - gi\u1ea3 s\u1eed c\u00f3 m\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1ed1i \\((0.5, 0.25)\\) v\u00e0 \\((0.5, 0.75)\\) v\u00e0 m\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1ed1i \\((0.25, 0.5)\\) v\u00e0 \\((0.75, 0.5)\\), ch\u00fang ta n\u00ean \u01b0u ti\u00ean \u0111o\u1ea1n th\u1eb3ng n\u00e0o tr\u01b0\u1edbc?</p> <p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 tr\u00ean, m\u1ed9t \u00fd t\u01b0\u1edfng th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng l\u00e0 thay v\u00ec xem m\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang l\u00e0 m\u1ed9t ph\u1ea7n t\u1eed duy nh\u1ea5t trong danh s\u00e1ch, ta s\u1ebd t\u00e1ch n\u00f3 ra th\u00e0nh hai ph\u1ea7n t\u1eed ri\u00eang bi\u1ec7t - m\u1ed9t ph\u1ea7n t\u1eed bi\u1ec3u th\u1ecb cho \u0111\u1ea7u m\u00fat b\u00ean tr\u00e1i v\u00e0 m\u1ed9t ph\u1ea7n t\u1eed bi\u1ec3u th\u1ecb cho \u0111\u1ea7u m\u00fat b\u00ean ph\u1ea3i c\u1ee7a \u0111o\u1ea1n th\u1eb3ng. Nh\u01b0 v\u1eady trong danh s\u00e1ch c\u1ee7a ch\u00fang ta s\u1ebd c\u00f3 ba lo\u1ea1i ph\u1ea7n t\u1eed: </p> <ol> <li>\u0110\u1ea7u m\u00fat b\u00ean tr\u00e1i c\u1ee7a m\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang</li> <li>\u0110\u1ea7u m\u00fat b\u00ean ph\u1ea3i c\u1ee7a m\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang</li> <li>M\u1ed9t \u0111o\u1ea1n th\u1eb3ng n\u1eb1m d\u1ecdc. </li> </ol> <p>Khi n\u00e0y ta s\u1ebd c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp danh s\u00e1ch c\u1ee7a ch\u00fang ta theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n v\u1ec1 ho\u00e0nh \u0111\u1ed9 c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed.</p> <p>Ch\u00fang ta s\u1ebd qu\u00e9t t\u1eeb tr\u00e1i sang ph\u1ea3i. Khi \u0111o\u1ea1n qu\u00e9t di chuy\u1ec3n, ta duy tr\u00ec m\u1ed9t t\u1eadp h\u1ee3p \\(S\\) c\u00e1c \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang b\u1ecb c\u1eaft ngang theo \u0111o\u1ea1n qu\u00e9t - t\u1ee9c l\u00e0 \u0111o\u1ea1n qu\u00e9t \u0111ang \u1edf gi\u1eefa hai \u0111\u1ea7u m\u00fat c\u1ee7a \u0111o\u1ea1n ngang \u0111\u00f3. T\u1eadp n\u00e0y \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 \\(y\\), v\u00e0 \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u \u0111\u1ecf trong h\u00ecnh d\u01b0\u1edbi.</p> <p> /uploads/Sweep-Line_img3.png </p> <p>V\u1edbi m\u1ed7i \u0111o\u1ea1n th\u1eb3ng n\u1eb1m d\u1ecdc \\(v_i\\), \u0111\u1ec3 \u0111\u1ebfm \\(t_i\\) l\u00e0 s\u1ed1 \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang c\u1eaft \\(v_i\\), ta ch\u1ec9 vi\u1ec7c t\u00ecm trong t\u1eadp \\(S\\) nh\u1eefng \u0111o\u1ea1n th\u1eb3ng c\u00f3 tung \u0111\u1ed9 n\u1eb1m gi\u1eefa hai \u0111\u1ea7u m\u00fat c\u1ee7a \\(v\\). Hi\u1ec3n nhi\u00ean ta th\u1ea5y r\u1eb1ng t\u1ed5ng c\u1ee7a c\u00e1c \\(t_i\\) c\u0169ng l\u00e0 s\u1ed1 giao \u0111i\u1ec3m ta c\u1ea7n t\u00ecm.</p> <p>Nh\u01b0 v\u1eady ta th\u1ea5y t\u1eadp \\(S\\) l\u00e0 m\u1ed9t y\u1ebfu t\u1ed1 quan tr\u1ecdng \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n. T\u1eadp \\(S\\) c\u1ea7n h\u1ed7 tr\u1ee3 c\u00e1c thao t\u00e1c c\u1ee5 th\u1ec3 sau:</p> <ol> <li>Th\u00eam m\u1ed9t ph\u1ea7n t\u1eed c\u00f3 kho\u00e1 \\(k\\) v\u00e0o trong t\u1eadp (l\u01b0u \u00fd c\u00e1c kho\u00e1 c\u00f3 th\u1ec3 tr\u00f9ng nhau).</li> <li>Xo\u00e1 m\u1ed9t ph\u1ea7n t\u1eed c\u00f3 kho\u00e1 \\(k\\) kh\u1ecfi t\u1eadp.</li> <li>Cho m\u1ed9t kho\u1ea3ng \\([L, R]\\), tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed trong t\u1eadp c\u00f3 kho\u00e1 \\(k \\in [L, R]\\).</li> </ol> <p>\u0110\u1ec3 tho\u1ea3 m\u00e3n c\u00e1c y\u00eau c\u1ea7u tr\u00ean, ta s\u1ebd c\u00e0i \u0111\u1eb7t t\u1eadp \\(S\\) b\u1eb1ng k\u0129 thu\u1eadt n\u00e9n s\u1ed1 v\u00e0 c\u00e2y Fenwick. Ta s\u1ebd n\u00e9n tung \u0111\u1ed9 c\u1ee7a c\u00e1c \u0111o\u1ea1n th\u1eb3ng th\u00e0nh \\(O(n)\\) \u0111i\u1ec3m. D\u1ef1ng c\u00e2y Fenwick d\u1ef1a tr\u00ean \\(O(n)\\) \u0111i\u1ec3m n\u00e0y, m\u1ed7i n\u00fat trong c\u00e2y cho bi\u1ebft c\u00f3 bao nhi\u00eau \u0111o\u1ea1n th\u1eb3ng ngang \u0111ang c\u1eaft c\u00e1c \u0111i\u1ec3m trong \u0111o\u1ea1n con m\u00e0 n\u00fat qu\u1ea3n l\u00fd. Nh\u01b0 v\u1eady, m\u1ed7i thao t\u00e1c th\u00eam m\u1ed9t \u0111o\u1ea1n th\u1eb3ng v\u00e0o t\u1eadp \\(S\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t thao t\u00e1c c\u1ed9ng \\(1\\) v\u00e0o gi\u00e1 tr\u1ecb l\u01b0u \u1edf c\u00e1c n\u00fat t\u01b0\u01a1ng \u1ee9ng v\u00e0 m\u1ed7i thao t\u00e1c xo\u00e1 m\u1ed9t \u0111o\u1ea1n th\u1eb3ng kh\u1ecfi \\(S\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t thao t\u00e1c gi\u1ea3m gi\u00e1 tr\u1ecb l\u01b0u \u1edf c\u00e1c n\u00fat t\u01b0\u01a1ng \u1ee9ng \u0111i \\(1\\). Chi ph\u00ed \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u1ea3 hai thao t\u00e1c tr\u00ean l\u00e0 \\(O(\\log{n})\\). \u0110\u1ec3 t\u00ecm s\u1ed1 l\u01b0\u1ee3ng \u0111o\u1ea1n th\u1eb3ng ngang c\u00f3 tung \u0111\u1ed9 trong kho\u1ea3ng \\([L, R]\\), ta c\u00f3 th\u1ec3 t\u00ednh t\u1ed5ng c\u00e1c \u0111i\u1ec3m trong kho\u1ea3ng \\([L, R]\\) trong c\u00e2y Fenwick trong \\(O(\\log{n})\\). Chi ti\u1ebft tham kh\u1ea3o \u1edf c\u00e0i \u0111\u1eb7t m\u1eabu.</p> <p>D\u1ec5 th\u1ea5y thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta duy\u1ec7t qua m\u1ed9t danh s\u00e1ch c\u00f3 \\(O(n)\\) ph\u1ea7n t\u1eed, v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed chi ph\u00ed x\u1eed l\u00ed l\u00e0 \\(O(\\log{n})\\). Do \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(n \\log{n})\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(O(n)\\).</p> <p>Minh h\u1ecda thu\u1eadt to\u00e1n:</p> <p> </p>"},{"location":"algo/geometry/Sweep-Line/#cai-at-mau_1","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\n## define ll long long\n\nconst int N = 1e5 + 5;\nconst double EPS = 1e-9;\n\nstruct Event{\n    double x;\n    int y, y2, type;\n\n    bool operator &lt; (const Event&amp; other) const {\n        return x &lt; other.x;\n    }\n};\n\nstruct FenwickTree{\n    int n;\n    vector&lt;int&gt; s;\n\n    FenwickTree(int n) : n(n), s(n + 5) {\n        for (int i = 1; i &lt;= n; i++) s[i] = 0;\n    }\n\n    void update(int i, int val) {\n        for (; i &lt;= n; i += i &amp; -i) s[i] += val;\n    }\n\n    int getsum(int i) {\n        int res = 0;\n        for (; i; i -= i &amp; -i) res += s[i];\n        return res;\n    }\n\n    int query(int l, int r) {\n        return getsum(r) - getsum(l - 1);\n    }\n};\n\nint n;\ndouble blue_x1[N], blue_x2[N], blue_y[N], red_y1[N], red_y2[N], red_x[N];\nvector&lt;double&gt; compress_y;\nvector&lt;Event&gt; events;\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; blue_x1[i] &gt;&gt; blue_x2[i] &gt;&gt; blue_y[i];\n\n        if (blue_x1[i] &gt; blue_x2[i]) swap(blue_x1[i], blue_x2[i]);\n        compress_y.push_back(blue_y[i]);\n    }\n\n    for (int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; red_y1[i] &gt;&gt; red_y2[i] &gt;&gt; red_x[i];\n\n        if (red_y1[i] &gt; red_y2[i]) swap(red_y1[i], red_y2[i]);\n        compress_y.push_back(red_y1[i]);\n        compress_y.push_back(red_y2[i]);\n    }\n\n    sort(compress_y.begin(), compress_y.end());\n    compress_y.erase(unique(compress_y.begin(), compress_y.end()), compress_y.end());\n    // R\u1eddi r\u1ea1c h\u00f3a c\u00e1c tung \u0111\u1ed9\n\n    for (int i = 1; i &lt;= n; i++) {\n        int yy = lower_bound(compress_y.begin(), compress_y.end(), blue_y[i]) - compress_y.begin() + 1;\n        events.push_back({blue_x1[i] - EPS, yy, 0, 1}); // Ph\u1ea7n t\u1eed lo\u1ea1i 1\n        events.push_back({blue_x2[i] + EPS, yy, 0, 2}); // Ph\u1ea7n t\u1eed lo\u1ea1i 2\n    }\n\n    for (int i = 1; i &lt;= n; i++) {\n        int l = lower_bound(compress_y.begin(), compress_y.end(), red_y1[i]) - compress_y.begin() + 1;\n        int r = lower_bound(compress_y.begin(), compress_y.end(), red_y2[i]) - compress_y.begin() + 1;\n        events.push_back({red_x[i], l, r, 3}); // Ph\u1ea7n t\u1eed lo\u1ea1i 3\n    }\n\n    sort(events.begin(), events.end());\n\n    FenwickTree FT(n * 3); // C\u00f3 t\u1ed1i \u0111a n * 3 tung \u0111\u1ed9 kh\u00e1c nhau\n    ll res = 0;\n    for (auto e : events) {\n        if (e.type == 1) FT.update(e.y, 1);\n        else if (e.type == 2) FT.update(e.y, -1);\n        else res += FT.query(e.y, e.y2);\n    }\n\n    cout &lt;&lt; res;\n}\n</code></pre>"},{"location":"algo/geometry/Sweep-Line/#bai-toan-tim-tong-dien-tich-phu-boi-cac-hinh-chu-nhat","title":"B\u00e0i to\u00e1n t\u00ecm t\u1ed5ng di\u1ec7n t\u00edch ph\u1ee7 b\u1edfi c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt","text":"<p>Link b\u00e0i: VNOJ - AREA</p>"},{"location":"algo/geometry/Sweep-Line/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Tr\u00ean m\u1eb7t ph\u1eb3ng to\u1ea1 \u0111\u1ed9, ta v\u1ebd \\(N\\) h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 c\u00e1c c\u1ea1nh song song v\u1edbi tr\u1ee5c to\u1ea1 \u0111\u1ed9. T\u00ednh t\u1ed5ng di\u1ec7n t\u00edch che ph\u1ee7 b\u1edfi \\(N\\) h\u00ecnh ch\u1eef nh\u1eadt n\u00e0y.</p> <p>Gi\u1edbi h\u1ea1n:</p> <ul> <li>\\(1 \\leqslant n \\leqslant 10000\\)</li> <li>M\u1ed7i h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 to\u1ea1 \u0111\u1ed9 g\u00f3c tr\u00e1i d\u01b0\u1edbi v\u00e0 g\u00f3c ph\u1ea3i tr\u00ean l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(x_1\\), \\(y_1\\) v\u00e0 \\(x_2\\), \\(y_2\\) sao cho \\(0 \\leqslant x_1 \\leqslant x_2 \\leqslant 30000\\) v\u00e0 \\(0 \\leqslant y_1 \\leqslant y_2 \\leqslant 30000\\)</li> </ul>"},{"location":"algo/geometry/Sweep-Line/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i to\u00e1n t\u00ecm giao \u0111i\u1ec3m c\u1ee7a c\u00e1c \u0111o\u1ea1n th\u1eb3ng, ch\u00fang ta c\u00f3 th\u1ec3 x\u1eed l\u00ed b\u1eb1ng c\u00e1ch bi\u1ec3u di\u1ec5n m\u1ed7i h\u00ecnh ch\u1eef nh\u1eadt th\u00e0nh hai \"s\u1ef1 ki\u1ec7n\" - m\u1ed9t bi\u1ec3u th\u1ecb cho c\u1ea1nh b\u00ean tr\u00e1i v\u00e0 m\u1ed9t bi\u1ec3u th\u1ecb cho c\u1ea1nh b\u00ean ph\u1ea3i c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt - v\u00e0 duy tr\u00ec m\u1ed9t t\u1eadp \\(S\\) ch\u1ee9a c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt m\u00e0 \u0111o\u1ea1n th\u1eb3ng qu\u00e9t c\u1ee7a ch\u00fang ta \u0111ang c\u1eaft qua. Khi ch\u00fang ta qu\u00e9t qua c\u1ea1nh b\u00ean tr\u00e1i, ta th\u00eam h\u00ecnh ch\u1eef nh\u1eadt \u0111\u00f3 v\u00e0o \\(S\\), khi qu\u00e9t qua c\u1ea1nh b\u00ean ph\u1ea3i th\u00ec ta xo\u00e1 h\u00ecnh ch\u1eef nh\u1eadt t\u01b0\u01a1ng \u1ee9ng kh\u1ecfi \\(S\\).</p> <p> /uploads/Sweep-Line_img4.png </p> <p>Ta bi\u1ebft \u0111\u01b0\u1ee3c nh\u1eefng h\u00ecnh ch\u1eef nh\u1eadt n\u00e0o \u0111ang b\u1ecb c\u1eaft b\u1edfi \u0111\u01b0\u1eddng qu\u00e9t c\u1ee7a ch\u00fang ta (m\u00e0u \u0111\u1ecf). \u0110\u1ec3 t\u00ecm t\u1ed5ng di\u1ec7n t\u00edch \u0111\u01b0\u1ee3c bao ph\u1ee7, ta s\u1ebd t\u00ecm di\u1ec7n t\u00edch t\u1eebng ph\u1ea7n b\u1ecb bao ph\u1ee7 gi\u1eefa m\u1ed7i c\u1eb7p hai \"s\u1ef1 ki\u1ec7n\" li\u1ec1n nhau v\u00e0 t\u00ednh t\u1ed5ng c\u1ee7a ch\u00fang. \u0110\u1ec3 t\u00ecm ph\u1ea7n di\u1ec7n t\u00edch \u0111\u01b0\u1ee3c bao ph\u1ee7 gi\u1eefa hai s\u1ef1 ki\u1ec7n li\u1ec1n nhau, ta c\u1ea7n bi\u1ebft t\u1ed5ng \u0111\u1ed9 d\u00e0i ph\u1ea7n \u0111\u01b0\u1eddng qu\u00e9t \u0111i qua ch\u00fang (n\u00e9t li\u1ec1n m\u00e0u xanh trong h\u00ecnh tr\u00ean). Nh\u00e2n \u0111\u1ed9 d\u00e0i n\u00e0y v\u1edbi kho\u1ea3ng c\u00e1ch gi\u1eefa hai s\u1ef1 ki\u1ec7n li\u1ec1n nhau, ta \u0111\u01b0\u1ee3c di\u1ec7n t\u00edch c\u1ee7a ph\u1ea7n h\u00ecnh ch\u1eef nh\u1eadt gi\u1eefa hai \"s\u1ef1 ki\u1ec7n\" \u0111\u00f3.</p> <p>V\u1ea5n \u0111\u1ec1 \u0111\u1eb7t ra l\u00e0 l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm t\u1ed5ng \u0111\u1ed9 d\u00e0i c\u1ee7a c\u00e1c ph\u1ea7n \"n\u00e9t li\u1ec1n m\u00e0u xanh\" nh\u01b0 tr\u00ean h\u00ecnh. Nh\u1edb r\u1eb1ng t\u1ea1i m\u1ed7i b\u01b0\u1edbc ta duy tr\u00ec m\u1ed9t t\u1eadp \\(S\\) c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt m\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng qu\u00e9t c\u1eaft qua. Hi\u1ec3n nhi\u00ean ta th\u1ea5y t\u1ed5ng \u0111\u1ed9 d\u00e0i c\u1ee7a ph\u1ea7n \"n\u00e9t li\u1ec1n m\u00e0u xanh\" ch\u00ednh l\u00e0 h\u1ee3p c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt trong t\u1eadp \\(S\\) t\u1ea1i m\u1ed7i b\u01b0\u1edbc.</p> <p>\u0110\u1ec3 t\u00ednh h\u1ee3p c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt trong t\u1eadp \\(S\\), m\u1ed9t thu\u1eadt to\u00e1n \u0111\u01a1n gi\u1ea3n l\u00e0 ta s\u1ebd duy\u1ec7t qua h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt hi\u1ec7n c\u00f3 trong \\(S\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n khi n\u00e0y l\u00e0 \\(O(n^2)\\) - ch\u00fang ta duy\u1ec7t qua \\(O(n)\\) s\u1ef1 ki\u1ec7n, t\u1ea1i m\u1ed7i \"s\u1ef1 ki\u1ec7n\", ta l\u1ea1i duy\u1ec7t qua \\(O(n)\\) h\u00ecnh ch\u1eef nh\u1eadt m\u00e0 \u0111\u01b0\u1eddng qu\u00e9t c\u1ee7a ch\u00fang ta \u0111ang c\u1eaft (d\u0129 nhi\u00ean ch\u00fang ta c\u0169ng ph\u1ea3i th\u00eam c\u00e1c h\u00ecnh m\u1edbi v\u00e0 xo\u00e1 b\u1edbt nh\u1eefng h\u00ecnh m\u00e0 \u0111\u01b0\u1eddng qu\u00e9t kh\u00f4ng c\u00f2n c\u1eaft kh\u1ecfi t\u1eadp \\(S\\)).</p> <p>Minh h\u1ecda thu\u1eadt to\u00e1n:  </p> <p></p> <p>\u0110\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n, ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng k\u0129 thu\u1eadt n\u00e9n s\u1ed1 v\u00e0 c\u00e2y ph\u00e2n \u0111o\u1ea1n. Ta s\u1ebd n\u00e9n ho\u00e0nh \u0111\u1ed9 c\u1ee7a c\u00e1c \"s\u1ef1 ki\u1ec7n\" th\u00e0nh \\(O(n)\\) \u0111i\u1ec3m, c\u00e1c \u0111i\u1ec3m n\u00e0y chia \u0111\u01b0\u1eddng th\u1eb3ng qu\u00e9t c\u1ee7a ch\u00fang ta th\u00e0nh \\(O(n)\\) \u0111o\u1ea1n th\u1eb3ng con. Ta d\u1ef1ng c\u00e2y ph\u00e2n \u0111o\u1ea1n v\u1edbi \\(O(n)\\) \u0111o\u1ea1n th\u1eb3ng con n\u00e0y l\u00e0 c\u00e1c n\u00fat l\u00e1. T\u1ea1i m\u1ed7i n\u00fat trong c\u00e2y ph\u00e2n \u0111o\u1ea1n ta s\u1ebd l\u01b0u hai gi\u00e1 tr\u1ecb \u0111\u1ec3 tr\u1ea3 l\u1eddi cho hai c\u00e2u h\u1ecfi:</p> <p>1) Hi\u1ec7n c\u00f3 bao nhi\u00eau h\u00ecnh ch\u1eef nh\u1eadt \u0111ang ph\u1ee7 \u0111o\u1ea1n con m\u00e0 n\u00fat qu\u1ea3n l\u00fd? 2) T\u1ed5ng \u0111\u1ed9 d\u00e0i c\u00e1c ph\u1ea7n \u0111\u01b0\u1ee3c \u00edt nh\u1ea5t m\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt ph\u1ee7 trong \u0111o\u1ea1n con m\u00e0 n\u00fat qu\u1ea3n l\u00fd l\u00e0 bao nhi\u00eau?</p> <p>Chi ti\u1ebft vi\u1ec7c c\u1eadp nh\u1eadt hai gi\u00e1 tr\u1ecb t\u1ea1i m\u1ed7i b\u01b0\u1edbc \u0111\u1ed9c gi\u1ea3 c\u00f3 th\u1ec3 tham kh\u1ea3o trong c\u00e0i \u0111\u1eb7t m\u1eabu.</p>"},{"location":"algo/geometry/Sweep-Line/#cai-at-mau_2","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MX = 30000;\n\nstruct Segment{\n    int x, y1, y2, type;\n\n    bool operator &lt; (const Segment&amp; other) const {\n        return x &lt; other.x;\n    }\n};\n\nstruct SegmentTree{\n    vector&lt;pair&lt;int, int&gt;&gt; s;\n\n    SegmentTree(int n) : s(n * 4 + 5) {\n        for (int i = 1; i &lt;= 4 * n; i++) s[i] = {0, 0};\n    }\n\n    void update(int id, int l, int r, int tl, int tr, int val) {\n        if (l &gt; tr || r &lt; tl) return;\n        if (l &gt;= tl &amp;&amp; r &lt;= tr) {\n            s[id].second += val;\n            if (s[id].second != 0) s[id].first = r - l + 1;\n            else if (l != r) s[id].first = s[id * 2].first + s[id * 2 + 1].first;\n            else s[id].first = 0;\n            return;\n        }\n\n        int m = (l + r) &gt;&gt; 1;\n        update(id * 2, l, m, tl, tr, val);\n        update(id * 2 + 1, m + 1, r, tl, tr, val);\n\n        if (s[id].second != 0) s[id].first = r - l + 1;\n        else s[id].first = s[id * 2].first + s[id * 2 + 1].first;\n    }\n};\n\nint n;\nvector&lt;Segment&gt; segments;\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) {\n        int x1, y1, x2, y2;\n        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;\n\n        segments.push_back({x1, y1, y2, 1});\n        segments.push_back({x2, y1, y2, -1});\n    }\n\n    sort(segments.begin(), segments.end());\n\n    SegmentTree ST(MX);\n    int res = 0;\n    for (int i = 0; i &lt; (int)segments.size() - 1; i++) {\n        ST.update(1, 0, MX, segments[i].y1, segments[i].y2 - 1, segments[i].type);\n        res += (segments[i + 1].x - segments[i].x) * ST.s[1].first;\n    }\n    cout &lt;&lt; res;\n}\n</code></pre>"},{"location":"algo/geometry/Sweep-Line/#bai-toan-tim-cay-khung-manhattan-nho-nhat","title":"B\u00e0i to\u00e1n t\u00ecm c\u00e2y khung Manhattan nh\u1ecf nh\u1ea5t","text":"<p>Link b\u00e0i: Kattis - GRIDMST</p>"},{"location":"algo/geometry/Sweep-Line/#e-bai_3","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \\(N\\) \u0111i\u1ec3m (c\u00f3 th\u1ec3 tr\u00f9ng nhau). Tr\u1ecdng s\u1ed1 gi\u1eefa m\u1ed7i \u0111\u1ec9nh l\u00e0 kho\u1ea3ng c\u00e1ch Manhattan gi\u1eefa ch\u00fang. T\u00ecm tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e2y khung nh\u1ecf nh\u1ea5t qua \\(N\\) \u0111i\u1ec3m \u0111\u00f3.</p> <p>Gi\u1edbi h\u1ea1n:</p> <ul> <li>\\(1 \\leqslant N \\leqslant 100000\\)</li> <li>\\(N\\) d\u00f2ng, m\u1ed7i d\u00f2ng 2 s\u1ed1 nguy\u00ean \\(x\\), \\(y\\) sao cho \\(0 \\leqslant x, y \\leqslant 1000\\) l\u00e0 to\u1ea1 \u0111\u1ed9 m\u1ed7i \u0111i\u1ec3m.</li> </ul>"},{"location":"algo/geometry/Sweep-Line/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<p>\u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt gi\u1ea3i l\u00e0 n\u1ebfu nh\u01b0 s\u1ed1 c\u1ea1nh ta c\u1ea7n x\u00e9t l\u00e0 \\(O(n)\\) th\u00ec ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t nh\u01b0 Kruskal hay Prim \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n trong \\(O(n \\log{n})\\).</p> <p>B\u1ed5 \u0111\u1ec1 2</p> <p>X\u00e9t m\u1ed9t \u0111i\u1ec3m \\(P\\) cho tr\u01b0\u1edbc b\u1ea5t k\u00ec. L\u1ea5y g\u1ed1c to\u1ea1 \u0111\u1ed9 t\u1ea1i \\(P\\). Chia m\u1eb7t ph\u1eb3ng to\u1ea1 \u0111\u1ed9 th\u00e0nh \\(8\\) ph\u1ea7n b\u1eb1ng nhau nh\u01b0 h\u00ecnh d\u01b0\u1edbi. V\u1edbi m\u1ed7i ph\u1ea7n t\u00e1m, n\u1ed1i \\(P\\) v\u1edbi m\u1ed9t \u0111i\u1ec3m b\u1ea5t k\u00ec trong ph\u1ea7n t\u00e1m \u0111\u00f3 c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan g\u1ea7n nh\u1ea5t v\u1edbi \\(P\\) (n\u1ebfu c\u00f3). Ch\u1eb3ng h\u1ea1n trong v\u00ed d\u1ee5 \u1edf h\u00ecnh d\u01b0\u1edbi, ta s\u1ebd n\u1ed1i \\(P\\) v\u1edbi \\(Q\\).</p> <p> </p> <p>Th\u1ef1c hi\u1ec7n thao t\u00e1c tr\u00ean v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c cho, ta thu \u0111\u01b0\u1ee3c m\u1ed9t \u0111\u1ed3 th\u1ecb \\(G\\) c\u00f3 \\(O(n)\\) c\u1ea1nh. Ta s\u1ebd ch\u1ee9ng minh r\u1eb1ng c\u00e2y khung nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u1ed3 th\u1ecb \\(G\\) l\u00e0 m\u1ed9t \u0111\u00e1p \u00e1n cho b\u00e0i to\u00e1n.</p> <p>Ch\u1ee9ng minh</p> <p>Ta s\u1ebd ch\u1ee9ng minh r\u1eb1ng c\u00e1c c\u1ea1nh trong c\u00e2y khung nh\u1ecf nh\u1ea5t \\(T\\) c\u1ee7a t\u1eadp \u0111i\u1ec3m ban \u0111\u1ea7u c\u0169ng thu\u1ed9c \u0111\u1ed3 th\u1ecb \\(G\\).</p> <p>X\u00e9t c\u1ea1nh \\((u, v) \\in T\\). Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(v\\) thu\u1ed9c ph\u1ea7n t\u00e1m th\u1ee9 nh\u1ea5t so v\u1edbi \\(u\\). Gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i m\u1ed9t \u0111i\u1ec3m \\(w\\) trong t\u1eadp \u0111i\u1ec3m ban \u0111\u1ea7u sao cho \\(d(u, w) &lt; d(u, v)\\). \u0110\u1ed3ng th\u1eddi ta bi\u1ebft r\u1eb1ng \\(d(v, w) &lt; d(u, v)\\) (nh\u00ecn h\u00ecnh minh ho\u1ea1 b\u00ean d\u01b0\u1edbi). Do \u0111\u00f3 ta s\u1ebd c\u00f3 m\u1ed9t c\u00e2y khung nh\u1ecf h\u01a1n n\u1ebfu ta b\u1ecf \\((u, v)\\) v\u00e0 thay b\u1eb1ng m\u1ed9t trong hai c\u1ea1nh \\((u, w)\\) hay \\((v, w)\\). \u0110i\u1ec1u n\u00e0y tr\u00e1i gi\u1ea3 thi\u1ebft \\(T\\) l\u00e0 c\u00e2y khung nh\u1ecf nh\u1ea5t. Do \u0111\u00f3, kh\u00f4ng t\u1ed3n t\u1ea1i \u0111i\u1ec3m \\(w\\) sao cho \\(d(u, w) &lt; d(u, v)\\) - t\u1ee9c \\(v\\) l\u00e0 \u0111i\u1ec3m trong ph\u1ea7n t\u00e1m th\u1ee9 nh\u1ea5t c\u1ee7a \\(u\\) c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan g\u1ea7n nh\u1ea5t. Ch\u1ee9ng minh t\u01b0\u01a1ng t\u1ef1 v\u1edbi c\u00e1c tr\u01b0\u1eddng h\u1ee3p \\(v\\) thu\u1ed9c c\u00e1c ph\u1ea7n t\u00e1m c\u00f2n l\u1ea1i c\u1ee7a \\(u\\).</p> /uploads/Sweep-Line_img6.png \\(\\forall w\\) thu\u1ed9c v\u00f9ng m\u00e0u xanh, \\(d(v, w) \\leq d(u, v)\\) <p>Qua b\u1ed5 \u0111\u1ec1 2, ta th\u1ea5y b\u00e0i to\u00e1n \u0111\u1eb7t ra hi\u1ec7n t\u1ea1i l\u00e0 l\u00e0m sao \u0111\u1ec3 d\u1ef1ng \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb \\(G\\) hi\u1ec7u qu\u1ea3. D\u1ec5 th\u1ea5y \u0111\u1ec3 d\u1ef1ng \u0111\u1ed3 th\u1ecb \\(G\\), v\u1edbi m\u1ed7i \u0111i\u1ec3m \\(P\\) cho tr\u01b0\u1edbc, ta c\u1ea7n t\u00ecm \\(8\\) \u0111i\u1ec3m c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan g\u1ea7n \\(P\\) nh\u1ea5t cho m\u1ed7i ph\u1ea7n t\u00e1m. D\u01b0\u1edbi \u0111\u00e2y b\u00e0i vi\u1ebft s\u1ebd m\u00f4 t\u1ea3 thu\u1eadt to\u00e1n t\u00ecm \u0111i\u1ec3m c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan g\u1ea7n nh\u1ea5t trong ph\u1ea7n t\u00e1m th\u1ee9 \\(1\\) cho \\(n\\) \u0111i\u1ec3m. Nh\u01b0 v\u1eady c\u00f3 th\u1ec3 t\u00ecm \u0111i\u1ec3m kho\u1ea3ng c\u00e1ch Manhattan g\u1ea7n cho \\(7\\) ph\u1ea7n t\u00e1m c\u00f2n l\u1ea1i b\u1eb1ng c\u00e1ch t\u01b0\u01a1ng t\u1ef1.</p> <p>B\u1ed5 \u0111\u1ec3 3</p> <p>G\u1ecdi \\(d(P, Q)\\) l\u00e0 kho\u1ea3ng c\u00e1ch Manhattan gi\u1eefa hai \u0111i\u1ec3m \\(P\\) v\u00e0 \\(Q\\). G\u1ecdi \\(A(x_A, y_A)\\), \\(B(x_B, y_B)\\), \\(C(x_C, y_C)\\), \\(D(x_D, y_D)\\) l\u00e0 b\u1ed1n \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng sao cho \\(x_A, x_B \\leqslant x_C, x_D\\) v\u00e0 \\(y_A, y_B \\leqslant y_C, y_D\\). Ta c\u00f3 \\(d(A, C) \\leqslant d(A, D)\\) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \\(d(B, C) \\leqslant d(B, D)\\).</p> <p>Ch\u1ee9ng minh \\(\\(\\begin{align} d(A, C) &amp;\\leqslant d(A, D)\\\\ x_C - x_A + y_C - y_A &amp;\\leqslant x_D - x_A + y_D - y_A\\\\ x_C + y_C &amp;\\leqslant x_D + y_D\\\\ x_C - x_B + y_C - y_B &amp;\\leqslant x_D - x_B + y_D - y_B\\\\ d(B, C) &amp;\\leqslant d(B, D) \\end{align}\\)\\)</p> <p>Ta s\u1ebd s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p chia \u0111\u1ec3 tr\u1ecb \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n. \u0110\u1ea7u ti\u00ean ta s\u1ebd s\u1eafp x\u1ebfp \\(n\\) \u0111i\u1ec3m theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n v\u1ec1 ho\u00e0nh \u0111\u1ed9. T\u1ea1i m\u1ed7i b\u01b0\u1edbc ta chia \\(n\\) \u0111i\u1ec3m th\u00e0nh \\(2\\) t\u1eadp con \\(L\\) v\u00e0 \\(R\\). G\u1ecdi \u0111\u1ec7 quy gi\u1ea3i b\u00e0i to\u00e1n v\u1edbi t\u1eebng t\u1eadp con. Nh\u1eadn x\u00e9t r\u1eb1ng l\u1eddi gi\u1ea3i cho t\u1eadp \\(R\\) c\u0169ng ch\u00ednh l\u00e0 l\u1eddi gi\u1ea3i \u0111\u00fang, do \u0111\u00f3 ta ch\u1ec9 c\u1ea7n c\u1eadp nh\u1eadt l\u1eddi gi\u1ea3i cho c\u00e1c \u0111i\u1ec3m trong t\u1eadp \\(L\\).</p> <p>S\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m trong \\(L\\) v\u00e0 \\(R\\) theo chi\u1ec1u gi\u1ea3m d\u1ea7n c\u1ee7a tung \u0111\u1ed9. Ta s\u1ebd duy tr\u00ec \\(3\\) con tr\u1ecf: con tr\u1ecf 1 duy\u1ec7t c\u00e1c \u0111i\u1ec3m trong \\(L\\) theo chi\u1ec1u gi\u1ea3m d\u1ea7n v\u1ec1 tung \u0111\u1ed9, con tr\u1ecf 2 v\u00e0 3 duy\u1ec7t c\u00e1c \u0111i\u1ec3m trong \\(R\\) c\u0169ng theo chi\u1ec1u gi\u1ea3m d\u1ea7n v\u1ec1 tung \u0111\u1ed9.</p> <p>D\u00f9ng con tr\u1ecf 1 \u0111\u1ec3 duy\u1ec7t c\u00e1c \u0111i\u1ec3m trong \\(L\\). G\u1ecdi \u0111i\u1ec3m \u0111ang \u0111\u01b0\u1ee3c con tr\u1ecf 1 tr\u1ecf \u0111\u1ebfn l\u00e0 \\(T(x_T, y_T)\\). D\u00f9ng con tr\u1ecf 2 \u0111\u1ec3 duy\u1ec7t c\u00e1c \u0111i\u1ec3m trong \\(R\\) sao cho c\u00e1c \u0111i\u1ec3m \u0111i qua lu\u00f4n c\u00f3 tung \u0111\u1ed9 kh\u00f4ng b\u00e9 h\u01a1n \\(y_T\\). Con tr\u1ecf 3 tr\u1ecf \u0111\u1ebfn \u0111i\u1ec3m c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan nh\u1ecf nh\u1ea5t v\u1edbi \\(T\\) hi\u1ec7n t\u1ea1i (g\u1ecdi \u0111i\u1ec3m con tr\u1ecf 3 \u0111ang tr\u1ecf \u0111\u1ebfn l\u00e0 \\(U\\)). T\u1ea1i m\u1ed7i b\u01b0\u1edbc trong qu\u00e1 tr\u00ecnh l\u1eb7p, c\u00f3 \\(3\\) kh\u1ea3 n\u0103ng:</p> <p>1) \u0110i\u1ec3m \u0111\u01b0\u1ee3c con tr\u1ecf 2 tr\u1ecf t\u1edbi c\u00f3 tung \u0111\u1ed9 b\u00e9 h\u01a1n tung \u0111\u1ed9 c\u1ee7a \\(T\\): Ta so s\u00e1nh kho\u1ea3ng c\u00e1ch Manhattan gi\u1eefa \\(T\\) v\u00e0 \\(U\\) v\u00e0 \u0111\u00e1p \u00e1n ta c\u00f3 nh\u1edd g\u1ecdi \u0111\u1ec7 quy l\u00ean \\(L\\), c\u1eadp nh\u1eadt \u0111\u00e1p \u00e1n cho \\(T\\), \u0111\u1ed3ng th\u1eddi di con tr\u1ecf 1 \u0111\u1ebfn \u0111i\u1ec3m ti\u1ebfp theo. 2) \u0110i\u1ec3m \u0111\u01b0\u1ee3c con tr\u1ecf 2 tr\u1ecf t\u1edbi c\u00f3 tung \u0111\u1ed9 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng tung \u0111\u1ed9 c\u1ee7a \\(T\\) v\u00e0 c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan t\u1edbi \\(T\\) l\u1edbn h\u01a1n kho\u1ea3ng c\u00e1ch Manhattan gi\u1eefa \\(T\\) v\u00e0 \\(U\\): Khi n\u00e0y ta kh\u00f4ng l\u00e0m g\u00ec c\u1ea3. 3) \u0110i\u1ec3m \u0111\u01b0\u1ee3c con tr\u1ecf 2 tr\u1ecf t\u1edbi c\u00f3 tung \u0111\u1ed9 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng tung \u0111\u1ed9 c\u1ee7a \\(T\\) v\u00e0 c\u00f3 kho\u1ea3ng c\u00e1ch Manhattan t\u1edbi \\(T\\) b\u00e9 h\u01a1n kho\u1ea3ng c\u00e1ch Manhattan gi\u1eefa \\(T\\) v\u00e0 \\(U\\): Khi n\u00e0y ta tr\u1ecf con tr\u1ecf 3 \u0111\u1ebfn \u0111i\u1ec3m \u0111ang \u0111\u01b0\u1ee3c tr\u1ecf b\u1edbi con tr\u1ecf 2.</p> <p>Nh\u1edd c\u00f3 t\u00ednh ch\u1ea5t \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp trong b\u1ed5 \u0111\u1ec1 3, ta nh\u1eadn th\u1ea5y v\u00f2ng l\u1eb7p tr\u00ean s\u1ebd cho ch\u00fang ta \u0111\u00e1p \u00e1n ch\u00ednh x\u00e1c. C\u1ea3 ba con tr\u1ecf \u0111\u1ec1u \"th\u0103m\" m\u1ed7i \u0111i\u1ec3m trong \\(L\\) ho\u1eb7c \\(R\\) \u0111\u00fang m\u1ed9t l\u1ea7n n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1eadp c\u1ee7a m\u1ed7i \"t\u1ea7ng\" trong c\u00e2y \u0111\u1ec7 quy c\u1ee7a ch\u00fang ta s\u1ebd l\u00e0 \\(O(n)\\). Do ta s\u1ebd c\u00f3 \\(O(\\log{n})\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean l\u00e0 \\(O(n \\log{n})\\).</p>"},{"location":"algo/geometry/Sweep-Line/#cai-at-mau_3","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"<p>C\u1ea3m \u01a1n b\u1ea1n Tr\u1ea7n Xu\u00e2n B\u00e1ch (HUS High School for Gifted Students) \u0111\u00e3 \u0111\u00f3ng g\u00f3p v\u00e0o \u0111o\u1ea1n code n\u00e0y.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int INF = 1e8;\n\nstruct Point {\n    int x, y, id;\n    int diff_yx() const { return y - x; }\n    int sum_xy() const { return x + y; }\n};\n\nint manhattan_dist(const Point&amp; u, const Point&amp; v) {\n    return abs(u.x - v.x) + abs(u.y - v.y);\n}\n\nstruct DSU {\n    vector&lt;int&gt; par;\n    DSU() {}\n    DSU(int n): par(n, -1) {}\n\n    int find_set(int u) {\n        return par[u] &lt; 0 ? u : par[u] = find_set(par[u]);\n    }\n\n    bool join(int u, int v) {\n        u = find_set(u);\n        v = find_set(v);\n        if (u == v) return false;\n        if (-par[u] &lt; -par[v]) swap(u, v);\n        par[u] += par[v];\n        par[v] = u;\n        return true;\n    }\n};\n\nstruct Edge {\n    int u, v, cost;\n};\n\nbool operator&lt;(const Edge&amp; u, const Edge&amp; v) {\n    return u.cost &lt; v.cost;\n}\n\nEdge edge_from_point(const Point&amp; u, const Point&amp; v) {\n    return {u.id, v.id, manhattan_dist(u, v)};\n}\n\nvector&lt;Edge&gt; potential_edges; // C\u00e1c c\u1ea1nh t\u1ed1i \u01b0u c\u1ea7n x\u00e9t\nvector&lt;Point&gt; solve_single_recur(vector&lt;Point&gt; p) {\n    if (p.size() &lt;= 1) return p;\n    int upper_size = (int)p.size() / 2;\n    auto upper = solve_single_recur({p.begin(), p.begin() + upper_size});\n    auto lower = solve_single_recur({p.begin() + upper_size, p.end()});\n    vector&lt;Point&gt; res;\n\n    Point min_diff_yx{0, INF, -1};\n\n    int upper_ptr = 0;\n    for (auto lo : lower) {\n        while (upper_ptr &lt; upper_size and upper[upper_ptr].sum_xy() &lt;= lo.sum_xy()) {\n            if (min_diff_yx.diff_yx() &gt; upper[upper_ptr].diff_yx()) {\n                min_diff_yx = upper[upper_ptr];\n            }\n            res.push_back(upper[upper_ptr]);\n            ++upper_ptr;\n        }\n        if (min_diff_yx.id != -1) {\n            potential_edges.push_back(edge_from_point(min_diff_yx, lo));\n        }\n        res.push_back(lo);\n    }\n\n    res.insert(res.end(), upper.begin() + upper_ptr, upper.end());\n    return res;\n}\n\nvoid solve_single(vector&lt;Point&gt; p) { // Gi\u1ea3i b\u00e0i to\u00e1n v\u1edbi m\u1ed9t g\u00f3c ph\u1ea7n t\u00e1m\n    sort(p.begin(), p.end(), [](const Point&amp; u, const Point&amp; v) {\n        return u.y == v.y ? u.x &lt; v.x : u.y &gt; v.y;\n    });\n    solve_single_recur(p);\n}\n\nvoid rotate_90(vector&lt;Point&gt;&amp; p) { // Xoay t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m 90 \u0111\u1ed9\n    for (auto&amp; cur: p) {\n        int x = cur.x, y = cur.y;\n        cur.x = -y;\n        cur.y = x;\n    }\n}\nvoid flip(vector&lt;Point&gt;&amp; p) { // \u0110\u1ed1i x\u1ee9ng c\u00e1c \u0111i\u1ec3m qua tr\u1ee5c Ox\n    for (auto&amp; cur: p) {\n        cur.y = -cur.y;\n    }\n}\n\nint solve(vector&lt;Point&gt; p) {\n    for (int ft = 0; ft &lt; 2; ++ft) {\n        for (int i = 0; i &lt; 4; ++i) {\n            solve_single(p);\n            rotate_90(p);\n        }\n        flip(p);\n    }\n\n    int ans = 0;\n    DSU dsu((int)p.size());\n    sort(potential_edges.begin(), potential_edges.end());\n\n    for (const auto&amp; e : potential_edges) {\n        if (dsu.join(e.u, e.v)) {\n            ans += e.cost;\n        }\n    }\n    // Thu\u1eadt to\u00e1n kruskal\n\n    return ans;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    int n;\n    cin &gt;&gt; n;\n\n    vector&lt;Point&gt; p(n);\n    for (int i = 0; i &lt; n; ++i) {\n        cin &gt;&gt; p[i].x &gt;&gt; p[i].y;\n        p[i].id = i;\n    }\n\n    cout &lt;&lt; solve(p);\n}\n</code></pre>"},{"location":"algo/geometry/Sweep-Line/#bai-tap-vi-du","title":"B\u00e0i t\u1eadp v\u00ed d\u1ee5","text":"<p>TopCoder - BoxUnion</p> <p>TopCoder - CultureGrowth</p> <p>TopCoder - PowerSupply</p> <p>TopCoder - ConvexPolygons</p> <p>SPOJ - CEPC08B</p> <p>USACO - Square Overlap</p> <p>CF - 1402B</p> <p>CSA - The Sprawl</p>"},{"location":"algo/geometry/Sweep-Line/#ket","title":"K\u1ebft","text":"<p>Gi\u1ed1ng nh\u01b0 quy ho\u1ea1ch \u0111\u1ed9ng, thu\u1eadt to\u00e1n \u0111\u01b0\u1eddng qu\u00e9t l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 m\u1ea1nh v\u00ec n\u00f3 kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n, m\u00e0 c\u00f2n l\u00e0 m\u1ed9t d\u1ea1ng thu\u1eadt to\u00e1n m\u00e0 c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 gi\u1ea3i m\u1ed9t ph\u1ea1m vi c\u00e1c b\u00e0i to\u00e1n r\u1ea5t r\u1ed9ng, bao g\u1ed3m m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00f4ng \u0111\u01b0\u1ee3c n\u00eau \u1edf \u0111\u00e2y (nh\u01b0 ph\u00e9p tam gi\u00e1c h\u00f3a Delaunay) v\u00e0 c\u1ea3 c\u00e1c d\u1ea1ng m\u1edbi ch\u1ec9 xu\u1ea5t hi\u1ec7n l\u1ea7n \u0111\u1ea7u trong m\u1ed9t cu\u1ed9c thi.</p>"},{"location":"algo/geometry/Sweep-Line/#tham-khao","title":"Tham kh\u1ea3o","text":"<ol> <li>bmerry, TopCoder: Line Sweep Algorithm</li> <li>Leo J. Guibas, Jorge Stolfi, On computing all north-east nearest neighbors in the L1 metric</li> <li>C\u00e1c gif \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi manim, m\u00e3 ngu\u1ed3n t\u1ea1i \u0111\u00e2y v\u00e0 \u0111\u00e2y</li> </ol>"},{"location":"algo/geometry/basic-geometry-1/","title":"H\u00ecnh h\u1ecdc t\u00ednh to\u00e1n ph\u1ea7n 1: Nh\u1eefng kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n","text":"<p>T\u00e1c gi\u1ea3:  - L\u00ea Minh Ho\u00e0ng - Ph\u1ed5 th\u00f4ng N\u0103ng khi\u1ebfu, \u0110HQG-HCM</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM</p> <p>H\u00ecnh h\u1ecdc m\u1eb7c d\u00f9 l\u00e0 m\u1ed9t ch\u1ee7 \u0111\u1ec1 h\u1ebft s\u1ee9c ph\u1ed5 bi\u1ebfn, song v\u1eabn c\u00f2n r\u1ea5t nhi\u1ec1u ng\u01b0\u1eddi kh\u00f4ng th\u00edch gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n h\u00ecnh h\u1ecdc v\u00ec ch\u00fang kh\u00e1 kh\u00f3 ch\u1ecbu v\u00e0 l\u1eb1ng nh\u1eb1ng. Do \u0111\u00f3, trong b\u00e0i vi\u1ebft n\u00e0y, ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u m\u1ed9t v\u00e0i kh\u00e1i ni\u1ec7m nh\u1eb1m gi\u00fap cho c\u00e1c b\u00e0i to\u00e1n h\u00ecnh h\u1ecdc tr\u1edf n\u00ean b\u1edbt \u0111\u00e1ng s\u1ee3 h\u01a1n.</p> <p>N\u1ebfu \u0111\u00e3 n\u1eafm v\u1eefng c\u00e1c kh\u00e1i ni\u1ec7m trong b\u00e0i vi\u1ebft n\u00e0y, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 chuy\u1ec3n sang ph\u1ea7n 2.</p>"},{"location":"algo/geometry/basic-geometry-1/#vector","title":"Vector","text":"<p>Vector l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 c\u1ea3 \u0111\u1ed9 l\u1edbn v\u00e0 h\u01b0\u1edbng. H\u01b0\u1edbng c\u1ee7a vector l\u00e0 h\u01b0\u1edbng t\u1eeb \u0111i\u1ec3m \u0111\u1ea7u \u0111\u1ebfn \u0111i\u1ec3m cu\u1ed1i c\u1ee7a n\u00f3.</p> <p></p> <p>M\u1ed9t vector th\u01b0\u1eddng \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t tia (m\u1ed9t \u0111o\u1ea1n th\u1eb3ng c\u00f3 h\u01b0\u1edbng), ho\u1eb7c b\u1eb1ng \u0111\u1ed3 th\u1ecb d\u01b0\u1edbi d\u1ea1ng m\u1ed9t m\u0169i t\u00ean n\u1ed1i t\u1eeb \u0111i\u1ec3m \u0111\u1ea7u \\(A\\) t\u1edbi \u0111i\u1ec3m cu\u1ed1i \\(B\\), v\u00e0 \u0111\u01b0\u1ee3c k\u00fd hi\u1ec7u l\u00e0 \\(\\overrightarrow{\\rm AB}\\).</p> <p></p> <p>Trong h\u00ecnh h\u1ecdc ph\u1eb3ng, vector \\(\\overrightarrow{\\rm AB}\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi m\u1ed9t c\u1eb7p s\u1ed1 \\((x, y)\\) cho bi\u1ebft t\u1ecda \u0111\u1ed9 c\u1ee7a vector, \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng hi\u1ec7u c\u00e1c t\u1ecda \u0111\u1ed9 t\u01b0\u01a1ng \u1ee9ng c\u1ee7a \u0111i\u1ec3m cu\u1ed1i \\(B\\) v\u1edbi \u0111i\u1ec3m \u0111\u1ea7u \\(A\\):</p> \\[\\begin{cases} x = x_B - x_A \\\\ y = y_B - y_A \\end{cases}\\] <p>V\u00ed d\u1ee5: m\u1ed9t vector t\u1eeb \\(A(3, 1)\\) \u0111\u1ebfn \\(B(2, 3)\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi \\(\\overrightarrow{\\rm u} = (-1, 2)\\).</p> <p></p>"},{"location":"algo/geometry/basic-geometry-1/#o-lon-cua-vector","title":"\u0110\u1ed9 l\u1edbn c\u1ee7a vector","text":"<p>\u0110\u1ed9 l\u1edbn c\u1ee7a \\(1\\) vector \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng kho\u1ea3ng c\u00e1ch gi\u1eefa \u0111i\u1ec3m \u0111\u1ea7u v\u00e0 \u0111i\u1ec3m cu\u1ed1i c\u1ee7a n\u00f3. V\u00ed d\u1ee5: \u0110\u1ed9 l\u1edbn c\u1ee7a \\(\\overrightarrow{\\rm AB}(x,y)\\) k\u00ed hi\u1ec7u l\u00e0 \\(|\\overrightarrow{\\rm AB}|\\) v\u00e0 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng:</p> <p></p>"},{"location":"algo/geometry/basic-geometry-1/#phep-cong-tru-vector","title":"Ph\u00e9p c\u1ed9ng tr\u1eeb vector","text":"<p>C\u00f3 m\u1ed9t s\u1ed1 ph\u00e9p to\u00e1n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n tr\u00ean vector, \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ph\u00e9p c\u1ed9ng tr\u1eeb vector: b\u1ea1n c\u00f3 th\u1ec3 c\u1ed9ng tr\u1eeb 2 vector v\u1edbi nhau \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ed9t vector m\u1edbi.</p> <p>Xuy\u00ean su\u1ed1t b\u00e0i vi\u1ebft, ch\u00fang ta s\u1ebd d\u00f9ng d\u1ea5u c\u1ed9ng (+) v\u00e0 tr\u1eeb (-) \u0111\u1ec3 bi\u1ec3u di\u1ec5n cho ph\u00e9p c\u1ed9ng v\u00e0 tr\u1eeb vector.</p>"},{"location":"algo/geometry/basic-geometry-1/#phep-cong-2-vector","title":"Ph\u00e9p c\u1ed9ng 2 vector","text":"<p>Gi\u1ea3 s\u1eed ta c\u00f3 \\(2\\) vector \\(\\overrightarrow{\\rm u}(x_1, y_1)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(x_2, y_2)\\), t\u1ed5ng \\(\\overrightarrow{\\rm u}\\) v\u00e0 \\(\\overrightarrow{\\rm v}\\) \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c: \\(\\overrightarrow{\\rm u} + \\overrightarrow{\\rm v} = (x_1+x_2,y_1+y_2)\\).</p> <p></p> <p>L\u01b0u \u00fd: Th\u1ee9 t\u1ef1 c\u1ed9ng c\u00e1c vector kh\u00f4ng quan tr\u1ecdng, c\u0169ng gi\u1ed1ng nh\u01b0 ph\u00e9p c\u1ed9ng tr\u00ean s\u1ed1 (t\u00ednh giao ho\u00e1n). </p> <p></p>"},{"location":"algo/geometry/basic-geometry-1/#phep-tru-2-vector","title":"Ph\u00e9p tr\u1eeb 2 vector","text":""},{"location":"algo/geometry/basic-geometry-1/#vector-oi","title":"Vector \u0111\u1ed1i","text":"<p>Cho vector \\(\\overrightarrow{\\rm a}\\), vector c\u00f3 c\u00f9ng \u0111\u1ed9 l\u1edbn v\u00e0 ng\u01b0\u1ee3c h\u01b0\u1edbng v\u1edbi vector \\(\\overrightarrow{\\rm a}\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 vector \u0111\u1ed1i c\u1ee7a vector \\(\\overrightarrow{\\rm a}\\), k\u00ed hi\u1ec7u l\u00e0 \\(-\\overrightarrow{\\rm a}\\). M\u1ed7i vector \u0111\u1ec1u c\u00f3 vector \u0111\u1ed1i, ch\u1eb3ng h\u1ea1n vector \u0111\u1ed1i c\u1ee7a \\(\\overrightarrow{\\rm AB}\\) l\u00e0 \\(\\overrightarrow{\\rm BA}\\), ngh\u0129a l\u00e0 \\(-\\overrightarrow{\\rm AB} = \\overrightarrow{\\rm BA}\\).</p> <p></p>"},{"location":"algo/geometry/basic-geometry-1/#inh-nghia-hieu-cua-2-vector","title":"\u0110\u1ecbnh ngh\u0129a hi\u1ec7u c\u1ee7a 2 vector","text":"<p>Hi\u1ec7u c\u1ee7a vector \\(\\overrightarrow{\\rm u}\\) v\u1edbi vector \\(\\overrightarrow{\\rm v}\\) ch\u00ednh l\u00e0 t\u1ed5ng c\u1ee7a \\(\\overrightarrow{\\rm u}\\) v\u00e0 \\(-\\overrightarrow{\\rm v}\\).</p> <p></p> <p>N\u1ebfu 2 vector c\u00f3 chung \u0111i\u1ec3m \u0111\u1ea7u th\u00ec vector hi\u1ec7u c\u00f3 h\u01b0\u1edbng t\u1eeb \u0111i\u1ec3m cu\u1ed1i c\u1ee7a \\(\\overrightarrow{\\rm v}\\) \u0111\u1ebfn \u0111i\u1ec3m cu\u1ed1i c\u1ee7a \\(\\overrightarrow{\\rm u}\\). V\u00ed d\u1ee5: \\(\\overrightarrow{\\rm OA} - \\overrightarrow{\\rm OB} = \\overrightarrow{\\rm BA}\\). N\u1ebfu 2 vector c\u00f3 chung \u0111i\u1ec3m cu\u1ed1i th\u00ec vector hi\u1ec7u c\u00f3 h\u01b0\u1edbng t\u1eeb \u0111i\u1ec3m \u0111\u1ea7u c\u1ee7a \\(\\overrightarrow{\\rm u}\\) \u0111\u1ebfn \u0111i\u1ec3m \u0111\u1ea7u c\u1ee7a \\(\\overrightarrow{\\rm v}\\). V\u00ed d\u1ee5: \\(\\overrightarrow{\\rm AO} - \\overrightarrow{\\rm BO} = \\overrightarrow{\\rm AB}\\).</p> <p></p> <p>Nh\u1ea5n v\u00e0o \u0111\u00e2y \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p>"},{"location":"algo/geometry/basic-geometry-1/#tich-vo-huong-dot-product","title":"T\u00edch v\u00f4 h\u01b0\u1edbng (Dot product)","text":"<p>Kh\u00f4ng nh\u01b0 ph\u00e9p c\u1ed9ng tr\u1eeb vector l\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i tr\u1ef1c quan v\u00e0 d\u1ec5 hi\u1ec3u, vector c\u00f3 2 ph\u00e9p to\u00e1n k\u00e9m tr\u1ef1c quan h\u01a1n l\u00e0 t\u00edch v\u00f4 h\u01b0\u1edbng (dot product) v\u00e0 t\u00edch c\u00f3 h\u01b0\u1edbng (cross product).</p> <p>T\u00edch v\u00f4 h\u01b0\u1edbng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng \u0111\u1ea1i s\u1ed1 ho\u1eb7c h\u00ecnh h\u1ecdc. 2 \u0111\u1ecbnh ngh\u0129a n\u00e0y l\u00e0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng khi s\u1eed d\u1ee5ng t\u1ecda \u0111\u1ed9 Descartes.</p> <ul> <li>Theo \u0111\u1ea1i s\u1ed1, t\u00edch v\u00f4 h\u01b0\u1edbng l\u00e0 t\u1ed5ng c\u00e1c t\u00edch t\u1ecda \u0111\u1ed9 t\u01b0\u01a1ng \u1ee9ng gi\u1eefa ch\u00fang. V\u00ed d\u1ee5: t\u00edch v\u00f4 h\u01b0\u1edbng c\u1ee7a \\(\\overrightarrow{\\rm u}(x_1, y_1)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(x_2, y_2)\\) l\u00e0 \\(\\overrightarrow{\\rm u} \\cdot \\overrightarrow{\\rm v} = x_1x_2+y_1y_2\\).</li> <li>Theo h\u00ecnh h\u1ecdc, t\u00edch v\u00f4 h\u01b0\u1edbng l\u00e0 t\u00edch \u0111\u1ed9 l\u1edbn c\u1ee7a \\(2\\) vector v\u00e0 \\(\\cos\\) c\u1ee7a g\u00f3c gi\u1eefa ch\u00fang. V\u00ed d\u1ee5: t\u00edch v\u00f4 h\u01b0\u1edbng c\u1ee7a \\(\\overrightarrow{\\rm u}(x_1, y_1)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(x_2, y_2)\\) l\u00e0 \\(\\(\\overrightarrow{\\rm u} \\cdot \\overrightarrow{\\rm v} = | \\overrightarrow{\\rm u} | \\cdot | \\overrightarrow{\\rm v} | \\cdot \\cos(\\theta)\\)\\) v\u1edbi \\(\\theta\\) l\u00e0 g\u00f3c h\u1ee3p b\u1edfi \\(\\overrightarrow{\\rm u}\\) v\u00e0 \\(\\overrightarrow{\\rm v}\\).</li> </ul> <p></p>"},{"location":"algo/geometry/basic-geometry-1/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>T\u00ednh t\u00edch v\u00f4 h\u01b0\u1edbng c\u1ee7a 2 vector \\(\\overrightarrow{\\rm u}(5,12)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(-6,8)\\)</p> <p></p> \\[\\begin{align} \\overrightarrow{\\rm u} \\cdot \\overrightarrow{\\rm v} &amp;= x_1x_2+y_1y_2 \\\\ &amp;= (-6).5+8.12 \\\\ &amp;= 66 \\end{align}\\] \\[\\begin{align} \\overrightarrow{\\rm u} \\cdot \\overrightarrow{\\rm v} &amp;= | \\overrightarrow{\\rm u} | \\cdot | \\overrightarrow{\\rm v} | \\cdot \\cos(\\theta) \\\\ &amp;= 13.10.cos(59,49\u00b0) \\\\ &amp;= 65.9995359254\\ldots \\approx 66 \\end{align}\\] <p>T\u1eeb \\(2\\) \u0111\u1ecbnh ngh\u0129a, ta c\u00f3 th\u1ec3 t\u00ednh g\u00f3c \\(\\theta\\) gi\u1eefa \\(\\overrightarrow{\\rm u}(x_1,y_1)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(x_2,y_2)\\) nh\u01b0 sau: \\(\\(\\cos(\\theta) = \\dfrac{\\overrightarrow{\\rm u} \\cdot \\overrightarrow{\\rm v}}{|\\overrightarrow{\\rm u}| \\cdot |\\overrightarrow{\\rm v}|} \\Longrightarrow \\theta = \\arccos\\left(\\dfrac{\\overrightarrow{\\rm u} \\cdot \\overrightarrow{\\rm v}}{|\\overrightarrow{\\rm u}| \\cdot |\\overrightarrow{\\rm v}|}\\right) = \\arccos\\left(\\dfrac{x_1x_2+y_1y_2}{\\sqrt{x_1^2+y_1^2} \\cdot \\sqrt{x_2^2+y_2^2}}\\right)\\)\\)</p> <p>L\u01b0u \u00fd: t\u00edch v\u00f4 h\u01b0\u1edbng kh\u00f4ng ch\u1ec9 gi\u1edbi h\u1ea1n trong h\u00ecnh h\u1ecdc ph\u1eb3ng, ngh\u0129a l\u00e0 ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u00edch v\u00f4 h\u01b0\u1edbng cho c\u00e1c vector c\u00f3 s\u1ed1 chi\u1ec1u tu\u1ef3 \u00fd, v\u00e0 \u0111\u1eb3ng th\u1ee9c tr\u00ean v\u1eabn \u0111\u00fang.</p>"},{"location":"algo/geometry/basic-geometry-1/#tich-co-huong-cross-product","title":"T\u00edch c\u00f3 h\u01b0\u1edbng (Cross product)","text":""},{"location":"algo/geometry/basic-geometry-1/#trong-khong-gian-3-chieu","title":"Trong kh\u00f4ng gian 3 chi\u1ec1u","text":"<p>T\u00edch c\u00f3 h\u01b0\u1edbng l\u00e0 m\u1ed9t ph\u00e9p nh\u00e2n vector trong kh\u00f4ng gian ba chi\u1ec1u. N\u00f3 kh\u00e1c t\u00edch v\u00f4 h\u01b0\u1edbng \u1edf ch\u1ed7 k\u1ebft qu\u1ea3 thu \u0111\u01b0\u1ee3c l\u00e0 m\u1ed9t vector thay cho m\u1ed9t v\u00f4 h\u01b0\u1edbng. Vector n\u00e0y vu\u00f4ng g\u00f3c v\u1edbi m\u1eb7t ph\u1eb3ng ch\u1ee9a 2 vector \u0111\u1ea7u v\u00e0o c\u1ee7a ph\u00e9p nh\u00e2n.</p> <p>T\u00edch c\u00f3 h\u01b0\u1edbng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng c\u00f4ng th\u1ee9c: \\(\\overrightarrow{\\rm a} \\times \\overrightarrow{\\rm b} = \\overrightarrow{n} \\cdot |\\overrightarrow{\\rm a}| \\cdot |\\overrightarrow{\\rm b}| \\cdot \\sin(\\theta)\\) v\u1edbi: - \\(\\theta\\) l\u00e0 g\u00f3c gi\u1eefa \\(\\overrightarrow{\\rm a}\\) v\u00e0 \\(\\overrightarrow{\\rm b}\\) \\((0\u00b0 \\le \\theta \\le 180\u00b0)\\) - \\(\\overrightarrow{n}\\) l\u00e0 vect\u01a1 \u0111\u01a1n v\u1ecb vu\u00f4ng g\u00f3c v\u1edbi \\(\\overrightarrow{\\rm a}\\) v\u00e0 \\(\\overrightarrow{\\rm b}\\). Th\u1ef1c t\u1ebf c\u00f3 2 vector th\u1ecfa \u0111i\u1ec1u ki\u1ec7n vu\u00f4ng g\u00f3c l\u00e0 \\(\\overrightarrow{n}\\) v\u00e0 \\(-\\overrightarrow{n}\\), do \u0111\u00f3 h\u01b0\u1edbng c\u1ee7a vector \u0111\u01a1n v\u1ecb \\(\\overrightarrow{n}\\) ph\u1ee5 thu\u1ed9c v\u00e0o quy t\u1eafc b\u00e0n tay ph\u1ea3i.</p> <p>|||</p>"},{"location":"algo/geometry/basic-geometry-1/#trong-khong-gian-2-chieu-mat-phang","title":"Trong kh\u00f4ng gian 2 chi\u1ec1u (m\u1eb7t ph\u1eb3ng)","text":"<p>N\u1ebfu x\u00e9t trong h\u00ecnh h\u1ecdc ph\u1eb3ng th\u00ec vector k\u1ebft qu\u1ea3 l\u00fac n\u00e0y vu\u00f4ng g\u00f3c v\u00e0 c\u00f3 h\u01b0\u1edbng \u0111i v\u00e0o/ra m\u1eb7t ph\u1eb3ng \u0111ang x\u00e9t, do \u0111\u00f3 ta c\u00f3 th\u1ec3 b\u1ecf qua \u0111\u1eb7c \u0111i\u1ec3m v\u1ec1 h\u01b0\u1edbng, v\u00e0 s\u1eed d\u1ee5ng t\u00edch c\u00f3 h\u01b0\u1edbng nh\u01b0 l\u00e0 m\u1ed9t \u0111\u1ea1i l\u01b0\u1ee3ng v\u00f4 h\u01b0\u1edbng.</p> <p>T\u01b0\u01a1ng t\u1ef1 t\u00edch v\u00f4 h\u01b0\u1edbng, t\u00edch c\u00f3 h\u01b0\u1edbng trong kh\u00f4ng gian 2 chi\u1ec1u c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng 2 c\u00e1ch: - Theo \u0111\u1ea1i s\u1ed1, t\u00edch c\u00f3 h\u01b0\u1edbng gi\u1eefa 2 vector \\(\\overrightarrow{\\rm u}(x_1,y_1)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(x_2,y_2)\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng c\u00f4ng th\u1ee9c:</p> \\[\\overrightarrow{\\rm u} \\times \\overrightarrow{\\rm v} = \\begin{vmatrix} x_1 &amp; y_1 \\\\ x_2 &amp; y_2 \\end{vmatrix} = x_1y_2-x_2y_1\\] <ul> <li>Theo h\u00ecnh h\u1ecdc, t\u00edch c\u00f3 h\u01b0\u1edbng gi\u1eefa 2 vector \\(\\overrightarrow{\\rm u}\\) v\u00e0 \\(\\overrightarrow{\\rm v}\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng c\u00f4ng th\u1ee9c: \\(\\overrightarrow{\\rm u} \\times \\overrightarrow{\\rm v} = |\\overrightarrow{\\rm u}| \\cdot |\\overrightarrow{\\rm v}| \\cdot \\sin(\\theta)\\) v\u1edbi \\(\\theta\\) l\u00e0 g\u00f3c h\u1ee3p b\u1edfi 2 vector t\u00ednh t\u1eeb \\(\\overrightarrow{\\rm u}\\) \u0111\u1ebfn \\(\\overrightarrow{\\rm v}\\) v\u00e0 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3. V\u1edbi g\u00f3c \\(\\alpha\\) th\u1ecfa m\u00e3n \\(0\u00b0 &lt; \\alpha &lt; 180\u00b0\\) th\u00ec \\(\\sin(\\alpha) &gt; 0\\) n\u00ean n\u1ebfu \\(\\theta &lt; 180\u00b0\\) th\u00ec t\u00edch c\u00f3 h\u01b0\u1edbng d\u01b0\u01a1ng, ng\u01b0\u1ee3c l\u1ea1i t\u00edch c\u00f3 h\u01b0\u1edbng \u00e2m.</li> </ul> <p></p> <p>Ta c\u0169ng c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh d\u1ea5u c\u1ee7a t\u00edch c\u00f3 h\u01b0\u1edbng b\u1eb1ng quy t\u1eafc b\u00e0n tay ph\u1ea3i nh\u01b0ng v\u1ec1 b\u1ea3n ch\u1ea5t th\u00ec c\u0169ng gi\u1ed1ng v\u1edbi vi\u1ec7c x\u00e9t g\u00f3c theo chi\u1ec1u ng\u01b0\u1ee3c kim \u0111\u1ed3ng h\u1ed3.</p>"},{"location":"algo/geometry/basic-geometry-1/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>T\u00ednh t\u00edch c\u00f3 h\u01b0\u1edbng c\u1ee7a 2 vector \\(\\overrightarrow{\\rm u}(5,12)\\) v\u00e0 \\(\\overrightarrow{\\rm v}(-6,8)\\)</p> <p></p> \\[\\begin{align} \\overrightarrow{\\rm u} \\times \\overrightarrow{\\rm v} &amp;= \\begin{vmatrix} x_1 &amp; y_1 \\\\ x_2 &amp; y_2 \\end{vmatrix} = x_1y_2-x_2y_1 \\\\ &amp;= 5.8-(-6).12 \\\\ &amp;= 112 \\end{align}\\] \\[\\begin{align} \\overrightarrow{\\rm u} \\times \\overrightarrow{\\rm v} &amp;= |\\overrightarrow{\\rm u}| \\cdot |\\overrightarrow{\\rm v}| \\cdot \\sin(\\theta) \\\\ &amp;= 13.10.sin(59,49\u00b0) \\\\ &amp;= 112.000273471\\ldots \\approx  112 \\end{align}\\] <p>L\u01b0u \u00fd: M\u1ed9t t\u00ednh ch\u1ea5t h\u1eefu d\u1ee5ng c\u1ee7a t\u00edch c\u00f3 h\u01b0\u1edbng trong h\u00ecnh h\u1ecdc ph\u1eb3ng l\u00e0:</p> \\[ |\\overrightarrow{a} \\times \\overrightarrow{b}| = |\\overrightarrow{a}| \\cdot |\\overrightarrow{b}| \\cdot \\sin(\\theta) \\] <p>b\u1eb1ng di\u1ec7n t\u00edch c\u1ee7a h\u00ecnh b\u00ecnh h\u00e0nh c\u00f3 2 c\u1ea1nh b\u00ean l\u00e0 \\( \\overrightarrow{a} \\) v\u00e0 \\( \\overrightarrow{b} \\).</p> <p></p> <p>Do \u0111\u00f3, di\u1ec7n t\u00edch c\u1ee7a m\u1ed9t tam gi\u00e1c c\u00f2n b\u1eb1ng m\u1ed9t n\u1eeda gi\u00e1 tr\u1ecb tuy\u1ec7t \u0111\u1ed1i c\u1ee7a t\u00edch c\u00f3 h\u01b0\u1edbng v\u1edbi 2 vector th\u00e0nh ph\u1ea7n l\u00e0 2 c\u1ea1nh c\u1ee7a tam gi\u00e1c.</p>"},{"location":"algo/geometry/basic-geometry-1/#khoang-cach-giua-iem-va-uong-thang","title":"Kho\u1ea3ng c\u00e1ch gi\u1eefa \u0111i\u1ec3m v\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng","text":"<p>T\u00ecm kho\u1ea3ng c\u00e1ch gi\u1eefa \u0111i\u1ec3m v\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng r\u1ea5t th\u01b0\u1eddng g\u1eb7p trong c\u00e1c b\u00e0i to\u00e1n h\u00ecnh h\u1ecdc.</p> <p></p> <p>V\u00ed d\u1ee5 b\u1ea1n c\u00f3 3 \u0111i\u1ec3m \\(A, B, C\\) v\u00e0 b\u1ea1n mu\u1ed1n t\u00ecm kho\u1ea3ng c\u00e1ch t\u1eeb \\(C\\) \u0111\u1ebfn \u0111\u01b0\u1eddng th\u1eb3ng \u0111i qua \\(A\\) v\u00e0 \\(B\\). B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean l\u00e0 t\u00ednh \\(\\overrightarrow{\\rm AB}\\) v\u00e0 \\(\\overrightarrow{\\rm AC}\\). Ti\u1ebfp theo t\u00ednh t\u00edch c\u00f3 h\u01b0\u1edbng \\(\\overrightarrow{\\rm AB}\\times\\overrightarrow{\\rm AC}\\) v\u00e0 l\u1ea5y tr\u1ecb tuy\u1ec7t \u0111\u1ed1i, r\u1ed3i chia cho \\(AB\\). K\u1ebft qu\u1ea3 c\u00f3 \u0111\u01b0\u1ee3c l\u00e0 kho\u1ea3ng c\u00e1ch c\u1ea7n t\u00ecm. C\u00f4ng th\u1ee9c n\u00e0y \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch nh\u01b0 sau:</p> <ul> <li>X\u00e9t \\(\\Delta{ABC}\\), \u0111\u1eb7t \\(h\\) l\u00e0 \u0111\u01b0\u1eddng cao k\u1ebb t\u1eeb \\(C\\) (kho\u1ea3ng c\u00e1ch t\u1eeb \\(C\\) \u0111\u1ebfn \\(AB\\)) v\u00e0 \u0111\u00e1y t\u01b0\u01a1ng \u1ee9ng l\u00e0 \\(AB\\), ta c\u00f3 c\u00f4ng th\u1ee9c:</li> </ul> \\[\\begin{cases} S_{\\Delta{ABC}} = \\dfrac{h.AB}{2} \\iff 2S_{\\Delta{ABC}} = h.AB \\\\ 2S_{\\Delta{ABC}} = |\\overrightarrow{\\rm AB}\\times\\overrightarrow{\\rm AC}| \\end{cases} \\\\ \\begin{array}{} \\implies h.AB = |\\overrightarrow{\\rm AB}\\times\\overrightarrow{\\rm AC}| \\\\ \\iff h = \\dfrac{|\\overrightarrow{\\rm AB}\\times\\overrightarrow{\\rm AC}|}{AB} \\end{array}\\] <p>M\u1ecdi th\u1ee9 tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p h\u01a1n m\u1ed9t ch\u00fat khi ta mu\u1ed1n t\u00ecm kho\u1ea3ng c\u00e1ch t\u1eeb m\u1ed9t \u0111o\u1ea1n th\u1eb3ng \u0111\u1ebfn m\u1ed9t \u0111i\u1ec3m. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u0111i\u1ec3m g\u1ea7n nh\u1ea5t c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t trong hai \u0111\u1ea7u m\u00fat c\u1ee7a \u0111o\u1ea1n th\u1eb3ng thay v\u00ec l\u00e0 m\u1ed9t \u0111i\u1ec3m n\u00e0o \u0111\u00f3 tr\u00ean \u0111\u01b0\u1eddng th\u1eb3ng. Trong h\u00ecnh tr\u00ean, \u0111i\u1ec3m g\u1ea7n \\(C\\) nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng th\u1eb3ng \\(AB\\) kh\u00f4ng n\u1eb1m gi\u1eefa \\(A\\) v\u00e0 \\(B\\) m\u00e0 l\u00e0 t\u1ea1i \\(B\\).</p> <p>C\u00f3 v\u00e0i c\u00e1ch kh\u00e1c nhau \u0111\u1ec3 x\u1eed l\u00fd tr\u01b0\u1eddng h\u1ee3p n\u00e0y, m\u1ed9t trong s\u1ed1 \u0111\u00f3 l\u00e0 t\u00edch v\u00f4 h\u01b0\u1edbng. \u0110\u1ea7u ti\u00ean, ki\u1ec3m tra xem \u0111i\u1ec3m g\u1ea7n nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng th\u1eb3ng \\(AB\\) c\u00f3 ra kh\u1ecfi \\(B\\) hay kh\u00f4ng b\u1eb1ng c\u00e1ch t\u00ednh \\(\\overrightarrow{\\rm BA} \\cdot \\overrightarrow{\\rm BC}\\). N\u1ebfu t\u00edch n\u00e0y \u00e2m, ngh\u0129a l\u00e0 g\u00f3c gi\u1eefa \\(\\overrightarrow{\\rm BA}\\) v\u00e0 \\(\\overrightarrow{\\rm BC}\\) l\u00e0 g\u00f3c t\u00f9 (do v\u1edbi g\u00f3c \\(\\alpha\\) th\u1ecfa m\u00e3n \\(90\u00b0 &lt; \\alpha &lt; 270\u00b0\\) th\u00ec \\(\\cos(\\alpha) &lt; 0\\) ), do \u0111\u00f3 \u0111i\u1ec3m g\u1ea7n \\(C\\) nh\u1ea5t tr\u00ean \u0111o\u1ea1n \\(AB\\) s\u1ebd l\u00e0 \\(B\\).</p> <p>T\u01b0\u01a1ng t\u1ef1, n\u1ebfu \\(\\overrightarrow{\\rm AB} \\cdot \\overrightarrow{\\rm AC} &lt; 0\\), \u0111i\u1ec3m g\u1ea7n \\(C\\) nh\u1ea5t l\u00e0 \\(A\\). N\u1ebfu c\u1ea3 hai t\u00edch v\u00f4 h\u01b0\u1edbng \u0111\u1ec1u \\(\\ge 0\\), th\u00ec \u0111i\u1ec3m g\u1ea7n \\(C\\) nh\u1ea5t s\u1ebd n\u1eb1m gi\u1eefa \\(A\\) v\u00e0 \\(B\\).</p> <pre><code>## define x first\n## define y second\ntypedef pair&lt;int, int&gt; pii;\n\n// Compute the dot product AB \u22c5 AC\nint dot(pii A, pii B, pii C) {\n    pii AB, AC;\n    AB.x = B.x - A.x;\n    AB.y = B.y - A.y;\n    AC.x = C.x - A.x;\n    AC.y = C.y - A.y;\n    return AB.x * AC.x + AB.y * AC.y;\n}\n\n// Compute the cross product AB x AC\nint cross(pii A, pii B, pii C) {\n    pii AB, AC;\n    AB.x = B.x - A.x;\n    AB.y = B.y - A.y;\n    AC.x = C.x - A.x;\n    AC.y = C.y - A.y;\n    return AB.x * AC.y - AB.y * AC.x;\n}\n\n// Compute the distance from A to B\ndouble distance(pii A, pii B) {\n    int dx = A.x - B.x;\n    int dy = A.y - B.y;\n    return sqrt(dx * dx + dy * dy);\n}\n\n// Compute the distance from AB to C\n// if isSegment is true, AB is a segment, not a line.\ndouble linePointDist(pii A, pii B, pii C, bool isSegment) {\n    double dist = abs(cross(A, B, C)) / distance(A, B);\n    if (isSegment) {\n        int dot1 = dot(B, A, C);\n        if (dot1 &lt; 0) return distance(B, C);\n        int dot2 = dot(A, B, C);\n        if (dot2 &lt; 0) return distance(A, C);\n    }\n    return dist;\n}\n</code></pre> <p>\u0110o\u1ea1n code tr\u00ean l\u00e0 c\u00e1ch m\u00e0 m\u1ecdi ng\u01b0\u1eddi th\u01b0\u1eddng d\u00f9ng v\u00e0 c\u00f3 l\u1ebd kh\u00e1 l\u00e0 d\u00e0i, b\u00ean d\u01b0\u1edbi l\u00e0 vi\u1ebft l\u1ea1i c\u00f3 s\u1eed d\u1ee5ng struct trong C++.</p> <p><pre><code>typedef double db;\nstruct vec {\n    db x, y;\n    vec(db _x = 0, db _y = 0) : x(_x), y(_y) {}\n    db dot(const vec &amp;other) { // Compute the dot product\n        return x * other.x + y * other.y;\n    }\n    db cross(const vec &amp;other) { // Compute the cross product\n        return x * other.y - y * other.x;\n    }\n    db length() const {\n        return sqrt(x * x + y * y);\n    }\n};\nusing point = vec; // or use 'typedef vec point'\nvec operator - (const point &amp;B, const point &amp;A) { // vecAB = B - A\n    return vec(B.x - A.x, B.y - A.y);\n}\n\n// if isSegment is true, AB is a segment, not a line.\ndb linePointDist(const point &amp;A, const point &amp;B, const point &amp;C, bool isSegment) {\n    db dist = abs((B - A).cross(C - A)) / (A - B).length();\n    if (isSegment) {\n        db dot1 = (A - B).dot(C - B);\n        if (dot1 &lt; 0) return (B - C).length();\n        db dot2 = (B - A).dot(C - A);\n        if (dot2 &lt; 0) return (A - C).length();\n    }\n    return dist;\n}\n</code></pre> N\u1ebfu b\u1ea1n s\u1eed d\u1ee5ng C++ th\u00ec b\u1ea1n n\u00ean t\u00ecm hi\u1ec3u v\u1ec1 struct v\u00e0 t\u1ef1 vi\u1ebft class/struct geo_2D c\u1ee7a ri\u00eang m\u00ecnh. N\u00f3 s\u1ebd gi\u00fap c\u00e1c b\u00e0i to\u00e1n h\u00ecnh h\u1ecdc tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u.</p>"},{"location":"algo/geometry/basic-geometry-1/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>H\u1ecdc ph\u1ea3i \u0111i \u0111\u00f4i v\u1edbi h\u00e0nh, do \u0111\u00f3 m\u00ecnh \u0111\u1ec1 xu\u1ea5t cho c\u00e1c b\u1ea1n Codeforces Gym 100168. Tuy \u0111\u1ec1 b\u00e0i trong gym \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng ti\u1ebfng Nga nh\u01b0ng r\u1ea5t ng\u1eafn g\u1ecdn v\u00e0 \u0111i th\u1eb3ng v\u00e0o b\u00e0i to\u00e1n n\u00ean c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng google translate.</p> <p>B\u00ean d\u01b0\u1edbi l\u00e0 m\u1ed9t s\u1ed1 b\u00e0i t\u1eadp c\u00f3 li\u00ean quan \u0111\u1ebfn b\u00e0i vi\u1ebft n\u00e0y, m\u00ecnh \u0111\u00e3 t\u00f3m t\u1eaft y\u00eau c\u1ea7u b\u00e0i to\u00e1n \u0111\u1ec3 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u \u0111\u1ec1 d\u1ec5 d\u00e0ng h\u01a1n.</p> <ul> <li>Codeforces Gym - 100168L: t\u00ednh \u0111\u1ed9 \u0111\u1ed9 d\u00e0i (\u0111\u1ed9 l\u1edbn) vector</li> <li>Codeforces Gym - 100168D: t\u00ednh di\u1ec7n t\u00edch tam gi\u00e1c</li> <li>CSES - Polygon Area: t\u00ednh di\u1ec7n t\u00edch \u0111a gi\u00e1c</li> <li>Codeforces Gym - 100168F: t\u00ednh kho\u1ea3ng c\u00e1ch t\u1eeb 1 \u0111i\u1ec3m \u0111\u1ebfn 1 \u0111\u01b0\u1eddng th\u1eb3ng c\u00f3 d\u1ea1ng \\(Ax+By+C=0\\)</li> <li>Codeforces Gym - 100168G: t\u00ednh kho\u1ea3ng c\u00e1ch t\u1eeb 1 \u0111i\u1ec3m \u0111\u1ebfn 1 \u0111\u01b0\u1eddng th\u1eb3ng \u0111i qua 2 \u0111i\u1ec3m</li> <li>Codeforces Gym - 100168H: t\u00ednh kho\u1ea3ng c\u00e1ch t\u1eeb 1 \u0111i\u1ec3m \u0111\u1ebfn 1 tia</li> <li>Codeforces Gym - 100168I: t\u00ednh kho\u1ea3ng c\u00e1ch t\u1eeb 1 \u0111i\u1ec3m \u0111\u1ebfn 1 \u0111o\u1ea1n th\u1eb3ng</li> </ul>"},{"location":"algo/geometry/basic-geometry-2/","title":"H\u00ecnh h\u1ecdc t\u00ednh to\u00e1n ph\u1ea7n 2: S\u1ef1 giao nhau c\u1ee7a \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0 c\u00e1c \u1ee9ng d\u1ee5ng","text":"<p>T\u00e1c gi\u1ea3:  - L\u00ea Minh Ho\u00e0ng - Ph\u1ed5 th\u00f4ng N\u0103ng khi\u1ebfu, \u0110HQG-HCM</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM</p> <p>Trong ph\u1ea7n 1, ch\u00fang ta \u0111\u00e3 t\u00ecm hi\u1ec3u c\u00e1ch s\u1eed d\u1ee5ng vector \u0111\u1ec3 gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n h\u00ecnh h\u1ecdc. B\u00e2y gi\u1edd ch\u00fang ta s\u1ebd h\u1ecdc c\u00e1ch s\u1eed d\u1ee5ng m\u1ed9t v\u00e0i ki\u1ebfn th\u1ee9c \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\u00ednh c\u01a1 b\u1ea3n \u0111\u1ec3 t\u00ecm giao \u0111i\u1ec3m c\u1ee7a \u0111\u01b0\u1eddng th\u1eb3ng, sau \u0111\u00f3 \u00e1p d\u1ee5ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c.</p> <p>L\u01b0u \u00fd: m\u1ed9t s\u1ed1 h\u00ecnh \u1ea3nh \u0111\u01b0\u1ee3c ch\u1ee5p t\u1eeb Desmos, v\u00e0 \u0111\u1ec1u c\u00f3 link Desmos t\u01b0\u01a1ng \u1ee9ng \u1edf d\u01b0\u1edbi m\u1ed7i h\u00ecnh, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 nh\u1ea5n v\u00e0o link \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh v\u00e0 c\u00e1c tham s\u1ed1.</p>"},{"location":"algo/geometry/basic-geometry-2/#giao-iem-cua-hai-uong-thang","title":"Giao \u0111i\u1ec3m c\u1ee7a hai \u0111\u01b0\u1eddng th\u1eb3ng","text":"<p>M\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n con ph\u1ed5 bi\u1ebfn nh\u1ea5t trong c\u00e1c b\u00e0i to\u00e1n h\u00ecnh h\u1ecdc l\u00e0 giao \u0111i\u1ec3m \u0111\u01b0\u1eddng th\u1eb3ng. M\u1eb7c d\u00f9 ph\u1ed5 bi\u1ebfn nh\u01b0ng nhi\u1ec1u ng\u01b0\u1eddi v\u1eabn g\u1eb7p r\u1eafc r\u1ed1i v\u1edbi n\u00f3.</p> <p>\u0110\u1ea7u ti\u00ean, ta c\u00f3 c\u00e2u h\u1ecfi nh\u1ecf l\u00e0: \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c cho d\u01b0\u1edbi d\u1ea1ng n\u00e0o? v\u00e0 ch\u00fang ta mu\u1ed1n s\u1eed d\u1ee5ng \u1edf d\u1ea1ng n\u00e0o? \u1ede tr\u01b0\u1eddng h\u1ee3p l\u00fd t\u01b0\u1edfng th\u00ec \u0111\u01b0\u1eddng th\u1eb3ng s\u1ebd \u1edf d\u1ea1ng \\(Ax + By = C\\), v\u1edbi \\(A, B, C\\) l\u00e0 c\u00e1c h\u1ec7 s\u1ed1 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1eddng th\u1eb3ng. Tuy nhi\u00ean, ta hi\u1ebfm khi \u0111\u01b0\u1ee3c cho \u0111\u01b0\u1eddng th\u1eb3ng \u1edf d\u1ea1ng n\u00e0y, nh\u01b0ng ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng c\u00f3 \u0111\u01b0\u1ee3c t\u1eeb hai \u0111i\u1ec3m cho tr\u01b0\u1edbc. V\u00ed d\u1ee5 c\u00f3 hai \u0111i\u1ec3m ph\u00e2n bi\u1ec7t \\((x_1,y_1)\\) v\u00e0 \\((x_2,y_2)\\), v\u00e0 \u0111\u1ec3 t\u00ecm \\(A, B, C\\) cho ph\u01b0\u01a1ng tr\u00ecnh tr\u00ean, ta \u0111\u1eb7t:</p> \\[\\begin{cases} A = y_2 - y_1\\\\ B = x_1 - x_2\\\\ C = Ax_1 + By_1 &amp;= (y_2 - y_1)x_1 + (x_1 - x_2)y_1 \\\\  &amp;= x_1y_2 - x_1y_1 + x_1y_1 - x_2y_1 \\\\  &amp;= x_1y_2 - x_2y_1 \\end{cases}\\] <p>B\u1ea5t k\u1ec3 \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c cho d\u01b0\u1edbi d\u1ea1ng n\u00e0o, ta lu\u00f4n c\u00f3 th\u1ec3 ch\u1ecdn \u0111\u01b0\u1ee3c hai \u0111i\u1ec3m ph\u00e2n bi\u1ec7t thu\u1ed9c \u0111\u01b0\u1eddng th\u1eb3ng, sau \u0111\u00f3 t\u00ednh \\(A, B, C\\).</p> <p>Ti\u1ebfp theo, gi\u1ea3 s\u1eed ta c\u00f3 hai \u0111\u01b0\u1eddng th\u1eb3ng, \u0111\u01b0\u1ee3c cho b\u1edfi hai ph\u01b0\u01a1ng tr\u00ecnh:</p> \\[\\begin{cases} A_1x + B_1y = C_1\\\\ A_2x + B_2y = C_2 \\end{cases}\\] <p>\u0110\u1ec3 t\u00ecm giao \u0111i\u1ec3m c\u1ee7a hai \u0111\u01b0\u1eddng th\u1eb3ng, ta ch\u1ec9 c\u1ea7n gi\u1ea3i h\u1ec7 hai ph\u01b0\u01a1ng tr\u00ecnh v\u1edbi hai \u1ea9n \\(x,y\\):</p> <pre><code>double det = A1 * B2 - A2 * B1;\nif (det == 0) {\n    // Lines are parallel or coincident\n    if (A1 * C2 == A2 * C1) {\n        // Lines are coincident\n    }\n    else {\n        // Lines are parallel\n    }\n}\nelse {\n    double x = (B2 * C1 - B1 * C2) / det;\n    double y = (A1 * C2 - A2 * C1) / det;\n}\n</code></pre> <p>\u0110\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c \u1edf \u0111o\u1ea1n code tr\u00ean t\u1eeb \u0111\u00e2u ra, ta nh\u00e2n ph\u01b0\u01a1ng tr\u00ecnh th\u1ee9 nh\u1ea5t v\u1edbi \\(B_2\\), v\u00e0 nh\u00e2n ph\u01b0\u01a1ng tr\u00ecnh th\u1ee9 hai v\u1edbi \\(B_1\\):</p> \\[\\begin{cases} A_1B_2x + B_1B_2y = B_2C_1\\\\ A_2B_1x + B_1B_2y = B_1C_2 \\end{cases}\\] <p>K\u1ebf ti\u1ebfp, l\u1ea5y ph\u01b0\u01a1ng tr\u00ecnh th\u1ee9 nh\u1ea5t tr\u1eeb ph\u01b0\u01a1ng tr\u00ecnh th\u1ee9 hai:</p> \\[\\begin{array}{} A_1B_2x - A_2B_1x = B_2C_1 - B_1C_2 \\end{array}\\] <p>Cu\u1ed1i c\u00f9ng, chia c\u1ea3 hai v\u1ebf cho \\(A_1B_2 - A_2B_1\\), ta s\u1ebd c\u00f3 ph\u01b0\u01a1ng tr\u00ecnh gi\u1ea3i \\(x\\):</p> \\[\\begin{array}{} x = \\dfrac{B_2C_1 - B_1C_2}{A_1B_2 - A_2B_1} \\end{array}\\] <p>Ph\u01b0\u01a1ng tr\u00ecnh gi\u1ea3i \\(y\\) thu \u0111\u01b0\u1ee3c b\u1eb1ng bi\u1ebfn \u0111\u1ed5i t\u01b0\u01a1ng t\u1ef1:</p> \\[\\begin{array}{} y = \\dfrac{A_1C_2 - A_2C_1}{A_1B_2 - A_2B_1} \\end{array}\\] <p>Nh\u01b0 v\u1eady ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c to\u1ea1 \u0111\u1ed9 giao \u0111i\u1ec3m c\u1ee7a hai \u0111\u01b0\u1eddng th\u1eb3ng, nh\u01b0ng s\u1ebd th\u1ebf n\u00e0o n\u1ebfu \u0111\u00e2y l\u00e0 hai \u0111o\u1ea1n th\u1eb3ng? Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta c\u1ea7n ki\u1ec3m tra xem giao \u0111i\u1ec3m t\u00ecm \u0111\u01b0\u1ee3c c\u00f3 n\u1eb1m tr\u00ean hai \u0111o\u1ea1n th\u1eb3ng hay kh\u00f4ng. N\u1ebfu \u0111o\u1ea1n th\u1eb3ng n\u1ed1i hai \u0111i\u1ec3m \\((x_1, y_1)\\) v\u00e0 \\((x_2, y_2)\\), \u0111\u1ec3 ki\u1ec3m tra xem \\((x, y)\\) c\u00f3 thu\u1ed9c \u0111o\u1ea1n th\u1eb3ng hay kh\u00f4ng, ta ch\u1ec9 c\u1ea7n ki\u1ec3m tra \\(min(x_1, x_2) \\le x \\le max(x_1, x_2)\\) v\u00e0 l\u00e0m t\u01b0\u01a1ng t\u1ef1 cho \\(y\\).</p> <p>Ta c\u0169ng n\u00ean c\u1ea9n th\u1eadn v\u1edbi v\u1ea5n \u0111\u1ec1 v\u1ec1 \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a s\u1ed1 th\u1ef1c. N\u1ebfu giao \u0111i\u1ec3m n\u1eb1m ngay tr\u00ean \u0111\u1ea7u m\u00fat c\u1ee7a \u0111o\u1ea1n th\u1eb3ng, ho\u1eb7c n\u1ebfu \u0111o\u1ea1n th\u1eb3ng n\u1eb1m ngang ho\u1eb7c th\u1eb3ng \u0111\u1ee9ng, m\u1ed9t ph\u00e9p so s\u00e1nh t\u1ea7m th\u01b0\u1eddng c\u00f3 th\u1ec3 c\u00f3 v\u1ea5n \u0111\u1ec1. Trong nh\u1eefng tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n so s\u00e1nh v\u1edbi m\u1ed9t gi\u00e1 tr\u1ecb sai s\u1ed1 n\u00e0o \u0111\u00f3 (th\u01b0\u1eddng l\u00e0 \\(10^{-9}\\)) ho\u1eb7c s\u1eed d\u1ee5ng ph\u00e2n s\u1ed1.</p> <p>Ngo\u00e0i ra, ta c\u00f2n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u00edch c\u00f3 h\u01b0\u1edbng \u0111\u1ec3 ki\u1ec3m tra hai \u0111o\u1ea1n th\u1eb3ng giao nhau v\u1edbi \u01b0u \u0111i\u1ec3m l\u00e0 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o sai s\u1ed1 khi t\u1ecda \u0111\u1ed9 c\u00e1c \u0111\u1ec9nh \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean.</p>"},{"location":"algo/geometry/basic-geometry-2/#kiem-tra-giao-iem-cua-2-oan-thang-su-dung-tich-co-huong","title":"Ki\u1ec3m tra giao \u0111i\u1ec3m c\u1ee7a 2 \u0111o\u1ea1n th\u1eb3ng (s\u1eed d\u1ee5ng t\u00edch c\u00f3 h\u01b0\u1edbng)","text":""},{"location":"algo/geometry/basic-geometry-2/#cw-va-ccw","title":"CW v\u00e0 CCW","text":"<p>Nh\u1eafc l\u1ea1i ph\u1ea7n 1: V\u1edbi g\u00f3c \\(\\alpha\\) th\u1ecfa m\u00e3n \\(0\u00b0 &lt; \\alpha &lt; 180\u00b0\\) th\u00ec \\(\\sin(\\alpha) &gt; 0\\) n\u00ean n\u1ebfu g\u00f3c ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 \\(\\theta &lt; 180\u00b0\\) th\u00ec t\u00edch c\u00f3 h\u01b0\u1edbng d\u01b0\u01a1ng, ng\u01b0\u1ee3c l\u1ea1i t\u00edch c\u00f3 h\u01b0\u1edbng \u00e2m.</p> <p>\u0110\u1ec3 bi\u1ebft th\u1ee9 t\u1ef1 c\u1ee7a b\u1ed9 3 \u0111i\u1ec3m \\(A,B,C\\), ta t\u00ednh t\u00edch c\u00f3 h\u01b0\u1edbng \\(\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AC}\\): - N\u1ebfu \\(\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AC} &gt; 0\\) th\u00ec \\(A,B,C\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (CCW). - N\u1ebfu \\(\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AC} &lt; 0\\) th\u00ec \\(A,B,C\\) c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (CW). - N\u1ebfu \\(\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AC} = 0\\) th\u00ec \\(A,B,C\\) th\u1eb3ng h\u00e0ng.</p> <p>||</p>"},{"location":"algo/geometry/basic-geometry-2/#kiem-tra-giao-iem-cua-2-oan-thang","title":"Ki\u1ec3m tra giao \u0111i\u1ec3m c\u1ee7a 2 \u0111o\u1ea1n th\u1eb3ng","text":""},{"location":"algo/geometry/basic-geometry-2/#ton-tai-3-iem-thang-hang","title":"T\u1ed3n t\u1ea1i 3 \u0111i\u1ec3m th\u1eb3ng h\u00e0ng","text":"<p>N\u1ebfu t\u1ed3n t\u1ea1i 3 trong 4 \u0111i\u1ec3m \u0111\u1ea7u m\u00fat th\u1eb3ng h\u00e0ng, ta ki\u1ec3m tra xem c\u00f3 t\u1ed3n t\u1ea1i \u0111\u1ea7u m\u00fat c\u1ee7a \u0111o\u1ea1n th\u1eb3ng n\u00e0y thu\u1ed9c \u0111o\u1ea1n th\u1eb3ng kia hay kh\u00f4ng: - N\u1ebfu c\u00f3 th\u00ec r\u00f5 r\u00e0ng l\u00e0 2 \u0111o\u1ea1n th\u1eb3ng giao nhau t\u1ea1i \u00edt nh\u1ea5t 1 \u0111i\u1ec3m (t\u1ea1i \u0111\u1ea7u m\u00fat v\u1eeba x\u00e9t).</p> <p>||</p> <ul> <li>N\u1ebfu kh\u00f4ng th\u00ec r\u00f5 r\u00e0ng l\u00e0 2 \u0111o\u1ea1n th\u1eb3ng kh\u00f4ng th\u1ec3 giao nhau.</li> </ul> <p>||</p>"},{"location":"algo/geometry/basic-geometry-2/#khong-ton-tai-3-iem-thang-hang","title":"Kh\u00f4ng t\u1ed3n t\u1ea1i 3 \u0111i\u1ec3m th\u1eb3ng h\u00e0ng","text":"<p>N\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i 3 trong 4 \u0111i\u1ec3m \u0111\u1ea7u m\u00fat th\u1eb3ng h\u00e0ng th\u00ec 2 \u0111o\u1ea1n th\u1eb3ng \\(AB\\) v\u00e0 \\(CD\\) giao nhau khi: - \\(C\\) v\u00e0 \\(D\\) n\u1eb1m kh\u00e1c ph\u00eda \u0111\u1ed1i v\u1edbi \u0111\u01b0\u1eddng th\u1eb3ng \\(AB\\) v\u00e0 - \\(A\\) v\u00e0 \\(B\\) n\u1eb1m kh\u00e1c ph\u00eda \u0111\u1ed1i v\u1edbi \u0111\u01b0\u1eddng th\u1eb3ng \\(CD\\).</p> <p>\u0110\u1ec3 \\(C\\) v\u00e0 \\(D\\) n\u1eb1m kh\u00e1c ph\u00eda \u0111\u1ed1i v\u1edbi \u0111\u01b0\u1eddng th\u1eb3ng \\(AB\\) th\u00ec: - \\(A,B,C\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 v\u00e0 \\(A,B,D\\) c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 ho\u1eb7c - \\(A,B,C\\) c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 v\u00e0 \\(A,B,D\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3.</p> <p>\\(\\Longrightarrow (\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AC}) \\cdot (\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AD}) &lt; 0\\)</p> <p>T\u1eeb \u0111\u00f3, ta c\u00f3 h\u1ec7 sau:</p> \\[\\begin{cases} (\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AC}) \\cdot (\\overrightarrow{\\rm AB} \\times \\overrightarrow{\\rm AD}) &lt; 0 \\\\ (\\overrightarrow{\\rm CD} \\times \\overrightarrow{\\rm CA}) \\cdot (\\overrightarrow{\\rm CD} \\times \\overrightarrow{\\rm CB}) &lt; 0 \\end{cases}\\] <p>||</p> <p>Nh\u1ea5n v\u00e0o [\u0111\u00e2y][intersect] \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p> <pre><code>const double eps = 1e-9;\nint sign(double x) {\n    if (x &gt; eps) return 1;\n    if (x &lt; -eps) return -1;\n    return 0;\n}\ndouble cross(Vec AB, Vec AC) {\n    return AB.x * AC.y - AC.x * AB.y;\n}\ndouble dot(Vec AB, Vec AC) {\n    return AB.x * AC.x + AB.y * AC.y;\n}\nbool intersect(Point A, Point B, Point C, Point D) {\n    int ABxAC = sign(cross(B - A, C - A));\n    int ABxAD = sign(cross(B - A, D - A));\n    int CDxCA = sign(cross(D - C, A - C));\n    int CDxCB = sign(cross(D - C, B - C));\n    if (ABxAC == 0 || ABxAD == 0 || CDxCA == 0 || CDxCB == 0) {\n        // C on segment AB if ABxAC = 0 and CA.CB &lt;= 0\n        if (ABxAC == 0 &amp;&amp; sign(dot(A - C, B - C)) &lt;= 0) return true;\n        if (ABxAD == 0 &amp;&amp; sign(dot(A - D, B - D)) &lt;= 0) return true;\n        if (CDxCA == 0 &amp;&amp; sign(dot(C - A, D - A)) &lt;= 0) return true;\n        if (CDxCB == 0 &amp;&amp; sign(dot(C - B, D - B)) &lt;= 0) return true;\n        return false;\n    }\n    return (ABxAC * ABxAD &lt; 0 &amp;&amp; CDxCA * CDxCB &lt; 0);\n}\n</code></pre>"},{"location":"algo/geometry/basic-geometry-2/#tim-uong-tron-i-qua-3-iem","title":"T\u00ecm \u0111\u01b0\u1eddng tr\u00f2n \u0111i qua 3 \u0111i\u1ec3m","text":"<p>T\u1eeb \\(3\\) \u0111i\u1ec3m kh\u00f4ng th\u1eb3ng h\u00e0ng, c\u00f3 duy nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng tr\u00f2n \u0111i qua \\(3\\) \u0111i\u1ec3m \u0111\u00f3. Nh\u01b0ng l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c t\u00e2m c\u1ee7a n\u00f3? V\u1ea5n \u0111\u1ec1 n\u00e0y ho\u00e1 ra l\u00e0 m\u1ed9t \u1ee9ng d\u1ee5ng \u0111\u01a1n gi\u1ea3n c\u1ee7a b\u00e0i to\u00e1n giao \u0111i\u1ec3m \u0111\u01b0\u1eddng th\u1eb3ng.</p> <p>Ch\u00fang ta s\u1ebd t\u00ecm \u0111\u01b0\u1eddng trung tr\u1ef1c c\u1ee7a 2 \u0111o\u1ea1n \\(XY\\) v\u00e0 \\(YZ\\), sau \u0111\u00f3 t\u00ecm giao \u0111i\u1ec3m c\u1ee7a hai \u0111\u01b0\u1eddng n\u00e0y, \u0111i\u1ec3m \u0111\u00f3 ch\u00ednh l\u00e0 t\u00e2m c\u1ee7a \u0111\u01b0\u1eddng tr\u00f2n.</p> <p></p> <p>Nh\u1ea5n v\u00e0o [\u0111\u00e2y][circle] \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p> <p>Trong h\u00ecnh h\u1ecdc ph\u1eb3ng, \u0111\u01b0\u1eddng trung tr\u1ef1c c\u1ee7a m\u1ed9t \u0111o\u1ea1n th\u1eb3ng l\u00e0 \u0111\u01b0\u1eddng vu\u00f4ng g\u00f3c v\u1edbi \u0111o\u1ea1n th\u1eb3ng t\u1ea1i trung \u0111i\u1ec3m c\u1ee7a \u0111o\u1ea1n th\u1eb3ng \u0111\u00f3.</p> <p>C\u00e1c b\u01b0\u1edbc \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng trung tr\u1ef1c c\u1ee7a \u0111o\u1ea1n \\(XY\\): - B\u01b0\u1edbc 1: t\u00ecm ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng \\(XY\\), gi\u1ea3 s\u1eed c\u00f3 d\u1ea1ng \\(Ax + By = C\\). - B\u01b0\u1edbc 2: t\u00ecm trung \u0111i\u1ec3m \\(M\\) c\u1ee7a \u0111o\u1ea1n \\(XY\\) b\u1eb1ng c\u00e1ch l\u1ea5y trung b\u00ecnh c\u1ed9ng c\u1ee7a \\(2\\) ho\u00e0nh \u0111\u1ed9 v\u00e0 trung b\u00ecnh c\u1ed9ng c\u1ee7a \\(2\\) tung \u0111\u1ed9. - B\u01b0\u1edbc 3: vi\u1ebft ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng c\u1ee7a \u0111\u01b0\u1eddng th\u1eb3ng vu\u00f4ng g\u00f3c v\u1edbi \u0111\u01b0\u1eddng th\u1eb3ng \\(XY\\) c\u00f3 d\u1ea1ng l\u00e0 \\(-Bx + Ay = D\\).</p> <p></p> <p>Nh\u1ea5n v\u00e0o [\u0111\u00e2y][pendicular] \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p> <ul> <li>B\u01b0\u1edbc 4: ta thay t\u1ecda \u0111\u1ed9 c\u1ee7a trung \u0111i\u1ec3m \\(M\\) v\u00e0o ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng \u1edf b\u01b0\u1edbc \\(3\\) \u0111\u1ec3 t\u00ecm \\(D\\) v\u00e0 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1eddng trung tr\u1ef1c.</li> </ul>"},{"location":"algo/geometry/basic-geometry-2/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>Cho \\(2\\) \u0111i\u1ec3m \\(X(2,-3)\\) v\u00e0 \\(Y(1,0)\\), \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng trung tr\u1ef1c c\u1ee7a \u0111o\u1ea1n \\(XY\\), ta th\u1ef1c hi\u1ec7n nh\u01b0 sau: - B\u01b0\u1edbc 1: T\u00ecm ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng \\(XY\\), ta \u0111\u1eb7t:</p> \\[\\begin{cases} A = Y_y - X_y = 0 - (-3) = 3 \\\\ B = X_x - Y_x = 2 - 1 = 1 \\\\ C = AX_x + BX_y = 3 \\cdot 2 + 1 \\cdot (-3) = 3 \\end{cases}\\] <p>\\(\\Longrightarrow\\) ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng \\(XY\\) c\u00f3 d\u1ea1ng: \\(3x + y = 3\\)</p> <ul> <li>B\u01b0\u1edbc 2: \u0110\u1eb7t \\(M\\) l\u00e0 trung \u0111i\u1ec3m c\u1ee7a \u0111o\u1ea1n \\(XY\\), ta c\u00f3:</li> </ul> \\[\\begin{cases} M_x = \\dfrac{X_x + Y_x}{2} = \\dfrac{2 + 1}{2} = 1,5 \\\\ M_y = \\dfrac{X_y + Y_y}{2} = \\dfrac{-3 + 0}{2} = -1,5 \\end{cases}\\] <ul> <li> <p>B\u01b0\u1edbc 3: Ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng c\u1ee7a \u0111\u01b0\u1eddng th\u1eb3ng vu\u00f4ng g\u00f3c v\u1edbi \u0111\u01b0\u1eddng th\u1eb3ng \\(XY\\) c\u00f3 d\u1ea1ng: \\(-x + 3y = D\\)</p> </li> <li> <p>B\u01b0\u1edbc 4: Thay t\u1ecda \u0111\u1ed9 c\u1ee7a trung \u0111i\u1ec3m \\(M\\) v\u00e0o ph\u01b0\u01a1ng tr\u00ecnh \\(-x + 3y = D\\):</p> </li> </ul> \\[\\begin{array}{} -(1,5) + 3 \\cdot (-1,5) = D \\Rightarrow D = -6 \\end{array}\\] <p>V\u1eady ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng trung tr\u1ef1c c\u1ee7a \u0111o\u1ea1n \\(XY\\) l\u00e0: \\(-x + 3y = -6\\)</p> <p>L\u00e0m t\u01b0\u01a1ng t\u1ef1 cho \u0111o\u1ea1n \\(YZ\\), ch\u00fang ta s\u1ebd c\u00f3 hai ph\u01b0\u01a1ng tr\u00ecnh c\u1ee7a hai \u0111\u01b0\u1eddng trung tr\u1ef1c, v\u00e0 c\u00f3 th\u1ec3 t\u00ecm giao \u0111i\u1ec3m c\u1ee7a ch\u00fang nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean.</p> <pre><code>struct Point {\n    double x, y;\n    Point() { x = y = 0.0; }\n    Point(double x, double y) : x(x), y(y) {}\n\n    Point operator + (const Point &amp;a) const { return Point(x + a.x, y + a.y); }\n    Point operator - (const Point &amp;a) const { return Point(x - a.x, y - a.y); }\n    Point operator * (double k) const { return Point(x * k, y * k); }\n    Point operator / (double k) const { return Point(x / k, y / k); }\n};\n\nstruct Line { // Ax + By = C\n    double a, b, c;\n    Line(double a = 0, double b = 0, double c = 0) : a(a), b(b), c(c) {}\n    Line(Point A, Point B) {\n        a = B.y - A.y;\n        b = A.x - B.x;\n        c = a * A.x + b * A.y;\n    }\n};\n\nLine Perpendicular_Bisector(Point A, Point B) {\n    Point M = (A + B) / 2;\n    Line d = Line(A, B);\n    // the equation of a perpendicular line has the form: -Bx + Ay = D\n    double D = -d.b * M.x + d.a * M.y;\n    return Line(-d.b, d.a, D);\n}\n</code></pre>"},{"location":"algo/geometry/basic-geometry-2/#phep-oi-xung","title":"Ph\u00e9p \u0111\u1ed1i x\u1ee9ng","text":"<p>\u0110\u1ec3 l\u1ea5y \u0111\u1ed1i x\u1ee9ng m\u1ed9t \u0111i\u1ec3m \\(X\\) qua m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng (tr\u1ee5c \u0111\u1ed1i x\u1ee9ng), ta t\u00ecm giao \u0111i\u1ec3m \\(Y\\) c\u1ee7a tr\u1ee5c \u0111\u1ed1i x\u1ee9ng v\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng vu\u00f4ng g\u00f3c v\u1edbi tr\u1ee5c \u0111\u1ed1i x\u1ee9ng \u0111i qua \\(X\\), sau \u0111\u00f3 l\u1ea5y \\(X'\\) \u0111\u1ed1i x\u1ee9ng v\u1edbi \\(X\\) qua \\(Y\\).</p>"},{"location":"algo/geometry/basic-geometry-2/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>Cho \u0111i\u1ec3m \\(X(1,-3)\\) v\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng \\((d):4x-3y=-5\\), \u0111\u1ec3 t\u00ecm \u0111i\u1ec3m \\(X'\\) \u0111\u1ed1i x\u1ee9ng v\u1edbi \\(X\\) qua \\((d)\\), ta th\u1ef1c hi\u1ec7n nh\u01b0 sau:</p> <ul> <li> <p>B\u01b0\u1edbc 1: G\u1ecdi \u0111\u01b0\u1eddng th\u1eb3ng \u0111i qua \\(X\\) v\u00e0 vu\u00f4ng g\u00f3c v\u1edbi tr\u1ee5c \u0111\u1ed1i x\u1ee9ng c\u00f3 d\u1ea1ng: \\((d'):3x + 4y = D\\).</p> </li> <li> <p>B\u01b0\u1edbc 2: \u0110\u1ec3 t\u00ecm \\(D\\), ta ch\u1ec9 c\u1ea7n thay to\u1ea1 \u0111\u1ed9 c\u1ee7a \\(X\\) v\u00e0o ph\u01b0\u01a1ng tr\u00ecnh:</p> </li> </ul> \\[3 \\cdot 1 + 4 \\cdot (-3) = D \\iff D = -9 \\Rightarrow (d'):3x + 4y = -9\\] <ul> <li>B\u01b0\u1edbc 3: x\u00e1c \u0111\u1ecbnh giao \u0111i\u1ec3m \\(Y\\) c\u1ee7a hai \u0111\u01b0\u1eddng \\((d)\\) v\u00e0 \\((d')\\):</li> </ul> \\[\\begin{cases} Y_x = \\dfrac{B_2C_1 - B_1C_2}{A_1B_2 - A_2B_1} = \\dfrac{4 \\cdot (-5) - (-3) \\cdot (-9)}{4 \\cdot 4 - 3 \\cdot (-3)} = \\dfrac{-47}{25} = -1.88 \\\\ Y_y = \\dfrac{A_1C_2 - A_2C_1}{A_1B_2 - A_2B_1} =  \\dfrac{4 \\cdot (-9) - 3 \\cdot (-5)}{4 \\cdot 4 - 3 \\cdot (-3)} = \\dfrac{-21}{25} = -0.84 \\end{cases}\\] <ul> <li>B\u01b0\u1edbc 4: x\u00e1c \u0111\u1ecbnh \\(X'\\) \u0111\u1ed1i x\u1ee9ng v\u1edbi \\(X\\) qua \\(Y\\) b\u1eb1ng c\u00f4ng th\u1ee9c: \\(X' = 2Y - X\\) (\\(Y\\) l\u00e0 trung \u0111i\u1ec3m \\(X\\) v\u00e0 \\(X\u2019\\) n\u00ean \\(X + X' = 2Y\\)).</li> </ul> \\[\\begin{cases} X'_x = 2Y_x - X_x = 2 \\cdot (-1.88) - 1 = -4.76 \\\\ X'_y = 2Y_y - X_y = 2 \\cdot (-0.84) - (-3) = 1.32 \\end{cases}\\] <p>||</p> <p>Nh\u1ea5n v\u00e0o [\u0111\u00e2y][symmetry] \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p> <pre><code>struct Line { // Ax + By = C\n    double a, b, c;\n    Line(double a = 0, double b = 0, double c = 0) : a(a), b(b), c(c) {}\n};\n\nPoint intersect(Line d1, Line d2) {\n    double det = d1.a * d2.b - d2.a * d1.b;\n    // det != 0 because d1 is perpendicular to d2\n    return Point((d2.b * d1.c - d1.b * d2.c) / det, (d1.a * d2.c - d2.a * d1.c) / det);\n}\n\nPoint Symmetry(Point X, Line d) {\n    // the equation of a perpendicular line has the form: -Bx + Ay = D\n    double D = -d.b * X.x + d.a * X.y;\n    Line d2 = Line(-d.b, d.a, D);\n    Point Y = intersect(d, d2);\n    Point X2 = Point(2 * Y.x - X.x, 2 * Y.y - X.y);\n    return X2;\n}\n</code></pre>"},{"location":"algo/geometry/basic-geometry-2/#phep-quay","title":"Ph\u00e9p quay","text":"<p>Cho \u0111i\u1ec3m \\(A(x,y)\\), \u0111\u1ec3 quay \u0111i\u1ec3m \\(A\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 m\u1ed9t g\u00f3c \\(\\theta\\) quanh g\u1ed1c t\u1ecda \u0111\u1ed9, ta \u0111\u01a1n gi\u1ea3n s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c:</p> \\[\\begin{cases} x' = x\\cos\\theta - y\\sin\\theta \\\\ y' = x\\sin\\theta + y\\cos\\theta \\end{cases}\\] <p>L\u01b0u \u00fd: v\u00ec c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh s\u1eed d\u1ee5ng radian(rad) l\u00e0m \u0111\u01a1n v\u1ecb chu\u1ea9n khi l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c h\u00e0m s\u1ed1 l\u01b0\u1ee3ng gi\u00e1c n\u00ean \u1edf trong desmos, m\u00ecnh s\u1eed d\u1ee5ng \u0111\u01a1n v\u1ecb c\u1ee7a s\u1ed1 \u0111o g\u00f3c l\u00e0 radian thay v\u00ec \u0111\u1ed9(\u00b0).</p> <p>C\u00f4ng th\u1ee9c chuy\u1ec3n \u0111\u1ed5i gi\u1eefa radian v\u00e0 \u0111\u1ed9:</p> \\[\\pi rad=180\u00b0\\Longrightarrow \\begin{cases} radian = \\dfrac{\u0111\u1ed9 \\cdot \\pi}{180} \\\\ \u0111\u1ed9 = \\dfrac{radian \\cdot 180}{\\pi} \\end{cases}\\] <p>B\u1ea3ng chuy\u1ec3n \u0111\u1ed5i m\u1ed9t s\u1ed1 gi\u00e1 tr\u1ecb th\u01b0\u1eddng d\u00f9ng:</p> \u0110\u1ed9 0\u00b0 15\u00b0 30\u00b0 45\u00b0 60\u00b0 75\u00b0 90\u00b0 180\u00b0 Radian 0 \\(\\frac{\\pi}{12}\\) \\(\\frac{\\pi}6\\) \\(\\frac{\\pi}4\\) \\(\\frac{\\pi}3\\) \\(\\frac{5\\pi}{12}\\) \\(\\frac{\\pi}2\\) \\(\\pi\\) <p></p> <p>Nh\u1ea5n v\u00e0o [\u0111\u00e2y][rotation1] \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p> <p>\u0110\u1ec3 quay \u0111i\u1ec3m \\(A\\) quanh m\u1ed9t \u0111i\u1ec3m \\(C\\) kh\u00e1c kh\u00f4ng ph\u1ea3i g\u1ed1c t\u1ecda \u0111\u1ed9, ta t\u1ecbnh ti\u1ebfn h\u1ec7 t\u1ecda \u0111\u1ed9 sao cho \\(C\\) tr\u00f9ng v\u1edbi g\u1ed1c t\u1ecda \u0111\u1ed9, quay b\u1eb1ng c\u00f4ng th\u1ee9c tr\u00ean r\u1ed3i t\u1ecbnh ti\u1ebfn h\u1ec7 t\u1ecda \u0111\u1ed9 v\u1ec1 v\u1ecb tr\u00ed ban \u0111\u1ea7u.</p>"},{"location":"algo/geometry/basic-geometry-2/#vi-du_2","title":"V\u00ed d\u1ee5","text":"<p>Cho \\(2\\) \u0111i\u1ec3m \\(A(1,4)\\) v\u00e0 \\(C(2,2)\\), \u0111\u1ec3 quay \\(A\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 1 g\u00f3c \\(45\u00b0\\) quanh \\(C\\), ta th\u1ef1c hi\u1ec7n nh\u01b0 sau: - B\u01b0\u1edbc 1: t\u1ecbnh ti\u1ebfn h\u1ec7 t\u1ecda \u0111\u1ed9 sao cho \\(C\\) tr\u00f9ng v\u1edbi g\u1ed1c t\u1ecda \u0111\u1ed9. L\u00fac n\u00e0y, \u0111i\u1ec3m \\(A\\) c\u00f3 t\u1ecda \u0111\u1ed9 m\u1edbi l\u00e0 \\(A'=(1-2,4-2)=(-1,2)\\).</p> <ul> <li>B\u01b0\u1edbc 2: quay \\(A'\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 1 g\u00f3c \\(45\u00b0\\) quanh g\u1ed1c t\u1ecda \u0111\u1ed9 \u0111\u01b0\u1ee3c \u0111i\u1ec3m \\(B'\\):</li> </ul> \\[\\begin{cases} x_{B'} = -1 \\cdot \\cos45\u00b0 - 2 \\cdot \\sin45\u00b0 = -\\dfrac{3\\sqrt{2}}{2} \\\\ y_{B'} = -1 \\cdot \\sin45\u00b0 + 2 \\cdot \\cos45\u00b0 = \\dfrac{\\sqrt{2}}{2} \\end{cases}\\] <ul> <li>B\u01b0\u1edbc 3: t\u1ecbnh ti\u1ebfn h\u1ec7 t\u1ecda \u0111\u1ed9 v\u1ec1 v\u1ecb tr\u00ed ban \u0111\u1ea7u. \u0110i\u1ec3m \\(B'\\) c\u00f3 t\u1ecda \u0111\u1ed9 m\u1edbi l\u00e0:</li> </ul> \\[B=\\left( -\\dfrac{3\\sqrt{2}}{2}+2, \\dfrac{\\sqrt{2}}{2}+2 \\right)\\] <p>V\u1eady quay \\(A(1,4)\\) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 1 g\u00f3c \\(45\u00b0\\) quanh \\(C(2,2)\\), ta \u0111\u01b0\u1ee3c \u0111i\u1ec3m \\(\\(B\\left( -\\dfrac{3\\sqrt{2}}{2}+2, \\dfrac{\\sqrt{2}}{2}+2 \\right)\\)\\)</p> <p>||</p> <p>Nh\u1ea5n v\u00e0o [\u0111\u00e2y][rotation2] \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u00ecnh tr\u00ean Desmos.</p> <pre><code>Point Rotations(Point A, Point C, double rad) {\n    Point A2 = A - C;\n    Point B2 = Point(A2.x * cos(rad) - A2.y * sin(rad), A2.x * sin(rad) + A2.y * cos(rad));\n    Point B = B2 + C;\n    return B;\n}\n</code></pre>"},{"location":"algo/geometry/basic-geometry-2/#tong-hop-cac-link-desmos-trong-bai","title":"T\u1ed5ng h\u1ee3p c\u00e1c link desmos trong b\u00e0i","text":"<ul> <li>[Ki\u1ec3m tra giao \u0111i\u1ec3m c\u1ee7a 2 \u0111o\u1ea1n th\u1eb3ng (s\u1eed d\u1ee5ng t\u00edch c\u00f3 h\u01b0\u1edbng)][intersect]</li> <li>[\u0110\u01b0\u1eddng tr\u00f2n \u0111i qua 3 \u0111i\u1ec3m][circle]</li> <li>[2 \u0111\u01b0\u1eddng th\u1eb3ng vu\u00f4ng g\u00f3c][pendicular]</li> <li>[Ph\u00e9p \u0111\u1ed1i x\u1ee9ng][symmetry]</li> <li>[Ph\u00e9p quay (quanh t\u00e2m O)][rotation1]</li> <li>[Ph\u00e9p quay (quanh \u0111i\u1ec3m b\u1ea5t k\u00ec)][rotation2]</li> </ul>"},{"location":"algo/geometry/basic-geometry-2/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>H\u1ecdc ph\u1ea3i \u0111i \u0111\u00f4i v\u1edbi h\u00e0nh, do \u0111\u00f3 m\u00ecnh \u0111\u1ec1 xu\u1ea5t cho c\u00e1c b\u1ea1n Codeforces Gym 100168. Tuy \u0111\u1ec1 b\u00e0i trong gym \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng ti\u1ebfng Nga nh\u01b0ng r\u1ea5t ng\u1eafn g\u1ecdn v\u00e0 \u0111i th\u1eb3ng v\u00e0o b\u00e0i to\u00e1n n\u00ean c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng google translate.</p> <p>B\u00ean d\u01b0\u1edbi l\u00e0 m\u1ed9t s\u1ed1 b\u00e0i t\u1eadp c\u00f3 li\u00ean quan \u0111\u1ebfn b\u00e0i vi\u1ebft n\u00e0y, m\u00ecnh \u0111\u00e3 t\u00f3m t\u1eaft y\u00eau c\u1ea7u b\u00e0i to\u00e1n \u0111\u1ec3 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u \u0111\u1ec1 d\u1ec5 d\u00e0ng h\u01a1n.</p> <ul> <li>Codeforces Gym - 100168K: cho 2 \u0111\u01b0\u1eddng th\u1eb3ng c\u00f3 d\u1ea1ng \\(Ax+By+C=0\\), t\u00ecm giao \u0111i\u1ec3m</li> <li>CSES - Line Segment Intersection: ki\u1ec3m tra 2 \u0111o\u1ea1n th\u1eb3ng c\u00f3 giao nhau hay kh\u00f4ng</li> <li>Codeforces Gym - 100168M: cho 2 \u0111i\u1ec3m, vi\u1ebft ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng</li> <li>Codeforces Gym - 100168N: cho 1 \u0111i\u1ec3m v\u00e0 1 vector ph\u00e1p tuy\u1ebfn, vi\u1ebft ph\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1eddng th\u1eb3ng</li> <li>Codeforces Gym - 100168P: ki\u1ec3m tra \u0111i\u1ec3m thu\u1ed9c \u0111\u01b0\u1eddng th\u1eb3ng</li> <li>Codeforces Gym - 100168Q: ki\u1ec3m tra \u0111i\u1ec3m thu\u1ed9c tia</li> <li>Codeforces Gym - 100168R: ki\u1ec3m tra \u0111i\u1ec3m thu\u1ed9c \u0111o\u1ea1n</li> <li>Codeforces Gym - 100168S: ki\u1ec3m tra 2 \u0111i\u1ec3m c\u00f3 n\u1eb1m c\u00f9ng 1 ph\u00eda v\u1edbi b\u1edd l\u00e0 1 \u0111\u01b0\u1eddng th\u1eb3ng c\u00f3 d\u1ea1ng \\(Ax+By+C=0\\)</li> <li>CSES - Point Location Test: x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed c\u1ee7a 1 \u0111i\u1ec3m v\u1edbi 1 \u0111\u01b0\u1eddng th\u1eb3ng</li> <li>CSES - Point in Polygon: x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed c\u1ee7a 1 \u0111i\u1ec3m v\u1edbi 1 \u0111a gi\u00e1c</li> <li>Codeforces - Robo-Footballer (v\u1eadn d\u1ee5ng)</li> </ul>"},{"location":"algo/geometry/basic-geometry-2/#desmos","title":"Desmos","text":"<ul> <li>Intersect</li> <li>Circle</li> <li>Perpendicular</li> <li>Symmetry</li> <li>Rotation 1</li> <li>Rotation 2</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/","title":"C\u00e2y DFS (Depth-First Search Tree) v\u00e0 \u1ee9ng d\u1ee5ng","text":"<p>T\u00e1c gi\u1ea3: - Nguy\u1ec5n Ch\u00e2u Khanh - THPT Chuy\u00ean H\u00f9ng V\u01b0\u01a1ng - Ph\u00fa Th\u1ecd - B\u00f9i Minh Ho\u1ea1t - THPT Chuy\u00ean H\u00f9ng V\u01b0\u01a1ng - Ph\u00fa Th\u1ecd - Tr\u1ea7n Th\u1ebf H\u01b0ng - THPT Chuy\u00ean Bi\u00ean H\u00f2a - H\u00e0 Nam</p> <p>Reviewer: - \u0110\u1ed7 \u0110\u00ecnh \u0110\u1eafc - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i </p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"<ul> <li>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n t\u00ecm hi\u1ec3u v\u1ec1 c\u00e2y \\(DFS\\) (Depth First Search Tree \u2013 DFS Tree). C\u00e2y \\(DFS\\) l\u00e0 m\u1ed9t \u1ee9ng d\u1ee5ng quan tr\u1ecdng c\u00f3 \u0111\u01b0\u1ee3c t\u1eeb k\u1ef9 thu\u1eadt duy\u1ec7t \u0111\u1ed3 th\u1ecb \u01b0u ti\u00ean chi\u1ec1u s\u00e2u, gi\u00fap gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n t\u00ecm kh\u1edbp c\u1ea7u v\u00e0 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh.</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#cay-duyet-chieu-sau-dfs-cay-dfs","title":"C\u00e2y duy\u1ec7t chi\u1ec1u s\u00e2u DFS (c\u00e2y DFS)","text":"<ul> <li>Trong qu\u00e1 tr\u00ecnh \\(DFS\\), v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\) ta c\u00f3 \u0111\u1ec9nh \\(par[u]\\) l\u00e0 s\u1ed1 hi\u1ec7u c\u1ee7a \u0111\u1ec9nh m\u00e0 t\u1eeb \u0111\u1ec9nh \u0111\u00f3 th\u1ee7 t\u1ee5c \\(DFS\\) g\u1ecdi \u0111\u1ec7 quy \u0111\u1ebfn \\(u\\). X\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb con v\u1edbi c\u00e1c c\u1ea1nh l\u00e0 \\((par[u], u)\\) ta c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t c\u00e2y. C\u00e2y n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e2y DFS.</li> <li>C\u00e1c c\u1ea1nh thu\u1ed9c c\u00e2y \\(DFS\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c \u201cc\u1ea1nh n\u00e9t li\u1ec1n\u201d. </li> <li>C\u00e1c c\u1ea1nh c\u00f2n l\u1ea1i kh\u00f4ng thu\u1ed9c c\u00e2y \\(DFS\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c \u201cc\u1ea1nh n\u00e9t \u0111\u1ee9t\".</li> </ul> <ul> <li> <p>Trong \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng, x\u00e9t c\u00e1c cung \u0111\u01b0\u1ee3c th\u0103m v\u00e0 kh\u00f4ng \u0111\u01b0\u1ee3c th\u0103m b\u1edfi \\(DFS\\), ta c\u00f3 \\(4\\) lo\u1ea1i cung sau:</p> <ul> <li>Cung c\u1ee7a c\u00e2y \\(DFS\\) (Tree edge):  l\u00e0 c\u00e1c cung thu\u1ed9c c\u00e2y \\(DFS\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh h\u01b0\u1edbng theo chi\u1ec1u t\u1eeb cha \u0111\u1ebfn con. (v\u00ed d\u1ee5 c\u1ea1nh \\((u,v)\\) thu\u1ed9c c\u00e2y \\(DFS\\) m\u00e0 \\(u\\) \u0111\u01b0\u1ee3c th\u0103m tr\u01b0\u1edbc \\(v\\) hay \\(u\\) l\u00e0 cha c\u1ee7a \\(v\\) th\u00ec ta c\u00f3 cung \\(u \\rightarrow v\\) l\u00e0 cung c\u1ee7a c\u00e2y \\(DFS\\)). \\(&lt;\\) C\u00e1c cung c\u1ee7a c\u00e2y \\(DFS\\) \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 c\u00e1c c\u1ea1nh m\u00e0u \u0111en trong h\u00ecnh b\u00ean d\u01b0\u1edbi \\(&gt;\\)</li> <li>Cung xu\u00f4i (Forward edge): l\u00e0 c\u00e1c cung kh\u00f4ng thu\u1ed9c c\u00e2y \\(DFS\\) v\u00e0 c\u00f3 d\u1ea1ng \\(u \\rightarrow v\\) trong \u0111\u00f3 \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) trong c\u00e2y \\(DFS\\). \\(&lt;\\) C\u00e1c cung xu\u00f4i \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 c\u00e1c c\u1ea1nh m\u00e0u xanh l\u00e1 trong h\u00ecnh b\u00ean d\u01b0\u1edbi \\(&gt;\\)</li> <li>Cung ng\u01b0\u1ee3c (Back edge): l\u00e0 c\u00e1c cung kh\u00f4ng thu\u1ed9c c\u00e2y \\(DFS\\) v\u00e0 c\u00f3 d\u1ea1ng \\(v \\rightarrow u\\) trong \u0111\u00f3 \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) trong c\u00e2y \\(DFS\\). \\(&lt;\\) C\u00e1c cung ng\u01b0\u1ee3c \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 c\u00e1c c\u1ea1nh m\u00e0u \u0111\u1ecf trong h\u00ecnh b\u00ean d\u01b0\u1edbi \\(&gt;\\)</li> <li>Cung ch\u00e9o (Cross edge): l\u00e0 c\u00e1c cung kh\u00f4ng thu\u1ed9c c\u00e2y \\(DFS\\) c\u00f3 d\u1ea1ng \\(u \\rightarrow v\\) trong \u0111\u00f3 \\(u\\) v\u00e0 \\(v\\) thu\u1ed9c hai nh\u00e1nh kh\u00e1c nhau c\u1ee7a c\u00f9ng m\u1ed9t c\u00e2y \\(DFS\\). \\(&lt;\\) C\u00e1c cung ch\u00e9o \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 c\u00e1c c\u1ea1nh m\u00e0u xanh d\u01b0\u01a1ng trong h\u00ecnh b\u00ean d\u01b0\u1edbi \\(&gt;\\)</li> </ul> <p></p> </li> <li> <p>Trong \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng:</p> <ul> <li>Kh\u00f4ng t\u1ed3n t\u1ea1i cung ch\u00e9o. V\u00ec khi \u0111\u1ec9nh \\(u\\) \u0111\u01b0\u1ee3c duy\u1ec7t trong h\u00e0m \\(DFS\\) ta s\u1ebd duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(v\\) k\u1ec1 \\(u\\) m\u00e0 \\(v\\) ch\u01b0a \u0111\u01b0\u1ee3c th\u0103m. Nh\u01b0 v\u1eady n\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t cung ch\u00e9o \\((u, v)\\) ch\u1ee9ng t\u1ecf khi duy\u1ec7t \u0111\u1ebfn \u0111\u1ec9nh \\(u\\) ho\u1eb7c \u0111\u1ec9nh \\(v\\) ta \u0111\u00e3 kh\u00f4ng duy\u1ec7t c\u1ea1nh \\((u, v)\\). </li> <li>V\u00ec c\u00e1c c\u1ea1nh tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh chi\u1ec1u n\u00ean kh\u00f4ng th\u1ec3 \u0111\u1ecbnh ngh\u0129a \\(2\\) lo\u1ea1i cung xu\u00f4i v\u00e0 cung ng\u01b0\u1ee3c nh\u01b0 \u1edf \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng. Do \u0111\u00f3, \u1edf \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng, cung xu\u00f4i v\u00e0 cung ng\u01b0\u1ee3c s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:<ul> <li>Cung xu\u00f4i (Forward edge): l\u00e0 c\u00e1c cung thu\u1ed9c c\u00e2y \\(DFS\\). Hay c\u00f2n c\u00f3 c\u00e1ch g\u1ecdi kh\u00e1c l\u00e0 \"c\u1ea1nh n\u00e9t li\u1ec1n\" ho\u1eb7c \"cung c\u1ee7a c\u00e2y \\(DFS\\)\".</li> <li>Cung ng\u01b0\u1ee3c (Back edge): l\u00e0 c\u00e1c cung kh\u00f4ng thu\u1ed9c c\u00e2y \\(DFS\\). Hay c\u00f2n c\u00f3 c\u00e1ch g\u1ecdi kh\u00e1c l\u00e0 \"c\u1ea1nh n\u00e9t \u0111\u1ee9t\". </li> </ul> </li> <li>Nh\u01b0 v\u1eady tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng l\u00fac n\u00e0y ch\u1ec9 c\u00f2n \\(2\\) lo\u1ea1i cung l\u00e0 cung ng\u01b0\u1ee3c v\u00e0 cung xu\u00f4i (cung c\u1ee7a c\u00e2y \\(DFS\\)). </li> </ul> </li> </ul> <p>M\u1ed9t s\u1ed1 m\u1ea3ng quan tr\u1ecdng trong c\u00e2y DFS :</p> <ul> <li>M\u1ea3ng \\(num\\)[]: cho bi\u1ebft th\u1ee9 t\u1ef1 duy\u1ec7t \\(DFS\\) c\u1ee7a c\u00e1c \u0111\u1ec9nh (th\u1ee9 t\u1ef1 m\u00e0 m\u1ed7i \u0111\u1ec9nh b\u1eaft \u0111\u1ea7u duy\u1ec7t).</li> <li>M\u1ea3ng \\(low\\)[]: V\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\), \\(low[u]\\) cho bi\u1ebft th\u1ee9 t\u1ef1 (gi\u00e1 tr\u1ecb \\(num\\)) nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(u\\) b\u1eb1ng c\u00e1ch \u0111i xu\u00f4i xu\u1ed1ng theo c\u00e1c c\u1ea1nh n\u00e9t li\u1ec1n (c\u00e1c cung tr\u00ean c\u00e2y \\(DFS\\)) v\u00e0 k\u1ebft th\u00fac \u0111i ng\u01b0\u1ee3c l\u00ean kh\u00f4ng qu\u00e1 \\(1\\) l\u1ea7n theo c\u1ea1nh n\u00e9t \u0111\u1ee9t. Ngo\u00e0i ra ta c\u0169ng c\u00f3 th\u1ec3 hi\u1ec3u \u00fd ngh\u0129a c\u1ee7a \\(low[u]\\) l\u00e0 th\u1ee9 t\u1ef1 th\u0103m c\u1ee7a \u0111\u1ec9nh c\u00f3 th\u1ee9 t\u1ef1 th\u0103m s\u1edbm nh\u1ea5t n\u1eb1m trong c\u00e2y con g\u1ed1c \\(u\\) ho\u1eb7c k\u1ec1 c\u1ea1nh v\u1edbi \\(1\\) \u0111\u1ec9nh b\u1ea5t k\u00ec n\u1eb1m trong c\u00e2y con g\u1ed1c \\(u\\).</li> <li>M\u1ea3ng \\(tail\\)[]: cho bi\u1ebft th\u1eddi \u0111i\u1ec3m k\u1ebft th\u00fac duy\u1ec7t \\(DFS\\) c\u1ee7a m\u1ed7i \u0111\u1ec9nh c\u0169ng l\u00e0 th\u1eddi \u0111i\u1ec3m duy\u1ec7t xong c\u1ee7a \u0111\u1ec9nh \u0111\u00f3 . </li> </ul> <p>Nh\u1eadn x\u00e9t : C\u00e1c \u0111\u1ec9nh c\u00f3 th\u1ee9 t\u1ef1 th\u0103m n\u1eb1m trong kho\u1ea3ng t\u1eeb \\(num[u]\\) \u0111\u1ebfn \\(tail[u]\\) ch\u00ednh l\u00e0 c\u00e1c \u0111\u1ec9nh n\u1eb1m trong c\u00e2y con g\u1ed1c \\(u\\) trong c\u00e2y \\(DFS\\).</p> <p>C\u00e1ch t\u00ednh m\u1ea3ng low[], num[], tail[] :</p> <ul> <li>\u00dd t\u01b0\u1edfng ch\u00ednh : M\u1ea3ng \\(num[],tail[]\\) ta c\u00f3 th\u1ec3 t\u00ednh d\u1ec5 d\u00e0ng b\u1eb1ng c\u00e1ch \\(DFS\\) x\u00e1c \u0111\u1ecbnh th\u1eddi \u0111i\u1ec3m duy\u1ec7t t\u1edbi v\u00e0 th\u1eddi \u0111i\u1ec3m duy\u1ec7t xong c\u1ee7a c\u00e1c \u0111\u1ec9nh. V\u1edbi m\u1ea3ng \\(low[]\\) ta c\u00f3: <ul> <li>Tr\u01b0\u1edbc h\u1ebft, v\u1edbi \\(1\\) \u0111\u1ec9nh \\(u\\) b\u1ea5t k\u00ec c\u00f3 th\u1ec3 t\u1ef1 \u0111i t\u1edbi ch\u00ednh n\u00f3 n\u00ean ta g\u00e1n \\(low[u]=num[u]\\).</li> <li>T\u1eeb \\(u\\) c\u00f3 th\u1ec3 \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh \\(v\\) k\u1ec1 \\(u\\) b\u1eb1ng \\(1\\) c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u00ean ta c\u00f3 \\(low[u]=min(low[u],num[v])\\) v\u1edbi \\((u,v)\\) l\u00e0 m\u1ed9t c\u1ea1nh n\u00e9t \u0111\u1ee9t.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu \\((u,v)\\) l\u00e0 m\u1ed9t c\u1ea1nh n\u00e9t li\u1ec1n v\u00e0 \\(v\\) kh\u00f4ng ph\u1ea3i cha \\(u\\) ta c\u00f3 \\(low[u]=min(low[u],low[v])\\) do t\u1eeb \\(u\\) ta c\u00f3 th\u1ec3 \u0111i xu\u1ed1ng \\(v\\) sau \u0111\u00f3 \u0111i theo con \u0111\u01b0\u1eddng \u0111\u00e3 x\u00e1c \u0111\u1ecbnh \u1edf \u0111\u1ec9nh \\(v\\) \u0111\u1ec3 t\u1edbi \u0111\u1ec9nh c\u00f3 th\u1ee9 t\u1ef1 th\u0103m l\u00e0 \\(low[v]\\).</li> </ul> </li> <li>Ch\u00fa \u00fd: Gi\u00e1 tr\u1ecb th\u1ef1c s\u1ef1 c\u1ee7a \\(num[u]\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi duy\u1ec7t t\u1edbi \u0111\u1ec9nh \\(u\\) c\u00f2n gi\u00e1 tr\u1ecb th\u1ef1c s\u1ef1 c\u1ee7a \\(low[u],\\) \\(tail[u]\\) ch\u1ec9 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi \u0111\u00e3 duy\u1ec7t xong \u0111\u1ec9nh \\(u\\). Th\u1eddi \u0111i\u1ec3m duy\u1ec7t t\u1edbi c\u1ee7a m\u1ed9t \u0111\u1ec9nh \\(u\\) lu\u00f4n di\u1ec5n ra tr\u01b0\u1edbc th\u1eddi \u0111i\u1ec3m duy\u1ec7t t\u1edbi c\u1ee7a c\u00e1c \u0111\u1ec9nh trong c\u00e2y con g\u1ed1c \\(u\\) c\u1ee7a c\u00e2y \\(DFS\\) , th\u1eddi \u0111i\u1ec3m duy\u1ec7t xong c\u1ee7a \u0111\u1ec9nh \\(u\\) lu\u00f4n di\u1ec5n ra sau th\u1eddi \u0111i\u1ec3m duy\u1ec7t xong c\u1ee7a c\u00e1c \u0111\u1ec9nh trong c\u00e2y con g\u1ed1c \\(u\\). </li> <li>C\u00e1ch th\u1ef1c hi\u1ec7n :<ul> <li>\u0110\u1ea7u ti\u00ean ta s\u1ebd b\u1eaft \u0111\u1ea7u duy\u1ec7t \\(DFS\\) t\u1eeb \u0111\u1ec9nh g\u1ed1c. Khi duy\u1ec7t t\u1edbi \u0111\u1ec9nh \\(u\\) ta s\u1ebd c\u1eadp nh\u1eadt th\u1eddi \u0111i\u1ec3m duy\u1ec7t t\u1edbi. L\u00fac n\u00e0y \\(low[u] = num[u] =\\) th\u1ee9 t\u1ef1 duy\u1ec7t DFS. Ta s\u1ebd duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c con \\(v\\) trong g\u1ed1c \\(u\\). </li> <li>Tr\u01b0\u1eddng h\u1ee3p 1: N\u1ebfu \u0111\u1ec9nh \\(v\\) ch\u01b0a \u0111\u01b0\u1ee3c th\u0103m th\u00ec sau khi ho\u00e0n th\u00e0nh \\(DFS\\) c\u1ee7a \\(v\\) th\u00ec ta s\u1ebd c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a \\(low [u]\\): \\(low [u] = min (low[u], low[v]);\\)</li> <li>Tr\u01b0\u1eddng h\u1ee3p 2: N\u1ebfu \u0111\u1ec9nh \\(v\\) \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m, th\u00ec ta s\u1ebd c\u1eadp nh\u1eadt l\u1ea1i gi\u00e1 tr\u1ecb cho \\(low[u]\\): \\(low [u] = min (low [u], num[v]);\\)<ul> <li>\u1ede tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta kh\u00f4ng th\u1ec3 c\u1eadp nh\u1eadt \\(low[u] = min(low[u], low[v])\\) \u0111\u01b0\u1ee3c. V\u00ec khi ta th\u0103m \u0111\u1ebfn \u0111\u1ec9nh \\(u\\) m\u00e0 \u0111\u1ec9nh \\(v\\) \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m th\u00ec t\u1ee9c l\u00e0 \\((u,v)\\) l\u00e0 m\u1ed9t c\u1ea1nh n\u00e9t \u0111\u1ee9t, do \u0111\u00f3 khi \u0111i t\u1eeb \\(u\\) t\u1edbi \\(v\\) ta \u0111\u00e3 s\u1eed d\u1ee5ng \\(1\\) c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u00ean kh\u00f4ng th\u1ec3 ti\u1ebfp t\u1ee5c di chuy\u1ec3n n\u1eefa (theo \u0111\u1ecbnh ngh\u0129a c\u1ee7a m\u1ea3ng \\(low[]\\) ) suy ra ta ch\u1ec9 c\u1eadp nh\u1eadt \\(low[u]=min(low[u],num[v])\\). </li> </ul> </li> <li>*Ch\u00fa \u00fd : N\u1ebfu v l\u00e0 cha tr\u1ef1c ti\u1ebfp c\u1ee7a u th\u00ec ta b\u1ecf qua kh\u00f4ng x\u00e9t \u0111\u1ebfn.* </li> <li>Khi \u0111\u00e3 duy\u1ec7t xong \u0111\u1ec9nh \\(u\\) v\u00e0 c\u00e1c n\u00fat trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(u\\) ta s\u1ebd ti\u1ebfn h\u00e0nh c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb \\(tail[u]=\\) th\u1eddi gian duy\u1ec7t DFS hi\u1ec7n t\u1ea1i.</li> </ul> </li> <li>C\u00e0i \u0111\u1eb7t :</li> </ul> <pre><code>int timeDfs = 0; // Th\u1ee9 t\u1ef1 duy\u1ec7t DFS\n\nvoid dfs(int u, int pre) {\n    num[u] = low[u] = ++timeDfs;\n    for (int v : g[u]){\n        if (v == pre) continue;\n        if (!num[v]) {\n            dfs(v, u);\n            low[u] = min(low[u], low[v]);\n        }\n        else low[u] = min(low[u], num[v]);\n    }\n    tail[u] = timeDfs;\n} \n</code></pre> <ul> <li> <p>V\u00ed d\u1ee5 minh h\u1ecda :</p> <p></p> </li> <li> <p>M\u00f4 t\u1ea3 qu\u00e1 tr\u00ecnh :</p> <p>/uploads/Depth-First-Search-Tree_gif1.gif</p> </li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#ung-dung-cay-dfs-trong-bai-toan-tim-khop-cau","title":"\u1ee8ng d\u1ee5ng c\u00e2y DFS trong b\u00e0i to\u00e1n t\u00ecm kh\u1edbp, c\u1ea7u","text":""},{"location":"algo/graph-theory/Depth-First-Search-Tree/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>Trong \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng, m\u1ed9t \u0111\u1ec9nh \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ec9nh kh\u1edbp n\u1ebfu nh\u01b0 lo\u1ea1i b\u1ecf \u0111\u1ec9nh n\u00e0y v\u00e0 c\u00e1c c\u1ea1nh li\u00ean thu\u1ed9c v\u1edbi n\u00f3 ra kh\u1ecfi \u0111\u1ed3 th\u1ecb th\u00ec s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb t\u0103ng l\u00ean.</li> <li> <p>Trong \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng, m\u1ed9t c\u1ea1nh \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u1ea1nh c\u1ea7u n\u1ebfu nh\u01b0 lo\u1ea1i b\u1ecf c\u1ea1nh n\u00e0y ra kh\u1ecfi \u0111\u1ed3 th\u1ecb th\u00ec s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb t\u0103ng l\u00ean.</p> <p></p> </li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>GRAPH_ - T\u00ecm kh\u1edbp v\u00e0 c\u1ea7u (C\u01a1 b\u1ea3n)</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>X\u00e9t \u0111\u01a1n \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G=(V, E)\\) c\u00f3 \\(N\\) \\((1 \\le N \\le 10000)\\) \u0111\u1ec9nh v\u00e0 \\(M\\) \\((1 \\le M \\le 50000)\\) c\u1ea1nh. Ng\u01b0\u1eddi ta \u0111\u1ecbnh ngh\u0129a m\u1ed9t \u0111\u1ec9nh g\u1ecdi l\u00e0 kh\u1edbp n\u1ebfu nh\u01b0 xo\u00e1 \u0111\u1ec9nh \u0111\u00f3 s\u1ebd l\u00e0m t\u0103ng s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady, m\u1ed9t c\u1ea1nh \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u1ea7u n\u1ebfu xo\u00e1 c\u1ea1nh \u0111\u00f3 s\u1ebd l\u00e0m t\u0103ng s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>V\u1ea5n \u0111\u1ec1 \u0111\u1eb7t ra l\u00e0 c\u1ea7n ph\u1ea3i \u0111\u1ebfm t\u1ea5t c\u1ea3 c\u00e1c kh\u1edbp v\u00e0 c\u1ea7u c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G\\).</p> <p>Input</p> <ul> <li>D\u00f2ng \u0111\u1ea7u: ch\u1ee9a hai s\u1ed1 t\u1ef1 nhi\u00ean \\(N, M\\).</li> <li>\\(M\\) d\u00f2ng sau m\u1ed7i d\u00f2ng ch\u1ee9a m\u1ed9t c\u1eb7p s\u1ed1 \\((u, v)\\) \\((u\\) kh\u00e1c \\(v\\), \\(1 \\le u \\le N, 1 \\le v \\le N)\\) m\u00f4 t\u1ea3 m\u1ed9t c\u1ea1nh c\u1ee7a \\(G\\).</li> </ul> <p>Output</p> <ul> <li>G\u1ed3m m\u1ed9t d\u00f2ng duy nh\u1ea5t ghi hai s\u1ed1, s\u1ed1 th\u1ee9 nh\u1ea5t l\u00e0 s\u1ed1 kh\u1edbp, s\u1ed1 th\u1ee9 hai l\u00e0 s\u1ed1 c\u1ea7u c\u1ee7a \\(G\\).</li> </ul> <p>Example </p> <p>Input <pre><code>10 12\n1 10\n10 2\n10 3\n2 4\n4 5\n5 2\n3 6\n6 7\n7 3\n7 8\n8 9\n9 7\n</code></pre> Output <pre><code>4 3\n</code></pre></p> <p>Note</p> <ul> <li>C\u00e1c c\u1ea1nh m\u00e0u \u0111\u1ecf l\u00e0 c\u1ea1nh c\u1ea7u.</li> <li>C\u00e1c \u0111\u1ec9nh m\u00e0u xanh l\u00e1 l\u00e0 \u0111\u1ec9nh kh\u1edbp.</li> </ul> <p></p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#phan-tich","title":"Ph\u00e2n t\u00edch","text":""},{"location":"algo/graph-theory/Depth-First-Search-Tree/#tim-canh-cau","title":"T\u00ecm c\u1ea1nh c\u1ea7u","text":"<ul> <li>D\u1ec5 th\u1ea5y r\u1eb1ng c\u1ea1nh c\u1ea7u c\u1ee7a \u0111\u1ed3 th\u1ecb kh\u00f4ng th\u1ec3 l\u00e0 c\u1ea1nh n\u00e9t \u0111\u1ee9t v\u00ec vi\u1ec7c b\u1ecf \u0111i c\u1ea1nh n\u00e9t \u0111\u1ee9t s\u1ebd kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u00ednh li\u00ean th\u00f4ng gi\u1eefa c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb. Do v\u1eady c\u1ea1nh c\u1ea7u ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0 c\u1ea1nh n\u00e9t li\u1ec1n.</li> <li> <p>Ta s\u1ebd x\u00e9t ri\u00eang t\u1eebng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb. X\u00e9t v\u00f9ng li\u00ean th\u00f4ng \\(G\\) nh\u01b0 sau: </p> <ul> <li> <p>X\u00e9t c\u00e2y con g\u1ed1c \\(v\\) trong c\u00e2y \\(DFS\\) c\u1ee7a \\(G\\) c\u00f3 \\(u\\) l\u00e0 cha tr\u1ef1c ti\u1ebfp c\u1ee7a \\(v\\). G\u1ecdi t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) l\u00e0 \\(A\\), t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) l\u00e0 \\(B\\). Khi xo\u00e1 \u0111i c\u1ea1nh \\((u, v)\\) th\u00ec gi\u1eefa \\(2\\) \u0111\u1ec9nh b\u1ea5t k\u00ec thu\u1ed9c c\u00f9ng \\(1\\) t\u1eadp h\u1ee3p v\u1eabn c\u00f3 th\u1ec3 \u0111\u1ebfn v\u1edbi nhau b\u1eb1ng c\u00e1c c\u1ea1nh n\u00e9t li\u1ec1n. M\u1ed9t \u0111\u1ec9nh thu\u1ed9c \\(A\\) v\u1edbi m\u1ed9t \u0111\u1ec9nh thu\u1ed9c \\(B\\) mu\u1ed1n \u0111i \u0111\u1ebfn v\u1edbi nhau b\u1eb1ng c\u00e1c c\u1ea1nh n\u00e9t li\u1ec1n th\u00ec \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua c\u1ea1nh \\((u, v)\\).</p> <ul> <li>V\u00ed d\u1ee5 minh h\u1ecda: X\u00e9t c\u1ea1nh n\u00e9t li\u1ec1n \\((7, 9)\\) v\u1edbi \u0111\u1ec9nh \\(9\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(7\\) tr\u00ean c\u00e2y \\(DFS\\). T\u1eadp \u0111\u1ec9nh \\(A\\) l\u00e0 c\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u m\u00e0u h\u1ed3ng. T\u1eadp \u0111\u1ec9nh \\(B\\) l\u00e0 c\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u m\u00e0u v\u00e0ng. \u0110\u1ec9nh \\(11\\) thu\u1ed9c t\u1eadp \\(A\\) mu\u1ed1n \u0111i \u0111\u1ebfn \u0111\u1ec9nh \\(6\\) thu\u1ed9c t\u1eadp \\(B\\) b\u1eb1ng c\u00e1c c\u1ea1nh n\u00e9t li\u1ec1n th\u00ec \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua c\u1ea1nh \\((7, 9)\\).</li> </ul> <p></p> </li> <li> <p>Gi\u1ea3 s\u1eed kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u00e0o n\u1ed1i gi\u1eefa \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(A\\) v\u1edbi \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(B\\) th\u00ec khi xo\u00e1 c\u1ea1nh \\((u, v)\\), \\(G\\) s\u1ebd t\u00e1ch ra th\u00e0nh \\(2\\) v\u00f9ng li\u00ean th\u00f4ng \\(A\\) v\u00e0 \\(B\\). Ng\u01b0\u1ee3c l\u1ea1i n\u1ebfu t\u1ed3n t\u1ea1i c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u1ed1i gi\u1eefa \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(A\\) v\u00e0 \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(B\\) \u0111\u1ed3 th\u1ecb v\u1eabn li\u00ean th\u00f4ng . Do \u0111\u00f3 ta ch\u1ec9 c\u1ea7n x\u00e9t xem c\u00f3 t\u1ed3n t\u1ea1i c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u1ed1i gi\u1eefa \\(A\\) v\u00e0 \\(B\\) hay kh\u00f4ng \u0111\u1ec3 k\u1ebft lu\u1eadn \\((u, v)\\) c\u00f3 ph\u1ea3i c\u1ea7u kh\u00f4ng?</p> </li> <li>Ta c\u00f3 t\u1eeb \\(v\\) c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh \\(p\\) n\u00e0o \u0111\u00f3 c\u00f3 \\(num[p]=low[v]\\) b\u1eb1ng c\u00e1ch \u0111i theo c\u00e1c cung c\u1ee7a c\u00e2y \\(DFS\\) v\u00e0 \u0111i qua kh\u00f4ng qu\u00e1 \\(1\\) c\u1ea1nh n\u00e9t \u0111\u1ee9t v\u00e0 \\(p\\) c\u00f3 th\u1ee9 t\u1ef1 th\u0103m s\u1edbm nh\u1ea5t khi \\(DFS\\). N\u1ebfu \\(p\\) n\u1eb1m trong \\(B\\) th\u00ec \\(p\\) ph\u1ea3i l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) c\u0169ng \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c \\(num[p]&lt;num[v]\\) hay \\(low[v]&lt;num[v]\\) (v\u00ec \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 cung ch\u00e9o), ngh\u0129a l\u00e0 t\u1ed3n t\u1ea1i \\(1\\) c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u1ed1i gi\u1eefa \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(A\\) v\u1edbi \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(B\\) (v\u00ec n\u1ebfu ch\u1ec9 \u0111i b\u1eb1ng c\u00e1c cung c\u1ee7a c\u00e2y \\(DFS\\) th\u00ec \\(v\\) kh\u00f4ng th\u1ec3 t\u1edbi m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a n\u00f3).</li> <li>Do \u0111\u00f3 n\u1ebfu \\(low[v] \\ge num[v]\\) ch\u1eafc ch\u1eafn \u0111\u1ec9nh \\(p\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) hay \\(p\\) thu\u1ed9c t\u1eadp h\u1ee3p \\(A\\) khi \u0111\u00f3 kh\u00f4ng t\u1ed3n t\u1ea1i c\u1ea1nh n\u00e9t \u0111\u1ee9t n\u1ed1i gi\u1eefa \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(A\\) v\u1edbi \\(1\\) \u0111\u1ec9nh thu\u1ed9c \\(B\\). Tuy nhi\u00ean, ta d\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y \\(low[v] \\le num[v]\\) v\u00ec \u0111\u1ec9nh \\(v\\) lu\u00f4n t\u1edbi \u0111\u01b0\u1ee3c ch\u00ednh n\u00f3. </li> <li>K\u1ebft lu\u1eadn: N\u1ebfu \\(low[v] = num[v]\\) th\u00ec \\((u, v)\\) l\u00e0 m\u1ed9t c\u1ea1nh c\u1ea7u trong \u0111\u1ed3 th\u1ecb. </li> </ul> </li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#tim-inh-khop","title":"T\u00ecm \u0111\u1ec9nh kh\u1edbp","text":"<ul> <li> <p>Ta s\u1ebd x\u00e9t ri\u00eang t\u1eebng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb. X\u00e9t v\u00f9ng li\u00ean th\u00f4ng \\(G\\) nh\u01b0 sau: </p> <ul> <li> <p>X\u00e9t c\u00e2y con g\u1ed1c \\(u\\) trong c\u00e2y \\(DFS\\) c\u1ee7a \\(G\\), n\u1ebfu m\u1ecdi nh\u00e1nh con c\u1ee7a \\(u\\) \u0111\u1ec1u c\u00f3 cung ng\u01b0\u1ee3c l\u00ean t\u1edbi t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) (\\(low[v] &lt; num[u]\\), v\u1edbi \\(v\\) l\u00e0 t\u1ea5t c\u1ea3 c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(u\\) tr\u00ean c\u00e2y \\(DFS\\)) th\u00ec \u0111\u1ec9nh \\(u\\) kh\u00f4ng th\u1ec3 l\u00e0 \u0111\u1ec9nh kh\u1edbp. B\u1edfi trong \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u, n\u1ebfu ta lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(u\\) \u0111i th\u00ec t\u1eeb m\u1ed7i \u0111\u1ec9nh b\u1ea5t k\u1ef3 thu\u1ed9c nh\u00e1nh con v\u1eabn c\u00f3 th\u1ec3 \u0111i l\u00ean m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a \\(u\\), r\u1ed3i \u0111i sang nh\u00e1nh con kh\u00e1c ho\u1eb7c \u0111i sang t\u1ea5t c\u1ea3 nh\u1eefng \u0111\u1ec9nh c\u00f2n l\u1ea1i c\u1ee7a c\u00e2y n\u00ean s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb kh\u00f4ng thay \u0111\u1ed5i.</p> <ul> <li>V\u00ed d\u1ee5 minh h\u1ecda: X\u00e9t \u0111\u1ec9nh \\(9\\) kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ec9nh kh\u1edbp v\u00ec c\u1ea3 \\(2\\) nh\u00e1nh con c\u1ee7a n\u00f3 l\u00e0 c\u00e2y con g\u1ed1c \\(10\\) v\u00e0 c\u00e2y con g\u1ed1c \\(13\\) trong c\u00e2y \\(DFS\\) \u0111\u1ec1u c\u00f3 cung ng\u01b0\u1ee3c l\u00ean t\u1edbi \u0111\u1ec9nh \\(7\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(9\\).</li> </ul> <p></p> </li> <li> <p>N\u1ebfu \\(u\\) kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y \\(DFS\\), v\u00e0 t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t nh\u00e1nh con trong c\u00e2y con g\u1ed1c \\(u\\) kh\u00f4ng c\u00f3 cung ng\u01b0\u1ee3c l\u00ean m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) (\\(low[v] \\ge num[u]\\), v\u1edbi \\(v\\) l\u00e0 m\u1ed9t con tr\u1ef1c ti\u1ebfp b\u1ea5t k\u00ec c\u1ee7a \\(u\\) tr\u00ean c\u00e2y \\(DFS\\)) th\u00ec \u0111\u1ec9nh \\(u\\) l\u00e0 \u0111\u1ec9nh kh\u1edbp. B\u1edfi khi \u0111\u00f3, t\u1ea5t c\u1ea3 nh\u1eefng cung xu\u1ea5t ph\u00e1t t\u1eeb nh\u00e1nh con \u0111\u00f3 ch\u1ec9 c\u00f3 th\u1ec3 \u0111i t\u1edbi nh\u1eefng \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) m\u00e0 th\u00f4i, tr\u00ean \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u, kh\u00f4ng t\u1ed3n t\u1ea1i c\u1ea1nh n\u1ed1i t\u1eeb nh\u1eefng \u0111\u1ec9nh thu\u1ed9c nh\u00e1nh con \u0111\u00f3 t\u1edbi m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a \\(u\\). V\u1eady n\u00ean t\u1eeb m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec thu\u1ed9c nh\u00e1nh con \u0111\u00f3 mu\u1ed1n \u0111i l\u00ean m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) th\u00ec b\u1eaft bu\u1ed9c ph\u1ea3i \u0111i qua \\(u\\) n\u00ean vi\u1ec7c lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(u\\) ra kh\u1ecfi \u0111\u1ed3 th\u1ecb s\u1ebd l\u00e0m t\u0103ng s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <ul> <li>V\u00ed d\u1ee5 minh h\u1ecda: X\u00e9t \u0111\u1ec9nh \\(2\\) l\u00e0 \u0111\u1ec9nh kh\u1edbp v\u00ec t\u1ed3n t\u1ea1i \\(1\\) nh\u00e1nh con c\u1ee7a n\u00f3 l\u00e0 c\u00e2y con g\u1ed1c \\(4\\) kh\u00f4ng c\u00f3 cung ng\u01b0\u1ee3c l\u00ean t\u1edbi t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(2\\).</li> </ul> <p></p> </li> <li> <p>N\u1ebfu \\(u\\) l\u00e0 \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y \\(DFS\\), th\u00ec \\(u\\) l\u00e0 \u0111\u1ec9nh kh\u1edbp khi v\u00e0 ch\u1ec9 khi \\(u\\) c\u00f3 \u00edt nh\u1ea5t \\(2\\) nh\u00e1nh con. V\u00ec \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 cung ch\u00e9o n\u00ean khi \\(u\\) c\u00f3 \\(2\\) nh\u00e1nh con th\u00ec \u0111\u01b0\u1eddng \u0111i gi\u1eefa hai \u0111\u1ec9nh thu\u1ed9c hai nh\u00e1nh con \u0111\u00f3 b\u1eaft bu\u1ed9c ph\u1ea3i \u0111i qua \\(u\\). Vi\u1ec7c lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(u\\) ra kh\u1ecfi \u0111\u1ed3 th\u1ecb s\u1ebd l\u00e0m t\u0103ng s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <ul> <li>V\u00ed d\u1ee5 minh h\u1ecda: X\u00e9t \u0111\u1ec9nh \\(1\\) l\u00e0 \u0111\u1ec9nh kh\u1edbp v\u00ec \u0111\u1ec9nh \\(1\\) l\u00e0 \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y \\(DFS\\) v\u00e0 c\u00f3 t\u1edbi \\(3\\) nh\u00e1nh con.</li> </ul> <p></p> </li> </ul> </li> <li> <p>K\u1ebft lu\u1eadn: \u0110\u1ec9nh \\(u\\) l\u00e0 \u0111\u1ec9nh kh\u1edbp khi:</p> <ul> <li>\u0110\u1ec9nh \\(u\\) kh\u00f4ng ph\u1ea3i l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y \\(DFS\\) v\u00e0 \\(low[v] \\ge num[u]\\) (v\u1edbi \\(v\\) l\u00e0 m\u1ed9t con tr\u1ef1c ti\u1ebfp b\u1ea5t k\u00ec c\u1ee7a \\(u\\) trong c\u00e2y \\(DFS\\)).</li> </ul> <p>Ho\u1eb7c</p> <ul> <li>\u0110\u1ec9nh \\(u\\) l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y \\(DFS\\) v\u00e0 c\u00f3 \u00edt nh\u1ea5t \\(2\\) con tr\u1ef1c ti\u1ebfp trong c\u00e2y \\(DFS\\).</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 10010</code>  - Bi\u1ebfn <code>timeDfs</code> - Th\u1ee9 t\u1ef1 \\(DFS\\) - Bi\u1ebfn <code>bridge</code> - S\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh c\u1ea7u - M\u1ea3ng <code>low[], num[]</code> - M\u1ea3ng <code>joint[]</code> - \u0110\u00e1nh d\u1ea5u \u0111\u1ec9nh kh\u1edbp - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh </p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 10010;\n\nint n, m;\nbool joint[maxN];\nint timeDfs = 0, bridge = 0;\nint low[maxN], num[maxN];\nvector &lt;int&gt; g[maxN];\n\nvoid dfs(int u, int pre) {\n    int child = 0; // S\u1ed1 l\u01b0\u1ee3ng con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh u trong c\u00e2y DFS\n    num[u] = low[u] = ++timeDfs;\n    for (int v : g[u]) {\n        if (v == pre) continue;\n        if (!num[v]) {\n            dfs(v, u);\n            low[u] = min(low[u], low[v]);\n            if (low[v] == num[v]) bridge++;\n            child++;\n            if (u == pre) { // N\u1ebfu u l\u00e0 \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y DFS\n                if (child &gt; 1) joint[u] = true;\n            }\n            else if (low[v] &gt;= num[u]) joint[u] = true;\n        }\n        else low[u] = min(low[u], num[v]);\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    for (int i = 1; i &lt;= n; i++) \n        if (!num[i]) dfs(i, i);\n\n    int cntJoint = 0;\n    for (int i = 1; i &lt;= n; i++) cntJoint += joint[i];\n\n    cout &lt;&lt; cntJoint &lt;&lt; ' ' &lt;&lt; bridge;\n} \n</code></pre>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(N + M)\\).</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>NKPOLICE - Police</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>\u0110\u1ec3 truy b\u1eaft t\u1ed9i ph\u1ea1m, c\u1ea3nh s\u00e1t x\u00e2y d\u1ef1ng m\u1ed9t h\u1ec7 th\u1ed1ng m\u00e1y t\u00ednh m\u1edbi. B\u1ea3n \u0111\u1ed3 khu v\u1ef1c bao g\u1ed3m \\(N\\) th\u00e0nh ph\u1ed1 v\u00e0 \\(M\\) \u0111\u01b0\u1eddng n\u1ed1i \\(2\\) chi\u1ec1u. C\u00e1c th\u00e0nh ph\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\).</p> <p>C\u1ea3nh s\u00e1t mu\u1ed1n b\u1eaft c\u00e1c t\u1ed9i ph\u1ea1m di chuy\u1ec3n t\u1eeb th\u00e0nh ph\u1ed1 n\u00e0y \u0111\u1ebfn th\u00e0nh ph\u1ed1 kh\u00e1c. C\u00e1c \u0111i\u1ec1u tra vi\u00ean, theo d\u00f5i b\u1ea3n \u0111\u1ed3, ph\u1ea3i x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed thi\u1ebft l\u1eadp tr\u1ea1m g\u00e1c. H\u1ec7 th\u1ed1ng m\u00e1y t\u00ednh m\u1edbi ph\u1ea3i tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c \\(2\\) lo\u1ea1i truy v\u1ea5n sau:</p> <ul> <li>\\(1\\). \u0110\u1ed1i v\u1edbi hai th\u00e0nh ph\u1ed1 \\(A\\), \\(B\\) v\u00e0 m\u1ed9t \u0111\u01b0\u1eddng n\u1ed1i gi\u1eefa hai th\u00e0nh ph\u1ed1 \\(G1\\), \\(G2\\); h\u1ecfi t\u1ed9i ph\u1ea1m c\u00f3 th\u1ec3 di chuy\u1ec3n t\u1eeb \\(A\\) \u0111\u1ebfn \\(B\\) n\u1ebfu \u0111\u01b0\u1eddng n\u1ed1i n\u00e0y b\u1ecb ch\u1eb7n (ngh\u0129a l\u00e0 t\u00ean t\u1ed9i ph\u1ea1m kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng con \u0111\u01b0\u1eddng n\u00e0y) kh\u00f4ng?</li> <li>\\(2\\). \u0110\u1ed1i v\u1edbi \\(3\\) th\u00e0nh ph\u1ed1 \\(A\\), \\(B\\), \\(C\\); h\u1ecfi t\u1ed9i ph\u1ea1m c\u00f3 th\u1ec3 di chuy\u1ec3n t\u1eeb \\(A\\) \u0111\u1ebfn \\(B\\) n\u1ebfu nh\u01b0 to\u00e0n b\u1ed9 th\u00e0nh ph\u1ed1 \\(C\\) b\u1ecb ki\u1ec3m so\u00e1t (ngh\u0129a l\u00e0 t\u00ean t\u1ed9i ph\u1ea1m kh\u00f4ng th\u1ec3 \u0111i v\u00e0o th\u00e0nh ph\u1ed1 n\u00e0y) kh\u00f4ng?</li> </ul> <p>Input - D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a \\(2\\) s\u1ed1 nguy\u00ean \\(N\\) v\u00e0 \\(M\\) \\((2 \\le N \\le 100000, 1 \\le M \\le 500000)\\), s\u1ed1 th\u00e0nh ph\u1ed1 v\u00e0 s\u1ed1 \u0111\u01b0\u1eddng n\u1ed1i. - M\u1ed7i d\u00f2ng trong s\u1ed1 \\(M\\) d\u00f2ng ti\u1ebfp theo ch\u1ee9a \\(2\\) s\u1ed1 nguy\u00ean ph\u00e2n bi\u1ec7t thu\u1ed9c ph\u1ea1m vi \\([1, N]\\) - cho bi\u1ebft nh\u00e3n c\u1ee7a hai th\u00e0nh ph\u1ed1 n\u1ed1i v\u1edbi nhau b\u1edfi m\u1ed9t con \u0111\u01b0\u1eddng. Gi\u1eefa hai th\u00e0nh ph\u1ed1 c\u00f3 nhi\u1ec1u nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng n\u1ed1i. - D\u00f2ng ti\u1ebfp theo ch\u1ee9a s\u1ed1 nguy\u00ean \\(Q\\) \\((1 \\le Q \\le 300000)\\), s\u1ed1 truy v\u1ea5n \u0111\u01b0\u1ee3c th\u1eed nghi\u1ec7m tr\u00ean h\u1ec7 th\u1ed1ng. - M\u1ed7i d\u00f2ng trong \\(Q\\) d\u00f2ng ti\u1ebfp theo ch\u1ee9a \\(4\\) ho\u1eb7c \\(5\\) s\u1ed1 nguy\u00ean. S\u1ed1 \u0111\u1ea7u ti\u00ean cho bi\u1ebft lo\u1ea1i truy v\u1ea5n \\(1\\) ho\u1eb7c \\(2\\).     * N\u1ebfu lo\u1ea1i truy v\u1ea5n l\u00e0 \\(1\\), ti\u1ebfp theo tr\u00ean c\u00f9ng d\u00f2ng l\u00e0 \\(4\\) s\u1ed1 nguy\u00ean \\(A\\), \\(B\\), \\(G1\\), \\(G2\\) v\u1edbi \u00fd ngh\u0129a nh\u01b0 \u0111\u00e3 m\u00f4 t\u1ea3. \\(A\\) kh\u00e1c \\(B\\); \\(G1\\), \\(G2\\) m\u00f4 t\u1ea3 m\u1ed9t con \u0111\u01b0\u1eddng c\u00f3 s\u1eb5n.     * N\u1ebfu lo\u1ea1i truy v\u1ea5n l\u00e0 \\(2\\), ti\u1ebfp theo tr\u00ean c\u00f9ng d\u00f2ng l\u00e0 \\(3\\) s\u1ed1 nguy\u00ean \\(A\\), \\(B\\), \\(C\\) v\u1edbi \u00fd ngh\u0129a nh\u01b0 \u0111\u00e3 m\u00f4 t\u1ea3. \\(A\\), \\(B\\), \\(C\\) \u0111\u00f4i m\u1ed9t kh\u00e1c nhau.</p> <p>D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c cho sao cho ban \u0111\u1ea7u lu\u00f4n c\u00f3 c\u00e1ch di chuy\u1ec3n gi\u1eefa hai th\u00e0nh ph\u1ed1 b\u1ea5t k\u1ef3.</p> <p>Output - G\u1ed3m \\(Q\\) d\u00f2ng, m\u1ed7i d\u00f2ng ch\u1ee9a c\u00e2u tr\u1ea3 l\u1eddi cho m\u1ed9t truy v\u1ea5n. N\u1ebfu c\u00e2u tr\u1ea3 l\u1eddi l\u00e0 kh\u1eb3ng \u0111\u1ecbnh, in ra \"yes\". N\u1ebfu c\u00e2u tr\u1ea3 l\u1eddi l\u00e0 ph\u1ee7 \u0111\u1ecbnh, in ra \"no\".</p> <p>Example</p> <p>Input <pre><code>13 15\n1 2\n2 3\n3 5\n2 4\n4 6\n2 6\n1 4\n1 7\n7 8\n7 9\n7 10\n8 11\n8 12\n9 12\n12 13\n5\n1 5 13 1 2\n1 6 2 1 4\n1 13 6 7 8\n2 13 6 7\n2 13 6 8\n</code></pre></p> <p>Output <pre><code>yes\nyes\nyes\nno\nyes\n</code></pre></p> <p>Note</p> <p></p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>\u0110\u1ec3 t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t c\u00e1ch di chuy\u1ec3n t\u1eeb th\u00e0nh ph\u1ed1 \\(A\\) \u0111\u1ebfn th\u00e0nh ph\u1ed1 \\(B\\) th\u00ec c\u1ea3 \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) ph\u1ea3i c\u00f9ng thu\u1ed9c m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#truy-van-1","title":"Truy v\u1ea5n 1","text":"<ul> <li>D\u1ec5 th\u1ea5y r\u1eb1ng, n\u1ebfu \u0111\u01b0\u1eddng n\u1ed1i gi\u1eefa \\(2\\) th\u00e0nh ph\u1ed1 \\(G1,\\) \\(G2\\) kh\u00f4ng ph\u1ea3i l\u00e0 c\u1ea1nh c\u1ea7u th\u00ec vi\u1ec7c lo\u1ea1i b\u1ecf n\u00f3 \u0111i s\u1ebd kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u00ednh li\u00ean th\u00f4ng gi\u1eefa th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\).</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu \u0111\u01b0\u1eddng n\u1ed1i gi\u1eefa \\(2\\) th\u00e0nh ph\u1ed1 \\(G1,\\) \\(G2\\) l\u00e0 c\u1ea1nh c\u1ea7u th\u00ec ta ph\u1ea3i ki\u1ec3m tra xem \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) c\u00f3 thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf c\u1ea1nh \\((G1,G2)\\) hay kh\u00f4ng?</li> <li>M\u1ed7i khi lo\u1ea1i b\u1ecf m\u1ed9t c\u1ea1nh c\u1ea7u c\u1ee7a \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng th\u00ec s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb s\u1ebd t\u0103ng th\u00eam \\(1\\). Ngh\u0129a l\u00e0 khi ta lo\u1ea1i b\u1ecf c\u1ea1nh c\u1ea7u \\((G1,G2)\\) (v\u1edbi \\(G2\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(G1\\)) th\u00ec \u0111\u1ed3 th\u1ecb s\u1ebd chia ra l\u00e0m \\(2\\) th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng: <ul> <li>Th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng th\u1ee9 nh\u1ea5t l\u00e0 t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(G2\\) c\u1ee7a c\u00e2y \\(DFS\\).</li> <li>Th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng th\u1ee9 nh\u1ea5t l\u00e0 t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh c\u00f2n l\u1ea1i kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(G2\\) c\u1ee7a c\u00e2y \\(DFS\\).</li> </ul> </li> <li> <p>V\u00ed d\u1ee5 minh h\u1ecda: Lo\u1ea1i b\u1ecf c\u1ea1nh c\u1ea7u \\((1,7)\\) (v\u1edbi \u0111\u1ec9nh \\(7\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(1\\))</p> <p></p> </li> <li> <p>B\u00e2y gi\u1edd, ta c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed c\u1ee7a \\(2\\) \u0111\u1ec9nh \\(A,\\) \\(B\\) c\u00f3 n\u1eb1m trong c\u00e2y con g\u1ed1c \\(G2\\) hay kh\u00f4ng.</p> <ul> <li>N\u1ebfu ch\u1ec9 c\u00f3 \u0111\u00fang duy nh\u1ea5t \\(1\\) trong \\(2\\) \u0111\u1ec9nh n\u1eb1m trong c\u00e2y con g\u1ed1c \\(G2\\) th\u00ec \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) kh\u00f4ng thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf c\u1ea1nh \\((G1,G2)\\).</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu c\u1ea3 \\(2\\) \u0111\u1ec9nh c\u00f9ng n\u1eb1m trong c\u00e2y con g\u1ed1c \\(G2\\) ho\u1eb7c c\u1ea3 \\(2\\) \u0111\u1ec9nh \u0111\u1ec1u kh\u00f4ng n\u1eb1m trong c\u00e2y con g\u1ed1c \\(G2\\) th\u00ec \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf c\u1ea1nh \\((G1,G2)\\).</li> </ul> </li> <li>Nh\u1eafc l\u1ea1i: N\u1ebfu \\(num[u] \\le num[v] \\le tail[u]\\) th\u00ec \u0111\u1ec9nh \\(v\\) n\u1eb1m trong c\u00e2y con g\u1ed1c \\(u\\) c\u1ee7a c\u00e2y \\(DFS\\).</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#truy-van-2","title":"Truy v\u1ea5n 2","text":"<ul> <li>D\u1ec5 th\u1ea5y r\u1eb1ng, n\u1ebfu th\u00e0nh ph\u1ed1 \\(C\\) kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ec9nh kh\u1edbp th\u00ec vi\u1ec7c lo\u1ea1i b\u1ecf n\u00f3 \u0111i s\u1ebd kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u00ednh li\u00ean th\u00f4ng gi\u1eefa th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\).</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu th\u00e0nh ph\u1ed1 \\(C\\) l\u00e0 \u0111\u1ec9nh kh\u1edbp th\u00ec ta ph\u1ea3i ki\u1ec3m tra xem \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) c\u00f3 thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(C\\) v\u00e0 c\u00e1c c\u1ea1nh li\u00ean thu\u1ed9c v\u1edbi n\u00f3 \u0111i hay kh\u00f4ng?</li> <li>V\u00ec \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 cung ch\u00e9o n\u00ean khi lo\u1ea1i b\u1ecf \u0111\u1ec9nh kh\u1edbp \\(C\\) ra kh\u1ecfi \u0111\u1ed3 th\u1ecb th\u00ec s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb t\u0103ng th\u00eam m\u1ed9t l\u01b0\u1ee3ng b\u1eb1ng s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh \\(v\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(C\\) trong c\u00e2y \\(DFS\\) sao cho kh\u00f4ng t\u1ed3n t\u1ea1i cung ng\u01b0\u1ee3c (c\u1ea1nh n\u00e9t \u0111\u1ee9t) t\u1eeb m\u1ed9t \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) trong c\u00e2y \\(DFS\\) n\u1ed1i l\u00ean t\u1ed5 ti\u00ean c\u1ee7a \\(C\\) (\u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c \\(low[v] \\ge num[C]\\)). Ngh\u0129a l\u00e0 khi ta lo\u1ea1i b\u1ecf \u0111\u1ec9nh kh\u1edbp \\(C\\) ra kh\u1ecfi \u0111\u1ed3 th\u1ecb th\u00ec \u0111\u1ed3 th\u1ecb s\u1ebd chia ra l\u00e0m c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng:<ul> <li>M\u1ed9t s\u1ed1 th\u00e0nh ph\u00e2n li\u00ean th\u00f4ng, m\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng l\u00e0 \\(1\\) t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) v\u1edbi \\(v\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(C\\) trong c\u00e2y \\(DFS\\) v\u00e0 \\(low[v] \\ge num[C]\\).</li> <li>M\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng l\u00e0 t\u1eadp h\u1ee3p t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f2n l\u1ea1i (bao g\u1ed3m c\u00e1c \u0111\u1ec9nh l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a c\u1ee7a \\(C\\) v\u00e0 c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e1c c\u00e2y con g\u1ed1c \\(u\\) v\u1edbi \\(u\\) l\u00e0 c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(C\\) trong c\u00e2y \\(DFS\\) v\u00e0 \\(low[u] &lt; num[C]\\)).</li> </ul> </li> <li> <p>V\u00ed d\u1ee5 minh h\u1ecda: Lo\u1ea1i b\u1ecf \u0111\u1ec9nh kh\u1edbp \\(8\\). \u0110\u1ec9nh \\(11\\) v\u00e0 \\(12\\) l\u00e0 c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(8\\) trong c\u00e2y \\(DFS\\). Nh\u01b0ng ch\u1ec9 c\u00f3 c\u00e2y con g\u1ed1c \\(11\\) l\u00e0 t\u00e1ch ri\u00eang ra th\u00e0nh \\(1\\) th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng ri\u00eang bi\u1ec7t. C\u00f2n c\u00e2y con g\u1ed1c \\(12\\) th\u00ec c\u00f3 \\(1\\) cung ng\u01b0\u1ee3c n\u1ed1i l\u00ean \u0111\u1ec9nh \\(7\\) (t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(8\\)) n\u00ean s\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a c\u1ea3 \u0111\u1ed3 th\u1ecb ch\u1ec9 t\u0103ng th\u00eam \\(1\\).</p> <p></p> </li> <li> <p>V\u1edbi m\u1ed7i \u0111\u1ec9nh \\(v\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(C\\) trong c\u00e2y \\(DFS\\) v\u00e0 \\(low[v] \\ge num[C]\\), ta ki\u1ec3m tra xem n\u1ebfu ch\u1ec9 c\u00f3 \u0111\u00fang duy nh\u1ea5t \\(1\\) trong \\(2\\) \u0111\u1ec9nh n\u1eb1m trong c\u00e2y con g\u1ed1c \\(v\\) th\u00ec \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) kh\u00f4ng thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(C\\) v\u00e0 c\u00e1c c\u1ea1nh li\u00ean thu\u1ed9c v\u1edbi \u0111\u1ec9nh \\(C\\) \u0111i. </p> </li> <li>Ng\u01b0\u1ee3c l\u1ea1i, v\u1edbi \\(v\\) l\u00e0 c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(C\\) trong c\u00e2y \\(DFS\\) v\u00e0 \\(low[v] \\ge num[C]\\), n\u1ebfu c\u1ea3 \\(2\\) \u0111\u1ec9nh \\(A\\) v\u00e0 \\(B\\) c\u00f9ng n\u1eb1m trong \\(1\\) c\u00e2y con g\u1ed1c \\(v\\) ho\u1eb7c c\u1ea3 \\(2\\) \u0111\u1ec9nh \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u kh\u00f4ng n\u1eb1m trong b\u1ea5t c\u1ee9 \\(1\\) c\u00e2y con g\u1ed1c \\(v\\) n\u00e0o c\u1ea3 (\u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c c\u1ea3 \\(2\\) \u0111\u1ec9nh \\(A,\\) \\(B\\) s\u1ebd c\u00f9ng n\u1eb1m trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u00f2n l\u1ea1i) th\u00ec \\(2\\) th\u00e0nh ph\u1ed1 \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(C\\) v\u00e0 c\u00e1c c\u1ea1nh li\u00ean thu\u1ed9c v\u1edbi \u0111\u1ec9nh \\(C\\) \u0111i.</li> <li>Tuy nhi\u00ean theo thu\u1eadt to\u00e1n tr\u00ean th\u00ec v\u1edbi m\u1ed7i truy v\u1ea5n ta s\u1ebd ph\u1ea3i duy\u1ec7t h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh C n\u00ean khi x\u1eed l\u00ed c\u00e1c truy v\u1ea5n s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 O(Q\u22c5 b\u1eadc c\u1ee7a C). Trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t th\u00ec \u0111\u1ec9nh C c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn N - 1 con tr\u1ef1c ti\u1ebfp (100000 - 1) v\u1edbi s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n Q = 300000, khi\u1ebfn cho thu\u1eadt to\u00e1n tr\u00ean s\u1ebd b\u1ecb qu\u00e1 th\u1eddi gian. B\u00e2y gi\u1edd ta c\u1ea7n ph\u1ea3i c\u1ea3i ti\u1ebfn thu\u1eadt to\u00e1n :</li> <li>Thay v\u00ec duy\u1ec7t h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(C\\) \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c t\u1ed5 ti\u00ean c\u1ee7a \\(A\\), t\u1ed5 ti\u00ean c\u1ee7a \\(B\\). Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \\(Sparse Table\\) \u0111\u1ec3 t\u00ecm ra t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(A\\) (ho\u1eb7c \\(B\\)) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(C\\) n\u1ebfu \\(A\\) (ho\u1eb7c \\(B\\)) n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\). B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 Sparse Table v\u00e0 \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3 t\u1ea1i \u0111\u00e2y.</li> <li>G\u1ecdi \u0111\u1ec9nh \\(pa\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(A\\) v\u00e0 l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(C\\).</li> <li>G\u1ecdi \u0111\u1ec9nh \\(pb\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(B\\) v\u00e0 l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(C\\).</li> <li>\\(A\\) v\u00e0 \\(B\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(C\\) v\u00e0 c\u00e1c c\u1ea1nh li\u00ean thu\u1ed9c v\u1edbi \u0111\u1ec9nh \\(C\\) \u0111i khi th\u1ecfa m\u00e3n m\u1ed9t trong s\u1ed1 c\u00e1c \u0111i\u1ec1u ki\u1ec7n sau:<ul> <li>N\u1ebfu c\u1ea3 \\(2\\) \u0111\u1ec9nh \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u kh\u00f4ng n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\).</li> <li>N\u1ebfu \\(pa = pb\\) (ngh\u0129a l\u00e0 c\u1ea3 \\(2\\) \u0111\u1ec9nh \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(pa\\) ).</li> <li>N\u1ebfu \\(A\\) kh\u00f4ng n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\) v\u00e0 \\(B\\) n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\) sao cho \\(low[pb] &lt; num[C]\\) (ngh\u0129a l\u00e0 c\u00f3 t\u1ed3n t\u1ea1i cung ng\u01b0\u1ee3c n\u1ed1i t\u1eeb c\u00e2y con \\(DFS\\) g\u1ed1c \\(pb\\) l\u00ean t\u1ed5 ti\u00ean c\u1ee7a \\(C\\) ).</li> <li>N\u1ebfu \\(B\\) kh\u00f4ng n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\) v\u00e0 \\(A\\) n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\) sao cho \\(low[pa] &lt; num[C]\\) (ngh\u0129a l\u00e0 c\u00f3 t\u1ed3n t\u1ea1i cung ng\u01b0\u1ee3c n\u1ed1i t\u1eeb c\u00e2y con \\(DFS\\) g\u1ed1c \\(pa\\) l\u00ean t\u1ed5 ti\u00ean c\u1ee7a \\(C\\) ).</li> <li>N\u1ebfu c\u1ea3 \\(2\\) \u0111\u1ec9nh \\(A\\) v\u00e0 \\(B\\) \u0111\u1ec1u n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(C\\) v\u00e0  \\(low[pa] &lt; num[c]\\) v\u00e0 \\(low[pb] &lt; num[c]\\) (ngh\u0129a l\u00e0 c\u1ea3 \\(2\\) c\u00e2y con \\(DFS\\) g\u1ed1c \\(pa\\) v\u00e0 c\u00e2y con \\(DFS\\) g\u1ed1c \\(pb\\) \u0111\u1ec1u c\u00f3 cung ng\u01b0\u1ee3c n\u1ed1i l\u00ean t\u1ed5 ti\u00ean c\u1ee7a \\(C\\) )</li> </ul> </li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu kh\u00f4ng th\u1ecfa m\u00e3n t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec1u ki\u1ec7n tr\u00ean th\u00ec \\(A\\) v\u00e0 \\(B\\) kh\u00f4ng thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng sau khi lo\u1ea1i b\u1ecf \u0111\u1ec9nh \\(C\\) v\u00e0 c\u00e1c c\u1ea1nh li\u00ean thu\u1ed9c v\u1edbi \u0111\u1ec9nh \\(C\\) \u0111i. </li> <li>L\u00fac n\u00e0y, \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111\u1ec3 x\u1eed l\u00ed c\u00e1c truy v\u1ea5n s\u1ebd l\u00e0 \\(O(Q \\cdot logN)\\).</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 100010</code>  - Bi\u1ebfn <code>timeDfs</code> - Th\u1ee9 t\u1ef1 \\(DFS\\) - M\u1ea3ng <code>low[], num[], tail[]</code> - M\u1ea3ng <code>depth[]</code> - L\u01b0u chi\u1ec1u s\u00e2u c\u1ee7a m\u1ed7i \u0111\u1ec9nh trong c\u00e2y \\(DFS\\) - M\u1ea3ng <code>p[][]</code> - M\u1ea3ng \u1ee9ng d\u1ee5ng \\(Sparse Table\\) v\u1edbi \\(p[i][j]\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(i\\) trong c\u00e2y \\(DFS\\) - M\u1ea3ng <code>joint[]</code> - \u0110\u00e1nh d\u1ea5u \u0111\u1ec9nh kh\u1edbp - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh </p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 100010;\n\nint n, m, q;\nint timeDfs = 0;\nint low[maxN], num[maxN], tail[maxN];\nint depth[maxN], p[maxN][20];\nbool joint[maxN];\nvector &lt;int&gt; g[maxN];\n\n/* T\u00ednh m\u1ea3ng p */\nvoid calP() {\n    p[1][0] = 1;\n    for (int j = 1; j &lt;= 19; j++)\n        for (int i = 1; i &lt;= n; i++)\n            p[i][j] = p[p[i][j - 1]][j - 1];\n}\n\n/* T\u00ecm t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh u l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh par */\nint findParent(int u, int par) {\n    for (int i = 19; i &gt;= 0; i--)\n        if (depth[p[u][i]] &gt; depth[par]) u = p[u][i];\n    return u;\n}\n\n/* T\u00ecm kh\u1edbp c\u1ea7u */\nvoid dfs(int u, int pre) {\n    int child = 0;\n    num[u] = low[u] = ++timeDfs;\n    for (int v : g[u]){\n        if (v == pre) continue;\n        if (!num[v]) {\n            child++;\n            p[v][0] = u;\n            depth[v] = depth[u] + 1;\n            dfs(v, u);\n            low[u] = min(low[u], low[v]);\n            if (u == pre) {\n                if (child &gt; 1) joint[u] = true;\n            }\n            else if (low[v] &gt;= num[u]) joint[u] = true;\n        }\n        else low[u] = min(low[u], num[v]);\n    }\n    tail[u] = timeDfs;\n}\n\n/* Ki\u1ec3m tra xem \u0111\u1ec9nh u c\u00f3 n\u1eb1m trong c\u00e2y con DFS g\u1ed1c root hay kh\u00f4ng? */\nbool checkInSubtree(int u, int root) {\n    return num[root] &lt;= num[u] &amp;&amp; num[u] &lt;= tail[root];\n}\n\n/* X\u1eed l\u00ed truy v\u1ea5n 1 */\nbool solve1(int a, int b, int g1, int g2) {\n    /* V\u00ec ta coi g2 l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a g1 n\u00ean khi g1 l\u00e0 con c\u1ee7a g2, \n    ta ph\u1ea3i \u0111\u1ed5i ch\u1ed7 2 gi\u00e1 tr\u1ecb g1 v\u00e0 g2 cho nhau */\n    if (num[g1] &gt; num[g2]) swap(g1, g2); \n\n    /* Ki\u1ec3m tra n\u1ebfu c\u1ea1nh (g1, g2) kh\u00f4ng ph\u1ea3i l\u00e0 c\u1ea7u */\n    if (low[g2] != num[g2]) return true;\n\n    if (checkInSubtree(a, g2) &amp;&amp; !checkInSubtree(b, g2)) return false;\n    if (checkInSubtree(b, g2) &amp;&amp; !checkInSubtree(a, g2)) return false;\n    return true;\n}\n\n/* X\u1eed l\u00ed truy v\u1ea5n 2 */\nbool solve2(int a, int b, int c) {\n    if (!joint[c]) return true;\n    int pa = 0, pb = 0;\n    if (checkInSubtree(a, c)) pa = findParent(a, c);\n    if (checkInSubtree(b, c)) pb = findParent(b, c);\n\n    if (!pa &amp;&amp; !pb) return true; \n    if (pa == pb) return true; \n    if (!pa &amp;&amp; low[pb] &lt; num[c]) return true; \n    if (!pb &amp;&amp; low[pa] &lt; num[c]) return true;\n    if (pa &amp;&amp; pb &amp;&amp; low[pa] &lt; num[c] &amp;&amp; low[pb] &lt; num[c]) return true;\n\n    return false;\n}\n\nint main() {\n    ios_base::sync_with_stdio(0); \n    cin.tie(0);\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    depth[1] = 1;\n    dfs(1, 1);\n    calP();\n    cin &gt;&gt; q;\n    while (q--) {\n        int type, a, b, c, g1, g2;\n        cin &gt;&gt; type;\n        if (type == 1) {\n            cin &gt;&gt; a &gt;&gt; b &gt;&gt; g1 &gt;&gt; g2;\n            cout &lt;&lt; (solve1(a, b, g1, g2) ? \"yes\\n\" : \"no\\n\");\n        }\n        else {\n            cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n            cout &lt;&lt; (solve2(a, b, c) ? \"yes\\n\" : \"no\\n\");\n        }\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#anh-gia_1","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(N + M + Q \\cdot logN)\\)</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#bai-toan-3","title":"B\u00e0i to\u00e1n 3","text":"<p>KBUILD - S\u1eeda c\u1ea7u</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \\(N\\) h\u00f2n \u0111\u1ea3o v\u00e0 \\(N - 1\\) c\u00e2y c\u1ea7u, m\u1ed7i c\u00e2y c\u1ea7u n\u1ed1i hai h\u00f2n \u0111\u1ea3o l\u1ea1i v\u1edbi nhau. \u0110\u1ea3m b\u1ea3o r\u1eb1ng t\u1eeb m\u1ed9t \u0111\u1ea3o b\u1ea5t k\u00ec lu\u00f4n c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c h\u1ebft m\u1ecdi \u0111\u1ea3o c\u00f2n l\u1ea1i. Pirate \u0111\u01b0a ra m\u1ed9t l\u1ecbch tr\u00ecnh nh\u01b0 sau: v\u00e0o m\u1ed7i ng\u00e0y s\u1ebd \u0111i ki\u1ec3m tra m\u1ecdi c\u00e2y c\u1ea7u tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ea3o \\(a\\) \u0111\u1ebfn \u0111\u1ea3o \\(b\\). H\u1ecfi sau khi Pirate th\u1ef1c hi\u1ec7n xong l\u1ecbch tr\u00ecnh \u0111\u00f3, th\u00ec c\u00f2n c\u00f3 bao nhi\u00eau c\u00e2y c\u1ea7u ch\u01b0a \u0111\u01b0\u1ee3c ki\u1ec3m tra?</p> <p>Input - D\u00f2ng th\u1ee9 nh\u1ea5t: s\u1ed1 nguy\u00ean \\(N\\) - s\u1ed1 l\u01b0\u1ee3ng h\u00f2n \u0111\u1ea3o. - \\(N - 1\\) d\u00f2ng ti\u1ebfp theo: m\u1ed7i d\u00f2ng ch\u1ee9a \\(2\\) s\u1ed1 nguy\u00ean \\(a\\) v\u00e0 \\(b\\) - c\u00f3 m\u1ed9t c\u00e2y c\u1ea7u n\u1ed1i \u0111\u1ea3o \\(a\\) v\u00e0 \\(b\\). - D\u00f2ng th\u1ee9 \\(N + 1\\): S\u1ed1 nguy\u00ean \\(M\\) - s\u1ed1 ng\u00e0y ki\u1ec3m tra. - \\(M\\) d\u00f2ng ti\u1ebfp theo: m\u1ed7i d\u00f2ng ch\u1ee9a \\(2\\) s\u1ed1 nguy\u00ean \\(a\\) v\u00e0 \\(b\\) - ng\u00e0y h\u00f4m \u0111\u00f3, Pirate s\u1ebd \u0111i ki\u1ec3m tra m\u1ecdi c\u00e2y c\u1ea7u tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ea3o \\(a\\) \u0111\u1ebfn \u0111\u1ea3o \\(b\\).</p> <p>\\(1 \\le N, M \\le 200000\\)</p> <p>Output - M\u1ed9t s\u1ed1 nguy\u00ean duy nh\u1ea5t th\u1ec3 hi\u1ec7n s\u1ed1 c\u00e2y c\u1ea7u ch\u01b0a \u0111\u01b0\u1ee3c ki\u1ec3m tra.</p> <p>Input</p> <pre><code>6\n1 2\n2 3\n2 4\n4 5\n4 6\n2\n3 6\n5 6\n</code></pre> <p>Output</p> <pre><code>1\n</code></pre> <p>Note - Ng\u00e0y th\u1ee9 nh\u1ea5t, Pirate ki\u1ec3m tra c\u00e1c c\u00e2y c\u1ea7u \\((2, 3), (2, 4)\\) v\u00e0 \\((4, 6)\\). Ng\u00e0y th\u1ee9 hai, anh ki\u1ec3m tra c\u00e1c c\u00e2y c\u1ea7u \\((5, 4)\\) v\u00e0 \\((4, 6)\\). C\u00e2y c\u1ea7u duy nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c ki\u1ec3m tra l\u00e0 \\((1, 2)\\).</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>V\u00ec \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u li\u00ean th\u00f4ng v\u00e0 c\u00f3 \\(N - 1\\) c\u1ea1nh n\u00ean \u0111\u00e2y l\u00e0 \u0111\u1ed3 th\u1ecb d\u1ea1ng c\u00e2y.</p> <p>\u0110\u1ec3 \u0111\u00e1nh d\u1ea5u c\u00e1c c\u1ea1nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh \\(v\\) tr\u00ean c\u00e2y, th\u00ec ta c\u00f3 th\u1ec3 th\u00eam m\u1ed9t c\u1ea1nh \\((u,v)\\) v\u00e0o \u0111\u1ed3 th\u1ecb. Khi \u0111\u00f3, c\u00e1c c\u1ea1nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u \\rightarrow v\\) tr\u00ean c\u00e2y s\u1ebd n\u1eb1m trong \\(1\\) chu tr\u00ecnh. T\u1eeb \u0111\u00f3, b\u00e0i to\u00e1n s\u1ebd quy v\u1ec1 th\u00e0nh b\u00e0i to\u00e1n \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh c\u1ea7u c\u1ee7a \u0111\u1ed3 th\u1ecb. - V\u00ed d\u1ee5 minh h\u1ecda: \u0110\u1ec3 d\u00e1nh d\u1ea5u \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(3 \\rightarrow 6\\) v\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(5 \\rightarrow 6\\), ta th\u00eam c\u1ea1nh \\((3, 6)\\), \\((5, 6)\\) v\u00e0o \u0111\u1ed3 th\u1ecb. Khi \u0111\u00f3, \u0111\u1ed3 th\u1ecb c\u00f3 m\u1ed9t c\u1ea1nh c\u1ea7u l\u00e0 c\u1ea1nh \\((1, 2)\\).</p> <pre><code>![/uploads/Depth-First-Search-Tree_img13.png](/uploads/Depth-First-Search-Tree_img13.png)\n</code></pre>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 200010</code>  - Bi\u1ebfn <code>timeDfs</code> - Th\u1ee9 t\u1ef1 \\(DFS\\) - Bi\u1ebfn <code>bridge</code> - S\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh c\u1ea7u - M\u1ea3ng <code>low[], num[]</code> - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh </p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 2e5 + 10;\n\nint n, m;\nint timeDfs = 0, bridge = 0;\nint low[maxN], num[maxN];\nvector &lt;int&gt; g[maxN];\n\nvoid dfs(int u, int pre) {\n    num[u] = low[u] = ++timeDfs;\n    for (int v : g[u]) {\n        if (v == pre) continue;\n        if (!num[v]) {\n            dfs(v, u);\n            low[u] = min(low[u], low[v]);\n            if (low[v] == num[v]) bridge++;\n        }\n        else low[u] = min(low[u], num[v]);\n    }\n}\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt; n; i++) {\n        int a, b;\n        cin &gt;&gt; a &gt;&gt; b;\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n    cin &gt;&gt; m;\n    while (m--) {\n        int a, b;\n        cin &gt;&gt; a &gt;&gt; b;\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n    dfs(1, 1);\n    cout &lt;&lt; bridge;\n}\n</code></pre>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#anh-gia_2","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(N + (N - 1 + M))\\).</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#ung-dung-cay-dfs-trong-bai-toan-liet-ke-thanh-phan-lien-thong-manh","title":"\u1ee8ng d\u1ee5ng c\u00e2y DFS trong b\u00e0i to\u00e1n li\u1ec7t k\u00ea th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh","text":""},{"location":"algo/graph-theory/Depth-First-Search-Tree/#inh-nghia_1","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>M\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 li\u00ean th\u00f4ng m\u1ea1nh n\u1ebfu nh\u01b0 t\u1eeb m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec lu\u00f4n t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u1ebfn b\u1ea5t k\u00ec \u0111\u1ec9nh n\u00e0o kh\u00e1c. </li> <li>M\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb con t\u1ed1i \u0111\u1ea1i li\u00ean th\u00f4ng m\u1ea1nh. N\u1ebfu m\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh \u0111\u01b0\u1ee3c co l\u1ea1i th\u00e0nh m\u1ed9t \u0111\u1ec9nh, th\u00ec \u0111\u1ed3 th\u1ecb s\u1ebd tr\u1edf th\u00e0nh m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng c\u00f3 chu tr\u00ecnh.</li> <li>Thu\u1eadt to\u00e1n \\(Kosaraju\\), thu\u1eadt to\u00e1n \\(Tarjan\\), v\u00e0 thu\u1eadt to\u00e1n \\(Gabow\\) \u0111\u1ec1u c\u00f3 th\u1ec3 t\u00ecm c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb cho tr\u01b0\u1edbc trong th\u1eddi gian tuy\u1ebfn t\u00ednh. Tuy nhi\u00ean, c\u00e1c thu\u1eadt to\u00e1n c\u1ee7a \\(Tarjan\\)  th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u h\u01a1n do ch\u00fang ch\u1ec9 c\u1ea7n th\u1ef1c hi\u1ec7n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u m\u1ed9t l\u1ea7n trong khi thu\u1eadt to\u00e1n c\u1ee7a \\(Kosaraju\\) c\u1ea7n hai l\u1ea7n.</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#mot-so-inh-ly-quan-trong","title":"M\u1ed9t s\u1ed1 \u0111\u1ecbnh l\u00fd quan tr\u1ecdng","text":"<ul> <li> <p>\u0110\u1ecbnh l\u00fd 1: N\u1ebfu \\(a\\), \\(b\\) l\u00e0 hai \u0111\u1ec9nh thu\u1ed9c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh \\(C\\) th\u00ec v\u1edbi m\u1ecdi \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(a\\) t\u1edbi \\(b\\) c\u0169ng nh\u01b0 t\u1eeb \\(b\\) t\u1edbi \\(a\\). T\u1ea5t c\u1ea3 \u0111\u1ec9nh trung gian tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u00f3 \u0111\u1ec1u ph\u1ea3i thu\u1ed9c \\(C\\). Ch\u1ee9ng minh: N\u1ebfu \\(a\\) v\u00e0 \\(b\\) l\u00e0 hai \u0111\u1ec9nh thu\u1ed9c \\(C\\) th\u00ec t\u1ee9c l\u00e0 c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(a\\) \u0111\u1ebfn \\(b\\) v\u00e0 m\u1ed9t \u0111\u01b0\u1eddng kh\u00e1c \u0111i t\u1eeb \\(b\\) v\u1ec1 \\(a\\). Suy ra v\u1edbi m\u1ed9t \u0111\u1ec9nh \\(v\\) n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(a\\) t\u1edbi \\(b\\) th\u00ec \\(a\\) t\u1edbi \u0111\u01b0\u1ee3c \\(v\\), \\(v\\) t\u1edbi \u0111\u01b0\u1ee3c \\(b\\), m\u00e0 \\(b\\) c\u00f3 \u0111\u01b0\u1eddng t\u1edbi \\(a\\) n\u00ean \\(v\\) c\u0169ng t\u1edbi \u0111\u01b0\u1ee3c \\(a\\). V\u1eady \\(v\\) n\u1eb1m trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a \\(a\\) t\u1ee9c l\u00e0 \\(v\\) thu\u1ed9c \\(C\\). T\u01b0\u01a1ng t\u1ef1 v\u1edbi m\u1ed9t \u0111\u1ec9nh n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(b\\) t\u1edbi \\(a\\).</p> </li> <li> <p>\u0110\u1ecbnh l\u00fd 2: V\u1edbi m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh \\(C\\) b\u1ea5t k\u1ef3, t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u1ec9nh \\(r\\) thu\u1ed9c \\(C\\) sao cho m\u1ecdi \u0111\u1ec9nh c\u1ee7a \\(C\\) \u0111\u1ec1u thu\u1ed9c c\u00e2y con g\u1ed1c \\(r\\) trong c\u00e2y \\(DFS\\). Ch\u1ee9ng minh: Tr\u01b0\u1edbc h\u1ebft, nh\u1eafc l\u1ea1i m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb con li\u00ean th\u00f4ng m\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t t\u1ed1i \u0111\u1ea1i t\u1ee9c l\u00e0 vi\u1ec7c th\u00eam v\u00e0o th\u00e0nh ph\u1ea7n \u0111\u00f3 m\u1ed9t t\u1eadp h\u1ee3p \u0111\u1ec9nh kh\u00e1c s\u1ebd l\u00e0m m\u1eaft \u0111i t\u00ednh li\u00ean th\u00f4ng m\u1ea1nh.</p> <p>Trong s\u1ed1 c\u00e1c \u0111\u1ec9nh c\u1ee7a \\(C\\), ch\u1ecdn \\(r\\) l\u00e0 \u0111\u1ec9nh \u0111\u01b0\u1ee3c th\u0103m \u0111\u1ea7u ti\u00ean theo thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u. Ta s\u1ebd ch\u1ee9ng minh \\(C\\) n\u1eb1m trong nh\u00e1nh \\(DFS\\) g\u1ed1c \\(r\\). Th\u1eadt v\u1eady, v\u1edbi m\u1ed9t \u0111\u1ec9nh \\(v\\) b\u1ea5t k\u1ef3 c\u1ee7a \\(C\\), do \\(C\\) li\u00ean th\u00f4ng m\u1ea1nh n\u00ean ph\u1ea3i t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(r\\) t\u1edbi \\(v\\): \\((r = x_0, x_1,..., x_k = v)\\)</p> <p>T\u1eeb \u0111\u1ecbnh l\u00fd \\(1\\), t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(x_1, x_2,..., x_k\\) \u0111\u1ec1u thu\u1ed9c \\(C\\) n\u00ean ch\u00fang s\u1ebd ph\u1ea3i th\u0103m sau \u0111\u1ec9nh \\(r\\). Khi th\u1ee7 t\u1ee5c \\(DFS(r)\\) \u0111\u01b0\u1ee3c g\u1ecdi th\u00ec t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(x_1, x_2,..., x_k\\) \u0111\u1ec1u ch\u01b0a th\u0103m; v\u00ec th\u1ee7 t\u1ee5c \\(DFS(r)\\) s\u1ebd li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 nh\u1eefng \u0111\u1ec9nh ch\u01b0a th\u0103m \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(r\\) b\u1eb1ng c\u00e1ch x\u00e2y d\u1ef1ng nh\u00e1nh g\u1ed1c \\(r\\) c\u1ee7a c\u00e2y \\(DFS\\), n\u00ean c\u00e1c \u0111\u1ec9nh \\(x_1, x_2,..., x_k = v\\) s\u1ebd thu\u1ed9c nh\u00e1nh g\u1ed1c \\(r\\) c\u1ee7a c\u00e2y \\(DFS\\). B\u1edfi ch\u1ecdn \\(v\\) l\u00e0 \u0111\u1ec9nh b\u1ea5t k\u1ef3 trong \\(C\\) n\u00ean ta c\u00f3 \u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh.</p> <p>\u0110\u1ec9nh \\(r\\) trong ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd - \u0111\u1ec9nh th\u0103m tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh kh\u00e1c trong \\(C\\) - g\u1ecdi l\u00e0 ch\u1ed1t c\u1ee7a th\u00e0nh ph\u1ea7n \\(C\\). M\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh c\u00f3 duy nh\u1ea5t m\u1ed9t ch\u1ed1t. X\u00e9t v\u1ec1 v\u1ecb tr\u00ed trong c\u00e2y t\u00ecm ki\u1ebfm \\(DFS\\), ch\u1ed1t c\u1ee7a m\u1ed9t th\u00e0nh ph\u00e2n li\u00ean th\u00f4ng l\u00e0 \u0111\u1ec9nh n\u1eb1m cao nh\u1ea5t so v\u1edbi c\u00e1c \u0111\u1ec9nh kh\u00e1c thu\u1ed9c th\u00e0nh ph\u1ea7n \u0111\u00f3, hay n\u00f3i c\u00e1ch kh\u00e1c: l\u00e0 ti\u1ec1n b\u1ed1i c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh thu\u1ed9c th\u00e0nh ph\u1ea7n \u0111\u00f3.</p> </li> <li> <p>\u0110\u1ecbnh l\u00fd 3: Lu\u00f4n t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ec9nh ch\u1ed1t \\(a\\) th\u1ecfa m\u00e3n: Qu\u00e1 tr\u00ecnh t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u b\u1eaft \u0111\u1ea7u t\u1eeb \\(a\\) kh\u00f4ng th\u0103m \u0111\u01b0\u1ee3c b\u1ea5t k\u1ef3 m\u1ed9t ch\u1ed1t n\u00e0o kh\u00e1c. (T\u1ee9c l\u00e0 nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) kh\u00f4ng ch\u1ee9a m\u1ed9t ch\u1ed1t n\u00e0o ngo\u00e0i \\(a\\)) ch\u1eb3ng h\u1ea1n ta ch\u1ecdn \\(a\\) l\u00e0 ch\u1ed1t \u0111\u01b0\u1ee3c th\u0103m sau c\u00f9ng trong m\u1ed9t d\u00e2y chuy\u1ec1n \u0111\u1ec7 quy ho\u1eb7c ch\u1ecdn \\(a\\) l\u00e0 ch\u1ed1t th\u0103m sau t\u1ea5t c\u1ea3 c\u00e1c ch\u1ed1t kh\u00e1c. V\u1edbi ch\u1ed1t \\(a\\) nh\u01b0 v\u1eady th\u00ec c\u00e1c \u0111\u1ec9nh thu\u1ed9c nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) ch\u00ednh l\u00e0 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a \\(a\\). Ch\u1ee9ng minh: V\u1edbi m\u1ecdi \u0111\u1ec9nh \\(v\\) n\u1eb1m trong nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\), x\u00e9t \\(b\\) l\u00e0 ch\u1ed1t c\u1ee7a th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a \\(v\\). Ta s\u1ebd ch\u1ee9ng minh \\(a = b\\). Th\u1eadt v\u1eady, theo \u0111\u1ecbnh l\u00fd \\(2\\), \\(v\\) ph\u1ea3i n\u1eb1m trong nh\u00e1nh \\(DFS\\) g\u1ed1c \\(b\\). V\u1eady \\(v\\) n\u1eb1m trong c\u1ea3 nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) v\u00e0 nh\u00e1nh \\(DFS\\) g\u1ed1c \\(b\\). Gi\u1ea3 s\u1eed ph\u1ea3n ch\u1ee9ng r\u1eb1ng \\(a\\) kh\u00e1c \\(b\\) th\u00ec s\u1ebd c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra:</p> <ul> <li>Tr\u01b0\u1eddng h\u1ee3p 1: Nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) ch\u1ee9a nh\u00e1nh \\(DFS\\) g\u1ed1c \\(b\\), c\u00f3 ngh\u0129a l\u00e0 th\u1ee7 t\u1ee5c \\(DFS(b)\\) s\u1ebd do th\u1ee7 t\u1ee5c \\(DFS(a)\\) g\u1ecdi t\u1edbi, \u0111i\u1ec1u n\u00e0y m\u00e2u thu\u1eabn v\u1edbi gi\u1ea3 thi\u1ebft r\u1eb1ng \\(a\\) l\u00e0 ch\u1ed1t m\u00e0 qu\u00e1 tr\u00ecnh t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u b\u1eaft \u0111\u1ea7u t\u1eeb \\(a\\) kh\u00f4ng th\u0103m m\u1ed9t ch\u1ed1t n\u00e0o kh\u00e1c.</li> <li>Tr\u01b0\u1eddng h\u1ee3p 2: Nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) n\u1eb1m trong nh\u00e1nh \\(DFS\\) g\u1ed1c \\(b\\), c\u00f3 ngh\u0129a l\u00e0 \\(a\\) n\u1eb1m tr\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(b\\) t\u1edbi \\(v\\). Do \\(b\\) v\u00e0 \\(v\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh n\u00ean theo \u0111\u1ecbnh l\u00fd \\(1\\), \\(a\\) c\u0169ng ph\u1ea3i thu\u1ed9c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh \u0111\u00f3. V\u1eady th\u00ec th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh n\u00e0y c\u00f3 hai ch\u1ed1t \\(a\\) v\u00e0 \\(b\\). \u0110i\u1ec1u n\u00e0y v\u00f4 l\u00fd.</li> </ul> <p>Theo \u0111\u1ecbnh l\u00fd \\(2\\), ta \u0111\u00e3 c\u00f3 th\u00e0nh ph\u00e2n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a \\(a\\) n\u1eb1m trong nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\), theo ch\u1ee9ng minh tr\u00ean ta l\u1ea1i c\u00f3: M\u1ecdi \u0111\u1ec9nh trong nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) n\u1eb1m trong th\u00e0nh ph\u00e2n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a \\(a\\). K\u1ebft h\u1ee3p l\u1ea1i \u0111\u01b0\u1ee3c: Nh\u00e1nh \\(DFS\\) g\u1ed1c \\(a\\) ch\u00ednh l\u00e0 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a \\(a\\).</p> </li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#bai-toan-4","title":"B\u00e0i to\u00e1n 4","text":"<p>TJALG - T\u00ecm TPLT m\u1ea1nh</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#e-bai_3","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \u0111\u1ed3 th\u1ecb \\(G(V, E)\\) c\u00f3 h\u01b0\u1edbng \\(N\\) \\((1 \\le N \\le 10^4)\\) \u0111\u1ec9nh, \\(M\\) \\((1 \\le M \\le 10^5)\\) cung. H\u00e3y \u0111\u1ebfm s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh c\u1ee7a \\(G\\).</p> <p>Input - D\u00f2ng \u0111\u1ea7u ti\u00ean l\u00e0 \\(N, M\\). - \\(M\\) d\u00f2ng ti\u1ebfp theo m\u00f4 t\u1ea3 m\u1ed9t cung c\u1ee7a \\(G\\).</p> <p>Output - G\u1ed3m m\u1ed9t d\u00f2ng duy nh\u1ea5t l\u00e0 s\u1ed1 TPLT m\u1ea1nh.</p> <p>Examples</p> <p>Input <pre><code>3 2\n1 2\n2 3\n</code></pre></p> <p>Output <pre><code>3\n</code></pre></p> <p>Input <pre><code>3 3\n1 2\n2 3\n3 1\n</code></pre></p> <p>Output <pre><code>1\n</code></pre></p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#thuat-toan-tarjan","title":"Thu\u1eadt to\u00e1n Tarjan","text":"<p>Thu\u1eadt to\u00e1n Tarjan \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean c\u00e1c d\u1eef ki\u1ec7n sau: - T\u00ecm ki\u1ebfm \\(DFS\\) t\u1ea1o ra c\u00e2y/ r\u1eebng \\(DFS\\) - C\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh t\u1ea1o th\u00e0nh c\u00e1c c\u00e2y con c\u1ee7a c\u00e2y \\(DFS\\). - N\u1ebfu ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e1c c\u00e2y con nh\u01b0 v\u1eady, ta c\u00f3 th\u1ec3 in/ l\u01b0u tr\u1eef t\u1ea5t c\u1ea3 c\u00e1c n\u00fat trong c\u00e2y con \u0111\u00f3 (bao g\u1ed3m c\u1ea3 \u0111\u1ec9nh g\u1ed1c) v\u00e0 \u0111\u00f3 s\u1ebd l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh \\((Strongly\\) \\(Connected\\) \\(Components\\) - \\(SCC).\\) - Kh\u00f4ng c\u00f3 cung ng\u01b0\u1ee3c t\u1eeb \\(SCC\\) n\u00e0y sang \\(SCC\\) kh\u00e1c (C\u00f3 th\u1ec3 c\u00f3 c\u00e1c cung ch\u00e9o, nh\u01b0ng c\u00e1c cung ch\u00e9o s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong khi x\u1eed l\u00fd \u0111\u1ed3 th\u1ecb).</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#mo-ta-thuat-toan","title":"M\u00f4 t\u1ea3 thu\u1eadt to\u00e1n","text":"<p>/uploads/Depth-First-Search-Tree_gif2.gif</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<ul> <li>Nh\u1eadn x\u00e9t: X\u00e9t c\u00e2y con g\u1ed1c \\(u\\) trong c\u00e2y \\(DFS\\). G\u1ecdi t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) l\u00e0 \\(A\\), t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) l\u00e0 \\(B\\). N\u1ebfu t\u1ed3n t\u1ea1i \\(1\\) \u0111\u1ec9nh \\(x\\) thu\u1ed9c \\(A\\) t\u1edbi \u0111\u01b0\u1ee3c \\(1\\) \u0111\u1ec9nh \\(y\\) thu\u1ed9c \\(B\\) th\u00ec \\(y\\) ph\u1ea3i c\u00f3 th\u1ee9 t\u1ef1 th\u0103m s\u1edbm h\u01a1n \\(u\\). V\u00ec n\u1ebfu \\(y\\) \u0111\u01b0\u1ee3c th\u0103m sau \\(u\\) ta c\u00f3 th\u1ec3 duy\u1ec7t t\u1eeb \\(u\\) qua \\(x\\) t\u1edbi \\(y\\) khi \u0111\u00f3 \\(y\\) s\u1ebd tr\u1edf th\u00e0nh con c\u1ee7a \\(u\\).</li> <li>\u0110\u1ea7u ti\u00ean ta th\u1ef1c hi\u1ec7n \\(DFS\\) k\u1ebft h\u1ee3p t\u00ednh m\u1ea3ng \\(low[], num[]\\) nh\u01b0 \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean. Song song v\u1edbi vi\u1ec7c n\u00e0y, khi duy\u1ec7t t\u1edbi \u0111\u1ec9nh \\(u\\) ta s\u1ebd th\u1ef1c hi\u1ec7n \u0111\u1ea9y \\(u\\) v\u00e0o \\(stack\\).</li> <li>Khi \u0111\u00e3 duy\u1ec7t xong \u0111\u1ec9nh \\(u\\) (sau khi duy\u1ec7t h\u1ebft to\u00e0n b\u1ed9 c\u00e1c \u0111\u1ec9nh n\u1eb1m trong c\u00e2y con \\(DFS\\) g\u1ed1c \\(u\\)), n\u1ebfu \\(num[u] = low[u]\\) th\u00ec \u0111\u00e2y ch\u00ednh l\u00e0 \u0111\u1ec9nh c\u00f3 th\u1ee9 t\u1ef1 th\u0103m s\u1edbm nh\u1ea5t c\u1ee7a m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh.</li> <li>Khi \u0111\u00f3 ta s\u1ebd lo\u1ea1i b\u1ecf t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh n\u00e0y ra kh\u1ecfi \u0111\u1ed3 th\u1ecb v\u00e0 c\u00e1c \u0111\u1ec9nh n\u00e0y l\u00e0 c\u00e1c \u0111\u1ec9nh \u0111ang n\u1eb1m tr\u00ean \\(u\\) trong \\(stack\\) hi\u1ec7n t\u1ea1i v\u00ec c\u00e1c \u0111\u1ec9nh n\u00e0y ch\u00ednh l\u00e0 c\u00e1c \u0111\u1ec9nh n\u1eb1m tr\u00ean c\u00e2y con g\u1ed1c \\(u\\) trong c\u00e2y \\(DFS\\) do c\u00e1c n\u00fat \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o \\(stack\\) theo th\u1ee9 t\u1ef1 th\u0103m. </li> <li>M\u1eb7t kh\u00e1c, gi\u1ea3 s\u1eed ta c\u00f3 \u0111\u1ec9nh \\(x\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) v\u00e0 \\(x\\) thu\u1ed9c m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh kh\u00f4ng ch\u1ee9a \\(u\\) c\u00f3 \u0111\u1ec9nh c\u00f3 th\u1ee9 t\u1ef1 th\u0103m s\u1edbm nh\u1ea5t l\u00e0 \\(y\\), d\u1ec5 th\u1ea5y \\(y\\) ph\u1ea3i l\u00e0 con c\u1ee7a \\(u\\) n\u00ean th\u1eddi \u0111i\u1ec3m duy\u1ec7t xong c\u1ee7a \\(y\\) s\u1edbm h\u01a1n \\(u\\) ch\u1ee9ng t\u1ecf \\(y\\) v\u00e0 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh ch\u1ee9a n\u00f3 s\u1ebd b\u1ecb lo\u1ea1i b\u1ecf tr\u01b0\u1edbc \u0111\u00f3 kh\u00f4ng c\u00f2n trong \\(stack\\) n\u1eefa (n\u1ebfu \\(y\\) kh\u00f4ng ph\u1ea3i con \\(u\\) th\u00ec v\u00f4 l\u00ed v\u00ec ta \u0111ang x\u00e9t m\u1ecdi \u0111\u1ec9nh trong c\u00e2y con g\u1ed1c \\(u\\) ch\u01b0a \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh n\u1eb1m trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh n\u00e0o hi\u1ec7n t\u1ea1i kh\u00f4ng t\u1edbi \u0111\u01b0\u1ee3c c\u00e1c \u0111\u1ec9nh kh\u00f4ng n\u1eb1m trong c\u00e2y con g\u1ed1c \\(u\\)). </li> <li>Ta s\u1ebd \u0111\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh thu\u1ed9c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh n\u00e0y b\u1eb1ng \\(1\\) m\u1ea3ng \u0111\u1ec3 sau n\u00e0y kh\u00f4ng x\u00e9t l\u1ea1i \u0111\u1ec9nh \u0111\u1ea5y n\u1eefa. \u0110\u1ed3ng th\u1eddi, ta lo\u1ea1i b\u1ecf c\u00e1ch \u0111\u1ec9nh n\u00e0y ra kh\u1ecfi \\(stack\\) \u0111\u1ec3 kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng t\u1edbi c\u00e1c \u0111\u1ec9nh kh\u00e1c v\u1eabn c\u00f2n n\u1eb1m trong \u0111\u1ed3 th\u1ecb.</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 100010</code>  - Bi\u1ebfn <code>timeDfs</code> - Th\u1ee9 t\u1ef1 \\(DFS\\) - Bi\u1ebfn <code>scc</code> - S\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh - M\u1ea3ng <code>low[], num[]</code> - M\u1ea3ng <code>deleted[]</code> - \u0110\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \u0111\u00e3 b\u1ecb x\u00f3a - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh  - Ng\u0103n x\u1ebfp <code>st</code> - L\u01b0u l\u1ea1i c\u00e1c \u0111\u1ec9nh trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 100010;\n\nint n, m;\nint timeDfs = 0, scc = 0;\nint low[maxN], num[maxN];\nbool deleted[maxN];\nvector &lt;int&gt; g[maxN];\nstack &lt;int&gt; st;\n\nvoid dfs(int u) {\n    num[u] = low[u] = ++timeDfs;\n    st.push(u);\n    for (int v : g[u]) {\n        if (deleted[v]) continue;\n        if (!num[v]){\n            dfs(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else low[u] = min(low[u], num[v]);\n    }\n    if (low[u] == num[u]) {\n        scc++;\n        int v;\n        do {\n            v = st.top(); \n            st.pop();\n            deleted[v] = true;\n        }\n        while (v != u);\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n    }\n    for (int i = 1; i &lt;= n; i++)\n        if (!num[i]) dfs(i);\n\n    cout &lt;&lt; scc;\n}\n</code></pre>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#anh-gia_3","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n \\(Tarjan\\) l\u00e0 \\(O(N + M)\\)</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#bai-toan-5","title":"B\u00e0i to\u00e1n 5","text":"<p>KCOLLECT - Thu ho\u1ea1ch</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#e-bai_4","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Khu v\u01b0\u1eddn c\u1ee7a Pirate c\u00f3 h\u00ecnh ch\u1eef nh\u1eadt, v\u00e0 \u0111\u01b0\u1ee3c chia th\u00e0nh \\(M \\cdot N\\) \u00f4 vu\u00f4ng b\u1eb1ng nhau. Trong m\u1ed7i \u00f4 vu\u00f4ng c\u00f3 m\u1ed9t c\u00e2y thu\u1ed9c m\u1ed9t lo\u1ea1i qu\u1ea3 kh\u00e1c nhau, \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(9\\). Nh\u1eefng con s\u1ed1 n\u00e0y th\u1ec3 hi\u1ec7n gi\u00e1 tr\u1ecb kinh t\u1ebf c\u1ee7a c\u00e1c lo\u1ea1i c\u00e2y. Tuy nhi\u00ean, nh\u00ecn m\u1eb7t con Robot tr\u00e1i c\u00e2y n\u00e0y c\u00f3 v\u1ebb ngu ngu n\u00ean trong l\u1ea7n \u0111\u1ea7u ti\u00ean th\u1eed vi\u1ec7c, Pirate mu\u1ed1n test AI c\u1ee7a n\u00f3. C\u1ee5 th\u1ec3 l\u00e0 Robot ph\u1ea3i tu\u00e2n theo c\u00e1c quy \u0111\u1ecbnh sau: 1. T\u1ea1i m\u1ed7i \u00f4, Robot ch\u1ec9 c\u00f3 th\u1ec3 \u0111i sang h\u01b0\u1edbng \u0111\u00f4ng ho\u1eb7c h\u01b0\u1edbng nam sang \u00f4 k\u1ec1 c\u1ea1nh. 2. C\u00f3 m\u1ed9t s\u1ed1 \u00f4 \u0111\u1eb7c bi\u1ec7t m\u00e0 t\u1ea1i \u0111\u00f3 Robot c\u00f3 th\u1ec3 \u0111i \u0111\u01b0\u1ee3c th\u00eam h\u01b0\u1edbng t\u00e2y ho\u1eb7c h\u01b0\u1edbng b\u1eafc sang \u00f4 k\u1ec1 c\u1ea1nh (ch\u1ec9 m\u1ed9t trong hai). 3. Robot kh\u00f4ng \u0111\u01b0\u1ee3c \u0111i v\u00e0o nh\u1eefng \u00f4 c\u00f3 c\u00e2y d\u1eeba. 4. Robot \u0111\u01b0\u1ee3c \u0111i qua m\u1ed9t \u00f4 nhi\u1ec1u l\u1ea7n. Khi \u0111i qua m\u1ed9t \u00f4, Robot ph\u1ea3i h\u00e1i h\u1ebft qu\u1ea3 \u1edf c\u00e2y trong \u00f4 \u0111\u00f3. L\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c s\u1ebd b\u1eb1ng ch\u1ec9 s\u1ed1 c\u1ee7a lo\u1ea1i c\u00e2y v\u1eeba \u0111\u01b0\u1ee3c thu h\u00e1i. V\u00e0 sau n\u00e0y, kh\u00f4ng th\u1ec3 \u0111\u1ea1t th\u00eam l\u1ee3i nhu\u1eadn g\u00ec t\u1eeb \u00f4 \u0111\u00f3 n\u1eefa.</p> <p>Xu\u1ea5t ph\u00e1t t\u1eeb \u00f4 \u1edf g\u00f3c t\u00e2y b\u1eafc c\u1ee7a khu v\u01b0\u1eddn, h\u00e3y gi\u00fap Robot tr\u00e1i c\u00e2y x\u00e1c \u0111\u1ecbnh h\u00e0nh tr\u00ecnh \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c l\u1ee3i nhu\u1eadn t\u1ed1i \u0111a.</p> <p>Input</p> <ul> <li>D\u00f2ng th\u1ee9 nh\u1ea5t: ghi hai s\u1ed1 nguy\u00ean \\(M\\) v\u00e0 \\(N\\) - k\u00edch th\u01b0\u1edbc c\u1ee7a khu v\u01b0\u1eddn.</li> <li>\\(M\\) d\u00f2ng ti\u1ebfp theo: m\u1ed7i d\u00f2ng ghi \\(N\\) k\u00ed t\u1ef1 li\u00ean ti\u1ebfp nhau m\u00f4 t\u1ea3 khu v\u01b0\u1eddn:<ul> <li>'0' - '9': c\u00e1c lo\u1ea1i tr\u00e1i c\u00e2y;</li> <li>'#': c\u00e2y d\u1eeba;</li> <li>'W': \u0111\u01b0\u1ee3c quy\u1ec1n \u0111i theo h\u01b0\u1edbng t\u00e2y;</li> <li>'N': \u0111\u01b0\u1ee3c quy\u1ec1n \u0111i theo h\u01b0\u1edbng b\u1eafc.</li> </ul> </li> </ul> <p>Output</p> <ul> <li>Ghi m\u1ed9t s\u1ed1 nguy\u00ean duy nh\u1ea5t l\u00e0 l\u1ee3i nhu\u1eadn t\u1ed1i \u0111a \u0111\u1ea1t \u0111\u01b0\u1ee3c.</li> </ul> <p>Example</p> <p>Input <pre><code>2 3\n264\n3WW\n</code></pre></p> <p>Output <pre><code>15\n</code></pre></p> <p>Note - Robot s\u1ebd \u0111i theo h\u00e0nh tr\u00ecnh nh\u01b0 sau \\((1, 1) \\rightarrow (1, 2) \\rightarrow (1, 3) \\rightarrow (2, 3) \\rightarrow (2, 2) \\rightarrow (2, 1)\\)  (\u00f4 \\((i, j)\\) l\u00e0 \u00f4 \u1edf d\u00f2ng \\(i\\) v\u00e0 c\u1ed9t \\(j\\)). T\u1ed5ng l\u1ee3i nhu\u1eadn s\u1ebd l\u00e0 \\(2 + 6 + 4 + 3 = 15\\).</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<ul> <li>T\u1ea1i sao ta kh\u00f4ng th\u1ec3 Quy ho\u1ea1ch \u0111\u1ed9ng ngay \u0111\u01b0\u1ee3c?     Theo \u0111\u1ec1 b\u00e0i, \u1edf t\u1ea1i m\u1ed7i \u00f4 Robot c\u00f3 th\u1ec3 \u0111i sang h\u01b0\u1edbng \u0111\u00f4ng (\u0111i sang ph\u1ea3i) ho\u1eb7c h\u01b0\u1edbng nam (\u0111i xu\u1ed1ng d\u01b0\u1edbi) sang \u00f4 k\u1ec1 c\u1ea1nh. Tuy nhi\u00ean \u1edf nh\u1eefng \u00f4 \u0111\u1eb7c bi\u1ec7t th\u00ec Robot c\u00f3 th\u1ec3 \u0111i th\u00eam h\u01b0\u1edbng t\u00e2y (\u0111i sang tr\u00e1i) ho\u1eb7c h\u01b0\u1edbng b\u1eafc (\u0111i l\u00ean tr\u00ean). V\u00e0 m\u1ed9t \u00f4 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c Robot \u0111i qua nhi\u1ec1u l\u1ea7n. Ch\u00ednh v\u00ec l\u00ed do n\u00e0y th\u1ebf n\u00ean c\u00e1ch \u0111i c\u1ee7a Robot s\u1ebd t\u1ea1o th\u00e0nh chu tr\u00ecnh. Khi \u0111\u01b0\u1eddng \u0111i t\u1ea1o th\u00e0nh chu tr\u00ecnh th\u00ec khi ta QH\u0110 s\u1ebd b\u1ecb v\u00f4 h\u1ea1n.</li> <li>L\u00e0m sao \u0111\u1ec3 \u0111\u01b0\u1eddng \u0111i kh\u00f4ng t\u1ea1o th\u00e0nh chu tr\u00ecnh?     M\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 li\u00ean th\u00f4ng m\u1ea1nh n\u1ebfu nh\u01b0 c\u00f3 \u0111\u01b0\u1eddng t\u1eeb b\u1ea5t k\u00ec \u0111\u1ec9nh n\u00e0y t\u1edbi b\u1ea5t k\u00ec \u0111\u1ec9nh n\u00e0o kh\u00e1c. M\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb con t\u1ed1i \u0111\u1ea1i li\u00ean th\u00f4ng m\u1ea1nh. N\u1ebfu m\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh \u0111\u01b0\u1ee3c co l\u1ea1i th\u00e0nh m\u1ed9t \u0111\u1ec9nh, th\u00ec \u0111\u1ed3 th\u1ecb s\u1ebd tr\u1edf th\u00e0nh m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng c\u00f3 chu tr\u00ecnh. Khi d\u1ef1ng \u0111\u1ed3 th\u1ecb m\u1edbi ta s\u1ebd c\u00f3 cung \\((u,v)\\) n\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u1ec9nh \\(x\\) b\u1ea5t k\u00ec n\u1eb1m trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh mang nh\u00e3n \\(u\\) c\u00f3 cung t\u1edbi m\u1ed9t \u0111\u1ec9nh \\(y\\) b\u1ea5t k\u00ec n\u1eb1m trong th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh mang nh\u00e3n \\(v\\).</li> <li>M\u1ea5u ch\u1ed1t c\u1ee7a b\u00e0i to\u00e1n n\u00e0y l\u00e0: T\u00ecm ra \u0111\u01b0\u1ee3c c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh, co t\u1eebng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh th\u00e0nh \\(1\\) \u0111\u1ec9nh. L\u00fac n\u00e0y \u0111\u1ed3 th\u1ecb m\u1edbi s\u1ebd l\u00e0 \u0111\u1ed3 th\u1ecb DAG (Directed Acyclic Graph). \u0110\u00e2y l\u00e0 \u0111\u1ed3 th\u1ecb \"m\u1ed9t \u0111i kh\u00f4ng tr\u1edf l\u1ea1i\", v\u1eady n\u00ean ta d\u1ec5 d\u00e0ng QH\u0110 tr\u00ean \u0111\u1ed3 th\u1ecb DAG.</li> <li>C\u00f4ng th\u1ee9c QH\u0110 tr\u00ean \u0111\u1ed3 th\u1ecb DAG: \\(f[u] = max(f[v]) + C[u]\\) v\u1edbi m\u1ecdi \\(u\\) c\u00f3 cung tr\u1ef1c ti\u1ebfp \u0111i t\u1edbi \\(v\\); trong \u0111\u00f3 \\(C[u]\\) l\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb kinh t\u1ebf c\u1ee7a \u0111\u1ec9nh \\(u\\) , \\(f[u]\\) l\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb kinh t\u1ebf l\u1edbn nh\u1ea5t khi ta xu\u1ea5t ph\u00e1t t\u1ea1i \\(u\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i \\(1\\) \u0111\u1ec9nh b\u1ea5t k\u00ec v\u00ec ta c\u00f3 th\u1ec3 \u0111i t\u1eeb \\(u\\) sang \\(v\\) r\u1ed3i \u0111i theo \u0111\u01b0\u1eddng \u0111i t\u1ed1i \u01b0u xu\u1ea5t ph\u00e1t t\u1ea1i \\(v\\) (\\(u,v\\) \u1edf \u0111\u00e2y l\u00e0 c\u00e1c \u0111\u1ec9nh tr\u00ean \u0111\u1ed3 th\u1ecb \\(DAG\\) \u0111\u01b0\u1ee3c t\u1ea1o ra). </li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#cai-at_4","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - \u0110\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t th\u00ec ta s\u1ebd s\u1eed d\u1ee5ng k\u0129 thu\u1eadt \"Bi\u1ebfn m\u1ea3ng 2 chi\u1ec1u th\u00e0nh m\u1ea3ng 1 chi\u1ec1u\" nh\u1eb1m m\u1ee5c \u0111\u00edch l\u01b0u gi\u00e1 tr\u1ecb \u00f4 \\((i, j)\\) v\u00e0o \u00f4 \\((i - 1) \\cdot N + j\\). - H\u1eb1ng s\u1ed1 <code>maxN = 100010</code>  - H\u1eb1ng s\u1ed1 <code>INF = 1000000007</code>  - Bi\u1ebfn <code>timeDfs</code> - Th\u1ee9 t\u1ef1 \\(DFS\\) - Bi\u1ebfn <code>scc</code> - S\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh - M\u1ea3ng <code>a[]</code> - L\u01b0u c\u00e1c d\u1eef li\u1ec7u v\u00e0o. - M\u1ea3ng <code>val[]</code> - L\u01b0u gi\u00e1 tr\u1ecb kinh t\u1ebf c\u1ee7a lo\u1ea1i c\u00e2y. - M\u1ea3ng <code>totalScc[]</code> - L\u01b0u t\u1ed5ng gi\u00e1 tr\u1ecb kinh t\u1ebf c\u1ee7a t\u1eebng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh. - M\u1ea3ng <code>root[]</code> - L\u01b0u \u00f4 \\((i, j)\\) thu\u1ed9c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng n\u00e0o? Ta s\u1ebd l\u1ea5y th\u1ee9 t\u1ef1 c\u1ee7a th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng l\u00e0m \u0111\u1ec9nh \u1ea3o trong \u0111\u1ed3 th\u1ecb \\(DAG\\). - M\u1ea3ng <code>low[], num[]</code> - M\u1ea3ng <code>deleted[]</code> - \u0110\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \u0111\u00e3 b\u1ecb x\u00f3a - M\u1ea3ng <code>f[]</code> - M\u1ea3ng quy ho\u1ea1ch \u0111\u1ed9ng - Vector <code>g[]</code> - L\u01b0u \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u. - Vector <code>h[]</code> - L\u01b0u \u0111\u1ed3 th\u1ecb m\u1edbi (\u0111\u1ed3 th\u1ecb DAG).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 100010;\nconst int INF  = 1e9 + 7;\n\nint dx[] = {0, -1, 0, 1, 0};\nint dy[] = {0,  0, 1, 0,-1};\n\nint m, n;\nchar a[maxN];\nint val[maxN], totalScc[maxN];\n\n/* L\u01b0u \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u*/\nvector &lt;int&gt; g[maxN];\n\n/* L\u01b0u \u0111\u1ed3 th\u1ecb m\u1edbi*/\nvector &lt;int&gt; h[maxN];\n\n/* K\u1ef9 thu\u1eadt \"Bi\u1ebfn m\u1ea3ng 2 chi\u1ec1u th\u00e0nh m\u1ea3ng 1 chi\u1ec1u\" */\nint getId(int i, int j){\n    return (i - 1) * n + j;\n}\n\n/* Ki\u1ec3m tra \u00f4 (i, j) c\u00f3 \u0111\u01b0\u1ee3c \u0111i v\u00e0o kh\u00f4ng? */\nbool check(int i, int j) {\n    if (a[getId(i, j)] == '#') return false;\n    return (i &gt;= 1 &amp;&amp; j &gt;= 1 &amp;&amp; i &lt;= m &amp;&amp; j &lt;= n);\n}\n\n/* T\u00ecm th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh*/\nint root[maxN];\nint low[maxN], num[maxN];\nbool deleted[maxN];\nint timeDfs = 0, scc = 0;\nstack &lt;int&gt; st;\n\nvoid dfs(int u) {\n    low[u] = num[u] = ++timeDfs;\n    st.push(u);\n    for (int v : g[u]) {\n        if (deleted[v]) continue;\n        if (!num[v]) {\n            dfs(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else low[u] = min(low[u], num[v]);\n    }\n\n    if (num[u] == low[u]) {\n        scc++;\n        int v;\n        do {\n            v = st.top();\n            st.pop();\n            deleted[v] = true;\n\n            /* T\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb kinh t\u1ebf c\u1ee7a th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng */\n            totalScc[scc] += val[v];\n\n            /*\u0110\u1ec9nh scc s\u1ebd l\u00e0 \u0111\u1ec9nh \u1ea3o \u0111\u1ea1i di\u1ec7n cho v trong \u0111\u1ed3 th\u1ecb DAG*/\n            root[v] = scc;\n        } while (v != u);\n    }\n}\n\n\n/* Quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean \u0111\u1ed3 th\u1ecb DAG */\nint f[maxN];\n\nint solve(int u) {\n    if (h[u].empty()) return totalScc[u];\n    if (f[u] != -1) return f[u];\n    int cur = -INF;\n    for (int v : h[u]) cur = max(cur, solve(v) + totalScc[u]);\n    return f[u] = cur;\n}\n\nint main() {\n    /* X\u1eed l\u00fd d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o */\n    cin &gt;&gt; m &gt;&gt; n;\n    for (int i = 1; i &lt;= m; ++i)\n        for (int j = 1; j &lt;= n; ++j) {\n            int u = getId(i, j);\n            cin &gt;&gt; a[u];\n            val[u] = (a[u] &gt;= '0' &amp;&amp; a[u] &lt;= '9') ? a[u] - '0' : 0;\n        }\n\n    /* X\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u */ \n    for (int i = 1; i &lt;= m; ++i) {\n        for (int j = 1; j &lt;= n; ++j) {\n            int u = getId(i, j);\n            if (a[u] == '#') continue;\n            if (check(i, j + 1)) g[u].push_back(getId(i, j + 1));\n            if (check(i + 1, j)) g[u].push_back(getId(i + 1, j));\n\n            if (a[u] == 'W' &amp;&amp; check(i, j - 1)) \n                g[u].push_back(getId(i, j - 1));\n\n            if (a[u] == 'N' &amp;&amp; check(i - 1, j)) \n                g[u].push_back(getId(i - 1, j));\n        }\n    }\n\n    /* T\u00ecm th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh*/ \n    for (int i = 1; i &lt;= m; ++i)\n        for (int j = 1; j &lt;= n; ++j){\n            int u = getId(i, j);\n            if (!num[u] &amp;&amp; check(i, j)) dfs(u);\n        }\n\n    /* X\u00e2y d\u1ef1ng \u0111\u1ed3 th\u1ecb m\u1edbi */ \n    for (int i = 1; i &lt;= m; ++i) {\n        for (int j = 1; j &lt;= n; ++j) {\n            if (!check(i, j)) continue;\n            int u  = getId(i, j);\n            int ru = root[u];\n            for (int v : g[u]) {\n                int rv = root[v];\n                if (ru != rv) {\n                /* C\u00f3 cung \u0111i t\u1eeb ru \u0111\u1ebfn rv tr\u00ean \u0111\u1ed3 th\u1ecb m\u1edbi do \u0111\u1ec9nh \n                u trong TPLTM ru \u0111i \u0111\u01b0\u1ee3c t\u1edbi \u0111\u1ec9nh v trong TPLTM rv*/\n                    h[ru].push_back(rv);\n                }\n            }\n        }\n    }\n    fill(f, f + m * n + 1, -1);\n    cout &lt;&lt; solve(root[getId(1, 1)]);\n}\n</code></pre>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#anh-gia_4","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(N \\cdot M)\\)</li> </ul>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#bai-tap-van-dung","title":"B\u00e0i t\u1eadp v\u1eadn d\u1ee5ng","text":""},{"location":"algo/graph-theory/Depth-First-Search-Tree/#khop-cau","title":"Kh\u1edbp c\u1ea7u","text":"<p>WEATHER - \u0110i\u1ec1u ki\u1ec7n th\u1eddi ti\u1ebft</p> <p>CRITICAL - Th\u00e0nh ph\u1ed1 tr\u1ecdng y\u1ebfu</p> <p>BCACM11E - Ph\u01b0\u01a1ng \u00e1n b\u1eafn ph\u00e1o</p> <p>SAFENET2 - M\u1ea1ng m\u00e1y t\u00ednh an to\u00e0n </p> <p>REFORM - VOI 2015 Day 1 - K\u1ebf ho\u1ea1ch c\u1ea3i t\u1ed5</p>"},{"location":"algo/graph-theory/Depth-First-Search-Tree/#thanh-phan-lien-thong-manh","title":"Th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh","text":"<p>Ralph and Mushrooms</p> <p>Checkposts</p> <p>MESSAGE - Truy\u1ec1n tin</p> <p>TREAT - Cho k\u1eb9o hay b\u1ecb ph\u00e1 n\u00e0o</p>"},{"location":"algo/graph-theory/breadth-first-search/","title":"BFS (Breadth-first search)","text":"<p>Ngu\u1ed3n: CP-Algorithms, Gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh - L\u00ea Minh Ho\u00e0ng</p> <p>Bi\u00ean so\u1ea1n: - Nguy\u1ec5n Ch\u00e2u Khanh - VNU University of Engineering and Technology (VNU-UET)</p> <p>Reviewer:  - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - VNUHCM-University of Science - Tr\u1ea7n Xu\u00e2n B\u00e1ch - HUS High School for Gifted Students</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan-duyet-o-thi-uu-tien-chieu-rong","title":"Thu\u1eadt to\u00e1n duy\u1ec7t \u0111\u1ed3 th\u1ecb \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng","text":"<p>Thu\u1eadt to\u00e1n duy\u1ec7t \u0111\u1ed3 th\u1ecb \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng (Breadth-first search - BFS) l\u00e0 m\u1ed9t trong nh\u1eefng thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm c\u01a1 b\u1ea3n v\u00e0 thi\u1ebft y\u1ebfu tr\u00ean \u0111\u1ed3 th\u1ecb. M\u00e0 trong \u0111\u00f3, nh\u1eefng \u0111\u1ec9nh n\u00e0o g\u1ea7n \u0111\u1ec9nh xu\u1ea5t ph\u00e1t h\u01a1n s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t tr\u01b0\u1edbc.</p> <p>\u1ee8ng d\u1ee5ng c\u1ee7a \\(BFS\\) c\u00f3 th\u1ec3 gi\u00fap ta gi\u1ea3i quy\u1ebft t\u1ed1t m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n trong th\u1eddi gian v\u00e0 kh\u00f4ng gian t\u1ed1i thi\u1ec3u. \u0110\u1eb7c bi\u1ec7t l\u00e0 b\u00e0i to\u00e1n t\u00ecm ki\u1ebfm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb m\u1ed9t \u0111\u1ec9nh g\u1ed1c t\u1edbi t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh kh\u00e1c. Trong \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 tr\u1ecdng s\u1ed1 ho\u1eb7c t\u1ea5t c\u1ea3 tr\u1ecdng s\u1ed1 b\u1eb1ng nhau, thu\u1eadt to\u00e1n s\u1ebd lu\u00f4n tr\u1ea3 ra \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t c\u00f3 th\u1ec3. Ngo\u00e0i ra, thu\u1eadt to\u00e1n n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 t\u00ecm c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb, ho\u1eb7c ki\u1ec3m tra \u0111\u1ed3 th\u1ecb hai ph\u00eda, ...</p> <p></p>"},{"location":"algo/graph-theory/breadth-first-search/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>V\u1edbi \u0111\u1ed3 th\u1ecb kh\u00f4ng tr\u1ecdng s\u1ed1 v\u00e0 \u0111\u1ec9nh ngu\u1ed3n \\(s\\). \u0110\u1ed3 th\u1ecb n\u00e0y c\u00f3 th\u1ec3 l\u00e0 \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng ho\u1eb7c v\u00f4 h\u01b0\u1edbng, \u0111i\u1ec1u \u0111\u00f3 kh\u00f4ng quan tr\u1ecdng \u0111\u1ed1i v\u1edbi thu\u1eadt to\u00e1n.</p> <p>C\u00f3 th\u1ec3 hi\u1ec3u thu\u1eadt to\u00e1n nh\u01b0 m\u1ed9t ng\u1ecdn l\u1eeda lan r\u1ed9ng tr\u00ean \u0111\u1ed3 th\u1ecb:</p> <ul> <li>\u1ede b\u01b0\u1edbc th\u1ee9 \\(0\\), ch\u1ec9 c\u00f3 \u0111\u1ec9nh ngu\u1ed3n \\(s\\) \u0111ang ch\u00e1y. </li> <li>\u1ede m\u1ed7i b\u01b0\u1edbc ti\u1ebfp theo, ng\u1ecdn l\u1eeda \u0111ang ch\u00e1y \u1edf m\u1ed7i \u0111\u1ec9nh l\u1ea1i lan sang t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi n\u00f3.</li> </ul> <p>Trong m\u1ed7i l\u1ea7n l\u1eb7p c\u1ee7a thu\u1eadt to\u00e1n, \"v\u00f2ng l\u1eeda\" l\u1ea1i lan r\u1ed9ng ra theo chi\u1ec1u r\u1ed9ng. Nh\u1eefng \u0111\u1ec9nh n\u00e0o g\u1ea7n \\(s\\) h\u01a1n s\u1ebd b\u00f9ng ch\u00e1y tr\u01b0\u1edbc.</p> <p>Ch\u00ednh x\u00e1c h\u01a1n, thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 nh\u01b0 sau: </p> <ul> <li>\u0110\u1ea7u ti\u00ean ta th\u0103m \u0111\u1ec9nh ngu\u1ed3n \\(s\\). </li> <li>Vi\u1ec7c th\u0103m \u0111\u1ec9nh \\(s\\) s\u1ebd ph\u00e1t sinh th\u1ee9 t\u1ef1 th\u0103m c\u00e1c \u0111\u1ec9nh \\((u_1, u_2, \u2026 u_p)\\) k\u1ec1 v\u1edbi \\(s\\) (nh\u1eefng \u0111\u1ec9nh g\u1ea7n \\(s\\) nh\u1ea5t). Ti\u1ebfp theo, ta th\u0103m \u0111\u1ec9nh \\(u_1\\), khi th\u0103m \u0111\u1ec9nh \\(u_1\\) s\u1ebd l\u1ea1i ph\u00e1t sinh y\u00eau c\u1ea7u th\u0103m nh\u1eefng \u0111\u1ec9nh \\((v_1, v_2, \u2026, v_q)\\) k\u1ec1 v\u1edbi \\(u_1\\). Nh\u01b0ng r\u00f5 r\u00e0ng nh\u1eefng \u0111\u1ec9nh \\(v\\) n\u00e0y \u201cxa\u201d \\(s\\) h\u01a1n nh\u1eefng \u0111\u1ec9nh \\(u\\) n\u00ean ch\u00fang ch\u1ec9 \u0111\u01b0\u1ee3c th\u0103m khi t\u1ea5t c\u1ea3 nh\u1eefng \u0111\u1ec9nh \\(u\\) \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m. T\u1ee9c l\u00e0 th\u1ee9 t\u1ef1 th\u0103m c\u00e1c \u0111\u1ec9nh s\u1ebd l\u00e0: \\(s, u_1, u_2, \u2026, u_p, v_1, v_2, \u2026, v_q, \u2026\\)</li> </ul> <p></p> <p>Thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u r\u1ed9ng s\u1eed d\u1ee5ng m\u1ed9t danh s\u00e1ch \u0111\u1ec3 ch\u1ee9a nh\u1eefng \u0111\u1ec9nh \u0111ang \u201cch\u1edd\u201d th\u0103m. T\u1ea1i m\u1ed7i b\u01b0\u1edbc, ta th\u0103m m\u1ed9t \u0111\u1ec9nh \u0111\u1ea7u danh s\u00e1ch, lo\u1ea1i n\u00f3 ra kh\u1ecfi danh s\u00e1ch v\u00e0 cho nh\u1eefng \u0111\u1ec9nh k\u1ec1 v\u1edbi n\u00f3 ch\u01b0a \u0111\u01b0\u1ee3c th\u0103m x\u1ebfp h\u00e0ng v\u00e0o cu\u1ed1i danh s\u00e1ch. Thu\u1eadt to\u00e1n s\u1ebd k\u1ebft th\u00fac khi danh s\u00e1ch r\u1ed7ng.</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>Thu\u1eadt to\u00e1n s\u1eed d\u1ee5ng m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u h\u00e0ng \u0111\u1ee3i (queue) \u0111\u1ec3 ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</p> <p>B\u01b0\u1edbc 1: Kh\u1edfi t\u1ea1o - C\u00e1c \u0111\u1ec9nh \u0111\u1ec1u \u1edf tr\u1ea1ng th\u00e1i ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u. Ngo\u1ea1i tr\u1eeb \u0111\u1ec9nh ngu\u1ed3n \\(s\\) \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u. - M\u1ed9t h\u00e0ng \u0111\u1ee3i ban \u0111\u1ea7u ch\u1ec9 ch\u1ee9a \\(1\\) ph\u1ea7n t\u1eed l\u00e0 \\(s\\).</p> <p>B\u01b0\u1edbc 2: L\u1eb7p l\u1ea1i c\u00e1c b\u01b0\u1edbc sau cho \u0111\u1ebfn khi h\u00e0ng \u0111\u1ee3i r\u1ed7ng: - L\u1ea5y \u0111\u1ec9nh \\(u\\) ra kh\u1ecfi h\u00e0ng \u0111\u1ee3i. - X\u00e9t t\u1ea5t c\u1ea3 nh\u1eefng \u0111\u1ec9nh \\(v\\) k\u1ec1 v\u1edbi \\(u\\) m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u, v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(v\\) \u0111\u00f3:     * \u0110\u00e1nh d\u1ea5u \\(v\\) \u0111\u00e3 th\u0103m.     * L\u01b0u l\u1ea1i v\u1ebft \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\).     * \u0110\u1ea9y \\(v\\) v\u00e0o trong h\u00e0ng \u0111\u1ee3i (\u0111\u1ec9nh \\(v\\) s\u1ebd ch\u1edd \u0111\u01b0\u1ee3c duy\u1ec7t t\u1ea1i nh\u1eefng b\u01b0\u1edbc sau).</p> <p>B\u01b0\u1edbc 3: Truy v\u1ebft t\u00ecm \u0111\u01b0\u1eddng \u0111i.</p>"},{"location":"algo/graph-theory/breadth-first-search/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<ul> <li>X\u00e9t \u0111\u1ed3 th\u1ecb sau \u0111\u00e2y, v\u1edbi \u0111\u1ec9nh ngu\u1ed3n \\(s=1\\) :</li> </ul> <ul> <li>Qu\u00e1 tr\u00ecnh:</li> </ul> <p>/uploads/breadth-first-search_gif1.gif</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>Bi\u1ebfn <code>maxN</code> - K\u00edch th\u01b0\u1edbc m\u1ea3ng.</li> <li>M\u1ea3ng <code>d[]</code> - M\u1ea3ng l\u01b0u l\u1ea1i kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn m\u1ecdi \u0111\u1ec9nh.</li> <li>M\u1ea3ng <code>par[]</code> - M\u1ea3ng l\u01b0u l\u1ea1i v\u1ebft \u0111\u01b0\u1eddng \u0111i.</li> <li>M\u1ea3ng <code>visit[]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \u0111\u00e3 th\u0103m.</li> <li>Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>int n; // S\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb\nint d[maxN], par[maxN];\nbool visit[maxN];\nvector &lt;int&gt; g[maxN];\n\nvoid bfs(int s) { // V\u1edbi s l\u00e0 \u0111\u1ec9nh xu\u1ea5t ph\u00e1t (\u0111\u1ec9nh ngu\u1ed3n)\n    fill_n(d, n + 1, 0);\n    fill_n(par, n + 1, -1);\n    fill_n(visit, n + 1, false);\n\n    queue &lt;int&gt; q;\n    q.push(s);\n    visit[s] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (auto v : g[u]) {\n            if (!visit[v]) {\n                d[v]     = d[u] + 1;\n                par[v]   = u;\n                visit[v] = true;\n                q.push(v);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#truy-vet","title":"Truy v\u1ebft","text":"<ul> <li>C\u00e0i \u0111\u1eb7t truy v\u1ebft \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \\(s\\) \u0111\u1ebfn \u0111\u1ec9nh \\(u\\) :</li> </ul> <pre><code>if (!visit[u]) cout &lt;&lt; \"No path!\";\nelse {\n    vector &lt;int&gt; path;\n    for (int v = u; v != -1; v = par[v])\n        path.push_back(v);\n    reverse(path.begin(), path.end());\n\n    cout &lt;&lt; \"Path: \";\n    for (auto v : path) cout &lt;&lt; v &lt;&lt; ' ';\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#cac-ac-tinh-cua-thuat-toan","title":"C\u00e1c \u0111\u1eb7c t\u00ednh c\u1ee7a thu\u1eadt to\u00e1n","text":"<p>N\u1ebfu s\u1eed d\u1ee5ng m\u1ed9t ng\u0103n x\u1ebfp (stack) thay v\u00ec h\u00e0ng \u0111\u1ee3i (queue) th\u00ec ta s\u1ebd thu \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 duy\u1ec7t \u0111\u1ec9nh c\u1ee7a thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (Depth First Search \u2013 DFS). \u0110\u00e2y ch\u00ednh l\u00e0 ph\u01b0\u01a1ng ph\u00e1p kh\u1eed \u0111\u1ec7 quy c\u1ee7a \\(DFS\\) \u0111\u1ec3 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n tr\u00ean c\u00e1c ng\u00f4n ng\u1eef kh\u00f4ng cho ph\u00e9p \u0111\u1ec7 quy.</p> <p>\u0110\u1ecbnh l\u00ed: Thu\u1eadt to\u00e1n \\(BFS\\) cho ta \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh ngu\u1ed3n t\u1edbi m\u1ecdi \u0111\u1ec9nh (v\u1edbi kho\u1ea3ng c\u00e1ch t\u1edbi \u0111\u1ec9nh \\(u\\) b\u1eb1ng \\(d[u]\\)).  Trong thu\u1eadt to\u00e1n \\(BFS\\), n\u1ebfu \u0111\u1ec9nh \\(u\\) xa \u0111\u1ec9nh ngu\u1ed3n h\u01a1n \u0111\u1ec9nh \\(v\\), th\u00ec \\(u\\) s\u1ebd \u0111\u01b0\u1ee3c th\u0103m tr\u01b0\u1edbc.</p> <ul> <li>Ch\u1ee9ng minh: Trong \\(BFS\\), t\u1eeb m\u1ed9t \u0111\u1ec9nh hi\u1ec7n t\u1ea1i, ta lu\u00f4n \u0111i th\u0103m t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi n\u00f3 tr\u01b0\u1edbc, sau \u0111\u00f3 th\u0103m t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00e1ch n\u00f3 m\u1ed9t \u0111\u1ec9nh, r\u1ed3i c\u00e1c \u0111\u1ec9nh c\u00e1ch n\u00f3 hai \u0111\u1ec9nh, v.v... Nh\u01b0 v\u1eady, n\u1ebfu t\u1eeb m\u1ed9t \u0111\u1ec9nh \\(u\\) khi ta ch\u1ea1y \\(BFS\\), qu\u00e3ng \u0111\u01b0\u1eddng \u0111\u1ebfn \u0111\u1ec9nh \\(v\\) lu\u00f4n l\u00e0 qu\u00e3ng \u0111\u01b0\u1eddng \u0111i qua \u00edt c\u1ea1nh nh\u1ea5t.</li> </ul>"},{"location":"algo/graph-theory/breadth-first-search/#inh-ly-bat-tay-handshaking-lemma","title":"\u0110\u1ecbnh l\u00fd B\u1eaft tay (Handshaking lemma)","text":"<p>\u0110\u1ecbnh l\u00fd: Trong m\u1ed9t \u0111\u1ed3 th\u1ecb b\u1ea5t k\u1ef3, t\u1ed5ng s\u1ed1 b\u1eadc c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh b\u1eb1ng g\u1ea5p \u0111\u00f4i s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <ul> <li> <p>M\u00f4 t\u1ea3: Cho \u0111\u1ed3 th\u1ecb \\(G=(V,E)\\) g\u1ed3m \\(\\|V\\|\\) \u0111\u1ec9nh v\u00e0 \\(\\|E\\|\\) c\u1ea1nh. Khi \u0111\u00f3, t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c b\u1eadc c\u1ee7a \u0111\u1ec9nh trong \\(G\\) b\u1eb1ng \\(2 \\times \\|E\\|\\) .     V\u1edbi \\(deg(v)\\) l\u00e0 s\u1ed1 b\u1eadc c\u1ee7a \u0111\u1ec9nh \\(v\\), ta c\u00f3: \\(\\displaystyle\\sum_{v \\in V}deg(v) = 2 \\times \\|E\\|\\)</p> <ul> <li> <p>V\u00ed d\u1ee5: Cho \u0111\u1ed3 th\u1ecb sau v\u1edbi \\(\\|V\\| = 8\\) v\u00e0 \\(\\|E\\| = 7\\)</p> <p></p> <ul> <li>\\(\\displaystyle\\sum_{v \\in V}deg(v) = 2 \\times \\|E\\| = 2 \\times 7 = 14\\) </li> </ul> </li> </ul> </li> <li> <p>Ch\u1ee9ng minh: V\u00ec m\u1ed7i m\u1ed9t c\u1ea1nh n\u1ed1i v\u1edbi \u0111\u00fang hai \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb, n\u00ean m\u1ed9t c\u1ea1nh s\u1ebd \u0111\u00f3ng g\u00f3p \\(2\\) \u0111\u01a1n v\u1ecb v\u00e0o t\u1ed5ng s\u1ed1 b\u1eadc c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh.</p> </li> </ul> <p>H\u1ec7 qu\u1ea3: Trong \u0111\u1ed3 th\u1ecb, s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh b\u1eadc l\u1ebb lu\u00f4n l\u00e0 m\u1ed9t s\u1ed1 ch\u1eb5n. - Ch\u1ee9ng minh: G\u1ecdi \\(L\\) v\u00e0 \\(C\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 t\u1eadp c\u00e1c \u0111\u1ec9nh b\u1eadc l\u1ebb v\u00e0 b\u1eadc ch\u1eb5n c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G=(V, E)\\). Ta c\u00f3:      \\(2 \\times \\|E\\| = \\displaystyle\\sum_{v \\in V}deg(v) = \\displaystyle\\sum_{v \\in L}deg(v) + \\displaystyle\\sum_{v \\in C}deg(v)\\) </p> <pre><code>- $2 \\times \\|E\\|$ ch\u1eb5n\n- $\\displaystyle\\sum_{v \\in C}deg(v)$ ch\u1eb5n\n\n$\\Rightarrow$ $\\displaystyle\\sum_{v \\in L}deg(v)$ ch\u1eb5n\n</code></pre> <p>Nh\u1eadn x\u00e9t:  - Trong qu\u00e1 tr\u00ecnh duy\u1ec7t \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng danh s\u00e1ch k\u1ec1, m\u1ed7i c\u1ea1nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t ch\u00ednh x\u00e1c hai l\u1ea7n \u0111\u1ed1i v\u1edbi \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng (v\u00ec m\u1ed7i c\u1ea1nh s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u trong \\(2\\) danh s\u00e1ch k\u1ec1 c\u1ee7a \\(2\\) \u0111\u1ec9nh). C\u00f2n \u0111\u1ed1i v\u1edbi \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng, m\u1ecdi c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb ch\u1ec9 \u0111\u01b0\u1ee3c duy\u1ec7t ch\u00ednh x\u00e1c m\u1ed9t l\u1ea7n.</p> <p>Tham kh\u1ea3o: Handshaking_lemma</p>"},{"location":"algo/graph-theory/breadth-first-search/#o-phuc-tap-thuat-toan","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n","text":""},{"location":"algo/graph-theory/breadth-first-search/#o-phuc-tap-thoi-gian","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian","text":"<p>G\u1ecdi \\(\\|V\\|\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh v\u00e0 \\(\\|E\\|\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>Trong qu\u00e1 tr\u00ecnh \\(BFS\\), c\u00e1ch bi\u1ec3u di\u1ec5n \u0111\u1ed3 th\u1ecb c\u00f3 \u1ea3nh h\u01b0\u1edfng l\u1edbn t\u1edbi chi ph\u00ed v\u1ec1 th\u1eddi gian th\u1ef1c hi\u1ec7n gi\u1ea3i thu\u1eadt : - N\u1ebfu \u0111\u1ed3 th\u1ecb bi\u1ec3u di\u1ec5n b\u1eb1ng danh s\u00e1ch k\u1ec1 (vector <code>g[]</code>) :     - Ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n n\u00e0y m\u1ed9t c\u00e1ch t\u1ed1i \u01b0u nh\u1ea5t v\u1ec1 m\u1eb7t th\u1eddi gian nh\u1edd kh\u1ea3 n\u0103ng duy\u1ec7t qua c\u00e1c \u0111\u1ec9nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3.     - V\u00ec ta s\u1eed d\u1ee5ng m\u1ea3ng <code>visit[]</code> \u0111\u1ec3 ng\u0103n vi\u1ec7c \u0111\u1ea9y m\u1ed9t \u0111\u1ec9nh v\u00e0o h\u00e0ng \u0111\u1ee3i nhi\u1ec1u l\u1ea7n n\u00ean m\u1ed7i \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c th\u0103m ch\u00ednh x\u00e1c m\u1ed9t l\u1ea7n duy nh\u1ea5t. Do \u0111\u00f3, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \\(O(\\|V\\|)\\) d\u00e0nh cho vi\u1ec7c th\u0103m c\u00e1c \u0111\u1ec9nh.      - B\u1ea5t c\u1ee9 khi n\u00e0o m\u1ed9t \u0111\u1ec9nh \u0111\u01b0\u1ee3c th\u0103m, m\u1ecdi c\u1ea1nh k\u1ec1 v\u1edbi \u0111\u1ec9nh \u0111\u00f3 \u0111\u1ec1u \u0111\u01b0\u1ee3c duy\u1ec7t, v\u1edbi th\u1eddi gian d\u00e0nh cho m\u1ed7i c\u1ea1nh l\u00e0 \\(O(1)\\). T\u1eeb ph\u1ea7n nh\u1eadn x\u00e9t c\u1ee7a \u0111\u1ecbnh l\u00fd B\u1eaft tay (Handshaking lemma), ta s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \\(O(\\|E\\|)\\) d\u00e0nh cho vi\u1ec7c duy\u1ec7t c\u00e1c c\u1ea1nh.     - Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(\\|V\\|+\\|E\\|)\\). \u0110\u00e2y l\u00e0 c\u00e1ch c\u00e0i \u0111\u1eb7t t\u1ed1t nh\u1ea5t. - N\u1ebfu \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng ma tr\u1eadn k\u1ec1 :      - Ta c\u0169ng s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \\(O(\\|V\\|)\\) d\u00e0nh cho vi\u1ec7c th\u0103m c\u00e1c \u0111\u1ec9nh (gi\u1ea3i th\u00edch t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean).     - V\u1edbi m\u1ed7i \u0111\u1ec9nh \u0111\u01b0\u1ee3c th\u0103m, ta s\u1ebd ph\u1ea3i duy\u1ec7t qua to\u00e0n b\u1ed9 c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ec9nh k\u1ec1 v\u1edbi n\u00f3. Do \u0111\u00f3, thu\u1eadt to\u00e1n s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\|V\\|^2)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#o-phuc-tap-khong-gian","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian","text":"<p>T\u1ea1i m\u1ecdi th\u1eddi \u0111i\u1ec3m, trong h\u00e0ng \u0111\u1ee3i (queue <code>q</code>) c\u00f3 kh\u00f4ng qu\u00e1 \\(\\|V\\|\\) ph\u1ea7n t\u1eed. Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 \\(O(\\|V\\|)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#ung-dung-bfs-e-xac-inh-thanh-phan-lien-thong","title":"\u1ee8ng d\u1ee5ng BFS \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng","text":""},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-1","title":"B\u00e0i to\u00e1n 1","text":"<p>BDFS - \u0110\u1ebfm s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \u0111\u01a1n \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng g\u1ed3m \\(n\\) \u0111\u1ec9nh v\u00e0 \\(m\\) c\u1ea1nh \\((1 \\le n, m \\le 10^5)\\), c\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) t\u1edbi \\(n\\). T\u00ecm s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb.</p>"},{"location":"algo/graph-theory/breadth-first-search/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<p>M\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 li\u00ean th\u00f4ng ho\u1eb7c kh\u00f4ng li\u00ean th\u00f4ng. N\u1ebfu \u0111\u1ed3 th\u1ecb li\u00ean th\u00f4ng th\u00ec s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a n\u00f3 l\u00e0 \\(1\\). \u0110i\u1ec1u n\u00e0y t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi ph\u00e9p duy\u1ec7t theo th\u1ee7 t\u1ee5c \\(BFS\\) \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ebfn \u0111\u00fang m\u1ed9t l\u1ea7n. N\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng li\u00ean th\u00f4ng (s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng l\u1edbn h\u01a1n \\(1\\)) ta c\u00f3 th\u1ec3 t\u00e1ch ch\u00fang th\u00e0nh nh\u1eefng \u0111\u1ed3 th\u1ecb con li\u00ean th\u00f4ng. \u0110i\u1ec1u n\u00e0y c\u0169ng c\u00f3 ngh\u0129a l\u00e0 trong ph\u00e9p duy\u1ec7t \u0111\u1ed3 th\u1ecb, s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a n\u00f3 b\u1eb1ng s\u1ed1 l\u1ea7n g\u1ecdi t\u1edbi th\u1ee7 t\u1ee5c \\(BFS\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n","text":"<p>Thu\u1eadt to\u00e1n \u1ee9ng d\u1ee5ng \\(BFS\\) \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng: - B\u01b0\u1edbc 0: Kh\u1edfi t\u1ea1o s\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng b\u1eb1ng \\(0\\). - B\u01b0\u1edbc 1: Xu\u1ea5t ph\u00e1t t\u1eeb m\u1ed9t \u0111\u1ec9nh ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u c\u1ee7a \u0111\u1ed3 th\u1ecb. Ta \u0111\u00e1nh d\u1ea5u \u0111\u1ec9nh xu\u1ea5t ph\u00e1t, t\u0103ng s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng th\u00eam \\(1\\). - B\u01b0\u1edbc 2: T\u1eeb m\u1ed9t \u0111\u1ec9nh \\(i\\) \u0111\u00e3 \u0111\u00e1nh d\u1ea5u, ta \u0111\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(j\\) k\u1ec1 v\u1edbi \\(i\\) m\u00e0 \\(j\\) ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u. - B\u01b0\u1edbc 3: Th\u1ef1c hi\u1ec7n b\u01b0\u1edbc \\(2\\) cho \u0111\u1ebfn khi kh\u00f4ng c\u00f2n th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c n\u1eefa. - B\u01b0\u1edbc 4: N\u1ebfu s\u1ed1 s\u1ed1 \u0111\u1ec9nh \u0111\u00e1nh d\u1ea5u b\u1eb1ng \\(n\\) (m\u1ecdi \u0111\u1ec9nh \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u) k\u1ebft th\u00fac thu\u1eadt to\u00e1n v\u00e0 tr\u1ea3 v\u1ec1 s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng, ng\u01b0\u1ee3c l\u1ea1i quay v\u1ec1 b\u01b0\u1edbc \\(1\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#mo-ta_1","title":"M\u00f4 t\u1ea3","text":"<p>/uploads/breadth-first-search_gif2.gif</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>Bi\u1ebfn <code>components</code> - S\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</li> <li>M\u1ea3ng <code>visit[]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \u0111\u00e3 th\u0103m.</li> <li>Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 1e5 + 7;\n\nint n, m, components = 0;\nbool visit[maxN];\nvector &lt;int&gt; g[maxN];\n\nvoid bfs(int s) {\n    ++components;\n    queue &lt;int&gt; q;\n    q.push(s);\n    visit[s] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (auto v : g[u]) {\n            if (!visit[v]) {\n                visit[v] = true;\n                q.push(v);\n            }\n        }\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n\n    fill_n(visit, n + 1, false);\n    for (int i = 1; i &lt;= n; ++i)\n        if (!visit[i]) bfs(i);\n    cout &lt;&lt; components;\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ta c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng  thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (Depth First Search \u2013 DFS) \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(n + m)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan-loang-flood-fill","title":"Thu\u1eadt to\u00e1n loang (Flood Fill)","text":"<p>Thu\u1eadt to\u00e1n loang (thu\u1eadt to\u00e1n v\u1ebft d\u1ea7u loang) l\u00e0 m\u1ed9t k\u0129 thu\u1eadt s\u1eed d\u1ee5ng \\(BFS\\) \u0111\u1ec3 t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m c\u00f3 th\u1ec3 \u0111i t\u1edbi. \u0110i\u1ec3m kh\u00e1c bi\u1ec7t gi\u1eefa Loang so v\u1edbi \u0111a s\u1ed1 nh\u1eefng b\u00e0i \\(BFS\\) l\u00e0 ta kh\u00f4ng ph\u1ea3i t\u00ecm chi ph\u00ed nh\u1ecf nh\u1ea5t.</p> <p>Thu\u1eadt to\u00e1n loang \u0111\u01b0\u1ee3c d\u00f9ng kh\u00e1 nhi\u1ec1u trong tin h\u1ecdc, \u0111i\u1ec3n h\u00ecnh l\u00e0 thu\u1eadt to\u00e1n loang tr\u00ean ma tr\u1eadn \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng tr\u00ean ma tr\u1eadn. Ngo\u00e0i ra, n\u00f3 c\u00f2n \u1ee9ng d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n th\u1ef1c t\u1ebf nh\u01b0 c\u00e1c b\u00e0i to\u00e1n t\u00ecm \u0111\u01b0\u1eddng \u0111i, game d\u00f2 m\u00ecn, game line98,...</p> <p>G\u1ecdi l\u00e0 thu\u1eadt to\u00e1n loang v\u00ec nguy\u00ean l\u00ed c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y r\u1ea5t gi\u1ed1ng v\u1edbi hi\u1ec7n t\u01b0\u1ee3ng loang c\u1ee7a ch\u1ea5t l\u1ecfng. Khi ta nh\u1ecf d\u1ea7u xu\u1ed1ng m\u1ed9t m\u1eb7t ph\u1eb3ng, v\u1ebft d\u1ea7u c\u00f3 th\u1ec3 loang ra nh\u1eefng khu v\u1ef1c xung quanh. T\u01b0\u01a1ng t\u1ef1, thu\u1eadt to\u00e1n loang tr\u00ean ma tr\u1eadn c\u0169ng v\u1eady, ta s\u1ebd duy\u1ec7t m\u1ed9t \u00f4 tr\u00ean ma tr\u1eadn v\u00e0 sau \u0111\u00f3 duy\u1ec7t c\u00e1c \u0111i\u1ec3m xung quanh n\u00f3 v\u00e0 loang d\u1ea7n ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n.</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>UCV2013H - Slick</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>M\u1ed9t tai n\u1ea1n h\u00e0ng h\u1ea3i \u0111\u00e3 khi\u1ebfn d\u1ea7u tr\u00e0n ra bi\u1ec3n. \u0110\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c th\u00f4ng tin v\u1ec1 m\u1ee9c \u0111\u1ed9 nghi\u00eam tr\u1ecdng c\u1ee7a th\u1ea3m h\u1ecda n\u00e0y, ng\u01b0\u1eddi ta ph\u1ea3i ph\u00e2n t\u00edch c\u00e1c h\u00ecnh \u1ea3nh ch\u1ee5p t\u1eeb v\u1ec7 tinh, t\u1eeb \u0111\u00f3 t\u00ednh to\u00e1n chi ph\u00ed kh\u1eafc ph\u1ee5c cho ph\u00f9 h\u1ee3p. \u0110\u1ed1i v\u1edbi \u0111i\u1ec1u n\u00e0y, s\u1ed1 l\u01b0\u1ee3ng v\u1ebft d\u1ea7u loang tr\u00ean bi\u1ec3n v\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed7i v\u1ebft loang ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh. V\u1ebft loang l\u00e0 m\u1ed9t m\u1ea3ng d\u1ea7u n\u1ed5i tr\u00ean m\u1eb7t n\u01b0\u1edbc. </p> <p>\u0110\u1ec3 ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed, h\u00ecnh \u1ea3nh \u0111\u01b0\u1ee3c chuy\u1ec3n \u0111\u1ed5i th\u00e0nh m\u1ed9t ma tr\u1eadn nh\u1ecb ph\u00e2n k\u00edch th\u01b0\u1edbc \\(N \\times M\\) \\((1 \\le N, M \\le 250)\\). V\u1edbi \\(1\\) l\u00e0 \u00f4 b\u1ecb nhi\u1ec5m d\u1ea7u, v\u00e0 \\(0\\) l\u00e0 \u00f4 kh\u00f4ng b\u1ecb nhi\u1ec5m d\u1ea7u. V\u1ebft d\u1ea7u loang l\u00e0 t\u1eadp h\u1ee3p c\u1ee7a m\u1ed9t s\u1ed1 \u00f4 b\u1ecb nhi\u1ec5m d\u1ea7u c\u00f3 chung c\u1ea1nh.</p> <p>H\u1ecd \u0111\u00e3 thu\u00ea b\u1ea1n \u0111\u1ec3 gi\u00fap h\u1ecd x\u1eed l\u00ed h\u00ecnh \u1ea3nh. C\u00f4ng vi\u1ec7c c\u1ee7a b\u1ea1n l\u00e0 \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng v\u1ebft loang tr\u00ean bi\u1ec3n v\u00e0 k\u00edch th\u01b0\u1edbc t\u01b0\u01a1ng \u1ee9ng c\u1ee7a t\u1eebng v\u1ebft.</p>"},{"location":"algo/graph-theory/breadth-first-search/#y-tuong_2","title":"\u00dd t\u01b0\u1edfng","text":"<p>Ta x\u00e2y d\u1ef1ng m\u1ed9t m\u00f4 h\u00ecnh \u0111\u1ed3 th\u1ecb c\u1ee7a b\u00e0i to\u00e1n nh\u01b0 sau: - G\u1ecdi m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i \u00f4 \\(1\\) (\u00f4 b\u1ecb nhi\u1ec5m d\u1ea7u) c\u1ee7a ma tr\u1eadn. - T\u1ed3n t\u1ea1i m\u1ed9t c\u1ea1nh n\u1ed1i gi\u1eefa c\u1eb7p \u0111\u1ec9nh \\((u, v)\\) khi v\u00e0 ch\u1ec9 khi \u00f4 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(u\\) k\u1ec1 c\u1ea1nh v\u1edbi \u00f4 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(v\\) v\u00e0 c\u1ea3 hai \u00f4 \u0111\u1ec1u l\u00e0 \u00f4 \\(1\\).</p> <p>Khi \u0111\u00f3, b\u00e0i to\u00e1n quy v\u1ec1 th\u00e0nh b\u00e0i to\u00e1n x\u00e1c \u0111\u1ecbnh th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb. Trong \u0111\u00f3, m\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i m\u1ed9t v\u1ebft d\u1ea7u loang.</p> <p>Ngh\u0129a l\u00e0, s\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \u0111\u1ed3 th\u1ecb ch\u00ednh l\u00e0 s\u1ed1 l\u01b0\u1ee3ng v\u1ebft d\u1ea7u loang. V\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh n\u1eb1m trong c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng l\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a v\u1ebft loang t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan_2","title":"Thu\u1eadt to\u00e1n","text":"<p>\u00c1p d\u1ee5ng thu\u1eadt to\u00e1n loang tr\u00ean ma tr\u1eadn \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng: - Kh\u1edfi t\u1ea1o s\u1ed1 l\u01b0\u1ee3ng v\u1ebft d\u1ea7u b\u1eb1ng \\(0\\). - Duy\u1ec7t d\u1ea7n t\u1eebng \u00f4 c\u1ee7a ma tr\u1eadn, n\u1ebfu \u00f4 \u0111ang x\u00e9t l\u00e0 m\u1ed9t \u00f4 b\u1ecb nhi\u1ec5m d\u1ea7u (\u00f4 \\(1\\)) v\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u:     * \u0110\u00e1nh d\u1ea5u l\u1ea1i \u00f4 \u0111\u00f3.     * T\u0103ng s\u1ed1 l\u01b0\u1ee3ng v\u1ebft d\u1ea7u th\u00eam \\(1\\).     * Th\u1ef1c hi\u1ec7n th\u1ee7 t\u1ee5c \\(BFS\\) xu\u1ea5t ph\u00e1t t\u1eeb \u00f4 \u0111\u00f3 \u0111\u1ec3 loang ra c\u00e1c \u00f4 xung quanh nh\u01b0 sau:         * Kh\u1edfi t\u1ea1o k\u00edch th\u01b0\u1edbc c\u1ee7a v\u1ebft d\u1ea7u \u0111ang x\u00e9t l\u00e0 \\(1\\).         * Ti\u1ebfp t\u1ee5c th\u1ef1c hi\u1ec7n c\u00f4ng vi\u1ec7c sau cho \u0111\u1ebfn khi kh\u00f4ng c\u00f2n th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c n\u1eefa: T\u1eeb m\u1ed9t \u00f4 \u0111\u00e3 \u0111\u00e1nh d\u1ea5u, ta \u0111\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c \u00f4 b\u1ecb nhi\u1ec5m d\u1ea7u k\u1ec1 c\u1ea1nh v\u1edbi \u00f4 \u0111\u00f3 m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u. M\u1ed7i l\u1ea7n \u0111\u00e1nh d\u1ea5u l\u1ea1i m\u1ed9t \u00f4 th\u00ec ta t\u0103ng k\u00edch th\u01b0\u1edbc c\u1ee7a v\u1ebft d\u1ea7u th\u00eam \\(1\\).          * S\u1eed d\u1ee5ng \\(1\\) m\u1ea3ng \u0111\u1ec3 l\u01b0u l\u1ea1i k\u00edch th\u01b0\u1edbc c\u1ee7a t\u1eebng v\u1ebft loang. - N\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c \u00f4 b\u1ecb nhi\u1ec5m d\u1ea7u \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u, tr\u1ea3 ra k\u1ebft qu\u1ea3 v\u00e0 k\u1ebft th\u00fac thu\u1eadt to\u00e1n.</p>"},{"location":"algo/graph-theory/breadth-first-search/#mo-ta_2","title":"M\u00f4 t\u1ea3","text":"<p>/uploads/breadth-first-search_gif3.gif</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 300</code>.</li> <li>M\u1ea3ng <code>visit[][]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u00f4 \u0111\u00e3 duy\u1ec7t.</li> <li>Vector <code>slicks</code> - L\u01b0u k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed7i v\u1ebft d\u1ea7u loang.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u00f4 s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 300;\n\nint n, m;\nbool a[maxN][maxN], visit[maxN][maxN];\nvector &lt;int&gt; slicks;\nint moveX[] = {0, 0, 1, -1};\nint moveY[] = {1, -1, 0, 0};\n\n// Th\u1ee7 t\u1ee5c c\u00e0i \u0111\u1eb7t l\u1ea1i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u sau m\u1ed7i b\u1ed9 test\nvoid reset() {\n    slicks.clear();\n    for (int i = 1; i &lt;= n; ++i)\n        fill_n(visit[i], m + 1, false);\n}\n\nint bfs(int sx, int sy) {\n    int sizeSlicks = 1; // Bi\u1ebfn \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh thu\u1ed9c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng\n    queue &lt; pair &lt;int, int&gt; &gt; q;\n    q.push({sx, sy});\n    visit[sx][sy] = true;\n    while (!q.empty()) {\n        int x = q.front().first;\n        int y = q.front().second;\n        q.pop();\n\n        for (int i = 0; i &lt; 4; ++i) {\n            int u = x + moveX[i];\n            int v = y + moveY[i];\n\n            if (u &gt; n || u &lt; 1) continue;\n            if (v &gt; m || v &lt; 1) continue;\n\n            if (a[u][v] &amp;&amp; !visit[u][v]) {\n                ++sizeSlicks;\n                visit[u][v] = true;\n                q.push({u, v});\n            }\n        }\n    }\n    return sizeSlicks;\n}\n\nint main() {\n    while (cin &gt;&gt; n &gt;&gt; m) {\n        if (!n &amp;&amp; !m) return 0;\n\n        for (int i = 1; i &lt;= n; ++i)\n            for (int j = 1; j &lt;= m; ++j) cin &gt;&gt; a[i][j];\n\n        for (int i = 1; i &lt;= n; ++i)\n            for (int j = 1; j &lt;= m; ++j)\n                if (a[i][j] &amp;&amp; !visit[i][j]) \n                    slicks.push_back(bfs(i, j));\n\n        cout &lt;&lt; slicks.size() &lt;&lt; '\\n';\n\n        sort(slicks.begin(), slicks.end());\n        slicks.push_back(1e9);\n        int number = 0, pre = slicks[0];\n        for (auto v : slicks)\n            if (v != pre) {\n                cout &lt;&lt; pre &lt;&lt; ' ' &lt;&lt; number &lt;&lt; '\\n';\n                pre = v;\n                number = 1;\n            }\n            else ++number;\n\n        reset();\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_1","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ta s\u1eed d\u1ee5ng \\(2\\) m\u1ea3ng <code>moveX[]</code> v\u00e0 <code>moveY[]</code> \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u00f4 k\u1ec1 c\u1ea1nh v\u1edbi \u00f4 \u0111ang x\u00e9t.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1edbi m\u1ed7i b\u1ed9 test: - V\u00ec m\u1ed7i \u00f4 c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c duy\u1ec7t \u0111\u00fang duy nh\u1ea5t \\(1\\) l\u1ea7n n\u00ean ta s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N \\times M)\\). - Ta s\u1ebd m\u1ea5t th\u00eam \\(O(4 \\times N \\times M)\\) v\u00ec ta ph\u1ea3i duy\u1ec7t qua \\(4\\) \u00f4 k\u1ec1 c\u1ea1nh v\u1edbi m\u1ed7i \u00f4 c\u1ee7a ma tr\u1eadn.</p> <p>Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(t \\times (N \\times M + 4 \\times N \\times M))\\). V\u1edbi \\(t\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng b\u1ed9 test.</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<p>BCDAISY - Ch\u00fa b\u00f2 h\u01b0 h\u1ecfng</p> <p>BCLKCOUN - \u0110\u1ebfm s\u1ed1 ao</p> <p>BCISLAND - N\u01b0\u1edbc bi\u1ec3n</p> <p>MTNTRAI - N\u00f4ng Tr\u1ea1i</p> <p>NKGUARD - B\u1ea3o v\u1ec7 n\u00f4ng trang</p> <p>Damage - \u0110\u1ed9ng \u0111\u1ea5t</p> <p>KOZE - Sheep</p> <p>CSES - Counting Rooms</p>"},{"location":"algo/graph-theory/breadth-first-search/#ung-dung-bfs-e-tim-uong-i-ngan-nhat-trong-o-thi-khong-trong-so","title":"\u1ee8ng d\u1ee5ng BFS \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t trong \u0111\u1ed3 th\u1ecb kh\u00f4ng tr\u1ecdng s\u1ed1","text":"<p>Nh\u1eefng b\u00e0i s\u1eed d\u1ee5ng \\(BFS\\) th\u01b0\u1eddng y\u00eau c\u1ea7u t\u00ecm s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t (ho\u1eb7c \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t) t\u1eeb \u0111i\u1ec3m \u0111\u1ea7u \u0111\u1ebfn \u0111i\u1ec3m cu\u1ed1i. B\u00ean c\u1ea1nh \u0111\u00f3, \u0111\u01b0\u1eddng \u0111i gi\u1eefa \\(2\\) \u0111i\u1ec3m b\u1ea5t k\u00ec th\u01b0\u1eddng c\u00f3 chung tr\u1ecdng s\u1ed1 (v\u00e0 th\u01b0\u1eddng l\u00e0 \\(1\\)). Ph\u1ed5 bi\u1ebfn nh\u1ea5t l\u00e0 d\u1ea1ng b\u00e0i cho b\u1ea3ng \\(N \\times M\\), c\u00f3 nh\u1eefng \u00f4 \u0111i qua \u0111\u01b0\u1ee3c v\u00e0 nh\u1eefng \u00f4 kh\u00f4ng \u0111i qua \u0111\u01b0\u1ee3c. B\u1ea3ng n\u00e0y c\u00f3 th\u1ec3 l\u00e0 m\u00ea cung, s\u01a1 \u0111\u1ed3, c\u00e1c th\u00e0nh ph\u1ed1 ho\u1eb7c c\u00e1c th\u1ee9 c\u00e1c th\u1ee9 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng. C\u00f3 th\u1ec3 n\u00f3i \u0111\u00e2y l\u00e0 nh\u1eefng b\u00e0i to\u00e1n \\(BFS\\) kinh \u0111i\u1ec3n.</p> <p>H\u00e3y xem x\u00e9t b\u00e0i to\u00e1n sau \u0111\u00e2y:</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-3","title":"B\u00e0i to\u00e1n 3","text":"<p>Vmunch - G\u1eb7m c\u1ecf</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t b\u1ea3ng h\u00ecnh ch\u1eef nh\u1eadt chia th\u00e0nh l\u01b0\u1edbi \u00f4 vu\u00f4ng k\u00edch th\u01b0\u1edbc \\(R \\times C\\) (\\(1 \\le R, C \\le 100\\)). M\u1ed7i \u00f4 mang \\(1\\) trong \\(4\\) gi\u00e1 tr\u1ecb sau : <code>.</code> , <code>*</code> , <code>B</code> , <code>C</code>. C\u00f4 b\u00f2 Bessie \u0111ang \u0111\u1ee9ng \u1edf \u00f4 <code>C</code> v\u00e0 c\u1ea7n \u0111i \u0111\u1ebfn \u00f4 <code>B</code>. M\u1ed7i b\u01b0\u1edbc \u0111i Bessie c\u00f3 th\u1ec3 \u0111i t\u1eeb \\(1\\) \u00f4 vu\u00f4ng sang \\(4\\) \u00f4 vu\u00f4ng kh\u00e1c k\u1ec1 c\u1ea1nh nh\u01b0ng kh\u00f4ng \u0111\u01b0\u1ee3c \u0111i v\u00e0o \u00f4 <code>*</code> hay \u0111i ra kh\u1ecfi b\u1ea3ng. H\u00e3y t\u00ecm s\u1ed1 b\u01b0\u1edbc \u0111i \u00edt nh\u1ea5t \u0111\u1ec3 Bessie \u0111\u1ebfn \u0111\u01b0\u1ee3c \u00f4 <code>B</code>. </p> <p>\u0110\u1ea3m b\u1ea3o ch\u1ec9 c\u00f3 duy nh\u1ea5t \\(1\\) \u00f4 <code>B</code> v\u00e0 \\(1\\) \u00f4 <code>C</code> trong b\u1ea3ng, v\u00e0 lu\u00f4n t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i t\u1eeb <code>C</code> \u0111\u1ebfn <code>B</code>.</p>"},{"location":"algo/graph-theory/breadth-first-search/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>Theo m\u1ed1i quan h\u1ec7 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng trong \u0111\u1ec1 b\u00e0i, Bessie c\u00f3 th\u1ec3 di chuy\u1ec3n t\u1eeb \\(1\\) \u00f4 vu\u00f4ng sang \\(4\\) \u00f4 vu\u00f4ng kh\u00e1c k\u1ec1 c\u1ea1nh. T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t m\u00f4 h\u00ecnh \u0111\u1ed3 th\u1ecb c\u1ee7a b\u00e0i to\u00e1n: - G\u1ecdi m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i \u00f4 trong l\u01b0\u1edbi \u00f4 vu\u00f4ng. - T\u1ed3n t\u1ea1i m\u1ed9t c\u1ea1nh n\u1ed1i gi\u1eefa c\u1eb7p \u0111\u1ec9nh \\((u, v)\\) khi v\u00e0 ch\u1ec9 khi t\u1eeb \u00f4 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(u\\) c\u00f3 th\u1ec3 di chuy\u1ec3n \u0111\u1ebfn \u00f4 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(v\\) (\u0111\u1ed3ng ngh\u0129a, \u00f4 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(u\\) k\u1ec1 c\u1ea1nh v\u1edbi \u00f4 t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(v\\) v\u00e0 c\u1ea3 \\(2\\) \u00f4 \u0111\u1ec1u kh\u00f4ng ph\u1ea3i l\u00e0 \u00f4 <code>*</code> ).</p> <p>Sau khi x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb, b\u00e0i to\u00e1n quy v\u1ec1 nh\u01b0 sau: T\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u00f4 <code>C</code> \u0111\u1ebfn \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u00f4 <code>B</code>. \u0110\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t \u0111\u00f3 ch\u00ednh l\u00e0 s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t m\u00e0 Bessie c\u1ea7n th\u1ef1c hi\u1ec7n.</p> <p>V\u1eady \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n, ta s\u1ebd \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n \\(BFS\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 110</code>.</li> <li>M\u1ea3ng <code>d[][]</code> - M\u1ea3ng l\u01b0u s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t \u0111\u1ec3 \u0111i t\u1eeb \u00f4 xu\u1ea5t ph\u00e1t \u0111\u1ebfn m\u1ed7i \u00f4 kh\u00e1c.</li> <li>M\u1ea3ng <code>visit[][]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u00f4 \u0111\u00e3 \u0111i qua.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u00f4 s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 110;\n\nint r, c;\nchar a[maxN][maxN];\nint d[maxN][maxN];\nbool visit[maxN][maxN];\nint moveX[] = {0, 0, 1, -1};\nint moveY[] = {1, -1, 0, 0};\n\nvoid bfs(int sx, int sy) {\n    for (int i = 1; i &lt;= r; ++i) {\n        fill_n(d[i], c + 1, 0);\n        fill_n(visit[i], c + 1, false);\n    }\n\n    queue &lt; pair &lt;int, int&gt; &gt; q;\n    q.push({sx, sy});\n    visit[sx][sy] = true;\n    while (!q.empty()) {\n        int x = q.front().first;\n        int y = q.front().second;\n        q.pop();\n\n        // N\u1ebfu g\u1eb7p \u0111\u01b0\u1ee3c \u00f4 B th\u00ec k\u1ebft th\u00fac th\u1ee7 t\u1ee5c BFS\n        if (a[x][y] == 'B') return;\n\n        for (int i = 0; i &lt; 4; ++i) {\n            int u = x + moveX[i];\n            int v = y + moveY[i];\n\n            if (u &gt; r || u &lt; 1) continue;\n            if (v &gt; c || v &lt; 1) continue;\n            if (a[u][v] == '*') continue;\n\n            if (!visit[u][v]) {\n                d[u][v] = d[x][y] + 1;\n                visit[u][v] = true;\n                q.push({u, v});\n            }\n        }\n    }\n}\n\nint main() {\n    int sx, sy, tx, ty;\n    cin &gt;&gt; r &gt;&gt; c;\n    for (int i = 1; i &lt;= r; ++i)\n        for (int j = 1; j &lt;= c; ++j) {\n            cin &gt;&gt; a[i][j];\n            if (a[i][j] == 'C') { sx = i; sy = j; }\n            if (a[i][j] == 'B') { tx = i; ty = j; }\n        }\n\n    bfs(sx, sy);\n    cout &lt;&lt; d[tx][ty];\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_2","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ta s\u1eed d\u1ee5ng \\(2\\) m\u1ea3ng <code>moveX[]</code> v\u00e0 <code>moveY[]</code> \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u00f4 k\u1ec1 c\u1ea1nh v\u1edbi \u00f4 \u0111ang x\u00e9t.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>Gi\u1ed1ng nh\u01b0 \\(BFS\\) th\u00f4ng th\u01b0\u1eddng, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(\\|V\\| + \\|E\\|)\\) (v\u1edbi \\(\\|V\\|\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh v\u00e0 \\(\\|E\\|\\) l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb). Trong \u0111\u00f3, s\u1ed1 \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb b\u1eb1ng s\u1ed1 l\u01b0\u1ee3ng \u00f4 vu\u00f4ng c\u1ee7a b\u1ea3ng (ngh\u0129a l\u00e0 \\(\\|V\\| = R \\times C\\) ). Trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, t\u1ea1i m\u1ed7i \u00f4 \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111i sang \\(4\\) \u00f4 k\u1ec1 c\u1ea1nh, n\u00ean \u0111\u1ed3 th\u1ecb s\u1ebd c\u00f3 kho\u1ea3ng \\(4 \\times \\|V\\|\\) c\u1ea1nh.</p> <p>M\u1eb7c d\u00f9 trong qu\u00e1 tr\u00ecnh \\(BFS\\), khi g\u1eb7p \u0111\u01b0\u1ee3c \u00f4 <code>B</code> th\u00ec th\u1ee7 t\u1ee5c \\(BFS\\) k\u1ebft th\u00fac lu\u00f4n n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1ef1c t\u1ebf c\u00f3 th\u1ec3 \u00edt h\u01a1n so v\u1edbi t\u00ednh to\u00e1n. Nh\u01b0ng trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t l\u00e0 ta ph\u1ea3i \u0111i h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c \u00f4 kh\u00e1c xong m\u1edbi \u0111\u1ebfn \u0111\u01b0\u1ee3c \u00f4 <code>B</code>. N\u00ean nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(R \\times C + 4 \\times R \\times C)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-4","title":"B\u00e0i to\u00e1n 4","text":"<p>ELEVTRBL - Elevator Trouble</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai_3","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Trong m\u1ed9t t\u00f2a nh\u00e0 c\u00f3 \\(f\\) t\u1ea7ng, c\u00e1c t\u1ea7ng \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(f\\), hi\u1ec7n t\u1ea1i b\u1ea1n \u0111ang \u0111\u1ee9ng t\u1ea1i t\u1ea7ng \\(s\\) v\u00e0 c\u1ea7n \u0111i \u0111\u1ebfn t\u1ea7ng \\(g\\). T\u1ea1i m\u1ed7i t\u1ea7ng, thang m\u00e1y ch\u1ec9 c\u00f3 \\(2\\) n\u00fat l\u00e0 \"UP u\" v\u00e0 \"DOWN d\" : - N\u00fat \"UP u\" c\u00f3 th\u1ec3 \u0111\u01b0a b\u1ea1n l\u00ean \u0111\u00fang \\(u\\) t\u1ea7ng n\u1ebfu nh\u01b0 c\u00f3 \u0111\u1ee7 s\u1ed1 t\u1ea7ng ph\u00eda tr\u00ean. - N\u00fat \"DOWN d\" c\u00f3 th\u1ec3 \u0111\u01b0a b\u1ea1n xu\u1ed1ng \u0111\u00fang \\(d\\) t\u1ea7ng n\u1ebfu nh\u01b0 c\u00f3 \u0111\u1ee7 s\u1ed1 t\u1ea7ng ph\u00eda d\u01b0\u1edbi. </p> <p>Tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng c\u00f3 \u0111\u1ee7 s\u1ed1 t\u1ea7ng th\u00ec thang m\u00e1y s\u1ebd kh\u00f4ng l\u00ean ho\u1eb7c kh\u00f4ng xu\u1ed1ng. H\u00e3y t\u00ednh s\u1ed1 l\u1ea7n ph\u1ea3i b\u1ea5m n\u00fat \u00edt nh\u1ea5t \u0111\u1ec3 c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1ea7ng \\(g\\).</p> <p>\\(1 \\le s, g \\le f \\le 10^6; 0 \\le u, d \\le 10^6\\). </p>"},{"location":"algo/graph-theory/breadth-first-search/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>Ghi ch\u00fa: T\u1eeb \u1ee9ng d\u1ee5ng t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t trong \u0111\u1ed3 th\u1ecb kh\u00f4ng tr\u1ecdng s\u1ed1, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c v\u1ea5n \u0111\u1ec1 ho\u1eb7c tr\u00f2 ch\u01a1i c\u00f3 s\u1ed1 l\u1ea7n di chuy\u1ec3n \u00edt nh\u1ea5t, n\u1ebfu m\u1ed7i tr\u1ea1ng th\u00e1i c\u1ee7a n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb v\u00e0 vi\u1ec7c chuy\u1ec3n \u0111\u1ed5i t\u1eeb tr\u1ea1ng th\u00e1i n\u00e0y sang tr\u1ea1ng th\u00e1i kh\u00e1c l\u00e0 c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>V\u1edbi b\u00e0i to\u00e1n n\u00e0y ta kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n v\u00e9t c\u1ea1n, hay quay lui c\u00f3 \u0111i\u1ec1u ki\u1ec7n v\u00ec s\u1ed1 l\u01b0\u1ee3ng t\u1ea7ng \u1edf \u0111\u00e2y c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn \\(10^6\\) d\u1eabn t\u1edbi vi\u1ec7c ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 th\u1ec3 ch\u1ea1y qu\u00e1 th\u1eddi gian.</p> <p>Thay v\u00e0o \u0111\u00f3, ta s\u1ebd s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n \\(BFS\\). T\u01b0 t\u01b0\u1edfng \u1edf \u0111\u00e2y l\u00e0 ta s\u1ebd \u0111i t\u00ednh s\u1ed1 l\u1ea7n b\u1ea5m n\u00fat nh\u1ecf nh\u1ea5t \u0111\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c m\u1ed7i t\u1ea7ng.</p> <p>T\u1eeb m\u1ed1i quan h\u1ec7 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng trong b\u00e0i to\u00e1n, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t m\u00f4 h\u00ecnh \u0111\u1ed3 th\u1ecb nh\u01b0 sau: - G\u1ecdi m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i t\u1ea7ng c\u1ee7a t\u00f2a nh\u00e0. - N\u1ebfu t\u1eeb t\u1ea7ng \\(x\\) ta c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1ea7ng \\(y\\) b\u1eb1ng m\u1ed9t l\u1ea7n b\u1ea5m n\u00fat th\u00ec t\u1ed3n t\u1ea1i c\u1ea1nh n\u1ed1i \\(1\\) chi\u1ec1u t\u1eeb \u0111\u1ec9nh \\(x\\) \u0111\u1ebfn \u0111\u1ec9nh \\(y\\). T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c t\u1ed3n t\u1ea1i c\u1ea1nh \\(x \\rightarrow (x + u)\\) (n\u1ebfu \\((x + u) \\le f\\) ) v\u00e0 c\u1ea1nh \\(x \\rightarrow (x - d)\\) (n\u1ebfu \\((x - d) \\ge 1\\) ).</p> <p>Sau khi x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb, \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(s\\) \u0111\u1ebfn \u0111\u1ec9nh \\(g\\) ch\u00ednh l\u00e0 s\u1ed1 l\u1ea7n b\u1ea5m n\u00fat \u00edt nh\u1ea5t c\u1ea7n th\u1ef1c hi\u1ec7n.</p> <p>V\u1eady \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n, ta s\u1ebd \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n \\(BFS\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_4","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 1000007</code>.</li> <li>M\u1ea3ng <code>number[]</code> - M\u1ea3ng l\u01b0u l\u1ea1i s\u1ed1 l\u1ea7n b\u1ea5m n\u00fat \u00edt nh\u1ea5t \u0111\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c m\u1ed7i t\u1ea7ng.</li> <li>M\u1ea3ng <code>visit[]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u l\u1ea1i c\u00e1c t\u1ea7ng \u0111\u00e3 \u0111\u1ebfn.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c t\u1ea7ng s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 1e6 + 7;\n\nint f, s, g, u, d;\nint visit[maxN], number[maxN];\n\nvoid bfs() {\n    fill_n(number, f + 1, 0);\n    fill_n(visit, f + 1, false);\n\n    queue &lt;int&gt; q;\n    q.push(s);\n    visit[s] = true;\n    while (!q.empty()) {\n        int x = q.front();\n        q.pop();\n\n        // N\u1ebfu g\u1eb7p \u0111\u01b0\u1ee3c t\u1ea7ng \u0111\u00edch th\u00ec k\u1ebft th\u00fac th\u1ee7 t\u1ee5c BFS\n        if (x == g) return;\n\n        for (int y : {x + u, x - d}) {\n            if (y &gt; f || y &lt; 1) continue;\n\n            if (!visit[y]) {\n                visit[y]  = true;\n                number[y] = number[x] + 1;\n                q.push(y);\n            }\n        }\n    }\n\n    // K\u1ebft th\u00fac qu\u00e1 tr\u00ecnh BFS m\u00e0 ko \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1ea7ng \u0111\u00edch \n    number[g] = -1;\n}\n\nint main() {\n    cin &gt;&gt; f &gt;&gt; s &gt;&gt; g &gt;&gt; u &gt;&gt; d;\n    bfs();\n    if (number[g] != -1) cout &lt;&lt; number[g];\n    else cout &lt;&lt; \"use the stairs\";  \n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_3","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(\\|V\\| + \\|E\\|)\\) (v\u1edbi \\(\\|V\\|\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh v\u00e0 \\(\\|E\\|\\) l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb). Trong \u0111\u00f3, s\u1ed1 \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb b\u1eb1ng s\u1ed1 t\u1ea7ng c\u1ee7a t\u00f2a nh\u00e0 (ngh\u0129a l\u00e0 \\(\\|V\\| = f\\) ). \u0110a s\u1ed1 m\u1ed7i t\u1ea7ng \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn \\(2\\) t\u1ea7ng kh\u00e1c, n\u00ean \u0111\u1ed3 th\u1ecb s\u1ebd c\u00f3 kho\u1ea3ng \\(2 \\times \\|V\\|\\) c\u1ea1nh.</p> <p>Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(f + 2 \\times f)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-5","title":"B\u00e0i to\u00e1n 5","text":"<p>cjpaysballas - CJ thanh to\u00e1n BALLAS</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai_4","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng g\u1ed3m \\(N\\) \u0111\u1ec9nh v\u00e0 \\(M\\) c\u1ea1nh \\((1 \\le N \\le 10^5; 1 \\le M \\le 10^6)\\). C\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). H\u00e3y t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t xu\u1ea5t ph\u00e1t t\u1ea1i \u0111\u1ec9nh \\(s\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i \u0111\u1ec9nh \\(t\\). N\u1ebfu c\u00f3 nhi\u1ec1u \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t th\u1ecfa m\u00e3n, th\u00ec ch\u1ec9 ra \u0111\u01b0\u1eddng \u0111i c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t trong s\u1ed1 \u0111\u00f3.</p> <p>\u0110\u1ea3m b\u1ea3o lu\u00f4n t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(s\\) \u0111\u1ebfn \\(t\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ecbnh l\u00ed: N\u1ebfu ta s\u1eafp x\u1ebfp c\u00e1c danh s\u00e1ch k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n th\u00ec thu\u1eadt to\u00e1n \\(BFS\\) lu\u00f4n tr\u1ea3 v\u1ec1 \u0111\u01b0\u1eddng \u0111i c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t trong s\u1ed1 nh\u1eefng \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t.</p> <ul> <li>Ch\u1ee9ng minh: Trong qu\u00e1 tr\u00ecnh \\(BFS\\), n\u1ebfu c\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o h\u00e0ng \u0111\u1ee3i (queue) theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n t\u0103ng d\u1ea7n th\u00ec theo c\u01a1 ch\u1ebf ho\u1ea1t \u0111\u1ed9ng \\(FIFO\\) (First In - First Out), c\u00e1c \u0111\u1ec9nh c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf h\u01a1n s\u1ebd \u0111\u01b0\u1ee3c th\u0103m tr\u01b0\u1edbc.</li> </ul> <p>T\u1eeb \u0111\u1ecbnh l\u00ed tr\u00ean, ta s\u1ebd s\u1eafp x\u1ebfp l\u1ea1i th\u1ee9 t\u1ef1 \u0111\u1ec9nh k\u1ec1 theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1eddng \u0111i \u0111\u01b0\u1ee3c in ra theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n. Sau \u0111\u00f3 s\u1eed d\u1ee5ng \\(BFS\\) k\u1ebft h\u1ee3p v\u1edbi truy v\u1ebft \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n.</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_5","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>M\u1ea3ng <code>par[]</code> - M\u1ea3ng l\u01b0u l\u1ea1i v\u1ebft \u0111\u01b0\u1eddng \u0111i.</li> <li>M\u1ea3ng <code>visit[]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \u0111\u00e3 th\u0103m.</li> <li>Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 1e5 + 7;\n\nint n, m, s, t;\nint par[maxN];\nbool visit[maxN];\nvector &lt;int&gt; g[maxN];\n\nvoid bfs(int s) {\n    fill_n(par, n + 1, -1);\n    fill_n(visit, n + 1, false);\n\n    queue &lt;int&gt; q;\n    q.push(s);\n    visit[s] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (auto v : g[u]) {\n            if (!visit[v]) {\n                par[v]   = u;\n                visit[v] = true;\n                q.push(v);\n            }\n        }\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t;\n    while (m--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n    }\n\n    // S\u1eafp x\u1ebfp danh s\u00e1ch k\u1ec1\n    for (int i = 1; i &lt;= n; ++i) \n        sort(g[i].begin(), g[i].end());\n\n    bfs(s);\n\n    // Truy v\u1ebft\n    vector &lt;int&gt; path;\n    for (int v = t; v != -1; v = par[v])\n        path.push_back(v);\n    reverse(path.begin(), path.end());\n\n    for (auto v : path) cout &lt;&lt; v &lt;&lt; ' ';\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_4","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p - \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(N + M)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-tap-ap-dung_1","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<p>BFS - BFS C\u01a1 b\u1ea3n</p> <p>Kandp - M\u00e3 v\u00e0 t\u1ed1t</p> <p>NAKANJ - Minimum Knight moves !!!</p> <p>DIGOKEYS - Find the Treasure</p> <p>MICEMAZE - Mice and Maze</p> <p>INVESORT - Inversion Sort</p> <p>ONEZERO - Ones and zeros</p> <p>CATM - The Cats and the Mouse</p> <p>NATALIAG - Natalia Plays a Game</p> <p>MULTII - Yet Another Multiple Problem</p> <p>Cycle in Maze - 769C Codeforces</p> <p>Okabe and City - 821D Codeforces</p> <p>Police Stations - 796D Codeforces</p> <p>CSES - Labyrinth</p> <p>CSES - Message Route</p> <p>CSES - Monsters</p>"},{"location":"algo/graph-theory/breadth-first-search/#ung-dung-bfs-e-tim-chu-trinh-ngan-nhat-trong-o-thi-co-huong-khong-trong-so","title":"\u1ee8ng d\u1ee5ng BFS \u0111\u1ec3 t\u00ecm chu tr\u00ecnh ng\u1eafn nh\u1ea5t trong \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng tr\u1ecdng s\u1ed1","text":""},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-6","title":"B\u00e0i to\u00e1n 6","text":""},{"location":"algo/graph-theory/breadth-first-search/#e-bai_5","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Ada \u0111ang c\u00f3 m\u1ed9t chuy\u1ebfn \u0111i \u1edf Bugindia. \u1ede \u0111\u00f3 c\u00f3 nhi\u1ec1u th\u00e0nh ph\u1ed1 v\u00e0 nh\u1eefng con \u0111\u01b0\u1eddng m\u1ed9t chi\u1ec1u n\u1ed1i gi\u1eefa ch\u00fang. Ada r\u1ea5t b\u0103n kho\u0103n v\u1ec1 vi\u1ec7c t\u00ecm con \u0111\u01b0\u1eddng ng\u1eafn nh\u1ea5t b\u1eaft \u0111\u1ea7u t\u1ea1i m\u1ed9t th\u00e0nh ph\u1ed1 v\u00e0 k\u1ebft th\u00fac \u1edf c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ed1. V\u00ec Ada th\u00edch nh\u1eefng chuy\u1ebfn \u0111i ng\u1eafn, c\u00f4 \u1ea5y \u0111\u00e3 nh\u1edd b\u1ea1n t\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a con \u0111\u01b0\u1eddng nh\u01b0 v\u1eady cho m\u1ed7i th\u00e0nh ph\u1ed1 \u1edf Bugindia.</p> <p>Input</p> <ul> <li>D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a s\u1ed1 \\(N\\) \\((0 &lt; N \\le 200)\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ed1.</li> <li>\\(N\\) d\u00f2ng ti\u1ebfp theo, m\u1ed7i d\u00f2ng ch\u1ee9a \\(N\\) s\u1ed1 nguy\u00ean \\(H_{ij}\\) \\((0 \\le H_{ij} \\le 1)\\) . Ngh\u0129a l\u00e0, n\u1ebfu \\(H_{ij} = 1\\) th\u00ec t\u1ed3n t\u1ea1i m\u1ed9t con \u0111\u01b0\u1eddng n\u1ed1i t\u1eeb th\u00e0nh ph\u1ed1 \\(i\\) \u0111\u1ebfn th\u00e0nh ph\u1ed1 \\(j\\). Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu \\(H_{ij} = 0\\) th\u00ec kh\u00f4ng t\u1ed3n t\u1ea1i con \u0111\u01b0\u1eddng.</li> </ul> <p>Output</p> <ul> <li>G\u1ed3m \\(N\\) d\u00f2ng: D\u00f2ng th\u1ee9 \\(i\\) in ra \u0111\u1ed9 d\u00e0i c\u1ee7a con \u0111\u01b0\u1eddng ng\u1eafn nh\u1ea5t b\u1eaft \u0111\u1ea7u t\u1eeb th\u00e0nh ph\u1ed1 \\(i\\) v\u00e0 k\u1ebft th\u00fac \u1edf th\u00e0nh ph\u1ed1 \\(i\\). N\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i con \u0111\u01b0\u1eddng n\u00e0o nh\u01b0 v\u1eady, h\u00e3y in ra \"NO WAY\" \u0111\u1ec3 thay th\u1ebf.</li> </ul>"},{"location":"algo/graph-theory/breadth-first-search/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<p>Theo y\u00eau c\u1ea7u \u0111\u1ec1 b\u00e0i, v\u1edbi m\u1ed7i th\u00e0nh ph\u1ed1, ta ph\u1ea3i t\u00ecm \u0111\u1ed9 d\u00e0i con \u0111\u01b0\u1eddng ng\u1eafn nh\u1ea5t b\u1eaft \u0111\u1ea7u v\u00e0 k\u1ebft th\u00fac \u1edf c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ed1 \u0111\u00f3.</p> <p>Ta coi c\u00e1c th\u00e0nh ph\u1ed1 l\u00e0 c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb v\u00e0 c\u00e1c con \u0111\u01b0\u1eddng \\(1\\) chi\u1ec1u l\u00e0 c\u00e1c c\u1ea1nh c\u00f3 h\u01b0\u1edbng c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>\u0110\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c, v\u1edbi m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb, ta ph\u1ea3i t\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a chu tr\u00ecnh ng\u1eafn nh\u1ea5t ch\u1ee9a \u0111\u1ec9nh \u0111\u00f3. V\u00ec th\u1ee9 t\u1ef1 duy\u1ec7t c\u00e1c \u0111\u1ec9nh c\u1ee7a thu\u1eadt to\u00e1n \\(BFS\\) lu\u00f4n b\u1eaft \u0111\u1ea7u duy\u1ec7t t\u1eeb c\u00e1c \u0111\u1ec9nh g\u1ea7n \u0111\u1ec9nh ngu\u1ed3n nh\u1ea5t cho \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh n\u1eb1m \u1edf xa \u0111\u1ec9nh ngu\u1ed3n. Do \u0111\u00f3, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng t\u00ednh ch\u1ea5t n\u00e0y c\u1ee7a \\(BFS\\) \u0111\u1ec3 c\u00f3 th\u1ec3 t\u00ecm ra \u0111\u1ec9nh \\(u\\) n\u1eb1m g\u1ea7n \u0111\u1ec9nh ngu\u1ed3n nh\u1ea5t sao cho c\u00f3 c\u1ea1nh n\u1ed1i t\u1eeb \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh ngu\u1ed3n. </p> <p>\u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn \u0111\u1ec9nh \\(u\\), r\u1ed3i t\u1eeb \\(u\\) tr\u1edf l\u1ea1i \u0111\u1ec9nh ngu\u1ed3n b\u1eb1ng \\(1\\) c\u1ea1nh c\u00f3 h\u01b0\u1edbng, ch\u00ednh l\u00e0 chu tr\u00ecnh ng\u1eafn nh\u1ea5t ch\u1ee9a \u0111\u1ec9nh ngu\u1ed3n.</p>"},{"location":"algo/graph-theory/breadth-first-search/#mo-ta_3","title":"M\u00f4 t\u1ea3","text":"<ul> <li>Th\u1ef1c hi\u1ec7n \\(BFS\\) b\u1eaft \u0111\u1ea7u t\u1ea1i \u0111\u1ec9nh \\(S\\) :</li> </ul> <p>/uploads/breadth-first-search_gif4.gif</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan_3","title":"Thu\u1eadt to\u00e1n","text":"<p>V\u1edbi m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb, ta th\u1ef1c hi\u1ec7n \\(BFS\\) b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \u0111\u00f3. </p> <p>Trong qu\u00e1 tr\u00ecnh \\(BFS\\), ghi nh\u1eadn kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn \u0111\u1ec9nh \u0111ang duy\u1ec7t, n\u1ebfu g\u1eb7p l\u1ea1i \u0111\u1ec9nh ngu\u1ed3n th\u00ec \u0111\u00f3 l\u00e0 chu tr\u00ecnh ng\u1eafn nh\u1ea5t ch\u1ee9a \u0111\u1ec9nh ngu\u1ed3n. L\u00fac n\u00e0y, ta in ra \u0111\u1ed9 d\u00e0i chu tr\u00ecnh v\u00e0 k\u1ebft th\u00fac \\(BFS\\), r\u1ed3i b\u1eaft \u0111\u1ea7u th\u1ef1c hi\u1ec7n m\u1ed9t \\(BFS\\) m\u1edbi t\u1eeb \u0111\u1ec9nh ti\u1ebfp theo.</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_6","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 210</code>.</li> <li>M\u1ea3ng <code>visit[]</code> - M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \u0111\u00e3 th\u0103m.</li> <li>M\u1ea3ng <code>d[]</code> - M\u1ea3ng l\u01b0u l\u1ea1i kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn m\u1ecdi \u0111\u1ec9nh.</li> <li>Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 210;\n\nint n;\nint visit[maxN], d[maxN];\nvector &lt;int&gt; g[maxN];\n\nint bfs(int s) {\n    fill_n(d, n + 1, 0);\n    fill_n(visit, n + 1, false);\n\n    queue &lt;int&gt; q;\n    q.push(s);\n    visit[s] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (auto v : g[u]) {\n\n            // N\u1ebfu g\u1eb7p l\u1ea1i \u0111\u1ec9nh ngu\u1ed3n, tr\u1ea3 ra \u0111\u1ed9 d\u00e0i chu tr\u00ecnh v\u00e0 k\u1ebft th\u00fac BFS\n            if (v == s) return d[u] + 1;\n\n            if (!visit[v]) {\n                d[v] = d[u] + 1;\n                visit[v] = true;\n                q.push(v);\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; ++i)\n        for (int j = 1; j &lt;= n; ++j) {\n            int h; \n            cin &gt;&gt; h;\n            if (h) g[i].push_back(j);\n        }\n\n    for (int i = 1; i &lt;= n; ++i) {\n        int ans = bfs(i);\n        if (ans) cout &lt;&lt; ans &lt;&lt; '\\n';\n        else cout &lt;&lt; \"NO WAY\\n\";\n    }\n} \n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_5","title":"\u0110\u00e1nh gi\u00e1","text":"<p>T\u1eeb b\u00e0i to\u00e1n n\u00e0y, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u1ec3 t\u00ecm chu tr\u00ecnh ng\u1eafn nh\u1ea5t trong \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng tr\u1ecdng s\u1ed1 b\u1eb1ng c\u00e1ch l\u1ea5y ra chu tr\u00ecnh ng\u1eafn nh\u1ea5t trong t\u1ea5t c\u1ea3 c\u00e1c chu tr\u00ecnh ch\u1ee9a m\u1ed7i \u0111\u1ec9nh (nhi\u1ec1u nh\u1ea5t m\u1ed9t chu tr\u00ecnh t\u1eeb m\u1ed7i \\(BFS\\) b\u1eaft \u0111\u1ea7u t\u1eeb \\(1\\) \u0111\u1ec9nh).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>Theo \u0111\u1ec1 b\u00e0i, \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng ma tr\u1eadn k\u1ec1. N\u00ean \u0111\u1ec3 t\u1ed1i \u01b0u v\u1ec1 m\u1eb7t th\u1eddi gian, ta s\u1ebd chuy\u1ec3n \u0111\u1ed5i c\u00e1ch bi\u1ec3u di\u1ec5n \u0111\u1ed3 th\u1ecb th\u00e0nh danh s\u00e1ch k\u1ec1.</p> <p>Theo c\u00e1ch t\u00ednh to\u00e1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u00f4ng th\u01b0\u1eddng, h\u00e0m \\(BFS\\) s\u1ebd m\u1ea5t \\(O(N + \\|E\\|)\\). V\u1edbi \\(\\|E\\|\\) l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb. Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, m\u1ed7i \u0111\u1ec9nh \u0111\u1ec1u c\u00f3 c\u1ea1nh n\u1ed1i t\u1edbi t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb (\u0111\u1ed3ng ngh\u0129a, \\(H_{ij} = 1\\) v\u1edbi \\(1 \\le i, j \\le N\\)), khi \u0111\u00f3, s\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb l\u00e0 \\(N^2\\).</p> <p>V\u00ec v\u1edbi m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb, ta ph\u1ea3i g\u1ecdi l\u1ea1i h\u00e0m \\(BFS\\). N\u00ean nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(N^3)\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#ung-dung-bfs-e-tim-uong-i-ngan-nhat-trong-o-thi-co-trong-so-0-hoac-1","title":"\u1ee8ng d\u1ee5ng BFS \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t trong \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1 0 ho\u1eb7c 1","text":""},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-7","title":"B\u00e0i to\u00e1n 7","text":"<p>REVERSE - Chef and Reversing</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai_6","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(N\\) \u0111\u1ec9nh v\u00e0 \\(M\\) c\u1ea1nh \\((1 \\le N, M \\le 10^5)\\). T\u00ecm s\u1ed1 c\u1ea1nh \u00edt nh\u1ea5t c\u1ea7n ph\u1ea3i \u0111\u1ea3o chi\u1ec1u \u0111\u1ec3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(1\\) cho \u0111\u1ebfn \u0111\u1ec9nh \\(N\\).</p> <p>C\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). \u0110\u1ed3 th\u1ecb c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u c\u1ea1nh n\u1ed1i gi\u1eefa m\u1ed9t c\u1eb7p \u0111\u1ec9nh. V\u00e0 c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i c\u1ea1nh n\u1ed1i t\u1eeb m\u1ed9t \u0111\u1ec9nh \u0111\u1ebfn ch\u00ednh n\u00f3 (\u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 c\u00f3 khuy\u00ean).</p>"},{"location":"algo/graph-theory/breadth-first-search/#phan-tich_4","title":"Ph\u00e2n t\u00edch","text":"<p>G\u1ecdi \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u l\u00e0 \\(G\\).</p> <p>Ta s\u1ebd th\u00eam c\u00e1c c\u1ea1nh ng\u01b0\u1ee3c c\u1ee7a m\u1ed7i c\u1ea1nh ban \u0111\u1ea7u trong \u0111\u1ed3 th\u1ecb \\(G\\) (ngh\u0129a l\u00e0, v\u1edbi m\u1ed7i c\u1ea1nh \\(u \\to v\\) c\u1ee7a \u0111\u1ed3 th\u1ecb, ta s\u1ebd th\u00eam c\u1ea1nh \\(v \\to u\\) v\u00e0o). Cho c\u00e1c c\u1ea1nh ng\u01b0\u1ee3c c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng \\(1\\) v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh ban \u0111\u1ea7u c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng \\(0\\). Khi \u0111\u00f3, ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb m\u1edbi l\u00e0 \u0111\u1ed3 th\u1ecb \\(G '\\).</p> <p>\u0110\u1ed9 d\u00e0i c\u1ee7a \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(1\\) cho \u0111\u1ebfn \u0111\u1ec9nh \\(N\\) trong \u0111\u1ed3 th\u1ecb \\(G'\\) ch\u00ednh l\u00e0 \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n.  - Ch\u1ee9ng minh: Trong \u0111\u1ed3 th\u1ecb \\(G '\\), x\u00e9t t\u1eebng c\u1ea1nh tr\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). N\u1ebfu c\u1ea1nh \u0111\u00f3 c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(0\\) th\u00ec \u0111\u00e3 t\u1ed3n t\u1ea1i c\u1ea1nh \u0111\u00f3 tr\u00ean \u0111\u1ed3 th\u1ecb \\(G\\) ban \u0111\u1ea7u, c\u00f2n n\u1ebfu tr\u1ecdng s\u1ed1 l\u00e0 \\(1\\) th\u00ec c\u1ea1nh ng\u01b0\u1ee3c l\u1ea1i c\u1ee7a n\u00f3 t\u1ed3n t\u1ea1i trong \u0111\u1ed3 th\u1ecb \\(G\\). Khi \u0111\u00f3 ta s\u1ebd ph\u1ea3i \u0111\u1ea3o chi\u1ec1u c\u1ea1nh \u0111\u00f3. Nh\u1eadn th\u1ea5y sau khi x\u00e9t to\u00e0n b\u1ed9 c\u00e1c c\u1ea1nh, ta s\u1ebd thu \u0111\u01b0\u1ee3c m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\), v\u00e0 s\u1ed1 c\u1ea1nh ta ph\u1ea3i \u0111\u1ea3o chi\u1ec1u ch\u00ednh l\u00e0 s\u1ed1 c\u1ea1nh \\(1\\) trong \u0111\u01b0\u1eddng \u0111i \u0111\u00f3.</p> <p>Ta s\u1eed d\u1ee5ng k\u0129 thu\u1eadt 0-1 BFS : - N\u00f3 c\u00f3 t\u00ean g\u1ecdi nh\u01b0 v\u1eady v\u00ec k\u0129 thu\u1eadt 0-1 BFS th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t trong \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1 \\(0\\) ho\u1eb7c \\(1\\). - Khi tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e1c c\u1ea1nh b\u1eb1ng \\(0\\) ho\u1eb7c \\(1\\), thu\u1eadt to\u00e1n \\(BFS\\) th\u00f4ng th\u01b0\u1eddng s\u1ebd tr\u1ea3 ra k\u1ebft qu\u1ea3 sai, v\u00ec thu\u1eadt to\u00e1n \\(BFS\\) th\u00f4ng th\u01b0\u1eddng ch\u1ec9 \u0111\u00fang trong \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e1c c\u1ea1nh b\u1eb1ng nhau.</p> <p>Ta c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda m\u1ed9t ch\u00fat t\u1eeb thu\u1eadt to\u00e1n \\(BFS\\) \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c k\u0129 thu\u1eadt 0-1 BFS : - Trong k\u0129 thu\u1eadt n\u00e0y, thay v\u00ec s\u1eed d\u1ee5ng m\u1ea3ng bool \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u l\u1ea1i c\u00e1c \u0111\u1ec9nh \u0111\u00e3 duy\u1ec7t, ta s\u1ebd ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n kho\u1ea3ng c\u00e1ch ng\u1eafn nh\u1ea5t. Ngh\u0129a l\u00e0, trong qu\u00e1 tr\u00ecnh \\(BFS\\), v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(v\\) k\u1ec1 v\u1edbi \\(u\\), \u0111\u1ec9nh \\(v\\) ch\u1ec9 \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o h\u00e0ng \u0111\u1ee3i khi v\u00e0 ch\u1ec9 khi \u0111\u01b0\u1eddng \u0111i \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn \\(v\\) l\u1edbn h\u01a1n \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn \\(u\\) c\u1ed9ng v\u1edbi tr\u1ecdng s\u1ed1 c\u1ea1nh \\(u \\to v\\) (kho\u1ea3ng c\u00e1ch \u0111\u01b0\u1ee3c gi\u1ea3m b\u1edbt khi s\u1eed d\u1ee5ng c\u1ea1nh n\u00e0y) . - Ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u (deque) thay cho h\u00e0ng \u0111\u1ee3i (queue) \u0111\u1ec3 l\u01b0u tr\u1eef c\u00e1c \u0111\u1ec9nh.  Trong qu\u00e1 tr\u00ecnh \\(BFS\\), n\u1ebfu ta g\u1eb7p m\u1ed9t c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng \\(0\\) th\u00ec \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o ph\u00eda tr\u01b0\u1edbc c\u1ee7a h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu ta g\u1eb7p m\u1ed9t c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng \\(1\\) th\u00ec \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o ph\u00eda sau c\u1ee7a h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u.     - Gi\u1ea3i th\u00edch: Ta push \u0111\u1ec9nh k\u1ebft n\u1ed1i b\u1edfi c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 \\(0\\) v\u00e0o \u0111\u1ea7u deque \u0111\u1ec3 gi\u1eef cho h\u00e0ng \u0111\u1ee3i lu\u00f4n \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh ngu\u1ed3n t\u1ea1i m\u1ecdi th\u1eddi \u0111i\u1ec3m. B\u1edfi v\u00ec, c\u00e1c \u0111\u1ec9nh \u1edf g\u1ea7n \u0111\u1ea7u queue/deque h\u01a1n th\u00ec n\u00f3 ph\u1ea3i c\u00f3 kho\u1ea3ng c\u00e1ch t\u1eeb g\u1ed1c g\u1ea7n h\u01a1n, m\u00e0 \u0111\u1ec9nh ta push v\u00e0o \u0111\u1ea7u c\u00f3 kho\u1ea3ng c\u00e1ch b\u1eb1ng ch\u00ednh kho\u1ea3ng c\u00e1ch \u0111\u1ec9nh v\u1eeba pop ra, n\u00ean deque l\u00fac n\u00e0y th\u1ecfa m\u00e3n t\u00ednh ch\u1ea5t c\u1ee7a queue trong \\(BFS\\).      - T\u1eeb t\u00ednh ch\u1ea5t tr\u00ean, ta c\u00f3 nh\u1eadn x\u00e9t sau: K\u0129 thu\u1eadt 0-1 BFS v\u1eabn \u0111\u00fang cho tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1 c\u1ea1nh l\u00e0 \\(0\\) ho\u1eb7c \\(x\\) \\((x \\ge 0)\\).</p> <p>C\u00e1ch ti\u1ebfp c\u1eadn c\u1ee7a k\u0129 thu\u1eadt 0-1 BFS kh\u00e1 gi\u1ed1ng v\u1edbi thu\u1eadt to\u00e1n \\(BFS\\) + Dijkstra.</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_7","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>inf = 1000000000</code>.</li> <li>H\u1eb1ng s\u1ed1 <code>maxN = 100007</code>.</li> <li>M\u1ea3ng <code>d[]</code> - M\u1ea3ng l\u01b0u l\u1ea1i kho\u1ea3ng c\u00e1ch ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ebfn m\u1ed7i \u0111\u1ec9nh.</li> <li>Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>H\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u <code>q</code> - Ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int inf  = 1e9;\nconst int maxN = 1e5 + 7;\n\nint n, m;\nint d[maxN];\nvector &lt; pair &lt;int, int&gt; &gt; g[maxN];\n\nvoid bfs(int s) {\n    fill_n(d, n + 1, inf);\n    deque &lt;int&gt; q;\n    q.push_back(s);\n    d[s] = 0;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop_front();\n\n        if (u == n) return;\n\n        for (auto edge : g[u]) {\n            int v = edge.second;\n            int w = edge.first;\n\n            if (d[v] &gt; d[u] + w) {\n                d[v] = d[u] + w;\n                if (w) q.push_back(v);\n                else q.push_front(v);\n            }\n        }\n    }\n    d[n] = -1;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back({0, v});\n        g[v].push_back({1, u});\n    }\n    bfs(1);\n    cout &lt;&lt; d[n];\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_6","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ta c\u0169ng c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y b\u1eb1ng thu\u1eadt to\u00e1n \\(Dijkstra\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(M \\times logN)\\). </p> <p>Trong khi s\u1eed d\u1ee5ng \\(BFS\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(N + M)\\). N\u00f3 tuy\u1ebfn t\u00ednh v\u00e0 hi\u1ec7u qu\u1ea3 h\u01a1n thu\u1eadt to\u00e1n \\(Dijkstra\\).</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-tap-ap-dung_2","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<p>KATHTHI - KATHTHI</p> <p>Chamber of Secrets - 173B</p> <p>Three States - 590C Codeforces</p> <p>Olya and Energy Drinks - 877D Codeforces</p> <p>UVA - Ocean Currents</p> <p>UVA - Colliding Traffic</p> <p>Tram</p> <p>Jailbreak</p> <p>Minimum Cost to Make at Least One Valid Path in a Grid</p>"},{"location":"algo/graph-theory/breadth-first-search/#ung-dung-bfs-e-kiem-tra-o-thi-hai-phia-bipartite-graph","title":"\u1ee8ng d\u1ee5ng BFS \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ed3 th\u1ecb hai ph\u00eda (Bipartite graph)","text":""},{"location":"algo/graph-theory/breadth-first-search/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Trong L\u00fd thuy\u1ebft \u0111\u1ed3 th\u1ecb, \u0111\u1ed3 th\u1ecb hai ph\u00eda (\u0111\u1ed3 th\u1ecb l\u01b0\u1ee1ng ph\u00e2n hay \u0111\u1ed3 th\u1ecb hai ph\u1ea7n - Bipartite graph) l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb \u0111\u1eb7c bi\u1ec7t, trong \u0111\u00f3 t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c chia l\u00e0m hai t\u1eadp h\u1ee3p kh\u00f4ng giao nhau th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n kh\u00f4ng c\u00f3 c\u1ea1nh n\u1ed1i hai \u0111\u1ec9nh b\u1ea5t k\u1ef3 thu\u1ed9c c\u00f9ng m\u1ed9t t\u1eadp. </p> <p>C\u00f3 r\u1ea5t nhi\u1ec1u t\u00ecnh hu\u1ed1ng th\u1ef1c t\u1ebf c\u00f3 th\u1ec3 m\u00f4 ph\u1ecfng b\u1eb1ng \u0111\u1ed3 th\u1ecb hai ph\u00eda: - V\u00ed d\u1ee5: Mu\u1ed1n bi\u1ec3u di\u1ec5n m\u1ed1i quan h\u1ec7 gi\u1eefa m\u1ed9t nh\u00f3m h\u1ecdc sinh v\u00e0 m\u1ed9t nh\u00f3m c\u00e1c tr\u01b0\u1eddng h\u1ecdc, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u1ed3 th\u1ecb v\u1edbi m\u1ed7i m\u1ed9t h\u1ecdc sinh v\u00e0 m\u1ed7i tr\u01b0\u1eddng h\u1ecdc l\u00e0 m\u1ed9t \u0111\u1ec9nh. Gi\u1eefa m\u1ed9t ng\u01b0\u1eddi \\(A\\) v\u00e0 m\u1ed9t tr\u01b0\u1eddng \\(X\\) s\u1ebd c\u00f3 m\u1ed9t c\u1ea1nh n\u1ebfu nh\u01b0 \\(A\\) \u0111\u00e3 ho\u1eb7c \u0111ang \u0111i h\u1ecdc \u1edf tr\u01b0\u1eddng \\(X\\). Ki\u1ec3u \u0111\u1ed3 th\u1ecb n\u00e0y s\u1ebd l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb hai ph\u1ea7n, v\u1edbi m\u1ed9t nh\u00f3m \u0111\u1ec9nh l\u00e0 ng\u01b0\u1eddi v\u00e0 nh\u00f3m kia l\u00e0 tr\u01b0\u1eddng; s\u1ebd kh\u00f4ng c\u00f3 c\u1ea1nh n\u1ed1i gi\u1eefa hai ng\u01b0\u1eddi ho\u1eb7c gi\u1eefa hai tr\u01b0\u1eddng.</p> <p>M\u1ed9t t\u00ednh ch\u1ea5t th\u00fa v\u1ecb c\u1ee7a \u0111\u1ed3 th\u1ecb hai ph\u00eda l\u00e0 ta c\u00f3 th\u1ec3 t\u00f4 m\u00e0u c\u00e1c \u0111\u1ec9nh \u0111\u1ed3 th\u1ecb v\u1edbi hai m\u00e0u sao cho kh\u00f4ng c\u00f3 hai \u0111\u1ec9nh n\u00e0o c\u00f9ng m\u00e0u k\u1ec1 nhau.</p> <p></p> <p>B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 \u0111\u1ed3 th\u1ecb hai ph\u00eda t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/graph-theory/breadth-first-search/#bai-toan-8","title":"B\u00e0i to\u00e1n 8","text":"<p>Bicoloring - UVA 10004</p>"},{"location":"algo/graph-theory/breadth-first-search/#e-bai_7","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng li\u00ean th\u00f4ng g\u1ed3m \\(n\\) \u0111\u1ec9nh \\((0 &lt; n &lt; 200)\\). C\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(n-1\\). V\u00e0 kh\u00f4ng t\u1ed3n t\u1ea1i c\u1ea1nh n\u1ed1i t\u1eeb m\u1ed9t \u0111\u1ec9nh \u0111\u1ebfn ch\u00ednh n\u00f3 (\u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 khuy\u00ean).</p> <p>B\u1ea1n h\u00e3y ki\u1ec3m tra xem \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00f4 b\u1eb1ng \\(2\\) m\u00e0u hay kh\u00f4ng. Ngh\u0129a l\u00e0 ta c\u00f3 th\u1ec3 g\u00e1n m\u00e0u (t\u1eeb m\u1ed9t b\u1ea3ng g\u1ed3m \\(2\\) m\u00e0u) cho m\u1ed7i \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb theo c\u00e1ch sao cho kh\u00f4ng c\u00f3 \\(2\\) \u0111\u1ec9nh n\u00e0o k\u1ec1 c\u1ea1nh nhau c\u00f3 c\u00f9ng m\u00e0u.</p>"},{"location":"algo/graph-theory/breadth-first-search/#phan-tich_5","title":"Ph\u00e2n t\u00edch","text":"<p>Theo \u0111\u1ec1 b\u00e0i, ta ph\u1ea3i ki\u1ec3m tra xem \\(1\\) \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00f4 b\u1eb1ng \\(2\\) m\u00e0u sao cho kh\u00f4ng c\u00f3 \\(2\\) \u0111\u1ec9nh n\u00e0o k\u1ec1 c\u1ea1nh nhau c\u00f3 c\u00f9ng m\u00e0u hay kh\u00f4ng. \u0110i\u1ec1u \u0111\u00f3 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c ki\u1ec3m tra xem \u0111\u1ed3 th\u1ecb \u0111\u00e3 cho c\u00f3 ph\u1ea3i l\u00e0 \u0111\u1ed3 th\u1ecb hai ph\u00eda hay kh\u00f4ng.</p> <p>Ta c\u00f3 th\u1ec3 d\u00f9ng thu\u1eadt to\u00e1n \\(BFS\\) \u0111\u1ec3 ki\u1ec3m tra xem m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 ph\u1ea3i \u0111\u1ed3 th\u1ecb hai ph\u00eda, b\u1eb1ng c\u00e1ch t\u00ecm ki\u1ebfm t\u1eeb m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec v\u00e0 t\u00f4 m\u00e0u cho c\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c xem x\u00e9t. Ngh\u0129a l\u00e0, ta t\u00f4 m\u00e0u \u0111en cho \u0111\u1ec9nh g\u1ed1c, t\u00f4 m\u00e0u xanh cho t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh k\u1ec1 \u0111\u1ec9nh g\u1ed1c, t\u00f4 m\u00e0u \u0111en cho t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi m\u1ed9t \u0111\u1ec9nh k\u1ec1 \u0111\u1ec9nh g\u1ed1c, v\u00e0 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady. N\u1ebfu \u1edf m\u1ed9t b\u01b0\u1edbc n\u00e0o \u0111\u00f3, hai \u0111\u1ec9nh k\u1ec1 nhau c\u00f3 c\u00f9ng m\u00e0u, th\u00ec \u0111\u1ed3 th\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 hai ph\u00eda. N\u1ebfu qu\u00e1 tr\u00ecnh t\u00ecm ki\u1ebfm k\u1ebft th\u00fac m\u00e0 \u0111i\u1ec1u n\u00e0y kh\u00f4ng x\u1ea3y ra th\u00ec \u0111\u1ed3 th\u1ecb l\u00e0 hai ph\u00eda.</p> <p>Thu\u1eadt to\u00e1n n\u00e0y \u0111\u00fang v\u1edbi \u0111\u1ed3 th\u1ecb li\u00ean th\u00f4ng. V\u1edbi \u0111\u1ed3 th\u1ecb g\u1ed3m nhi\u1ec1u th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng th\u00ec ta ph\u1ea3i duy\u1ec7t t\u1eebng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ed9t nh\u01b0 thu\u1eadt to\u00e1n t\u00ecm s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng v\u00e0 \u00e1p d\u1ee5ng th\u1ee7 t\u1ee5c \\(BFS\\) t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"algo/graph-theory/breadth-first-search/#mo-ta_4","title":"M\u00f4 t\u1ea3","text":"<ul> <li>V\u00ed d\u1ee5 m\u00f4 t\u1ea3 \u0111\u1ed3 th\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ed3 th\u1ecb hai ph\u00eda:</li> </ul> <p>/uploads/breadth-first-search_gif5.gif</p> <ul> <li>V\u00ed d\u1ee5 m\u00f4 t\u1ea3 \u0111\u1ed3 th\u1ecb hai ph\u00eda:</li> </ul> <p>/uploads/breadth-first-search_gif6.gif</p>"},{"location":"algo/graph-theory/breadth-first-search/#thuat-toan_4","title":"Thu\u1eadt to\u00e1n","text":"<p>\u0110\u1ec3 t\u00f4 m\u00e0u \u0111\u1ed3 th\u1ecb, ta s\u1ebd s\u1eed d\u1ee5ng \\(1\\) m\u1ea3ng \u0111\u1ec3 l\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed7i \u0111\u1ec9nh. C\u00f3 \\(3\\) tr\u1ea1ng th\u00e1i: - Tr\u1ea1ng th\u00e1i -1: \u0110\u1ec9nh v\u1eabn ch\u01b0a \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u (\u0111\u1ec9nh ch\u01b0a \u0111\u01b0\u1ee3c duy\u1ec7t). - Tr\u1ea1ng th\u00e1i 0: \u0110\u1ec9nh \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u \u0111en. - Tr\u1ea1ng th\u00e1i 1: \u0110\u1ec9nh \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u xanh.</p> <p>Ban \u0111\u1ea7u, t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u1ec1u \u1edf tr\u1ea1ng th\u00e1i -1.</p> <p>Ta s\u1eed d\u1ee5ng \\(BFS\\) \u0111\u1ec3 t\u00f4 m\u00e0u \u0111\u1ed3 th\u1ecb: - B\u1eaft \u0111\u1ea7u t\u1eeb m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u1ef3 v\u00e0 t\u00f4 m\u00e0u \u0111en cho \u0111\u1ec9nh \u0111\u00f3. - V\u1edbi m\u1ed7i \u0111\u1ec9nh \\(v\\) k\u1ec1 v\u1edbi \u0111\u1ec9nh \u0111ang x\u00e9t \\(u\\), n\u1ebfu \u0111\u1ec9nh \\(v\\) ch\u01b0a \u0111\u01b0\u1ee3c duy\u1ec7t, ta s\u1ebd t\u00f4 m\u00e0u \\(v\\) ng\u01b0\u1ee3c v\u1edbi m\u00e0u c\u1ee7a \\(u\\) (n\u1ebfu \\(u\\) l\u00e0 m\u00e0u xanh, ta s\u1ebd t\u00f4 \\(v\\) m\u00e0u \u0111en v\u00e0 ng\u01b0\u1ee3c l\u1ea1i). - N\u1ebfu \\(u\\) \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m tr\u01b0\u1edbc \u0111\u00f3 v\u00e0 c\u00f3 c\u00f9ng m\u00e0u v\u1edbi \\(v\\), ta s\u1ebd d\u1eebng thu\u1eadt to\u00e1n v\u00e0 k\u1ebft lu\u1eadn \u0111\u1ed3 th\u1ecb kh\u00f4ng ph\u1ea3i \u0111\u1ed3 th\u1ecb hai ph\u00eda.</p> <p>Cu\u1ed1i c\u00f9ng, n\u1ebfu ta c\u00f3 th\u1ec3 t\u00f4 m\u00e0u t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh m\u00e0 kh\u00f4ng vi ph\u1ea1m quy t\u1eafc t\u00f4 m\u00e0u, ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn \u0111\u1ed3 th\u1ecb l\u00e0 hai ph\u00eda.</p>"},{"location":"algo/graph-theory/breadth-first-search/#cai-at_8","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u:</p> <ul> <li>H\u1eb1ng s\u1ed1 <code>maxN = 210</code>.</li> <li>M\u1ea3ng <code>color[]</code> - M\u1ea3ng l\u01b0u tr\u1ea1ng th\u00e1i t\u00f4 m\u00e0u c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh.</li> <li>H\u00e0ng \u0111\u1ee3i <code>q</code> - Ch\u1ee9a c\u00e1c \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t theo th\u1ee9 t\u1ef1 \u01b0u ti\u00ean chi\u1ec1u r\u1ed9ng.</li> </ul> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 210;\n\nint n, l;\nint color[maxN];\nvector &lt;int&gt; g[maxN];\n\nbool checkBipartiteGraph() {\n    fill_n(color, n + 1, -1);\n\n    queue &lt;int&gt; q;\n    q.push(0);\n    color[0] = 0;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (auto v : g[u]) {\n            if (color[v] == color[u]) return false;\n            if (color[v] == -1) {\n                color[v] = !color[u];\n                q.push(v);\n            }\n        }\n    }\n    return true;\n}\n\nint main() {\n    while (cin &gt;&gt; n){\n        if (!n) return 0;\n\n        cin &gt;&gt; l;\n        while (l--) {\n            int u, v;\n            cin &gt;&gt; u &gt;&gt; v;\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        if (!checkBipartiteGraph()) cout &lt;&lt; \"NOT \";\n        cout &lt;&lt; \"BICOLORABLE.\\n\";\n\n        for (int i = 0; i &lt; n; ++i) g[i].clear();\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/breadth-first-search/#anh-gia_7","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ta c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng  thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (Depth First Search \u2013 DFS) \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ed3 th\u1ecb hai ph\u00eda.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(t \\times (n + l))\\). V\u1edbi \\(t\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng b\u1ed9 test.</p>"},{"location":"algo/graph-theory/centroid-decomposition/","title":"Thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m - Centroid decomposition","text":"<p>T\u00e1c gi\u1ea3: * Cao Thanh H\u1eadu - Tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 Nhi\u00ean - \u0110HQG-HCM</p> <p>Reviewer: * L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM * H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM * Ng\u00f4 Nh\u1eadt Quang - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean - \u0110HQGHN</p>"},{"location":"algo/graph-theory/centroid-decomposition/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m c\u00f3 th\u1ec3 hi\u1ec3u l\u00e0 thu\u1eadt to\u00e1n \"chia \u0111\u1ec3 tr\u1ecb\" tr\u00ean c\u00e2y. Thu\u1eadt to\u00e1n n\u00e0y ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\u00e1ch li\u00ean t\u1ee5c chia nh\u1ecf c\u00e2y v\u00e0 x\u1eed l\u00fd tr\u00ean m\u1ed7i c\u00e2y \u0111\u01b0\u1ee3c chia.</p>"},{"location":"algo/graph-theory/centroid-decomposition/#trong-tam-cua-cay","title":"Tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y","text":""},{"location":"algo/graph-theory/centroid-decomposition/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y - centroid - l\u00e0 m\u1ed9t \u0111\u1ec9nh tr\u00ean c\u00e2y m\u00e0 khi b\u1ecf n\u00f3 ra kh\u1ecfi c\u00e2y, m\u1ed7i th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u00f2n l\u1ea1i c\u00f3 s\u1ed1 \u0111\u1ec9nh kh\u00f4ng qu\u00e1 m\u1ed9t n\u1eeda s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y ban \u0111\u1ea7u.</p> <p> <p>/uploads/centroid-decomposition_img1.png</p> <p></p> <p>C\u00e2y trong h\u00ecnh tr\u00ean c\u00f3 tr\u1ecdng t\u00e2m l\u00e0 \u0111\u1ec9nh \\(5\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#trong-tam-cua-cay-co-the-khong-oc-nhat","title":"Tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u1ed9c nh\u1ea5t","text":"<p>Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p, c\u00e2y c\u00f3 th\u1ec3 c\u00f3 \\(2\\) tr\u1ecdng t\u00e2m, v\u00e0 khi \u0111\u00f3 \\(2\\) tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y s\u1ebd k\u1ec1 nhau. Tuy nhi\u00ean, \u0111i\u1ec1u n\u00e0y kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn c\u00e1c thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c n\u00eau trong b\u00e0i.</p>"},{"location":"algo/graph-theory/centroid-decomposition/#tim-trong-tam-cua-cay","title":"T\u00ecm tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y","text":"<p>T\u1eeb \u0111\u1ecbnh ngh\u0129a, ta c\u00f3 \u00fd t\u01b0\u1edfng c\u01a1 b\u1ea3n \u0111\u1ec3 t\u00ecm tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y nh\u01b0 sau: gi\u1ea3 s\u1eed tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y ch\u1eafc ch\u1eafn thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\), v\u1edbi m\u1ecdi \u0111\u1ec9nh \\(v\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(u\\), n\u1ebfu c\u00e2y con g\u1ed1c \\(v\\) c\u00f3 nhi\u1ec1u h\u01a1n \\(n/2\\) \u0111\u1ec9nh th\u00ec tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y ch\u1eafc ch\u1eafn thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\). N\u1ebfu kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ec9nh \\(v\\) n\u00e0o th\u1ecfa m\u00e3n th\u00ec \\(u\\) ch\u00ednh l\u00e0 tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y. Trong \u0111\u00f3, \\(n\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y.</p> <p>M\u1edf r\u1ed9ng \u00fd t\u01b0\u1edfng, c\u1ea7n x\u00e2y d\u1ef1ng h\u00e0m \\(findCentroid(u)\\) v\u1edbi \u00fd ngh\u0129a: \\(findCentroid(u)\\) \u0111\u01b0\u1ee3c g\u1ecdi ch\u1ec9 khi tr\u1ecdng t\u00e2m c\u00e2y ch\u1eafc ch\u1eafn thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\), v\u00e0 gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 c\u1ee7a h\u00e0m lu\u00f4n l\u00e0 tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y. B\u00ean trong h\u00e0m n\u00e0y th\u1ef1c hi\u1ec7n t\u00ecm \\(v\\) nh\u01b0 \u00fd t\u01b0\u1edfng c\u01a1 b\u1ea3n. N\u1ebfu t\u00ecm \u0111\u01b0\u1ee3c \\(v\\), tr\u1ea3 v\u1ec1 \\(findCentroid(v)\\), n\u1ebfu kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c th\u00ec tr\u1ea3 v\u1ec1 \\(u\\).</p> <p>Sau \u0111\u00e2y l\u00e0 code v\u00ed d\u1ee5, l\u01b0u \u00fd tr\u01b0\u1edbc khi t\u00ecm tr\u1ecdng t\u00e2m, ta c\u1ea7n g\u1ecdi h\u00e0m \\(countChild(root, 0)\\) \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh thu\u1ed9c t\u1eebng c\u00e2y con. \u0110\u1ec3 t\u00ecm centroid, g\u1ecdi \\(findCentroid(root, 0)\\), v\u1edbi \\(root\\) l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y (c\u00f3 th\u1ec3 ch\u1ecdn b\u1ea5t c\u1ee9 \u0111\u1ec9nh n\u00e0o).</p> <pre><code>int n;           // n l\u00e0 s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y ban \u0111\u1ea7u\nint child[N];   // child[u] l\u00e0 s\u1ed1 \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c u\n\nvoid countChild(int u, int parent) {\n    child[u] = 1; // c\u00e2y con g\u1ed1c u c\u00f3 \u00edt nh\u1ea5t 1 \u0111\u1ec9nh l\u00e0 \u0111\u1ec9nh u\n    for (int v : adj[u]) { // v\u1edbi m\u1ecdi v k\u1ec1 u\n        if (v != parent) { // n\u1ebfu v l\u00e0 con c\u1ee7a u\n            countChild(v, u);\n            child[u] += child[v];\n        }\n    }\n}\n\nint findCentroid(int u, int parent) {\n    for (int v : adj[u]) { \n        if (v != parent) { \n            if (child[v] &gt; n/2) { // t\u00ecm \u0111\u01b0\u1ee3c v th\u1ecfa m\u00e3n\n                return findCentroid(v, u);\n            }\n        }\n    }\n    return u; // kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb v n\u00e0o th\u1ecfa m\u00e3n, tr\u1ea3 v\u1ec1 u\n}\n</code></pre> <p>Code tr\u00ean ho\u1ea1t \u0111\u1ed9ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n)\\) (l\u01b0u \u00fd, \\(n\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y \u0111ang x\u00e9t).</p> <p>T\u1eeb \u0111\u1ecbnh ngh\u0129a h\u00e0m \\(findCentroid(u)\\) c\u0169ng c\u00f3 th\u1ec3 ch\u1ee9ng minh tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y lu\u00f4n t\u1ed3n t\u1ea1i. Khi \\(findCentroid()\\) d\u1eebng l\u1ea1i t\u1ea1i \u0111\u1ec9nh \\(u\\) (\\(findCentroid(u)\\) tr\u1ea3 v\u1ec1 \\(u\\)) ta bi\u1ebft r\u1eb1ng c\u00e1c c\u00e2y con c\u00f3 g\u1ed1c l\u00e0 con c\u1ee7a \\(u\\) \u0111\u1ec1u \u0111\u00e3 th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c\u00f3 s\u1ed1 \u0111\u1ec9nh kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n / 2\\). \u0110\u1ed3ng th\u1eddi khi \\(findCentroid(u)\\) \u0111\u01b0\u1ee3c g\u1ecdi ta c\u0169ng bi\u1ebft s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) kh\u00f4ng nh\u1ecf h\u01a1n \\(n / 2\\), v\u1eady s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) c\u0169ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n / 2\\). V\u1eady khi x\u00f3a \u0111\u1ec9nh \\(u\\) \u0111i th\u00ec m\u1ecdi c\u00e2y t\u1ea1o th\u00e0nh \u0111\u1ec1u c\u00f3 s\u1ed1 \u0111\u1ec9nh kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n/2\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#thuat-toan-phan-tach-trong-tam-centroid-decomposition","title":"Thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m - Centroid decomposition","text":""},{"location":"algo/graph-theory/centroid-decomposition/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Ta s\u1ebd c\u00f9ng gi\u1ea3i quy\u1ebft m\u1ed9t b\u00e0i to\u00e1n \u0111i\u1ec3n h\u00ecnh nh\u01b0 sau: Cho m\u1ed9t c\u00e2y c\u00f3 \\(n\\) \u0111\u1ec9nh, \u0111\u1ebfm s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y c\u00f3 \u0111\u1ed9 d\u00e0i \\(k\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>N\u1ebfu th\u00eam \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 b\u00e0i to\u00e1n tr\u1edf th\u00e0nh \"\u0110\u1ebfm s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y \u0111\u1ed9 d\u00e0i \\(k\\) \u0111i qua m\u1ed9t \u0111\u1ec9nh cho tr\u01b0\u1edbc\" th\u00ec v\u1ea5n \u0111\u1ec1 \u0111\u01a1n gi\u1ea3n h\u01a1n kh\u00e1 nhi\u1ec1u.</p> <p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n v\u1edbi \u0111i\u1ec1u ki\u1ec7n \u0111i qua m\u1ed9t \u0111\u1ec9nh cho tr\u01b0\u1edbc, ta ch\u1ec9 c\u1ea7n ch\u1ecdn \u0111\u1ec9nh \u0111\u00f3 l\u00e0 g\u1ed1c, l\u00fac n\u00e0y, v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(v\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh g\u1ed1c, m\u1ed7i \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) c\u00f3 kho\u1ea3ng c\u00e1ch \u0111\u1ebfn g\u1ed1c l\u00e0 \\(d\\) c\u00f3 th\u1ec3 gh\u00e9p v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) v\u00e0 c\u00f3 kho\u1ea3ng c\u00e1ch \u0111\u1ebfn g\u1ed1c l\u00e0 \\(k - d\\) \u0111\u1ec3 t\u1ea1o th\u00e0nh m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(k\\) \u0111i qua \u0111\u1ec9nh g\u1ed1c. </p> <p>C\u00f3 th\u1ec3 dfs \u0111\u1ec3 x\u00e2y d\u1ef1ng c\u00e1c m\u1ea3ng \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh c\u00f3 kho\u1ea3ng c\u00e1ch \u0111\u1ebfn g\u1ed1c l\u00e0 \\(0, 1, 2, 3,...\\) tr\u00ean c\u00e2y v\u00e0 trong m\u1ed7i c\u00e2y con g\u1ed1c \\(v\\), khi \u0111\u00f3 d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng \u0111\u01b0\u1eddng \u0111i th\u1ecfa m\u00e3n. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y l\u00e0 \\(O(n)\\), v\u1edbi \\(n\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y \u0111ang x\u00e9t.</p> <p>Tr\u1edf l\u1ea1i b\u00e0i to\u00e1n ban \u0111\u1ea7u, l\u00e0m sao \u0111\u1ec3 chuy\u1ec3n t\u1eeb \"s\u1ed1 l\u01b0\u1ee3ng \u0111\u01b0\u1eddng \u0111i ch\u1ee9a m\u1ed9t \u0111\u1ec9nh c\u1ed1 \u0111\u1ecbnh\" th\u00e0nh \"s\u1ed1 l\u01b0\u1ee3ng \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y\"? Khi ch\u1ecdn m\u1ed9t \u0111\u1ec9nh l\u00e0m g\u1ed1c, th\u1ea5y r\u1eb1ng m\u1ecdi \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y c\u00f3 th\u1ec3 chia th\u00e0nh 2 nh\u00f3m: \u0111i qua \u0111\u1ec9nh g\u1ed1c v\u00e0 kh\u00f4ng \u0111i qua \u0111\u1ec9nh g\u1ed1c. T\u1eeb \u0111\u00e2y ta c\u00f3 \u00fd t\u01b0\u1edfng nh\u01b0 sau: sau m\u1ed7i l\u1ea7n \u0111\u1ebfm s\u1ed1 \u0111\u01b0\u1eddng \u0111i th\u1ecfa m\u00e3n \u0111i qua m\u1ed9t \u0111\u1ec9nh c\u1ed1 \u0111\u1ecbnh, ta x\u00f3a \u0111\u1ec9nh \u0111\u00f3 \u0111i, v\u1edbi m\u1ed7i c\u00e2y m\u1edbi t\u1ea1o th\u00e0nh, ta l\u1ea1i th\u1ef1c hi\u1ec7n vi\u1ec7c \u0111\u1ebfm nh\u01b0 tr\u00ean r\u1ed3i l\u1ea1i x\u00f3a \u0111\u1ec9nh \u0111i, \u0111\u1ebfn khi m\u1ecdi \u0111\u1ec9nh \u0111\u1ec1u b\u1ecb x\u00f3a.</p> <p>C\u00e1ch l\u00e0m tr\u00ean cho k\u1ebft qu\u1ea3 ch\u00ednh x\u00e1c, v\u00ec m\u1ecdi \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u00e9t qua v\u00e0 m\u1ed7i \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y \u0111\u01b0\u1ee3c x\u00e9t qua \u0111\u00fang m\u1ed9t l\u1ea7n (sau l\u1ea7n \u0111\u1ea7u ti\u00ean, m\u1ed9t trong hai \u0111\u1ea7u m\u00fat c\u1ee7a \u0111\u01b0\u1eddng \u0111i b\u1ecb x\u00f3a ho\u1eb7c s\u1ebd thu\u1ed9c v\u1ec1 hai c\u00e2y m\u1edbi ri\u00eang bi\u1ec7t nhau, v\u00ec v\u1eady s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c x\u00e9t l\u1ea1i l\u1ea7n hai).</p> <p>Tuy nhi\u00ean, c\u00e1ch n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00e1 l\u1edbn trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p. V\u00ed d\u1ee5 c\u00e2y l\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng, ta l\u1ea1i li\u00ean t\u1ee5c ch\u1ecdn m\u1ed9t \u0111\u1ea7u m\u00fat c\u1ee7a c\u00e2y \u0111\u1ec3 l\u00e0m \u0111\u1ec9nh c\u1ed1 \u0111\u1ecbnh, v\u1eady sau m\u1ed7i l\u1ea7n x\u00f3a, s\u1ed1 \u0111\u1ec9nh tr\u00ean c\u00e2y ch\u1ec9 gi\u1ea3m \u0111i \\(1\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng s\u1ebd l\u00e0 \\(O(n + (n-1) + (n-2) + (n-3)+...) \\approx O(n^2)\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>C\u0169ng theo \u00fd t\u01b0\u1edfng tr\u00ean, nh\u01b0ng thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m cho c\u00e1ch ch\u1ecdn \u0111\u1ec9nh t\u1ed1i \u01b0u h\u01a1n, l\u00e0m gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n. C\u1ee5 th\u1ec3, thu\u1eadt to\u00e1n ho\u1ea1t \u0111\u1ed9ng nh\u01b0 sau:</p> <ol> <li>Ch\u1ecdn tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y l\u00e0m g\u1ed1c c\u1ee7a c\u00e2y.</li> <li>\u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y th\u1ecfa m\u00e3n y\u00eau c\u1ea7u v\u00e0 c\u00f3 ch\u1ee9a g\u1ed1c c\u1ee7a c\u00e2y. </li> <li>X\u00f3a \u0111\u1ec9nh g\u1ed1c. N\u1ebfu tr\u01b0\u1edbc khi x\u00f3a c\u00e2y c\u00f3 nhi\u1ec1u h\u01a1n \\(1\\) \u0111\u1ec9nh (khi \u0111\u00f3 t\u1ea1o th\u00e0nh m\u1ed9t ho\u1eb7c m\u1ed9t s\u1ed1 c\u00e2y ri\u00eang bi\u1ec7t kh\u00e1c) th\u00ec v\u1edbi m\u1ed7i c\u00e2y m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o, tr\u1edf l\u1ea1i b\u01b0\u1edbc \\(1\\).</li> </ol> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n b\u1eb1ng \\(\\log(n)\\) nh\u00e2n cho \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u01b0\u1edbc \\(2\\). N\u1ebfu b\u01b0\u1edbc \\(2\\) \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong \\(O(m)\\), v\u1edbi \\(m\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y \u0111ang x\u00e9t l\u00fac \u0111\u00f3, th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng s\u1ebd l\u00e0 \\(O(n \\times \\log(n))\\). N\u1ebfu b\u01b0\u1edbc \\(2\\) \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong \\(O(m\\log(m))\\), th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 \\(O(n \\times \\log(n)^2)\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#giai-thich","title":"Gi\u1ea3i th\u00edch","text":"<p>Gi\u1ea3 s\u1eed ta x\u1ebfp c\u00e1c c\u00e2y \u0111\u01b0\u1ee3c x\u00e9t th\u00e0nh nhi\u1ec1u h\u00e0ng, b\u1eaft \u0111\u1ea7u t\u1eeb h\u00e0ng \\(0\\), m\u1ed7i h\u00e0ng g\u1ed3m m\u1ed9t s\u1ed1 c\u00e2y theo quy lu\u1eadt: h\u00e0ng \\(0\\) ch\u1ee9a c\u00e2y ban \u0111\u1ea7u, h\u00e0ng th\u1ee9 \\(i\\) (\\(i\\) t\u1eeb \\(1\\) tr\u1edf \u0111i) ch\u1ee9a c\u00e1c c\u00e2y t\u1ea1o \u0111\u01b0\u1ee3c t\u1eeb vi\u1ec7c ph\u00e2n t\u00e1ch m\u1ed9t c\u00e2y n\u00e0o \u0111\u00f3 \u1edf h\u00e0ng \\(i - 1\\).</p> <p>X\u1ebfp theo quy lu\u1eadt tr\u00ean th\u00ec t\u1ed5ng k\u00edch th\u01b0\u1edbc (s\u1ed1 \u0111\u1ec9nh) c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y tr\u00ean m\u1ed9t h\u00e0ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n\\) (g\u1ecdi \\(n\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh c\u1ee7a c\u00e2y ban \u0111\u1ea7u). T\u1ea5t c\u1ea3 c\u00e2y \u1edf h\u00e0ng th\u1ee9 \\(i\\) c\u00f3 k\u00edch th\u01b0\u1edbc kh\u00f4ng qu\u00e1 m\u1ed9t n\u1eeda k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e2y to nh\u1ea5t \u1edf h\u00e0ng th\u1ee9 \\(i - 1\\), hay n\u00f3i c\u00e1ch kh\u00e1c, m\u1ed7i c\u00e2y \u1edf h\u00e0ng \\(i\\) c\u00f3 s\u1ed1 \u0111\u1ec9nh kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(\\frac{n}{2^i}\\). V\u1eady ch\u1ec9 c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u nh\u1ea5t \\(log(n)\\) h\u00e0ng.</p> <p>V\u1eady t\u1ed5ng s\u1ed1 \u0111\u1ec9nh c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y t\u1ea1o th\u00e0nh t\u1eeb thu\u1eadt to\u00e1n tr\u00ean kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(n \\times \\log(n)\\), \u0111\u00e2y c\u0169ng ch\u00ednh l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n.</p>"},{"location":"algo/graph-theory/centroid-decomposition/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 200005;\n\nint n, k, child[N], del[N]; // del[u] \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ec9nh u c\u00f3 b\u1ecb x\u00f3a hay ch\u01b0a\nvector&lt;int&gt; adj[N];\n\nvoid countChild(int u, int parent) {\n    child[u] = 1; \n    for (int v : adj[u]) if (v != parent &amp;&amp; !del[v]) { \n        countChild(v, u);\n        child[u] += child[v];\n    }\n}\n\nint centroid(int u, int parent, int n) {\n    for (int v : adj[u]) \n        if (v != parent &amp;&amp; child[v] &gt; n/2 &amp;&amp; !del[v])\n            return centroid(v, u, n);\n    return u;\n}\n\nvoid updateAns(int root, int n) {\n    //h\u00e0m th\u1ef1c hi\u1ec7n b\u01b0\u1edbc 2\n}\n\nlong long solve(int u) {\n    countChild(u, 0); \n\n    int n = child[u];\n    int root = centroid(u, 0, n); // b\u01b0\u1edbc 1\n\n    updateAns(root, n); // b\u01b0\u1edbc 2\n\n    del[root] = 1;\n    for (int v : adj[root]) if (!del[v]) \n            ans += solve(v); // b\u01b0\u1edbc 3\n\n    return ans;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt; n; ++i) {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n\n    cout &lt;&lt; solve(1);\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/centroid-decomposition/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>B\u01b0\u1edbc \\(2\\) l\u00e0 b\u01b0\u1edbc quan tr\u1ecdng c\u1ee7a thu\u1eadt to\u00e1n, c\u00f3 th\u1ec3 ki\u1ec3m tra xem thu\u1eadt to\u00e1n c\u00f3 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c v\u00e0o b\u00e0i to\u00e1n hay kh\u00f4ng b\u1eb1ng c\u00e1ch ki\u1ec3m tra xem b\u01b0\u1edbc th\u1ee9 \\(2\\) c\u00f3 kh\u1ea3 thi hay kh\u00f4ng. B\u00e0i to\u00e1n \u1edf b\u01b0\u1edbc \\(2\\) th\u01b0\u1eddng \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u so v\u1edbi b\u00e0i to\u00e1n ban \u0111\u1ea7u.</p> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 l\u00e0m th\u1eed b\u00e0i t\u1eadp v\u00ed d\u1ee5 t\u1ea1i \u0111\u00e2y</p>"},{"location":"algo/graph-theory/centroid-decomposition/#cay-trong-tam","title":"C\u00e2y tr\u1ecdng t\u00e2m","text":"<p>C\u00e2y tr\u1ecdng t\u00e2m \\(T'(V, E')\\) c\u1ee7a c\u00e2y \\(T(V, E)\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u01b0 sau: Th\u00eam v\u00e0o \\(E'\\) c\u00e1c c\u1ea1nh n\u1ed1i tr\u1ecdng t\u00e2m c\u1ee7a \\(T\\) v\u1edbi tr\u1ecdng t\u00e2m c\u1ee7a m\u1ed7i c\u00e2y m\u1edbi t\u1ea1o th\u00e0nh khi x\u00f3a tr\u1ecdng t\u00e2m c\u1ee7a \\(T\\) ra kh\u1ecfi \\(T\\). V\u1edbi m\u1ed7i c\u00e2y m\u1edbi t\u1ea1o \u0111\u01b0\u1ee3c t\u1eeb vi\u1ec7c x\u00f3a tr\u1ecdng t\u00e2m, th\u1ef1c hi\u1ec7n l\u1ea1i vi\u1ec7c th\u00eam c\u1ea1nh v\u00e0 x\u00f3a \u0111\u1ec9nh nh\u01b0 v\u1eeba n\u00eau, ti\u1ebfp t\u1ee5c \u0111\u1ebfn khi t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \u0111\u1ec1u b\u1ecb x\u00f3a.</p> <p>Sau khi x\u00f3a t\u1ea5t c\u1ea3 \u0111\u1ec9nh trong c\u00e2y \\(T\\), ta \u0111\u00e3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c c\u00e2y \\(T'\\) g\u1ecdi l\u00e0 c\u00e2y tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y \\(T\\) ban \u0111\u1ea7u.</p> <p> </p> <p>C\u00e2y tr\u1ecdng t\u00e2m c\u00f3 m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t nh\u01b0: * C\u00e2y c\u00f3 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh b\u1eb1ng v\u1edbi c\u00e2y ban \u0111\u1ea7u. * \u0110\u1ed9 cao c\u1ee7a c\u00e2y kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(\\log(n)\\). * \\(LCA(u, v)\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m c\u0169ng thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean c\u00e2y ban \u0111\u1ea7u.</p> <p>T\u1eeb c\u00e1c t\u00ednh ch\u1ea5t \u0111\u00f3, ta c\u00f3 m\u1ed9t \u1ee9ng d\u1ee5ng v\u00f4 c\u00f9ng quan tr\u1ecdng c\u1ee7a c\u00e2y tr\u1ecdng t\u00e2m n\u00f3i ri\u00eang hay thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m n\u00f3i chung. \u1ee8ng d\u1ee5ng nh\u01b0 sau:</p> <p>Gi\u1ea3 s\u1eed c\u1ea7n t\u00ednh h\u00e0m \\(f(u, v)\\) r\u1ea5t nhi\u1ec1u l\u1ea7n, v\u1edbi \\(f(u, v)\\) l\u00e0 m\u1ed9t h\u00e0m li\u00ean quan \u0111\u1ebfn \u0111\u01b0\u1eddng \u0111i \\(u, v\\), ngh\u0129a l\u00e0 ta c\u00f3 th\u1ec3 t\u00ednh \\(f(u, v)\\) t\u1eeb \\(f(u, k)\\) v\u00e0 \\(f(k, v)\\) v\u1edbi \\(k\\) l\u00e0 m\u1ed9t \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i \\(u, v\\). Khi \u0111\u00f3 ta c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb \\(f(u, p)\\) v\u1edbi \\(p\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m. Theo t\u00ednh ch\u1ea5t th\u1ee9 \\(2\\) th\u00ec ch\u1ec9 c\u00f3 \\(n\\log(n)\\) c\u1eb7p \\((u, p)\\), c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng thu\u1eadt ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m \u0111\u1ec3 t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb \\(f(u, p)\\) \u0111\u00f3. V\u1eady v\u1edbi hai \u0111\u1ec9nh \\(u, v\\) b\u1ea5t k\u00ec, ta c\u00f3 th\u1ec3 t\u00ednh \\(f(u, v)\\) t\u1eeb \\(f(u, LCA_{ct}(u, v))\\) v\u00e0 \\(f(v, LCA_{ct})\\), trong \u0111\u00f3 \\(LCA_{ct}\\) l\u00e0 t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m.</p> <p>N\u00f3i \u0111\u01a1n gi\u1ea3n, v\u00ec \u0111\u1ed9 cao c\u1ee7a c\u00e2y tr\u1ecdng t\u00e2m ch\u1ec9 l\u00e0 \\(\\log(n)\\), v\u1eady ch\u1ec9 c\u00f3 t\u1ea5t c\u1ea3 \\(n\\log(n)\\) \u0111\u01b0\u1eddng \u0111i th\u1eb3ng (\u0111\u01b0\u1eddng \u0111i t\u1eeb m\u1ed9t \u0111\u1ec9nh \u0111\u1ebfn m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \u0111\u00f3). Do \u0111\u00f3, ta c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c \u0111\u01b0\u1eddng \u0111i c\u00f3 \\(2\\) \u0111\u1ea7u m\u00fat l\u00e0 \\(2\\) \u0111\u1ea7u c\u1ee7a \u0111\u01b0\u1eddng \u0111i th\u1eb3ng, t\u1eeb \u0111\u00f3 t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a m\u1ecdi \u0111\u01b0\u1eddng \u0111i tr\u00ean c\u00e2y b\u1eb1ng c\u00e1ch chia \u0111\u01b0\u1eddng \u0111i \u0111\u00f3 th\u00e0nh \\(2\\) \u0111\u01b0\u1eddng \u0111i m\u00e0 m\u1ed7i \u0111\u01b0\u1eddng \u0111i c\u00f3 \\(2\\) \u0111\u1ea7u m\u00fat l\u00e0 \\(2\\) \u0111\u1ea7u c\u1ee7a m\u1ed9t \u0111\u01b0\u1eddng \u0111i th\u1eb3ng tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m.</p> <p>\u0110\u1ed3ng th\u1eddi, vi\u1ec7c t\u00ecm t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u00f4 c\u00f9ng nh\u1ecf. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt t\u00ecm \\(LCA\\) l\u00e0 \\(\\log(H)\\) v\u1edbi \\(H\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a c\u00e2y. V\u1edbi c\u00e2y tr\u1ecdng t\u00e2m, \\(H = \\log(n)\\), v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i l\u1ea7n t\u00ecm \\(LCA\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m ch\u1ec9 l\u00e0 \\(O(\\log(\\log(n)))\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#ap-dung","title":"\u00c1p d\u1ee5ng","text":""},{"location":"algo/graph-theory/centroid-decomposition/#lampice-coci-20192020","title":"Lampice - COCI 2019/2020","text":""},{"location":"algo/graph-theory/centroid-decomposition/#tom-tat-e-bai","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t c\u00e2y c\u00f3 \\(n\\) \u0111\u1ec9nh, m\u1ed7i \u0111\u1ec9nh tr\u00ean c\u00e2y mang m\u1ed9t k\u00ed t\u1ef1. T\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111\u01b0\u1eddng \u0111i d\u00e0i nh\u1ea5t tr\u00ean c\u00e2y m\u00e0 c\u00e1c k\u00ed t\u1ef1 tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u00f3 t\u1ea1o th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng (g\u1ecdi t\u1eaft l\u00e0 \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>Tho\u1ea1t nh\u00ecn b\u00e0i to\u00e1n gi\u1ed1ng v\u1edbi c\u00e1c d\u1ea1ng b\u00e0i d\u00f9ng thu\u1eadt ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m (t\u00ecm \u0111\u01b0\u1eddng \u0111i th\u1ecfa \u0111i\u1ec1u ki\u1ec7n...), tuy nhi\u00ean b\u00e0i to\u00e1n \u1edf b\u01b0\u1edbc \\(2\\) l\u00e0 \"t\u00ecm \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t ch\u1ee9a \u0111\u1ec9nh g\u1ed1c\" v\u1eabn qu\u00e1 kh\u00f3 \u0111\u1ec3 gi\u1ea3i quy\u1ebft.</p> <p>V\u00ec v\u1eady c\u1ea7n \u00e1p d\u1ee5ng th\u00eam thu\u1eadt to\u00e1n ch\u1eb7t nh\u1ecb ph\u00e2n \u0111\u1ec3 l\u00e0m b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n h\u01a1n n\u1eefa.</p> <p>Thu\u1eadt to\u00e1n ch\u1eb7t nh\u1ecb ph\u00e2n \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c nh\u1edd t\u00ednh ch\u1ea5t: n\u1ebfu t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(k\\), th\u00ec c\u0169ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng v\u1edbi b\u1ea5t k\u00ec \u0111\u1ed9 d\u00e0i n\u00e0o nh\u1ecf h\u01a1n \\(k\\) v\u00e0 c\u00f9ng t\u00ednh ch\u1eb5n l\u1ebb v\u1edbi \\(k\\) (v\u00e0 v\u00ec v\u1eady m\u00e0 ta c\u1ea7n ch\u1eb7t nh\u1ecb ph\u00e2n hai l\u1ea7n, m\u1ed9t \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng ch\u1eb5n d\u00e0i nh\u1ea5t v\u00e0 m\u1ed9t \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng l\u1ebb d\u00e0i nh\u1ea5t). </p> <p>Gi\u1ea3i th\u00edch \u0111\u01a1n gi\u1ea3n, n\u1ebfu t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(k\\), ta c\u00f3 th\u1ec3 b\u1ecf \u0111i hai \u0111\u1ea7u m\u00fat c\u1ee7a \u0111\u01b0\u1eddng \u0111i \u0111\u1ec3 c\u00f2n l\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(k - 2\\), v\u00e0 v\u1eabn \u0111\u1ed1i x\u1ee9ng.</p> <p>Khi \u0111\u00e3 \u00e1p d\u1ee5ng ch\u1eb7t nh\u1ecb ph\u00e2n, b\u00e0i to\u00e1n c\u00f2n l\u1ea1i \"li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(k\\) hay kh\u00f4ng?\"</p> <p>B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u1eb1ng thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m.</p> <p>Ta c\u1ea7n gi\u1ea3i quy\u1ebft c\u00e2u h\u1ecfi: \"c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(k\\) v\u00e0 ch\u1ee9a \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y hay kh\u00f4ng?\".</p> <p>C\u00e2u h\u1ecfi c\u00f3 ph\u1ea7n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1ea5n \u0111\u1ec1 c\u1ea7n gi\u1ea3i quy\u1ebft \u1edf b\u00e0i t\u1eadp tr\u01b0\u1edbc, tuy nhi\u00ean c\u00f3 th\u00eam \u0111i\u1ec1u ki\u1ec7n \"\u0111\u1ed1i x\u1ee9ng\".</p> <p>G\u1ecdi \\(s(u, v)\\) l\u00e0 x\u00e2u t\u1ea1o b\u1edfi \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\).</p> <p>\u00dd t\u01b0\u1edfng nh\u01b0 sau, v\u1edbi \\(2\\) \u0111\u1ec9nh \\(u, v\\) m\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) c\u00f3 ch\u1ee9a \u0111\u1ec9nh g\u1ed1c v\u00e0 c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 \\(k\\), \u0111\u1ec3 ki\u1ec3m tra x\u00e2u \u0111\u1ed1i x\u1ee9ng, ta ki\u1ec3m tra \\(s(u, v)\\) c\u00f3 b\u1eb1ng \\(s(v, u)\\) hay kh\u00f4ng, hay ki\u1ec3m tra \\(s(u, root_u) + s(root, v) = s(v, root_v) + s(root, u)\\) hay kh\u00f4ng? (g\u1ecdi \\(root_u\\) l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a \\(root\\) m\u00e0 l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\)).</p> <p>\u00c1p d\u1ee5ng thu\u1eadt to\u00e1n \\(hash\\) \u0111\u1ec3 ki\u1ec3m tra, ta c\u1ea7n t\u00ecm tr\u01b0\u1edbc c\u00e1c gi\u00e1 tr\u1ecb \\(hshdown[u]\\), \\(hshup[u]\\) v\u1edbi \u00fd ngh\u0129a l\u1ea7n l\u01b0\u1ee3t l\u00e0 hash c\u1ee7a \\(s(root, u)\\) v\u00e0 hash c\u1ee7a \\(s(u, root_u)\\). T\u1eeb c\u00e1c gi\u00e1 tr\u1ecb \\(hshdown, hshup\\) c\u1ee7a \\(u, v\\) v\u00e0 c\u00e1c gi\u00e1 tr\u1ecb \\(k, h\\), ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng v\u00e0 bi\u1ebfn \u0111\u1ed5i ph\u01b0\u01a1ng tr\u00ecnh \\(s(u, root_u) + s(root, v) = s(v, root_v) + s(root, u)\\) sao cho m\u1ed7i v\u1ebf \u0111\u1ed9c l\u1eadp v\u1ec1 \\(u\\) ho\u1eb7c \\(v\\), t\u1eeb \u0111\u00f3 gi\u1ea3i quy\u1ebft t\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i t\u1eadp tr\u01b0\u1edbc.</p>"},{"location":"algo/graph-theory/centroid-decomposition/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t code \u0111\u00e3 ac b\u00e0i Lampice, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\n## define For(i, a, b) for (int i=a;i&lt;=b;++i)\n\nusing namespace std;\n\nconst int N = 200005;\nconst long long base = 35711;\nconst long long mod  = 1e9 + 7;\n\nint n, Len, maxDep, child[N], valid[N];\nchar a[N];\n\nvector&lt;pair&lt;int, long long&gt;&gt; b;\nlong long pw[N];\nvector&lt;int&gt; adj[N];\nunordered_map&lt;long long, bool&gt; f[N];\n\nvoid countChild(int u, int p)\n{\n    child[u] = 1;\n    for (int v : adj[u]) if (v != p &amp;&amp; valid[v])\n    {\n        countChild(v, u);\n        child[u] += child[v];\n    }\n}\n\nbool dfs(int u, int p, int h, long long hshdown, long long hshup)\n{\n    if (h &gt; Len) return false;\n\n    if (p)\n        hshdown = (hshdown * base + a[u]) % mod;    \n    hshup = (hshup + 1LL * a[u] * pw[h - 1]) % mod;\n\n    long long x =  (hshup * pw[Len - h] - hshdown + mod) % mod;\n    if (!p) f[h][x] = true;\n\n    if (f[Len - h + 1].find(x) != f[Len - h + 1].end() ) \n        return true;\n\n    for (int v : adj[u]) if (v != p &amp;&amp; valid[v])\n    {\n        if (!p) b.clear();\n\n        if (dfs(v, u, h + 1, hshdown, hshup)) \n            return true;\n\n        if (!p)\n            for (pair&lt;int, long long&gt; x : b) f[x.first][x.second] = true;\n    }\n\n    maxDep = max(maxDep, h);\n    b.push_back({h, x});\n\n    return false;\n}\n\nbool CD(int u, int n)\n{\n    countChild(u, 0);\n\n    int flag = 1, half = n / 2;\n    while (flag)\n    {\n        flag = 0;\n        for (int v : adj[u])\n            if (valid[v] &amp;&amp; child[v] &lt; child[u] &amp;&amp; child[v] &gt; half)\n            {\n                u = v;\n                flag = 1;\n                break;\n            }\n    }\n\n    childCounting(u, 0);\n\n    if (dfs(u, 0, 1, 0, 0)) return true;\n\n    For(i, 1, maxDep) f[i].clear();\n    maxDep = 0;\n\n    valid[u] = false;\n    for (int v : adj[u]) if (valid[v])\n        if (CD(v, child[v])) return true;\n    return false;\n}\n\nbool check(int len)\n{\n    Len = len;\n    For(i, 1, n) valid[i] = 1, f[i].clear();\n    return CD(1, n);\n}\n\nvoid solve()\n{\n    cin &gt;&gt; n;\n    For(i, 1, n) cin &gt;&gt; a[i];\n    For(i, 1, n - 1)\n    {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n\n    pw[0] = 1;\n    For(i, 1, n) pw[i] = pw[i - 1] * base % mod;\n\n    int l = 0, r = (n - 1) / 2;\n    while (l &lt; r)\n    {\n        int g = (l + r + 1) / 2;\n        if (check(g * 2 + 1)) l = g; else r = g - 1;\n    }\n\n    int ans = r * 2 + 1;\n\n    l = 0, r = n / 2;\n    while (l &lt; r)\n    {\n        int g = (l + r + 1) / 2;\n        if (check(g * 2)) l = g; else r = g - 1;\n    }\n\n    cout &lt;&lt; max(ans, r * 2);\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);cout.tie(NULL);\n\n    solve();\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/centroid-decomposition/#qtree5","title":"QTREE5","text":""},{"location":"algo/graph-theory/centroid-decomposition/#tom-tat-e-bai_1","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>Cho m\u1ed9t c\u00e2y c\u00f3 \\(n\\) \u0111\u1ec9nh, ban \u0111\u1ea7u m\u1ed7i \u0111\u1ec9nh \u0111\u1ec1u c\u00f3 m\u00e0u \u0111en. Th\u1ef1c hi\u1ec7n \\(q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n thu\u1ed9c m\u1ed9t trong hai lo\u1ea1i sau \u0111\u00e2y: * \\(0\\) \\(u\\): \u0111\u1ed5i m\u00e0u \u0111\u1ec9nh \\(u\\) (n\u1ebfu \\(u\\) \u0111ang c\u00f3 m\u00e0u \u0111en th\u00ec \u0111\u1ed5i th\u00e0nh tr\u1eafng, n\u1ebfu \\(u\\) c\u00f3 m\u00e0u tr\u1eafng th\u00ec \u0111\u1ed5i th\u00e0nh \u0111en). * \\(1\\) \\(u\\): t\u00ecm kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh m\u00e0u tr\u1eafng g\u1ea7n nh\u1ea5t. N\u1ebfu kh\u00f4ng c\u00f3 \u0111\u1ec9nh n\u00e0o m\u00e0u tr\u1eafng, in \\(-1\\).</p>"},{"location":"algo/graph-theory/centroid-decomposition/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>X\u00e2y d\u1ef1ng c\u00e2y tr\u1ecdng t\u00e2m c\u1ee7a c\u00e2y \u0111\u01b0\u1ee3c cho, g\u1ecdi \\(LCA_{ct}(u, v)\\) l\u00e0 t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m. G\u1ecdi \\(dist(u, v)\\) l\u00e0 kho\u1ea3ng c\u00e1ch gi\u1eefa \u0111\u1ec9nh \\(u\\) v\u00e0 \u0111\u1ec9nh \\(v\\) tr\u00ean c\u00e2y ban \u0111\u1ea7u.</p> <p>Kho\u1ea3ng c\u00e1ch gi\u1eefa \\(2\\) \u0111i\u1ec3m \\(u\\), \\(v\\) b\u1ea5t k\u00ec c\u00f3 th\u1ec3 ph\u00e2n t\u00edch nh\u01b0 sau: \\(dist(u, v) = dist(u, LCA_{ct}(u, v)) + dist(LCA_{ct}(u, v), v).\\) B\u1eb1ng thu\u1eadt to\u00e1n ph\u00e2n t\u00e1ch tr\u1ecdng t\u00e2m, ta c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc m\u1ecdi gi\u00e1 tr\u1ecb \\(dist(u, p)\\) m\u00e0 \\(p\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m.</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n, \u0111\u1ec9nh \\(u\\) l\u00e0 c\u1ed1 \u0111\u1ecbnh, ta c\u1ea7n x\u00e9t qua c\u00e1c \u0111\u1ec9nh \\(v\\) m\u00e0u tr\u1eafng \u0111\u1ec3 t\u00ecm \\(dist(u, v)\\) nh\u1ecf nh\u1ea5t. Th\u1ea5y r\u1eb1ng, c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u nh\u1ea5t \u0111\u1ebfn \\(n\\) \u0111\u1ec9nh \\(v\\) m\u00e0u tr\u1eafng, tuy nhi\u00ean ch\u1ec9 c\u00f3 nhi\u1ec1u nh\u1ea5t \\(log(n)\\) gi\u00e1 tr\u1ecb \\(LCA_{ct}(u, v)\\) kh\u00e1c nhau (t\u00ednh ch\u1ea5t v\u1ec1 chi\u1ec1u cao c\u1ee7a c\u00e2y tr\u1ecdng t\u00e2m), v\u00ec v\u1eady c\u00f3 th\u1ec3 xem x\u00e9t vi\u1ec7c \"x\u1eed l\u00fd chung\" cho c\u00e1c \u0111\u1ec9nh \\(v\\) m\u00e0 \\(LCA_{ct}(u, v)\\) c\u1ed1 \u0111\u1ecbnh.</p> <p>V\u1edbi m\u1ed7i \u0111\u1ec9nh, ta c\u1ea7n \\(1\\) multiset \u0111\u1ec3 l\u01b0u t\u1ea5t c\u1ea3 c\u00e1c kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh \u0111\u00f3 \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh con m\u00e0u tr\u1eafng c\u1ee7a n\u00f3 tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m, t\u1ed5ng k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e1c multiset kh\u00f4ng qu\u00e1 \\(nlog(n)\\). V\u1edbi m\u1ed7i truy v\u1ea5n \u0111\u1ed5i m\u00e0u \u0111\u1ec9nh \\(u\\), ta c\u00f3 th\u1ec3 duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m \u0111\u1ec3 c\u1eadp nh\u1eadt c\u00e1c multiset c\u1ea7n thi\u1ebft.</p> <p>V\u1ec1 truy v\u1ea5n t\u00ecm kho\u1ea3ng c\u00e1ch, ta c\u0169ng l\u1ea1i duy\u1ec7t qua c\u00e1c \u0111\u1ec9nh t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m. T\u1ea1i \u0111\u1ec9nh \\(p\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\), g\u1ecdi \\(s_p\\) l\u00e0 kho\u1ea3ng c\u00e1ch nh\u1ecf nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(p\\) \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh m\u00e0u tr\u1eafng, ta c\u00f3 \\(dist(u, p) + s_p\\) l\u00e0 \u0111\u1ed9 d\u00e0i nh\u1ecf nh\u1ea5t c\u1ee7a m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh m\u00e0u tr\u1eafng v\u00e0 c\u00f3 \u0111i qua \\(p\\), \u0111\u00e1p \u00e1n cho truy v\u1ea5n l\u00e0 gi\u00e1 tr\u1ecb \\(dist(u, p) + s_p\\) nh\u1ecf nh\u1ea5t khi x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(p\\). Nh\u01b0 v\u1eady, b\u1eb1ng c\u00e1ch x\u00e9t qua h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(p\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) tr\u00ean c\u00e2y tr\u1ecdng t\u00e2m, ta \u0111\u00e3 bao qu\u00e1t t\u1ea5t c\u1ea3 c\u00e1c \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh tr\u1eafng n\u00e0o \u0111\u00f3.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(nlog^2(n)\\)</p> <p>L\u01b0u \u00fd, gi\u00e1 tr\u1ecb \\(dist(u, p) + s_p\\) \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean c\u00f3 th\u1ec3 l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t \u0111\u01b0\u1eddng \u0111i \"kh\u00f4ng chu\u1ea9n\" - \u0111\u01b0\u1eddng \u0111i \u0111i qua m\u1ed9t c\u1ea1nh nhi\u1ec1u l\u1ea7n. Tuy nhi\u00ean \u0111\u01b0\u1eddng \u0111i n\u00e0y ch\u1eafc ch\u1eafn c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn h\u01a1n \u0111\u01b0\u1eddng \u0111i t\u1ed1i \u01b0u, v\u00ec v\u1eady ta ch\u1ec9 c\u1ea7n quan t\u00e2m r\u1eb1ng \u0111\u01b0\u1eddng \u0111i t\u1ed1i \u01b0u c\u00f3 \u0111\u01b0\u1ee3c x\u00e9t qua hay kh\u00f4ng, n\u1ebfu c\u00f3, k\u1ebft qu\u1ea3 t\u00ecm \u0111\u01b0\u1ee3c l\u00e0 ch\u00ednh x\u00e1c.</p>"},{"location":"algo/graph-theory/centroid-decomposition/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 2 * 1e5 + 5;\nconst int oo = 1e9 + 7;\n\nint n, del[N], par[N], child[N];\nvector&lt;int&gt; adj[N];\nmultiset&lt;int&gt; s[N];\nmap&lt;int, int&gt; d[N];\n\nint countChild(int u, int p) {\n    child[u] = 1;\n    for (int v : adj[u]) {\n        if (v == p || del[v]) continue;\n        child[u] += countChild(v, u);\n    }\n    return child[u];\n}\n\nint centroid(int u, int p, int m) {\n    for (int v : adj[u]) {\n        if (v == p || del[v]) continue;\n        if (child[v] &gt; m / 2) \n            return centroid(v, u, m);\n    }\n    return u;\n}\n\nvoid calcDist(int u, int p, int root) {\n    for (int v : adj[u]) {\n        if (v == p || del[v]) continue;\n        d[v][root] = d[u][root] + 1;\n        calcDist(v, u, root);\n    }\n}\n\nint cd(int u = 1) {\n    int m = countChild(u, 0);\n    u = centroid(u, 0, m);\n    calcDist(u, 0, u);\n    del[u] = 1;\n    for (int v : adj[u]) {\n        if (del[v]) continue;\n        int x = cd(v);\n        par[x] = u;\n    }\n    return u;\n}\n\nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    for (int i = 1; i &lt; n; ++i) {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    int root = cd();\n\n    int q; cin &gt;&gt; q;\n    vector&lt;int&gt; col(n + 5, 1);\n    while (q--) {\n        int t, u; cin &gt;&gt; t &gt;&gt; u;\n        if (t == 0) {\n            int p = u;\n            col[u] ^= 1;\n            if (col[u]) {\n                while (p) {\n                    s[p].erase(s[p].lower_bound(d[u][p]));\n                    p = par[p];\n                }\n            }\n            else {\n                while (p) {\n                    s[p].insert(d[u][p]);\n                    p = par[p];\n                }\n            }\n        }\n        else {\n            int ans = oo, p = u;\n            while (p) {\n                if (s[p].size()) {\n                    ans = min(ans, d[u][p] + *s[p].begin());\n                }\n                p = par[p];\n            }\n            if (ans &gt;= oo) cout &lt;&lt; \"-1\\n\";\n            else cout &lt;&lt; ans &lt;&lt; \"\\n\";\n        }\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);cout.tie(NULL);\n\n    solve();\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/centroid-decomposition/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>Fixed-Length Paths II - CSES</p> <p>Digit Tree - Codeforces</p> <p>Race - IOI2011</p> <p>B\u1ea1n \u0111\u1ecdc c\u0169ng c\u00f3 th\u1ec3 t\u00ecm th\u00eam b\u00e0i t\u1eadp v\u1ec1 Centroid t\u1ea1i m\u1ee5c tag tr\u00ean trang oj.vnoi.info/.</p>"},{"location":"algo/graph-theory/euler-cycle/","title":"\u0110\u01b0\u1eddng \u0111i - Chu tr\u00ecnh Euler","text":"<p>Ngu\u1ed3n: Eulerian path - Wikipedia v\u00e0 m\u1ed9t s\u1ed1 ngu\u1ed3n kh\u00e1c</p> <p>Bi\u00ean so\u1ea1n: - B\u00f9i Nguy\u1ec5n Ng\u1ecdc Th\u1eafng - Carnegie Mellon University in Qatar</p> <p>Reviewer:  - Tr\u1ea7n Quang L\u1ed9c - ITMO University - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - VNUHCM-University of Science - Nguy\u1ec5n Nh\u1eadt Minh Kh\u00f4i - VNUHCM-University of Science - Nguy\u1ec5n Ch\u00e2u Khanh - VNU University of Engineering and Technology (VNU-UET) - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM-University of Science</p> <p>Chu\u1ea9n b\u1ecb b\u00e0i t\u1eadp v\u00e0 b\u1ed9 test - Nguy\u1ec5n Ho\u00e0ng V\u0169 - THPT chuy\u00ean Phan B\u1ed9i Ch\u00e2u - Ngh\u1ec7 An</p> <p>B\u00e0i vi\u1ebft s\u1ebd gi\u1edbi thi\u1ec7u cho \u0111\u1ed9c gi\u1ea3 v\u1ec1 \u0111\u01b0\u1eddng \u0111i v\u00e0 chu tr\u00ecnh Euler, m\u1ed9t kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n c\u00f3 \u1ee9ng d\u1ee5ng r\u1ed9ng r\u00e3i trong l\u00fd thuy\u1ebft \u0111\u1ed3 th\u1ecb v\u00e0 l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. Ph\u1ea1m vi b\u00e0i vi\u1ebft bao g\u1ed3m c\u00e1c \u0111\u1ecbnh l\u00fd li\u00ean quan \u0111\u1ebfn s\u1ef1 t\u1ed3n t\u1ea1i c\u1ee7a \u0111\u01b0\u1eddng \u0111i v\u00e0 chu tr\u00ecnh Euler trong \u0111\u1ed3 th\u1ecb v\u00e0 ch\u1ee9ng minh, thu\u1eadt to\u00e1n t\u00ecm chu tr\u00ecnh Euler v\u00e0 \u1ee9ng d\u1ee5ng trong m\u1ed9t s\u1ed1 b\u00e0i t\u1eadp.</p> <p>Kh\u00e1i ni\u1ec7m v\u1ec1 \u0111\u01b0\u1eddng \u0111i v\u00e0 chu tr\u00ecnh Euler l\u1ea7n \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp b\u1edfi Leonhard Euler n\u0103m 1736 khi nghi\u00ean c\u1ee9u b\u00e0i to\u00e1n b\u1ea3y c\u00e2y c\u1ea7u \u1edf Konigsberg.</p> <p>Th\u00e0nh ph\u1ed1 Konigsberg thu\u1ed9c Ph\u1ed5 (nay l\u00e0 Kaliningrad thu\u1ed9c Nga), \u0111\u01b0\u1ee3c chia l\u00e0m 4 v\u00f9ng b\u1eb1ng c\u00e1c nh\u00e1nh s\u00f4ng Pregel. C\u00e1c v\u00f9ng n\u00e0y g\u1ed3m 2 v\u00f9ng b\u00ean b\u1edd s\u00f4ng (B, C), \u0111\u1ea3o Kneiphof (A) v\u00e0 m\u1ed9t mi\u1ec1n n\u1eb1m gi\u1eefa hai nh\u00e1nh s\u00f4ng Pregel (D). V\u00e0o th\u1ebf k\u1ef7 XVIII, ng\u01b0\u1eddi ta \u0111\u00e3 x\u00e2y 7 chi\u1ebfc c\u1ea7u n\u1ed1i nh\u1eefng v\u00f9ng n\u00e0y v\u1edbi nhau. Ng\u01b0\u1eddi d\u00e2n \u1edf \u0111\u00e2y t\u1ef1 h\u1ecfi: Li\u1ec7u c\u00f3 c\u00e1ch n\u00e0o xu\u1ea5t ph\u00e1t t\u1ea1i m\u1ed9t \u0111\u1ecba \u0111i\u1ec3m trong th\u00e0nh ph\u1ed1, \u0111i qua 7 chi\u1ebfc c\u1ea7u, m\u1ed7i chi\u1ebfc \u0111\u00fang 1 l\u1ea7n r\u1ed3i quay tr\u1edf v\u1ec1 n\u01a1i xu\u1ea5t ph\u00e1t kh\u00f4ng?</p> Minh ho\u1ea1 7 c\u00e2y c\u1ea7u \u1edf Konigsberg - Ngu\u1ed3n: Wikipedia <p>M\u1ed9t c\u00e1ch t\u1ed5ng qu\u00e1t h\u01a1n:</p> <p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb v\u1edbi t\u1eadp c\u00e1c \u0111\u1ec9nh v\u00e0 c\u1ea1nh. Li\u1ec7u c\u00f3 th\u1ec3 ch\u1ec9 ra m\u1ed9t \u0111\u01b0\u1eddng \u0111i hay chu tr\u00ecnh \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh m\u1ed7i c\u1ea1nh \u0111\u00fang m\u1ed9t l\u1ea7n?</p>"},{"location":"algo/graph-theory/euler-cycle/#ki-hieu","title":"K\u00ed hi\u1ec7u","text":"<p>Nh\u1eefng k\u00ed hi\u1ec7u sau s\u1ebd \u0111\u01b0\u1ee3c d\u00f9ng xuy\u00ean su\u1ed1t b\u00e0i vi\u1ebft:</p> <ul> <li>V\u1edbi \u0111\u1ec9nh \\(u\\) thu\u1ed9c m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng th\u00ec \\(deg(u)\\) l\u00e0 b\u1eadc c\u1ee7a \\(u\\).</li> <li>V\u1edbi \u0111\u1ec9nh \\(u\\) thu\u1ed9c m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng th\u00ec \\(deg^+(u)\\) l\u00e0 b\u00e1n b\u1eadc ra c\u1ee7a \\(u\\) v\u00e0 \\(deg^-(u)\\) l\u00e0 b\u00e1n b\u1eadc v\u00e0o c\u1ee7a \\(u\\).</li> </ul>"},{"location":"algo/graph-theory/euler-cycle/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>\u0110\u01b0\u1eddng \u0111i Euler (Eulerian path/trail) tr\u00ean m\u1ed9t \u0111\u1ed3 th\u1ecb (b\u1ea5t k\u1ec3 l\u00e0 v\u00f4 h\u01b0\u1edbng hay c\u00f3 h\u01b0\u1edbng, \u0111\u01a1n hay \u0111a \u0111\u1ed3 th\u1ecb) l\u00e0 \u0111\u01b0\u1eddng \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh, m\u1ed7i c\u1ea1nh \u0111\u00fang m\u1ed9t l\u1ea7n.</li> <li>Chu tr\u00ecnh Euler (Eulerian cycle/circuit/tour) tr\u00ean m\u1ed9t \u0111\u1ed3 th\u1ecb l\u00e0 \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb \u0111\u00f3 tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n \u0111\u01b0\u1eddng \u0111i b\u1eaft \u0111\u1ea7u v\u00e0 k\u1ebft th\u00fac t\u1ea1i c\u00f9ng m\u1ed9t \u0111\u1ec9nh. Hi\u1ec3n nhi\u00ean r\u1eb1ng chu tr\u00ecnh Euler c\u0169ng l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i Euler.</li> <li>\u0110\u1ed3 th\u1ecb c\u00f3 chu tr\u00ecnh Euler g\u1ecdi l\u00e0 \u0111\u1ed3 th\u1ecb Euler (Eulerian graph). \u0110\u1ed3 th\u1ecb ch\u1ec9 c\u00f3 \u0111\u01b0\u1eddng \u0111i nh\u01b0ng kh\u00f4ng c\u00f3 chu tr\u00ecnh Euler \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ed3 th\u1ecb n\u1eeda Euler (semi-Eulerian graph).</li> </ul>"},{"location":"algo/graph-theory/euler-cycle/#chu-trinh-euler-tren-o-thi-co-huong","title":"Chu tr\u00ecnh Euler tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng","text":""},{"location":"algo/graph-theory/euler-cycle/#inh-ly-1","title":"\u0110\u1ecbnh l\u00fd 1","text":"<p>M\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 \u0111\u1ed3 th\u1ecb Euler n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu: - V\u1edbi m\u1ecdi \u0111\u1ec9nh \\(u\\) thu\u1ed9c \u0111\u1ed3 th\u1ecb, \\(deg^+(u) = deg^-(u)\\) - T\u1ea5t c\u1ea3 \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng</p>"},{"location":"algo/graph-theory/euler-cycle/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>\u0110\u1ed3 th\u1ecb 1 (h\u00ecnh d\u01b0\u1edbi) l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb Euler.</p> <p>Ta th\u1ea5y r\u1eb1ng m\u1ecdi \u0111\u1ec9nh \\(u\\) thu\u1ed9c \u0111\u1ed3 th\u1ecb \u0111\u1ec1u c\u00f3 b\u00e1n b\u1eadc ra b\u1eb1ng b\u00e1n b\u1eadc v\u00e0o: \\(deg^+(1) = 1 = deg^-(1)\\), \\(deg^+(5) = 2 = deg^-(5)\\).</p> <p>\u0110\u1ed3ng th\u1eddi, c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n 0 l\u00e0 \\(1\\), \\(2\\), \\(3\\), \\(4\\) v\u00e0 \\(5\\) \u0111\u1ec1u n\u1eb1m c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</p> <p>Do \u0111\u00f3 ta k\u1ebft lu\u1eadn \u0111\u1ed3 th\u1ecb 1 l\u00e0 \u0111\u1ed3 th\u1ecb Euler. Th\u1eadt v\u1eady, \\(2 \\to 1 \\to 5 \\to 3 \\to 4 \\to 5 \\to 2\\) l\u00e0 m\u1ed9t chu tr\u00ecnh Euler tr\u00ean \u0111\u1ed3 th\u1ecb.</p> \u0110\u1ed3 th\u1ecb 1 <p>\u0110\u1ed3 th\u1ecb 2 d\u01b0\u1edbi c\u00f3 nh\u1eefng \u0111\u1ec9nh m\u00e0 b\u00e1n b\u1eadc v\u00e0o kh\u00e1c b\u00e1n b\u1eadc ra. Ch\u1eb3ng h\u1ea1n, \u0111\u1ec9nh \\(1\\) c\u00f3 \\(1\\) c\u1ea1nh v\u00e0o v\u00e0 \\(3\\) c\u1ea1nh ra, t\u1ee9c \\(deg^+(1) = 1 \\ne 3 = deg^-(1)\\). Do \u0111\u00f3 ta k\u1ebft lu\u1eadn \u0111\u1ed3 th\u1ecb 2 kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ed3 th\u1ecb Euler.</p> \u0110\u1ed3 th\u1ecb 2"},{"location":"algo/graph-theory/euler-cycle/#chung-minh","title":"Ch\u1ee9ng minh","text":""},{"location":"algo/graph-theory/euler-cycle/#chieu-thuan","title":"Chi\u1ec1u thu\u1eadn","text":"<p>Gi\u1ea3 s\u1eed \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler.</p> <ul> <li>V\u00ec chu tr\u00ecnh Euler \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh n\u00ean c\u0169ng \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\). V\u00ec th\u1ebf t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</li> <li>D\u1ec5 th\u1ea5y trong chu tr\u00ecnh s\u1ed1 l\u1ea7n ta \u0111i v\u00e0o m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec b\u1eb1ng \u0111\u00fang s\u1ed1 l\u1ea7n ta \u0111i ra kh\u1ecfi \u0111\u1ec9nh \u0111\u00f3 n\u00ean v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\), \\(deg^+(u) = deg^-(u)\\).</li> </ul>"},{"location":"algo/graph-theory/euler-cycle/#chieu-ao","title":"Chi\u1ec1u \u0111\u1ea3o","text":"<p>Ta s\u1ebd s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p quy n\u1ea1p \u0111\u1ec3 ch\u1ee9ng minh.</p> <p>V\u00ec c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc b\u1eb1ng \\(0\\) kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn vi\u1ec7c t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler n\u00ean ta ch\u1ec9 x\u00e9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u1ec9nh c\u00f3 b\u1eadc l\u00e0 \\(0\\).</p> <p>N\u1ebfu \u0111\u1ed3 th\u1ecb c\u00f3 nhi\u1ec1u h\u01a1n m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng th\u00ec hi\u1ec3n nhi\u00ean \u0111\u1ed3 th\u1ecb kh\u00f4ng t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler.</p> <p>X\u00e9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(G\\) ch\u1ec9 c\u00f3 m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\).</p> <p>Ta c\u1ea7n ch\u1ee9ng minh n\u1ebfu v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u \\in G\\), \\(deg^+(u) = deg^-(u)\\) th\u00ec \\(G\\) t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler.</p> <p>D\u1ec5 th\u1ea5y n\u1ebfu \\(G\\) ch\u1ec9 c\u00f3 \\(1\\) \u0111\u1ec9nh th\u00ec \u0111\u1ecbnh l\u00fd \u0111\u00fang.</p> <p>Gi\u1ea3 s\u1eed \u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh \u0111\u00fang v\u1edbi m\u1ecdi \u0111\u1ed3 th\u1ecb con \\(G' \\subset G\\) tho\u1ea3 \u0111i\u1ec1u ki\u1ec7n. T\u1ee9c l\u00e0 ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh Euler \\(C'\\) tr\u00ean m\u1ecdi \\(G' \\subset G\\) sao cho v\u1edbi m\u1ecdi \\(v \\in G'\\), \\(deg^-(v) = deg^+(v)\\).</p> <p>Ta ch\u1ecdn m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec \\(u \\in G\\). \u00c1p d\u1ee5ng b\u1ed5 \u0111\u1ec1 1, gi\u1ea3 s\u1eed ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh \\(C\\) ch\u1ee9a \\(u\\). Xo\u00e1 t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh tr\u00ean \\(G\\) thu\u1ed9c \\(C\\).</p> <p>N\u1ebfu sau khi xo\u00e1 \\(G\\) kh\u00f4ng c\u00f2n c\u1ea1nh th\u00ec \\(C\\) l\u00e0 m\u1ed9t chu tr\u00ecnh Euler.</p> <p>Ng\u01b0\u1ee3c l\u1ea1i, ta thu \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng \\(G_1, G_2, \\cdots, G_k\\). Do khi ta \u0111i theo chu tr\u00ecnh \\(C\\), m\u1ed7i khi ta \u0111i v\u00e0o m\u1ed9t \u0111\u1ec9nh, ta \u0111i ra kh\u1ecfi \u0111\u1ec9nh \u1ea5y ngay b\u01b0\u1edbc ti\u1ebfp theo n\u00ean v\u1edbi m\u1ecdi \\(u \\in G_i\\) (\\(1 \\leq i \\leq k\\)), \\(deg^-(u) = deg^+(u)\\).</p> <p>Theo gi\u1ea3 s\u1eed th\u00ec v\u1edbi m\u1ecdi \\(G_i\\) ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh Euler \\(C_i\\) \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh thu\u1ed9c \\(G_i\\). Nh\u1eadn x\u00e9t r\u1eb1ng m\u1ecdi \\(C_i\\) c\u00f3 \u00edt nh\u1ea5t m\u1ed9t \u0111\u1ec9nh chung v\u1edbi \\(C\\) do n\u1ebfu \\(C_i\\) v\u00e0 \\(C\\) kh\u00f4ng c\u00f3 \u0111\u1ec9nh chung ngh\u0129a l\u00e0 \\(C\\) kh\u00f4ng \u0111i qua b\u1ea5t k\u00ec \u0111\u1ec9nh n\u00e0o trong \\(G_i\\), t\u1ee9c \\(G\\) v\u00e0 \\(G_i\\) kh\u00f4ng li\u00ean th\u00f4ng, tr\u00e1i v\u1edbi \u0111i\u1ec1u ki\u1ec7n \u0111\u1eb7t ra l\u00e0 m\u1ecdi \u0111\u1ec9nh thu\u1ed9c \\(G\\) li\u00ean th\u00f4ng (l\u01b0u \u00fd \u0111i\u1ec1u ki\u1ec7n \u0111\u00fang l\u00e0 m\u1ecdi \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) trong \\(G\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng, nh\u01b0ng do \u1edf \u0111\u00e2y ta \u0111ang x\u00e9t tr\u01b0\u1eddng h\u1ee3p \\(G\\) li\u00ean th\u00f4ng y\u1ebfu). L\u1ea7n l\u01b0\u1ee3t n\u1ed1i c\u00e1c chu tr\u00ecnh con \\(C_i\\) v\u00e0o \\(C\\), ta thu \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh k\u1ebft qu\u1ea3 \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh tr\u00ean \\(G\\).</p> <p>\u0110\u1ed3 th\u1ecb ban \u0111\u1ea7u, d\u1ec5 th\u1ea5y t\u1ed3n t\u1ea1i chu tr\u00ecnh \\(C = 1 \\to 2 \\to 3 \\to 4 \\to 5 \\to 6 \\to 1\\)</p> <p></p> <p>Xo\u00e1 c\u00e1c c\u1ea1nh thu\u1ed9c \\(C\\), ta nh\u1eadn th\u1ea5y c\u00f3 \\(2\\) chu tr\u00ecnh con l\u00e0 \\(C_1 = 3 \\to 9 \\to 5 \\to 3\\) v\u00e0 \\(C_2 = 6 \\to 8 \\to 7 \\to 6\\)</p> <p></p> <p>Nh\u1eadn th\u1ea5y gi\u1eefa \\(C\\) v\u00e0 \\(C_1\\) c\u00f3 \u0111\u1ec9nh chung \\(5\\). N\u1ed1i \\(2\\) chu tr\u00ecnh l\u1ea1i ta thu \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh \\(C\\) m\u1edbi l\u1edbn h\u01a1n: \\(C = 1 \\to 2 \\to 3 \\to 4 \\to 5 \\to 3 \\to 9 \\to 5 \\to 6 \\to 1\\).</p> <p></p> <p>Ti\u1ebfp t\u1ee5c, gi\u1eefa \\(C\\) v\u00e0 \\(C_2\\) c\u00f3 \u0111\u1ec9nh chung \\(6\\). N\u1ed1i \\(2\\) chu tr\u00ecnh l\u1ea1i ta thu \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh \\(C\\) m\u1edbi: \\(C = 1 \\to 2 \\to 3 \\to 4 \\to 5 \\to 3 \\to 9 \\to 5 \\to 6 \\to 7 \\to 8 \\to 6 \\to 1\\). Ta \u0111\u00e3 \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c chu tr\u00ecnh Euler trong \u0111\u1ed3 th\u1ecb.</p> <p></p>"},{"location":"algo/graph-theory/euler-cycle/#bo-e-1","title":"B\u1ed5 \u0111\u1ec1 1","text":"<p>V\u1edbi m\u1ecdi \u0111\u1ec9nh \\(u \\in G\\), t\u1ed3n t\u1ea1i m\u1ed9t chu tr\u00ecnh ch\u1ee9a \\(u\\).</p>"},{"location":"algo/graph-theory/euler-cycle/#chung-minh_1","title":"Ch\u1ee9ng minh","text":"<p>Ta d\u1ef1ng m\u1ed9t chu tr\u00ecnh b\u1eaft \u0111\u1ea7u t\u1eeb \\(u\\).</p> <p>B\u1eaft \u0111\u1ea7u t\u1eeb \\(u\\) ta ch\u1ecdn m\u1ed9t c\u1ea1nh ra t\u1eeb \\(u\\) \u0111\u1ebfn \\(u'\\) ch\u01b0a th\u0103m b\u1ea5t k\u00ec \u0111\u1ec3 \u0111i. L\u1eb7p l\u1ea1i thao t\u00e1c n\u00e0y cho \u0111\u1ebfn khi ta \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh \\(v\\) m\u00e0 ta \u0111\u00e3 th\u0103m h\u1ebft t\u1ea5t c\u1ea3 c\u1ea1nh ra c\u1ee7a \\(v\\). N\u1ebfu \\(v \\neq u\\) th\u00ec lu\u00f4n t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t c\u1ea1nh ra ch\u01b0a th\u0103m \u0111\u1ec3 \u0111i ti\u1ebfp v\u00ec khi \u0111i v\u00e0o th\u00ec ta gi\u1ea3m \\(deg^-(v)\\) \u0111i \\(1\\), t\u1ee9c ban \u0111\u1ea7u \\(deg^-(v) &gt; 0\\). Do \u0111i\u1ec1u ki\u1ec7n m\u1ecdi \u0111\u1ec9nh thu\u1ed9c \\(G\\) \u0111\u1ec1u c\u00f3 b\u00e1n b\u1eadc v\u00e0o b\u1eb1ng b\u00e1n b\u1eadc ra n\u00ean \\(deg^+(v) &gt; 0\\), t\u1ee9c t\u1ed3n t\u1ea1i c\u1ea1nh ra ch\u01b0a th\u0103m. Suy ra \\(v = u\\). Nh\u01b0 v\u1eady ta \u0111\u00e3 ch\u1ec9 ra \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh ch\u1ee9a \\(u\\) trong \u0111\u1ed3 th\u1ecb.</p>"},{"location":"algo/graph-theory/euler-cycle/#uong-i-euler-tren-o-thi-co-huong","title":"\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng","text":""},{"location":"algo/graph-theory/euler-cycle/#inh-ly-2","title":"\u0110\u1ecbnh l\u00fd 2","text":"<p>\u0110\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 \u0111\u1ed3 th\u1ecb n\u1eeda Euler n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu \u0111\u1ed3 th\u1ecb tho\u1ea3 m\u1ed9t trong hai \u0111i\u1ec1u ki\u1ec7n sau: 1. T\u1ed3n t\u1ea1i chu tr\u00ecnh Euler 2. Tho\u1ea3 t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec1u ki\u1ec7n sau:     1. T\u1ed3n t\u1ea1i trong \u0111\u1ed3 th\u1ecb \u0111\u00fang \\(2\\) \u0111\u1ec9nh \\(s\\) v\u00e0 \\(t\\) sao cho \\(deg^-(s) = deg^+(s) + 1\\) v\u00e0 \\(deg^-(t) = deg^+(t) - 1\\)     2. V\u1edbi m\u1ecdi \u0111\u1ec9nh \\(u\\) kh\u00e1c \\(s\\) v\u00e0 \\(t\\), \\(deg^+(u) = deg^-(u)\\)     3. T\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng</p> <p>\u0110\u1ec9nh \\(s\\) v\u00e0 \u0111\u1ec9nh \\(t\\) c\u0169ng ch\u00ednh l\u00e0 \u0111\u1ec9nh xu\u1ea5t ph\u00e1t v\u00e0 k\u1ebft th\u00fac c\u1ee7a \u0111\u01b0\u1eddng \u0111i Euler trong \u0111\u1ed3 th\u1ecb.</p>"},{"location":"algo/graph-theory/euler-cycle/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>\u0110\u1ed3 th\u1ecb 3 d\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb n\u1eeda Euler.</p> <p>\u0110\u1ed3 th\u1ecb 3 c\u00f3 \u0111\u1ec9nh \\(4\\) c\u00f3 \\(deg^-(4) = 0\\) v\u00e0 \\(deg^+(4) = 1\\) v\u00e0 \u0111\u1ec9nh \\(6\\) c\u00f3 \\(deg^-(6) = 1\\) v\u00e0 \\(deg^+(6) = 0\\).</p> <p>C\u00e1c \u0111\u1ec9nh kh\u00e1c ngo\u00e0i \\(4\\) v\u00e0 \\(6\\) \u0111\u1ec1u c\u00f3 b\u00e1n b\u1eadc ra b\u1eb1ng b\u00e1n b\u1eadc v\u00e0o: \\(deg^-(1) = 1 = deg^+(1)\\), \\(deg^-(5) = 0 = deg^+(5)\\), \\ldots</p> <p>\u0110\u1ed3ng th\u1eddi c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) l\u00e0 \\(1\\), \\(2\\), \\(3\\), \\(4\\), \\(6\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</p> <p>Do \u0111\u00f3, ta k\u1ebft lu\u1eadn t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb 3. Th\u1eadt v\u1eady, \\(4 \\to 2 \\to 3 \\to 1 \\to 2 \\to 6\\) l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb.</p> \u0110\u1ed3 th\u1ecb 3 <p>\u0110\u1ed3 th\u1ecb 4 c\u00f3 h\u01b0\u1edbng kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler do c\u00f3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc ra kh\u00e1c b\u1eadc v\u00e0o l\u00e0 \\(1\\), \\(2\\), \\(4\\), \\(6\\).</p> \u0110\u1ed3 th\u1ecb 4"},{"location":"algo/graph-theory/euler-cycle/#chung-minh_2","title":"Ch\u1ee9ng minh","text":""},{"location":"algo/graph-theory/euler-cycle/#chieu-thuan_1","title":"Chi\u1ec1u thu\u1eadn","text":"<p>Gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler b\u1eaft \u0111\u1ea7u t\u1eeb \\(s\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i \\(t\\) tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng. - N\u1ebfu \\(s = t\\), \u0111\u1ed3 th\u1ecb c\u00f3 chu tr\u00ecnh Euler. D\u1ef1a v\u00e0o \u0111\u1ecbnh l\u00fd 1, ta ch\u1ee9ng minh \u0111\u01b0\u1ee3c \u0111\u1ecbnh l\u00fd \u0111\u00fang trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y. - N\u1ebfu \\(s \\neq t\\), do \u0111\u01b0\u1eddng \u0111i Euler \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh n\u00ean nh\u1eadn th\u1ea5y:     - \\(deg^-(s) = deg^+(s) + 1\\) do \u0111\u01b0\u1eddng \u0111i xu\u1ea5t ph\u00e1t nh\u01b0ng kh\u00f4ng k\u1ebft th\u00fac t\u1ea1i \\(s\\) n\u00ean \\(deg^-(s)\\) ph\u1ea3i \u00edt h\u01a1n \\(deg^+(s)\\) \\(1\\) c\u1ea1nh     - \\(deg^-(t) = deg^+(t) - 1\\) do \u0111\u01b0\u1eddng \u0111i k\u1ebft th\u00fac nh\u01b0ng kh\u00f4ng xu\u1ea5t ph\u00e1t t\u1ea1i \\(t\\) n\u00ean \\(deg^-(t)\\) ph\u1ea3i nhi\u1ec1u h\u01a1n \\(deg^+(t)\\) \\(1\\) c\u1ea1nh     - \\(deg^-(u) = deg^+(u)\\) v\u1edbi m\u1ecdi \\(u\\) kh\u00e1c \\(s\\) v\u00e0 \\(t\\)     - T\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) trong \u0111\u1ed3 th\u1ecb thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng</p>"},{"location":"algo/graph-theory/euler-cycle/#chieu-ao_1","title":"Chi\u1ec1u \u0111\u1ea3o","text":"<p>Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler, hi\u1ec3n nhi\u00ean \u0111\u1ed3 th\u1ecb t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler.</p> <p>Gi\u1ea3 s\u1eed \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng tho\u1ea3 c\u00e1c \u0111i\u1ec1u ki\u1ec7n trong \u0111\u1ecbnh l\u00fd 2. Th\u00eam m\u1ed9t c\u1ea1nh \\(e\\) n\u1ed1i t\u1eeb \\(t\\) \u0111\u1ebfn \\(s\\) v\u00e0o \u0111\u1ed3 th\u1ecb (\\(s\\) v\u00e0 \\(t\\) l\u00e0 \\(2\\) \u0111\u1ec9nh duy nh\u1ea5t trong \u0111\u1ed3 th\u1ecb kh\u00f4ng tho\u1ea3 \u0111i\u1ec1u ki\u1ec7n b\u00e1n b\u1eadc v\u00e0o b\u1eb1ng b\u00e1n b\u1eadc ra). Khi n\u00e0y m\u1ecdi \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb \u0111\u1ec1u c\u00f3 b\u00e1n b\u1eadc v\u00e0o b\u1eb1ng b\u00e1n b\u1eadc ra n\u00ean \u0111\u1ed3 th\u1ecb t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler \u0111i qua \\(t\\) v\u00e0 \\(s\\): \\(\\(u_1\\ u_2\\ u_3\\ \\cdots\\ t\\ s\\ \\cdots\\ u_{n - 1}\\ u_n\\)\\) Ta nh\u1eadn th\u1ea5y tr\u00ean \u0111\u1ed3 th\u1ecb l\u00fac sau t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh kh\u00e1c \\(e\\) b\u1eaft \u0111\u1ea7u t\u1eeb \\(s\\) v\u00e0 k\u1ebft th\u00fac \u1edf \\(t\\). \\(\\(s\\ \\cdots\\ u_{n - 1}\\ u_n\\ u_1\\ u_2\\ u_3\\ \\cdots\\ t\\)\\) Do \u0111\u00f3 \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng \u0111i Euler.</p>"},{"location":"algo/graph-theory/euler-cycle/#chu-trinh-euler-tren-o-thi-vo-huong","title":"Chu tr\u00ecnh Euler tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng","text":""},{"location":"algo/graph-theory/euler-cycle/#inh-ly-3","title":"\u0110\u1ecbnh l\u00fd 3","text":"<p>\u0110\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng l\u00e0 \u0111\u1ed3 th\u1ecb Euler n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu: - B\u1eadc c\u1ee7a m\u1ecdi \u0111\u1ec9nh l\u00e0 ch\u1eb5n - T\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng</p>"},{"location":"algo/graph-theory/euler-cycle/#chung-minh_3","title":"Ch\u1ee9ng minh","text":"<p>C\u00e1ch ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd cho \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng kh\u00e1 t\u01b0\u01a1ng t\u1ef1 nh\u01b0 cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng.</p>"},{"location":"algo/graph-theory/euler-cycle/#chieu-thuan_2","title":"Chi\u1ec1u thu\u1eadn","text":"<p>Gi\u1ea3 s\u1eed \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler.</p> <ul> <li>V\u00ec chu tr\u00ecnh Euler \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh n\u00ean d\u1ec5 th\u1ea5y t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</li> <li>V\u00ec chu tr\u00ecnh Euler \u0111i qua m\u1ed7i c\u1ea1nh \u0111\u00fang m\u1ed9t l\u1ea7n v\u00e0 v\u1edbi m\u1ed7i \u0111\u1ec9nh, s\u1ed1 l\u1ea7n ta \u0111i v\u00e0o b\u1eb1ng \u0111\u00fang s\u1ed1 l\u1ea7n ta \u0111i ra kh\u1ecfi \u0111\u1ec9nh \u1ea5y n\u00ean b\u1eadc c\u1ee7a m\u1ed7i \u0111\u1ec9nh l\u00e0 ch\u1eb5n.</li> </ul>"},{"location":"algo/graph-theory/euler-cycle/#chieu-ao_2","title":"Chi\u1ec1u \u0111\u1ea3o","text":"<p>Ta c\u0169ng s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p quy n\u1ea1p \u0111\u1ec3 ch\u1ee9ng minh.</p> <p>D\u1ec5 th\u1ea5y \u0111\u1ecbnh l\u00fd \u0111\u00fang khi \u0111\u1ed3 th\u1ecb c\u00f3 m\u1ed9t \u0111\u1ec9nh.</p> <p>X\u00e9t m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G\\) c\u00f3 \\(n\\) \u0111\u1ec9nh tho\u1ea3 \\(\\forall u \\in G\\), \\(2 \\mathrel{|} deg(u)\\). T\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng, ta ch\u1ee9ng minh \u0111\u01b0\u1ee3c: - Ch\u1ecdn m\u1ed9t \u0111\u1ec9nh \\(u \\in G\\) b\u1ea5t k\u00ec th\u00ec lu\u00f4n t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh \\(C\\) ch\u1ee9a \\(u\\). - Xo\u00e1 c\u00e1c c\u1ea1nh tr\u00ean \\(G\\) thu\u1ed9c \\(C\\):     - N\u1ebfu sau khi xo\u00e1 \\(G\\) kh\u00f4ng c\u00f2n c\u1ea1nh th\u00ec \\(C\\) ch\u00ednh l\u00e0 m\u1ed9t chu tr\u00ecnh Euler.     - Ng\u01b0\u1ee3c l\u1ea1i, ta thu \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng \\(G'\\).         - Do tr\u00ean chu tr\u00ecnh \\(C\\), m\u1ed7i khi ta \u0111i v\u00e0o m\u1ed9t \u0111\u1ec9nh ta l\u1eadp t\u1ee9c \u0111i ra kh\u1ecfi \u0111\u1ec9nh \u1ea5y n\u00ean sau khi xo\u00e1 c\u1ea1nh, b\u1eadc c\u1ee7a m\u1ecdi \u0111\u1ec9nh v\u1eabn ch\u1eb5n.         - V\u1edbi m\u1ed7i \\(G'\\), do b\u1eadc c\u1ee7a m\u1ecdi \u0111\u1ec9nh v\u1eabn ch\u1eb5n, t\u00ecm \u0111\u01b0\u1ee3c chu tr\u00ecnh Euler \\(C'\\) \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh (gi\u1ea3 thi\u1ebft quy n\u1ea1p).         - Do t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) trong \\(G\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng n\u00ean m\u1ecdi \\(G'\\) c\u00f3 \u0111\u1ec9nh chung v\u1edbi \\(C\\). L\u1ea7n l\u01b0\u1ee3t n\u1ed1i c\u00e1c chu tr\u00ecnh nh\u1ecf \\(C'\\) v\u00e0o \\(C\\), ta thu \u0111\u01b0\u1ee3c chu tr\u00ecnh Euler c\u1ee7a \\(G\\).</p> <p>\u0110\u1ed3 th\u1ecb ban \u0111\u1ea7u, d\u1ec5 th\u1ea5y chu tr\u00ecnh \\(C = 1 \\to 2 \\to 3 \\to 4 \\to 1\\)</p> <p></p> <p>Xo\u00e1 c\u00e1c c\u1ea1nh thu\u1ed9c \\(C\\), ta d\u1ec5 th\u1ea5y m\u1ed9t chu tr\u00ecnh \\(C_1 = 7 \\to 4 \\to 8 \\to 1 \\to 5 \\to 2 \\to 6 \\to 3 \\to 7\\).</p> <p></p> <p>Nh\u1eadn th\u1ea5y \\(C\\) v\u00e0 \\(C_1\\) c\u00f3 \u0111\u1ec9nh chung \\(2\\), n\u1ed1i \\(C\\) v\u00e0 \\(C_1\\) \u0111\u1ec3 t\u1ea1o ra chu tr\u00ecnh m\u1edbi l\u1edbn h\u01a1n: \\(1 \\to 2 \\to 6 \\to 3 \\to 7 \\to 4 \\to 8 \\to 1 \\to 5 \\to 2 \\to 3 \\to 4 \\to 1\\). Ta \u0111\u00e3 \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c chu tr\u00ecnh Euler trong \u0111\u1ed3 th\u1ecb.</p> <p></p>"},{"location":"algo/graph-theory/euler-cycle/#uong-i-euler-tren-o-thi-vo-huong","title":"\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng","text":""},{"location":"algo/graph-theory/euler-cycle/#inh-ly-4","title":"\u0110\u1ecbnh l\u00fd 4","text":"<p>T\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu: - \u0110\u1ed3 th\u1ecb c\u00f3 \u0111\u00fang \\(0\\) ho\u1eb7c \\(2\\) \u0111\u1ec9nh b\u1eadc l\u1ebb - T\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u0169ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng</p>"},{"location":"algo/graph-theory/euler-cycle/#chung-minh_4","title":"Ch\u1ee9ng minh","text":""},{"location":"algo/graph-theory/euler-cycle/#chieu-thuan_3","title":"Chi\u1ec1u thu\u1eadn","text":"<p>Gi\u1ea3 s\u1eed \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler xu\u1ea5t ph\u00e1t t\u1ea1i \\(s\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i \\(t\\). - N\u1ebfu \\(s = t\\), d\u1ef1a v\u00e0o \u0111\u1ecbnh l\u00fd 3, \u0111\u1ed3 th\u1ecb c\u00f3 chu tr\u00ecnh Euler n\u00ean t\u1ea5t c\u1ea3 \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb c\u00f3 b\u1eadc ch\u1eb5n v\u00e0 m\u1ecdi \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng. - N\u1ebfu \\(s \\neq t\\), do \u0111\u01b0\u1eddng \u0111i Euler \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh n\u00ean d\u1ec5 th\u1ea5y \u0111\u1ed3 th\u1ecb c\u00f3 \u0111\u00fang 2 \u0111\u1ec9nh b\u1eadc l\u1ebb l\u00e0 \\(s\\) v\u00e0 \\(t\\) v\u00e0 c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</p>"},{"location":"algo/graph-theory/euler-cycle/#chieu-ao_3","title":"Chi\u1ec1u \u0111\u1ea3o","text":"<ul> <li>N\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u00f9ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng v\u00e0 kh\u00f4ng c\u00f3 \u0111\u1ec9nh b\u1eadc l\u1ebb th\u00ec t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler.</li> <li>N\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) thu\u1ed9c c\u0169ng m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng v\u00e0 c\u00f3 \u0111\u00fang \\(2\\) \u0111\u1ec9nh l\u1ebb, ta th\u00eam m\u1ed9t c\u1ea1nh \u1ea3o gi\u1eefa \\(2\\) \u0111\u1ec9nh l\u1ebb. Khi n\u00e0y \u0111\u1ed3 th\u1ecb t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler. Xo\u00e1 c\u1ea1nh \u1ea3o kh\u1ecfi chu tr\u00ecnh Euler, ta thu \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i Euler c\u1ee7a \u0111\u1ed3 th\u1ecb.</li> </ul>"},{"location":"algo/graph-theory/euler-cycle/#thuat-toan-tim-chu-trinh-uong-i-euler","title":"Thu\u1eadt to\u00e1n t\u00ecm chu tr\u00ecnh - \u0111\u01b0\u1eddng \u0111i Euler","text":"<p>Qua ph\u1ea7n ch\u1ee9ng minh tr\u00ean, ta c\u00f3 th\u1ec3 th\u1ea5y n\u1ebfu c\u00f3 thu\u1eadt to\u00e1n t\u00ecm chu tr\u00ecnh Euler th\u00ec ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng s\u1eed d\u1ee5ng \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i Euler n\u00ean trong ph\u1ea7n n\u00e0y ch\u00fang ta s\u1ebd t\u1eadp trung v\u00e0o thu\u1eadt to\u00e1n t\u00ecm chu tr\u00ecnh Euler.</p> <p>Hai thu\u1eadt to\u00e1n t\u00ecm chu tr\u00ecnh Euler \u0111\u01b0\u1ee3c bi\u1ebft \u0111\u1ebfn r\u1ed9ng r\u00e3i l\u00e0 thu\u1eadt to\u00e1n Fluery v\u00e0 thu\u1eadt to\u00e1n Hierholzer. B\u00e0i vi\u1ebft s\u1ebd t\u1eadp trung v\u00e0o thu\u1eadt to\u00e1n Hierholzer do t\u00ednh ph\u1ed5 bi\u1ebfn v\u00e0 \u0111\u1ed9 hi\u1ec7u qu\u1ea3 c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y so v\u1edbi thu\u1eadt to\u00e1n Fluery.</p>"},{"location":"algo/graph-theory/euler-cycle/#thuat-toan-hierholzer-cho-o-thi-co-huong","title":"Thu\u1eadt to\u00e1n Hierholzer cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng","text":"<p>Thu\u1eadt to\u00e1n Hierholzer t\u00ecm chu tr\u00ecnh Euler d\u1ef1a tr\u00ean c\u00e1c b\u01b0\u1edbc \u0111\u00e3 n\u00eau trong ph\u1ea7n ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng.</p> <p>Gi\u1ea3 s\u1eed \u0111\u1ed3 th\u1ecb tho\u1ea3 \u0111\u1ecbnh l\u00fd 1. C\u00e1c b\u01b0\u1edbc trong thu\u1eadt to\u00e1n c\u1ee5 th\u1ec3 nh\u01b0 sau:</p> <ol> <li>Tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u thu\u1eadt to\u00e1n ta ch\u1ecdn m\u1ed9t \u0111\u1ec9nh \\(u\\) b\u1ea5t k\u00ec c\u00f3 b\u1eadc l\u1edbn h\u01a1n \\(0\\) trong \u0111\u1ed3 th\u1ecb \u0111\u1ec3 b\u1eaft \u0111\u1ea7u. Ta xem \\(u\\) l\u00e0 tham s\u1ed1 cho thu\u1eadt to\u00e1n. N\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 c\u1ea1nh, hi\u1ec3n nhi\u00ean ta tr\u1ea3 v\u1ec1 chu tr\u00ecnh r\u1ed7ng.</li> <li>T\u1eeb \u0111\u1ec9nh \\(u\\) tham s\u1ed1, ta t\u00ecm m\u1ed9t chu tr\u00ecnh \\(C\\) ch\u1ee9a \\(u\\). C\u00e1c b\u01b0\u1edbc c\u1ee5 th\u1ec3 \u0111\u1ec3 t\u00ecm \\(C\\) nh\u01b0 sau:<ol> <li>Kh\u1edfi t\u1ea1o m\u1ea3ng k\u1ebft qu\u1ea3 \\(C\\) l\u00e0 r\u1ed7ng v\u00e0 xu\u1ea5t ph\u00e1t t\u1eeb \u0111\u1ec9nh \\(u\\).</li> <li>T\u1eeb \u0111\u1ec9nh \u0111ang \u0111\u1ee9ng, ch\u1ecdn m\u1ed9t c\u1ea1nh ra ch\u01b0a th\u0103m \u0111\u1ec3 \u0111i. \u0110\u00e1nh d\u1ea5u c\u1ea1nh v\u1eeba \u0111i qua v\u00e0 c\u1eadp nh\u1eadt v\u00e0o \\(C\\).</li> <li>L\u1eb7p l\u1ea1i b\u01b0\u1edbc (ii). N\u1ebfu kh\u00f4ng th\u1ec3 \u0111i ti\u1ebfp th\u00ec ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh \\(C\\) v\u00e0 sang b\u01b0\u1edbc 2.</li> </ol> </li> <li>N\u1ebfu ta \u0111\u00e3 \u0111i qua t\u1ea5t c\u1ea3 c\u1ea1nh, tr\u1ea3 \\(C\\) l\u00e0 k\u1ebft qu\u1ea3. N\u1ebfu \\(C\\) ch\u01b0a \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh, c\u00e1c c\u1ea1nh ch\u01b0a th\u0103m trong \u0111\u1ed3 th\u1ecb t\u1ea1o th\u00e0nh nh\u1eefng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng y\u1ebfu. T\u00ecm m\u1ed9t \u0111\u1ec9nh \\(v\\) tr\u00ean \u0111\u1ed3 th\u1ecb thu\u1ed9c \\(C\\) m\u00e0 c\u00f3 c\u1ea1nh ra ch\u01b0a \u0111i qua. </li> <li>G\u1ecdi \u0111\u1ec7 quy th\u1ee7 t\u1ee5c t\u00ecm chu tr\u00ecnh Euler v\u1edbi tham s\u1ed1 l\u00e0 \u0111\u1ec9nh \\(v\\). Sau khi ho\u00e0n th\u00e0nh ta thu \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh Euler \\(D\\) \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh trong \u0111\u1ed3 th\u1ecb con ch\u1ee9a \\(v\\).</li> <li>N\u1ed1i hai chu tr\u00ecnh \\(C\\) v\u00e0 \\(D\\) t\u1ea1i \u0111\u1ec9nh chung \\(v\\). L\u1eb7p l\u1ea1i b\u01b0\u1edbc 2.</li> </ol>"},{"location":"algo/graph-theory/euler-cycle/#cai-at-mau","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"<p>Trong ph\u1ea7n c\u00e0i \u0111\u1eb7t m\u1eabu, \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng danh s\u00e1ch k\u1ec1. Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng, c\u00e0i \u0111\u1eb7t t\u01b0\u01a1ng t\u1ef1 nh\u01b0ng khi \u0111\u00e1nh d\u1ea5u c\u1ea1nh \u0111\u00e3 th\u0103m l\u01b0u \u00fd \u0111\u00e1nh d\u1ea5u c\u1ea3 hai chi\u1ec1u.</p> <p>Ngo\u00e0i ra c\u00e0i \u0111\u1eb7t m\u1eabu s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac danh s\u00e1ch li\u00ean k\u1ebft \u0111\u00f4i th\u00f4ng qua c\u1ea5u tr\u00fac <code>list</code> trong th\u01b0 vi\u1ec7n chu\u1ea9n c\u1ee7a C++ \u0111\u1ec3 bi\u1ec3u di\u1ec5n chu tr\u00ecnh \\(C\\). Vi\u1ec7c s\u1eed d\u1ee5ng danh s\u00e1ch li\u00ean k\u1ebft \u0111\u00f4i gi\u00fap b\u01b0\u1edbc n\u1ed1i hai chu tr\u00ecnh tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n do ta ch\u1ec9 c\u1ea7n thay \u0111\u1ed3i li\u00ean k\u1ebft gi\u1eefa c\u00e1c ph\u1ea7n t\u1eed trong danh s\u00e1ch. Ngo\u00e0i c\u00e1ch s\u1eed d\u1ee5ng danh s\u00e1ch li\u00ean k\u1ebft \u0111\u00f4i, m\u1ed9t s\u1ed1 c\u00e0i \u0111\u1eb7t kh\u00e1c s\u1eed d\u1ee5ng hai ng\u0103n x\u1ebfp \u0111\u1ec3 n\u1ed1i hai chu tr\u00ecnh. \u0110\u1ed9c gi\u1ea3 c\u00f3 th\u1ec3 tham kh\u1ea3o c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y \u1edf c\u00e1c t\u00e0i li\u1ec7u kh\u00e1c.</p> <pre><code>// N - s\u1ed1 \u0111\u1ec9nh nhi\u1ec1u nh\u1ea5t\n// M - s\u1ed1 c\u1ea1nh nhi\u1ec1u nh\u1ea5t\n\nstruct Edge {\n    int target, id;\n\n    Edge(int _target, int _id): target(_target), id(_id) {}\n};\n\nvector&lt;Edge&gt; adj[N]; // Danh s\u00e1ch k\u1ec1 l\u01b0u c\u1ea1nh v\u00e0 ch\u1ec9 s\u1ed1\nbool used_edge[M]; // M\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u1ea1nh \u0111\u00e3 th\u0103m\n\nlist&lt;int&gt; euler_walk(int u) {\n    // S\u1eed d\u1ee5ng c\u1ea5u tr\u00fac danh s\u00e1ch li\u00ean k\u1ebft \u0111\u1ec3 l\u01b0u k\u1ebft qu\u1ea3\n    list&lt;int&gt; ans;\n\n    // Xu\u1ea5t ph\u00e1t t\u1eeb \u0111\u1ec9nh u\n    ans.push_back(u);\n\n    while (!adj[u].empty()) {\n        // Ch\u1ecdn m\u1ed9t c\u1ea1nh b\u1ea5t k\u00ec ch\u01b0a th\u0103m\n        int v = adj[u].back().target;\n        int eid = adj[u].back().id;\n\n        // Xo\u00e1 c\u1ea1nh v\u1eeba \u0111i qua kh\u1ecfi \u0111\u1ed3 th\u1ecb\n        // L\u01b0u \u00fd vi\u1ec7c xo\u00e1 c\u1ea1nh c\u00f3 th\u1ec3 **\u1ea3nh h\u01b0\u1edfng** t\u1edbi c\u00e1c\n        // thao t\u00e1c tr\u00ean \u0111\u1ed3 th\u1ecb v\u1ec1 sau do vi\u1ec7c xo\u00e1 c\u1ea1nh s\u1ebd\n        // **ph\u00e1 hu\u1ef7** ho\u00e0n to\u00e0n danh s\u00e1ch c\u1ea1nh\n        // N\u00ean sao l\u01b0u danh s\u00e1ch c\u1ea1nh ra bi\u1ebfn kh\u00e1c n\u1ebfu c\u1ea7n d\u00f9ng l\u1ea1i\n        adj[u].pop_back();\n\n        // B\u1ecf qua n\u1ebfu c\u1ea1nh \u0111\u00e3 th\u0103m\n        if (used_edge[eid]) continue;\n\n        // \u0110\u00e1nh d\u1ea5u c\u1ea1nh \u0111\u00e3 \u0111i qua\n        used_edge[eid] = true;\n\n        // Di chuy\u1ec3n sang \u0111\u1ec9nh m\u1edbi\n        u = v;\n\n        // Th\u00eam c\u1ea1nh v\u00e0o \u0111\u01b0\u1eddng \u0111i hi\u1ec7n t\u1ea1i\n        // C\u00f3 nhi\u1ec1u c\u00e1ch l\u01b0u chu tr\u00ecnh nh\u01b0 l\u01b0u \u0111\u1ec9nh, c\u1ea1nh, \n        // ch\u1ec9 s\u1ed1 c\u1ea1nh, ...\n        ans.push_back(u);\n    }\n\n    // T\u00ecm c\u1ea1nh ch\u01b0a th\u0103m t\u1eeb m\u1ed9t \u0111\u1ec9nh tr\u00ean chu tr\u00ecnh hi\u1ec7n t\u1ea1i\n    // B\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh th\u1ee9 hai trong chu tr\u00ecnh do ta bi\u1ebft \n    // r\u1eb1ng \u0111\u1ec9nh \u0111\u1ea7u ti\u00ean trong chu tr\u00ecnh (u) \u0111\u00e3 kh\u00f4ng c\u00f2n\n    // c\u1ea1nh ra\n    for (auto it = ++ans.begin(); it != ans.end(); ++it) {\n        // G\u1ecdi \u0111\u1ec7 quy ti\u1ebfp t\u1ee5c t\u00ecm chu tr\u00ecnh m\u1edbi\n        auto t = euler_walk(*it);\n\n        // N\u1ed1i chu tr\u00ecnh t\u00ecm \u0111\u01b0\u1ee3c v\u00e0o chu tr\u00ecnh hi\u1ec7n t\u1ea1i\n        t.pop_back();  \n        ans.splice(it, t);\n    }\n\n    return ans;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean l\u00e0 \\(O(m)\\) do vi\u1ec7c n\u1ed1i hai chu tr\u00ecnh \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong th\u1eddi gian \\(O(1)\\) n\u1ebfu chu tr\u00ecnh \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng danh s\u00e1ch li\u00ean k\u1ebft. N\u1ebfu ch\u00fang ta bi\u1ec3u di\u1ec5n chu tr\u00ecnh b\u1eb1ng m\u1ed9t s\u1ed1 c\u1ea5u tr\u00fac ph\u1ed5 bi\u1ebfn kh\u00e1c nh\u01b0 (ch\u1eb3ng h\u1ea1n <code>vector</code>) th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian s\u1ebd t\u0103ng l\u00ean do vi\u1ec7c n\u1ed1i chu tr\u00ecnh k\u00e9m hi\u1ec7u qu\u1ea3.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb l\u00e0 tuy\u1ebfn t\u00ednh d\u1ef1a v\u00e0o s\u1ed1 \u0111\u1ec9nh v\u00e0 s\u1ed1 c\u1ea1nh.</p>"},{"location":"algo/graph-theory/euler-cycle/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/graph-theory/euler-cycle/#cses-teleporters-path","title":"CSES - Teleporters Path","text":""},{"location":"algo/graph-theory/euler-cycle/#tom-tat-e","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<p>T\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(N \\leq 10^5\\) \u0111\u1ec9nh, \\(M \\leq 2 \\cdot 10^5\\) c\u1ea1nh. In <code>IMPOSSIBLE</code> n\u1ebfu kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c.</p>"},{"location":"algo/graph-theory/euler-cycle/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<p>Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp, \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i Euler, ta th\u00eam m\u1ed9t c\u1ea1nh \u1ea3o t\u1eeb gi\u1eefa \\(2\\) \u0111\u1ec9nh l\u1ebb, t\u00ecm chu tr\u00ecnh Euler, r\u1ed3i xo\u00e1 c\u1ea1nh \u1ea3o \u0111\u00e3 th\u00eam.</p> <p>M\u1ed9t c\u00e1ch kh\u00e1c \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i Euler l\u00e0 ta ch\u1ec9 c\u1ea7n g\u1ecdi th\u1ee7 t\u1ee5c t\u00ecm chu tr\u00ecnh Euler nh\u01b0 tr\u00ean v\u1edbi tham s\u1ed1 l\u00e0 \u0111\u1ec9nh \\(1\\). K\u1ebft qu\u1ea3 nh\u1eadn \u0111\u01b0\u1ee3c l\u00e0 \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean \u0111\u1ed3 th\u1ecb. L\u00fd gi\u1ea3i l\u00e0 khi g\u1ecdi th\u1ee7 t\u1ee5c t\u00ecm chu tr\u00ecnh Euler trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u1edf l\u1ea7n l\u1eb7p \u0111\u1ea7u ti\u00ean, ch\u00fang ta s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1\\) t\u1edbi \\(n\\). Nh\u1eefng c\u1ea1nh ch\u01b0a th\u0103m c\u00f2n l\u1ea1i trong \u0111\u1ed3 th\u1ecb t\u1ea1o th\u00e0nh nh\u1eefng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng tho\u1ea3 \u0111i\u1ec1u ki\u1ec7n t\u1ed3n t\u1ea1i chu tr\u00ecnh Euler. Khi n\u00e0y thu\u1eadt to\u00e1n s\u1ebd g\u1ecdi \u0111\u1ec7 quy t\u00ecm chu tr\u00ecnh Euler tr\u00ean t\u1eebng \u0111\u1ed3 th\u1ecb con v\u00e0 n\u1ed1i c\u00e1c chu tr\u00ecnh con l\u1ea1i \u0111\u1ec3 d\u1ef1ng \u0111\u01b0\u1eddng \u0111i c\u1ea7n t\u00ecm.</p>"},{"location":"algo/graph-theory/euler-cycle/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1e5 + 2, M = 2e5 + 2;\n\nstruct Edge {\n    int target, id;\n\n    Edge(int _target, int _id): target(_target), id(_id) {}\n};\n\nint n, m, in_deg[N];\nvector&lt;Edge&gt; adj[N];\nbool used_edge[M];\n\nlist&lt;int&gt; euler_walk(int u); // H\u00e0m euler_walk nh\u01b0 c\u00e0i \u0111\u1eb7t m\u1eabu\n\nbool check() {\n    if (adj[1].size() != in_deg[1] + 1 ||\n        adj[n].size() != in_deg[n] - 1)\n        return false;\n\n    for (int i = 2; i &lt; n; ++i)\n        if (adj[i].size() != in_deg[i])\n            return false;\n\n    return true;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 0; i &lt; m; ++i) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        adj[u].emplace_back(v, i);\n        ++in_deg[v];\n    }\n\n    // Ki\u1ec3m tra t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i Euler\n    if (!check()) {\n        cout &lt;&lt; \"IMPOSSIBLE\";\n        return 0;\n    }\n\n    // Th\u00eam c\u1ea1nh \u1ea3o v\u00e0o \u0111\u1ed3 th\u1ecb\n    adj[n].emplace_back(1, m);\n\n    // T\u00ecm chu tr\u00ecnh Euler\n    list&lt;int&gt; ans = euler_walk(1);\n\n    // Ki\u1ec3m tra xem \u0111\u00e3 \u0111i qua h\u1ebft t\u1ea5t c\u1ea3 c\u1ea1nh ch\u01b0a v\u00ec trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed3 \n    // th\u1ecb kh\u00f4ng li\u00ean th\u00f4ng ta kh\u00f4ng th\u1ec3 \u0111i qua t\u1ea5t c\u1ea3 c\u1ea1nh\n    if (ans.size() &lt; m + 1)\n        cout &lt;&lt; \"IMPOSSIBLE\";\n    else {\n        // T\u00ecm c\u1ea1nh \u1ea3o \u0111\u00e3 th\u00eam\n        for (auto u1 = ans.begin(), u2 = ++ans.begin(); u2 != ans.end(); ++u1, ++u2)\n            if (*u1 == n &amp;&amp; *u2 == 1) {\n                // In c\u00e1c c\u1ea1nh tr\u00ean chu tr\u00ecnh nh\u01b0ng b\u1ecf qua c\u1ea1nh \u1ea3o\n                for (auto i = u2; i != ans.end(); ++i)\n                    cout &lt;&lt; (*i) &lt;&lt; \" \";\n                for (auto i = ++ans.begin(); i != u2; ++i)\n                    cout &lt;&lt; (*i) &lt;&lt; \" \";\n                break;\n            }\n    }\n  return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/euler-cycle/#vnoi-marathon-08-me-cung","title":"VNOI Marathon 08 - M\u00ea cung","text":""},{"location":"algo/graph-theory/euler-cycle/#tom-tat-e_1","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<p>Cho \u0111\u01a1n \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(N \\leq 200\\) \u0111\u1ec9nh, \\(M\\) c\u1ea1nh. M\u1ed7i c\u1ea1nh \\((u, v)\\) c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(W_{u, v} \\leq 10000\\). T\u00ecm m\u1ed9t chu tr\u00ecnh \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb, sao cho t\u1ea1i m\u1ed7i th\u1eddi \u0111i\u1ec3m, t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh \u0111i qua kh\u00f4ng \u00e2m.</p>"},{"location":"algo/graph-theory/euler-cycle/#loi-giai_1","title":"L\u1eddi gi\u1ea3i","text":"<p>N\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng li\u00ean th\u00f4ng, c\u00f3 \u0111\u1ec9nh b\u1eadc l\u1ebb, hay t\u1ed5ng tr\u1ecdng s\u1ed1 t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh \u00e2m th\u00ec hi\u1ec3n nhi\u00ean kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c chu tr\u00ecnh tho\u1ea3 y\u00eau c\u1ea7u.</p> <p>T\u00ecm m\u1ed9t chu tr\u00ecnh Euler b\u1ea5t k\u00ec tr\u00ean \u0111\u1ed3 th\u1ecb \\(C = u_0 u_1 \\ldots u_{m}\\). L\u01b0u \u00fd do \\(C\\) l\u00e0 m\u1ed9t chu tr\u00ecnh n\u00ean \u0111\u1ec9nh li\u1ec1n sau \\(u_m\\) l\u00e0 \\(u_0\\).</p> <p>G\u1ecdi \\(S\\) l\u00e0 m\u1ea3ng t\u1ed5ng ti\u1ec1n t\u1ed1 c\u1ee7a tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh tr\u00ean \\(C\\). Nh\u01b0 v\u1eady, \\(\\(S_i = \\sum_{j = 0}^{i} W_{u_j, u_{j + 1}}\\)\\) L\u01b0u \u00fd \\(u_{j + 1}\\) ch\u1ec9 \u0111\u1ec9nh li\u1ec1n sau \\(u_j\\) trong \\(C\\).</p> <p>Ta bi\u1ebft r\u1eb1ng \\(S_m \\geq 0\\) do nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp, n\u1ebfu t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh \u00e2m th\u00ec kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c chu tr\u00ecnh tho\u1ea3 y\u00eau c\u1ea7u.</p> <p>G\u1ecdi \\(u_k\\) l\u00e0 \u0111\u1ec9nh thu\u1ed9c chu tr\u00ecnh sao cho \\(S_k\\) nh\u1ecf nh\u1ea5t.</p> <p>N\u1ebfu \\(S_k \\geq 0\\) th\u00ec \\(C\\) tho\u1ea3 y\u00eau c\u1ea7u.</p> <p>N\u1ebfu \\(S_k &lt; 0\\) th\u00ec \\(k &lt; m\\) do \\(S_{m} \\geq 0\\).</p> <p>Nh\u01b0 v\u1eady v\u1edbi m\u1ecdi \\(k &lt; k_1 \\leq m\\) th\u00ec \\(S_{k_1} - S_k \\geq 0\\) hay t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh gi\u1eefa v\u1ecb tr\u00ed \\(k\\) v\u00e0 \\(k_1\\) trong \\(C\\) kh\u00f4ng \u00e2m. T\u01b0\u01a1ng t\u1ef1 v\u1edbi m\u1ecdi \\(0 \\leq k_2 &lt; k\\) th\u00ec \\(S_{k_2} - S_k \\geq 0\\).</p> <p>Nh\u1eadn th\u1ea5y khi n\u00e0y n\u1ebfu ta d\u1ecbch chu tr\u00ecnh \\(C\\) ban \u0111\u1ea7u sao cho \\(u_k\\) l\u00e0 \u0111\u1ec9nh xu\u1ea5t ph\u00e1t th\u00ec s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh \\(C' = u_k \\ldots u_m u_0 u_1 \\ldots u_{k - 1}\\) tho\u1ea3 y\u00eau c\u1ea7u do:</p> <ul> <li>V\u1edbi m\u1ecdi \\(k &lt; k_1 \\leq m\\), \\(W_{u_k,u_{k + 1}} + \\ldots + W_{u_{k_1 - 1},u_{k_1}} = S_{k_1} - S_k \\geq 0\\).</li> <li>V\u1edbi m\u1ecdi \\(0 \\leq k_2 &lt; k\\), \\(W_{u_k,u_{k + 1}} + \\ldots + W_{u_{m - 1},u_{m}} + W_{0,1} + \\ldots + W_{k_2 - 1,k_2} = (S_{m} - S_k) + S_{k_2} = S_{m} + (S_{k_2} - S_k) \\geq 0\\)</li> </ul>"},{"location":"algo/graph-theory/euler-cycle/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 202;\nconst int M = 40002;\n\nstruct Edge {\n    int target, id;\n\n    Edge(int _target, int _id): target(_target), id(_id) {}\n};\n\nint n, m, w[M], deg[N], edge_id[N][N], S[M];\nvector&lt;Edge&gt; adj[N];\nbool used_edge[M];\n\nlist&lt;int&gt; euler_walk(int u); // H\u00e0m euler_walk nh\u01b0 c\u00e0i \u0111\u1eb7t m\u1eabu\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 0; i &lt; m; ++i) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w[i];\n\n        // Th\u00eam c\u1ea1nh v\u00e0o \u0111\u1ed3 th\u1ecb\n        adj[u].emplace_back(v, i);\n        adj[v].emplace_back(u, i);\n\n        edge_id[u][v] = i;\n        edge_id[v][u] = i;\n\n        // C\u1eadp nh\u1eadt b\u1eadc c\u1ee7a \u0111\u1ec9nh\n        ++deg[u];\n        ++deg[v];\n    }\n\n    // N\u1ebfu \u0111\u1ed3 th\u1ecb c\u00f3 \u0111\u1ec9nh b\u1eadc l\u1ebb hi\u1ec3n nhi\u00ean kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u00e1p \u00e1n\n    for (int i = 1; i &lt;= n; ++i)\n        if (deg[i] % 2 != 0) {\n            cout &lt;&lt; -1;\n            return 0;\n        }\n\n    // T\u00ecm chu tr\u00ecnh Euler\n    list&lt;int&gt; cycle = euler_walk(1);\n    int cycle_size = cycle.size();\n\n    // N\u1ebfu c\u00e1c \u0111\u1ec9nh c\u00f3 b\u1eadc l\u1edbn h\u01a1n 0 trong \u0111\u1ed3 th\u1ecb kh\u00f4ng n\u1eb1m c\u00f9ng m\u1ed9t TPLT \n    // th\u00ec kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u00e1p \u00e1n\n    if (cycle_size &lt; m + 1) {\n        cout &lt;&lt; -1;\n        return 0;\n    }\n\n    // T\u1ea1o m\u1ea3ng S nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp\n    fill(S, S + M, 0);\n    int u = *cycle.begin();\n    auto it = ++cycle.begin();\n    for (int i = 1; it != cycle.end(); ++i, ++it) {\n        int v = *it;\n        S[i] = S[i - 1] + w[edge_id[u][v]];\n        u = v;\n    }\n\n    // T\u00ecm k sao cho S[k] -&gt; min\n    int k = 0;\n    for (int i = 1; i &lt; cycle_size; ++i)\n        if (S[i] &lt; S[k]) k = i;\n\n    // D\u1ecbch chu tr\u00ecnh sao cho b\u1eaft \u0111\u1ea7u \u1edf u[k]\n    list&lt;int&gt; ans;\n    ans.clear();\n    it = cycle.begin();\n    for (int i = 0; i &lt; k; ++i, ++it)\n        ans.push_back(*it);\n    ans.push_back(*it);\n    ans.insert(ans.begin(), it, (--cycle.end()));\n\n    for (int i : ans) cout &lt;&lt; i &lt;&lt; \" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/euler-cycle/#10040-ouroboros-snake","title":"10040 - Ouroboros Snake","text":""},{"location":"algo/graph-theory/euler-cycle/#tom-tat-e_2","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<p>S\u1ed1 Ouroboros \"b\u1eadc\" \\(n\\) l\u00e0 s\u1ed1 nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau: - \u0110\u1eb7t \\(2^n\\) bit nh\u1ecb ph\u00e2n th\u00e0nh m\u1ed9t v\u00f2ng tr\u00f2n. N\u1ebfu ta c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c \\(2^n\\) d\u00e3y nh\u1ecb ph\u00e2n \u0111\u1ed9 d\u00e0i \\(n\\) kh\u00e1c nhau th\u00ec s\u1ed1 \u0111\u00f3 l\u00e0 s\u1ed1 Ouroboros.</p> <p>H\u00e3y tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n v\u1edbi hai tham s\u1ed1 \\(n\\) v\u00e0 \\(k\\). V\u1edbi m\u1ed7i truy v\u1ea5n, cho bi\u1ebft bit th\u1ee9 \\(k\\) (\u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\)) trong s\u1ed1 Ouroboros \u0111\u1ed9 d\u00e0i \\(n\\) nh\u1ecf nh\u1ea5t theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n (\\(0 &lt; n &lt; 22\\), \\(0 \\leq k &lt; 2^n\\)).</p>"},{"location":"algo/graph-theory/euler-cycle/#loi-giai_2","title":"L\u1eddi gi\u1ea3i","text":"<p>B\u00e0i to\u00e1n n\u00e0y \u0111\u1ec1 c\u1eadp \u0111\u1ebfn kh\u00e1i ni\u1ec7m v\u1ec1 d\u00e3y de Bruijn. \u0110\u1ed9c gi\u1ea3 c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u k\u0129 h\u01a1n t\u1ea1i \u0111\u00e2y de Bruijn sequence - Wikipedia. B\u00e0i vi\u1ebft ch\u1ec9 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn nh\u1eefng \u00fd c\u1ea7n bi\u1ebft \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n.</p> <p>D\u00e3y de Bruijn \\(B(k, n)\\) b\u1eadc \\(n\\) c\u1ee7a m\u1ed9t t\u1eadp \\(S\\) g\u1ed3m \\(k\\) ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t d\u00e3y v\u00f2ng tr\u00f2n sao cho v\u1edbi m\u1ed7i d\u00e3y \\(T\\) \u0111\u1ed9 d\u00e0i \\(n\\) ch\u1ec9 g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \\(S\\), \\(T\\) xu\u1ea5t hi\u1ec7n \u0111\u00fang m\u1ed9t l\u1ea7n trong \\(B(k, n)\\) d\u01b0\u1edbi d\u1ea1ng m\u1ed9t d\u00e3y con li\u00ean ti\u1ebfp. Hi\u1ec3n nhi\u00ean \\(B(k, n)\\) c\u00f3 \\(k^n\\) ph\u1ea7n t\u1eed.</p> <p>\u0110\u1ed3 th\u1ecb de Bruijn l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m li\u00ean quan m\u1eadt thi\u1ebft \u0111\u1ebfn d\u00e3y de Bruijn. \u0110\u1ed3 th\u1ecb de Bruijn \\(n\\) chi\u1ec1u c\u1ee7a m\u1ed9t t\u1eadp \\(S\\) c\u00f3 \\(k\\) ph\u1ea7n t\u1eed l\u00e0 \u0111\u1ed3 th\u1ecb c\u00f3 \\(k^n\\) \u0111\u1ec9nh, m\u1ed7i \u0111\u1ec9nh \\(u\\) \u0111\u1ea1i di\u1ec7n cho m\u1ed9t d\u00e3y \\(T_u\\) \u0111\u1ed9 d\u00e0i \\(n\\) ch\u1ec9 g\u1ed3m c\u00e1c ph\u1ea7n t\u1eeb trong \\(S\\). Gi\u1eefa hai \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) c\u00f3 c\u1ea1nh m\u1ed9t chi\u1ec1u t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) n\u1ebfu h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(n - 1\\) c\u1ee7a \\(T_u\\) tr\u00f9ng v\u1edbi ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(n - 1\\) c\u1ee7a \\(T_v\\).</p> <p>M\u1ed9t t\u00ednh ch\u1ea5t quan tr\u1ecdng c\u1ea7n l\u01b0u \u00fd l\u00e0 v\u1edbi c\u00f9ng m\u1ed9t t\u1eadp \\(S\\), \u0111\u1ed3 th\u1ecb de Bruijn \\(n\\) chi\u1ec1u l\u00e0 \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1eddng (line graph) c\u1ee7a \u0111\u1ed3 th\u1ecb de Bruijn \\(n - 1\\) chi\u1ec1u.</p> <p>\u0110\u1ed3 th\u1ecb \u0111\u01b0\u1eddng \\(L(G)\\) c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G\\) l\u00e0 \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u01b0 sau: - V\u1edbi m\u1ed7i c\u1ea1nh trong \\(G\\), t\u1ea1o m\u1ed9t \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng tr\u00ean \\(L(G)\\) - Hai \u0111\u1ec9nh b\u1ea5t k\u00ec tr\u00ean \\(L(G)\\) \u0111\u01b0\u1ee3c n\u1ed1i b\u1edfi m\u1ed9t c\u1ea1nh v\u00f4 h\u01b0\u1edbng n\u1ebfu hai c\u1ea1nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi hai \u0111\u1ec9nh \u0111\u00f3 c\u00f3 \u0111\u1ec9nh chung tr\u00ean \\(G\\)</p> <p>Nh\u1eadn th\u1ea5y r\u1eb1ng d\u00e3y de Bruijn \\(B(k, n)\\) ch\u00ednh l\u00e0 m\u1ed9t chu tr\u00ecnh Hamilton c\u1ee7a \u0111\u1ed3 th\u1ecb de Bruijn \\(n\\) chi\u1ec1u v\u00e0 \\(k\\) ph\u1ea7n t\u1eed. M\u1ed9t h\u1ec7 qu\u1ea3 \u0111\u00e1ng l\u01b0u \u00fd c\u1ee7a c\u00e1c t\u00ednh ch\u1ea5t tr\u00ean l\u00e0 do chu tr\u00ecnh Hamilton c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb \\(G\\) l\u00e0 chu tr\u00ecnh Euler c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1eddng c\u1ee7a \\(G\\), n\u00ean \\(B(k, n)\\) c\u0169ng ch\u00ednh l\u00e0 chu tr\u00ecnh Euler c\u1ee7a \u0111\u1ed3 th\u1ecb de Bruijn \\(n - 1\\) chi\u1ec1u v\u00e0 \\(k\\) ph\u1ea7n t\u1eed.</p> <p>Trong b\u00e0i to\u00e1n n\u00e0y, v\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb \\(0 &lt; n &lt; 22\\), ta c\u00f3 th\u1ec3 t\u00ecm tr\u01b0\u1edbc d\u00e3y de Bruijn \\(B(n, 2)\\) th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t \u0111\u1ec3 c\u00f3 th\u1ec3 truy c\u1ee9u l\u1ea1i v\u1edbi m\u1ed7i truy v\u1ea5n. Ta t\u1eadn d\u1ee5ng h\u1ec7 qu\u1ea3 n\u00eau tr\u00ean \u0111\u1ec3 t\u00ecm s\u1ed1 Ouroboros b\u1eadc \\(n\\) th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t. Tr\u01b0\u1edbc ti\u00ean, ta d\u1ef1ng \u0111\u1ed3 th\u1ecb de Bruijn \\(n - 1\\) chi\u1ec1u v\u1edbi \\(2\\) ph\u1ea7n t\u1eed \\(0\\) v\u00e0 \\(1\\): bi\u1ec3u di\u1ec5n c\u00e1c s\u1ed1 nh\u1ecb ph\u00e2n t\u1eeb \\(0\\) \u0111\u1ebfn \\(2^n - 1\\) d\u01b0\u1edbi d\u1ea1ng m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 \\(2^n\\) \u0111\u1ec9nh, \u0111\u1ec9nh \\(i\\) th\u1ec3 hi\u1ec7n s\u1ed1 \\(i\\) d\u01b0\u1edbi d\u1ea1ng nh\u1ecb ph\u00e2n. Gi\u1eefa 2 \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) c\u1ee7a \u0111\u1ed3 th\u1ecb c\u00f3 c\u1ea1nh m\u1ed9t chi\u1ec1u t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) n\u1ebfu \\(u = b_1b_2b_3 \\ldots b_n\\) v\u00e0 \\(v = b_2b_3 \\ldots b_nb_{n + 1}\\). Ta \u0111\u1eb7t tr\u1ecdng s\u1ed1 c\u1ee7a c\u1ea1nh \\((u, v)\\) b\u1eb1ng v\u1edbi \\(b_{n + 1}\\).</p> <p>Nh\u01b0 v\u1eady ban \u0111\u1ea7u m\u1ed7i \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb c\u00f3 \\(2\\) c\u1ea1nh ra - \\(1\\) c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(0\\) v\u00e0 \\(1\\) c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(1\\) - v\u00e0 \\(2\\) c\u1ea1nh v\u00e0o c\u0169ng c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(0\\) v\u00e0 \\(1\\). Do m\u1ed7i \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb c\u00f3 b\u00e1n b\u1eadc ra b\u1eb1ng b\u00e1n b\u1eadc v\u00e0o n\u00ean \u0111\u1ed3 th\u1ecb v\u1eeba d\u1ef1ng l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb Euler. Khi n\u00e0y b\u00e0i to\u00e1n quy v\u1ec1 t\u00ecm chu tr\u00ecnh Euler c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u1ed3 th\u1ecb.</p> <p>Ta d\u00f9ng ph\u01b0\u01a1ng ph\u00e1p tham lam \u0111\u1ec3 gi\u1ea3i quy\u1ebft y\u00eau c\u1ea7u t\u00ecm th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t: - Khi t\u00ecm chu tr\u00ecnh xu\u1ea5t ph\u00e1t t\u1eeb m\u1ed9t \u0111\u1ec9nh, ta s\u1ebd \u01b0u ti\u00ean \u0111i qua c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(0\\) tr\u01b0\u1edbc. - Sau khi c\u00f3 m\u1ed9t chu tr\u00ecnh b\u1eaft \u0111\u1ea7u t\u1eeb m\u1ed9t \u0111\u1ec9nh, c\u00e1c c\u1ea1nh c\u00f2n l\u1ea1i trong \u0111\u1ed3 th\u1ecb t\u1ea1o th\u00e0nh c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng. Theo thu\u1eadt to\u00e1n, khi n\u00e0y ta t\u00ecm m\u1ed9t \u0111\u1ec9nh tr\u00ean chu tr\u00ecnh hi\u1ec7n t\u1ea1i c\u00f3 c\u1ea1nh ch\u01b0a th\u0103m v\u00e0 g\u1ecdi \u0111\u1ec7 quy ti\u1ebfp t\u1ee5c t\u00ecm chu tr\u00ecnh b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \u0111\u00f3. Do m\u1ed7i \u0111\u1ec9nh ch\u1ec9 c\u00f3 \\(2\\) c\u1ea1nh n\u00ean khi n\u00e0y n\u1ebfu \u0111\u1ec9nh c\u00f2n c\u1ea1nh ch\u01b0a th\u0103m, c\u1ea1nh \u0111\u00f3 ch\u1eafc ch\u1eafn c\u00f3 tr\u1ecdng s\u1ed1 \\(1\\). Do ta c\u1ea7n th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t n\u00ean ta mu\u1ed1n \u0111\u1eb7t c\u00e1c c\u1ea1nh tr\u1ecdng s\u1ed1 \\(1\\) c\u00e0ng v\u1ec1 cu\u1ed1i chu tr\u00ecnh c\u00e0ng t\u1ed1t. V\u00ec th\u1ebf ta s\u1ebd duy\u1ec7t chu tr\u00ecnh hi\u1ec7n t\u1ea1i t\u1eeb cu\u1ed1i v\u1ec1 \u0111\u1ea7u, v\u00e0 g\u1ecdi \u0111\u1ec7 quy th\u1ee7 t\u1ee5c n\u1ebfu c\u00f3 \u0111\u1ec9nh c\u00f3 c\u1ea1nh ch\u01b0a th\u0103m.</p> <p>V\u1edbi m\u1ed7i b\u1eadc \\(n\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian s\u1ebd l\u00e0 \\(O(2^n)\\). Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \u0111\u1ec3 ti\u1ec1n x\u1eed l\u00ed cho to\u00e0n b\u1ed9 b\u1eadc s\u1ebd l\u00e0 kho\u1ea3ng \\(1 + 2 + \\ldots + 2^{21} \\approx 2^{22}\\) ph\u00e9p t\u00ednh, \u0111\u1ee7 trong gi\u1edbi h\u1ea1n cho ph\u00e9p.</p>"},{"location":"algo/graph-theory/euler-cycle/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nstruct Edge {\n    int target, weight;\n\n    Edge(int _target, int _weight): target(_target), weight(_weight) {}\n};\n\nvector&lt;vector&lt;Edge&gt;&gt; build_graph(int n) {\n    vector&lt;vector&lt;Edge&gt;&gt; g(1 &lt;&lt; n);\n    for (int u = 0; u &lt; (1 &lt;&lt; n); ++u) {\n        // L\u01b0u \u00fd th\u00eam c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 1 tr\u01b0\u1edbc \u0111\u1ec3 \u01b0u ti\u00ean s\u1eed d\u1ee5ng c\u1ea1nh \n        // c\u00f3 tr\u1ecdng s\u1ed1 0 khi t\u00ecm chu tr\u00ecnh\n        g[u].emplace_back(((u &lt;&lt; 1) + 1) &amp; ((1 &lt;&lt; n) - 1), 1);\n        g[u].emplace_back((u &lt;&lt; 1) &amp; ((1 &lt;&lt; n) - 1), 0);\n    }\n    return g;\n}\n\nlist&lt;Edge&gt; euler_walk(int u, vector&lt;vector&lt;Edge&gt;&gt; &amp;g) {\n    list&lt;Edge&gt; ans;\n\n    while (!g[u].empty()) {\n        int v = g[u].back().target;\n        ans.push_back(g[u].back());\n        g[u].pop_back();\n        u = v;\n    }\n\n    // Duy\u1ec7t chu tr\u00ecnh hi\u1ec7n t\u1ea1i t\u1eeb cu\u1ed1i v\u1ec1 \u0111\u1ea7u v\u00e0 \n    // g\u1ecdi \u0111\u1ec7 quy n\u1ebfu c\u1ea7n thi\u1ebft\n    auto it = --ans.end();\n    while (it != ans.begin())\n    {\n        auto tit = it;\n        --tit;\n        ans.splice(it, euler_walk(tit-&gt;target, g));\n        it = tit;\n    }\n\n    return ans;\n}\n\nconst int N = 23;\n\nvector&lt;int&gt; ans[N];\n\nint main() {\n    int test;\n    cin &gt;&gt; test;\n    while (test--) {\n        int n, k;\n        cin &gt;&gt; n &gt;&gt; k;\n\n        if (ans[n].empty()) {\n            // D\u1ef1ng \u0111\u1ed3 th\u1ecb de Bruijn n - 1 chi\u1ec1u\n            vector&lt;vector&lt;Edge&gt;&gt; g = build_graph(n - 1);\n\n            // T\u00ecm chu tr\u00ecnh Euler tr\u00ean \u0111\u1ed3 th\u1ecb v\u1eeba d\u1ef1ng\n            list&lt;Edge&gt; seq = euler_walk(0, g);\n\n            // Sinh d\u00e3y de Bruijn n chi\u1ec1u t\u1eeb chu tr\u00ecnh Euler t\u00ecm \u0111\u01b0\u1ee3c\n            int cur = 0;\n            ans[n].clear();\n            for (auto it = seq.begin(); it != seq.end(); ++it) {\n                cur = ((cur &lt;&lt; 1) + it-&gt;weight) &amp; max((1 &lt;&lt; n) - 1, 1);\n                ans[n].push_back(cur);\n            }\n        }\n\n        cout &lt;&lt; ans[n][k] &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/euler-cycle/#vietnam-tst-2017-problem-2-day-2","title":"Vietnam TST 2017 - Problem 2 - Day 2","text":""},{"location":"algo/graph-theory/euler-cycle/#tom-tat-e_3","title":"T\u00f3m t\u1eaft \u0111\u1ec1","text":"<p>C\u00f3 \\(N \\leq 1000\\) \u0111o\u1ea1n th\u1eb3ng song song v\u1edbi tr\u1ee5c t\u1ecda \u0111\u1ed9 tr\u00ean m\u1eb7t ph\u1eb3ng. M\u1ed7i \u0111o\u1ea1n \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi hai \u0111i\u1ec3m \\((x, y)\\) (\\(x, y \\in \\mathbb{Z}\\), \\(-1000 \\leq x, y \\leq 1000\\)). In ra c\u00e1ch v\u1ebd sao cho c\u00f3 th\u1ec3 t\u00f4 m\u00e0u t\u1ea5t c\u1ea3 c\u00e1c \u0111o\u1ea1n th\u1eb3ng v\u00e0 s\u1ed1 l\u1ea7n ph\u1ea3i nh\u1ea5c b\u00fat l\u00e0 \u00edt nh\u1ea5t.</p>"},{"location":"algo/graph-theory/euler-cycle/#loi-giai_3","title":"L\u1eddi gi\u1ea3i","text":"<p>Ta xem m\u1ed7i \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng nh\u01b0 m\u1ed9t c\u1ea1nh tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng. Th\u00eam \\(1\\) \u0111\u1ec9nh \u1ea3o v\u00e0o \u0111\u1ed3 th\u1ecb. V\u1edbi m\u1ed7i \u0111\u1ec9nh b\u1eadc l\u1ebb trong \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u, n\u1ed1i \u0111\u1ec9nh \u0111\u00f3 v\u1edbi \u0111\u1ec9nh \u1ea3o v\u1eeba th\u00eam. Khi n\u00e0y \u0111\u1ed3 th\u1ecb ta \u0111ang c\u00f3 g\u1ed3m nhi\u1ec1u th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng, m\u1ed7i th\u00e0nh ph\u00e2n li\u00ean th\u00f4ng l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb Euler. T\u00ecm chu tr\u00ecnh Euler tr\u00ean t\u1eedng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng r\u1ed3i xo\u00e1 \u0111\u1ec9nh \u1ea3o v\u00e0 c\u00e1c c\u1ea1nh \u1ea3o \u0111\u00e3 th\u00eam kh\u1ecfi chu tr\u00ecnh t\u00ecm \u0111\u01b0\u1ee3c, ta thu \u0111\u01b0\u1ee3c c\u00e1ch v\u1ebd sao cho s\u1ed1 l\u1ea7n nh\u1ea5c b\u00fat l\u00e0 \u00edt nh\u1ea5t.</p>"},{"location":"algo/graph-theory/euler-cycle/#cai-at-mau_1","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1002;\n\nstruct Point {\n    int x, y;\n\n    Point(int _x, int _y): x(_x), y(_y) {}\n};\n\nstruct Edge {\n    Point source, target;\n    int id;\n    bool fake;\n\n    Edge(int x, int y, int u, int v, int _id, bool _fake = false):\n        source(x, y),\n        target(u, v),\n        id(_id),\n        fake(_fake) {}\n};\n\nstruct Graph {\n    int edges;\n    vector&lt;vector&lt;vector&lt;Edge&gt;&gt;&gt; graph;\n\n    Graph() {\n        edges = 0;\n        graph.clear();\n        graph.resize(N * 2);\n        for (int i = 0; i &lt; N * 2; ++i)\n            graph[i].resize(N * 2);\n    }\n\n    vector&lt;vector&lt;Edge&gt;&gt;&amp; operator[](int i) {\n        return graph[i];\n    }\n\n    void addEdge(int x, int y, int u, int v, bool fake = false) {\n        graph[x][y].emplace_back(x, y, u, v, edges, fake);\n        graph[u][v].emplace_back(u, v, x, y, edges, fake);\n        ++edges;\n    }\n\n    void addFakeEdges() {\n        for (int i = 0; i &lt; N * 2; ++i)\n            for (int j = 0; j &lt; N * 2; ++j) {\n                if (graph[i][j].size() % 2 != 0) {\n                    // N\u1ed1i \u0111\u1ec9nh b\u1eadc l\u1ebb v\u1edbi \u0111\u1ec9nh \u1ea3o\n                    addEdge(i, j, 0, 0, true);\n                }\n            }\n    }\n\n    void addLine(int x1, int y1, int x2, int y2) {\n        if (x1 &gt; x2) swap(x1, x2);\n        if (y1 &gt; y2) swap(y1, y2);\n\n        if (x1 == x2) { // n\u1ebfu \u0111o\u1ea1n th\u1eb3ng song song v\u1edbi tr\u1ee5c Oy\n            for (int i = y1; i &lt; y2; ++i) {\n                addEdge(N + x1, N + i, N + x2, N + i + 1);\n            }\n        } else { // n\u1ebfu \u0111o\u1ea1n th\u1eb3ng song song v\u1edbi tr\u1ee5c Ox\n            for (int i = x1; i &lt; x2; ++i) {\n                addEdge(N + i, N + y1, N + i + 1, N + y2);\n            }\n        }\n    }\n};\n\nint n; // S\u1ed1 \u0111o\u1ea1n th\u1eb3ng trong \u0111\u1ec1\nvector&lt;bool&gt; avail;\nGraph g = Graph();\nvector&lt;vector&lt;Point&gt;&gt; ans;\n\nostream&amp; operator&lt;&lt;(ostream&amp; out, Point p) {\n    out &lt;&lt; (p.x - N) &lt;&lt; \" \" &lt;&lt; (p.y - N);\n    return out;\n}\n\n// H\u00e0m euler_walk nh\u01b0 tr\u00ean\nlist&lt;Edge&gt; euler_walk(Point u, Graph &amp;g) {\n    list&lt;Edge&gt; ans;\n\n    while (!g[u.x][u.y].empty()) {\n        Edge e = g[u.x][u.y].back();\n        g[u.x][u.y].pop_back();\n        if (!avail[e.id]) continue;\n        avail[e.id] = false;\n        ans.emplace_back(e);\n        u = e.target;\n    }\n\n    auto it = --ans.end();\n    while (it != ans.begin())\n    {\n        list&lt;Edge&gt;::iterator tit = it;\n        --tit;\n        ans.splice(it, euler_walk(it-&gt;source, g));\n        it = tit;\n    }\n\n    return ans;\n}\n\nint main() {\n    // Kh\u1edfi t\u1ea1o m\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u1ea1nh \u0111\u00e3 \u0111i qua hay ch\u01b0a\n    avail.clear();\n\n    // \u0110\u1ecdc \u0111\u1ea7u v\u00e0o\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; ++i) {\n        int x, y, u, v;\n        cin &gt;&gt; x &gt;&gt; y &gt;&gt; u &gt;&gt; v;\n        g.addLine(x, y, u, v);\n    }\n\n    // Th\u00eam c\u1ea1nh \u1ea3o v\u00e0o \u0111\u1ed3 th\u1ecb\n    g.addFakeEdges();\n\n    avail.assign(g.edges, true);\n    ans.clear();\n\n    // Duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c TPLT trong \u0111\u1ed3 th\u1ecb\n    for (int i = 0; i &lt; N * 2; ++i) {\n        for (int j = 0; j &lt; N * 2; ++j) {\n            if (!g[i][j].empty()) {\n                // T\u00ecm chu tr\u00ecnh Euler tr\u00ean TPLT \u0111ang x\u00e9t\n                list&lt;Edge&gt; cycle = euler_walk(Point(i, j), g);\n\n                // Chia chu tr\u00ecnh t\u00ecm \u0111\u01b0\u1ee3c th\u00e0nh c\u00e1c n\u00e9t v\u1ebd \n                // ri\u00eang bi\u1ec7t d\u1ef1a v\u00e0o c\u00e1c c\u1ea1nh \u1ea3o\n                vector&lt;Point&gt; stroke;\n                stroke.clear();\n                for (list&lt;Edge&gt;::iterator it = cycle.begin(); it != cycle.end(); ++it) {\n                    if (it-&gt;fake) {\n                        if (!stroke.empty()) {\n                            ans.push_back(stroke);\n                            stroke.clear();\n                        }\n                    } else {\n                        if (stroke.empty()) {\n                            stroke.push_back(it-&gt;source);\n                        }\n                        stroke.push_back(it-&gt;target);\n                    }\n                }\n                if (!stroke.empty()) ans.push_back(stroke);\n            }\n        }\n    }\n\n    cout &lt;&lt; ans.size() &lt;&lt; \"\\n\";\n    for (vector&lt;Point&gt; v : ans) {\n        cout &lt;&lt; v.size() &lt;&lt; \"\\n\";\n        for (Point i : v) cout &lt;&lt; i &lt;&lt; \"\\n\";\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/euler-tour-on-tree/","title":"\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: * Cao Thanh H\u1eadu - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM</p> <p>Reviewer: * L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM * Tr\u1ecbnh Quang Anh - University of Melbourne * Nguy\u1ec5n Anh B\u1ea3o - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i * H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM * Ho\u00e0ng Xu\u00e2n Nh\u1eadt - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM * Ng\u00f4 Nh\u1eadt Quang - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean - \u0110HQGHN</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y (Euler tour on tree) l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p h\u1eefu d\u1ee5ng \u0111\u01b0\u1ee3c d\u00f9ng nhi\u1ec1u trong c\u00e1c b\u00e0i to\u00e1n tr\u00ean c\u00e2y. \u0110\u00e2y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c hi\u1ec3u l\u00e0 m\u1ed9t c\u00e1ch tr\u1ea3i ph\u1eb3ng c\u00e2y, t\u1eeb \u0111\u00f3 c\u00e1c thao t\u00e1c v\u1edbi c\u00e2y c\u00f3 th\u1ec3 chuy\u1ec3n v\u1ec1 thao t\u00e1c v\u1edbi d\u00e3y m\u1ed9t chi\u1ec1u.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Tr\u01b0\u1edbc khi t\u00ecm hi\u1ec3u s\u00e2u h\u01a1n v\u1ec1 \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y, m\u1eddi b\u1ea1n \u0111\u1ecdc xem qua b\u00e0i to\u00e1n sau \u0111\u00e2y.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#truy-van-tren-cay","title":"Truy v\u1ea5n tr\u00ean c\u00e2y","text":"<p>Cho m\u1ed9t c\u00e2y c\u00f3 \\(n\\) \u0111\u1ec9nh \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(n\\), \u0111\u1ec9nh \\(1\\) l\u00e0 \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y. Ban \u0111\u1ea7u, m\u1ed7i \u0111\u1ec9nh c\u1ee7a c\u00e2y c\u00f3 gi\u00e1 tr\u1ecb \\(0\\).</p> <p>Th\u1ef1c hi\u1ec7n c\u00e1c truy v\u1ea5n thu\u1ed9c m\u1ed9t trong hai lo\u1ea1i sau: * \\(1\\) \\(u\\) \\(x\\): Thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(u\\) th\u00e0nh \\(x\\). * \\(2\\) \\(u\\): T\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) (*).</p> <p>Gi\u1edbi h\u1ea1n: \\(n, q \\leq 10^5\\).</p> <p> <p> </p> <p> <p>H\u00ecnh \\(1\\)</p> <p></p> <p>(*): C\u00e2y con g\u1ed1c \\(u\\) l\u00e0 c\u00e2y t\u1ea1o b\u1edfi t\u1ea5t c\u1ea3 nh\u1eefng \u0111\u1ec9nh m\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh \u0111\u00f3 \u0111\u1ebfn \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y c\u00f3 ch\u1ee9a \\(u\\), v\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng c\u1ea1nh n\u1ed1i 2 \u0111\u1ec9nh m\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(2\\) \u0111\u1ec9nh \u0111\u00f3 \u0111\u1ebfn \u0111\u1ec9nh g\u1ed1c c\u00f3 ch\u1ee9a \u0111\u1ec9nh \\(u\\). V\u00ed d\u1ee5, c\u00e2y trong h\u00ecnh \\(1\\) c\u00f3 g\u1ed1c c\u00e2y l\u00e0 \u0111\u1ec9nh \\(1\\), v\u1edbi \\(u = 2\\) th\u00ec c\u00e2y con g\u1ed1c \\(u\\) bao g\u1ed3m c\u00e1c ph\u1ea7n m\u00e0u xanh l\u00e1 (c\u1ea3 c\u1ea1nh v\u00e0 \u0111\u1ec9nh).</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":"<p>\u00dd t\u01b0\u1edfng kh\u00e1 \u0111\u01a1n gi\u1ea3n: duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh con \u0111\u1ec3 t\u00ecm \u0111\u00e1p \u00e1n cho truy v\u1ea5n lo\u1ea1i \\(2\\).</p> <pre><code>const int N = 100000 + 5;\n\nint val[N]; // val[u] l\u00e0 gi\u00e1 tr\u1ecb \u0111\u1ec9nh u\nint parent[N]; // parent[u] l\u00e0 \u0111\u1ec9nh cha c\u1ee7a \u0111\u1ec9nh u\nvector&lt;int&gt; adj[N]; // adj[u] l\u00e0 danh s\u00e1ch c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi \u0111\u1ec9nh u\n\nvoid change(int u, int x) { // thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u0111\u1ec9nh u\n    val[u] = x;\n}\nlong long sum(int u) { // t\u1ed5ng c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a c\u00e2y con g\u1ed1c u\n    long long s = val[u]; \n    for (int v : adj[u]) { \n        if (v != parent[u]) { \n            s += sum(v);\n        }\n    }\n    return s;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: * V\u1edbi c\u00e1c truy v\u1ea5n lo\u1ea1i \\(1\\), ta ch\u1ec9 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho truy v\u1ea5n n\u00e0y l\u00e0 \\(O(1)\\). * V\u1edbi c\u00e1c truy v\u1ea5n lo\u1ea1i \\(2\\), ta c\u1ea7n duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\), trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i truy v\u1ea5n nh\u01b0 th\u1ebf l\u00ean \u0111\u1ebfn \\(O(n)\\).</p> <p>V\u1eady thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n \\times q)\\), qu\u00e1 l\u1edbn \u0111\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n n\u00e0y.</p> <p>Ph\u1ea7n sau \u0111\u00e2y s\u1ebd gi\u1edbi thi\u1ec7u v\u1ec1 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p r\u1ea5t \u0111\u1eb7c bi\u1ec7t, c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n \"h\u00f3c b\u00faa\" tr\u00ean.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#uong-i-euler-tren-cay","title":"\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y","text":""},{"location":"algo/graph-theory/euler-tour-on-tree/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>T\u1eeb \u0111\u1ed3 th\u1ecb c\u00e2y \\(T(V, E)\\) t\u1ea1o \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(T'(V, E')\\) theo c\u00e1ch sau: v\u1edbi m\u1ed7i c\u1ea1nh \\((u, v) \\in E\\), th\u00eam v\u00e0o \\(E'\\) hai c\u1ea1nh c\u00f3 h\u01b0\u1edbng \\((u, v)\\) v\u00e0 \\((v, u)\\).</p> <p>Th\u1ec3 hi\u1ec7n chu tr\u00ecnh Euler (**) tr\u00ean \u0111\u1ed3 th\u1ecb \\(T'\\) b\u1eb1ng m\u1ed9t d\u00e3y c\u00e1c \u0111\u1ec9nh, d\u00e3y \u0111\u1ec9nh n\u00e0y c\u0169ng bi\u1ec3u di\u1ec5n \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y \\(T\\).</p> <p>(**): Chu tr\u00ecnh Euler c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i tr\u00ean \u0111\u1ed3 th\u1ecb \u0111\u00f3, trong \u0111\u00f3 \u0111\u1ec9nh b\u1eaft \u0111\u1ea7u tr\u00f9ng v\u1edbi \u0111\u1ec9nh k\u1ebft th\u00fac c\u1ee7a \u0111\u01b0\u1eddng \u0111i, v\u00e0 m\u1ed7i c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i th\u0103m qua \u0111\u00fang m\u1ed9t l\u1ea7n.</p> <p> <p> </p> <p> <p>\\(2a\\) \\(2b\\)</p> <p></p> <p> <p>H\u00ecnh \\(2\\)</p> <p></p> <p>V\u1edbi \u0111\u1ed3 th\u1ecb c\u00e2y h\u00ecnh \\(2a\\), \u0111\u01b0\u1eddng \u0111i Euler bi\u1ec3u di\u1ec5n b\u1eb1ng d\u00e3y c\u00e1c \u0111\u1ec9nh: <code>1 2 3 2 4 2 1 5 1</code>, c\u0169ng l\u00e0 d\u00e3y c\u00e1c \u0111\u1ec9nh bi\u1ec3u di\u1ec5n chu tr\u00ecnh Euler tr\u00ean \u0111\u1ed3 th\u1ecb h\u00ecnh \\(2b\\).</p> <p> </p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#su-ton-tai-cua-uong-i-euler","title":"S\u1ef1 t\u1ed3n t\u1ea1i c\u1ee7a \u0111\u01b0\u1eddng \u0111i Euler","text":"<p>C\u00f3 th\u1ec3 ch\u1ee9ng minh r\u1eb1ng, chu tr\u00ecnh Euler lu\u00f4n t\u1ed3n t\u1ea1i trong \u0111\u1ed3 th\u1ecb \\(T'\\), hay \\(T'\\) l\u00e0 \u0111\u1ed3 th\u1ecb Euler.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#inh-ly","title":"\u0110\u1ecbnh l\u00fd","text":"<p>M\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 \u0111\u1ed3 th\u1ecb Euler n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu:</p> <ul> <li>V\u1edbi m\u1ecdi \u0111\u1ec9nh \\(u\\) thu\u1ed9c \u0111\u1ed3 th\u1ecb, b\u1eadc v\u00e0o c\u1ee7a \\(u\\) b\u1eb1ng b\u1eadc ra c\u1ee7a \\(u\\).</li> <li>M\u1ecdi \u0111\u1ec9nh c\u00f3 b\u1eadc kh\u00e1c \\(0\\) thu\u1ed9c c\u00f9ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</li> </ul>"},{"location":"algo/graph-theory/euler-tour-on-tree/#chung-minh","title":"Ch\u1ee9ng minh","text":"<p>D\u1ec5 th\u1ea5y, \\(T'\\) l\u00e0 \u0111\u1ed3 th\u1ecb li\u00ean th\u00f4ng \\((1)\\) v\u00ec \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng t\u1eeb m\u1ed9t c\u00e2y.</p> <p>M\u1ed7i khi x\u00e2y d\u1ef1ng \\(2\\) c\u1ea1nh c\u00f3 h\u01b0\u1edbng \\((u, v)\\) v\u00e0 \\((v, u)\\) trong \\(T'\\), b\u1eadc v\u00e0o c\u1ee7a \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) t\u0103ng l\u00ean \\(1\\), b\u1eadc ra c\u1ee7a \\(u\\) v\u00e0 \\(v\\) c\u0169ng t\u0103ng \\(1\\). V\u00ec v\u1eady v\u1edbi m\u1ecdi \u0111\u1ec9nh \\(p\\) trong \u0111\u1ed3 th\u1ecb \\(T'\\), b\u1eadc v\u00e0o c\u1ee7a \\(p\\) lu\u00f4n b\u1eb1ng b\u1eadc ra c\u1ee7a \\(p\\) \\((2)\\).</p> <p>T\u1eeb \\((1)\\) v\u00e0 \\((2)\\) c\u00f3 th\u1ec3 kh\u1eb3ng \u0111\u1ecbnh, \\(T'\\) l\u00e0 \u0111\u1ed3 th\u1ecb Euler.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Tham kh\u1ea3o \u0111o\u1ea1n code c++ d\u01b0\u1edbi \u0111\u00e2y: <pre><code>## include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 100000 + 5;\n\nint n, m = 0, root = 1;\nint h[N], st[N], en[N], tour[N];\nvector&lt;int&gt; adj[N];\n\n// Trong c\u00e1c gi\u00e1 tr\u1ecb b\u00ean tr\u00ean:\n// h[u] l\u00e0 kho\u1ea3ng c\u00e1ch t\u1eeb \u0111\u1ec9nh g\u1ed1c \u0111\u1ebfn \u0111\u1ec9nh u.\n// st[u] l\u00e0 v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a \u0111\u1ec9nh u trong m\u1ea3ng tour.\n// en[u] l\u00e0 v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng c\u1ee7a \u0111\u1ec9nh u trong m\u1ea3ng tour.\n\nvoid input() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt; n; ++i) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n}\n\nvoid add(int u) {\n    tour[++m] = u;\n    en[u] = m;\n}\n\nvoid dfs(int u, int parent_of_u) {\n    h[u] = h[parent_of_u] + 1;\n    add(u);\n    st[u] = m;\n    for (int v : adj[u]) {\n        if (v != parent_of_u) {\n            dfs(v, u);\n        }\n    }\n    if (u != root) add(parent_of_u);\n}\n\nint main() {\n    input();\n    dfs(root, 0);\n    return 0;\n}\n</code></pre></p> <p>M\u1ed7i khi truy c\u1eadp m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u1ef3, ta th\u00eam \u0111\u1ec9nh \u0111\u00f3 v\u00e0o \u0111\u01b0\u1eddng \u0111i. Tr\u01b0\u1edbc khi r\u1eddi kh\u1ecfi m\u1ed9t \u0111\u1ec9nh (tr\u1edf v\u1ec1 cha), n\u1ebfu \u0111\u1ec9nh \u0111\u00f3 kh\u00e1c g\u1ed1c c\u1ee7a c\u00e2y, ta th\u00eam cha c\u1ee7a \u0111\u1ec9nh v\u00e0o \u0111\u01b0\u1eddng \u0111i.</p> <p>\u00c1p d\u1ee5ng code tr\u00ean v\u00e0o \u0111\u1ed3 th\u1ecb h\u00ecnh \\(2a\\), m\u1ea3ng \\(tour\\) cu\u1ed1i c\u00f9ng ch\u1ee9a c\u00e1c gi\u00e1 tr\u1ecb: <code>1 2 3 2 4 2 1 5 1</code>, \u0111\u00e2y ch\u00ednh l\u00e0 \u0111\u01b0\u1eddng \u0111i Euler theo \u0111\u1ecbnh ngh\u0129a ban \u0111\u1ea7u.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#tinh-chat","title":"T\u00ednh ch\u1ea5t","text":"<p>Nh\u01b0 \u0111\u00e3 gi\u1edbi thi\u1ec7u, \u1ee9ng d\u1ee5ng ch\u00ednh c\u1ee7a Euler tour l\u00e0 tr\u1ea3i ph\u1eb3ng c\u00e2y, t\u1eeb \u0111\u00f3 b\u00e0i to\u00e1n tr\u00ean c\u00e2y chuy\u1ec3n v\u1ec1 b\u00e0i to\u00e1n v\u1edbi d\u00e3y s\u1ed1. V\u1eady c\u1ee5 th\u1ec3 m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa c\u00e2y v\u1edbi d\u00e3y s\u1ed1 l\u00e0 nh\u01b0 th\u1ebf n\u00e0o, m\u1eddi b\u1ea1n \u0111\u1ecdc c\u00f9ng t\u00ecm hi\u1ec3u.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#cac-moi-quan-he-ve-vi-tri","title":"C\u00e1c m\u1ed1i quan h\u1ec7 v\u1ec1 v\u1ecb tr\u00ed","text":""},{"location":"algo/graph-theory/euler-tour-on-tree/#co-so","title":"C\u01a1 s\u1edf","text":"<p>Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t c\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a \u0111\u01b0\u1eddng \u0111i Euler.</p> <p>\u0110\u1ec9nh \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu \\(st[u] \\leq st[v] \\leq en[v] \\leq en[u]\\). </p> <p>\u0110\u1ec9nh \\(v\\) kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) v\u00e0 \\(u\\) kh\u00f4ng thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\), hay \\(u\\) v\u00e0 \\(v\\) kh\u00f4ng c\u00f3 quan h\u1ec7 t\u1ed5 ti\u00ean n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu hai \u0111o\u1ea1n \\(st[u]..en[u]\\) v\u00e0 \\(st[v]..en[v]\\) kh\u00f4ng giao nhau, ngh\u0129a l\u00e0 \\(en[u] &lt; st[v]\\) ho\u1eb7c \\(en[v] &lt; st[u]\\).</p> <p>T\u1eeb hai t\u00ednh ch\u1ea5t tr\u00ean ta nh\u1eadn x\u00e9t \u0111\u01b0\u1ee3c r\u1eb1ng, v\u1edbi hai \u0111\u1ec9nh \\(u\\), \\(v\\) b\u1ea5t k\u00ec, hai \u0111o\u1ea1n \\(st[u]..en[u]\\) v\u00e0 \\(st[v]..en[v]\\) ho\u1eb7c l\u00e0 kh\u00f4ng giao nhau, ho\u1eb7c m\u1ed9t \u0111o\u1ea1n ho\u00e0n to\u00e0n bao \u0111o\u1ea1n c\u00f2n l\u1ea1i.</p> <p> <p> </p> <p> <p>H\u00ecnh \\(3\\)</p> <p></p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#giai-thich","title":"Gi\u1ea3i th\u00edch","text":"<p>T\u1eeb khi th\u0103m \u0111\u1ec9nh \\(u\\) l\u1ea7n \u0111\u1ea7u ti\u00ean \u0111\u1ebfn khi th\u0103m \u0111\u1ec9nh \\(u\\) l\u1ea7n cu\u1ed1i c\u00f9ng, \u0111\u01b0\u1eddng \u0111i Euler \u0111i qua v\u00e0 ch\u1ec9 \u0111i qua c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\). V\u1eady v\u1edbi m\u1ecdi \u0111\u1ec9nh \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\), m\u1ecdi v\u1ecb tr\u00ed c\u1ee7a \\(v\\) \u0111\u1ec1u thu\u1ed9c  \u0111o\u1ea1n \\(st[u]..en[u]\\) (t\u00ednh ch\u1ea5t th\u1ee9 nh\u1ea5t).</p> <p>V\u1edbi hai \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) kh\u00f4ng c\u00f3 quan h\u1ec7 t\u1ed5 ti\u00ean th\u00ec \u0111\u1ec9nh \\(u\\) \u0111\u01b0\u1ee3c th\u0103m l\u1ea7n cu\u1ed1i c\u00f9ng tr\u01b0\u1edbc khi \u0111\u1ec9nh \\(v\\) \u0111\u01b0\u1ee3c th\u0103m l\u1ea7n \u0111\u1ea7u ti\u00ean (ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i, \u0111\u1ec9nh \\(v\\) \u0111\u01b0\u1ee3c th\u0103m l\u1ea7n cu\u1ed1i c\u00f9ng tr\u01b0\u1edbc khi \u0111\u1ec9nh \\(u\\) \u0111\u01b0\u1ee3c th\u0103m l\u1ea7n \u0111\u1ea7u ti\u00ean). V\u1eady trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y \\(en[u] &lt; st[v]\\) ho\u1eb7c \\(en[v] &lt; st[u]\\) (t\u00ednh ch\u1ea5t th\u1ee9 hai).</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/graph-theory/euler-tour-on-tree/#cap-nhat-truy-van-oi-voi-inh-va-cay-con","title":"C\u1eadp nh\u1eadt, truy v\u1ea5n \u0111\u1ed1i v\u1edbi \u0111\u1ec9nh v\u00e0 c\u00e2y con","text":"<p>\u0110\u00e2y l\u00e0 \u1ee9ng d\u1ee5ng ph\u1ed5 bi\u1ebfn nh\u1ea5t c\u1ee7a \u0111\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y. </p> <p>\u1ede \u1ee9ng d\u1ee5ng n\u00e0y, ta c\u1ea7n thay \u0111\u1ed5i \u0111\u01b0\u1eddng \u0111i Euler m\u1ed9t ch\u00fat.</p> <p>G\u1ecdi \\(tour\\) l\u00e0 d\u00e3y bi\u1ec3u di\u1ec5n \u0111\u01b0\u1eddng \u0111i Euler. V\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\), x\u00f3a t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb \\(u\\) xu\u1ea5t hi\u1ec7n trong \\(tour\\) ngo\u1ea1i tr\u1eeb gi\u00e1 tr\u1ecb \\(u\\) \u0111\u1ea7u ti\u00ean.</p> <p>V\u00ed d\u1ee5, c\u00f3 d\u00e3y \\(tour\\) ban \u0111\u1ea7u g\u1ed3m c\u00e1c gi\u00e1 tr\u1ecb:</p> <p><pre><code>1 2 3 2 4 2 1 5 1\n=&gt; 1 2 3 (2) 4 (2) (1) 5 (1)\n</code></pre> C\u00e1c ph\u1ea7n t\u1eed trong ngo\u1eb7c l\u00e0 c\u00e1c ph\u1ea7n t\u1eed c\u1ea7n x\u00f3a, sau khi x\u00f3a, d\u00e3y \\(tour\\) c\u00f2n l\u1ea1i: <pre><code>1 2 3 4 5\n</code></pre></p> <p>Ta c\u0169ng c\u00f3 th\u1ec3 t\u00ecm tr\u1ef1c ti\u1ebfp d\u00e3y \\(tour\\) (thay v\u00ec thay \u0111\u1ed5i t\u1eeb d\u00e3y \u0111\u01b0\u1eddng \u0111i Euler ban \u0111\u1ea7u) nh\u01b0 sau:</p> <p><pre><code>void dfs(int u, int parent_of_u) {\n    tour[++m] = u;\n    st[u] = m;\n\n    for (int v : adj[u]) {\n        if (v != parent_of_u) {\n            dfs(v, u);\n        }\n    }\n\n    en[u] = m;\n}\n</code></pre> Trong \u0111\u00f3, \\(en[u]\\) l\u00e0 v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng nh\u1ea5t c\u1ee7a m\u1ed9t \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\).</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#co-so_1","title":"C\u01a1 s\u1edf","text":"<p>Trong d\u00e3y \\(tour\\), t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) n\u1eb1m li\u00ean ti\u1ebfp t\u1eeb v\u1ecb tr\u00ed \\(st[u]\\) \u0111\u1ebfn v\u1ecb tr\u00ed \\(en[u]\\). T\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 v\u1ecb tr\u00ed thu\u1ed9c \u0111o\u1ea1n \\(st[u]..en[u]\\) \u0111\u1ec1u thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\).</p> <p>L\u01b0u \u00fd r\u1eb1ng sau khi thay \u0111\u1ed5i nh\u01b0 tr\u00ean, m\u1ed7i \u0111\u1ec9nh ch\u1ec9 xu\u1ea5t hi\u1ec7n trong \\(tour\\) \u0111\u00fang \\(1\\) l\u1ea7n, v\u00e0 \u00fd ngh\u0129a m\u1ea3ng \\(en\\) c\u0169ng \u0111\u00e3 \u0111\u01b0\u1ee3c thay \u0111\u1ed5i.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#giai-thich_1","title":"Gi\u1ea3i th\u00edch","text":"<p>\u0110\u00e2y th\u1ef1c ch\u1ea5t l\u00e0 m\u1ed9t c\u00e1ch ph\u00e1t bi\u1ec3u kh\u00e1c c\u1ee7a t\u00ednh ch\u1ea5t \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c n\u00eau \u1edf ph\u1ea7n tr\u01b0\u1edbc: \u0110\u1ec9nh \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu \\(st[u] \\leq st[v] \\leq en[v] \\leq en[u]\\).</p> <p>V\u00e0 nh\u1eadn x\u00e9t r\u1eb1ng t\u00ednh ch\u1ea5t n\u00e0y gi\u1eef nguy\u00ean t\u00ednh \u0111\u00fang \u0111\u1eafn v\u1edbi d\u00e3y \\(tour\\) \u0111\u00e3 thay \u0111\u1ed5i.</p> <p>V\u1eady v\u1ec1 c\u01a1 b\u1ea3n, m\u1ee5c \u0111\u00edch c\u1ee7a vi\u1ec7c bi\u1ebfn \u0111\u1ed5i d\u00e3y \\(tour\\) n\u00eau tr\u00ean l\u00e0 \u0111\u1ec3 m\u1ed7i \u0111\u1ec9nh ch\u1ec9 xu\u1ea5t hi\u1ec7n \u0111\u00fang \\(1\\) l\u1ea7n, s\u1ebd ti\u1ec7n h\u01a1n trong x\u1eed l\u00fd.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>T\u1eeb t\u00ednh ch\u1ea5t \u0111\u00f3, d\u1ec5 th\u1ea5y r\u1eb1ng c\u00e1c thao t\u00e1c v\u1edbi c\u00e2y con c\u00f3 th\u1ec3 chuy\u1ec3n th\u00e0nh thao t\u00e1c v\u1edbi \u0111o\u1ea1n.</p> <p>C\u1ee5 th\u1ec3, thao t\u00e1c c\u1eadp nh\u1eadt ho\u1eb7c truy v\u1ea5n \u0111\u1ed1i v\u1edbi c\u00e2y con g\u1ed1c \\(u\\) c\u00f3 th\u1ec3 chuy\u1ec3n th\u00e0nh thao t\u00e1c t\u01b0\u01a1ng \u1ee9ng \u0111\u1ed1i v\u1edbi \u0111o\u1ea1n \\(st[u]..en[u]\\).</p> <p>V\u00ed d\u1ee5:  Trong \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y, h\u00e0m \\(change(u, x)\\) cho ph\u00e9p t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh \\(u\\) th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb. H\u00e0m \\(sum(u)\\) cho ph\u00e9p t\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) (s\u1eed d\u1ee5ng ki\u1ec3u d\u1eef li\u1ec7u Fenwick Tree - c\u00e2y BIT).</p> <pre><code>const int N = 100000 + 5;\n\nint bit[N]; // c\u00e2y BIT\nint st[N], en[N]; // c\u00e1c m\u1ea3ng l\u01b0u v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean / sau c\u00f9ng c\u1ee7a \u0111\u1ec9nh, l\u01b0u \u00fd r\u1eb1ng m\u1ea3ng en \u0111\u00e3 c\u00f3 s\u1ef1 thay \u0111\u1ed5i \u00fd ngh\u0129a\n\n// BIT\nvoid add(int i, int x) {\n    for (; i &lt;= n; i += i &amp; (-i)) bit[i] += x;\n}\nlong long sumPrefix(int i) {\n    long long ans = 0;\n    for (; i &gt; 0; i &amp;= (i - 1)) ans += bit[i];\n    return ans;\n}\n\n// Truy v\u1ea5n\nvoid change(int u, int v) {\n    // thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u0111\u1ec9nh u\n    add(st[u], x);\n}\nlong long sumSubtree(int u) {\n    // t\u00ednh t\u1ed1ng \u0111o\u1ea1n st[u]..en[u]\n    return sumPrefix(en[u]) - sumPrefix(st[u] - 1);\n}\n</code></pre>"},{"location":"algo/graph-theory/euler-tour-on-tree/#cap-nhat-uong-i-truy-van-inh","title":"C\u1eadp nh\u1eadt \u0111\u01b0\u1eddng \u0111i - truy v\u1ea5n \u0111\u1ec9nh","text":"<p>Trong m\u1ed9t b\u00e0i to\u00e1n c\u1ea7n c\u00e1c thao t\u00e1c thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh tr\u00ean \u0111\u01b0\u1eddng \u0111i v\u00e0 t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh, ta c\u0169ng c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u1ee9ng d\u1ee5ng tr\u00ean \u0111\u1ec3 gi\u1ea3i quy\u1ebft.</p> <p>G\u1ecdi: + \\(par[u]\\) l\u00e0 cha tr\u1ef1c ti\u1ebfp c\u1ee7a \u0111\u1ec9nh \\(u\\). + \\(LCA(u, v)\\) l\u00e0 t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\). + \\(b[u]\\) l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb kh\u00e1c c\u1ee7a \u0111\u1ec9nh \\(u\\). Ban \u0111\u1ea7u, \\(b[u] = 0\\) v\u1edbi m\u1ecdi \\(u\\).</p> <p>Gi\u1ea3 s\u1eed c\u1ea7n t\u0103ng gi\u00e1 tr\u1ecb m\u1ed7i \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb, th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc nh\u01b0 sau: 1. T\u0103ng \\(b[u]\\) th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb. 2. T\u0103ng \\(b[v]\\) th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb 3. Gi\u1ea3m \\(b[LCA(u, v)]\\) \u0111i \\(x\\) \u0111\u01a1n v\u1ecb. 4. Gi\u1ea3m \\(b[par[LCA(u, v)]]\\) \u0111i \\(x\\) \u0111\u01a1n v\u1ecb</p> <p>\u0110\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh \\(u\\), ta t\u00ednh t\u1ed5ng c\u00e1c gi\u00e1 tr\u1ecb \\(b[v]\\) m\u00e0 \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\).</p> <p>V\u1edbi c\u00e1ch t\u00ednh nh\u01b0 v\u1eady, th\u00ec vi\u1ec7c c\u1eadp nh\u1eadt b\u00ean tr\u00ean s\u1ebd t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a nh\u1eefng \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) th\u00eam \u0111\u00fang \\(x\\) \u0111\u01a1n v\u1ecb, gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh c\u00f2n l\u1ea1i kh\u00f4ng thay \u0111\u1ed5i.</p> <p>Th\u1eadt v\u1eady, sau m\u1ed7i l\u1ea7n t\u0103ng \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\), x\u00e9t \u0111\u1ec9nh \\(p\\):</p> <ul> <li>N\u1ebfu \\(p\\) = \\(LCA(u, v)\\), gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(p\\) t\u0103ng th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb do \u1ea3nh h\u01b0\u1edfng c\u1ee7a c\u00e1c b\u01b0\u1edbc \\(1, 2, 3\\).</li> <li>N\u1ebfu \\(p\\) thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) nh\u01b0ng kh\u00f4ng ph\u1ea3i \\(LCA(u, v)\\), gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(p\\) t\u0103ng th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb do \u1ea3nh h\u01b0\u1edfng c\u1ee7a m\u1ed9t trong hai b\u01b0\u1edbc \\(1, 2\\).</li> <li>N\u1ebfu \\(p\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(LCA(u, v)\\) (\\(p \\ne LCA(u, v)\\)), gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh \\(p\\) kh\u00f4ng thay \u0111\u1ed5i do ch\u1ecbu \u1ea3nh h\u01b0\u1edfng c\u1ee7a c\u1ea3 b\u1ed1n b\u01b0\u1edbc \\(1, 2, 3, 4\\).</li> <li>C\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i, gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(p\\) kh\u00f4ng thay \u0111\u1ed5i v\u00ec kh\u00f4ng b\u1ecb \u1ea3nh h\u01b0\u1edfng b\u1edfi b\u1ea5t k\u00ec b\u01b0\u1edbc n\u00e0o.</li> </ul> <p>L\u01b0u \u00fd r\u1eb1ng, gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(u\\) b\u1ecb thay \u0111\u1ed5i khi m\u1ed9t gi\u00e1 tr\u1ecb \\(b[v]\\) m\u00e0 \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\) b\u1ecb thay \u0111\u1ed5i.</p> <p>C\u00e1c thao t\u00e1c \u0111\u1ed1i v\u1edbi \\(b\\) l\u00e0 c\u00e1c thao t\u00e1c d\u1ea1ng \"c\u1eadp nh\u1eadt \u0111\u1ec9nh, truy v\u1ea5n c\u00e2y con\", v\u00ec v\u1eady c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng gi\u1ea3i quy\u1ebft b\u1eb1ng thu\u1eadt to\u00e1n \u0111\u00e3 n\u00eau tr\u01b0\u1edbc \u0111\u00f3.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#cap-nhat-inh-truy-van-uong-i","title":"C\u1eadp nh\u1eadt \u0111\u1ec9nh - truy v\u1ea5n \u0111\u01b0\u1eddng \u0111i","text":"<p>\u1ee8ng d\u1ee5ng cho ph\u00e9p thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u0111\u1ec9nh v\u00e0 t\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i (ng\u1eafn nh\u1ea5t) gi\u1eefa hai \u0111\u1ec9nh b\u1ea5t k\u00ec tr\u00ean c\u00e2y.</p> <p>B\u00e0i to\u00e1n n\u00e0y c\u00f3 m\u1ed9t c\u00e1ch gi\u1ea3i kh\u00e1 ph\u1ed5 bi\u1ebfn nh\u01b0 sau: t\u1ea1o m\u1ea3ng \\(f\\), trong \u0111\u00f3 \\(f[u]\\) l\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \u0111\u1ec9nh g\u1ed1c \u0111\u1ebfn \u0111\u1ec9nh \\(u\\). V\u1eady khi t\u0103ng gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(u\\), ta c\u1ea7n t\u0103ng c\u00e1c gi\u00e1 tr\u1ecb \\(f[v]\\) m\u00e0 \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\). V\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i gi\u1eefa hai \u0111\u1ec9nh \\(u\\), \\(v\\) b\u1ea5t k\u00ec l\u00e0 \\(f[u] + f[v] - f[par[LCA(u, v)]\\), trong \u0111\u00f3 \\(par[LCA(u, v)]\\) l\u00e0 cha c\u1ee7a t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\).</p> <p>Tuy nhi\u00ean \u1ee9ng d\u1ee5ng n\u00e0y mu\u1ed1n \u0111\u1ec1 c\u1eadp \u0111\u1ebfn m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p kh\u00e1c kh\u00e1 th\u00fa v\u1ecb, m\u1eddi b\u1ea1n \u0111\u1ecdc c\u00f9ng t\u00ecm hi\u1ec3u.</p> <p>Tr\u01b0\u1edbc h\u1ebft, ta c\u0169ng c\u1ea7n thay \u0111\u1ed5i \u0111\u01b0\u1eddng \u0111i Euler nh\u01b0 \u1ee9ng d\u1ee5ng tr\u01b0\u1edbc, c\u1ee5 th\u1ec3:</p> <p>Theo \u0111\u01b0\u1eddng \u0111i Euler, ta th\u00eam \u0111\u1ec9nh \\(u\\) v\u00e0o d\u00e3y \\(tour\\) khi th\u0103m \u0111\u1ec9nh \\(u\\) l\u1ea7n \u0111\u1ea7u ti\u00ean v\u00e0 khi th\u0103m \u0111\u1ec9nh \\(u\\) l\u1ea7n cu\u1ed1i c\u00f9ng.</p> <p>(N\u1ebfu \u0111\u1ec9nh \\(u\\) l\u00e0 l\u00e1, ta th\u00eam \u0111\u1ec9nh \\(u\\) hai l\u1ea7n li\u00ean ti\u1ebfp v\u00ec l\u1ea7n th\u0103m \u0111\u1ea7u ti\u00ean c\u0169ng l\u00e0 l\u1ea7n th\u0103m cu\u1ed1i c\u00f9ng).</p> <p>V\u00ed d\u1ee5 <pre><code>1 2 3 2 4 2 1 5 1\n=&gt; 1 2 3 3 4 4 2 5 5 1\n</code></pre> C\u0169ng c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u1ea3ng \\(tour\\) tr\u1ef1c ti\u1ebfp nh\u01b0 sau:</p> <pre><code>void dfs(int u, int parent_of_u) {\n    tour[++m] = u;\n    st[u] = m;    \n\n    for (int v : adj[u]) {\n        if (v != parent_of_u) {\n            dfs(v, u);\n        }\n    }\n\n    tour[++m] = u;\n    en[u] = m;\n}\n</code></pre> <p>\\(st[u]\\) l\u00e0 v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(u\\), \\(en[u]\\) l\u00e0 v\u1ecb tr\u00ed th\u1ee9 hai c\u1ee7a \u0111\u1ec9nh \\(u\\). M\u1ed7i \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n \u0111\u00fang \\(2\\) l\u1ea7n.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#co-so_2","title":"C\u01a1 s\u1edf","text":"<p>V\u1edbi hai \u0111\u1ec9nh \\(u\\), \\(v\\) b\u1ea5t k\u00ec m\u00e0 \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\), x\u00e9t \u0111o\u1ea1n c\u00e1c gi\u00e1 tr\u1ecb t\u1eeb v\u1ecb tr\u00ed \\(st[u]\\) \u0111\u1ebfn v\u1ecb tr\u00ed \\(st[v]\\) c\u1ee7a d\u00e3y \\(tour\\), ta c\u00f3:</p> <ul> <li>C\u00e1c \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) xu\u1ea5t hi\u1ec7n \u0111\u00fang \\(1\\) l\u1ea7n trong \u0111o\u1ea1n, c\u0169ng ch\u00ednh l\u00e0 l\u1ea7n \u0111\u1ea7u ti\u00ean \u0111\u1ec9nh \u0111\u00f3 xu\u1ea5t hi\u1ec7n trong d\u00e3y \\(d\\).</li> <li>C\u00e1c \u0111\u1ec9nh kh\u00f4ng thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) s\u1ebd kh\u00f4ng xu\u1ea5t hi\u1ec7n l\u1ea7n n\u00e0o, ho\u1eb7c xu\u1ea5t hi\u1ec7n \u0111\u00fang hai l\u1ea7n trong \u0111o\u1ea1n.</li> </ul> <p>V\u00ed d\u1ee5:</p> <p> </p> <p> <p>H\u00ecnh \\(4\\)</p> <p></p> <p>C\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u kh\u00e1c m\u00e0u \u0111en l\u00e0 c\u00e1c \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n trong \u0111o\u1ea1n \\(st[1]..st[4]\\) c\u1ee7a d\u00e3y.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#giai-thich_2","title":"Gi\u1ea3i th\u00edch","text":"<p>Do \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) ta c\u00f3 \\(st[u] \\leq st[v] \\leq en[v] \\leq en[u]\\).</p> <p>Tr\u01b0\u1edbc ti\u00ean, ta kh\u00f4ng c\u1ea7n quan t\u00e2m \u0111\u1ebfn nh\u1eefng \u0111\u1ec9nh kh\u00f4ng xu\u1ea5t hi\u1ec7n trong \u0111o\u1ea1n \\(st[u]..st[v]\\) c\u1ee7a d\u00e3y \\(d\\), v\u00ec nh\u1eefng \u0111o\u1ea1n thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean c\u00e2y th\u00ec ch\u1eafc ch\u1eafn xu\u1ea5t hi\u1ec7n trong \u0111o\u1ea1n n\u00e0y.</p> <p>X\u00e9t \u0111\u1ec9nh \\(p\\) xu\u1ea5t hi\u1ec7n trong \u0111o\u1ea1n \\(st[u]..st[v]\\) c\u1ee7a d\u00e3y \\(d\\):</p> <ul> <li>N\u1ebfu \\(p\\) thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean c\u00e2y, ngh\u0129a l\u00e0 \\(v\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(p\\) v\u00e0 \\(p\\) thu\u1ed9c c\u00e2y con g\u1ed1c \\(u\\), v\u1eady \\(st[u] \\leq st[p] \\leq st[v] &lt; en[p]\\), \\(p\\) xu\u1ea5t hi\u1ec7n \u0111\u00fang \\(1\\) l\u1ea7n tr\u00ean \u0111o\u1ea1n \\(st[u]..st[v]\\), c\u0169ng l\u00e0 l\u1ea7n th\u1ee9 nh\u1ea5t \u0111\u1ec9nh \\(p\\) xu\u1ea5t hi\u1ec7n trong d\u00e3y \\(d\\).</li> <li>N\u1ebfu \\(p\\) kh\u00f4ng thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean c\u00e2y, ngh\u0129a l\u00e0 \\(p\\) kh\u00f4ng c\u00f3 quan h\u1ec7 t\u1ed5 ti\u00ean v\u1edbi \\(v\\), ta c\u00f3 \\(st[u] &lt; st[p] &lt; en[p] &lt; st[v]\\), v\u1eady \\(p\\) xu\u1ea5t hi\u1ec7n \u0111\u1ee7 \\(2\\) l\u1ea7n tr\u00ean \u0111o\u1ea1n.</li> </ul>"},{"location":"algo/graph-theory/euler-tour-on-tree/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n","text":"<p>\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 t\u1ea1o m\u1ea3ng \\(f\\) v\u1edbi \\(f[st[u]]\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a \u0111\u1ec9nh \\(u\\), v\u00e0 \\(f[en[u]] = -f[st[u]]\\). V\u00ec v\u1eady khi t\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb \u0111o\u1ea1n \\(st[u]..st[v]\\) c\u1ee7a m\u1ea3ng \\(f\\), c\u00e1c \u0111\u1ec9nh \\(p\\) xu\u1ea5t hi\u1ec7n \\(2\\) l\u1ea7n s\u1ebd t\u1ef1 \"tri\u1ec7t ti\u00eau\" do \\(f[st[p]] + f[en[p]] = 0\\), ch\u1ec9 c\u00f2n l\u1ea1i t\u1ed5ng c\u00e1c \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n m\u1ed9t l\u1ea7n - c\u00e1c \u0111\u1ec9nh thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\).</p> <p>Ta c\u00f3 thu\u1eadt to\u00e1n nh\u01b0 sau: + Khi t\u0103ng gi\u00e1 tr\u1ecb \u0111\u1ec9nh \\(u\\) th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb, ta t\u0103ng gi\u00e1 tr\u1ecb t\u1ea1i v\u1ecb tr\u00ed \\(st[u]\\) th\u00eam \\(x\\) \u0111\u01a1n v\u1ecb, gi\u1ea3m gi\u00e1 tr\u1ecb t\u1ea1i v\u1ecb tr\u00ed \\(en[u]\\) \u0111i \\(x\\) \u0111\u01a1n v\u1ecb. + \u0110\u1ec3 t\u00ednh t\u1ed5ng gi\u00e1 tr\u1ecb c\u00e1c \u0111\u1ec9nh tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\), ta t\u00ednh t\u1ed5ng c\u00e1c gi\u00e1 tr\u1ecb thu\u1ed9c \u0111o\u1ea1n \\(st[u]..st[v]\\) (gi\u1ea3 s\u1eed \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\)).</p> <p>Thu\u1eadt to\u00e1n ch\u1ec9 \u00e1p d\u1ee5ng \u0111\u1ed1i v\u1edbi \u0111\u01b0\u1eddng \u0111i t\u1eeb m\u1ed9t t\u1ed5 ti\u00ean c\u1ee7a m\u1ed9t \u0111\u1ec9nh v\u1ec1 \u0111\u1ec9nh \u0111\u00f3. \u0110\u1ed1i v\u1edbi tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t c\u1ee7a \\(u\\) v\u00e0 \\(v\\), c\u1ea7n chia \u0111\u01b0\u1eddng \u0111i th\u00e0nh 2 ph\u1ea7n l\u00e0 \\([LCA(u, v)..u]\\) v\u00e0 \\([LCA(u, v)..v]\\), hai \u0111\u01b0\u1eddng \u0111i n\u00e0y th\u1ecfa \u0111i\u1ec1u ki\u1ec7n tr\u00ean.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#to-tien-chung-gan-nhat-lowest-common-ancestor","title":"T\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t - Lowest Common Ancestor","text":"<p>\u0110\u01b0\u1eddng \u0111i Euler tr\u00ean c\u00e2y c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 t\u00ecm t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t, k\u1ebft h\u1ee3p v\u1edbi c\u1ea5u tr\u00fac d\u1eef li\u1ec7u RMQ.</p> <p>\u1ee8ng d\u1ee5ng n\u00e0y kh\u00f4ng c\u1ea7n bi\u1ebfn \u0111\u1ed5i \u0111\u01b0\u1eddng \u0111i Euler.</p> <p> </p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#co-so_3","title":"C\u01a1 s\u1edf","text":"<p>G\u1ecdi: + \\(tour\\) l\u00e0 d\u00e3y \u0111\u1ec9nh bi\u1ec3u di\u1ec5n \u0111\u01b0\u1eddng \u0111i Euler. + \\(st[u]\\) l\u00e0 v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(u\\) trong d\u00e3y \\(tour\\).</p> <p>Ta c\u00f3 t\u00ednh ch\u1ea5t sau:</p> <p>\u0110\u1ed1i v\u1edbi hai \u0111\u1ec9nh \\(u\\), \\(v\\) ph\u00e2n bi\u1ec7t m\u00e0 \\(st[u] \\leq st[v]\\), t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a hai \u0111\u1ec9nh n\u00e0y l\u00e0 gi\u00e1 tr\u1ecb \\(p\\) thu\u1ed9c \u0111o\u1ea1n \\(st[u]..st[v]\\) c\u1ee7a d\u00e3y \\(tour\\) sao cho kho\u1ea3ng c\u00e1ch t\u1eeb \\(p\\) \u0111\u1ebfn g\u1ed1c l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3.</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#giai-thich_3","title":"Gi\u1ea3i th\u00edch","text":"<p>G\u1ecdi \\(p\\) l\u00e0 cha chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\).</p> <p>X\u00e9t c\u00e1c \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n tr\u00ean \u0111o\u1ea1n \\(st[u]..st[v]\\) c\u1ee7a d\u00e3y \\(tour\\): + Theo \u0111\u1ecbnh ngh\u0129a, \u0111o\u1ea1n n\u00e0y th\u1ec3 hi\u1ec7n m\u1ed9t \u0111o\u1ea1n c\u1ee7a \u0111\u01b0\u1eddng \u0111i Euler, b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \\(u\\) v\u00e0 \u0111i \u0111\u1ebfn \u0111\u1ec9nh \\(v\\), v\u00ec v\u1eady ch\u1eafc ch\u1eafn c\u00f3 ch\u1ee9a \u0111\u1ec9nh \\(p\\). + V\u00ec \\(v\\) l\u00e0 con c\u1ee7a \\(p\\) n\u00ean \u0111o\u1ea1n n\u00e0y kh\u00f4ng th\u1ec3 ch\u1ee9a b\u1ea5t c\u1ee9 \u0111\u1ec9nh n\u00e0o l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(p\\).</p> <p>V\u1eady \u0111\u1ec9nh g\u1ea7n g\u1ed1c nh\u1ea5t tr\u00ean \u0111o\u1ea1n \\(st[u]..st[v]\\) ch\u00ednh l\u00e0 \u0111\u1ec9nh \\(p\\) - t\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t c\u1ee7a \\(u\\) v\u00e0 \\(v\\).</p>"},{"location":"algo/graph-theory/euler-tour-on-tree/#thuat-toan_2","title":"Thu\u1eadt to\u00e1n","text":"<p>G\u1ecdi \\(h[u]\\) l\u00e0 kho\u1ea3ng c\u00e1ch c\u1ee7a \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn g\u1ed1c c\u1ee7a c\u00e2y. Khi t\u00ecm \\(LCA(u, v)\\), ta c\u1ea7n t\u00ecm \u0111\u1ec9nh \\(p\\) thu\u1ed9c \u0111o\u1ea1n \\(st[u]..st[v]\\) m\u00e0 \\(h[p]\\) l\u00e0 nh\u1ecf nh\u1ea5t. </p> <p>C\u00f3 th\u1ec3 \u00e1p d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u RMQ \u0111\u1ec3 t\u00ecm \u0111\u1ec9nh \\(p\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho vi\u1ec7c chu\u1ea9n b\u1ecb l\u00e0 \\(O(M * log(M))\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c t\u00ecm \\(LCA\\) l\u00e0 \\(O(1)\\), trong \u0111\u00f3, \\(M\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a m\u1ea3ng l\u01b0u \u0111\u01b0\u1eddng \u0111i Euler.</p> <p>L\u01b0u \u00fd r\u1eb1ng, \u0111\u1ed9 d\u00e0i c\u1ee7a m\u1ea3ng l\u01b0u \u0111\u01b0\u1eddng \u0111i Euler c\u00f3 th\u1ec3 l\u1edbn h\u01a1n \\(n\\), c\u1ee5 th\u1ec3 \\(M = 2 * (n - 1) + 1\\), v\u00ec m\u1ed7i c\u1ea1nh \u0111\u01b0\u1ee3c \u0111i qua \\(2\\) l\u1ea7n, m\u1ed7i l\u1ea7n qua m\u1ed9t c\u1ea1nh th\u00ec th\u00eam m\u1ed9t \u0111\u1ec9nh v\u00e0o \u0111\u01b0\u1eddng \u0111i, ngo\u1ea1i tr\u1eeb c\u1ea1nh \u0111\u1ea7u ti\u00ean th\u00eam hai \u0111\u1ec9nh v\u00e0o \u0111\u01b0\u1eddng \u0111i.</p> <p>B\u00e0i t\u1eadp v\u00ed d\u1ee5: Company Queries II</p> <p>M\u1ed9t c\u00f4ng ty n\u1ecd c\u00f3 \\(n\\) th\u00e0nh vi\u00ean. Ngo\u1ea1i tr\u1eeb  t\u1ed5ng gi\u00e1m \u0111\u1ed1c, m\u1ed7i th\u00e0nh vi\u00ean s\u1ebd c\u00f3 m\u1ed9t ng\u01b0\u1eddi s\u1ebfp.</p> <p>Cho th\u00f4ng tin v\u1ec1 s\u1ed1 th\u00e0nh vi\u00ean v\u00e0 s\u1ebfp c\u1ee7a m\u1ed7i ng\u01b0\u1eddi, h\u00e3y tr\u1ea3 l\u1eddi \\(q\\) truy v\u1ea5n d\u1ea1ng \\(a\\) \\(b\\) v\u1edbi c\u00e2u h\u1ecfi: ai l\u00e0 s\u1ebfp chung th\u1ea5p nh\u1ea5t c\u1ee7a \\(a\\) v\u00e0 \\(b\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(n, q \\leq 2 \\times 10^5\\)</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 \u0111o\u1ea1n code m\u1eabu cho b\u00e0i t\u1eadp tr\u00ean:</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 200000 + 5;\nconst int K = 20;\n\nint n, q, m = 0, h[N], st[N];\nint R[2 * N][K];\n//R[i][j] l\u00e0 gi\u00e1 tr\u1ecb u c\u00f3 st[u] thu\u1ed9c \u0111o\u1ea1n i..i+(2^j)-1 sao cho h[u] l\u00e0 nh\u1ecf nh\u1ea5t\nvector&lt;int&gt; g[N];\n\nvoid dfs(int u, int p) {\n    h[u] = h[p] + 1;\n    R[++m][0] = u;\n    st[u] = m;\n    for (int v : g[u]) {\n        if (v != p) {\n            dfs(v, u);\n            R[++m][0] = u;\n        }\n    }\n}\n\nvoid solve() {\n    cin &gt;&gt; n &gt;&gt; q;\n    for (int i = 2; i &lt;= n; ++i) {\n        int p; cin &gt;&gt; p;\n        g[p].push_back(i);\n    }\n\n    dfs(1, 0);\n\n    for (int k = 0; (1 &lt;&lt; (k + 1)) &lt;= m; ++k) {\n        for (int i = 1; i + (1 &lt;&lt; (k + 1)) - 1 &lt;= m; ++i) {\n            R[i][k + 1] = (h[R[i][k]] &lt; h[R[i + (1 &lt;&lt; k)][k]] ? R[i][k] : R[i + (1 &lt;&lt; k)][k]);\n        }\n    }\n\n    while (q--) {\n        int u, v; \n        cin &gt;&gt; u &gt;&gt; v;\n\n        int l = st[u], r = st[v];\n        if (l &gt; r) swap(l, r);\n\n        int k = log2(r - l + 1);\n        cout &lt;&lt; (h[R[l][k]] &lt; h[R[r - (1 &lt;&lt; k) + 1][k]] ? R[l][k] : R[r - (1 &lt;&lt; k) + 1][k]) &lt;&lt; \"\\n\";\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    solve();\n\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/euler-tour-on-tree/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>CSES - Distinct Colors</p> <p>CSES - Path Queries</p> <p>Codeforces - Hemose in ICPC ? </p> <p>Codeforces - Danil and a Part-time Job</p> <p>Codeforces - Water Tree</p> <p>Codeforces - New Year Tree</p> <p>REGIONS - IOI 2009</p>"},{"location":"algo/graph-theory/everything/","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 c\u01a1 b\u1ea3n v\u1ec1 \u0111\u1ed3 th\u1ecb","text":"<p>S\u00e1ch th\u1ea7y L\u00ea Minh Ho\u00e0ng \u0111\u00e3 tr\u00ecnh b\u00e0y r\u1ea5t chi ti\u1ebft v\u1ec1 ph\u1ea7n l\u00fd thuy\u1ebft \u0111\u1ed3 th\u1ecb, do \u0111\u00f3 VNOI wiki s\u1ebd kh\u00f4ng vi\u1ebft l\u1ea1i n\u1eefa.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh ch\u1ec9 li\u1ec7t k\u00ea l\u1ea1i c\u00e1c thu\u1eadt to\u00e1n trong \u0111\u1ed3 th\u1ecb v\u00e0 d\u1eabn link \u0111\u1ebfn c\u00e1c t\u00e0i li\u1ec7u b\u1ed5 sung:</p> <ul> <li>Bi\u1ec3u di\u1ec5n \u0111\u1ed3 th\u1ecb:</li> <li>cowboycoder</li> <li> <p>B\u00e0i t\u1eadp:</p> <ul> <li>VNOJ - GRAPH</li> </ul> </li> <li> <p>BFS, DFS, Topo sort:</p> </li> <li>cowboycoder - BFS</li> <li>cowboycoder - DFS</li> <li>cowboycoder - Topo sort</li> <li>vietcodes - Th\u00e0nh ph\u1ea7n song li\u00ean th\u00f4ng</li> <li>B\u00e0i to\u00e1n kh\u1edbp c\u1ea7u, th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh (C\u00e2y DFS v\u00e0 \u1ee9ng d\u1ee5ng)</li> <li>Code t\u00ecm kh\u1edbp c\u1ea7u C++ - RR; c\u00e1ch s\u1eed d\u1ee5ng</li> <li>Code t\u00ecm th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh C++ - RR; c\u00e1ch s\u1eed d\u1ee5ng</li> <li>Code t\u00ecm th\u00e0nh ph\u1ea7n song li\u00ean th\u00f4ng C++ - RR; c\u00e1ch s\u1eed d\u1ee5ng;</li> <li>B\u00e0i t\u1eadp tr\u00ean VNOI</li> <li> <p>B\u00e0i H - ACM ICPC Vietnam Regional 2017; L\u1eddi gi\u1ea3i</p> </li> <li> <p>T\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t: Dijkstra, Floyd, Ford-Bellman:</p> </li> <li>cowboycoder - Dijkstra</li> <li>vietcodes - Dijkstra c\u1ea3i ti\u1ebfn</li> <li> <p>B\u00e0i t\u1eadp</p> </li> <li> <p>C\u00e2y khung nh\u1ecf nh\u1ea5t:</p> </li> <li>VNOI - Disjoint Set</li> <li> <p>B\u00e0i t\u1eadp</p> </li> <li> <p>Chu tr\u00ecnh Euler:</p> </li> <li>Code C++ - RR</li> <li> <p>B\u00e0i t\u1eadp</p> </li> <li> <p>Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i:</p> </li> <li>Code lu\u1ed3ng Dinic C++ - RR</li> <li> <p>B\u00e0i t\u1eadp</p> </li> <li> <p>C\u1eb7p gh\u00e9p:</p> </li> <li>Code c\u1eb7p gh\u00e9p kh\u00f4ng tr\u1ecdng s\u1ed1 C++ - RR</li> <li>Code C\u1eb7p gh\u00e9p c\u00f3 tr\u1ecdng s\u1ed1 C++ - RR</li> <li>B\u00e0i t\u1eadp</li> <li> <p>B\u00e0i E - ACM ICPC Vietnam Regional 2017</p> </li> <li> <p>2-SAT:</p> </li> <li>2-SAT - Ph\u1ea1m L\u00ea Quang</li> <li>Code C++ - RR</li> <li> <p>B\u00e0i t\u1eadp</p> </li> <li> <p>LCA:</p> </li> <li>Code C++ - RR</li> <li>B\u00e0i t\u1eadp</li> </ul>"},{"location":"algo/graph-theory/flow/","title":"B\u00e0i to\u00e1n Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng","text":"<p>T\u00e1c gi\u1ea3:  - Nguy\u1ec5n \u0110\u1ee9c Ki\u00ean, Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN.</p> <p>Reviewer:  - Ph\u1ea1m C\u00f4ng Minh - THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 Nhi\u00ean, \u0110HQGHN - \u0110\u1eb7ng \u0110o\u00e0n \u0110\u1ee9c Trung - UT Austin - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p> <p>Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i (Maximum Flow) v\u00e0 L\u00e1t c\u1eaft c\u1ef1c ti\u1ec3u/h\u1eb9p nh\u1ea5t (Minimum Cut) l\u00e0 nh\u1eefng b\u00e0i to\u00e1n quan tr\u1ecdng trong l\u1edbp c\u00e1c b\u00e0i to\u00e1n v\u1ec1 \u0111\u1ed3 th\u1ecb. B\u00e0i vi\u1ebft sau \u0111\u00e2y s\u1ebd gi\u1edbi thi\u1ec7u m\u1ed9t v\u00e0i n\u1ed9i dung c\u01a1 b\u1ea3n v\u1ec1 b\u00e0i to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i v\u00e0 c\u00e1c thu\u1eadt to\u00e1n li\u00ean quan.</p>"},{"location":"algo/graph-theory/flow/#mot-so-khai-niem-su-dung-trong-bai-viet","title":"M\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m s\u1eed d\u1ee5ng trong b\u00e0i vi\u1ebft","text":"<p>\u0110\u1ec3 hi\u1ec3u h\u01a1n v\u1ec1 ph\u1ea7n n\u00e0y, b\u1ea1n \u0111\u1ecdc n\u00ean c\u00f3 s\u1eb5n nh\u1eefng ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 \u0111\u1ed3 th\u1ecb, c\u0169ng nh\u01b0 bi\u1ec3u di\u1ec5n v\u00e0 duy\u1ec7t (BFS, DFS, ...) ch\u00fang. </p> <p>B\u00e0i vi\u1ebft s\u1ebd kh\u00f4ng n\u00eau l\u1ea1i c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 \u0111\u1ed3 th\u1ecb.</p> <ul> <li>K\u00fd hi\u1ec7u \u0111\u1ed3 th\u1ecb c\u00f3 \\(G(V, E)\\): \u0110\u1ed3 th\u1ecb t\u1eadp c\u00e1c \u0111\u1ec9nh l\u00e0 \\(V\\) v\u00e0 t\u1eadp c\u00e1c c\u1ea1nh l\u00e0 \\(E\\)</li> <li>C\u1ea1nh \u0111i v\u00e0o \u0111\u1ec9nh \\(u\\): C\u00e1c c\u1ea1nh c\u00f3 d\u1ea1ng \\((v, u)\\), v\u1edbi \\(v\\) l\u00e0 \u0111\u1ec9nh b\u1ea5t k\u1ef3 c\u1ee7a \u0111\u1ed3 th\u1ecb.</li> <li>C\u1ea1nh \u0111i ra kh\u1ecfi \u0111\u1ec9nh \\(u\\): C\u00e1c c\u1ea1nh c\u00f3 d\u1ea1ng \\((u, v)\\), v\u1edbi \\(v\\) l\u00e0 \u0111\u1ec9nh b\u1ea5t k\u1ef3 c\u1ee7a \u0111\u1ed3 th\u1ecb.</li> <li>\u0110\u01b0\u1eddng \u0111i \u0111\u01a1n t\u1eeb \\(s\\) t\u1edbi \\(t\\): D\u00e3y c\u00e1c \u0111\u1ec9nh \\(s, u_1, u_2, ..., u_k, t\\) sao cho gi\u1eefa hai \u0111\u1ec9nh li\u00ean ti\u1ebfp trong d\u00e3y t\u1ed3n t\u1ea1i m\u1ed9t c\u1ea1nh n\u1ed1i ch\u00fang theo \u0111\u00fang chi\u1ec1u nh\u01b0 tr\u00ean.</li> </ul>"},{"location":"algo/graph-theory/flow/#bai-toan-luong-cuc-ai","title":"B\u00e0i to\u00e1n Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i","text":""},{"location":"algo/graph-theory/flow/#cac-inh-nghia","title":"C\u00e1c \u0111\u1ecbnh ngh\u0129a","text":"<p>C\u00f3 r\u1ea5t nhi\u1ec1u h\u00ecnh \u1ea3nh th\u1ef1c t\u1ebf \u0111\u1ec3 mi\u00eau t\u1ea3 m\u1ed9t m\u1ea1ng v\u00e0 lu\u1ed3ng tr\u00ean m\u1ea1ng \u0111\u00f3, nh\u01b0 m\u1ed9t m\u1ea1ng \u0111i\u1ec7n, m\u1ed9t m\u1ea1ng k\u1ebft n\u1ed1i d\u1eef li\u1ec7u gi\u1eefa c\u00e1c m\u00e1y, hay ph\u1ed5 bi\u1ebfn h\u01a1n l\u00e0 m\u1ed9t h\u1ec7 th\u00f4ng \u1ed1ng n\u01b0\u1edbc.</p> <p>M\u1ed9t \u0111\u1ed3 th\u1ecb \\(G(V, E)\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ea1ng (network) n\u1ebfu n\u00f3 l\u00e0 \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng, trong \u0111\u00f3: - T\u1ed3n t\u1ea1i m\u1ed9t \u0111\u1ec9nh \\(s\\) kh\u00f4ng c\u00f3 c\u1ea1nh \u0111i v\u00e0o, g\u1ecdi l\u00e0 \u0111\u1ec9nh ph\u00e1t/ngu\u1ed3n (source) - T\u1ed3n t\u1ea1i m\u1ed9t \u0111\u1ec9nh \\(t\\) kh\u00f4ng c\u00f3 c\u1ea1nh \u0111i ra, g\u1ecdi l\u00e0 \u0111\u1ec9nh thu/\u0111\u00edch (sink) - M\u1ed7i c\u1ea1nh \\((u, v)\\) \u0111\u01b0\u1ee3c g\u00e1n m\u1ed9t tr\u1ecdng s\u1ed1 \\(c(u, v)\\), g\u1ecdi l\u00e0 kh\u1ea3 n\u0103ng th\u00f4ng qua/dung l\u01b0\u1ee3ng (capacity) c\u1ee7a c\u1ea1nh.</p> <p></p> <p>M\u1ed9t m\u1ea1ng h\u1ee3p l\u1ec7. \u0110\u1ec9nh ph\u00e1t v\u00e0 \u0111\u1ec9nh thu \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1eb1ng hai m\u00e0u kh\u00e1c.</p> <p>M\u1ed9t lu\u1ed3ng (flow) tr\u00ean m\u1ea1ng \\(G(V, E)\\) l\u00e0 m\u1ed9t ph\u00e9p g\u00e1n cho m\u1ed7i c\u1ea1nh \\((u, v)\\) m\u1ed9t s\u1ed1 th\u1ef1c \\(f(u, v)\\) tho\u1ea3 m\u00e3n: - Lu\u1ed3ng tr\u00ean m\u1ed7i c\u1ea1nh c\u00f3 gi\u00e1 tr\u1ecb kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a c\u1ea1nh \u0111\u00f3: \\(0 \\le f(u, v) \\le c(u, v), \\forall u, v \\in V\\) - V\u1edbi m\u1ecdi \u0111\u1ec9nh \\(v\\) kh\u00f4ng tr\u00f9ng v\u1edbi \u0111\u1ec9nh ph\u00e1t \\(s\\) v\u00e0 \u0111\u1ec9nh thu \\(t\\), t\u1ed5ng lu\u1ed3ng tr\u00ean c\u00e1c c\u1ea1nh \u0111i v\u00e0o \\(v\\) b\u1eb1ng t\u1ed5ng lu\u1ed3ng tr\u00ean c\u00e1c c\u1ea1nh \u0111i ra \\(v\\). T\u00ednh ch\u1ea5t n\u00e0y t\u01b0\u01a1ng \u0111\u1ed1i gi\u1ed1ng v\u1edbi \u0111\u1ecbnh lu\u1eadt I Kirchoff c\u1ee7a d\u00f2ng \u0111i\u1ec7n. \\(\\sum\\limits_{v \\in V, \\exists (v, u) \\in E} f(v, u) =  \\sum\\limits_{w \\in V, \\exists (u, w) \\in E} f(u, w)\\) - Gi\u00e1 tr\u1ecb \\(f(u, v)\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 lu\u1ed3ng tr\u00ean c\u1ea1nh \\((u, v)\\) - Gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng l\u00e0 t\u1ed5ng lu\u1ed3ng tr\u00ean c\u00e1c c\u1ea1nh \u0111i ra kh\u1ecfi \u0111\u1ec9nh ph\u00e1t, c\u0169ng ch\u00ednh l\u00e0 t\u1ed5ng lu\u1ed3ng tr\u00ean c\u00e1c c\u1ea1nh \u0111i v\u00e0o \u0111\u1ec9nh thu.</p> <p></p> <p>M\u1ed9t lu\u1ed3ng h\u1ee3p l\u1ec7. Gi\u00e1 tr\u1ecb <code>f/c</code> tr\u00ean c\u1ea1nh bi\u1ec3u di\u1ec5n lu\u1ed3ng/kh\u1ea3 n\u0103ng th\u00f4ng qua.</p> <p>M\u1ed9t l\u00e1t c\u1eaft (cut) \\((A, B)\\) tr\u00ean m\u1ea1ng l\u00e0 m\u1ed9t c\u00e1ch chia c\u00e1c \u0111\u1ec9nh tr\u00ean \u0111\u1ed3 th\u1ecb m\u1ea1ng th\u00e0nh hai t\u1eadp h\u1ee3p sao cho \\(s \\in A, t \\in B\\). T\u1ed5ng c\u00e1c gi\u00e1 tr\u1ecb kh\u1ea3 n\u0103ng th\u00f4ng qua tr\u00ean c\u00e1c c\u1ea1nh n\u1ed1i gi\u1eefa m\u1ed9t \u0111\u1ec9nh thu\u1ed9c \\(A\\) v\u00e0 m\u1ed9t \u0111\u1ec9nh thu\u1ed9c \\(B\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 kh\u1ea3 n\u0103ng th\u00f4ng qua (cut value) c\u1ee7a l\u00e1t c\u1eaft \\((A, B)\\)</p> <p>\\(c(A, B) = \\sum\\limits_{u \\in A, v \\in B} c(u, v)\\)</p> <p></p> <p>M\u1ed9t l\u00e1t c\u1eaft h\u1ee3p l\u1ec7 v\u1edbi hai t\u1eadp \\(A = \\{1, 2, 5\\}\\) v\u00e0 \\(B = \\{3, 4, 6\\}\\). M\u1ed7i t\u1eadp con c\u1ee7a l\u00e1t c\u1eaft \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1eb1ng m\u1ed9t m\u00e0u kh\u00e1c nhau. L\u00e1t c\u1eaft n\u00e0y c\u00f3 kh\u1ea3 n\u0103ng th\u00f4ng qua l\u00e0 \\(6 + 5 + 1 + 6 = 17\\).</p> <p>\u0110\u1ecbnh l\u00fd: Tr\u00ean c\u00f9ng m\u1ed9t m\u1ea1ng, t\u1ea5t c\u1ea3 m\u1ecdi lu\u1ed3ng \u0111\u1ec1u c\u00f3 gi\u00e1 tr\u1ecb kh\u00f4ng l\u1edbn h\u01a1n kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a m\u1ed9t l\u00e1t c\u1eaft b\u1ea5t k\u1ef3.</p> Ch\u1ee9ng minh <p> X\u00e9t lu\u1ed3ng c\u00f3 gi\u00e1 tr\u1ecb $f$ v\u00e0 l\u00e1t c\u1eaft $(A, B)$ tr\u00ean m\u1ed9t m\u1ea1ng b\u1ea5t k\u1ef3. Ta c\u00f3:   $$f =  \\sum\\limits_{u \\in A, v \\in B} f(u, v) -  \\sum\\limits_{u \\in B, v \\in A} f(u, v) \\\\ \\le \\sum\\limits_{ \\begin{subarray}{l}    u \\in A, v \\in B \\end{subarray}} f(u, v) \\\\ \\le \\sum\\limits_{ \\begin{subarray}{l}    u \\in A, v \\in B \\end{subarray}} c(u, v) \\\\ = c(A, B) \\quad \\text{(\u0111pcm)} $$   </p> <p>N\u1ebfu ta hi\u1ec3u m\u1ea1ng nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u1ed1ng n\u01b0\u1edbc, n\u00f3 s\u1ebd nh\u01b0 sau: - N\u01b0\u1edbc ch\u1ea3y qua m\u1ed9t h\u1ec7 th\u1ed1ng c\u00e1c \u1ed1ng, t\u1eeb ngu\u1ed3n n\u01b0\u1edbc (\u0111\u1ec9nh ph\u00e1t) \u0111\u1ebfn b\u1ed3n ch\u1ee9a (\u0111\u1ec9nh thu). - M\u1ed7i \u1ed1ng c\u00f3 m\u1ed9t gi\u1edbi h\u1ea1n nh\u1ea5t \u0111\u1ecbnh. L\u01b0\u1ee3ng n\u01b0\u1edbc ch\u1ea3y qua \u1ed1ng n\u00e0y kh\u00f4ng th\u1ec3 v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n n\u00e0y. - Hi\u1ec3n nhi\u00ean, t\u1ea1i m\u1ed7i \u0111i\u1ec3m n\u00fat (tr\u1eeb \u0111i\u1ec3m \u0111\u1ea7u v\u00e0 \u0111i\u1ec3m cu\u1ed1i), c\u00f3 bao nhi\u00eau n\u01b0\u1edbc \u0111\u1ebfn th\u00ec s\u1ebd c\u00f3 b\u1ea5y nhi\u00eau n\u01b0\u1edbc ch\u1ea3y \u0111i. N\u01b0\u1edbc kh\u00f4ng t\u1ef1 sinh ra v\u00e0 m\u1ea5t \u0111i, ch\u00fang ch\u1ec9 ch\u1ea3y t\u1eeb \u0111i\u1ec3m n\u00e0y sang \u0111i\u1ec3m kh\u00e1c. - V\u00e0 t\u1ea5t nhi\u00ean t\u1ed5ng l\u01b0\u1ee3ng n\u01b0\u1edbc xu\u1ea5t hi\u1ec7n trong m\u1ea1ng s\u1ebd l\u00e0 l\u01b0\u1ee3ng n\u01b0\u1edbc ta c\u1ea5p cho ngu\u1ed3n. B\u1ec3 ch\u1ee9a c\u0169ng s\u1ebd thu \u0111\u01b0\u1ee3c t\u1eebng \u0111\u00f3 n\u01b0\u1edbc. - C\u00f2n m\u1ed9t l\u00e1t c\u1eaft l\u00e0 m\u1ed9t c\u00e1ch b\u1ecf \u0111i c\u00e1c \u1ed1ng sao cho n\u01b0\u1edbc kh\u00f4ng th\u1ec3 ch\u1ea3y t\u1eeb ngu\u1ed3n \u0111\u1ebfn b\u1ec3 n\u1eefa b\u1eb1ng b\u1ea5t k\u1ef3 c\u00e1ch n\u00e0o.</p>"},{"location":"algo/graph-theory/flow/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>\u0110\u1ec1 b\u00e0i: Cho m\u1ea1ng \\(G(V, E)\\) v\u1edbi \\(m\\) \u0111\u1ec9nh v\u00e0 \\(n\\) c\u1ea1nh c\u00f3 \u0111\u1ec9nh ph\u00e1t l\u00e0 \\(s\\), \u0111\u1ec9nh thu l\u00e0 \\(t\\) (\\(n \\le 1000, 1 \\le s, t \\le n\\)). H\u00e3y t\u00ecm m\u1ed9t lu\u1ed3ng trong m\u1ea1ng sao cho gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 l\u00e0 l\u1edbn nh\u1ea5t.  Lu\u1ed3ng n\u00e0y g\u1ecdi l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng \\(G\\).</p> <p>\u0110\u1ec1 b\u00e0i VNOI: NKFLOW</p>"},{"location":"algo/graph-theory/flow/#phuong-phap-ford-fulkerson-thuat-toan-edmonds-karp","title":"Ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson. Thu\u1eadt to\u00e1n Edmonds-Karp.","text":"\u0110\u00f4i l\u1eddi v\u1ec1 l\u1ecbch s\u1eed thu\u1eadt to\u00e1n <p> N\u0103m 1956, L. R. Ford Jr. v\u00e0 D. R. Fulkerson \u0111\u1ec1 xu\u1ea5t m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 t\u00ecm ra lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng. Tuy nhi\u00ean, ph\u01b0\u01a1ng ph\u00e1p n\u00e0y kh\u00f4ng ch\u1ec9 r\u00f5 vi\u1ec7c t\u00ecm *\u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng* nh\u01b0 th\u1ebf n\u00e0o. \u0110\u1ebfn n\u0103m 1972, Jack Edmonds and Richard Karp \u0111\u00e3 ho\u00e0n thi\u1ec7n ph\u01b0\u01a1ng ph\u00e1p tr\u00ean b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng thu\u1eadt BFS \u0111\u1ec3 t\u00ecm *\u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng*.  </p> <p> Nhi\u1ec1u t\u00e0i li\u1ec7u m\u00e0 ch\u00fang ta \u0111ang d\u00f9ng c\u00f3 s\u1eed d\u1ee5ng c\u1ee5m t\u1eeb \"thu\u1eadt to\u00e1n Ford-Fulkerson\" \u0111\u1ec3 g\u1ecdi thu\u1eadt t\u00ecm lu\u1ed3ng c\u1ef1c \u0111\u1ea1i ho\u00e0n ch\u1ec9nh, v\u00e0 bi\u1ebfn \"thu\u1eadt to\u00e1n Edmonds-Karp\" th\u00e0nh m\u1ed9t thu\u1eadt xa l\u1ea1 k\u00ec qu\u1eb7c n\u00e0o \u0111\u00f3. \u0110i\u1ec1u n\u00e0y c\u00f3 l\u1ebd c\u0169ng ... kh\u00f4ng h\u1eb3n l\u00e0 sai. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd s\u1eed d\u1ee5ng t\u00ean Edmonds-Karp cho thu\u1eadt to\u00e1n, v\u00e0 ch\u1ec9 g\u1ecdi l\u00e0 \"ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson\" th\u00f4i. B\u1ea1n \u0111\u1ecdc mu\u1ed1n hi\u1ec3u theo c\u00e1ch n\u00e0o c\u0169ng \u0111\u01b0\u1ee3c. </p>"},{"location":"algo/graph-theory/flow/#cac-khai-niem","title":"C\u00e1c kh\u00e1i ni\u1ec7m","text":"<p>Gi\u1ea3 s\u1eed t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m, ta \u0111\u00e3 c\u00f3 m\u1ed9t lu\u1ed3ng tr\u00ean \u0111\u1ed3 th\u1ecb, v\u1edbi gi\u00e1 tr\u1ecb lu\u1ed3ng tr\u00ean c\u1ea1nh \\((u, v)\\) l\u00e0 \\(f(u, v)\\).</p> <p>V\u1edbi m\u1ecdi c\u1ea1nh \\((u, v)\\), ta \u0111\u1ecbnh ngh\u0129a th\u00eam gi\u00e1 tr\u1ecb \\(f(v, u) = -f(u, v)\\). V\u1ec1 m\u1eb7t \u00fd ngh\u0129a, vi\u1ec7c \u0111\u1ecbnh ngh\u0129a n\u00e0y cho ta bi\u1ebft lu\u1ed3ng hi\u1ec7n t\u1ea1i tr\u00ean c\u1ea1nh n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3m \u0111i m\u1ed9t l\u01b0\u1ee3ng bao nhi\u00eau. L\u01b0u \u00fd r\u1eb1ng ta kh\u00f4ng \u0111\u1ecbnh ngh\u0129a \\(c(v, u) = c(u, v)\\), gi\u00e1 tr\u1ecb n\u00e0y v\u1eabn \u0111\u01b0\u1ee3c m\u1eb7c \u0111\u1ecbnh b\u1eb1ng \\(0\\).</p> <p>\u0110\u1ecbnh ngh\u0129a lu\u1ed3ng th\u1eb7ng d\u01b0 (residual flow) tr\u00ean m\u1ed9t c\u1ea1nh t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m l\u00e0 hi\u1ec7u c\u1ee7a kh\u1ea3 n\u0103ng th\u00f4ng qua v\u00e0 gi\u00e1 tr\u1ecb lu\u1ed3ng hi\u1ec7n t\u1ea1i tr\u00ean c\u1ea1nh \u0111\u00f3:</p> <p>\\(r(u, v) = c(u, v) - f(u, v)\\)</p> <p>Gi\u00e1 tr\u1ecb n\u00e0y c\u0169ng \u00e1p d\u1ee5ng cho c\u1ea3 c\u00e1c c\u1ea1nh \u0111\u1ea3o (c\u1ea1nh c\u00f3 lu\u1ed3ng \u00e2m), khi \u0111\u00f3 </p> <p>\\(r(v, u) = 0 - f(v, u) = f(u, v)\\).</p> <p>Ta c\u00f3 th\u1ec3 hi\u1ec3u r\u1eb1ng gi\u00e1 tr\u1ecb lu\u1ed3ng th\u1eb7ng d\u01b0 cho bi\u1ebft c\u00f2n c\u00f3 th\u1ec3 th\u00eam v\u00e0o lu\u1ed3ng n\u00e0y m\u1ed9t l\u01b0\u1ee3ng bao nhi\u00eau.</p> <p>V\u1edbi c\u00e1c gi\u00e1 tr\u1ecb \\(r(u, v)\\) n\u00e0y, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0/\u0111\u1ed3 th\u1ecb t\u0103ng lu\u1ed3ng (residual network). \u1ee8ng v\u1edbi m\u1ed7i c\u1ea1nh \\((u, v)\\) tr\u00ean m\u1ea1ng ban \u0111\u1ea7u, tr\u00ean \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 s\u1ebd c\u00f3 hai c\u1ea1nh: - C\u1ea1nh \\((u, v)\\), v\u1edbi tr\u1ecdng s\u1ed1 l\u00e0 \\(r(u, v)\\). M\u1ed7i c\u1ea1nh lo\u1ea1i n\u00e0y cho ta bi\u1ebft c\u00f3 th\u1ec3 t\u0103ng lu\u1ed3ng tr\u00ean m\u1ea1ng ban \u0111\u1ea7u bao nhi\u00eau. - C\u1ea1nh \\((v, u)\\), v\u1edbi tr\u1ecdng s\u1ed1 l\u00e0 \\(f(u, v)\\). M\u1ed7i c\u1ea1nh lo\u1ea1i n\u00e0y cho ta bi\u1ebft c\u00f3 th\u1ec3 gi\u1ea3m lu\u1ed3ng tr\u00ean m\u1ea1ng ban \u0111\u1ea7u bao nhi\u00eau.</p> <p>M\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng (augmenting path) l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n tr\u00ean \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0. \u0110\u1ed1i chi\u1ebfu l\u1ea1i v\u1edbi \u0111\u1ed3 th\u1ecb g\u1ed1c, \u0111\u00f3 s\u1ebd l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n (c\u00f3 th\u1ec3 \u0111i ng\u01b0\u1ee3c chi\u1ec1u c\u1ea1nh) qua nh\u1eefng c\u1ea1nh c\u00f3 \\(r(u, v) &gt; 0\\). Tr\u00ean \u0111\u01b0\u1eddng n\u00e0y, ch\u00fang ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng tr\u00ean m\u1ed7i c\u1ea1nh.</p> <p></p> <p>\u0110\u01b0\u1eddng m\u00e0u xanh l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng tr\u00ean \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 tr\u00ean. C\u00e1c c\u1ea1nh \u0111\u1ee9t ch\u00ednh l\u00e0 c\u00e1c c\u1ea1nh \"ng\u01b0\u1ee3c\" so v\u1edbi m\u1ea1ng ban \u0111\u1ea7u; ch\u00fang c\u00f3 gi\u00e1 tr\u1ecb \\(f\\) \u00e2m.</p> <p></p> <p>\u0110em \u0111\u1ed1i chi\u1ebfu \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 tr\u00ean v\u1ec1 \u0111\u1ed3 th\u1ecb g\u1ed1c, ta \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng nh\u01b0 h\u00ecnh tr\u00ean. Trong h\u00ecnh d\u01b0\u1edbi, gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng (\\(f\\)) tr\u00ean c\u00e1c c\u1ea1nh thu\u1ed9c \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \u0111\u00e3 \u0111\u01b0\u1ee3c t\u0103ng \\(1\\) \u0111\u01a1n v\u1ecb so v\u1edbi \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 b\u00ean tr\u00ean.</p> <p>Vi\u1ec7c x\u00e2y d\u1ef1ng c\u1ea3 m\u1ed9t \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 sau t\u1eebng b\u01b0\u1edbc r\u1ea5t t\u1ed1n th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb. V\u00ec v\u1eady, trong ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson ch\u00fang ta s\u1ebd ch\u1ec9 s\u1eed d\u1ee5ng \u0111\u1ed3 th\u1ecb g\u1ed1c, v\u00e0 th\u1ef1c hi\u1ec7n t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng tr\u1ef1c ti\u1ebfp tr\u00ean \u0111\u1ed3 th\u1ecb n\u00e0y.</p> <p>C\u00f2n n\u1ebfu b\u1ea1n mu\u1ed1n hi\u1ec3u theo ki\u1ec3u \"\u1ed1ng n\u01b0\u1edbc\" th\u00ec \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng c\u00f3 th\u1ec3 coi nh\u01b0 m\u1ed9t \u0111\u01b0\u1eddng n\u01b0\u1edbc ch\u1ea3y t\u1eeb ngu\u1ed3n \u0111\u1ebfn b\u1ec3 ch\u1ee9a. \u0110\u1ed1i v\u1edbi c\u00e1c \"\u1ed1ng \u0111i ng\u01b0\u1ee3c\" nh\u01b0 \"\u1ed1ng\" \\((5, 2)\\) tr\u00ean h\u00ecnh, ta hi\u1ec3u \u0111\u00e2y l\u00e0 m\u1ed9t c\u00e1ch ph\u00e2n ph\u1ed1i l\u1ea1i n\u01b0\u1edbc: th\u00eam \\(1\\) \u0111\u01a1n v\u1ecb n\u01b0\u1edbc v\u00e0o n\u00fat \\(5\\) s\u1ebd d\u1eabn \u0111\u1ebfn vi\u1ec7c ph\u1ea3i b\u1edbt \\(1\\) \u0111\u01a1n v\u1ecb t\u1eeb \u1ed1ng \\((2, 5)\\) \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111o\u1ea1n sau v\u1eabn \u0111\u1ee7 n\u01b0\u1edbc; \u1edf \u0111\u1ea7u \\(2\\) ph\u1ea7n n\u01b0\u1edbc thay v\u00ec ch\u1ea3y v\u00e0o \u1ed1ng n\u00e0y \u0111i ra \u0111\u1ea7u \\(5\\) th\u00ec n\u00f3 s\u1ebd \u0111\u01b0a ph\u1ea7n n\u01b0\u1edbc n\u00e0y sang \u1ed1ng \\((2, 4)\\).</p>"},{"location":"algo/graph-theory/flow/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>\u0110\u1ea7u ti\u00ean ta g\u00e1n gi\u00e1 tr\u1ecb m\u1ecdi lu\u1ed3ng tr\u00ean t\u1ea5t c\u1ea3 m\u1ecdi c\u1ea1nh th\u00e0nh \\(0\\).</p> <p>Ta \u0111i t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng c\u00f3 th\u1ec3 c\u00f3 tr\u00ean \u0111\u1ed3 th\u1ecb. Nh\u1eafc l\u1ea1i r\u1eb1ng, \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng ch\u1ec9 ch\u1ee9a c\u00e1c c\u1ea1nh (k\u1ec3 c\u1ea3 \"c\u1ea1nh\" ng\u01b0\u1ee3c) c\u00f3 \\(r &gt; 0\\), hay \\(c - f &gt; 0\\).</p> <p>Tr\u00ean \u0111\u01b0\u1eddng n\u00e0y, v\u1edbi m\u1ed7i c\u1ea1nh \\((u, v)\\), ta t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng tr\u00ean c\u1ea1nh n\u00e0y (t\u1ee9c \\(f(u, v)\\)) l\u00ean \\(\\Delta\\) \u0111\u01a1n v\u1ecb, v\u1edbi \\(\\Delta\\) l\u00e0 gi\u00e1 tr\u1ecb \\(r(u, v)\\) nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng v\u1eeba t\u00ecm \u0111\u01b0\u1ee3c. \u0110\u1ed3ng th\u1eddi, ta c\u0169ng ph\u1ea3i gi\u1ea3m \\(f(v, u)\\) \u0111i \\(\\Delta\\) \u0111\u1ec3 lu\u00f4n c\u00f3 \\(f(u, v) = -f(v, u)\\).</p> <p>M\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u h\u01a1n th\u00ec t\u1ea1i b\u01b0\u1edbc n\u00e0y, ta t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng tr\u00ean \u0111\u01b0\u1eddng v\u1eeba t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ebfn m\u1ee9c t\u1ed1i \u0111a c\u00f3 th\u1ec3.</p> <p>Ta l\u1eb7p \u0111i l\u1eb7p l\u1ea1i vi\u1ec7c t\u0103ng lu\u1ed3ng cho \u0111\u1ebfn khi n\u00e0o kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u1eefa th\u00ec th\u00f4i. Khi \u0111\u00f3, gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng trong c\u1ea3 m\u1ea1ng ch\u00ednh l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i m\u00e0 ta c\u1ea7n t\u00ecm.</p> <p></p> <p>H\u00ecnh GIF tr\u00ean m\u00f4 t\u1ea3 ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson tr\u00ean m\u1ea1ng ta v\u1eeba l\u1ea5y v\u00ed d\u1ee5 trong b\u00e0i vi\u1ebft n\u00e0y. Ch\u00fa \u00fd r\u1eb1ng c\u00f3 m\u1ed9t b\u01b0\u1edbc, ch\u00fang ta \u0111\u00e3 ph\u1ea3i s\u1eed d\u1ee5ng c\u1ea1nh ng\u01b0\u1ee3c.</p> <p>\u0110\u1ec3 t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng, ta ch\u1ec9 ph\u1ea3i t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111\u1ec3 \u0111i t\u1eeb \\(s\\) t\u1edbi \\(t\\), qua c\u00e1c c\u1ea1nh c\u00f3 \\(r(u, v) = c(u, v) - f(u, v) &gt; 0\\). \u0110\u00e2y ch\u1ec9 l\u00e0 m\u1ed9t b\u00e0i to\u00e1n duy\u1ec7t \u0111\u1ed3 th\u1ecb \u0111\u01a1n gi\u1ea3n, ta c\u00f3 th\u1ec3 th\u1eed \u00e1p d\u1ee5ng DFS, BFS, ... \u0111\u1ec3 duy\u1ec7t.</p> <p>Hai thu\u1eadt BFS v\u00e0 DFS c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p gi\u1ed1ng nhau, nh\u01b0ng tr\u00ean th\u1ef1c t\u1ebf BFS ch\u1ea1y nhanh h\u01a1n DFS khi \u0111i t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng. Thu\u1eadt Edmonds-Karp s\u1eed d\u1ee5ng BFS.</p>"},{"location":"algo/graph-theory/flow/#tinh-ung-an","title":"T\u00ednh \u0111\u00fang \u0111\u1eafn","text":"<p>\u0110\u1ecbnh l\u00fd: Ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson cho k\u1ebft qu\u1ea3 l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i.</p> Ch\u1ee9ng minh <p> Gi\u1ea3 s\u1eed thu\u1eadt to\u00e1n cho m\u1ed9t lu\u1ed3ng c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 $f^{*}$. </p> <p> T\u1ea1i b\u01b0\u1edbc cu\u1ed1i c\u00f9ng c\u1ee7a thu\u1eadt to\u00e1n, ch\u00fang ta kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u00e0o t\u1eeb $s$ t\u1edbi $t$ n\u1eefa. G\u1ecdi $S$ l\u00e0 t\u1eadp t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 \u0111i t\u1edbi t\u1eeb $s$ theo m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng, v\u00e0 $T$ l\u00e0 t\u1eadp c\u00e1c \u0111\u1ec9nh c\u00f2n l\u1ea1i. Khi \u0111\u00f3 $(S, T)$ l\u00e0 m\u1ed9t l\u00e1t c\u1eaft tr\u00ean m\u1ea1ng. </p> <p> Ta ch\u1ee9ng minh $f^{*} = c(S, T)$. Nh\u1eafc l\u1ea1i r\u1eb1ng $c(S, T)$ l\u00e0 kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a l\u00e1t c\u1eaft $(S, T)$. </p> <p> G\u1ecdi $(u, v)$ l\u00e0 m\u1ed9t c\u1ea1nh b\u1ea5t k\u1ef3 n\u1ed1i t\u1eeb $S$ sang $T$, v\u1edbi $u \\in S, v \\in T$. C\u1ea1nh $(u, v)$ ph\u1ea3i tho\u1ea3 m\u00e3n $f(u, v) = c(u, v)$, n\u1ebfu kh\u00f4ng s\u1ebd t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \u0111i t\u1eeb $s$ sang t\u1eadp $T$, tr\u00e1i v\u1edbi gi\u1ea3 thi\u1ebft. </p> <p> L\u1ea1i g\u1ecdi $(u', v')$ l\u00e0 m\u1ed9t c\u1ea1nh b\u1ea5t k\u1ef3 n\u1ed1i t\u1eeb $T$ sang $S$, v\u1edbi $u' \\in T, v' \\in S$. N\u1ebfu $f(u', v') &gt; 0$, s\u1ebd t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \u0111i qua c\u1ea1nh ng\u01b0\u1ee3c $(v', u')$ do $f(v', u') &lt; 0 = c(u', v')$, tr\u00e1i v\u1edbi gi\u1ea3 thi\u1ebft kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i t\u1eeb $S$ sang $T$. </p> <p> L\u1ea5y t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1eb3ng th\u1ee9c $f(u, v) = c(u, v)$ v\u00e0 $f(v', u') = 0$ v\u1edbi m\u1ecdi c\u1eb7p \u0111\u1ec9nh tho\u1ea3 m\u00e3n m\u1ed9t trong hai tr\u01b0\u1eddng h\u1ee3p tr\u00ean, ta \u0111\u01b0\u1ee3c: $f^* = c(A, B)$ </p> <p> Nh\u01b0ng theo \u0111\u1ecbnh l\u00fd v\u1ec1 lu\u1ed3ng v\u00e0 l\u00e1t c\u1eaft \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean ta c\u00f3 $f^* \\le c(A, B)$ n\u00ean \u0111\u00e2y l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i. (\u0111pcm) </p> <p>H\u1ec7 qu\u1ea3:  - Kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t tr\u00ean m\u1ed9t m\u1ea1ng b\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng \u0111\u00f3. L\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t (mincut) l\u00e0 l\u00e1t c\u1eaft c\u00f3 kh\u1ea3 n\u0103ng th\u00f4ng qua nh\u1ecf nh\u1ea5t trong s\u1ed1 m\u1ecdi l\u00e1t c\u1eaft thu\u1ed9c m\u1ea1ng. - N\u1ebfu m\u1ecdi gi\u00e1 tr\u1ecb \\(c\\) tr\u00ean lu\u1ed3ng \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean th\u00ec gi\u00e1 tr\u1ecb lu\u1ed3ng c\u1ef1c \u0111\u1ea1i c\u0169ng l\u00e0 s\u1ed1 nguy\u00ean.</p>"},{"location":"algo/graph-theory/flow/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 1001;\n\nint n, m, s, t;\nvector &lt;int&gt; adj[MAXN];    //\u0111\u1ed3 th\u1ecb l\u01b0u ki\u1ec3u danh s\u00e1ch k\u1ec1\nint c[MAXN][MAXN], f[MAXN][MAXN], trace[MAXN], maxFlow;\n\n//BFS \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng\nvoid bfs()\n{\n    fill(trace, trace + n + 1, 0);\n    trace[s] = -1;\n\n    queue &lt;int&gt; bfsQueue;\n    bfsQueue.push(s);\n\n    while (!bfsQueue.empty())\n    {\n        int u = bfsQueue.front();\n        bfsQueue.pop();\n        for (auto v : adj[u])\n        {\n            //Kh\u00f4ng d\u1eabm l\u1ea1i \u0111\u01b0\u1eddng c\u0169 theo \u0111\u00fang lu\u1eadt BFS\n            if (trace[v]) continue;\n\n        //Kh\u00f4ng \u0111i qua c\u1ea1nh c\u00f3 r(u, v) = c(u, v) - f(u, v) = 0\n            if (f[u][v] - c[u][v] == 0) continue;\n\n            //C\u00e1c c\u00f4ng vi\u1ec7c c\u00f2n l\u1ea1i c\u1ee7a BFS\n            trace[v] = u;\n            bfsQueue.push(v);\n        }\n    }\n}\n\n//H\u00e0m t\u0103ng lu\u1ed3ng\nvoid incFlow()\n{\n    //\u0110i ng\u01b0\u1ee3c theo \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb delta = c - f t\u1ed1t nh\u1ea5t\n    int delta = INT_MAX;\n    int v = t;\n    while (v != s)\n    {\n        int u = trace[v];\n        delta = min(delta, c[u][v] - f[u][v]);\n        v = u;\n    }\n\n    maxFlow += delta;\n\n    //\u0110i ng\u01b0\u1ee3c theo \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng m\u1ed9t l\u1ea7n n\u1eefa \u0111\u1ec3 c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb f\n    v = t;\n    while (v != s)\n    {\n        int u = trace[v];\n        f[u][v] += delta;\n        f[v][u] -= delta;\n        v = u;\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t;\n    for (int u, v, i = 1; i &lt;= m; i ++)\n    {\n        cin &gt;&gt; u &gt;&gt; v;\n        cin &gt;&gt; c[u][v];\n        adj[u].push_back(v);\n        adj[v].push_back(u);    //l\u01b0u th\u00eam c\u1ea1nh ng\u01b0\u1ee3c \u0111\u1ec3 c\u00f3 th\u1ec3 ch\u1ea1y qua n\u00f3 khi t\u0103ng lu\u1ed3ng\n    }\n\n    maxFlow = 0;\n\n    //T\u0103ng lu\u1ed3ng \u0111\u1ebfn khi kh\u00f4ng t\u0103ng \u0111\u01b0\u1ee3c n\u1eefa\n    do\n    {\n        bfs();\n        if (trace[t]) incFlow();\n    } while (trace[t]);\n\n    cout &lt;&lt; maxFlow;\n}\n</code></pre>"},{"location":"algo/graph-theory/flow/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>Trong b\u00e0i to\u00e1n ch\u00fang ta x\u00e9t, t\u1ea5t c\u1ea3 c\u00e1c kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a c\u00e1c c\u1ea1nh \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean. Do \u0111\u00f3, m\u1ed7i b\u01b0\u1edbc t\u0103ng lu\u1ed3ng \u0111\u1ec1u l\u00e0m t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng l\u00ean \u00edt nh\u1ea5t \\(1\\) \u0111\u01a1n v\u1ecb. Khi s\u1eed d\u1ee5ng thu\u1eadt BFS ho\u1eb7c DFS \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng, \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd v\u00e0o c\u1ee1 \\(O(E)\\). Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson s\u1ebd l\u00e0 \\(O(Ef)\\), v\u1edbi \\(f\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng. \u0110\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1edbi th\u1eddi gian \u0111a th\u1ee9c tr\u00ean k\u00edch th\u01b0\u1edbc \u0111\u1ed3 th\u1ecb.</p> <p>V\u1edbi thu\u1eadt to\u00e1n Edmonds-Karp, khi s\u1eed d\u1ee5ng BFS, sau \\(O(EV)\\) l\u1ea7n t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng, ch\u00fang ta s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(E^2V)\\). B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o ch\u1ee9ng minh \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y t\u1ea1i \u0111\u00e2y.</p> <p>Khi th\u1ef1c hi\u1ec7n gi\u1ea3i thu\u1eadt Edmonds-Karp, c\u00e1c \u0111\u00e1nh gi\u00e1 ban \u0111\u1ea7u v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u00f3 th\u1ec3 sai l\u1ec7ch nhi\u1ec1u so v\u1edbi th\u1ef1c t\u1ebf. M\u1eb7c d\u00f9 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i l\u1edbn trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, n\u00f3 v\u1eabn ho\u1ea1t \u0111\u1ed9ng hi\u1ec7u qu\u1ea3 trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p. </p>"},{"location":"algo/graph-theory/flow/#thuat-toan-dinic","title":"Thu\u1eadt to\u00e1n Dinic","text":"<p>Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean, tuy \u0111\u00e1nh gi\u00e1 v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt Edmonds-Karp kh\u00f4ng h\u1ec1 \u0111\u1eb9p, n\u00f3 v\u1eabn ch\u1ea1y \u0111\u1ee7 nhanh trong th\u1ef1c t\u1ebf. T\u1ea5t nhi\u00ean, v\u1eabn c\u00f3 nh\u1eefng tr\u01b0\u1eddng h\u1ee3p thu\u1eadt n\u00e0y ch\u1ea1y ch\u01b0a \u0111\u01b0\u1ee3c \u1ed5n l\u1eafm, \u0111i\u1ec3n h\u00ecnh l\u00e0 khi m\u1ea1ng c\u00f3 r\u1ea5t nhi\u1ec1u c\u1ea1nh, v\u00ed d\u1ee5 c\u00f3 d\u1ea1ng c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u1ea7y \u0111\u1ee7 v\u1edbi \\(\\frac{V(V - 1)}{2}\\) c\u1ea1nh th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd l\u00e0 \\(O(V^5)\\), r\u1ea5t kh\u1ee7ng khi\u1ebfp. Thu\u1eadt to\u00e1n Dinic s\u1ebd l\u00e0m gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt \u0111i m\u1ed9t ch\u00fat. </p> <p>Thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c Yefim A. Dinitz (nhi\u1ec1u t\u00e0i li\u1ec7u \u0111\u1ec3 t\u00ean l\u00e0 E. A. Dinic) \u0111\u1ec1 xu\u1ea5t n\u0103m 1970. N\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh l\u00e0 c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(EV^2)\\), t\u1ed1t h\u01a1n thu\u1eadt to\u00e1n Edmonds-Karp.</p> <p>Thu\u1eadt to\u00e1n Dinic s\u1eed d\u1ee5ng nhi\u1ec1u \u00fd t\u01b0\u1edfng c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng. \u0110\u1ec3 \u0111\u1ecdc v\u00e0 hi\u1ec3u \u0111\u01b0\u1ee3c ph\u1ea7n d\u01b0\u1edbi \u0111\u00e2y, b\u1ea1n n\u00ean c\u00f3 ki\u1ebfn th\u1ee9c v\u1ec1 ph\u01b0\u01a1ng ph\u00e1p n\u00e0y tr\u01b0\u1edbc.</p>"},{"location":"algo/graph-theory/flow/#cac-khai-niem_1","title":"C\u00e1c kh\u00e1i ni\u1ec7m","text":"<ul> <li>Thu\u1eadt to\u00e1n Dinic v\u1eabn s\u1eed d\u1ee5ng kh\u00e1i ni\u1ec7m \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 gi\u1ed1ng nh\u01b0 trong ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson. Nh\u1eafc l\u1ea1i, \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 l\u00e0 \u0111\u1ed3 th\u1ecb m\u00e0 \u1ee9ng v\u1edbi m\u1ed7i c\u1ea1nh \\((u, v)\\) s\u1ebd c\u00f3 hai c\u1ea1nh, m\u1ed9t c\u1ea1nh \\((u, v)\\) c\u00f3 tr\u1ecdng s\u1ed1 \\(r(u, v) = c(u, v) - f(u, v)\\) v\u00e0 m\u1ed9t c\u1ea1nh \\((v, u)\\) c\u00f3 tr\u1ecdng s\u1ed1 \\(f(u, v)\\).</li> <li>M\u1ed9t lu\u1ed3ng c\u1ea3n (blocked flow) l\u00e0 m\u1ed9t t\u1eadp c\u00e1c c\u1ea1nh tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 d\u1ea1ng gi\u1ed1ng nh\u01b0 lu\u1ed3ng tr\u00ean m\u1ea1ng sao cho m\u1ecdi \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(s\\) \u0111\u1ebfn \\(t\\) \u0111\u1ec1u ch\u1ee9a \u00edt nh\u1ea5t m\u1ed9t c\u1ea1nh thu\u1ed9c t\u1eadp n\u00e0y.</li> <li>G\u1ecdi \\(d(u)\\) l\u00e0 m\u1ee9c/c\u1ea5p (level) c\u1ee7a \u0111\u1ec9nh \\(u\\) - \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t (t\u00ednh b\u1eb1ng s\u1ed1 c\u1ea1nh) \u0111\u1ec3 \u0111i t\u1eeb \\(s\\) \u0111\u1ebfn \\(u\\) tr\u00ean \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0. \u0110\u1ecbnh ngh\u0129a \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p (layered network) c\u1ee7a \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u l\u00e0 \u0111\u1ed3 th\u1ecb ch\u1ec9 ch\u1ee9a c\u00e1c c\u1ea1nh \\((u, v)\\) c\u00f3 tr\u1ecdng s\u1ed1 d\u01b0\u01a1ng tho\u1ea3 m\u00e3n \\(d(v) = d(u) + 1\\), t\u1ee9c l\u00e0 c\u00e1c c\u1ea1nh tham gia t\u1ea1o th\u00e0nh \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh.</li> </ul> <p>\u0110\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p (t\u1ea5t c\u1ea3 c\u00e1c \u0111\u01b0\u1eddng c\u00f3 m\u00e0u) v\u00e0 lu\u1ed3ng c\u1ea3n (xanh lam) c\u1ee7a \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0</p>"},{"location":"algo/graph-theory/flow/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n","text":"<p>Ta d\u1ef1ng \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p c\u1ee7a \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0. Tr\u00ean \u0111\u1ed3 th\u1ecb n\u00e0y, ta t\u00ecm m\u1ed9t lu\u1ed3ng c\u1ea3n r\u1ed3i t\u0103ng lu\u1ed3ng \u1edf t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh tr\u00ean lu\u1ed3ng c\u1ea3n n\u00e0y c\u00e0ng nhi\u1ec1u c\u00e0ng t\u1ed1t. N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u00e2y l\u00e0 ph\u01b0\u01a1ng ph\u00e1p Ford-Fulkerson v\u1edbi c\u00e1c \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng l\u00e0 c\u00e1c \u0111\u01b0\u1eddng c\u1ea3n trong lu\u1ed3ng c\u1ea3n. L\u1eb7p l\u1ea1i qu\u00e1 tr\u00ecnh tr\u00ean cho t\u1edbi khi ta kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(s\\) t\u1edbi \\(t\\) tr\u00ean \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p n\u1eefa, hay \\(d(t)\\) kh\u00f4ng x\u00e1c \u0111\u1ecbnh.</p> <p>\u0110\u1ec3 t\u00ecm lu\u1ed3ng c\u1ea3n, ta s\u1eed d\u1ee5ng DFS \u0111\u1ec3 t\u00ecm t\u1eebng \u0111\u01b0\u1eddng c\u1ea3n m\u1ed9t. M\u1ed7i \u0111\u01b0\u1eddng c\u1ea3n l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i c\u00f3 tr\u1ecdng s\u1ed1 d\u01b0\u01a1ng t\u1eeb \\(s\\) t\u1edbi \\(t\\) tr\u00ean \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p. \u0110\u00e2y l\u00e0 l\u00fd do thu\u1eadt Dinic \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"d\u00f9ng c\u1ea3 BFS v\u00e0 DFS \u0111\u1ec3 t\u00ecm lu\u1ed3ng\".</p> <p>\u0110\u1ec3 t\u1ed1i \u01b0u vi\u1ec7c c\u00e0i \u0111\u1eb7t, ta c\u00f3 th\u1ec3: - Kh\u00f4ng d\u1ef1ng \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 v\u00e0 \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p. C\u0169ng nh\u01b0 thu\u1eadt to\u00e1n Edmonds-Karp, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng th\u00eam c\u00e1c \"c\u1ea1nh\" ng\u01b0\u1ee3c v\u1edbi gi\u00e1 tr\u1ecb lu\u1ed3ng \u00e2m \u0111\u1ec3 bi\u1ec3u di\u1ec5n c\u00e1c c\u1ea1nh ng\u01b0\u1ee3c trong \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0. Vi\u1ec7c s\u1eed d\u1ee5ng \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p th\u00ec ch\u1ec9 l\u00e0 \u0111\u00e1nh c\u00e1c nh\u00e3n \\(d(u)\\) cho c\u00e1c \u0111\u1ec9nh \\(u\\) c\u1ee7a \u0111\u1ed3 th\u1ecb, r\u1ed3i ki\u1ec3m tra \\(c(u, v) - f(u, v) &gt; 0\\) v\u00e0 \\(d(u) + 1 = d(v)\\) \u0111\u1ec3 bi\u1ebft c\u1ea1nh \\((u, v)\\) (k\u1ec3 c\u1ea3 ng\u01b0\u1ee3c) c\u00f3 thu\u1ed9c \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p kh\u00f4ng. - T\u1ea1i m\u1ed7i \u0111\u1ec9nh, ch\u1ec9 DFS t\u1eeb c\u1ea1nh cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c x\u00e9t trong l\u1ea7n t\u00ecm \u0111\u01b0\u1eddng c\u1ea3n tr\u01b0\u1edbc \u0111\u00f3 v\u1edbi c\u00f9ng m\u1ed9t b\u1ed9 \\(d\\) (hay c\u00f9ng m\u1ed9t \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p) (xem code \u0111\u1ec3 hi\u1ec3u ph\u1ea7n n\u00e0y h\u01a1n). Vi\u1ec7c ti\u1ebfp t\u1ee5c s\u1eed d\u1ee5ng m\u1ed9t c\u1ea1nh n\u00e0o \u0111\u00f3 c\u1ee7a c\u00e1c \u0111\u01b0\u1eddng tr\u01b0\u1edbc \u0111\u00f3 \u0111\u1ec3 t\u0103ng lu\u1ed3ng l\u00e0 v\u00f4 ngh\u0129a, v\u00ec trong nh\u1eefng l\u1ea7n t\u00ecm tr\u01b0\u1edbc \u0111\u00f3, ta \u0111\u00e3 kh\u1eb3ng \u0111\u1ecbnh l\u00e0 ch\u00fang kh\u00f4ng th\u1ec3 t\u1ea1o ra \u0111\u01b0\u1eddng c\u1ea3n m\u1edbi r\u1ed3i. Khi kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c b\u1ea5t k\u1ef3 \u0111\u01b0\u1eddng c\u1ea3n n\u00e0o n\u1eefa, lu\u1ed3ng c\u1ea3n hi\u1ec7n t\u1ea1i coi nh\u01b0 \u0111\u00e3 xong. Ta t\u0103ng lu\u1ed3ng v\u00e0 \u0111\u00e1nh l\u1ea1i \\(d\\) cho c\u00e1c \u0111\u1ec9nh.</p> <p></p> <p>H\u00ecnh GIF tr\u00ean m\u00f4 t\u1ea3 thu\u1eadt to\u00e1n Dinic. T\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh c\u00f3 m\u00e0u \u0111\u1ec1u l\u00e0 c\u00e1c c\u1ea1nh n\u1eb1m tr\u00ean \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p. C\u00e1c c\u1ea1nh m\u00e0u xanh v\u00e0 \u0111\u1ecf l\u00e0 c\u00e1c c\u1ea1nh n\u1eb1m tr\u00ean lu\u1ed3ng c\u1ea3n t\u00ecm \u0111\u01b0\u1ee3c sau m\u1ed7i b\u01b0\u1edbc.</p>"},{"location":"algo/graph-theory/flow/#tinh-ung-an_1","title":"T\u00ednh \u0111\u00fang \u0111\u1eafn","text":"<p>\u0110\u1ecbnh l\u00fd: Thu\u1eadt to\u00e1n Dinic cho k\u1ebft qu\u1ea3 l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i</p> Ch\u1ee9ng minh <p> Thu\u1eadt to\u00e1n Dinic d\u1eebng khi n\u00f3 kh\u00f4ng th\u1ec3 t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng c\u1ea3n tr\u00ean \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p. Khi \u0111\u00f3, kh\u00f4ng t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb $s$ \u0111\u1ebfn $t$ tr\u00ean \u0111\u1ed3 th\u1ecb n\u00e0y, suy ra trong \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 c\u0169ng kh\u00f4ng t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng nh\u01b0 v\u1eady m\u00e0 kh\u00f4ng ph\u1ea3i \u0111i qua nh\u1eefng c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng $0$ - nh\u1eefng c\u1ea1nh \u0111\u1ea7y. Do v\u1eady lu\u1ed3ng t\u00ecm \u0111\u01b0\u1ee3c l\u00e0 c\u1ef1c \u0111\u1ea1i (\u0111pcm). </p>"},{"location":"algo/graph-theory/flow/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Trong b\u01b0\u1edbc DFS, \u0111\u1ec3 l\u1eadp tr\u00ecnh \u0111\u01a1n gi\u1ea3n h\u01a1n m\u1ed9t ch\u00fat, ta s\u1ebd k\u1ebft h\u1ee3p DFS v\u00e0 t\u0103ng lu\u1ed3ng. M\u1ed7i l\u1ea7n \u0111i t\u00ecm \u0111\u01b0\u1eddng c\u1ea3n, ta c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p l\u01b0u l\u1ea1i gi\u00e1 tr\u1ecb \\(\\Delta\\) nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng n\u00e0y lu\u00f4n, v\u00e0 khi \u0111\u01b0\u1eddng n\u00e0y \u0111\u1ebfn \u0111\u01b0\u1ee3c \\(t\\), ta th\u1ef1c hi\u1ec7n t\u0103ng lu\u1ed3ng tr\u00ean nh\u1eefng c\u1ea1nh \u0111\u00e3 x\u00e9t. <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 1001;\nconst int INF = 1e9 + 7;\n\nint n, m, s, t;\nvector &lt;int&gt; adj[MAXN];\nint c[MAXN][MAXN], f[MAXN][MAXN], d[MAXN], maxFlow;\n\n//ch\u1ec9 s\u1ed1 c\u1ee7a c\u1ea1nh cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c x\u00e9t trong danh s\u00e1ch k\u1ec1\nint curVertexId[MAXN];\n\n//BFS \u0111\u1ec3 t\u00ecm m\u1ee9c (d) c\u1ee7a m\u1ed7i \u0111\u1ec9nh\nvoid bfs()\n{\n    fill(d, d + n + 1, INF);\n    d[s] = 0;\n\n    queue &lt;int&gt; bfsQueue;\n    bfsQueue.push(s);\n\n    while (!bfsQueue.empty())\n    {\n        int u = bfsQueue.front();\n        bfsQueue.pop();\n        for (auto v : adj[u])\n        {\n        if (d[v] != INF) continue;\n            if (f[u][v] - c[u][v] == 0) continue;  //ch\u1ec9 x\u00e9t c\u1ea1nh d\u01b0\u01a1ng\n            d[v] = d[u] + 1;\n            bfsQueue.push(v);\n        }\n    }\n}\n\n//DFS t\u00ecm lu\u1ed3ng c\u1ea3n.\n//curDelta: gi\u00e1 tr\u1ecb delta t\u1ed1t nh\u1ea5t hi\u1ec7n c\u00f3 tr\u00ean \u0111\u01b0\u1eddng t\u1eeb s t\u1edbi u\n//H\u00e0m tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb delta t\u1ed1t nh\u1ea5t sau khi t\u00ecm xong \u0111\u01b0\u1eddng c\u1ea3n.\nint dfs(int u, int curDelta)\n{\n    if (curDelta == 0) return 0;\n    if (u == t) return curDelta;\n\n    //Ch\u1ec9 x\u00e9t t\u1eeb c\u1ea1nh cu\u1ed1i c\u00f9ng\n    for (; curVertexId[u] &lt; adj[u].size(); curVertexId[u] ++)\n    {\n        int v = adj[u][curVertexId[u]];\n\n        //Ch\u1ec9 x\u00e9t c\u1ea1nh thu\u1ed9c \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p\n        if (d[v] != d[u] + 1) continue;\n        if (f[u][v] == c[u][v]) continue;\n\n        //Th\u1ef1c hi\u1ec7n t\u0103ng lu\u1ed3ng\n        int delta = dfs(v, min(c[u][v] - f[u][v], curDelta));\n        if (delta == 0) continue;\n        f[u][v] += delta;\n        f[v][u] -= delta;\n        return delta;\n    }\n    return 0;\n}\n\nint32_t main()\n{\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t;\n    for (int u, v, i = 1; i &lt;= m; i ++)\n    {\n        cin &gt;&gt; u &gt;&gt; v;\n        cin &gt;&gt; c[u][v];\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    maxFlow = 0;\n\n    while (true)\n    {\n        bfs();\n        if (d[t] == INF) break;\n        for (int i = 1; i &lt;= n; i ++) curVertexId[i] = 0;\n        while (int delta = dfs(s, INF))\n            maxFlow += delta;\n    }\n\n    cout &lt;&lt; maxFlow;\n}\n</code></pre></p>"},{"location":"algo/graph-theory/flow/#o-phuc-tap_1","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>\u0110\u1ecbnh l\u00fd: Thu\u1eadt to\u00e1n Dinic c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(EV^2)\\)</p> Ch\u1ee9ng minh <p> G\u1ecdi $d_i(u)$ l\u00e0 m\u1ee9c c\u1ee7a \u0111\u1ec9nh $u$ sau khi th\u1ef1c hi\u1ec7n $i$ l\u1ea7n BFS v\u00e0 g\u00e1n nh\u00e3n $d$. Ta ch\u1ee9ng minh hai b\u1ed5 \u0111\u1ec1 sau: </p> <p> B\u1ed5 \u0111\u1ec1 1: $d_{i + 1}(u) \\ge d_i(u)$ </p> <p> X\u00e9t v\u00f2ng BFS th\u1ee9 $i$, \u0111ang x\u00e9t \u0111\u1ebfn \u0111\u1ec9nh $u$. X\u00e9t \u0111\u1ed3 th\u1ecb $G^R_i$ l\u00e0 \u0111\u1ed3 th\u1ecb th\u1eb7ng d\u01b0 \u1edf l\u01b0\u1ee3t BFS th\u1ee9 $i$. D\u1ec5 th\u1ea5y $G^R_{i + 1}$ lu\u00f4n bao g\u1ed3m m\u1ed9t s\u1ed1 c\u1ea1nh trong $G^R_i$ c\u00f9ng v\u1edbi m\u1ed9t s\u1ed1 c\u1ea1nh ng\u01b0\u1ee3c trong $G^R_i$.  T\u1ea1i v\u00f2ng th\u1ee9 $i + 1$, tr\u01b0\u1eddng h\u1ee3p \u0111\u01b0\u1eddng \u0111i t\u1eeb $s$ \u0111\u1ebfn $u$ kh\u00f4ng \u0111i qua c\u1ea1nh ng\u01b0\u1ee3c, hi\u1ec3n nhi\u00ean \u0111\u01b0\u1eddng \u0111i n\u00e0y ph\u1ea3i xu\u1ea5t hi\u1ec7n tr\u00ean $G^R_i$, cho n\u00ean $d_{i + 1}(u) = d_{i}(u)$.  </p> <p> Tr\u01b0\u1eddng h\u1ee3p \u0111\u01b0\u1eddng \u0111i n\u00e0y ch\u1ee9a c\u1ea1nh ng\u01b0\u1ee3c, gi\u1ea3 s\u1eed c\u1ea1nh \u0111\u1ea7u ti\u00ean nh\u01b0 v\u1eady l\u00e0 c\u1ea1nh $(w, v)$. Theo tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u, $d_{i + 1}(w) = d_{i}(w)$ (1). \u1ede v\u00f2ng th\u1ee9 $i$, \u0111\u01b0\u1eddng n\u00e0y v\u1eabn c\u00f2n \u0111i \u0111\u01b0\u1ee3c, do \u0111\u00f3 $d_i(w) = d_i(v) + 1$ (2). Nh\u01b0ng t\u1ea1i v\u00f2ng $i + 1$, c\u1ea1nh n\u00e0y tr\u1edf th\u00e0nh c\u1ea1nh ng\u01b0\u1ee3c, cho n\u00ean $d_{i + 1}(v) = d_i(w) + 1%$ (3). T\u1eeb (1), (2), (3) suy ra $d_{i + 1}(w) \\ge d_i(w) + 2$. </p> <p> T\u00f3m l\u1ea1i, trong c\u1ea3 hai tr\u01b0\u1eddng h\u1ee3p ta \u0111\u1ec1u c\u00f3 $d_{i + 1}(u) &gt;= d_i(u)$. B\u1ed5 \u0111\u1ec1 \u0111\u01b0\u1ee3c ch\u1ee9ng minh. </p> <p> B\u1ed5 \u0111\u1ec1 2: $d_{i + 1}(t) &gt; d_i(t)$ </p> <p> Theo b\u1ed5 \u0111\u1ec1 1, $d_{i + 1}(t) \\ge d_i(t)$. Gi\u1ea3 s\u1eed $d_{i + 1}(t) = d_i(t)$. V\u00ec $G^R_{i + 1}$ ch\u1ec9 ch\u1ee9a c\u00e1c c\u1ea1nh xu\u00f4i v\u00e0 c\u1ea1nh ng\u01b0\u1ee3c trong $G^R_i$ n\u00ean ph\u1ea3i t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb $s$ t\u1edbi $t$, tr\u00e1i v\u1edbi gi\u1ea3 thi\u1ebft m\u1ed9t lu\u1ed3ng c\u1ea3n \u0111\u01b0\u1ee3c t\u1ea1o ra. B\u1ed5 \u0111\u1ec1 \u0111\u01b0\u1ee3c ch\u1ee9ng minh. </p> <p> Theo b\u1ed5 \u0111\u1ec1 2, $d(t)$ t\u0103ng nghi\u00eam ng\u1eb7t sau m\u1ed7i l\u1ea7n BFS, nh\u01b0ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 $n - 1$. Do v\u1eady, thu\u1eadt to\u00e1n Dinic s\u1ebd BFS t\u1ed1i \u0111a $n$ l\u1ea7n. </p> <p> Chi ph\u00ed cho m\u1ed9t l\u1ea7n t\u00ecm lu\u1ed3ng c\u1ea3n l\u00e0 $O(mn)$, v\u1edbi $O(n)$ d\u00f9ng cho DFS tr\u00ean \u0111\u1ed3 th\u1ecb ph\u00e2n c\u1ea5p, v\u00e0 $O(m)$ cho vi\u1ec7c duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng DFS. L\u01b0u \u00fd do duy\u1ec7t t\u1eeb c\u1ea1nh cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c DFS, \u0111o\u1ea1n n\u00e0y ch\u1ec9 m\u1ea5t $O(mn)$ thay v\u00ec $O(m^2)$. </p> <p> T\u1ed5ng k\u1ebft hai ph\u1ea7n l\u1ea1i, ch\u00fang ta c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n Dinic l\u00e0 $O(mn^2)$. (\u0111pcm) </p>"},{"location":"algo/graph-theory/flow/#bai-toan-vi-du","title":"B\u00e0i to\u00e1n v\u00ed d\u1ee5","text":"<p>\u0110\u1ec1 b\u00e0i VNOI: FLOW1</p> <p>T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i: C\u00f3 \\(2n\\) h\u1ecdc sinh \u0111\u1ebfn t\u1eeb hai tr\u01b0\u1eddng SP, TH v\u00e0 \\(m\\) b\u00e0i to\u00e1n. M\u1ed7i h\u1ecdc sinh c\u00f3 th\u1ec3 gi\u1ea3i t\u1ed1t m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n cho tr\u01b0\u1edbc. C\u1ea7n ch\u1ecdn \\(n\\) b\u00e0i to\u00e1n sao cho:  - V\u1edbi m\u1ed7i b\u00e0i to\u00e1n, m\u1ed7i tr\u01b0\u1eddng c\u00f3 \u0111\u00fang m\u1ed9t h\u1ecdc sinh gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i \u0111\u00f3 - Kh\u00f4ng c\u00f3 h\u1ecdc sinh n\u00e0o l\u00e0m hai b\u00e0i to\u00e1n - Kh\u00f4ng c\u00f3 hai h\u1ecdc sinh n\u00e0o c\u00f9ng tr\u01b0\u1eddng l\u00e0m c\u00f9ng m\u1ed9t b\u00e0i to\u00e1n.</p> Ph\u00e2n t\u00edch <p> Theo nh\u01b0 \u0111\u1ec1 b\u00e0i, ta c\u1ea7n ch\u1ecdn ra $n$ b\u1ed9 ba ph\u00e2n bi\u1ec7t g\u1ed3m h\u1ecdc sinh tr\u01b0\u1eddng SP, h\u1ecdc sinh tr\u01b0\u1eddng TH, v\u00e0 m\u1ed9t b\u00e0i to\u00e1n. Vi\u1ec7c n\u00e0y c\u00f3 th\u1ec3 gi\u00fap ch\u00fang ta li\u00ean t\u01b0\u1edfng \u0111\u1ebfn lu\u1ed3ng c\u1ef1c \u0111\u1ea1i, b\u1eb1ng c\u00e1ch \u0111\u1ea3m b\u1ea3o r\u1eb1ng ba ph\u1ea7n tr\u00ean s\u1ebd li\u00ean ti\u1ebfp \u0111\u01b0\u1ee3c ch\u1ecdn, v\u00e0 ch\u1ec9 t\u1ed3n t\u1ea1i \u0111\u00fang $n$ b\u1ed9 nh\u01b0 v\u1eady. Ch\u00fang ta x\u00e2y d\u1ef1ng m\u1ea1ng sao cho $n$ \u0111\u1ec9nh \u0111\u1ea7u ti\u00ean \u0111\u1ea1i di\u1ec7n cho $n$ h\u1ecdc sinh tr\u01b0\u1eddng SP, v\u00e0 $n$ \u0111\u1ec9nh kh\u00e1c \u0111\u1ea1i di\u1ec7n cho $n$ h\u1ecdc sinh tr\u01b0\u1eddng TH. \u0110\u1ed1i v\u1edbi c\u00e1c b\u00e0i to\u00e1n, ch\u00fang ta th\u00eam c\u00e1c c\u1ea1nh n\u1ed1i ch\u00fang v\u1edbi m\u1ed9t h\u1ecdc sinh khi h\u1ecdc sinh \u0111\u00f3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n n\u00e0y. Kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a c\u00e1c c\u1ea1nh n\u00e0y l\u00e0 $1$, do m\u1ed7i h\u1ecdc sinh ch\u1ec9 \u0111\u01b0\u1ee3c gi\u1ea3i $1$ b\u00e0i to\u00e1n. Tuy nhi\u00ean, nh\u01b0 v\u1eady v\u1eabn ch\u01b0a gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c t\u00ecnh tr\u1ea1ng m\u1ed9t b\u00e0i to\u00e1n b\u1ecb gi\u1ea3i nhi\u1ec1u l\u1ea7n. V\u00ec v\u1eady, ta l\u1ea1i t\u00e1ch m\u1ed7i b\u00e0i to\u00e1n l\u00e0m $2$ \u0111\u1ec9nh n\u1ed1i v\u1edbi nhau b\u1eb1ng m\u1ed9t c\u1ea1nh v\u1edbi kh\u1ea3 n\u0103ng th\u00f4ng qua l\u00e0 $1$. L\u00fac n\u00e0y, ta s\u1ebd c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng \u0111i th\u1ed1ng nh\u1ea5t t\u1eeb m\u1ed9t h\u1ecdc sinh tr\u01b0\u1eddng SP, qua m\u1ed9t b\u00e0i to\u00e1n, \u0111\u1ebfn m\u1ed9t h\u1ecdc sinh tr\u01b0\u1eddng TH, v\u00e0 c\u0169ng \u0111\u1ea3m b\u1ea3o r\u1eb1ng b\u00e0i to\u00e1n ch\u1ec9 \u0111\u01b0\u1ee3c ch\u1ecdn m\u1ed9t l\u1ea7n. </p> <p> Ta c\u0169ng th\u00eam m\u1ed9t \u0111\u1ec9nh ph\u00e1t n\u1ed1i v\u1edbi t\u1eadp c\u00e1c h\u1ecdc sinh SP, m\u1ed9t \u0111\u1ec9nh thu n\u1ed1i v\u1edbi t\u1eadp c\u00e1c h\u1ecdc sinh TH, t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh n\u1ed1i n\u00e0y \u0111\u1ec1u c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng $1$. </p> <p> M\u1ea1ng c\u1ee7a ch\u00fang ta s\u1ebd c\u00f3 d\u1ea1ng nh\u01b0 th\u1ebf n\u00e0y </p> <p> \u0110\u1ec3 truy v\u1ebft, ta th\u1ef1c hi\u1ec7n t\u00ecm \u0111\u01b0\u1eddng tr\u00ean lu\u1ed3ng m\u00e0 ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c, c\u0169ng ch\u00ednh l\u00e0 c\u00e1c c\u1ea1nh c\u00f3 gi\u00e1 tr\u1ecb lu\u1ed3ng \u0111\u1ea1t c\u1ef1c \u0111\u1ea1i. </p> <p> Ph\u1ea7n c\u00e0i \u0111\u1eb7t chi ti\u1ebft thu\u1eadt to\u00e1n tr\u00ean s\u1ebd d\u00e0nh cho b\u1ea1n \u0111\u1ecdc. </p>"},{"location":"algo/graph-theory/flow/#mot-so-chu-y","title":"M\u1ed9t s\u1ed1 ch\u00fa \u00fd","text":"<ul> <li>Khi gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n v\u1ec1 lu\u1ed3ng ho\u1eb7c l\u00e1t c\u1eaft, lo\u1ea1i b\u00e0i li\u00ean quan \u0111\u1ebfn m\u1ea1ng \u0111\u01a1n v\u1ecb (m\u1ea1ng c\u00f3 c\u00e1c kh\u1ea3 n\u0103ng th\u00f4ng qua tr\u00ean c\u00e1c c\u1ea1nh l\u00e0 \\(1\\)) kh\u00e1 ph\u1ed5 bi\u1ebfn. Tr\u00ean nh\u1eefng m\u1ea1ng n\u00e0y, khi t\u00ecm th\u00e0nh c\u00f4ng lu\u1ed3ng c\u1ef1c \u0111\u1ea1i, lu\u1ed3ng c\u00e1c c\u1ea1nh s\u1ebd ch\u1ec9 \u1edf m\u1ed9t trong hai tr\u1ea1ng th\u00e1i: \u0111\u1ea7y (\\(f = 1\\)) ho\u1eb7c r\u1ed7ng (\\(f = 0\\)); c\u00f2n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i s\u1ebd c\u00f3 d\u1ea1ng m\u1ed9t s\u1ed1 \u0111\u01b0\u1eddng \u0111i kh\u00f4ng giao nhau.</li> <li>Khi m\u1ea1ng \u0111\u01a1n v\u1ecb c\u00f3 d\u1ea1ng \u0111\u1ed3 th\u1ecb hai ph\u00eda (\u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 chia c\u00e1c \u0111\u1ec9nh th\u00e0nh \\(2\\) t\u1eadp h\u1ee3p sao cho kh\u00f4ng c\u00f3 hai \u0111\u1ec9nh n\u00e0o c\u00f9ng m\u1ed9t t\u1eadp h\u1ee3p c\u00f3 c\u1ea1nh n\u1ed1i \u0111\u1ebfn nhau) c\u00f9ng v\u1edbi \u0111\u1ec9nh ngu\u1ed3n v\u00e0 \u0111\u1ec9nh \u0111\u00edch, b\u00e0i to\u00e1n tr\u1edf th\u00e0nh d\u1ea1ng c\u1eb7p gh\u00e9p c\u1ef1c \u0111\u1ea1i tr\u00ean \u0111\u1ed3 th\u1ecb hai ph\u00eda. B\u1ea1n \u0111\u1ecdc n\u00ean t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 b\u00e0i to\u00e1n n\u00e0y \u0111\u1ec3 \u0111\u01b0a ra nh\u1eefng gi\u1ea3i thu\u1eadt linh ho\u1ea1t h\u01a1n trong t\u1eebng tr\u01b0\u1eddng h\u1ee3p c\u1ee5 th\u1ec3.</li> <li>Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean, c\u00e1ch \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thu\u1eadt to\u00e1n tr\u00ean c\u00f3 th\u1ec3 sai l\u1ec7ch t\u01b0\u01a1ng \u0111\u1ed1i so v\u1edbi th\u1ef1c t\u1ebf. V\u00ec v\u1eady, khi l\u00e0m nh\u1eefng b\u00e0i lu\u1ed3ng, \u0111\u00f4i l\u00fac b\u1ea1n c\u00f3 th\u1ec3 t\u00ednh ra m\u1ed9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p r\u1ea5t l\u1edbn, nh\u01b0ng thu\u1eadt to\u00e1n l\u1ea1i ch\u1ea1y t\u1ed1t. Ngay nh\u01b0 b\u00e0i NKFLOW \u1edf tr\u00ean, ch\u00fang ta v\u1eabn AC \u0111\u01b0\u1ee3c v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(E^2V)\\).</li> <li>Tuy ch\u00eanh l\u1ec7ch v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p gi\u1eefa thu\u1eadt Edmonds-Karp v\u00e0 Dinic l\u00e0 c\u00f3 th\u1ec3 th\u1ea5y ngay, nh\u01b0ng khi ch\u1ea1y, thu\u1eadt Dinic th\u01b0\u1eddng c\u0169ng kh\u00f4ng c\u1ea3i thi\u1ec7n \u0111\u01b0\u1ee3c qu\u00e1 nhi\u1ec1u. C\u00e1c t\u00e1c gi\u1ea3 c\u1ee7a Competitive Programing 3 c\u0169ng th\u1eeba nh\u1eadn h\u1ecd \"ch\u01b0a t\u1eebng g\u1eb7p m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed3 th\u1ecb n\u00e0o cho k\u1ebft qu\u1ea3 AC b\u1eb1ng Dinic m\u00e0 ch\u1ea1y TLE b\u1eb1ng thu\u1eadt Edmonds-Karp\". Tuy nhi\u00ean, n\u1ebfu mu\u1ed1n c\u00f3 s\u1ef1 t\u1ed1i \u01b0u, h\u00e3y s\u1eed d\u1ee5ng thu\u1eadt Dinic. C\u00f2n n\u1ebfu b\u1ea1n mu\u1ed1n m\u1ed9t thu\u1eadt d\u1ec5 c\u00e0i \u0111\u1eb7t, d\u1ec5 nh\u1edb v\u00e0 d\u1ec5 hi\u1ec3u h\u01a1n, c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Edmonds-Karp.</li> <li>Edmonds-Karp v\u00e0 Dinic l\u00e0 hai thu\u1eadt ph\u1ed5 bi\u1ebfn nh\u01b0ng kh\u00f4ng ph\u1ea3i duy nh\u1ea5t \u0111\u1ec3 t\u00ecm lu\u1ed3ng c\u1ef1c \u0111\u1ea1i. B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 thu\u1eadt push-relabel (1985) v\u00e0 MPM (1978) t\u1ea1i CP Algorithms. G\u1ea7n \u0111\u00e2y, \u0111\u00e3 c\u00f3 nh\u1eefng thu\u1eadt tinh vi h\u01a1n t\u00ecm \u0111\u01b0\u1ee3c lu\u1ed3ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(EV)\\), nh\u01b0 thu\u1eadt c\u1ee7a King, Rao, and Tarjan (1994), c\u1ee7a Orlin (2012). Th\u1eadm ch\u00ed, n\u0103m 2022, \u0111\u00e3 c\u00f3 th\u00eam m\u1ed9t thu\u1eadt to\u00e1n gi\u1ea3i b\u00e0i to\u00e1n g\u1ea7n v\u1edbi b\u00e0i n\u00e0y l\u00e0 min-cost flow v\u1edbi th\u1eddi gian g\u1ea7n tuy\u1ebfn t\u00ednh \\(O(E^{1+o(1)})\\).</li> </ul>"},{"location":"algo/graph-theory/flow/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<ul> <li>BAOVE</li> <li>STNODE</li> <li>KWAY</li> <li>JOBSET</li> <li>Delivery Bears</li> <li>Soldier and Traveling</li> <li>Array and Operations</li> <li>Red-Blue Graph</li> <li>Download Speed</li> <li>Police Chase</li> <li>School Dance</li> </ul> <p>Ngo\u00e0i ra, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 luy\u1ec7n t\u1eadp b\u1eb1ng c\u00e1c b\u00e0i t\u1eadp kh\u00e1c c\u00f3 g\u1eafn tag <code>flows</code> tr\u00ean VNOJ v\u00e0 c\u00e1c OJ kh\u00e1c.</p>"},{"location":"algo/graph-theory/flow/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>L\u00ea Minh Ho\u00e0ng (2003), Gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh</li> <li>Steven Halim, Felix Halim (2013), Competitive Programing 3</li> <li>CP Algorithms: <ul> <li>Maximum flow - Ford-Fulkerson and Edmonds-Karp</li> <li>Maximum flow - Dinic's algorithm</li> </ul> </li> <li>Wikipedia (v\u1ec1 l\u1ecbch s\u1eed c\u1ee7a c\u00e1c thu\u1eadt to\u00e1n)</li> <li>VNOI Wiki: Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng - Maxflow network (b\u00e0i vi\u1ebft c\u0169)</li> <li>Ph\u1ea7n ch\u1ee9ng minh tr\u00ean brilliant.org</li> <li>Reza Zadeh (2014), CME 305: Discrete Mathematics and Algorithms - Lecture 3</li> </ul>"},{"location":"algo/graph-theory/lubenica-vnoj/","title":"B\u00e0i to\u00e1n LUBENICA","text":""},{"location":"algo/graph-theory/lubenica-vnoj/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>B\u00e0i n\u00e0y c\u00f3 nhi\u1ec1u h\u01b0\u1edbng gi\u1ea3i, m\u1ed9t trong s\u1ed1 \u0111\u00f3 l\u00e0 s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt Heavy Light Decomposition, tuy nhi\u00ean c\u00f3 1 c\u00e1ch l\u00e0m \u0111\u01a1n gi\u1ea3n h\u01a1n cho b\u00e0i n\u00e0y l\u00e0 s\u1eed d\u1ee5ng LCA v\u00e0 RMQ</p>"},{"location":"algo/graph-theory/lubenica-vnoj/#giai-bang-lca","title":"Gi\u1ea3i b\u1eb1ng LCA","text":"<p>G\u1ecdi <code>up[u][i].par</code> l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2^i\\) c\u1ee7a \\(u\\), <code>maxc</code> l\u00e0 c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb u l\u00ean <code>up[u][i]</code>. T\u01b0\u01a1ng t\u1ef1 v\u1edbi <code>minc</code> l\u00e0 c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t. C\u00f3 th\u1ec3 t\u00ednh \\(up[u][0]\\) khi dfs d\u1ef1ng c\u00e2y, t\u1ee9c l\u00e0 n\u00fat cha tr\u1ef1c ti\u1ebfp c\u1ee7a u, c\u0169ng l\u00e0 c\u1ea1nh t\u1eeb cha \u0111\u1ebfn u. C\u00f3 th\u1ec3 t\u00ednh <code>up[u][i]</code> (i &gt; 0) th\u00f4ng qua c\u00f4ng th\u1ee9c QH\u0110 sau:</p> <p>\u0110\u1eb7t <code>p = up[u][i-1].par</code>, do  p l\u00e0 cha th\u1ee9 \\(2^i\\) c\u1ee7a \\(u\\) \u21d2 <code>up[u][i].par = up[p][i-1].par</code> , cha th\u1ee9 \\(2^{i-1}\\) c\u1ee7a <code>p</code> c\u0169ng l\u00e0 cha th\u1ee9 \\(2^i\\) c\u1ee7a <code>u</code>.</p> <p>V\u1eady n\u00ean <code>up[u][i].maxc = max(up[u][i-1].maxc. up[p][i-1].maxc)</code> c\u00f3 ngh\u0129a l\u00e0 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t khi nh\u1ea3y t\u1eeb <code>u</code> l\u00ean cha th\u1ee9 \\(2^i\\) \u0111i qua c\u00e1c c\u1ea1nh b\u1eb1ng tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t khi nh\u1ea3y t\u1eeb <code>u</code> l\u00ean cha th\u1ee9 \\(2^{i - 1}\\) l\u00e0 <code>p</code> v\u00e0 nh\u1ea3y t\u1eeb <code>p</code> l\u00ean cha th\u1ee9 \\(2^{i - 1}\\)</p> <p>V\u00ed d\u1ee5 : V\u1edbi u = 10, i = 2 ta th\u1ef1c hi\u1ec7n c\u1eadp nh\u1eadt m\u1ea3ng up nh\u01b0 h\u00ecnh v\u1ebd d\u01b0\u1edbi \u0111\u00e2y: </p> <ul> <li><code>up[u][i - 1].maxc</code> \u1edf \u0111\u00e2y l\u00e0 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a c\u00e1c c\u1ea1nh 5 - 8 v\u00e0 8 - 10, do \u0111\u00f3 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng 9</li> <li><code>up[p][i - 1].maxc</code> \u1edf \u0111\u00e2y l\u00e0 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a c\u00e1c c\u1ea1nh 1 - 7 v\u00e0 7 - 5, do \u0111\u00f3 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng 8 Khi \u0111\u00f3 <code>up[u][i].maxc</code> ta s\u1ebd c\u1eadp nh\u1eadt b\u1eb1ng gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a <code>up[u][i - 1].maxc</code> v\u00e0 <code>up[p][i - 1].maxc</code> c\u00f3 ngh\u0129a l\u00e0 khi nh\u1ea3y t\u1eeb <code>u = 10</code> l\u00ean cha th\u1ee9 \\(2^{i - 1}\\) l\u00e0 <code>p = 5</code> v\u00e0 t\u1eeb <code>p</code> l\u00ean cha th\u1ee9 \\(2^{i - 1}\\) c\u1ee7a <code>p</code> l\u00e0 <code>1</code>. N\u00ean <code>up[u][i].maxc = max(8, 9) = 9</code>.</li> </ul> <p>T\u01b0\u01a1ng t\u1ef1 cho min. Sau \u0111\u00f3 v\u1edbi m\u1ed7i truy v\u1ea5n t\u00ecm LCA c\u1ee7a hai \u0111\u1ec9nh r\u1ed3i t\u00ecm min v\u00e0 max tr\u00ean m\u1ed7i \u0111o\u1ea1n n\u00e0y</p>"},{"location":"algo/graph-theory/lubenica-vnoj/#code-mau","title":"Code m\u1eabu","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n## define fi first\n## define se second\n## define bit(x, k) (1ll&amp;((x) &gt;&gt; (k)))\n\nconst int N = 1e5 + 11;\nconst int INF = 1e9 + 11;\n\nstruct Data {\n    int par, minc = INF, maxc = -INF;\n};\n\nint n, q, h[N];\nData up[N][21];\nvector &lt; pair&lt;int, int&gt; &gt; g[N];\n\nvoid dfs(int u, int p) { // x\u00e2y d\u1ef1ng m\u1ea3ng up, m\u1ea3ng h\n    up[u][0].par = p;\n    for (auto &amp;e : g[u]) {\n        int v = e.fi; int c = e.se;\n        if (v == p) continue;\n        h[v] = h[u] + 1; // \u0111\u1ed9 s\u00e2u c\u1ee7a n\u00fat v\n        up[v][0].maxc = up[v][0].minc = c;\n        dfs(v, u);\n    }\n}\n\nvoid solve(int u, int v) {\n    Data res;\n    // m\u1eb7c \u0111\u1ecbnh u c\u00f3 \u0111\u1ed9 s\u00e2u l\u1edbn h\u01a1n v\n    if (h[u] &lt; h[v]) swap(u, v);\n    int depth = h[u] - h[v];\n    // t\u1eeb u nh\u1ea3y l\u00ean cha c\u00f3 c\u00f9ng \u0111\u1ed9 s\u00e2u v\u1edbi v \u0111\u1ed3ng th\u1eddi c\u1eadp nh\u1eadt max, min c\u00e1c c\u1ea1nh\n    for (int i = 20; i &gt;= 0; i--) {\n        if (bit(depth, i)) {\n            res.maxc = max(res.maxc, up[u][i].maxc);\n            res.minc = min(res.minc, up[u][i].minc);\n            u = up[u][i].par;\n        }\n    }\n\n    // u b\u1eb1ng v th\u00ec in ra k\u1ebft qu\u1ea3\n    if (u == v) {\n        cout &lt;&lt; res.minc &lt;&lt; ' ' &lt;&lt; res.maxc &lt;&lt; '\\n';\n        return;\n    }\n    // u v\u00e0 v nh\u1ea3y \u0111\u1ed3ng th\u1eddi l\u00ean cha chung g\u1ea7n nh\u1ea5t v\u00e0 c\u1eadp nh\u1eadt\n    for (int i = 20; i &gt;= 0; --i) {\n        if (up[u][i].par != up[v][i].par) {\n            res.maxc = max({res.maxc, up[u][i].maxc, up[v][i].maxc});\n            res.minc = min({res.minc, up[u][i].minc, up[v][i].minc});\n            u = up[u][i].par; v = up[v][i].par;\n        }\n    }\n    res.maxc = max({res.maxc, up[u][0].maxc, up[v][0].maxc});\n    res.minc = min({res.minc, up[u][0].minc, up[v][0].minc});\n    cout &lt;&lt; res.minc &lt;&lt; ' ' &lt;&lt; res.maxc &lt;&lt; '\\n';\n}\n\nvoid buildLCA() {\n    dfs(1, 1);\n    for (int i = 1; i &lt;= 20; i++) {\n        for (int u = 1; u &lt;= n; u++) {\n            up[u][i].par = up[up[u][i - 1].par][i - 1].par;\n            up[u][i].maxc = max(up[u][i - 1].maxc, up[up[u][i - 1].par][i - 1].maxc);\n            up[u][i].minc = min(up[u][i - 1].minc, up[up[u][i - 1].par][i - 1].minc);\n        }\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n - 1; i++) {\n        int u, v, c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        g[u].push_back({v, c});\n        g[v].push_back({u, c});\n    }\n\n    buildLCA();\n\n    cin &gt;&gt; q;\n    while (q--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        // t\u00ecm min, max c\u1ee7a tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb u \u0111\u1ebfn v\n        solve(u, v);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/minimum-spanning-tree/","title":"B\u00e0i to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t trong \u0111\u1ed3 th\u1ecb","text":"<p>T\u00e1c gi\u1ea3:  * Ho\u00e0ng Vi\u1ec7t C\u01b0\u1eddng - \u0110\u1ea1i h\u1ecdc B\u00e1ch Khoa H\u00e0 N\u1ed9i * Phan Th\u00e0nh Long - THPT Chuy\u00ean Th\u00e1i B\u00ecnh (K17-20)</p> <p>Reviewer: V\u01b0\u01a1ng Ho\u00e0ng Long - \u0110\u1ea1i h\u1ecdc Qu\u1ed1c Gia Singapore </p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#mot-so-kien-thuc-can-biet","title":"M\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft","text":"<p>V\u00ec b\u00e0i vi\u1ebft n\u00f3i v\u1ec1 c\u00e2y khung nh\u1ecf nh\u1ea5t, c\u00e1c b\u1ea1n n\u00ean \u0111\u1ecdc m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c li\u00ean quan \u0111\u1ebfn c\u00e2y tr\u01b0\u1edbc m\u00e0 m\u00ecnh li\u1ec7t k\u00ea d\u01b0\u1edbi \u0111\u00e2y v\u00ec \u0111\u00e2y l\u00e0 nh\u1eefng ki\u1ebfn th\u1ee9c r\u1ea5t th\u01b0\u1eddng g\u1eb7p trong nh\u1eefng b\u00e0i t\u1eadp v\u1ec1 c\u00e2y khung, trong khu\u00f4n kh\u1ed5 b\u00e0i vi\u1ebft m\u00ecnh s\u1ebd kh\u00f4ng gi\u1ea3i th\u00edch l\u1ea1i v\u1ec1 nh\u1eefng ki\u1ebfn th\u1ee9c n\u00e0y n\u1eefa: * Lowest Common Accessor * Disjoin Set Union</p> <p>L\u01b0u \u00fd: To\u00e0n b\u1ed9 ph\u1ea7n code ph\u00eda d\u01b0\u1edbi s\u1eed d\u1ee5ng cho <code>C++11</code> tr\u1edf l\u00ean, c\u00e1c b\u1ea1n l\u01b0u \u00fd ki\u1ec3m tra tr\u00ecnh bi\u00ean d\u1ecbch c\u1ee7a m\u00ecnh.</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#cay-khung-nho-nhat-la-gi","title":"C\u00e2y khung nh\u1ecf nh\u1ea5t l\u00e0 g\u00ec","text":""},{"location":"algo/graph-theory/minimum-spanning-tree/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Theo l\u00fd thuy\u1ebft \u0111\u1ed3 th\u1ecb, ch\u00fang ta \u0111\u1ec1u bi\u1ebft r\u1eb1ng 1 \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng c\u00f4ng th\u1ee9c \\(G = (V, E)\\), trong \u0111\u00f3 \u0111\u1ed3 th\u1ecb \\(G\\) c\u1ee7a ch\u00fang ta bao g\u1ed3m t\u1eadp c\u00e1c \u0111\u1ec9nh \\(V\\) v\u00e0 t\u1eadp c\u00e1c c\u1ea1nh \\(E\\).</p> <ul> <li>C\u00e2y khung (spanning tree) c\u1ee7a \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb th\u1ecfa m\u00e3n t\u1eadp c\u1ea1nh n\u00e0y kh\u00f4ng ch\u1ee9a chu tr\u00ecnh v\u00e0 li\u00ean th\u00f4ng (t\u1eeb m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec c\u00f3 th\u1ec3 \u0111i t\u1edbi b\u1ea5t k\u1ef3 \u0111\u1ec9nh n\u00e0o kh\u00e1c theo m\u00e0 ch\u1ec9 d\u00f9ng c\u00e1c c\u1ea1nh tr\u00ean c\u00e2y khung)</li> <li> <p>Trong \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1, c\u00e2y khung nh\u1ecf nh\u1ea5t (minimum spanning tree) l\u00e0 c\u00e2y khung c\u00f3 t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh trong c\u00e2y nh\u1ecf nh\u1ea5t.</p> </li> <li> <p>M\u1ed9t v\u00ed d\u1ee5 v\u1ec1 c\u00e2y khung trong \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng kh\u00f4ng tr\u1ecdng s\u1ed1:</p> </li> </ul> <p></p> <ul> <li>M\u1ed9t v\u00ed d\u1ee5 v\u1ec1 c\u00e2y khung nh\u1ecf nh\u1ea5t trong \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng c\u00f3 tr\u1ecdng s\u1ed1: </li> </ul> <p>Trong khu\u00f4n kh\u1ed5 b\u00e0i vi\u1ebft, ch\u00fang ta s\u1ebd l\u00e0m vi\u1ec7c v\u1edbi \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng c\u00f3 tr\u1ecdng s\u1ed1.</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#tinh-chat","title":"T\u00ednh ch\u1ea5t","text":"<p>M\u1ed9t v\u00e0i t\u00ednh ch\u1ea5t c\u1ee7a c\u00e2y khung nh\u1ecf nh\u1ea5t trong \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng c\u00f3 tr\u1ecdng s\u1ed1: * 1. T\u00ednh ch\u1ea5t chu tr\u00ecnh: Trong m\u1ed9t chu tr\u00ecnh \\(C\\) b\u1ea5t k\u1ef3, n\u1ebfu \\(e\\) l\u00e0 c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t tuy\u1ec7t \u0111\u1ed1i (kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e0o c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng \\(e\\)) th\u00ec \\(e\\) kh\u00f4ng th\u1ec3 n\u1eb1m tr\u00ean b\u1ea5t k\u1ef3 c\u00e2y khung nh\u1ecf nh\u1ea5t n\u00e0o.</p> <ul> <li> <p>2. \u0110\u01b0\u1eddng \u0111i h\u1eb9p nh\u1ea5t: X\u00e9t 2 \u0111\u1ec9nh \\(u\\), \\(v\\) b\u1ea5t k\u1ef3 trong \u0111\u1ed3 th\u1ecb. N\u1ebfu \\(w\\) l\u00e0 tr\u1ecdng s\u1ed1 c\u1ee7a c\u1ea1nh l\u1edbn nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb th\u00ec ta kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i n\u00e0o t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) tr\u00ean \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u ch\u1ec9 \u0111i qua nh\u1eefng c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf h\u01a1n \\(w\\).</p> </li> <li> <p>3. T\u00ednh duy nh\u1ea5t: N\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh \u0111\u1ec1u c\u00f3 tr\u1ecdng s\u1ed1 kh\u00e1c nhau th\u00ec ch\u1ec9 c\u00f3 duy m\u1ed9t c\u00e2y khung nh\u1ecf nh\u1ea5t. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu m\u1ed9t v\u00e0i c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 gi\u1ed1ng nhau th\u00ec c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u h\u01a1n m\u1ed9t c\u00e2y khung nh\u1ecf nh\u1ea5t.</p> </li> <li> <p>4. T\u00ednh ch\u1ea5t c\u1ea1nh nh\u1ecf nh\u1ea5t: N\u1ebfu \\(e\\) l\u00e0 c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb, v\u00e0 kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e0o c\u00f3 tr\u1ecdng s\u1ed1 b\u1eb1ng \\(e\\) th\u00ec \\(e\\) n\u1eb1m trong m\u1ecdi c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> </li> </ul>"},{"location":"algo/graph-theory/minimum-spanning-tree/#chung-minh","title":"Ch\u1ee9ng minh","text":"<p>L\u01b0u \u00fd : c\u00e1c b\u1ea1n m\u1edbi h\u1ecdc c\u00e2y khung l\u1ea7n \u0111\u1ea7u c\u00e2n nh\u1eafc vi\u1ec7c \u0111\u1ecdc ch\u1ee9ng minh, t\u00e1c gi\u1ea3 khuy\u00ean c\u00e1c b\u1ea1n n\u00ean t\u1ea1m th\u1eddi b\u1ecf qua ph\u1ea7n n\u00e0y</p> <p>Xuy\u00ean su\u1ed1t c\u1ea3 b\u1ed1n t\u00ednh ch\u1ea5t, ta \u0111\u1ec1u s\u1eed d\u1ee5ng ph\u00e9p ph\u1ea3n ch\u1ee9ng \u0111\u1ec3 ch\u1ee9ng minh * 1. T\u00ednh ch\u1ea5t chu tr\u00ecnh:     Gi\u1ea3 s\u1eed \\(e\\) thu\u1ed9c m\u1ed9t c\u00e2y khung \\(T\\) c\u1ee7a \u0111\u1ed3 th\u1ecb, ta s\u1ebd ch\u1ee9ng minh lu\u00f4n t\u1ed3n t\u1ea1i m\u1ed9t c\u00e2y khung kh\u00e1c c\u1ee7a \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf h\u01a1n \\(T\\).      - Ta th\u1eed x\u00f3a c\u1ea1nh \\(e\\) kh\u1ecfi c\u00e2y khung \\(T\\). L\u00fac n\u00e0y, \\(T\\) s\u1ebd b\u1ecb chia l\u00e0m 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng v\u00e0 t\u1ed5ng tr\u1ecdng s\u1ed1 gi\u1ea3m \u0111i \\(w_e\\).     - X\u00e9t c\u00e1c \u0111\u1ec9nh n\u1eb1m trong chu tr\u00ecnh \\(C\\), gi\u1ea3 s\u1eed sau khi x\u00f3a \\(e\\) kh\u1ecfi c\u00e2y khung, c\u00e1c \u0111\u1ec9nh n\u00e0y v\u1eabn li\u00ean th\u00f4ng v\u1edbi nhau. V\u00ec th\u1ebf, khi th\u00eam \\(e\\) tr\u1edf l\u1ea1i v\u00e0o c\u00e2y khung, \\(e\\) s\u1ebd k\u1ebft n\u1ed1i 2 \u0111\u1ec9nh \u0111\u00e3 li\u00ean th\u00f4ng v\u1edbi nhau \\(\\Rightarrow\\) t\u1ed3n t\u1ea1i chu tr\u00ecnh trong c\u00e2y khung \\(\\Rightarrow\\) Tr\u00e1i v\u1edbi gi\u1ea3 thi\u1ebft \\(T\\) l\u00e0 c\u00e2y khung.      \u21d2 V\u1eady n\u00ean, khi x\u00f3a \\(e\\) kh\u1ecfi \\(T\\), c\u00e1c \u0111\u1ec9nh n\u1eb1m trong chu tr\u00ecnh \\(C\\) s\u1ebd b\u1ecb t\u00e1ch l\u00e0m 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng. Do \u0111\u00f3, ta c\u00f3 th\u1ec3 ch\u1ecdn ra c\u1ea1nh \\(e'\\) kh\u00e1c \\(e\\) thu\u1ed9c chu tr\u00ecnh \\(C\\) \u0111\u1ec3 k\u1ebft n\u1ed1i 2 th\u00e0nh li\u00ean th\u00f4ng n\u00e0y, bi\u1ebfn \\(T\\) tr\u1edf l\u1ea1i th\u00e0nh m\u1ed9t c\u00e2y khung c\u1ee7a \u0111\u1ed3 th\u1ecb. M\u1eb7t kh\u00e1c, \\(e\\) l\u00e0 c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t tuy\u1ec7t \u0111\u1ed1i tr\u00ean \\(C\\), n\u00ean khi thay \\(e\\) b\u1eb1ng \\(e'\\), tr\u1ecdng s\u1ed1 c\u1ee7a T s\u1ebd gi\u1ea3m \u0111i \\(w_e - w_{e'}\\) K\u1ebft lu\u1eadn: T kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <ul> <li>2. \u0110\u01b0\u1eddng \u0111i h\u1eb9p nh\u1ea5t: <ul> <li>X\u00e9t c\u00e2y khung nh\u1ecf nh\u1ea5t \\(T\\) b\u1ea5t k\u1ef3 c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G\\) m\u00e0 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) tr\u00ean \\(G\\) c\u00f3 c\u1ea1nh l\u1edbn nh\u1ea5t nh\u1ecf h\u01a1n c\u1ea1nh l\u1edbn nh\u1ea5t c\u1ee7a \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) tr\u00ean \\(T\\). </li> <li>G\u1ecdi \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) tr\u00ean \\(G\\) l\u00e0 \\(path\\), c\u1ea1nh l\u1edbn nh\u1ea5t c\u1ee7a \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) tr\u00ean \\(T\\) l\u00e0 \\(e\\).  \u21d2 Nh\u01b0 v\u1eady, n\u1ebfu x\u00f3a \\(e\\) kh\u1ecfi c\u00e2y khung ban \u0111\u1ea7u, c\u00e2y khung s\u1ebd b\u1ecb chia th\u00e0nh 2 TPLT r\u1eddi nhau, m\u1ed9t TPLT ch\u1ee9a \\(u\\) v\u00e0 TPLT c\u00f2n l\u1ea1i ch\u1ee9a \\(v\\). </li> <li>Do \\(path\\) l\u00e0 \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) tr\u00ean \\(G\\) n\u00ean tr\u00ean \\(path\\) s\u1ebd t\u1ed3n t\u1ea1i c\u1ea1nh \\(e'\\) c\u00f3 th\u1ec3 k\u1ebft n\u1ed1i 2 TPLT n\u00e0y. M\u00e0 m\u1ecdi c\u1ea1nh tr\u00ean \\(path\\) \u0111\u1ec1u c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf h\u01a1n \\(e\\) (nh\u01b0 gi\u1ea3 thi\u1ebft)  \u21d2 Khi xo\u00e1 \\(e\\) v\u00e0 thay b\u1eb1ng \\(e'\\), ta s\u1ebd thu \u0111\u01b0\u1ee3c 1 c\u00e2y khung \\(T'\\) c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf h\u01a1n c\u00e2y khung ban \u0111\u1ea7u  K\u1ebft lu\u1eadn: \\(T\\) kh\u00f4ng ph\u1ea3i c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</li> </ul> </li> <li> <p>3. T\u00ednh duy nh\u1ea5t: </p> <ul> <li>Gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i 2 c\u00e2y khung nh\u1ecf nh\u1ea5t \\(T\\) v\u00e0 \\(T'\\). X\u00e9t c\u1ea1nh \\(u-v\\) n\u1eb1m trong \\(T\\) nh\u01b0ng kh\u00f4ng trong \\(T'\\). </li> <li>G\u1ecdi \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) tr\u00ean \\(T\\) l\u00e0 \\(path\\), tr\u00ean \\(T'\\) l\u00e0 \\(path'\\). Hi\u1ec3n nhi\u00ean, \\(path'\\) kh\u00f4ng ch\u1ee9a c\u1ea1nh \\(u-v\\). </li> <li>V\u00ec tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u1ec1u kh\u00e1c nhau \\(\\Rightarrow\\) C\u1ea1nh l\u1edbn nh\u1ea5t c\u1ee7a \\(path\\) s\u1ebd c\u00f3 tr\u1ecdng s\u1ed1 l\u1edbn h\u01a1n tr\u1ecdng s\u1ed1 c\u1ea1nh l\u1edbn nh\u1ea5t c\u1ee7a \\(path'\\) ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i. \u21d2 Theo t\u00ednh ch\u1ea5t \u0111\u01b0\u1eddng \u0111i h\u1eb9p nh\u1ea5t, \\(T\\) ho\u1eb7c \\(T'\\) s\u1ebd kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e2y khung nh\u1ecf nh\u1ea5t. </li> </ul> </li> <li> <p>4. T\u00ednh ch\u1ea5t c\u1ea1nh nh\u1ecf nh\u1ea5t:      &gt; Ta s\u1ebd ch\u1ee9ng minh m\u1ecdi c\u00e2y khung kh\u00f4ng ch\u1ee9a \\(e\\) c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u1ec1u kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e2y khung nh\u1ecf nh\u1ea5t.</p> <ul> <li>Gi\u1ea3 s\u1eed \\(e\\) n\u1ed1i 2 \u0111\u1ec9nh \\(u\\), \\(v\\) c\u1ee7a \u0111\u1ed3 th\u1ecb. G\u1ecdi \\(T\\) l\u00e0 1 c\u00e2y khung kh\u00f4ng ch\u1ee9a \\(e\\) c\u1ee7a \u0111\u1ed3 th\u1ecb. </li> <li>X\u00e9t c\u1ea1nh \\(e'\\) b\u1ea5t k\u1ef3 thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u \\rightarrow v\\) tr\u00ean \\(T\\). Khi x\u00f3a \\(e'\\) kh\u1ecfi \\(T\\), \\(T\\) s\u1ebd b\u1ecb t\u00e1ch l\u00e0m 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng, 1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng ch\u1ee9a \\(u\\), 1 ph\u1ea7n ph\u1ea7n li\u00ean th\u00f4ng ch\u1ee9a \\(v\\).  \u21d2 Do \u0111\u00f3, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 th\u00eam c\u1ea1nh \\(e\\) (n\u1ed1i 2 \u0111\u1ec9nh \\(u- v\\)) v\u00e0o \\(T\\) \u0111\u1ec3 k\u1ebft n\u1ed1i 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng n\u00e0y, khi \u0111\u00f3 \\(T\\) s\u1ebd tr\u1edf l\u1ea1i th\u00e0nh 1 c\u00e2y khung c\u1ee7a \u0111\u1ed3 th\u1ecb.</li> <li>M\u1eb7t kh\u00e1c, \\(e\\) l\u00e0 c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t tuy\u1ec7t \u0111\u1ed1i c\u1ee7a \u0111\u1ed3 th\u1ecb, n\u00ean khi thay \\(e'\\) b\u1eb1ng \\(e\\) tr\u00ean c\u00e2y khung \\(T\\), tr\u1ecdng s\u1ed1 c\u1ee7a \\(T\\) s\u1ebd gi\u1ea3m \u0111i 1 l\u01b0\u1ee3ng d\u01b0\u01a1ng  K\u1ebft lu\u1eadn: \\(T\\) ban \u0111\u1ea7u kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/minimum-spanning-tree/#cac-thuat-toan-tim-cay-khung-nho-nhat","title":"C\u00e1c thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t","text":""},{"location":"algo/graph-theory/minimum-spanning-tree/#1-thuat-toan-kruskal","title":"1. Thu\u1eadt to\u00e1n Kruskal","text":"<p>\u00dd t\u01b0\u1edfng thu\u1eadt to\u00e1n: Ban \u0111\u1ea7u m\u1ed7i \u0111\u1ec9nh l\u00e0 m\u1ed9t c\u00e2y ri\u00eang bi\u1ec7t, ta t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t b\u1eb1ng c\u00e1ch duy\u1ec7t c\u00e1c c\u1ea1nh theo tr\u1ecdng s\u1ed1 t\u1eeb nh\u1ecf \u0111\u1ebfn l\u1edbn, r\u1ed3i h\u1ee3p nh\u1ea5t c\u00e1c c\u00e2y l\u1ea1i v\u1edbi nhau.</p> <p>C\u1ee5 th\u1ec3 h\u01a1n, gi\u1ea3 s\u1eed c\u1ea1nh \u0111ang x\u00e9t n\u1ed1i 2 \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\), n\u1ebfu 2 \u0111\u1ec9nh n\u00e0y n\u1eb1m \u1edf 2 c\u00e2y kh\u00e1c nhau th\u00ec ta th\u00eam c\u1ea1nh n\u00e0y v\u00e0o c\u00e2y khung, \u0111\u1ed3ng th\u1eddi h\u1ee3p nh\u1ea5t 2 c\u00e2y ch\u1ee9a \\(u\\) v\u00e0 \\(v\\).</p> <p>Gi\u1ea3 s\u1eed ta c\u1ea7n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G\\). Thu\u1eadt to\u00e1n bao g\u1ed3m c\u00e1c b\u01b0\u1edbc sau: * Kh\u1edfi t\u1ea1o r\u1eebng \\(F\\) (t\u1eadp h\u1ee3p c\u00e1c c\u00e2y), trong \u0111\u00f3 m\u1ed7i \u0111\u1ec9nh c\u1ee7a G t\u1ea1o th\u00e0nh m\u1ed9t c\u00e2y ri\u00eang bi\u1ec7t. * Kh\u1edfi t\u1ea1o t\u1eadp \\(S\\) ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh c\u1ee7a \\(G\\). * Ch\u1eebng n\u00e0o \\(S\\) c\u00f2n kh\u00e1c r\u1ed7ng v\u00e0 \\(F\\) g\u1ed3m h\u01a1n m\u1ed9t c\u00e2y     *  X\u00f3a c\u1ea1nh nh\u1ecf nh\u1ea5t trong \\(S\\)     *  N\u1ebfu c\u1ea1nh \u0111\u00f3 n\u1ed1i hai c\u00e2y kh\u00e1c nhau trong \\(F\\), th\u00ec th\u00eam n\u00f3 v\u00e0o \\(F\\) v\u00e0 h\u1ee3p hai c\u00e2y k\u1ec1 v\u1edbi n\u00f3 l\u00e0m m\u1ed9t     *  N\u1ebfu kh\u00f4ng th\u00ec lo\u1ea1i b\u1ecf c\u1ea1nh \u0111\u00f3.</p> <p>Khi thu\u1eadt to\u00e1n k\u1ebft th\u00fac, r\u1eebng ch\u1ec9 g\u1ed3m \u0111\u00fang m\u1ed9t c\u00e2y v\u00e0 \u0111\u00f3 l\u00e0 m\u1ed9t c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G\\)</p> <p>V\u00ed d\u1ee5 c\u00e1c b\u01b0\u1edbc gi\u1ea3i b\u00e0i to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t v\u1edbi thu\u1eadt to\u00e1n Kruskal : </p> <p>\u0110\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c ki\u1ec3m tra c\u1ea1nh v\u00e0 h\u1ee3p nh\u1ea5t 2 c\u00e2y m\u1ed9t c\u00e1ch nhanh ch\u00f3ng, ta s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac Disjoint Set, d\u01b0\u1edbi \u0111\u00e2y l\u00e0 \u0111o\u1ea1n code d\u00f9ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n: <pre><code>/*input\n4 4\n1 2 1\n2 3 2\n3 4 3\n4 1 4\n*/\n## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// C\u1ea5u tr\u00fac \u0111\u1ec3 l\u01b0u c\u00e1c c\u1ea1nh \u0111\u1ed3 th\u1ecb\n// u, v l\u00e0 2 \u0111\u1ec9nh, c l\u00e0 tr\u1ecdng s\u1ed1 c\u1ea1nh\nstruct Edge {\n    int u, v, c;\n    Edge(int _u, int _v, int _c): u(_u), v(_v), c(_c) {};\n};\n\nstruct Dsu {\n    vector&lt;int&gt; par;\n\n    void init(int n) {\n        par.resize(n + 5, 0);\n        for (int i = 1; i &lt;= n; i++) par[i] = i;\n    }\n\n    int find(int u) {\n        if (par[u] == u) return u;\n        return par[u] = find(par[u]);\n    }\n\n    bool join(int u, int v) {\n        u = find(u); v = find(v);\n        if (u == v) return false;\n        par[v] = u;\n        return true;\n    }\n} dsu;\n\n// n v\u00e0 m l\u00e0 s\u1ed1 \u0111\u1ec9nh v\u00e0 s\u1ed1 c\u1ea1nh\n// totalWeight l\u00e0 t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh trong c\u00e2y khung nh\u1ecf nh\u1ea5t\nint n, m, totalWeight = 0;\nvector &lt; Edge &gt; edges;\n\nint main() {\n    // Fast IO\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n    cin &gt;&gt; n &gt;&gt; m;\n\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        edges.push_back({u, v, c});\n    }\n\n    dsu.init(n);\n\n    // S\u1eafp x\u1ebfp l\u1ea1i c\u00e1c c\u1ea1nh theo tr\u1ecdng s\u1ed1 t\u0103ng d\u1ea7n\n    sort(edges.begin(), edges.end(), [](Edge &amp; x, Edge &amp; y) {\n        return x.c &lt; y.c;\n    });\n\n    // Duy\u1ec7t qua c\u00e1c c\u1ea1nh theo th\u1ee9 t\u1ef1 \u0111\u00e3 s\u1eafp x\u1ebfp\n    for (auto e : edges) {\n        // N\u1ebfu kh\u00f4ng h\u1ee3p nh\u1ea5t \u0111\u01b0\u1ee3c 2 \u0111\u1ec9nh u v\u00e0 v th\u00ec b\u1ecf qua\n        if (!dsu.join(e.u, e.v)) continue;\n\n        // N\u1ebfu h\u1ee3p nh\u1ea5t \u0111\u01b0\u1ee3c u, v ta th\u00eam tr\u1ecdng s\u1ed1 c\u1ea1nh v\u00e0o k\u1ebft qu\u1ea3\n        totalWeight += e.c;\n    }\n\n    // Xu\u1ea5t ra k\u1ebft qu\u1ea3\n    cout &lt;&lt; totalWeight &lt;&lt; '\\n';\n}\n</code></pre></p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#chung-minh-tinh-ung-an-cua-thuat-toan","title":"Ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a thu\u1eadt to\u00e1n:","text":"<p>Ta ph\u1ea3i ch\u1ee9ng minh hai \u0111i\u1ec1u:  1. \u0111\u1ea7u ra c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 m\u1ed9t c\u00e2y khung 2. c\u00e2y \u0111\u00f3 c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t trong s\u1ed1 t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y khung c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>Ch\u1ee9ng minh (1) - M\u1ed7i c\u1ea1nh \\((u, v)\\) \u0111\u01b0\u1ee3c x\u00e9t \u0111\u1ebfn, n\u00f3 ch\u1ec9 k\u1ebft n\u1ea1p v\u00e0o c\u00e2u khung n\u1ebfu \\(u, v\\) thu\u1ed9c 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng kh\u00e1c nhau \\(T_u, T_v\\) \u21d2 Do \u0111\u00f3 c\u00e1c c\u1ea1nh \u0111\u01b0\u1ee3c th\u00eam kh\u00f4ng t\u1ea1o th\u00e0nh chu tr\u00ecnh - Do \\(T\\) kh\u00f4ng c\u00f3 chu tr\u00ecnh \u21d2 s\u1ed1 c\u1ea1nh \u0111\u01b0\u1ee3c th\u00eam \\(\u2264 n - 1\\). Ta s\u1ebd ch\u1ee9ng minh \\(T\\) c\u00f3 \u0111\u00fang \\(n - 1\\) c\u1ea1nh     - Gi\u1ea3 s\u1eed s\u1ed1 c\u1ea1nh \u0111\u01b0\u1ee3c th\u00eam \\(&lt; n - 1\\) \u21d2 \\(T\\) g\u1ed3m hai hay nhi\u1ec1u th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng     - M\u1eb7t kh\u00e1c, do \\(G\\) li\u00ean th\u00f4ng \u21d2 t\u1ed3n t\u1ea1i c\u00e1c c\u1ea1nh thu\u1ed9c \\(G\\) n\u1ed1i c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng \u0111\u00f3 m\u00e0 kh\u00f4ng thu\u1ed9c \\(T\\). Do \u0111\u00f3 c\u1ea1nh \u0111\u1ea7u ti\u00ean nh\u1ecf nh\u1ea5t trong s\u1ed1 c\u00e1c c\u1ea1nh n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o do n\u00f3 kh\u00f4ng t\u1ea1o th\u00e0nh chu tr\u00ecnh, m\u00e2u thu\u1eabn v\u1edbi gi\u1ea3 thi\u1ebft \u1edf tr\u00ean \u21d2 Gi\u1ea3 s\u1eed sai     - V\u1eady s\u1ed1 c\u1ea1nh \u0111\u01b0\u1ee3c th\u00eam v\u00e0o b\u1eb1ng \u0111\u00fang \\(n - 1\\)</p> <p>Ch\u1ee9ng minh (2)</p> <p>L\u01b0u \u00fd : N\u1ebfu b\u1ea1n m\u1edbi h\u1ecdc c\u00e2y khung l\u1ea7n \u0111\u1ea7u ti\u00ean ch\u01b0a n\u00ean \u0111\u1ecdc ngay ch\u1ee9ng minh n\u00e0y, v\u00ec ch\u00fang c\u00f3 th\u1ec3 khi\u1ebfn b\u1ea1n hoang mang. Ch\u1ee9ng minh c\u00f3 s\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m nh\u01b0 l\u00e1t c\u1eaft, l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t</p> <p>Trong ch\u1ee9ng minh n\u00e0y, m\u00ecnh c\u00f3 quy \u01b0\u1edbc s\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 k\u00ed hi\u1ec7u:  * \\(\\|A\\|\\) : s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u00f3 trong t\u1eadp h\u1ee3p \\(A\\) * \\(A - B\\) : t\u1eadp h\u1ee3p c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \\(A\\) m\u00e0 kh\u00f4ng thu\u1ed9c \\(B\\)</p> <p>Gi\u1edd c\u00f9ng \u0111i v\u00e0o chi ti\u1ebft ch\u1ee9ng minh nh\u00e9 (\u3065\u25d4 \u035c\u0296\u25d4)\u3065 - G\u1ecdi \\(T\\) l\u00e0 c\u00e2y khung \u0111\u1ea7u ra c\u1ee7a thu\u1eadt to\u00e1n Kruskal v\u00e0 \\(T^\\*\\) l\u00e0 m\u1ed9t c\u00e2y khung nh\u1ecf nh\u1ea5t, ta s\u1ebd ch\u1ee9ng minh t\u1ed5ng tr\u1ecdng s\u1ed1 tr\u00ean \\(T\\) v\u00e0 \\(T^\\*\\) b\u1eb1ng nhau : \\(c(T)\\) = \\(c(T^\\*)\\) - N\u1ebfu \\(c(T)\\) = \\(c(T^\\*)\\) \u21d2 hi\u1ec3n nhi\u00ean \u0111\u00fang - N\u1ebfu \\(c(T)\\) \u2260 \\(c(T^\\*)\\) g\u1ecdi \\((u, v)\\) l\u00e0 c\u1ea1nh \\(\\in\\) \\(T\\) m\u00e0 \\(\\notin\\) \\(T^\\*\\) hay thu\u1ed9c \\(T - T^\\*\\). G\u1ecdi \\(S\\) l\u00e0 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng ch\u1ee9a u t\u1ea1i th\u1eddi \u0111i\u1ec3m \\((u, v)\\) \u0111\u01b0\u1ee3c th\u00eam v\u00e0o \\(T\\).     Nh\u1eadn x\u00e9t:      D\u1ec5 th\u1ea5y n\u1ebfu x\u00f3a c\u1ea1nh \\((u, v)\\) tr\u00ean \\(T\\) th\u00ec s\u1ebd t\u00e1ch th\u00e0nh 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng \\(S\\) v\u00e0 \\(G - S\\).      \u0110\u00e2y l\u00e0 m\u1ed9t l\u00e1t c\u1eaft, ta c\u00f3 th\u1ec3 th\u00eam b\u1ea5t c\u1ee9 c\u1ea1nh n\u00e0o n\u1ed1i gi\u1eefa 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng n\u00e0y \u0111\u1ec3 t\u1ea1o th\u00e0nh m\u1ed9t c\u00e2y m\u1edbi \u21d2 \\((u, v)\\) \\(\\in\\) l\u00e1t c\u1eaft \\((S, G - S)\\).     &gt; \u0110\u1ecbnh ngh\u0129a : M\u1ed9t l\u00e1t c\u1eaft \\(s\\) - \\(t\\) l\u00e0 m\u1ed9t t\u1eadp con c\u1ee7a \ud835\udc38 m\u00e0 khi lo\u1ea1i b\u1ecf nh\u1eefng c\u1ea1nh n\u00e0y th\u00ec kh\u00f4ng c\u00f2n \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(s\\) t\u1edbi \\(t\\). (B\u00e0i to\u00e1n l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t)</p> <pre><code>Ta s\u1ebd ch\u1ee9ng minh $(u, v)$ thu\u1ed9c **l\u00e1t c\u1eaft nh\u1ecf nh\u1ea5t** $(S, G - S)$\n- N\u1ebfu t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i tr\u1ecdng s\u1ed1 $e$ t\u1eeb $S$ \u0111\u1ebfn $G - S$ c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf h\u01a1n $(u, v)$, thu\u1eadt to\u00e1n kruskal s\u1ebd ch\u1ecdn $e$ thay v\u00ec $(u, v)$ \u21d2 v\u00f4 l\u00fd.\n\u21d2 *Ta kh\u1eb3ng \u0111\u1ecbnh $(u, v)$ c\u00f3 **tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t** trong c\u00e1c c\u1ea1nh t\u1eeb $S$ \u0111\u1ebfn $(G - S)$.* **(1)**\n- M\u1eb7t kh\u00e1c, b\u1edfi v\u00ec $T^\\*$ l\u00e0 1 c\u00e2y khung nh\u1ecf nh\u1ea5t n\u00ean  c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng t\u1eeb $S$ t\u1edbi $G - S$, g\u1ecdi c\u1ea1nh thu\u1ed9c \u0111\u01b0\u1eddng n\u00e0y l\u00e0 $(x, y)$. X\u00e9t c\u00e2y khung :\n${T^\\*}' = T^\\* \\cup (u, v) - (x, y)$ \u21d2 $c({T^\\*}') = c(T^\\*) + c(u, v) - c(x, y)$\n- Do theo **(1)** c\u00f3:  $c(u, v) \u2264 c(x, y)$ n\u00ean $c({T^\\*}') \u2264 c(T^\\*)$ m\u00e0 $T^\\*$ l\u00e0 c\u00e2y khung nh\u1ecf nh\u1ea5t \u21d2 $c({T^\\*}')$ = $c(T^\\*)$ v\u00e0 ${T^\\*}'$ c\u0169ng l\u00e0 **c\u00e2y khung nh\u1ecf nh\u1ea5t** \u21d2 $|T - {T^\\*}'|$ = $|T - T^\\*| - 1$\n***\u00dd ngh\u0129a :** Nh\u01b0 v\u1eady ta \u0111\u00e3 bi\u1ebfn \u0111\u1ed5i \u0111\u01b0\u1ee3c **c\u00e2y khung nh\u1ecf nh\u1ea5t** ${T^\\*}$ th\u00e0nh c\u00e2y khung ${T^\\*}'$ c\u0169ng l\u00e0 **c\u00e2y khung nh\u1ecf nh\u1ea5t** m\u00e0 l\u00e0m gi\u1ea3m s\u1ed1 c\u1ea1nh kh\u00e1c nhau c\u1ee7a $T$ v\u00e0 ${T^\\*}$ \u0111i 1 c\u1ea1nh*\n- L\u1eb7p l\u1ea1i c\u00e1ch ch\u1ee9ng minh v\u1edbi m\u1ed7i c\u1ea1nh thu\u1ed9c $T - {T^\\*}'$, ta s\u1ebd bi\u1ebfn \u0111\u1ed5i \u0111\u01b0\u1ee3c ${T^\\*}'$ th\u00e0nh ${T}$, hay n\u00f3i c\u00e1ch kh\u00e1c \u0111\u00e3 \u0111\u00e3 bi\u1ebfn \u0111\u1ed5i c\u00e2y khung nh\u1ecf nh\u1ea5t ban \u0111\u1ea7u v\u1ec1 c\u00e2y khung \u0111\u1ea7u ra c\u1ee7a Kruskal : $c(T) = c(T^\\*)$.\n</code></pre> <p>\u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n:  G\u1ecdi \\(n\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh, \\(m\\) l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb</p> <p>Thu\u1eadt to\u00e1n g\u1ed3m 2 ph\u1ea7n:  * S\u1eafp x\u1ebfp m\u1ea3ng \\(m\\) c\u1ea1nh theo tr\u1ecdng s\u1ed1 t\u0103ng d\u1ea7n m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m \\log{m})\\). * Ta duy\u1ec7t \\(m\\) c\u1ea1nh, m\u1ed7i c\u1ea1nh d\u00f9ng Disjoint Set m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log{n})\\), v\u1eady t\u1ed5ng c\u1ed9ng m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m\\log{n})\\).</p> <p>\\(\\Rightarrow\\) \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Kruskal l\u00e0 \\(O(m\\log{m} +m\\log{n})\\)</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#2-thuat-toan-prim","title":"2. Thu\u1eadt to\u00e1n Prim","text":"<p>\u00dd t\u01b0\u1edfng thu\u1eadt to\u00e1n: \u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n Prim r\u1ea5t gi\u1ed1ng v\u1edbi \u00fd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n Dijkstra (t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t tr\u00ean \u0111\u1ed3 th\u1ecb).  N\u1ebfu nh\u01b0 thu\u1eadt to\u00e1n Kruskal x\u00e2y d\u1ef1ng c\u00e2y khung nh\u1ecf nh\u1ea5t b\u1eb1ng c\u00e1ch k\u1ebft n\u1ea1p t\u1eebng c\u1ea1nh v\u00e0o \u0111\u1ed3 th\u1ecb th\u00ec thu\u1eadt to\u00e1n Prim l\u1ea1i k\u1ebft n\u1ea1p t\u1eebng \u0111\u1ec9nh v\u00e0o \u0111\u1ed3 th\u1ecb theo ti\u00eau ch\u00ed: \u0111\u1ec9nh \u0111\u01b0\u1ee3c n\u1ea1p v\u00e0o ti\u1ebfp theo ph\u1ea3i ch\u01b0a \u0111\u01b0\u1ee3c n\u1ea1p v\u00e0 g\u1ea7n nh\u1ea5t v\u1edbi c\u00e1c \u0111\u1ec9nh \u0111\u00e3 \u0111\u01b0\u1ee3c n\u1ea1p v\u00e0o \u0111\u1ed3 th\u1ecb.</p> <p>Thu\u1eadt to\u00e1n bao g\u1ed3m c\u00e1c b\u01b0\u1edbc sau: * Kh\u1edfi t\u1ea1o t\u1eadp \\(S\\) l\u00e0 c\u00e2y khung hi\u1ec7n t\u1ea1i, ban \u0111\u1ea7u S ch\u01b0a c\u00f3 \u0111\u1ec9nh n\u00e0o. * Kh\u1edfi t\u1ea1o m\u1ea3ng \\(D\\) trong \u0111\u00f3 \\(D_i\\) l\u00e0 kho\u1ea3ng c\u00e1ch ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(i\\) \u0111\u1ebfn 1 \u0111\u1ec9nh \u0111\u00e3 \u0111\u01b0\u1ee3c k\u1ebft n\u1ea1p v\u00e0o t\u1eadp \\(S\\), ban \u0111\u1ea7u \\(D[i]\\) = \\(+\\infty\\) * L\u1eb7p l\u1ea1i c\u00e1c thao t\u00e1c sau \\(n\\) l\u1ea7n(\\(n\\) l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb)     *  T\u00ecm \u0111\u1ec9nh \\(u\\) kh\u00f4ng thu\u1ed9c \\(S\\) c\u00f3 \\(D_u\\) nh\u1ecf nh\u1ea5t, th\u00eam \\(u\\) v\u00e0o t\u1eadp \\(S\\).     *  X\u00e9t t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \\(v\\) k\u1ec1 \\(u\\), c\u1eadp nh\u1eadt \\(D_v = min(D_v, w_{u,v})\\) v\u1edbi \\(w_{u,v}\\) l\u00e0 tr\u1ecdng s\u1ed1 c\u1ea1nh \\(u-v\\). N\u1ebfu \\(D_v\\) \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt theo \\(w_{u,v}\\) th\u00ec \u0111\u00e1nh d\u1ea5u \\(trace_v = u\\).     *  Th\u00eam c\u1ea1nh \\(u-trace[u]\\) v\u00e0o t\u1eadp c\u1ea1nh thu\u1ed9c c\u00e2y khung nh\u1ecf nh\u1ea5t.</p> <p>M\u1eb7c d\u00f9 kh\u00f4ng b\u1eaft bu\u1ed9c, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn thu\u1eadt to\u00e1n c\u1ee7a Wiki t\u1ea1i \u0111\u00e2y.</p> <p>Khi ho\u00e0n th\u00e0nh xong \\(n\\) b\u01b0\u1edbc tr\u00ean, ta thu \u0111\u01b0\u1ee3c c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb g\u1ed3m \\(n\\) \u0111\u1ec9nh v\u00e0 \\(n - 1\\) c\u1ea1nh.</p> <p>V\u00ed d\u1ee5 c\u00e1c b\u01b0\u1edbc gi\u1ea3i b\u00e0i to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t v\u1edbi thu\u1eadt to\u00e1n Prim: </p> <p>\u0110o\u1ea1n code s\u1eed d\u1ee5ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n Prim: <pre><code>/*input\n4 4\n1 2 1\n2 3 2\n3 4 3\n4 1 4\n*/\n## include \"bits/stdc++.h\"\nusing namespace std;\n## define fi first\n## define se second\n\nconst int N = 1e5 + 5;\nconst int INF = 1e9;\n\n// khai b\u00e1o \u0111\u1ed3 th\u1ecb. g[u] ch\u1ee9a c\u00e1c c\u1ea1nh n\u1ed1i v\u1edbi \u0111\u1ec9nh u. C\u00e1c c\u1ea1nh s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng pair&lt;v,c&gt;\nint n, m;\nvector &lt;pair&lt;int, int&gt;&gt; g[N];\n\nint dis[N]; // m\u1ea3ng d l\u01b0u kho\u1ea3ng c\u00e1ch c\u1ee7a to\u00e0n b\u1ed9 \u0111\u1ec9nh\n\nint prim(int s) { // thu\u1eadt to\u00e1n Prim b\u1eaft \u0111\u1ea7u ch\u1ea1y t\u1eeb \u0111\u1ec9nh ngu\u1ed3n s\n    int ret = 0;\n    // S\u1eed d\u1ee5ng priority_queue l\u01b0u kho\u1ea3ng c\u00e1ch c\u1ee7a c\u00e1c \u0111\u1ec9nh t\u0103ng d\u1ea7n \u0111\u1ed1i v\u1edbi c\u00e2y khung\n    // V\u00ec priority_queue.top lu\u00f4n l\u00e0 ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t, ta s\u1ebd ph\u1ea3i s\u1eed d\u1ee5ng greater&lt;pair&lt;int,int&gt;&gt;\n    // \u0111\u1ec3 priority_queue.top l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t\n    // c\u00e1c ph\u1ea7n t\u1eed l\u01b0u trong priority queue s\u1ebd c\u00f3 d\u1ea1ng pair&lt;dis[u],u&gt;\n    priority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int,int&gt;&gt;, greater&lt;pair&lt;int,int&gt;&gt;&gt; q;\n\n    // kh\u1edfi t\u1ea1o kho\u1ea3ng c\u00e1ch c\u1ee7a c\u00e1c \u0111\u1ec9nh l\u00e0 v\u00f4 c\u00f9ng l\u1edbn\n    for (int i = 1; i &lt;= n; i++) dis[i] = INF;\n\n    // kh\u1edfi t\u1ea1o \u0111\u1ec9nh ngu\u1ed3n c\u00f3 kho\u1ea3ng c\u00e1ch l\u00e0 0 v\u00e0 push \u0111\u1ec9nh n\u00e0y v\u00e0o\n    dis[s] = 0;\n    q.push({0, s});\n\n    while (!q.empty()) {\n        // l\u1ea5y \u0111\u1ec9nh c\u00f3 kho\u1ea3ng c\u00e1ch nh\u1ecf nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c k\u1ebft n\u1ea1p\n        auto top = q.top(); q.pop();\n        int curDis = top.fi; int u = top.se;\n\n        if (curDis != dis[u]) continue;\n\n        // k\u1ebft n\u1ea1p \u0111\u1ec9nh u v\u00e0o c\u00e2y khung\n        ret += dis[u]; dis[u] = -INF;\n\n        // c\u1eadp nh\u1ea5t kho\u1ea3ng c\u00e1ch cho c\u00e1c \u0111\u1ec9nh k\u1ec1 u\n        for (auto &amp;e : g[u]) {\n            int v = e.fi; int c = e.se;\n            if (dis[v] &gt; c) {\n                dis[v] = c;\n                q.push({ dis[v], v});\n            }\n        }\n    }\n    return ret;\n}\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n    cin &gt;&gt; n &gt;&gt; m;\n\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        g[u].push_back({v, c});\n        g[v].push_back({u, c});\n    }\n\n    cout &lt;&lt; prim(1) &lt;&lt; '\\n';\n}\n</code></pre> \u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n:  - Ta duy\u1ec7t t\u1ed5ng c\u1ed9ng \\(n\\) l\u1ea7n, m\u1ed7i l\u1ea7n l\u1ea5y 1 \u0111\u1ec9nh ra kh\u1ecfi heap m\u1ea5t \\(O(\\log{n})\\) v\u00e0 c\u1eadp nh\u1eadt tr\u1ecdng s\u1ed1 c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi \u0111\u1ec9nh \u0111\u00f3, t\u1ed5ng s\u1ed1 l\u1ea7n c\u1eadp nh\u1eadt l\u00e0 \\(m\\) l\u1ea7n, m\u1ed7i l\u1ea7n c\u1eadp nh\u1eadt ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log{n})\\).  - Nh\u01b0 v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Prim l\u00e0 \\(O((m + n)\\log{n})\\) v\u1edbi n l\u00e0 s\u1ed1 \u0111\u1ec9nh v\u00e0 m l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>Fact: Trong c\u00e1c b\u00e0i to\u00e1n t\u00ecm c\u00e2y khung, ph\u1ea7n l\u1edbn m\u1ecdi ng\u01b0\u1eddi s\u1ebd s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Kruskal do t\u00ednh d\u1ec5 c\u00e0i \u0111\u1eb7t c\u0169ng nh\u01b0 d\u1ec5 hi\u1ec3u c\u1ee7a n\u00f3. </p> <p>Bonus : C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Visualgo \u0111\u1ec3  m\u00f4 ph\u1ecfng thu\u1eadt to\u00e1n Kruskal v\u00e0 Prim th\u00f4ng qua ho\u1ea1t \u1ea3nh, qua \u0111\u00f3 hi\u1ec3u th\u00eam v\u1ec1 c\u00e1c thu\u1eadt to\u00e1n tr\u00ean</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#mot-so-bai-toan-ap-dung","title":"M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n \u00e1p d\u1ee5ng","text":""},{"location":"algo/graph-theory/minimum-spanning-tree/#1-bai-toan-nkcity","title":"1. B\u00e0i to\u00e1n NKCITY","text":""},{"location":"algo/graph-theory/minimum-spanning-tree/#tom-tat-e-bai","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>1 th\u00e0nh ph\u1ed1 g\u1ed3m \\(N\\) tr\u1ecdng \u0111i\u1ec3m, \\(M\\) tuy\u1ebfn \u0111\u01b0\u1eddng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng v\u1edbi chi ph\u00ed x\u00e2y d\u1ef1ng kh\u00e1c nhau. Y\u00eau c\u1ea7u ch\u1ecdn ra m\u1ed9t s\u1ed1 tuy\u1ebfn \u0111\u01b0\u1eddng sao cho \\(N\\) tr\u1ecdng \u0111i\u1ec3m ph\u1ea3i \u0111\u01b0\u1ee3c li\u00ean th\u00f4ng v\u1edbi nhau v\u00e0 chi ph\u00ed x\u00e2y d\u1ef1ng tuy\u1ebfn \u0111\u01b0\u1eddng l\u1edbn nh\u1ea5t l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3.</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>D\u1ef1a v\u00e0o t\u00ednh ch\u1ea5t \u0111\u01b0\u1eddng \u0111i h\u1eb9p nh\u1ea5t c\u1ee7a c\u00e2y khung m\u00e0 ta \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean, \u0111\u01b0\u1eddng \u0111i gi\u1eefa 2 \u0111\u1ec9nh \\(u\\), \\(v\\) b\u1ea5t k\u1ef3 tr\u00ean c\u00e2y khung nh\u1ecf nh\u1ea5t l\u00e0 \u0111\u01b0\u1eddng \u0111i c\u00f3 c\u1ea1nh l\u1edbn nh\u1ea5t l\u00e0 nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.  Nh\u01b0 v\u1eady vi\u1ec7c ch\u1ecdn ra c\u00e1c tuy\u1ebfn \u0111\u01b0\u1eddng \u0111\u1ec3 x\u00e2y d\u1ef1ng ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 ch\u1ecdn c\u00e1c c\u1ea1nh tr\u00ean c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>Ch\u00ednh l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t m\u00e0 c\u00e1c b\u1ea1n s\u1ebd c\u00e0i \u0111\u1eb7t. </p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u1ede \u0111\u00e2y ta s\u1ebd d\u00f9ng Kruskal \u0111\u1ec3 t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t <pre><code>/*input\n4 4\n1 2 1\n2 3 2\n3 4 3\n4 1 4\n*/\n## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstruct Edge {\n    int u, v, c;\n    Edge(int _u, int _v, int _c): u(_u), v(_v), c(_c) {};\n};\n\nstruct Dsu {\n    vector&lt;int&gt; par;\n\n    void init(int n) {\n        par.resize(n + 5, 0);\n        for (int i = 1; i &lt;= n; i++) par[i] = i;\n    }\n\n    int find(int u) {\n        if (par[u] == u) return u;\n        return par[u] = find(par[u]);\n    }\n\n    bool join(int u, int v) {\n        u = find(u); v = find(v);\n        if (u == v) return false;\n        par[v] = u;\n        return true;\n    }\n} dsu;\n\nint n, m, maxWeight = 0;\nvector &lt; Edge &gt; edges;\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n    cin &gt;&gt; n &gt;&gt; m;\n\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        edges.push_back({u, v, c});\n    }\n\n    dsu.init(n);\n\n    sort(edges.begin(), edges.end(), [](Edge &amp; x, Edge &amp; y) {\n        return x.c &lt; y.c;\n    });\n\n    for (auto e : edges) {\n        if (!dsu.join(e.u, e.v)) continue;\n        maxWeight = max(maxWeight, e.c);\n    }\n\n    cout &lt;&lt; maxWeight &lt;&lt; '\\n';\n}\n</code></pre></p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#2-bai-toan-tim-cay-khung-nho-nhat-cho-moi-canh-codeforces-609e","title":"2. B\u00e0i to\u00e1n t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t cho m\u1ed7i c\u1ea1nh - Codeforces 609E","text":""},{"location":"algo/graph-theory/minimum-spanning-tree/#tom-tat-e-bai_1","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>Cho \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G\\) g\u1ed3m \\(n\\) \u0111\u1ec9nh v\u00e0 \\(m\\) c\u1ea1nh. Y\u00eau c\u1ea7u v\u1edbi m\u1ed7i c\u1ea1nh trong \u0111\u1ed3 th\u1ecb, t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t ch\u1ee9a c\u1ea1nh \u0111\u00f3 c\u1ee7a \u0111\u1ed3 th\u1ecb v\u00e0 in ra tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e2y khung \u0111\u00f3.</p> <p>\u0110\u00e2y l\u00e0 1 b\u00e0i t\u1eadp kh\u00e1 kinh \u0111i\u1ec3n v\u1ec1 c\u00e2y khung nh\u1ecf nh\u1ea5t. \u0110\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i t\u1eadp n\u00e0y, ch\u00fang ta c\u1ea7n gi\u1ea3i b\u00e0i LUBENICA tr\u01b0\u1edbc. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 b\u00e0i \u1edf \u0111\u00e2y</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n:","text":"<ul> <li>\u0110\u1ea7u ti\u00ean, ta d\u1ef1ng c\u00e2y khung nh\u1ecf nh\u1ea5t \\(S\\) c\u1ee7a \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u:</li> <li>Sau \u0111\u00f3, ta l\u1ea7n l\u01b0\u1ee3t \u0111i t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t ch\u1ee9a m\u1ed7i c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb. V\u1edbi 1 c\u1ea1nh i n\u1ed1i 2 \u0111\u1ec9nh \\(u\\), \\(v\\) v\u1edbi tr\u1ecdng s\u1ed1 \\(w\\), c\u00f3 2 tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra:<ul> <li>C\u1ea1nh \\(u-v\\) \u0111\u00e3 thu\u1ed9c c\u00e2y khung nh\u1ecf nh\u1ea5t \\(S\\) ban \u0111\u1ea7u, c\u00e2y khung c\u1ea7n t\u00ecm ch\u00ednh l\u00e0 \\(S\\).</li> <li>C\u1ea1nh \\(u-v\\) kh\u00f4ng thu\u1ed9c c\u00e2y khung nh\u1ecf nh\u1ea5t \\(S\\). Nh\u01b0 v\u1eady n\u1ebfu th\u00eam c\u1ea1nh \\(u-v\\) v\u00e0o c\u00e2y khung s\u1ebd t\u1ea1o th\u00e0nh chu tr\u00ecnh t\u1eeb \\(u\\rightarrow v\\). Do \u0111\u00f3 ta ph\u1ea3i x\u00f3a \u0111i 1 c\u1ea1nh tr\u00ean chu tr\u00ecnh n\u00e0y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh ch\u1ea5t c\u1ee7a c\u00e2y khung. V\u00e0 \u0111\u01b0\u01a1ng nhi\u00ean \u0111\u1ec3 t\u1ed1i \u01b0u th\u00ec ta s\u1ebd ch\u1ecdn x\u00f3a \u0111i c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u \\rightarrow v\\) (\u0111\u00e3 \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y trong b\u00e0i LUBENICA \u1edf tr\u00ean) v\u00e0 th\u00eam c\u1ea1nh \\(u-v\\) v\u00e0o c\u00e2y khung sau khi \u0111\u00e3 x\u00f3a c\u1ea1nh \u0111\u00f3.</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/minimum-spanning-tree/#code-mau","title":"Code m\u1eabu:","text":"<pre><code>/*input\n8 10\n8 7 11\n3 5 23\n2 1 23\n7 2 13\n6 4 18\n1 4 20\n8 4 17\n2 8 8\n3 2 9\n5 6 29\n*/\n## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n## define fi first\n## define se second\n## define bit(x, k) (1ll&amp;(x &gt;&gt; k))\n\nusing ll = long long;\nconst int N = 2e5 + 5;\nconst ll INF = 1e18;\n\nstruct Edge {\n    int u, v, c, id;\n    Edge(int _u, int _v, int _c, int _id): u(_u), v(_v), c(_c), id(_id) {};\n};\n\nstruct Data {\n    int par; ll maxc = -INF;\n};\n\nstruct Dsu {\n    vector&lt;int&gt; par;\n\n    void init(int n) {\n        par.resize(n + 5, 0);\n        for (int i = 1; i &lt;= n; i++) par[i] = i;\n    }\n\n    int find(int u) {\n        if (par[u] == u) return u;\n        return par[u] = find(par[u]);\n    }\n\n    bool join(int u, int v) {\n        u = find(u); v = find(v);\n        if (u == v) return false;\n        par[v] = u;\n        return true;\n    }\n} dsu;\n\nint n, m; ll mstWeight = 0;\nint h[N]; ll res[N];\nvector &lt;Edge&gt; edges;\nvector &lt;pair &lt;int, int&gt;&gt; g[N];\nData up[N][21];\n\nvoid dfs(int u, int p) {\n    up[u][0].par = p;\n    for (auto &amp;e : g[u]) {\n        int v = e.fi; int c = e.se;\n        if (v == p) continue;\n        h[v] = h[u] + 1;\n        up[v][0].maxc = c;\n        dfs(v, u);\n    }\n}\n\n// t\u00ecm c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 l\u1edbn nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng \u0111i u, v nh\u01b0 b\u00e0i LUBENICA\nll lca(int u, int v) {\n    ll ret = -INF;\n    if (h[u] &lt; h[v]) swap(u, v);\n    int depth = h[u] - h[v];\n    for (int i = 0; i &lt;= 20; i++) {\n        if (bit(depth, i)) {\n            ret = max(ret, up[u][i].maxc);\n            u = up[u][i].par;\n        }\n    }\n\n    if (u == v) return ret;\n\n    for (int i = 20; i &gt;= 0; i--) {\n        if (up[u][i].par != up[v][i].par) {\n            ret = max({ret, up[u][i].maxc, up[v][i].maxc});\n            u = up[u][i].par; v = up[v][i].par;\n        }\n    }\n    ret = max({ret, up[u][0].maxc, up[v][0].maxc});\n    return ret;\n}\n\nvoid buildMST() {\n    dsu.init(n);\n    sort(edges.begin(), edges.end(), [](Edge &amp; x, Edge &amp; y) {\n        return x.c &lt; y.c;\n    });\n\n    for (auto &amp;e : edges) {\n        if (!dsu.join(e.u, e.v)) continue;\n        g[e.u].push_back({e.v, e.c});\n        g[e.v].push_back({e.u, e.c});\n        res[e.id] = -1; // \u0111\u00e1nh d\u1ea5u l\u00e0 c\u1ea1nh n\u00e0y thu\u1ed9c c\u00e2y khung nh\u1ecf nh\u1ea5t\n        mstWeight += e.c;\n    }\n}\n\nvoid buildLCA() {\n    dfs(1, 1);\n    for (int i = 1; i &lt;= 20; i++) {\n        for (int u = 1; u &lt;= n; u++) {\n            up[u][i].par = up[up[u][i - 1].par][i - 1].par;\n            up[u][i].maxc = max(up[u][i - 1].maxc, up[up[u][i - 1].par][i - 1].maxc);\n        }\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        edges.push_back({u, v, c, i});\n    }\n\n    // d\u1ef1ng c\u00e2y khung nh\u1ecf nh\u1ea5t\n    buildMST();\n\n    // d\u1ef1ng LCA\n    buildLCA();\n\n    // t\u00ecm c\u00e2y khung nh\u1ecf nh\u1ea5t cho t\u1eebng c\u1ea1nh\n    for (auto &amp;e : edges) {\n        if (res[e.id] == -1) res[e.id] = mstWeight;\n        else res[e.id] = mstWeight - lca(e.u, e.v) + e.c;\n    }\n\n    // in ra k\u1ebft qu\u1ea3\n    for (int i = 1; i &lt;= m; i++) cout &lt;&lt; res[i] &lt;&lt; \"\\n\";\n    return 0;\n}\n</code></pre>"},{"location":"algo/graph-theory/minimum-spanning-tree/#3-bai-toan-160d-edges-in-mst","title":"3. B\u00e0i to\u00e1n 160D - Edges in MST","text":""},{"location":"algo/graph-theory/minimum-spanning-tree/#tom-tat-e-bai_2","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>Cho \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng c\u00f3 tr\u1ecdng s\u1ed1 \\(G\\) g\u1ed3m \\(n\\) \u0111\u1ec9nh v\u00e0 \\(m\\) c\u1ea1nh. Y\u00eau c\u1ea7u v\u1edbi m\u1ed7i c\u1ea1nh trong \u0111\u1ed3 th\u1ecb, ki\u1ec3m tra xem c\u1ea1nh \u0111\u00f3 kh\u00f4ng thu\u1ed9c b\u1ea5t k\u1ef3 c\u00e2y khung nh\u1ecf nh\u1ea5t n\u00e0o, thu\u1ed9c m\u1ed9t s\u1ed1 c\u00e2y khung nh\u1ecf nh\u1ea5t hay n\u1eb1m trong m\u1ecdi c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb.</p>"},{"location":"algo/graph-theory/minimum-spanning-tree/#thuat-toan_2","title":"Thu\u1eadt to\u00e1n","text":"<ul> <li>Ban \u0111\u1ea7u, kh\u1edfi t\u1ea1o \u0111\u1ed3 th\u1ecb \\(G'\\) r\u1ed7ng. Ta s\u1ebd x\u00e9t l\u1ea7n l\u01b0\u1ee3t t\u1eebng nh\u00f3m c\u00e1c c\u1ea1nh c\u00f3 c\u00f9ng tr\u1ecdng s\u1ed1 v\u00e0 th\u00eam ch\u00fang v\u00e0o \u0111\u1ed3 th\u1ecb \\(G'\\). \u0110\u1ed3ng th\u1eddi, v\u1edbi m\u1ed7i c\u1ea1nh ta kh\u00f4ng quan t\u00e2m n\u00f3 n\u1ed1i 2 \u0111\u1ec9nh n\u00e0o m\u00e0 ch\u1ec9 quan t\u00e2m n\u00f3 n\u1ed1i 2 TPLT n\u00e0o trong \u0111\u1ed3 th\u1ecb hi\u1ec7n t\u1ea1i. </li> <li>Nh\u1eadn x\u00e9t r\u1eb1ng n\u1ebfu c\u00f3 c\u1ea1nh k\u1ebft n\u1ed1i 2 TPLT kh\u00e1c nhau, c\u00e1c c\u1ea1nh n\u00e0y s\u1ebd xu\u1ea5t hi\u1ec7n trong \u00edt nh\u1ea5t 1 c\u00e2y khung nh\u1ecf nh\u1ea5t. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu 1 c\u1ea1nh n\u1ed1i 2 \u0111\u1ec9nh \u0111\u00e3 li\u00ean th\u00f4ng t\u1eeb tr\u01b0\u1edbc th\u00ec c\u1ea1nh n\u00e0y s\u1ebd kh\u00f4ng thu\u1ed9c b\u1ea5t k\u1ef3 c\u00e2y khung nh\u1ecf nh\u1ea5t n\u00e0o.</li> <li>X\u00e9t c\u00e1c nh\u00f3m c\u1ea1nh c\u00f3 c\u00f9ng tr\u1ecdng s\u1ed1 m\u00e0 thu\u1ed9c 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng kh\u00e1c nhau, ta d\u1ef1ng \u0111\u1ed3 th\u1ecb \\(G\\) m\u1edbi t\u1eeb c\u00e1c nh\u00f3m c\u1ea1nh \u0111\u00f3 v\u1edbi c\u00e1c \u0111\u1ec9nh l\u00e0 c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng.</li> <li>D\u1ec5 th\u1ea5y : Ch\u1ecdn t\u1eadp c\u1ea1nh t\u1eeb \\(G\\) \u0111\u1ec3 th\u00eam v\u00e0o c\u00e2y khung, t\u1eadp c\u1ea1nh \u0111\u00f3 ph\u1ea3i th\u1ecfa m\u00e3n  kh\u00f4ng t\u1ea1o ra chu tr\u00ecnh v\u00e0 kh\u00f4ng l\u00e0m t\u0103ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \\(G\\) b\u1edfi v\u00ec : <ul> <li>N\u1ebfu t\u1eadp c\u1ea1nh ch\u1ecdn ch\u1ee9a chu tr\u00ecnh th\u00ec \u0111\u1ea7u ra kh\u00f4ng c\u00f2n l\u00e0 c\u00e2y khung</li> <li>N\u1ebfu t\u1eadp c\u1ea1nh l\u00e0m t\u0103ng s\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \\(G\\) th\u00ec c\u00e2y khung s\u1ebd m\u1ea5t t\u00ednh nh\u1ecf nh\u1ea5t </li> </ul> </li> <li>V\u1eady c\u1ea1nh n\u1eb1m trong m\u1ecdi c\u00e2y khung s\u1ebd ph\u1ea3i l\u00e0 c\u1ea1nh m\u00e0 n\u1eb1m trong m\u1ecdi t\u1eadp c\u1ea1nh m\u00ecnh ch\u1ecdn \u1edf tr\u00ean, n\u1ebfu t\u1eadp c\u1ea1nh thi\u1ebfu n\u00f3 th\u00ec vi ph\u1ea1m t\u00ednh nh\u1ecf nh\u1ea5t.  \u21d2 C\u00f3 ngh\u0129a l\u00e0 n\u1ebfu thi\u1ebfu c\u1ea1nh \u0111\u00f3 th\u00ec s\u1ebd l\u00e0m t\u0103ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng c\u1ee7a \\(G\\). V\u1eady \u0111\u00f3 ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0 c\u1ea1nh c\u1ea7u.</li> <li>K\u1ebft lu\u1eadn : <ul> <li>C\u00e1c c\u1ea1nh c\u1ea7u s\u1ebd n\u1eb1m trong m\u1ecdi c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb</li> <li>C\u00e1c c\u1ea1nh c\u00f2n l\u1ea1i kh\u00f4ng ph\u1ea3i c\u1ea1nh c\u1ea7u s\u1ebd thu\u1ed9c m\u1ed9t s\u1ed1 c\u00e2y khung nh\u1ecf nh\u1ea5t</li> <li>Xem th\u00eam : T\u00ecm c\u1ea1nh c\u1ea7u</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/minimum-spanning-tree/#o-phuc-tap_1","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<ul> <li>\u0110\u1ea7u ti\u00ean, ta ph\u1ea3i s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c c\u1ea1nh theo tr\u1ecdng s\u1ed1 t\u0103ng d\u1ea7n m\u1ea5t \u0111pt \\(O(m\\log{m})\\). Sau \u0111\u00f3, ta ph\u1ea3i duy tr\u00ec 1 \u0111\u1ed3 th\u1ecb hi\u1ec7n t\u1ea1i trong qu\u00e1 tr\u00ecnh l\u1ea7n l\u01b0\u1ee3t th\u00eam c\u00e1c nh\u00f3m c\u1ea1nh v\u00e0o \u0111\u1ed3 th\u1ecb, \u1edf \u0111\u00e2y ta s\u1eed d\u1ee5ng Disjoint Set \u0111\u1ec3 ki\u1ec3m tra 2 \u0111\u1ec9nh n\u1ed1i 2 TPLT n\u00e0o c\u0169ng nh\u01b0 th\u00eam c\u00e1c c\u1ea1nh v\u00e0o \u0111\u1ed3 th\u1ecb hi\u1ec7n t\u1ea1i.</li> <li>Thu\u1eadt to\u00e1n Tarjan \u0111\u1ec3 t\u00ecm c\u1ea7u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m + n)\\) cho to\u00e0n \u0111\u1ed3 th\u1ecb  \u21d2 Nh\u01b0 v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O(m\\log{m} + m\\log{n} + n)\\).</li> </ul>"},{"location":"algo/graph-theory/minimum-spanning-tree/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>/*input\n4 5\n1 2 101\n1 3 100\n2 3 2\n2 4 2\n3 4 1\n*/\n## include \"bits/stdc++.h\"\nusing namespace std;\n## define fi first\n## define se second\n\nconst int N = 1e5 + 5;\n\nenum EdgeType {\n    NONE, // kh\u00f4ng c\u00e2y n\u00e0o ch\u1ee9a\n    ANY, // t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y \u0111\u1ec1u ch\u1ee9a\n    ATL // \u00edt nh\u1ea5t 1 c\u00e2y ch\u1ee9a\n};\n\nstruct Edge {\n    int u, v, c, id;\n    Edge(int _u, int _v, int _c, int _id): u(_u), v(_v), c(_c), id(_id) {};\n};\n\nstruct Dsu {\n    vector&lt;int&gt; par;\n\n    void init(int n) {\n        par.resize(n + 5, 0);\n        for (int i = 1; i &lt;= n; i++) par[i] = i;\n    }\n\n    int find(int u) {\n        if (par[u] == u) return u;\n        return par[u] = find(par[u]);\n    }\n\n    bool join(int u, int v) {\n        u = find(u); v = find(v);\n        if (u == v) return false;\n        par[v] = u;\n        return true;\n    }\n} dsu;\n\nvector &lt;pair&lt;int, int&gt;&gt; g[N];\nint low[N], num[N], Time = 0;\nint n, m;\nEdgeType res[N];\nvector &lt;Edge&gt; edges;\n\nvoid dfs(int u, int idx) {\n    num[u] = low[u] = ++Time;\n    for (auto &amp;e : g[u]) {\n        int v = e.fi; int id = e.se;\n        if (id == idx) continue;\n        if (num[v] == 0) {\n            dfs(v, id);\n            low[u] = min(low[u], low[v]);\n            if (low[v] == num[v]) {\n                // n\u1ebfu c\u1ea1nh l\u00e0 c\u1ea7u th\u00ec m\u1ecdi c\u00e2y \u0111\u1ec1u ph\u1ea3i ch\u1ee9a\n                res[id] = EdgeType::ANY;\n            }\n        }\n        else {\n            low[u] = min(low[u], num[v]);\n        }\n    }\n}\nvoid solve(vector&lt;Edge&gt; &amp;pen) { // x\u1eed l\u00fd c\u00e1c nh\u00f3m c\u1ea1nh c\u00f3 c\u00f9ng tr\u1ecdng s\u1ed1\n    if (pen.empty()) return;\n\n    // kh\u1edfi t\u1ea1o \u0111\u1ed3 th\u1ecb n\u1ed1i c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng\n    for (int i = 0; i &lt; pen.size(); i++) {\n\n        // s\u1eed d\u1ee5ng \u0111\u1ec9nh cha trong dsu l\u00e0m \u0111\u1ec9nh \u0111\u1ea1i di\u1ec7n cho th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng\n        pen[i].u = dsu.find(pen[i].u); pen[i].v = dsu.find(pen[i].v);\n        g[pen[i].u].clear(); g[pen[i].v].clear();\n        num[pen[i].u] = num[pen[i].v] = 0;\n    }\n\n    for (auto e : pen) {\n        if (e.u == e.v) {\n            // n\u1ebfu 2 \u0111\u1ec9nh c\u00f9ng thu\u1ed9c 1 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng\n            res[e.id] = EdgeType::NONE;\n        }\n        else {\n            // n\u1ebfu 2 \u0111\u1ec9nh n\u1ed1i 2 th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng kh\u00e1c nhau l\u1ea1i v\u1edbi nhau\n            res[e.id] = EdgeType::ATL;\n            // th\u00eam c\u1ea1nh v\u00e0o \u0111\u1ed3 th\u1ecb\n            g[e.v].push_back({e.u, e.id});\n            g[e.u].push_back({e.v, e.id});\n        }\n    }\n\n    // t\u00ecm c\u1ea1nh c\u1ea7u\n    for (auto &amp;e : pen) if (num[e.u] == 0) dfs(e.u, -1);\n    // sau khi ho\u00e0n th\u00e0nh, ta th\u1ef1c hi\u1ec7n h\u1ee3p c\u00e1c c\u1ea1nh v\u00e0o c\u00e2y khung\n    for (auto &amp;e : pen) dsu.join(e.u, e.v);\n}\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, c;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        edges.push_back({u, v, c, i});\n    }\n\n    dsu.init(n);\n\n    sort(edges.begin(), edges.end(), [](Edge x, Edge y) {\n        return x.c &lt; y.c;\n    });\n\n    vector&lt;Edge&gt; pen;\n    for (auto &amp;e : edges) {\n        if (!pen.empty() &amp;&amp; pen.back().c == e.c) {\n            pen.push_back(e);\n        }\n        else {\n            solve(pen);\n            pen = {e};\n        }\n    }\n    solve(pen);\n\n    // in ra k\u1ebft qu\u1ea3\n    for (int i = 1; i &lt;= m; i++) {\n        if (res[i] == EdgeType::NONE) cout &lt;&lt; \"none\\n\";\n        else if (res[i] == EdgeType::ANY) cout &lt;&lt; \"any\\n\";\n        else cout &lt;&lt; \"at least one\\n\";\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/minimum-spanning-tree/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 th\u1eed s\u1ee9c v\u1edbi m\u1ed9t s\u1ed1 b\u00e0i t\u1eadp sau: * P186SUMF - 959E * VMST * C11WATER * CHEER</p>"},{"location":"algo/graph-theory/shortest-path/","title":"C\u00e1c thu\u1eadt to\u00e1n v\u1ec1 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t","text":"<p>T\u00e1c gi\u1ea3:  - Tr\u1ea7n Ho\u00e0i An - THPT Ho\u00e0ng L\u00ea Kha, T\u00e2y Ninh</p> <p>Reviewer: - Nguy\u1ec5n Xu\u00e2n T\u00f9ng - \u0110\u1ea1i h\u1ecdc Qu\u1ed1c T\u1ebf, \u0110\u1ea1i h\u1ecdc Qu\u1ed1c gia Th\u00e0nh ph\u1ed1 H\u1ed3 Ch\u00ed Minh</p>"},{"location":"algo/graph-theory/shortest-path/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>B\u00e0i to\u00e1n t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t tr\u00ean \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n \u0111a d\u1ea1ng, c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf (nh\u01b0 trong Google Maps, hay c\u00e1c b\u00e0i to\u00e1n networking, ...). C\u00e1c d\u1ea1ng b\u00e0i v\u1ec1 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t c\u0169ng th\u01b0\u1eddng xuy\u00ean c\u00f3 m\u1eb7t trong c\u00e1c k\u00ec thi l\u1eadp tr\u00ecnh. </p> <p>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u ba thu\u1eadt to\u00e1n c\u01a1 b\u1ea3n c\u1ee7a d\u1ea1ng b\u00e0i t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t: * Thu\u1eadt to\u00e1n Bellman - Ford. * Thu\u1eadt to\u00e1n Dijkstra. * Thu\u1eadt to\u00e1n Floyd-Warshall (c\u00f2n g\u1ecdi l\u00e0 thu\u1eadt to\u00e1n Floyd).</p> <p>C\u1ea7n l\u01b0u \u00fd r\u1eb1ng, c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n th\u00f4ng d\u1ee5ng kh\u00e1c c\u0169ng c\u00f3 t\u00ean th\u01b0\u1eddng g\u1ecdi l\u00e0 thu\u1eadt to\u00e1n Floyd, d\u00f9ng \u0111\u1ec3 t\u00ecm chu tr\u00ecnh trong \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd ch\u1ec9 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn thu\u1eadt to\u00e1n t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t.</p>"},{"location":"algo/graph-theory/shortest-path/#1-thuat-toan-bellman-ford","title":"1. Thu\u1eadt to\u00e1n Bellman - Ford","text":"<p>Thu\u1eadt to\u00e1n Bellman-Ford d\u00f9ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ed9t ngu\u1ed3n (Single-source shortest path), \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 c\u00f3 tr\u1ecdng s\u1ed1 \u00e2m.</p>"},{"location":"algo/graph-theory/shortest-path/#bai-toan","title":"B\u00e0i to\u00e1n.","text":"<p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(N\\) \u0111\u1ec9nh v\u00e0 \\(M\\) c\u1ea1nh, v\u00e0 m\u1ed9t \u0111\u1ec9nh ngu\u1ed3n l\u00e0 \u0111\u1ec9nh \\(S\\). M\u1ed7i c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 nguy\u00ean. Tr\u1ecdng s\u1ed1 n\u00e0y c\u00f3 th\u1ec3 \u00e2m ho\u1eb7c d\u01b0\u01a1ng ho\u1eb7c b\u1eb1ng 0. V\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\) t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). Y\u00eau c\u1ea7u xu\u1ea5t k\u1ebft qu\u1ea3 t\u1ea1i m\u1ed7i \u0111\u1ec9nh \\(u\\) nh\u01b0 sau: </p> <ol> <li>N\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(S\\) \u0111\u1ebfn \\(u\\) th\u00ec in ra: Impossible</li> <li>N\u1ebfu t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(S\\) \u0111\u1ebfn \\(u\\) nh\u01b0ng kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t in ra: -Infinity</li> <li>Tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i in ra \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(S\\) \u0111\u1ebfn \\(u\\).</li> </ol> <p>Input: D\u00f2ng \u0111\u1ea7u ti\u00ean g\u1ed3m 3 s\u1ed1 nguy\u00ean \\(N, M, S\\). \\(M\\) d\u00f2ng ti\u1ebfp theo, m\u1ed7i d\u00f2ng g\u1ed3m ba s\u1ed1 nguy\u00ean \\(u, v, W_{u, v}\\) bi\u1ec3u di\u1ec5n m\u1ed9t c\u1ea1nh m\u1ed9t chi\u1ec1u t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) v\u1edbi tr\u1ecdng s\u1ed1 l\u00e0 \\(W_{u, v}\\).</p> <p>Output: g\u1ed3m \\(N\\) d\u00f2ng cho bi\u1ebft \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(S\\) \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh t\u1eeb \\(0\\) \u0111\u1ebfn \\(N-1\\)</p> <p>Gi\u1edbi h\u1ea1n b\u00e0i to\u00e1n : \\(1 \\le N \\le 1000, 1 \\le M \\le 5000\\)</p> <p>Sample Input <pre><code>7 6 4\n0 1 7\n2 0 1\n1 2 -9\n2 5 1000\n3 0 7\n4 3 3\n</code></pre> Sample Output <pre><code>-Infinity\n-Infinity\n-Infinity\n3\n0\n-Infinity\nImpossible\n</code></pre></p>"},{"location":"algo/graph-theory/shortest-path/#khai-niem-ve-chu-trinh-am","title":"Kh\u00e1i ni\u1ec7m v\u1ec1 chu tr\u00ecnh \u00e2m","text":"<ul> <li>Chu tr\u00ecnh \u00e2m l\u00e0 m\u1ed9t chu tr\u00ecnh trong \u0111\u00f3 t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh l\u00e0 s\u1ed1 \u00e2m. V\u00ed d\u1ee5 trong h\u00ecnh d\u01b0\u1edbi, ta c\u00f3 m\u1ed9t chu tr\u00ecnh \u00e2m \\(0 \\rightarrow 1 \\rightarrow 2\\) c\u00f3 t\u1ed5ng tr\u1ecdng s\u1ed1 l\u00e0 \\(7-9+1 = -1\\)</li> </ul> <ul> <li>N\u1ebfu tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) ch\u1ee9a chu tr\u00ecnh \u00e2m th\u00ec \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) s\u1ebd l\u00e0 \\(-\\infty\\). V\u00ec v\u1eady n\u00ean s\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a chu tr\u00ecnh \u00e2m trong \u0111\u1ed3 th\u1ecb s\u1ebd khi\u1ebfn m\u1ed9t s\u1ed1 c\u1eb7p \u0111\u1ec9nh kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t (ch\u1ec9 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i c\u00f3 \u0111\u1ed9 d\u00e0i \u00e2m v\u00f4 c\u1ef1c).<ul> <li>V\u00ed d\u1ee5: \u1ede \u0111\u1ed3 th\u1ecb tr\u00ean, \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(4\\) \u0111\u1ebfn \\(5\\) s\u1ebd c\u00f3 c\u00e1ch \u0111i l\u00e0 v\u00f4 h\u1ea1n l\u1ea7n qua chu tr\u00ecnh \u00e2m \u0111\u00e3 nh\u1eafc \u0111\u1ebfn, sau \u0111\u00f3 m\u1edbi \u0111i \u0111\u1ebfn \\(5\\). Nh\u01b0 v\u1eady kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t.</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/shortest-path/#y-tuong-cua-thuat-toan","title":"\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n.","text":"<p>X\u00e9t tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n h\u01a1n, khi \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 tr\u1ecdng s\u1ed1 \u00e2m (t\u1ee9c \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t lu\u00f4n t\u1ed3n t\u1ea1i).</p> <p>Thu\u1eadt to\u00e1n Bellman-Ford s\u1ebd l\u1eb7p nhi\u1ec1u l\u1ea7n. \u1ede m\u1ed7i v\u00f2ng l\u1eb7p, ta s\u1ebd \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh \\((u, v)\\) tr\u00ean \u0111\u1ed3 th\u1ecb, so s\u00e1nh \u0111\u01b0\u1eddng \u0111i \\(S \\rightarrow v\\) \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c v\u1edbi \u0111\u01b0\u1eddng \u0111i \\(S \\rightarrow u \\rightarrow v\\)</p> <ul> <li>V\u00ed d\u1ee5 \u0111\u1ed3 th\u1ecb sau:</li> </ul> <p></p> <ul> <li>Gi\u1ea3 s\u1eed ta t\u00ecm \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1\\rightarrow 3\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 \\(4\\), v\u00e0 \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1 \\rightarrow 2\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 \\(2\\). Nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea1nh \\((2, 3)\\) \u0111\u1ec3 n\u1ed1i d\u00e0i \u0111\u01b0\u1eddng \u0111i \\(1 \\rightarrow 2\\) th\u00e0nh \\(1 \\rightarrow 2 \\rightarrow 3\\) c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng \\(3\\), t\u1ed1t h\u01a1n \u0111\u01b0\u1eddng \u0111i tr\u1ef1c ti\u1ebfp \\(1 \\rightarrow 3\\) ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c.</li> </ul> <p>C\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng, v\u00f2ng l\u1eb7p tr\u00ean c\u1ea7n th\u1ef1c hi\u1ec7n \\(N-1\\) l\u1ea7n, m\u1ed7i l\u1ea7n \u0111i qua to\u00e0n b\u1ed9 \\(M\\) c\u1ea1nh, l\u00e0 s\u1ebd \u0111\u1ee7 \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t.</p> <ul> <li>Ch\u1ee9ng minh: Nh\u1eadn x\u00e9t r\u1eb1ng m\u1ed9t \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t b\u1ea5t k\u00ec s\u1ebd kh\u00f4ng c\u00f3 \u0111\u1ec9nh n\u00e0o \u0111\u01b0\u1ee3c \u0111i l\u1ea1i qu\u00e1 m\u1ed9t l\u1ea7n. Nh\u01b0 v\u1eady m\u1ed9t \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t s\u1ebd kh\u00f4ng c\u00f3 qu\u00e1 \\(N-1\\) c\u1ea1nh. Vi\u1ec7c th\u1ef1c hi\u1ec7n ph\u00e9p t\u00ednh \\(D_v = D_u + W_{u, v}\\) c\u0169ng \u0111\u1ed3ng ngh\u0129a v\u1edbi th\u00eam m\u1ed9t c\u1ea1nh \\(u \\rightarrow v\\) v\u00e0o h\u00e0nh tr\u00ecnh \u0111i t\u1eeb \\(s\\) \u0111\u1ebfn \\(v\\). V\u1eady m\u1ed9t \\(D_u\\) ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u t\u1ed1i \u0111a \\(N-1\\) l\u1ea7n, v\u00e0 t\u1eeb l\u1ea7n th\u1ee9 \\(N\\) tr\u1edf \u0111i s\u1ebd kh\u00f4ng th\u1ec3 t\u1ed1i \u01b0u h\u01a1n \u0111\u01b0\u1ee3c n\u1eefa.</li> </ul>"},{"location":"algo/graph-theory/shortest-path/#cai-at","title":"C\u00e0i \u0110\u1eb7t","text":"<p>\u1ede thu\u1eadt to\u00e1n n\u00e0y, \u0111\u1ed3 th\u1ecb th\u01b0\u1eddng \u0111\u01b0\u1ee3c l\u01b0u \u1edf d\u1ea1ng danh s\u00e1ch c\u1ea1nh. </p> <ul> <li> <p>\u0110\u1ecbnh ngh\u0129a \\(W[u, v]\\) l\u00e0 tr\u1ecdng s\u1ed1 c\u1ea1nh n\u1ed1i t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh \\(v\\) (n\u1ebfu c\u00f3). </p> </li> <li> <p>\u0110\u1ecbnh ngh\u0129a m\u1ea3ng \\(D[u]\\) l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(s\\rightarrow u\\). Ban \u0111\u1ea7u, ch\u01b0a c\u00f3 \u0111\u01b0\u1eddng \u0111i n\u00e0o, \\(D[u] = \\infty\\) v\u1edbi m\u1ecdi \\(u\\), ngo\u1ea1i tr\u1eeb \\(D[s] = 0\\).</p> <ul> <li>N\u1ebfu c\u1ea7n t\u00ecm l\u1ea1i ch\u00ednh \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t, ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a th\u00eam m\u1ed9t m\u1ea3ng truy v\u1ebft \\(trace[u]\\). Ban \u0111\u1ea7u m\u1ecdi \\(trace[u]\\) b\u1eb1ng \\(-1\\) ngh\u0129a l\u00e0 ch\u01b0a c\u00f3 \u0111\u01b0\u1eddng \u0111i.</li> </ul> </li> <li> <p>Th\u1ef1c hi\u1ec7n \\(N-1\\) l\u1ea7n: X\u00e9t l\u1ea7n l\u01b0\u1ee3t c\u00e1c c\u1ea1nh \\((u, v)\\) trong \u0111\u1ed3 th\u1ecb. N\u1ebfu \\(D[u] + W[u, v] &lt; D[v]\\), c\u1eadp nh\u1eadt \\(D[v] = D[u] + W[u, v])\\), \u0111\u1ed3ng th\u1eddi c\u1eadp nh\u1eadt \\(trace[v] = u\\).</p> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: Ta c\u00f3 m\u1ed9t v\u00f2ng l\u1eb7p \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \\(N-1\\) l\u1ea7n, m\u1ed7i l\u1ea7n l\u1eb7p ta s\u1ebd x\u1eed l\u00ed t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh trong \u0111\u1ed3 th\u1ecb, nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(N*M)\\).</p> </li> </ul> <p>Code: <pre><code>const long long INF = 2000000000000000000LL;\nstruct Edge {\n    int u, v;\n    long long w; // c\u1ea1nh t\u1eeb u \u0111\u1ebfn v, tr\u1ecdng s\u1ed1 w\n};\nvoid bellmanFord(int n, int S, vector&lt;Edge&gt; &amp;e, vector&lt;long long&gt; &amp;D, vector&lt;int&gt; &amp;trace) {\n    // e: danh s\u00e1ch c\u1ea1nh\n    // n: s\u1ed1 \u0111\u1ec9nh\n    // S: \u0111\u1ec9nh b\u1eaft \u0111\u1ea7u\n    // D: \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t\n    // trace: m\u1ea3ng truy v\u1ebft \u0111\u01b0\u1eddng \u0111i\n    // INF n\u1ebfu kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i\n    // -INF n\u1ebfu c\u00f3 \u0111\u01b0\u1eddng \u0111i \u00e2m v\u00f4 t\u1eadn\n    D.resize(n, INF);\n    trace.resize(n, -1);\n\n    D[S] = 0;\n    for(int T = 1; T &lt; n; T++) {\n        for (auto E : e) {\n            int u = E.u;\n            int v = E.v;\n            long long w = E.w;\n            if (D[u] != INF &amp;&amp; D[v] &gt; D[u] + w) {\n                D[v] = D[u] + w;\n                trace[v] = u;\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"algo/graph-theory/shortest-path/#tim-lai-uong-i-ngan-nhat","title":"T\u00ecm l\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t","text":"<p>Thao t\u00e1c t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(S\\) \u0111\u1ebfn \\(u\\) kh\u00e1 \u0111\u01a1n gi\u1ea3n, ta s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \\(u\\), sau \u0111\u00f3 truy v\u1ebft theo m\u1ea3ng \\(trace\\) ng\u01b0\u1ee3c v\u1ec1 \\(S\\).</p> <pre><code>vector&lt;int&gt; trace_path(vector&lt;int&gt; &amp;trace, int S, int u) {\n    if (u != S &amp;&amp; trace[u] == -1) return vector&lt;int&gt;(0); // kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i\n\n    vector&lt;int&gt; path;\n    while (u != -1) { // truy v\u1ebft ng\u01b0\u1ee3c t\u1eeb u v\u1ec1 S\n        path.push_back(u);\n        u = trace[u];\n    }\n    reverse(path.begin(), path.end()); // c\u1ea7n reverse v\u00ec \u0111\u01b0\u1eddng \u0111i l\u00fac n\u00e0y l\u00e0 t\u1eeb u v\u1ec1 S\n\n    return path;\n}\n</code></pre>"},{"location":"algo/graph-theory/shortest-path/#cac-truong-hop-co-chu-trinh-am","title":"C\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f3 chu tr\u00ecnh \u00e2m","text":"<p>Thu\u1eadt to\u00e1n Bellman-Ford c\u00f3 th\u1ec3 x\u1eed l\u00ed \u0111\u01b0\u1ee3c th\u00eam tr\u01b0\u1eddng h\u1ee3p nh\u1eadn bi\u1ebft chu tr\u00ecnh \u00e2m, c\u0169ng nh\u01b0 nh\u1eadn bi\u1ebft n\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh.</p>"},{"location":"algo/graph-theory/shortest-path/#nhan-biet-uong-i-am-vo-cuc","title":"Nh\u1eadn bi\u1ebft \u0111\u01b0\u1eddng \u0111i \u00e2m v\u00f4 c\u1ef1c","text":"<ul> <li>Nh\u1eadn x\u00e9t ti\u1ebfp r\u1eb1ng, ta c\u00f3 th\u1ec3 ch\u1ea1y v\u00f2ng quanh chu tr\u00ecnh \u00e2m li\u00ean t\u1ee5c \u0111\u1ec3 \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i ng\u1eafn h\u01a1n. Nh\u01b0 v\u1eady thu\u1eadt to\u00e1n Bellman-Ford \u1edf v\u00f2ng l\u1eb7p th\u1ee9 \\(N\\) tr\u1edf \u0111i v\u1eabn s\u1ebd li\u00ean t\u1ee5c t\u1ed1i \u01b0u \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng \u0111i, thay v\u00ec d\u1eebng l\u1ea1i \u1edf l\u1ea7n th\u1ee9 \\(N-1\\).<ul> <li>Ta ch\u1ec9 c\u1ea7n ch\u1ea1y thu\u1eadt to\u00e1n Bellman-Ford th\u00eam m\u1ed9t l\u1ea7n n\u1eefa v\u1edbi \\(N\\) v\u00f2ng l\u1eb7p, nh\u1eefng \u0111\u1ec9nh n\u00e0o v\u1eabn c\u00f2n t\u1ed1i \u01b0u \u0111\u01b0\u1ee3c \u1edf l\u1ea7n ch\u1ea1y th\u1ee9 hai s\u1ebd t\u1ed1i \u01b0u \u0111\u01b0\u1ee3c m\u00e3i m\u00e3i, v\u00e0 \u0111\u00f3 l\u00e0 c\u00e1c \u0111\u1ec9nh kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t.</li> </ul> </li> </ul> <p>Code: <pre><code>// sau khi ch\u1ea1y xong N-1 v\u00f2ng l\u1eb7p Bellman-Ford \nfor(int T = 0; T &lt; n; T++){\n    for (auto E : e) {\n        int u = E.u;\n        int v = E.v;\n        long long w = E.w;\n        if (D[u] != INF &amp;&amp; D[v] &gt; D[u] + w) {\n            // v\u1eabn c\u00f2n t\u1ed1i \u01b0u \u0111\u01b0\u1ee3c --&gt; \u00e2m v\u00f4 c\u1ef1c\n            D[v] = -INF;\n            trace[v] = u;\n        }\n    }\n}\n</code></pre></p>"},{"location":"algo/graph-theory/shortest-path/#tim-chu-trinh-am","title":"T\u00ecm chu tr\u00ecnh \u00e2m","text":"<p>M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n c\u00f3 th\u1ec3 y\u00eau c\u1ea7u ta t\u00ecm m\u1ed9t chu tr\u00ecnh \u00e2m b\u1ea5t k\u00ec trong \u0111\u1ed3 th\u1ecb. Ta c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda thu\u1eadt to\u00e1n Bellman-Ford l\u1ea1i nh\u01b0 sau:</p> <ul> <li>Thay v\u00ec ch\u1ea1y \\(N\\) v\u00f2ng l\u1eb7p Bellman-Ford nh\u01b0 tr\u01b0\u1eddng h\u1ee3p tr\u00ean, ta ch\u1ec9 c\u1ea7n ch\u1ea1y m\u1ed9t v\u00f2ng l\u1eb7p. Nh\u01b0 v\u1eady l\u00e0 \u0111\u1ee7 \u0111\u1ec3 ph\u00e1t hi\u1ec7n \u00edt nh\u1ea5t m\u1ed9t \u0111\u1ec9nh c\u00f3 \u0111\u01b0\u1eddng \u0111i b\u1eb1ng \\(-\\infty\\) (n\u1ebfu c\u00f3).</li> <li>Ti\u1ebfn h\u00e0nh truy v\u1ebft: B\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \\(u\\) b\u1ea5t k\u00ec c\u00f3 \u0111\u01b0\u1eddng \u0111i b\u1eb1ng \\(-\\infty\\), ta s\u1ebd truy v\u1ebft theo m\u1ea3ng <code>trace</code>:</li> <li> <p>Tr\u01b0\u1edbc h\u1ebft g\u00e1n <code>u = trace[u]</code> \u0111\u1ee7 \\(N\\) l\u1ea7n.</p> <ul> <li>M\u1ee5c \u0111\u00edch c\u1ee7a b\u01b0\u1edbc n\u00e0y l\u00e0 \u0111\u1ec3 <code>u</code> ch\u1eafc ch\u1eafn thu\u1ed9c chu tr\u00ecnh \u00e2m. Ban \u0111\u1ea7u c\u00f3 th\u1ec3 \u0111\u1ec9nh <code>u</code> c\u00f3 \u0111\u01b0\u1eddng \u0111i b\u1eb1ng \\(-\\infty\\) nh\u01b0ng ch\u01b0a ch\u1eafc thu\u1ed9c chu tr\u00ecnh \u00e2m. V\u00ed d\u1ee5 tr\u01b0\u1eddng h\u1ee3p sau:</li> </ul> <p></p> <p>\u1ede \u0111\u00e2y, t\u1eeb <code>0</code> \u0111\u1ebfn <code>1</code> c\u00f3 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t b\u1eb1ng \\(-\\infty\\), tuy nhi\u00ean \u0111\u1ec9nh <code>1</code> l\u1ea1i kh\u00f4ng thu\u1ed9c chu tr\u00ecnh \u00e2m n\u00e0o.</p> </li> <li> <p>Sau \u0111\u00f3, <code>u</code> s\u1ebd thu\u1ed9c m\u1ed9t chu tr\u00ecnh \u00e2m. Ta ch\u1ec9 c\u1ea7n truy v\u1ebft \u0111\u1ec9nh <code>u</code> theo m\u1ea3ng <code>trace</code> cho \u0111\u1ebfn khi g\u1eb7p l\u1ea1i ch\u00ednh n\u00f3, s\u1ebd \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh.</p> </li> <li> <p>Chu tr\u00ecnh v\u1eeba truy v\u1ebft ch\u00ednh l\u00e0 m\u1ed9t chu tr\u00ecnh \u00e2m c\u1ee7a \u0111\u1ed3 th\u1ecb. L\u01b0u \u00fd ta v\u1eabn ph\u1ea3i \u0111\u1ea3o ng\u01b0\u1ee3c k\u1ebft qu\u1ea3 truy v\u1ebft, v\u00ec ta \u0111ang truy v\u1ebft ng\u01b0\u1ee3c so v\u1edbi \u0111\u1ed3 th\u1ecb g\u1ed1c.</p> </li> </ul> <pre><code>bool findNegativeCycle(int n, vector&lt;long long&gt; &amp;D, vector&lt;int&gt; &amp;trace, vector&lt;int&gt; &amp;negCycle) {\n    // m\u1ea3ng D v\u00e0 trace \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ea1y qua thu\u1eadt to\u00e1n Bellman-Ford\n    int negStart = -1; // \u0111\u1ec9nh b\u1eaft \u0111\u1ea7u\n    for (auto E : e) {\n        int u = E.u;\n        int v = E.v;\n        long long w = E.w;\n        if (D[u] != INF &amp;&amp; D[v] &gt; D[u] + w) {\n            D[v] = -INF; \n            trace[v] = u;\n            negStart = v; // \u0111\u00e3 t\u00ecm th\u1ea5y -INF\n        }\n    }\n\n    if (negStart == -1) return false; // kh\u00f4ng c\u00f3 chu tr\u00ecnh \u00e2m\n\n    int u = negStart;\n    for (int i = 0; i &lt; n; i++) {\n        u = trace[u]; // \u0111\u01b0a u v\u1ec1 chu tr\u00ecnh \u00e2m\n    }\n\n    negCycle = vector&lt;int&gt;(1, u);\n    for (int v = trace[u]; v != u; v = trace[u]) {\n        negCycle.push_back(v); // truy v\u1ebft m\u1ed9t v\u00f2ng\n    }\n    reverse(negCycle.begin(), negCycle.end());\n\n    return true;\n}\n</code></pre>"},{"location":"algo/graph-theory/shortest-path/#2-thuat-toan-dijkstra","title":"2. Thu\u1eadt to\u00e1n Dijkstra","text":"<p>Thu\u1eadt to\u00e1n Dijkstra d\u00f9ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ed9t ngu\u1ed3n (Single-source shortest path), \u0111\u1ed3 th\u1ecb tr\u1ecdng s\u1ed1 kh\u00f4ng \u00e2m.</p>"},{"location":"algo/graph-theory/shortest-path/#bai-toan_1","title":"B\u00e0i to\u00e1n.","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng v\u1edbi \\(N\\) \u0111\u1ec9nh (\u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(N-1\\)), \\(M\\) c\u1ea1nh c\u00f3 h\u01b0\u1edbng, c\u00f3 tr\u1ecdng s\u1ed1, v\u00e0 m\u1ed9t \u0111\u1ec9nh ngu\u1ed3n \\(S\\). Tr\u1ecdng s\u1ed1 c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh \u0111\u1ec1u kh\u00f4ng \u00e2m. Y\u00eau c\u1ea7u t\u00ecm ra \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh \\(S\\) t\u1edbi t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f2n l\u1ea1i (ho\u1eb7c cho bi\u1ebft n\u1ebfu kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i).</p> <p>Sample Input <pre><code>7 8 0\n0 2 7\n0 1 1\n0 3 4\n2 5 8\n5 3 3\n4 5 6\n1 4 3\n2 4 3\n</code></pre> Sample Output <pre><code>0\n1\n7\n4\n4\n10\n-1\n</code></pre></p> <p>H\u00ecnh \u1ea3nh c\u1ee7a Test v\u00ed d\u1ee5. \u1ede \u0111\u1ed3 th\u1ecb n\u00e0y, \u0111\u1ec9nh ngu\u1ed3n l\u00e0 \u0111\u1ec9nh \\(0\\), \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(0\\) \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh \\(0\\) \u0111\u1ebfn \\(5\\) l\u00e0 \\([0, 1, 7, 4, 4, 10]\\). Ri\u00eang \u0111\u1ec9nh \\(6\\) kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i \u0111\u1ebfn. </p> <p></p>"},{"location":"algo/graph-theory/shortest-path/#y-tuong-cua-thuat-toan_1","title":"\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n.","text":"<p>Gi\u1ed1ng nh\u01b0 thu\u1eadt to\u00e1n Bellman-Ford, thu\u1eadt to\u00e1n Dijkstra c\u0169ng t\u1ed1i \u01b0u h\u00f3a \u0111\u01b0\u1eddng \u0111i b\u1eb1ng c\u00e1ch x\u00e9t c\u00e1c c\u1ea1nh \\((u, v)\\), so s\u00e1nh hai \u0111\u01b0\u1eddng \u0111i \\(S \\rightarrow v\\) s\u1eb5n c\u00f3 v\u1edbi \u0111\u01b0\u1eddng \u0111i \\(S \\rightarrow u \\rightarrow v\\). </p> <p>Thu\u1eadt to\u00e1n ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\u00e1ch duy tr\u00ec m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ec9nh trong \u0111\u00f3 ta \u0111\u00e3 bi\u1ebft ch\u1eafc ch\u1eafn \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t. M\u1ed7i b\u01b0\u1edbc, thu\u1eadt to\u00e1n s\u1ebd ch\u1ecdn ra m\u1ed9t \u0111\u1ec9nh \\(u\\) m\u00e0 ch\u1eafc ch\u1eafn s\u1ebd kh\u00f4ng th\u1ec3 t\u1ed1i \u01b0u h\u01a1n n\u1eefa, sau \u0111\u00f3 ti\u1ebfn h\u00e0nh t\u1ed1i \u01b0u c\u00e1c \u0111\u1ec9nh \\(v\\) kh\u00e1c d\u1ef1a tr\u00ean c\u00e1c c\u1ea1nh \\((u, v)\\) \u0111i ra t\u1eeb \u0111\u1ec9nh \\(u\\). Sau \\(N\\) b\u01b0\u1edbc, t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \u0111\u1ec1u s\u1ebd \u0111\u01b0\u1ee3c ch\u1ecdn, v\u00e0 m\u1ecdi \u0111\u01b0\u1eddng \u0111i t\u00ecm \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 ng\u1eafn nh\u1ea5t.</p> <p>C\u1ee5 th\u1ec3 h\u01a1n, thu\u1eadt to\u00e1n s\u1ebd duy tr\u00ec \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh. \u1ede m\u1ed7i b\u01b0\u1edbc, ch\u1ecdn \u0111\u01b0\u1eddng \u0111i \\(S \\rightarrow u\\) c\u00f3 t\u1ed5ng tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t trong t\u1ea5t c\u1ea3 c\u00e1c \u0111\u01b0\u1eddng \u0111i \u0111ang \u0111\u01b0\u1ee3c duy tr\u00ec. Sau \u0111\u00f3 ti\u1ebfn h\u00e0nh t\u1ed1i \u01b0u c\u00e1c \u0111\u01b0\u1eddng \u0111i \\(S \\rightarrow v\\) b\u1eb1ng c\u00e1ch th\u1eed k\u00e9o d\u00e0i th\u00e0nh \\(S \\rightarrow u\\rightarrow v\\) nh\u01b0 \u0111\u00e3 m\u00f4 t\u1ea3 tr\u00ean.</p>"},{"location":"algo/graph-theory/shortest-path/#minh-hoa-thuat-toan","title":"Minh h\u1ecda thu\u1eadt to\u00e1n","text":"<p>Ta s\u1ebd minh h\u1ecda thu\u1eadt to\u00e1n b\u1eb1ng m\u1ed9t \u0111\u1ed3 th\u1ecb nh\u01b0 h\u00ecnh. \u0110\u1ecbnh ngh\u0129a: - \\(D_u\\) l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh ngu\u1ed3n \u0111\u00ean \u0111\u1ec9nh \\(u\\) \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c. - \\(P_u\\) nh\u1eadn hai gi\u00e1 tr\u1ecb \\(true\\), \\(false\\) cho bi\u1ebft \u0111\u1ec9nh \\(P_u\\) \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn \u0111\u1ec3 t\u1ed1i \u01b0u ch\u01b0a.</p> <p>\u0110\u1ec9nh \u0111\u01b0\u1ee3c t\u00f4 \u0111en (\u0111\u1ec9nh 0) s\u1ebd l\u00e0 \u0111\u1ec9nh ngu\u1ed3n.</p> <p></p> <p>Ban \u0111\u1ea7u, \\(D = [0, \\infty, \\infty, \\infty]\\), \\(P = [false, false, false, false]\\)</p> <ul> <li>B\u01b0\u1edbc 1: Thu\u1eadt to\u00e1n s\u1ebd ch\u1ecdn \u0111\u1ec9nh \\(0\\), v\u00ec \\(D_0 = 0\\) l\u00e0 nh\u1ecf nh\u1ea5t th\u1ecfa m\u00e3n \\(P_0 = false\\). Ti\u1ebfn h\u00e0nh t\u1ed1i \u01b0u c\u00e1c c\u1ea1nh \u0111i ra:<ul> <li>C\u1ea1nh \\((0, 2)\\): c\u1eadp nh\u1eadt \\(D_2 = min(D_2, D_0 + W_{0, 2}) = min(\\infty, 0+1) = 1\\)</li> <li>C\u1ea1nh \\((0, 3)\\): c\u1eadp nh\u1eadt \\(D_3 = min(D_3, D_0 + W_{0, 3}) = min(\\infty, 0+4) = 4\\)</li> </ul> </li> </ul> <p>Sau b\u01b0\u1edbc n\u00e0y, \\(D = [0, \\infty, 1, 4]\\), \\(P = [true, false, false, false]\\)</p> <ul> <li>B\u01b0\u1edbc 2: thu\u1eadt to\u00e1n s\u1ebd ch\u1ecdn ra \u0111\u1ec9nh \\(2\\), c\u00f3 \\(D_2 = 1\\) l\u00e0 nh\u1ecf nh\u1ea5t th\u1ecfa m\u00e3n \\(P_2 = false\\). Ti\u1ebfn h\u00e0nh t\u1ed1i \u01b0u c\u00e1c c\u1ea1nh \u0111i ra:<ul> <li>C\u1ea1nh \\((2, 1)\\): c\u1eadp nh\u1eadt \\(D_1 = min(D_1, D_2 + W_{2, 1}) = min(\\infty, 1+3) = 4\\)</li> <li>C\u1ea1nh \\((2, 3)\\): c\u1eadp nh\u1eadt \\(D_3 = min(D_3, D_2 + W_{2, 3}) = min(4, 1+2) = 3\\)</li> </ul> </li> </ul> <p>Sau b\u01b0\u1edbc n\u00e0y, \\(D = [0, 4, 1, 3]\\), \\(P = [true, false, true, false]\\)</p> <ul> <li>B\u01b0\u1edbc 3: thu\u1eadt to\u00e1n s\u1ebd ch\u1ecdn ra \u0111\u1ec9nh \\(3\\), c\u00f3 \\(D_3 = 1\\) l\u00e0 nh\u1ecf nh\u1ea5t th\u1ecfa m\u00e3n \\(P_3 = false\\). Ti\u1ebfn h\u00e0nh t\u1ed1i \u01b0u c\u00e1c c\u1ea1nh \u0111i ra:<ul> <li>C\u1ea1nh \\((3, 1)\\): c\u1eadp nh\u1eadt \\(D_1 = min(D_1, D_3 + W_{3, 1}) = min(4, 3+2) = 4\\)</li> </ul> </li> </ul> <p>Sau b\u01b0\u1edbc n\u00e0y, \\(D = [0, 4, 1, 3]\\), \\(P = [true, false, true, true]\\)</p> <ul> <li>B\u01b0\u1edbc 4: thu\u1eadt to\u00e1n s\u1ebd ch\u1ecdn \u0111\u1ec9nh \\(1\\). Kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e0o \u0111i ra.</li> </ul> <p>\u0110\u1ebfn \u0111\u00e2y, t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u. Thu\u1eadt to\u00e1n k\u1ebft th\u00fac. \u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u00ecm \u0111\u01b0\u1ee3c t\u1eeb \u0111\u1ec9nh \\(0\\) l\u00e0 \\(D = [0, 4, 1, 3]\\).</p>"},{"location":"algo/graph-theory/shortest-path/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u1ede thu\u1eadt to\u00e1n n\u00e0y, ta s\u1ebd l\u01b0u \u0111\u1ed3 th\u1ecb d\u01b0\u1edbi d\u1ea1ng danh s\u00e1ch k\u1ec1. Ta \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> <ul> <li>\\(D[u]\\) l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(s\\rightarrow u\\). Ban \u0111\u1ea7u kh\u1edfi t\u1ea1o \\(D[u] = \\infty\\) v\u1edbi m\u1ecdi \\(u\\), ri\u00eang \\(D[s] = 0\\).<ul> <li>C\u0169ng nh\u01b0 thu\u1eadt to\u00e1n Bellman-Ford, ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a th\u00eam m\u1ea3ng \\(trace\\) \u0111\u1ec3 truy v\u1ebft \u0111\u01b0\u1eddng \u0111i n\u1ebfu c\u1ea7n.</li> </ul> </li> <li>\\(W[u,v]\\) l\u00e0 tr\u1ecdng s\u1ed1 c\u1ea1nh tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\rightarrow v\\).</li> <li>\\(P[u]\\) l\u00e0 m\u1ea3ng \u0111\u00e1nh d\u1ea5u c\u00e1c \u0111\u1ec9nh \\(u\\) \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00ed ch\u01b0a. Ban \u0111\u1ea7u t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ec1u l\u00e0 false.</li> </ul> <p>Ta s\u1ebd l\u1eb7p \\(N\\) l\u1ea7n qu\u00e1 tr\u00ecnh sau: - T\u00ecm \u0111\u1ec9nh \\(u\\) c\u00f3 \\(D[u]\\) nh\u1ecf nh\u1ea5t v\u00e0 \\(P[u] = false\\). - Sau khi t\u00ecm \u0111\u01b0\u1ee3c \u0111\u1ec9nh \\(u\\), ta x\u00e9t c\u00e1c \u0111\u1ec9nh \\(v\\) k\u1ec1 v\u1edbi \u0111\u1ec9nh \\(u\\) v\u00e0 ti\u1ebfn h\u00e0nh t\u1ed1i \u01b0u h\u00f3a \\(D[v]\\): n\u1ebfu \\(D[v] &gt; D[u] + W[u,v]\\) th\u00ec \\(D[v] = D[u] + W[u,v]\\).      * N\u1ebfu vi\u1ec7c t\u1ed1i \u01b0u h\u00f3a di\u1ec5n ra, ta s\u1ebd c\u1eadp nh\u1eadt \\(trace[v] = u\\). - \u0110\u00e1nh d\u1ea5u \\(P[u] = true\\), ngh\u0129a l\u00e0 \u0111\u1ec9nh \\(u\\) \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00ed xong</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n: Ta c\u00f3 \\(N\\) l\u1ea7n l\u1eb7p: - B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N)\\) m\u1ed7i l\u1ea7n l\u1eb7p. - B\u01b0\u1edbc th\u1ee9 hai c\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(M)\\) qua t\u1ea5t c\u1ea3 c\u00e1c l\u1ea7n l\u1eb7p</p> <p>Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch c\u00e0i \u0111\u1eb7t c\u01a1 b\u1ea3n s\u1ebd l\u00e0 \\(O(N^2 + M)\\).</p> <p>Code: <pre><code>const long long INF = 2000000000000000000LL;\nstruct Edge{\n    int v;\n    long long w;\n};\nvoid dijkstra(int n, int S, vector&lt;vector&lt;Edge&gt;&gt; E, vector&lt;long long&gt; &amp;D, vector&lt;int&gt; &amp;trace) {\n    D.resize(n, INF);\n    trace.resize(n, -1);\n\n    vector&lt;bool&gt; P(n, 0);\n    D[S] = 0;\n\n    for (int i = 0; i &lt; n; i++) {\n        int uBest; // t\u00ecm \u0111\u1ec9nh u ch\u01b0a d\u00f9ng, c\u00f3 kho\u1ea3ng c\u00e1ch nh\u1ecf nh\u1ea5t\n        long long Max = INF;\n        for (int u = 0; u &lt; n; u++) {\n            if(D[u] &lt; Max &amp;&amp; P[u] == false) {\n                uBest = u;\n                Max = D[u];\n            }\n        }\n\n        // c\u1ea3i ti\u1ebfn c\u00e1c \u0111\u01b0\u1eddng \u0111i qua u\n        int u = uBest;\n        P[u] = true;\n        for(auto x : E[u]) {\n            int v = x.v;\n            long long w = x.w;\n            if(D[v] &gt; D[u] + w) {\n                D[v] = D[u] + w;\n                trace[v] = u;\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"algo/graph-theory/shortest-path/#cai-tien-oi-voi-o-thi-thua","title":"C\u1ea3i ti\u1ebfn \u0111\u1ed1i v\u1edbi \u0111\u1ed3 th\u1ecb th\u01b0a","text":"<ul> <li> <p>Nh\u1eadn x\u00e9t r\u1eb1ng b\u01b0\u1edbc \u0111\u1ea7u ti\u00ean: \"T\u00ecm \u0111\u1ec9nh \\(u\\) c\u00f3 \\(D_u\\) nh\u1ecf nh\u1ea5t v\u00e0 \\(P_u = false\\)\", c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c c\u1ea3i ti\u1ebfn. Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Heap (c\u1ee5 th\u1ec3 l\u00e0 Min Heap) ho\u1eb7c c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm \u0111\u1ec3 c\u1ea3i ti\u1ebfn b\u01b0\u1edbc n\u00e0y.</p> <ul> <li>M\u1ed7i l\u1ea7n t\u1ed1i \u01b0u h\u00f3a \\(D_v\\), ta \u0111\u1ea9y c\u1eb7p \\(\\{D_v, v\\}\\) v\u00e0o trong Heap. </li> <li>\u0110\u1ec3 t\u00ecm \u0111\u1ec9nh c\u00f3 \\(D_u\\) nh\u1ecf nh\u1ea5t, ta ch\u1ec9 c\u1ea7n li\u00ean t\u1ee5c l\u1ea5y ph\u1ea7n t\u1eed tr\u00ean c\u00f9ng trong Heap ra, cho \u0111\u1ebfn khi g\u1eb7p \u0111\u1ec9nh \\(u\\) th\u1ecfa m\u00e3n \\(P_u = false\\).</li> </ul> </li> <li> <p>M\u1ed7i l\u1ea7n t\u1ed1i \u01b0u \\(D_v\\), ta ph\u1ea3i push v\u00e0o Heap m\u1ed9t l\u1ea7n. V\u1edbi m\u1ed7i l\u1ea7n push v\u00e0o trong Heap, ta \u0111\u1ec1u ph\u1ea3i pop ra l\u1ea1i m\u1ed9t l\u1ea7n. Do c\u00f3 t\u1ed1i \u0111a \\(O(M)\\) l\u1ea7n t\u1ed1i \u01b0u, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(MlogN)\\).</p> </li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p sau khi c\u1ea3i ti\u1ebfn: \\(O(MlogN)\\). L\u01b0u \u00fd r\u1eb1ng v\u1edbi \\(M\\) l\u1edbn th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y kh\u00f4ng t\u1ed1t h\u01a1n c\u00e0i \u0111\u1eb7t c\u01a1 b\u1ea3n. Ch\u1ee9ng minh nh\u01b0 sau: - Ta c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a hai c\u00e1ch c\u00e0i \u0111\u1eb7t:     - C\u00e1ch c\u00e0i \u0111\u1eb7t c\u01a1 b\u1ea3n: \\(O(N^2 + M)\\).     - C\u00e1ch c\u00e0i \u0111\u1eb7t c\u1ea3i ti\u1ebfn: \\(O(MlogN)\\). - S\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh \\(M\\) trong \u0111\u01a1n \u0111\u1ed3 th\u1ecb kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(N^2\\), nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch c\u01a1 b\u1ea3n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c vi\u1ebft \u0111\u01a1n gi\u1ea3n th\u00e0nh \\(O(N^2)\\). - \u0110\u1ec3 c\u00e1ch c\u00e0i \u0111\u1eb7t c\u1ea3i ti\u1ebfn t\u1ed1t h\u01a1n, ta c\u1ea7n \\(MlogN &lt; N^2\\) suy ra \\(M &lt; N^2/logN\\).     - V\u00ed d\u1ee5: \u0111\u1ed1i v\u1edbi \\(N = 10^5\\), ta c\u1ea7n \\(M &gt; 6 \\cdot 10^8\\) \u0111\u1ec3 c\u00e1ch c\u00e0i \u0111\u1eb7t c\u01a1 b\u1ea3n t\u1ed1t h\u01a1n c\u00e1ch c\u00e0i \u0111\u1eb7t c\u1ea3i ti\u1ebfn. Th\u1ef1c t\u1ebf trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u kh\u00f3 c\u00f3 \u0111\u1ed3 th\u1ecb n\u00e0o c\u00f3 s\u1ed1 c\u1ea1nh l\u1edbn nh\u01b0 v\u1eady. V\u00ec th\u1ebf nh\u00ecn chung khi \\(N\\) l\u1edbn th\u00ec thu\u1eadt \\(O(MlogN)\\) lu\u00f4n t\u1ed1t h\u01a1n.</p> <p>Code: <pre><code>const long long INF = 2000000000000000000LL;\nstruct Edge{// ki\u1ec3u d\u1eef li\u1ec7u t\u1ef1 t\u1ea1o \u0111\u1ec3 l\u01b0u th\u00f4ng s\u1ed1 c\u1ee7a m\u1ed9t c\u1ea1nh.\n    int v;\n    long long w;\n};\nstruct Node{// ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ec3 l\u01b0u \u0111\u1ec9nh u v\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb s \u0111\u1ebfn u.\n    int u;\n    long long Dist_u;\n};\nstruct cmp{\n    bool operator() (Node a, Node b) {\n        return a.Dist_u &gt; b.Dist_u;\n    }\n};\nvoid dijkstraSparse(int n, int s, vector&lt;vector&lt;Edge&gt;&gt; &amp;E, vector&lt;long long&gt; &amp;D, vector&lt;int&gt; &amp;trace) {\n    D.resize(n, INF);\n    trace.resize(n, -1);\n    vector&lt;bool&gt; P(n, 0);\n\n    D[s] = 0;\n    priority_queue&lt;Node, vector&lt;Node&gt;, cmp&gt; h; // h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean, s\u1eafp x\u1ebfp theo dist[u] nh\u1ecf nh\u1ea5t tr\u01b0\u1edbc\n    h.push({s, D[s]});\n\n    while(!h.empty()) {\n        Node x = h.top();\n        h.pop();\n\n        int u = x.u;\n        if(P[u] == true) // \u0110\u1ec9nh u \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn tr\u01b0\u1edbc \u0111\u00f3, b\u1ecf qua\n            continue;\n\n        P[u] = true; // \u0110\u00e1nh d\u1ea5u \u0111\u1ec9nh u \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn\n        for(auto e : E[u]) {\n            int v = e.v;\n            long long w = e.w; \n\n            if(D[v] &gt; D[u] + w) {\n                D[v] = D[u] + w;\n                h.push({v, D[v]});\n                trace[v] = u;\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"algo/graph-theory/shortest-path/#tim-lai-uong-i-ngan-nhat_1","title":"T\u00ecm l\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t","text":"<p>C\u0169ng gi\u1ed1ng nh\u01b0 thu\u1eadt to\u00e1n Bellman-Ford, \u0111\u1ec3 t\u00ecm l\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(S\\) v\u1ec1 \\(u\\), ta s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh \\(u\\), sau \u0111\u00f3 truy v\u1ebft theo m\u1ea3ng \\(trace\\) ng\u01b0\u1ee3c v\u1ec1 \\(S\\).</p> <pre><code>vector&lt;int&gt; trace_path(vector&lt;int&gt; &amp;trace, int S, int u) {\n    if (u != S &amp;&amp; trace[u] == -1) return vector&lt;int&gt;(0); // kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i\n\n    vector&lt;int&gt; path;\n    while (u != -1) { // truy v\u1ebft ng\u01b0\u1ee3c t\u1eeb u v\u1ec1 S\n        path.push_back(u);\n        u = trace[u];\n    }\n    reverse(path.begin(), path.end()); // c\u1ea7n reverse v\u00ec \u0111\u01b0\u1eddng \u0111i l\u00fac n\u00e0y l\u00e0 t\u1eeb u v\u1ec1 S\n\n    return path;\n}\n</code></pre>"},{"location":"algo/graph-theory/shortest-path/#3-thuat-toan-floyd-warshall","title":"3. Thu\u1eadt to\u00e1n Floyd-Warshall","text":"<p>Thu\u1eadt to\u00e1n Floyd-Warshll d\u00f9ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ecdi c\u1eb7p \u0111\u1ec9nh (All-pairs shortest path), \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 c\u00f3 tr\u1ecdng s\u1ed1 \u00e2m.</p>"},{"location":"algo/graph-theory/shortest-path/#bai-toan_2","title":"B\u00e0i to\u00e1n","text":"<p>Cho \u0111\u1ed3 th\u1ecb g\u1ed3m \\(N\\) \u0111\u1ec9nh v\u00e0 m\u1ed9t ma tr\u1eadn tr\u1ecdng s\u1ed1 \\(W\\), trong \u0111\u00f3 \u00f4 \\((i,j)\\) cho bi\u1ebft r\u1eb1ng c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng \u0111i tr\u1ef1c ti\u1ebfp t\u1eeb \\(i\\rightarrow j\\) v\u1edbi tr\u1ecdng s\u1ed1 l\u00e0 \\(W_{i, j}\\). Y\u00eau c\u1ea7u  t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t gi\u1eefa m\u1ecdi c\u1eb7p \u0111\u1ec9nh tr\u00ean \u0111\u1ed3 th\u1ecb.</p> <p>Gi\u1edbi h\u1ea1n b\u00e0i to\u00e1n: \\(1 \\leq N \\leq 100\\)</p> <p>Input: D\u00f2ng \u0111\u1ea7u ti\u00ean g\u1ed3m s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(N\\), \\(N\\) d\u00f2ng ti\u1ebfp theo, m\u1ed7i d\u00f2ng g\u1ed3m \\(N\\) s\u1ed1 bi\u1ec3u di\u1ec5n m\u1ed9t ma tr\u1eadn trong \u0111\u00f3 \u00f4 \\((i,j)\\) cho bi\u1ebft \u0111\u01b0\u1eddng \u0111i tr\u1ef1c ti\u1ebfp t\u1eeb \\(i\\rightarrow j\\) c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 \\(W[i, j]\\). </p> <p>Output: Ma tr\u1eadn k\u1ebft qu\u1ea3 trong \u0111\u00f3 gi\u00e1 tr\u1ecb \u00f4 \\((i,j)\\) l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(i\\rightarrow j\\).</p> <p>Sample Input <pre><code>5\n0 4 2 1 6\n7 0 1 2 4\n2 3 0 1 2\n4 5 5 0 1\n6 8 7 3 0\n</code></pre> Sample Output <pre><code>0 4 2 1 2\n3 0 1 2 3\n2 3 0 1 2\n4 5 5 0 1\n6 8 7 3 0\n</code></pre></p>"},{"location":"algo/graph-theory/shortest-path/#y-tuong-cua-thuat-toan_2","title":"\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n.","text":"<p>\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0: \"Li\u1ec7u ch\u00fang ta c\u00f3 th\u1ec3 ch\u00e8n m\u1ed9t \u0111\u1ec9nh \\(k\\) v\u00e0o \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t gi\u1eefa 2 \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\)?\". </p> <ul> <li>V\u00ed d\u1ee5 nh\u01b0 c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(0 \\rightarrow 4\\) nh\u01b0 sau: \\(0\\rightarrow 1\\rightarrow 2\\rightarrow 3 \\rightarrow 4\\). V\u1eady vi\u1ec7c t\u00ednh \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(0\\rightarrow 4\\) ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c chia th\u00e0nh t\u00ednh \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(0\\rightarrow 2\\) sau \u0111\u00f3 c\u1ed9ng v\u1edbi \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(2\\rightarrow 4\\). T\u01b0\u01a1ng t\u1ef1 th\u1ebf \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(0\\rightarrow 2\\) v\u00e0 \\(2\\rightarrow 4\\) l\u1ea1i ti\u1ebfp t\u1ef1c \u0111\u01b0\u1ee3c ph\u00e2n ho\u1ea1ch th\u00e0nh nh\u1eefng \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t kh\u00e1c \u0111\u01a1n gi\u1ea3n h\u01a1n v\u00e0 t\u1ed1i \u01b0u h\u01a1n.</li> </ul> <p>Ta nh\u1eadn th\u1ea5y c\u00f3 m\u1ed9t c\u1ea5u tr\u00fac \u0111\u1ec7 quy, chia nh\u1ecf b\u00e0i to\u00e1n \u1edf \u0111\u00e2y. \u00dd t\u01b0\u1edfng n\u00e0y cho ph\u00e9p ch\u00fang ta th\u1ef1c hi\u1ec7n m\u1ed9t thu\u1eadt to\u00e1n mang h\u01b0\u01a1ng v\u1ecb quy ho\u1ea1ch \u0111\u1ed9ng nh\u01b0 sau: - G\u1ecdi \\(D(u, v, k)\\) l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t, trong \u0111\u00f3 ta ch\u1ec9 \u0111\u01b0\u1ee3c \u0111i qua \\(k\\) \u0111\u1ec9nh \u0111\u1ea7u ti\u00ean (c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(k-1\\)), ngo\u1ea1i tr\u1eeb ch\u00ednh \\(u\\) v\u00e0 \\(v\\). Ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i:     - \\(D(u, v, 0) = W_{u, v}\\) (kh\u00f4ng \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec9nh n\u00e0o ngo\u00e0i ch\u00ednh \\(u, v\\)).     - \\(D(u, u, k) = 0\\)     - \\(D(u, v, k) =\\) min c\u1ee7a 2 tr\u01b0\u1eddng h\u1ee3p:         - \\(D(u, v, k-1)\\): ta kh\u00f4ng d\u00f9ng \u0111\u1ec9nh \\(k\\) l\u00e0m trung gian, gi\u1eef nguy\u00ean \u0111\u01b0\u1eddng \u0111i c\u0169.         - \\(D(u, k, k-1) + D(k, v, k-1)\\): ta d\u00f9ng \u0111\u1ec9nh \\(k\\) l\u00e0m trung gian, t\u1eeb \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow v\\) th\u00e0nh \u0111\u01b0\u1eddng \u0111i \\(u \\rightarrow k \\rightarrow v\\).</p> <p>\u0110\u1ebfn \u0111\u00e2y ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng tr\u1ef1c ti\u1ebfp c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n. Tuy nhi\u00ean, \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o b\u1ed9 nh\u1edb, ta c\u00f3 th\u1ec3 t\u00ednh c\u00e1c \\(D(u, v, k)\\) v\u1edbi \\(k\\) l\u1ea7n l\u01b0\u1ee3t t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\), v\u00e0 khi c\u00e0i \u0111\u1eb7t ch\u1ec9 c\u1ea7n l\u01b0u l\u1ea1i \\(D(u, v)\\).</p>"},{"location":"algo/graph-theory/shortest-path/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<ul> <li> <p>\u0110\u1ecbnh ngh\u0129a:</p> <ul> <li>\\(W[u, v]\\) l\u00e0 gi\u00e1 tr\u1ecb \u0111\u01b0\u1eddng \u0111i tr\u1ef1c ti\u1ebfp t\u1eeb \\(u\\rightarrow v\\).</li> <li>\\(D[u, v]\\) l\u00e0 gi\u00e1 tr\u1ecb \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(u\\rightarrow v\\).</li> <li>\\(trace[u, v]\\) l\u00e0 m\u1ea3ng truy v\u1ebft \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(u\\rightarrow v\\)</li> </ul> </li> <li> <p>\u0110\u1ed3 th\u1ecb s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng ma tr\u1eadn k\u1ec1. Ban \u0111\u1ea7u s\u1ebd kh\u1edfi t\u1ea1o m\u1ecdi \\(D[u, v] = W[u, v]\\) v\u00ec khi ch\u01b0a t\u1ed1i \u01b0u g\u00ec th\u00ec \u0111\u01b0\u1eddng \u0111i tr\u1ef1c ti\u1ebfp lu\u00f4n l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t. </p> <ul> <li>\\(trace[u, v]\\) s\u1ebd kh\u1edfi t\u1ea1o b\u1eb1ng \\(u\\) v\u1edbi m\u1ecdi c\u1eb7p \\(u, v\\).</li> <li>N\u1ebfu kh\u00f4ng c\u00f3 c\u1ea1nh n\u1ed1i gi\u1eefa \\(u\\) v\u00e0 \\(v\\), coi nh\u01b0 \\(W[u, v] = \\infty\\) .</li> </ul> </li> <li> <p>Thu\u1eadt to\u00e1n ch\u1ec9 c\u1ea7n m\u1ed9t v\u00f2ng l\u1eb7p x\u00e9t m\u1ecdi \u0111\u1ec9nh \\(k\\) nh\u01b0 m\u1ed9t \u0111\u1ec9nh trung gian. Ti\u1ebfp theo \u0111\u1ebfn l\u00e0 2 v\u00f2ng l\u1eb7p \\(u\\), \\(v\\), c\u00f3 \u00fd ngh\u0129a th\u1eed ch\u00e8n \u0111\u1ec9nh \\(k\\) v\u00e0o gi\u1eefa \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\).</p> <ul> <li>N\u1ebfu nh\u01b0 \\(D[u, v]\\) \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u b\u1eb1ng \u0111\u1ec9nh \\(k\\), ta c\u1eadp nh\u1eadt th\u00eam \\(trace[u, v] = trace[k, v]\\)</li> </ul> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(N^3)\\).</p> </li> </ul> <p>Code: Thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t r\u1ea5t d\u1ec5 d\u00e0ng ch\u1ec9 v\u1edbi 3 v\u00f2ng l\u1eb7p:</p> <pre><code>void init_trace(vector&lt;vector&lt;int&gt;&gt; &amp;trace) {\n    int n = trace.size();\n    for (int u = 0; u &lt; n; u++) {\n        for (int v = 0; v &lt; n; v++) {\n            trace[u][v] = u;\n        }\n    }\n}\n\nvoid floydWarshall(int n, vector&lt;vector&lt;long long&gt;&gt; &amp;w, vector&lt;vector&lt;long long&gt;&gt; &amp;D, vector&lt;vector&lt;int&gt;&gt; &amp;trace) {\n    D = w;\n    init_trace(trace); // n\u1ebfu c\u1ea7n d\u00f2 \u0111\u01b0\u1eddng \u0111i\n\n    for (int k = 0; k &lt; n; k++) {\n        for (int u = 0; u &lt; n; u++) {\n            for (int v = 0; v &lt; n; v++) {\n                if (D[u][v] &gt; D[u][k] + D[k][v]) {\n                    D[u][v] = D[u][k] + D[k][v];\n                    trace[u][v] = trace[k][v];\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/shortest-path/#tim-lai-uong-i-ngan-nhat_2","title":"T\u00ecm l\u1ea1i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t","text":"<p>Gi\u1ed1ng nh\u01b0 hai thu\u1eadt to\u00e1n Bellman-Ford v\u00e0 Dijkstra, \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\), ta s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb \\(v\\), truy ng\u01b0\u1ee3c v\u1ec1 \\(u\\) theo m\u1ea3ng trace \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c.</p> <pre><code>vector&lt;int&gt; trace_path(vector&lt;vector&lt;int&gt;&gt; &amp;trace, int u, int v) {\n    vector&lt;int&gt; path;\n    while (v != u) { // truy v\u1ebft ng\u01b0\u1ee3c t\u1eeb v v\u1ec1 u\n        path.push_back(v);\n        v = trace[u][v];\n    }\n    path.push_back(u);\n\n    reverse(path.begin(), path.end()); // c\u1ea7n reverse v\u00ec \u0111\u01b0\u1eddng \u0111i t\u1eeb v ng\u01b0\u1ee3c v\u1ec1 u\n\n    return path;\n}\n</code></pre>"},{"location":"algo/graph-theory/shortest-path/#4-luu-y","title":"4. L\u01b0u \u00fd","text":"<ul> <li>B\u1ea3ng so s\u00e1nh c\u00e1c thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp:</li> </ul> Bellman-Ford Dijkstra (c\u01a1 b\u1ea3n) Dijkstra (tr\u00ean \u0111\u1ed3 th\u1ecb th\u01b0a) Floyd-Warshall B\u00e0i to\u00e1n gi\u1ea3i quy\u1ebft \u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ed9t ngu\u1ed3n \u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ed9t ngu\u1ed3n \u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ed9t ngu\u1ed3n \u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t m\u1ecdi c\u1eb7p \u0111\u1ec9nh \u0110\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N*M)\\) \\(O(N^2+M)\\) \\(O(MlogN)\\) \\(O(N^3)\\) S\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c cho tr\u1ecdng s\u1ed1 \u00e2m C\u00f3 Kh\u00f4ng Kh\u00f4ng C\u00f3 T\u00ecm \u0111\u01b0\u1ee3c chu tr\u00ecnh \u00e2m C\u00f3 Kh\u00f4ng Kh\u00f4ng Kh\u00f4ng <ul> <li> <p>Trong tr\u01b0\u1eddng h\u1ee3p c\u00f3 chu tr\u00ecnh \u00e2m, thu\u1eadt to\u00e1n Floyd-Warshall c\u00f3 th\u1ec3 ph\u1ea3i t\u00ednh to\u00e1n \u0111\u1ebfn nh\u1eefng gi\u00e1 tr\u1ecb r\u1ea5t nh\u1ecf (v\u1ec1 ph\u00eda s\u1ed1 \u00e2m), \u0111\u1ee7 \u0111\u1ec3 g\u00e2y ra hi\u1ec7n t\u01b0\u1ee3ng tr\u00e0n s\u1ed1 (th\u1eadm ch\u00ed v\u1edbi \\(N\\) t\u01b0\u01a1ng \u0111\u1ed1i nh\u1ecf). C\u1ea7n ph\u1ea3i ch\u00fa \u00fd \u0111\u1eb7c bi\u1ec7t \u0111\u1ebfn tr\u01b0\u1eddng h\u1ee3p n\u00e0y khi c\u00e0i \u0111\u1eb7t.</p> <ul> <li>M\u1ed9t c\u00e1ch th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 g\u00e1n <code>D[u][v] = max(D[u][v], -INF)</code> ngay sau m\u1ed7i l\u1ea7n t\u1ed1i \u01b0u, ch\u1eb7n kh\u00f4ng cho \\(D[u, v]\\) xu\u1ed1ng d\u01b0\u1edbi h\u1eb1ng s\u1ed1 \u00e2m v\u00f4 t\u1eadn.</li> </ul> </li> <li> <p>Thu\u1eadt to\u00e1n Floyd-Warshall c\u00f3 th\u1ee9 t\u1ef1 3 v\u00f2ng l\u1eb7p l\u00e0 \\(k \\rightarrow u \\rightarrow v\\) thay v\u00ec \\(u\\rightarrow v\\rightarrow k\\) (\u0111\u1ec9nh trung gian ph\u1ea3i \u0111\u01b0\u1ee3c \u0111\u1eb7t \u1edf v\u00f2ng l\u1eb7p ngo\u00e0i c\u00f9ng), \u0111\u00e2y l\u00e0 m\u1ed9t nh\u1ea7m l\u1eabn t\u01b0\u01a1ng \u0111\u1ed1i ph\u1ed5 bi\u1ebfn khi c\u00e0i \u0111\u1eb7t. </p> </li> <li> <p>Heap kh\u00f4ng ph\u1ea3i l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u duy nh\u1ea5t c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng khi c\u00e0i \u0111\u1eb7t Dijkstra d\u00e0nh cho \u0111\u1ed3 th\u1ecb th\u01b0a. Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng b\u1ea5t c\u1ee9 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0o h\u1ed7 tr\u1ee3 c\u00e1c thao t\u00e1c \"x\u00f3a kh\u1ecfi t\u1eadp h\u1ee3p\", \"c\u1eadp nh\u1eadt ph\u1ea7n t\u1eed trong t\u1eadp h\u1ee3p\", \"t\u00ecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong t\u1eadp h\u1ee3p\". Th\u1ef1c t\u1ebf c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm (<code>std::set</code> trong C++) c\u0169ng l\u00e0 m\u1ed9t l\u1ef1a ch\u1ecdn ph\u1ed5 bi\u1ebfn khi c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n n\u00e0y.</p> </li> <li> <p>V\u1edbi \u0111\u1ed3 th\u1ecb th\u01b0a, kh\u00f4ng c\u00f3 tr\u1ecdng s\u1ed1 \u00e2m, thay v\u00ec s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Floyd, ta c\u00f3 th\u1ec3 ch\u1ea1y thu\u1eadt to\u00e1n Dijkstra c\u1ea3i ti\u1ebfn \\(N\\) l\u1ea7n v\u1edbi \\(N\\) \u0111\u1ec9nh ngu\u1ed3n \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t gi\u1eefa m\u1ecdi c\u1eb7p \u0111\u1ec9nh, v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1t h\u01a1n thu\u1eadt to\u00e1n Floyd:</p> <ul> <li>Ta c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a hai thu\u1eadt to\u00e1n:<ul> <li>Dijkstra c\u1ea3i ti\u1ebfn, \\(N\\) l\u1ea7n: \\(O(N*MlogN)\\)</li> <li>Floyd-Warshall: \\(O(N^3)\\)</li> </ul> </li> <li>Nh\u01b0 v\u1eady, \u0111\u1ec3 Dijkstra \\(N\\) l\u1ea7n t\u1ed1t h\u01a1n, ta c\u1ea7n c\u00f3 \\(N*MlogN &lt; N^3\\) suy ra \\(M &lt; N^2/logN\\) (t\u01b0\u01a1ng t\u1ef1 nh\u01b0 so s\u00e1nh gi\u1eefa hai c\u00e1ch c\u00e0i \u0111\u1eb7t thu\u1eadt Dijkstra).</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/shortest-path/#bai-tap-van-dung","title":"B\u00e0i t\u1eadp v\u1eadn d\u1ee5ng.","text":"<p>Thu\u1eadt to\u00e1n Bellman-Ford:</p> <ul> <li>Kattis - shortestpath3</li> <li>CSES - High Score</li> <li>CSES - Cycle Finding (t\u00ecm chu tr\u00ecnh \u00e2m)</li> <li>Kattis - xyzzy</li> </ul> <p>Thu\u1eadt to\u00e1n Dijkstra:</p> <ul> <li>Kattis - shortestpath1</li> <li>Codeforces - Dijsktra? (truy v\u1ebft \u0111\u01b0\u1eddng \u0111i)</li> <li>CSES - Flight Discount</li> <li>Codeforces - Reducing Delivery Cost</li> <li>C\u00e1c b\u00e0i theo tag tr\u00ean VNOJ</li> </ul> <p>Thu\u1eadt to\u00e1n Floyd-Warshall:</p> <ul> <li>CSES - Shortest Route II (tr\u1ecdng s\u1ed1 kh\u00f4ng \u00e2m)</li> <li>Kattis - allpairspath (tr\u1ecdng s\u1ed1 c\u00f3 th\u1ec3 \u00e2m)</li> <li>Codeforces - Greg and Graph</li> <li>C\u00e1c b\u00e0i theo tag tr\u00ean VNOJ</li> </ul>"},{"location":"algo/graph-theory/topological-sort/","title":"S\u1eafp x\u1ebfp T\u00f4-p\u00f4 (Topological Sort)","text":"<p>Ngu\u1ed3n: wcipeg</p> <p>Bi\u00ean so\u1ea1n: - Nguy\u1ec5n Ch\u00e2u Khanh - VNU University of Engineering and Technology (VNU-UET) - B\u00f9i Minh Ho\u1ea1t - VNU University of Engineering and Technology (VNU-UET)</p> <p>Reviewer: - Ho\u00e0ng Xu\u00e2n Nh\u1eadt</p>"},{"location":"algo/graph-theory/topological-sort/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"<ul> <li>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n t\u00ecm hi\u1ec3u v\u1ec1 b\u00e0i to\u00e1n s\u1eafp x\u1ebfp T\u00f4-p\u00f4 (Topological Sort). S\u1eafp x\u1ebfp T\u00f4-p\u00f4 l\u00e0 m\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n c\u00f3 t\u00ednh \u1ee9ng d\u1ee5ng cao trong Tin h\u1ecdc l\u1eabn To\u00e1n h\u1ecdc v\u00e0 c\u1ea3 trong \u0111\u1eddi s\u1ed1ng. </li> </ul>"},{"location":"algo/graph-theory/topological-sort/#bai-toan-sap-xep-to-po","title":"B\u00e0i to\u00e1n s\u1eafp x\u1ebfp T\u00f4-p\u00f4","text":"<ul> <li>Th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng l\u00e0 m\u1ed9t th\u1ee9 t\u1ef1 s\u1eafp x\u1ebfp c\u1ee7a c\u00e1c \u0111\u1ec9nh sao cho v\u1edbi m\u1ecdi cung t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh \\(v\\) trong \u0111\u1ed3 th\u1ecb, \\(u\\) lu\u00f4n n\u1eb1m tr\u01b0\u1edbc \\(v\\).</li> <li>B\u00e0i to\u00e1n x\u00e1c \u0111\u1ecbnh th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 g\u1ecdi l\u00e0 B\u00e0i to\u00e1n s\u1eafp x\u1ebfp T\u00f4-p\u00f4.</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#cam-hung","title":"C\u1ea3m h\u1ee9ng","text":"<ul> <li>S\u1eafp x\u1ebfp T\u00f4-p\u00f4 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng nhi\u1ec1u nh\u1ea5t \u0111\u1ed1i v\u1edbi c\u00e1c b\u00e0i to\u00e1n bi\u1ec3u di\u1ec5n m\u1ed1i quan h\u1ec7 ph\u1ee5 thu\u1ed9c gi\u1eefa c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng. </li> <li>V\u00ed d\u1ee5 nh\u01b0 n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong vi\u1ec7c l\u1eadp ra l\u1ecbch tr\u00ecnh c\u00f4ng vi\u1ec7c. M\u1ed9t t\u1eadp h\u1ee3p c\u00e1c c\u00f4ng vi\u1ec7c ph\u1ee5 thu\u1ed9c l\u1eabn nhau c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo m\u1ed9t th\u1ee9 t\u1ef1 nh\u1ea5t \u0111\u1ecbnh \u0111\u1ec3 ch\u00fang \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n.</li> <li>Ta c\u00f3 v\u00ed d\u1ee5 th\u1ef1c t\u1ebf nh\u01b0 sau:<ul> <li>\u0110\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c b\u1eb1ng c\u1ea5p, sinh vi\u00ean ph\u1ea3i ho\u00e0n th\u00e0nh m\u1ed9t s\u1ed1 kh\u00f3a h\u1ecdc b\u1eaft bu\u1ed9c. C\u00e1c kh\u00f3a h\u1ecdc n\u00e0y kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i \u0111\u01b0\u1ee3c ho\u00e0n th\u00e0nh theo b\u1ea5t k\u1ef3 tr\u00ecnh t\u1ef1 nh\u1ea5t \u0111\u1ecbnh  n\u00e0o, nh\u01b0ng c\u00f3 m\u1ed9t s\u1ed1 kh\u00f3a h\u1ecdc l\u00e0 \u0111i\u1ec1u ki\u1ec7n ti\u00ean quy\u1ebft cho nh\u1eefng kh\u00f3a h\u1ecdc kh\u00e1c. </li> <li>V\u00ed d\u1ee5, kh\u00f3a h\u1ecdc \"Gi\u1edbi thi\u1ec7u v\u1ec1 thu\u1eadt to\u00e1n trong Tin h\u1ecdc\" c\u00f3 th\u1ec3 ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1c kh\u00f3a h\u1ecdc \u201cNh\u1eadp m\u00f4n thu\u1eadt to\u00e1n\u201d, \u201cGi\u1edbi thi\u1ec7u v\u1ec1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u\u201d,  \u201cNh\u1eadp m\u00f4n l\u1eadp tr\u00ecnh\u201d, \u2026 \u0110\u00e2y l\u00e0 m\u1ed1i quan h\u1ec7 ph\u1ee5 thu\u1ed9c; vi\u1ec7c tham gia c\u00e1c kh\u00f3a h\u1ecdc sau ph\u1ee5 thu\u1ed9c v\u00e0o vi\u1ec7c tham gia c\u00e1c kh\u00f3a h\u1ecdc ti\u00ean quy\u1ebft c\u1ee7a n\u00f3.</li> <li>T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u1ed3 th\u1ecb v\u1edbi m\u1ed7i \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t kh\u00f3a h\u1ecdc v\u00e0 m\u1ed7i c\u1ea1nh c\u00f3 h\u01b0\u1edbng t\u1eeb \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn \u0111\u1ec9nh \\(v\\) khi v\u00e0 ch\u1ec9 khi kh\u00f3a h\u1ecdc t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(u\\) l\u00e0 \u0111i\u1ec1u ki\u1ec7n ti\u00ean quy\u1ebft cho kh\u00f3a h\u1ecdc t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111\u1ec9nh \\(v\\). Vi\u1ec7c s\u1eafp x\u1ebfp th\u1ee9 t\u1ef1 c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb n\u00e0y s\u1ebd cung c\u1ea5p m\u1ed9t th\u1ee9 t\u1ef1 kh\u1ea3 thi m\u00e0 c\u00e1c kh\u00f3a h\u1ecdc c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n.</li> <li>T\u1ea5t nhi\u00ean, n\u00f3 kh\u00f4ng th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 nghi\u00eam tr\u1ecdng h\u01a1n v\u1ec1 xung \u0111\u1ed9t l\u1ecbch tr\u00ecnh.</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/topological-sort/#ieu-kien-ton-tai-thu-tu-to-po","title":"\u0110i\u1ec1u ki\u1ec7n t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 T\u00f4-p\u00f4","text":"<ul> <li>D\u1ec5 nh\u1eadn th\u1ea5y r\u1eb1ng, m\u1ed9t \u0111\u1ed3 th\u1ecb t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 th\u00ec \u0111\u1ed3 th\u1ecb \u0111\u00f3 ph\u1ea3i l\u00e0 \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng v\u00e0 kh\u00f4ng c\u00f3 chu tr\u00ecnh (Directed Acyclic Graph - DAG). V\u00ec n\u1ebfu \u0111\u1ed3 th\u1ecb c\u00f3 ch\u1ee9a m\u1ed9t chu tr\u00ecnh, \\(v_1 v_2 ... v_n v_1\\) th\u00ec \\(v_2\\) ph\u1ea3i \u0111\u1ee9ng sau \\(v_1\\) theo th\u1ee9 t\u1ef1 T\u00f4-p\u00f4, \\(v_3\\) ph\u1ea3i \u0111\u1ee9ng sau \\(v_2\\), v.v...; nh\u01b0ng sau \u0111\u00f3 \\(v_1\\) ph\u1ea3i \u0111\u1ee9ng sau \\(v_1\\), d\u1eabn \u0111\u1ebfn k\u1ebft lu\u1eadn v\u00f4 l\u00fd khi \\(v_1\\) ph\u1ea3i \u0111\u1ee9ng sau ch\u00ednh n\u00f3 trong danh s\u00e1ch.</li> <li>V\u1eady c\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0 li\u1ec7u \u0111i\u1ec1u ki\u1ec7n n\u00e0y c\u00f3 \u0111\u1ee7 hay kh\u00f4ng? C\u00f3 \u0111\u00fang l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 khi v\u00e0 ch\u1ec9 khi \u0111\u1ed3 th\u1ecb \u0111\u00f3 l\u00e0 m\u1ed9t \\(DAG\\) ? C\u00e2u tr\u1ea3 l\u1eddi l\u00e0 \u0111\u00fang.</li> <li>\u0110\u1ecbnh l\u00fd : M\u1ed9t \u0111\u1ed3 th\u1ecb t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 khi v\u00e0 ch\u1ec9 khi \u0111\u1ed3 th\u1ecb \u0111\u00f3 l\u00e0 DAG. \u0110\u1ed3ng ngh\u0129a, m\u1ecdi DAG \u0111\u1ec1u lu\u00f4n t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t th\u1ee9 t\u1ef1 T\u00f4-p\u00f4, v\u00e0 c\u00f3 thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ecm th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 trong th\u1eddi gian tuy\u1ebfn t\u00ednh.</li> <li>Ch\u1ee9ng minh :<ul> <li>R\u00f5 r\u00e0ng, m\u1ed9t \\(DAG\\) ch\u1ec9 g\u1ed3m \\(1\\) \u0111\u1ec9nh duy nh\u1ea5t lu\u00f4n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 T\u00f4-p\u00f4. Khi \u0111\u00f3, danh s\u00e1ch T\u00f4-p\u00f4 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y ch\u1ec9 bao g\u1ed3m ch\u00ednh \u0111\u1ec9nh \u0111\u00f3. </li> <li>Gi\u1ea3 s\u1eed r\u1eb1ng b\u1ea5t k\u1ef3 \\(DAG\\) n\u00e0o c\u00f3 \\(n\\) \u0111\u1ec9nh \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 T\u00f4-p\u00f4. B\u00e2y gi\u1edd h\u00e3y xem x\u00e9t c\u00e1c \\(DAG\\) c\u00f3 \\(n+1\\) \u0111\u1ec9nh. Nh\u1edb l\u1ea1i r\u1eb1ng m\u1ecdi \\(DAG\\) \u0111\u1ec1u c\u00f3 \u00edt nh\u1ea5t m\u1ed9t \u0111\u1ec9nh ngu\u1ed3n (\u0111\u1ec9nh kh\u00f4ng c\u00f3 cung v\u00e0o). H\u00e3y \u0111\u1ec3 \u0111\u1ec9nh ngu\u1ed3n n\u00e0y l\u00e0m gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean trong danh s\u00e1ch T\u00f4-p\u00f4, r\u1ed3i lo\u1ea1i b\u1ecf \u0111\u1ec9nh n\u00e0y c\u00f9ng c\u00e1ch c\u1ea1nh k\u1ec1 v\u1edbi n\u00f3 ra kh\u1ecfi \u0111\u1ed3 th\u1ecb. Khi \u0111\u00f3, ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c \u0111\u1ed3 th\u1ecb m\u1edbi g\u1ed3m \\(n\\) \u0111\u1ec9nh l\u00e0 \u0111\u1ed3 th\u1ecb con c\u1ee7a \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u. R\u00f5 r\u00e0ng, c\u00e1c chu tr\u00ecnh kh\u00f4ng th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng c\u00e1ch lo\u1ea1i b\u1ecf c\u00e1c c\u1ea1nh v\u00e0 \u0111\u1ec9nh. B\u1eb1ng gi\u1ea3 thi\u1ebft ban \u0111\u1ea7u, ta c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp \u0111\u1ed3 th\u1ecb con n\u00e0y theo th\u1ee9 t\u1ef1 T\u00f4-p\u00f4. Sau \u0111\u00f3, ta n\u1ed1i th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb con v\u00e0o cu\u1ed1i danh s\u00e1ch hi\u1ec7n t\u1ea1i \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c danh s\u00e1ch th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb \\(n+1\\) \u0111\u1ec9nh v\u1edbi \u0111\u1ec9nh ngu\u1ed3n l\u00e0 gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean trong danh s\u00e1ch.</li> <li>V\u00ed d\u1ee5 minh h\u1ecda: \u0110\u1ec3 x\u00e1c \u0111\u1ecbnh th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \\(DAG\\) g\u1ed3m \\(7\\) \u0111\u1ec9nh, ta th\u00eam \u0111\u1ec9nh ngu\u1ed3n \\(0\\) v\u00e0o trong danh s\u00e1ch T\u00f4-p\u00f4 r\u1ed3i n\u1ed1i th\u00eam th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb con \\(6\\) \u0111\u1ec9nh.  </li> <li>B\u00e2y gi\u1edd, v\u1edbi hai \u0111\u1ec9nh b\u1ea5t k\u1ef3 \\(u\\) v\u00e0 \\(v\\) trong danh s\u00e1ch T\u00f4-p\u00f4, gi\u1ea3 s\u1eed \\(u\\) \u0111\u1ee9ng tr\u01b0\u1edbc \\(v\\):<ul> <li>N\u1ebfu \\(u\\) l\u00e0 gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean trong danh s\u00e1ch (\u0111\u1ec9nh ngu\u1ed3n), trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, r\u00f5 r\u00e0ng l\u00e0 kh\u00f4ng th\u1ec3 t\u1ed3n t\u1ea1i c\u1ea1nh n\u1ed1i t\u1eeb \\(v \\rightarrow u\\). </li> <li>N\u1ebfu c\u1ea3 hai \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) \u0111\u1ec1u kh\u00f4ng ph\u1ea3i l\u00e0 gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean trong danh s\u00e1ch, d\u00f9 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0o th\u00ec ch\u00fang \u0111\u1ec1u \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp \u0111\u00fang v\u00ec ch\u00fang thu\u1ed9c ph\u1ea7n \u0111\u1ed3 th\u1ecb con \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 T\u00f4-p\u00f4. </li> </ul> </li> <li>Do \u0111\u00f3, danh s\u00e1ch \\(n+1\\) \u0111\u1ec9nh m\u1edbi n\u00e0y l\u00e0 m\u1ed9t th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \\(DAG\\) g\u1ed3m \\(n+1\\) \u0111\u1ec9nh.</li> </ul> </li> <li>T\u00ednh ch\u1ea5t<ul> <li>Th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i l\u00e0 duy nh\u1ea5t. C\u00f3 th\u1ec3 c\u00f3 m\u1ed9t s\u1ed1 th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 kh\u00e1c nhau trong m\u1ed9t \u0111\u1ed3 th\u1ecb. </li> <li>Tuy nhi\u00ean, th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 s\u1ebd l\u00e0 duy nh\u1ea5t khi \\(DAG\\) c\u00f3 \u0111\u01b0\u1eddng \u0111i \\(Hamilton\\).</li> </ul> </li> </ul>"},{"location":"algo/graph-theory/topological-sort/#bai-toan-1-sap-xep-topo","title":"B\u00e0i to\u00e1n 1 - S\u1eafp x\u1ebfp TOPO","text":"<p>TOPOSORT \u2013 S\u1eafp x\u1ebfp TOPO</p>"},{"location":"algo/graph-theory/topological-sort/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng chu tr\u00ecnh (Directed Acyclic Graph - DAG) \\(G(V, E)\\). H\u00e3y \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh c\u1ee7a \\(G\\) sao cho ch\u1ec9 c\u00f3 cung n\u1ed1i t\u1eeb \u0111\u1ec9nh c\u00f3 ch\u1ec9 s\u1ed1 nh\u1ecf \u0111\u1ebfn \u0111\u1ec9nh c\u00f3 ch\u1ec9 s\u1ed1 l\u1edbn h\u01a1n.</p> <p>Input</p> <ul> <li>D\u00f2ng \u0111\u1ea7u ch\u1ee9a hai s\u1ed1 nguy\u00ean \\(n\\) v\u00e0 \\(m\\) l\u00e0 s\u1ed1 \u0111\u1ec9nh v\u00e0 s\u1ed1 cung c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G\\);</li> <li>\\(m\\) d\u00f2ng ti\u1ebfp theo, m\u1ed7i d\u00f2ng ch\u1ee9a m\u1ed9t c\u1eb7p s\u1ed1 \\(u, v\\) cho bi\u1ebft m\u1ed9t cung n\u1ed1i t\u1eeb \\(u\\) t\u1edbi \\(v\\) trong \\(G\\).</li> </ul> <p>Output</p> <ul> <li>Ghi ra \\(n\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng, s\u1ed1 th\u1ee9 \\(i\\) l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a \u0111\u1ec9nh th\u1ee9 \\(i\\) sau khi \u0111\u00e1nh s\u1ed1 l\u1ea1i. Hai s\u1ed1 tr\u00ean c\u00f9ng m\u1ed9t d\u00f2ng \u0111\u01b0\u1ee3c ghi c\u00e1ch nhau m\u1ed9t d\u1ea5u c\u00e1ch.</li> </ul> <p>Constraints</p> <ul> <li>\\(1 \\le n \\le 100;\\) \\(0 \\le m \\le \\frac{n(n-1)}{2}\\).</li> </ul> <p>Example</p> <p>Input <pre><code>7 7\n1 2\n1 4\n2 3\n4 5\n6 5\n5 3\n7 4\n</code></pre> Output <pre><code>1 2 7 5 6 3 4\n</code></pre></p> <p>Note </p>"},{"location":"algo/graph-theory/topological-sort/#thuat-toan-1","title":"Thu\u1eadt to\u00e1n 1","text":"<ul> <li>T\u1eeb ph\u1ea7n ch\u1ee9ng minh c\u1ee7a \u0111\u1ecbnh l\u00fd tr\u00ean (trong m\u1ee5c \u0110i\u1ec1u ki\u1ec7n t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 T\u00f4-p\u00f4), ta c\u00f3 thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ecm ra m\u1ed9t th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 nh\u01b0 sau:<ol> <li>B\u1eaft \u0111\u1ea7u v\u1edbi m\u1ed9t danh s\u00e1ch T\u00f4-p\u00f4 tr\u1ed1ng.</li> <li>T\u00ecm \u0111\u1ec9nh ngu\u1ed3n c\u1ee7a \\(DAG\\). Th\u00eam \u0111\u1ec9nh n\u00e0y v\u00e0o cu\u1ed1i danh s\u00e1ch T\u00f4-p\u00f4.</li> <li>Lo\u1ea1i b\u1ecf \u0111\u1ec9nh n\u00e0y v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh k\u1ec1 v\u1edbi n\u00f3 ra kh\u1ecfi \\(DAG\\).</li> <li>N\u1ebfu s\u1ed1 \u0111\u1ec9nh c\u1ee7a \\(DAG\\) l\u1edbn h\u01a1n \\(0\\), h\u00e3y quay l\u1ea1i b\u01b0\u1edbc \\(2\\).</li> </ol> </li> <li>Sau khi k\u1ebft th\u00fac, danh s\u00e1ch s\u1ebd ch\u1ee9a m\u1ed9t th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \\(DAG\\).</li> <li>\u0110\u1ec3 th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n n\u00e0y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3, ta s\u1ebd kh\u00f4ng th\u1ef1c s\u1ef1 lo\u1ea1i b\u1ecf c\u00e1c \u0111\u1ec9nh kh\u1ecfi \u0111\u1ed3 th\u1ecb trong b\u01b0\u1edbc \\(3\\), v\u00ec \u0111\u00e2y l\u00e0 m\u1ed9t qu\u00e1 tr\u00ecnh ph\u1ee9c t\u1ea1p n\u1ebfu \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng ma tr\u1eadn k\u1ec1 ho\u1eb7c danh s\u00e1ch k\u1ec1.</li> <li>Ta c\u0169ng s\u1ebd kh\u00f4ng duy\u1ec7t qua to\u00e0n b\u1ed9 \u0111\u1ed3 th\u1ecb \u1edf m\u1ed7i b\u01b0\u1edbc \\(2\\) \u0111\u1ec3 t\u00ecm \u0111\u1ec9nh ngu\u1ed3n. \u0110i\u1ec1u n\u00e0y c\u0169ng t\u1ed1n k\u00e9m v\u1ec1 m\u1eb7t th\u1eddi gian v\u00e0 t\u00ednh to\u00e1n. </li> <li>Thay v\u00e0o \u0111\u00f3, ta c\u00f3 nh\u1eefng nh\u1eadn x\u00e9t sau:<ul> <li>M\u1ed9t \u0111\u1ec9nh l\u00e0 \u0111\u1ec9nh ngu\u1ed3n khi v\u00e0 ch\u1ec9 khi s\u1ed1 l\u01b0\u1ee3ng cung v\u00e0o c\u1ee7a n\u00f3 b\u1eb1ng \\(0\\).</li> <li>N\u1ebfu m\u1ed9t \u0111\u1ec9nh kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ec9nh ngu\u1ed3n, n\u00f3 s\u1ebd tr\u1edf th\u00e0nh \u0111\u1ec9nh ngu\u1ed3n sau khi t\u1ea5t c\u1ea3 c\u00e1c cung v\u00e0o c\u1ee7a n\u00f3 \u0111\u00e3 b\u1ecb x\u00f3a. M\u1ed9t cung v\u00e0o c\u1ee7a n\u00f3 ch\u1ec9 b\u1ecb x\u00f3a khi \u0111\u1ec9nh c\u00f2n l\u1ea1i c\u1ee7a cung \u0111\u00f3 b\u1ecb x\u00f3a.</li> <li>Gi\u1ea3 s\u1eed ta bi\u1ebft v\u1ecb tr\u00ed c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh ngu\u1ed3n trong \\(DAG\\) v\u00e0 ta th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc \\(2\\) v\u00e0 \\(3\\) m\u1ed9t l\u1ea7n. Sau \u0111\u00f3, nh\u1eefng \u0111\u1ec9nh duy nh\u1ea5t c\u00f3 th\u1ec3 tr\u1edf th\u00e0nh \u0111\u1ec9nh ngu\u1ed3n l\u00e0 nh\u1eefng \u0111\u1ec9nh c\u00f3 cung v\u00e0o n\u1ed1i v\u1edbi \u0111\u1ec9nh v\u1eeba b\u1ecb x\u00f3a.</li> </ul> </li> <li>Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb, ta s\u1ebd \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb theo th\u1ee9 t\u1ef1.</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 110</code> . - M\u1ea3ng <code>ans[]</code> - M\u1ea3ng \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh. - M\u1ea3ng <code>indegree[]</code> - L\u01b0u s\u1ed1 l\u01b0\u1ee3ng cung v\u00e0o c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Vector <code>topo</code> - Danh s\u00e1ch th\u1ee9 t\u1ef1 T\u00f4-p\u00f4. - Queue <code>listSource</code> - Danh s\u00e1ch c\u00e1c \u0111\u1ec9nh kh\u00f4ng c\u00f3 cung v\u00e0o.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 110;\n\nint n, m;\nint indegree[maxN], ans[maxN];\nvector &lt;int&gt; g[maxN], topo;\nqueue &lt;int&gt; listSource;\n\nmain() {\n    cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n        indegree[v]++;\n    }\n\n    for (int u = 1; u &lt;= n; ++u)\n        if (!indegree[u]) listSource.push(u);\n\n    while (!listSource.empty()) {\n        int u = listSource.front();\n        listSource.pop();\n        topo.push_back(u);\n        for (auto v : g[u]) {\n            indegree[v]--;\n            if (!indegree[v]) listSource.push(v);\n        }\n    }\n\n    if (topo.size() &lt; n) {\n        cout &lt;&lt; \"Error: graph contains a cycle\";\n        return 0;\n    }\n\n    /* Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb, ta s\u1eed d\u1ee5ng\n       m\u1ea3ng ans \u0111\u1ec3 \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh */\n    int cnt = 0;\n    for (auto x : topo) ans[x] = ++cnt;\n\n    for (int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; ' ';\n}\n</code></pre> <p>M\u00f4 t\u1ea3 qu\u00e1 tr\u00ecnh - Th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 kh\u00f4ng ph\u1ea3i l\u00e0 duy nh\u1ea5t. Qu\u00e1 tr\u00ecnh sau ch\u1ec9 m\u00f4 t\u1ea3 l\u1ea1i qu\u00e1 tr\u00ecnh x\u00e1c \u0111\u1ecbnh \\(1\\) th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 theo nh\u01b0 code m\u1eabu.</p> <p>/uploads/topological_sort_gif1.gif</p> <ul> <li>Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb l\u00e0 <code>topo = {1; 6; 7; 2; 4; 5; 3}</code>. Ta \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh. Khi \u0111\u00f3 ta s\u1ebd c\u00f3 m\u1ea3ng <code>ans = {1; 4; 7; 5; 6; 2; 3}</code>.</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ec3 th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n n\u00e0y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3, ta c\u1ea7n ph\u1ea3i c\u00f3 kh\u1ea3 n\u0103ng duy\u1ec7t qua c\u00e1c \u0111\u1ec9nh k\u1ec1 c\u1ee7a m\u1ed9t \u0111\u1ec9nh m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3. \u0110i\u1ec1u n\u00e0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n t\u1ed1t nh\u1ea5t b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng danh s\u00e1ch k\u1ec1 (vector <code>g[]</code>). </li> <li>Ngo\u00e0i ra, <code>listSource</code> n\u00ean l\u00e0 m\u1ed9t ng\u0103n x\u1ebfp (stack) ho\u1eb7c m\u1ed9t h\u00e0ng \u0111\u1ee3i (queue) \u0111\u1ec3 vi\u1ec7c th\u00eam v\u00e0 lo\u1ea1i b\u1ecf c\u00e1c ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong th\u1eddi gian kh\u00f4ng \u0111\u1ed5i. </li> <li>Thu\u1eadt to\u00e1n s\u1ebd lu\u00f4n t\u00ecm ra m\u1ed9t th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 n\u1ebfu n\u00f3 t\u1ed3n t\u1ea1i. C\u00f2n n\u1ebfu n\u00f3 kh\u00f4ng t\u1ed3n t\u1ea1i (ngh\u0129a l\u00e0 \u0111\u1ed3 th\u1ecb ban \u0111\u1ea7u kh\u00f4ng ph\u1ea3i l\u00e0 \\(DAG\\) ) th\u00ec danh s\u00e1ch <code>topo</code> s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111i\u1ec1n \u0111\u1ea7y \u0111\u1ee7 v\u00e0 th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c in ra.</li> <li>Th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 s\u1ebd l\u00e0 duy nh\u1ea5t khi v\u00e0 ch\u1ec9 khi <code>listSource</code> ch\u1ee9a ch\u00ednh x\u00e1c m\u1ed9t \u0111\u1ec9nh \u1edf \u0111\u1ea7u m\u1ed7i l\u1ea7n l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p while.</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p - \u1ede v\u00f2ng l\u1eb7p while \u0111\u1ec3 duy\u1ec7t c\u00e1c \u0111\u1ec9nh trong <code>listSource</code>, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\) v\u00ec m\u1ed7i \u0111\u1ec9nh ch\u1ec9 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o nhi\u1ec1u nh\u1ea5t \\(1\\) l\u1ea7n (\u1edf ban \u0111\u1ea7u ho\u1eb7c ngay sau khi c\u1ea1nh v\u00e0o cu\u1ed1i c\u00f9ng c\u1ee7a n\u00f3 b\u1ecb lo\u1ea1i b\u1ecf). V\u00e0 ta s\u1ebd m\u1ea5t th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m)\\) \u0111\u1ec3 duy\u1ec7t c\u00e1c c\u1ea1nh v\u00ec m\u1ed7i c\u1ea1nh ch\u1ec9 \u0111\u01b0\u1ee3c ki\u1ec3m tra nhi\u1ec1u nh\u1ea5t \\(1\\) l\u1ea7n trong v\u00f2ng l\u1eb7p while (khi \u0111\u1ec9nh n\u1ed1i v\u1edbi n\u00f3 \u0111\u01b0\u1ee3c l\u1ea5y ra).  - Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(n+m)\\).</p>"},{"location":"algo/graph-theory/topological-sort/#thuat-toan-2","title":"Thu\u1eadt to\u00e1n 2","text":"<ul> <li>C\u00f3 m\u1ed9t thu\u1eadt to\u00e1n kh\u00e1c cho s\u1eafp x\u1ebfp T\u00f4-p\u00f4 d\u1ef1a tr\u00ean t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (Depth-First Search - DFS).</li> <li>\u0110\u1ed1i v\u1edbi thu\u1eadt to\u00e1n 2, qu\u00e1 tr\u00ecnh t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u s\u1ebd tr\u1ea3 ra danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o th\u1ee9 t\u1ef1 T\u00f4-p\u00f4. \u0110\u01a1n gi\u1ea3n h\u01a1n, n\u00f3 ch\u00ednh l\u00e0 danh s\u00e1ch T\u00f4-p\u00f4 b\u1ecb \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ea1i.</li> <li>\u0110i\u1ec1u n\u00e0y t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c n\u1ebfu t\u1ed3n t\u1ea1i cung \\(u \\rightarrow v\\) th\u00ec \\(u\\) c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 cao h\u01a1n \\(v\\) trong danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o T\u00f4-p\u00f4.</li> <li>V\u00ed d\u1ee5 minh h\u1ecda: </li> <li>Ch\u1ee9ng minh: H\u00e3y xem x\u00e9t c\u00e2y DFS c\u1ee7a \u0111\u1ed3 th\u1ecb (t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 c\u00e2y \\(DFS\\) t\u1ea1i \u0111\u00e2y):<ul> <li>N\u1ebfu \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) trong c\u00e2y \\(DFS\\), th\u00ec qu\u00e1 tr\u00ecnh duy\u1ec7t xong c\u00e2y con g\u1ed1c \\(v\\) s\u1ebd k\u1ebft th\u00fac s\u1edbm h\u01a1n qu\u00e1 tr\u00ecnh duy\u1ec7t xong c\u00e2y con g\u1ed1c \\(u\\). Do \u0111\u00f3, \\(u\\) s\u1ebd c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 cao h\u01a1n \\(v\\) trong danh s\u00e1ch.</li> <li>N\u1ebfu \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) trong c\u00e2y \\(DFS\\) v\u00e0 t\u1ed3n t\u1ea1i cung n\u1ed1i t\u1eeb \\(1\\) \u0111\u1ec9nh thu\u1ed9c c\u00e2y con g\u1ed1c \\(v\\) \u0111\u1ebfn \u0111\u1ec9nh \\(u\\) th\u00ec \u0111\u1ed3 th\u1ecb c\u00f3 chu tr\u00ecnh (kh\u00f4ng ph\u1ea3i l\u00e0 DAG) n\u00ean s\u1ebd kh\u00f4ng t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</li> <li>N\u1ebfu \\(u\\) kh\u00f4ng ph\u1ea3i l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\) v\u00e0 \\(v\\) c\u0169ng kh\u00f4ng ph\u1ea3i l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) trong c\u00e2y \\(DFS\\) th\u00ec khi \u0111\u00f3, \\(2\\) \u0111\u1ec9nh \\(u\\) v\u00e0 \\(v\\) s\u1ebd n\u1eb1m tr\u00ean \\(2\\) nh\u00e1nh kh\u00e1c nhau c\u1ee7a c\u00e2y \\(DFS\\). Do \u0111\u00f3 cung n\u1ed1i t\u1eeb nh\u00e1nh ch\u1ee9a \u0111\u1ec9nh \\(u\\) \u0111\u1ebfn nh\u00e1nh ch\u1ee9a \u0111\u1ec9nh \\(v\\) l\u00e0 cung ch\u00e9o v\u00e0 \u0111\u1ec9nh \\(u\\) s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t sau \\(v\\) n\u00ean s\u1ebd c\u00f3 s\u1ed1 th\u1ee9 t\u1ef1 cao h\u01a1n \\(v\\) trong danh s\u00e1ch.<ul> <li>V\u00ed d\u1ee5 minh h\u1ecda: B\u1eaft \u0111\u1ea7u duy\u1ec7t \\(DFS\\) t\u1eeb \u0111\u1ec9nh \\(S\\). C\u00e1c \"c\u1ea1nh n\u00e9t li\u1ec1n\" l\u00e0 cung c\u1ee7a c\u00e2y \\(DFS\\). C\u00e1c \"c\u1ea1nh n\u00e9t \u0111\u1ee9t\" kh\u00f4ng ph\u1ea3i l\u00e0 cung c\u1ee7a c\u00e2y \\(DFS\\). V\u1edbi cung ch\u00e9o \\(u \\rightarrow v\\), \u0111\u1ec9nh \\(v\\) ch\u1eafc ch\u1eafn s\u1ebd \u0111\u01b0\u1ee3c duy\u1ec7t tr\u01b0\u1edbc \\(u\\). V\u00ec n\u1ebfu \\(u\\) \u0111\u01b0\u1ee3c duy\u1ec7t tr\u01b0\u1edbc \\(v\\) th\u00ec \u0111\u1ec9nh \\(u\\) s\u1ebd l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \u0111\u1ec9nh \\(v\\) v\u00e0 cung \\(u \\rightarrow v\\) s\u1ebd kh\u00f4ng c\u00f2n l\u00e0 cung ch\u00e9o n\u1eefa, khi \u0111\u00f3 ta x\u00e9t gi\u1ed1ng nh\u01b0 \u1edf tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u ti\u00ean. </li> </ul> </li> </ul> </li> <li>T\u1eeb nh\u1eefng nh\u1eadn x\u00e9t tr\u00ean, ta c\u00f3 thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ecm ra m\u1ed9t th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 nh\u01b0 sau:<ul> <li>Xu\u1ea5t ph\u00e1t t\u1eeb m\u1ed9t \u0111i\u1ec3m ch\u01b0a \u0111\u01b0\u1ee3c duy\u1ec7t, ta b\u1eaft \u0111\u1ea7u duy\u1ec7t \\(DFS\\) tr\u00ean \u0111\u1ed3 th\u1ecb xu\u1ea5t ph\u00e1t t\u1eeb \u0111i\u1ec3m \u0111\u00f3.</li> <li>D\u00f9ng m\u1ed9t m\u1ea3ng \u0111\u1ec3 l\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed7i \u0111\u1ec9nh. C\u00f3 \\(3\\) tr\u1ea1ng th\u00e1i:<ul> <li>Tr\u1ea1ng th\u00e1i 0 : \u0110\u1ec9nh ch\u01b0a \u0111\u01b0\u1ee3c duy\u1ec7t (ch\u01b0a t\u1eebng \u0111\u01b0\u1ee3c g\u1ecdi h\u00e0m \\(DFS\\)).</li> <li>Tr\u1ea1ng th\u00e1i 1 : \u0110\u1ec9nh v\u1eabn \u0111ang duy\u1ec7t (h\u00e0m \\(DFS\\) v\u1edbi \u0111\u1ec9nh n\u00e0y ch\u01b0a k\u1ebft th\u00fac).</li> <li>Tr\u1ea1ng th\u00e1i 2 : \u0110\u1ec9nh \u0111\u00e3 duy\u1ec7t xong (h\u00e0m \\(DFS\\) v\u1edbi \u0111\u1ec9nh n\u00e0y \u0111\u00e3 k\u1ebft th\u00fac).</li> </ul> </li> <li>Hi\u1ec3n nhi\u00ean, khi \u0111ang duy\u1ec7t m\u00e0 ta g\u1eb7p ph\u1ea3i m\u1ed9t \u0111\u1ec9nh \u1edf tr\u1ea1ng th\u00e1i 1 th\u00ec \u0111i\u1ec1u \u0111\u00f3 ch\u1ee9ng t\u1ecf \u0111\u1ed3 th\u1ecb \u0111ang x\u00e9t c\u00f3 ch\u1ee9a chu tr\u00ecnh, v\u00e0 kh\u00f4ng th\u1ec3 s\u1eafp x\u1ebfp T\u00f4-p\u00f4 \u0111\u01b0\u1ee3c.</li> <li>Sau khi k\u1ebft th\u00fac duy\u1ec7t \\(DFS\\) tr\u00ean \u0111\u1ed3 th\u1ecb, th\u1ee9 t\u1ef1 ho\u00e0n t\u1ea5t duy\u1ec7t c\u1ee7a m\u1ed7i \u0111\u1ec9nh ch\u00ednh l\u00e0 danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</li> <li>\u0110\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4, \u0111\u01a1n gi\u1ea3n ta ch\u1ec9 c\u1ea7n \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ea1i danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</li> </ul> </li> <li>Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb, ta s\u1ebd \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb theo th\u1ee9 t\u1ef1.</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 110</code> . - M\u1ea3ng <code>ans[]</code> - M\u1ea3ng \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh. - M\u1ea3ng <code>visit[]</code> - M\u1ea3ng l\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Stack <code>topo</code> - Danh s\u00e1ch th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 110;\n\nint n, m;\nint visit[maxN], ans[maxN];\nvector &lt;int&gt; g[maxN];\nstack &lt;int&gt; topo;\n\nvoid dfs(int u) {\n    visit[u] = 1;\n    for (auto v : g[u]) {\n        if (visit[v] == 1) {\n            cout &lt;&lt; \"Error: graph contains a cycle\";\n            exit(0);\n        }\n        if (!visit[v]) dfs(v);\n    }\n    topo.push(u);\n    visit[u] = 2;\n}\n\nmain() {\n    cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n    }\n    for (int i = 1; i &lt;= n; ++i)\n        if (!visit[i]) dfs(i);\n\n    /* Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb, ta s\u1eed d\u1ee5ng\n       m\u1ea3ng ans \u0111\u1ec3 \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh */\n    int cnt = 0;\n    while (!topo.empty()) {\n        ans[topo.top()] = ++cnt; \n        topo.pop();\n    }\n\n    for (int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; ' ';\n}\n</code></pre> <p>M\u00f4 t\u1ea3 qu\u00e1 tr\u00ecnh - Th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 kh\u00f4ng ph\u1ea3i l\u00e0 duy nh\u1ea5t. Qu\u00e1 tr\u00ecnh sau ch\u1ec9 m\u00f4 t\u1ea3 l\u1ea1i qu\u00e1 tr\u00ecnh x\u00e1c \u0111\u1ecbnh \\(1\\) th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 theo nh\u01b0 code m\u1eabu.</p> <p>/uploads/topological_sort_gif2.gif</p> <ul> <li>Sau khi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u1ee7a \u0111\u1ed3 th\u1ecb l\u00e0 <code>topo = {7; 6; 1; 4; 5; 2; 3}</code>. Ta \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh. Khi \u0111\u00f3 ta s\u1ebd c\u00f3 m\u1ea3ng <code>ans = {3; 6; 7; 4; 5; 2; 1}</code>.</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#anh-gia_1","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>Thu\u1eadt to\u00e1n 2 \u0111\u01a1n gi\u1ea3n v\u00e0 d\u1ec5 c\u00e0i \u0111\u1eb7t so v\u1edbi h\u01a1n thu\u1eadt to\u00e1n 1.</li> <li>Ta s\u1eed d\u1ee5ng ng\u0103n x\u1ebfp (stack) \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ea1i th\u1ee9 t\u1ef1 ho\u00e0n t\u1ea5t duy\u1ec7t c\u1ee7a m\u1ed7i \u0111\u1ec9nh. N\u00f3i c\u00e1ch kh\u00e1c l\u00e0 ta \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ea1i danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</li> <li>V\u1edbi ph\u01b0\u01a1ng ph\u00e1p s\u1eafp x\u1ebfp T\u00f4-p\u00f4 b\u1eb1ng \\(DFS\\), n\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 \\(DAG\\) th\u00ec ta v\u1eabn c\u00f3 th\u1ec3 t\u00ecm ra m\u1ed9t th\u1ee9 t\u1ef1, nh\u01b0ng ta l\u1ea1i c\u00f3 th\u1ebf d\u00f9ng \\(DFS\\) \u0111\u1ec3 ki\u1ec3m tra lu\u00f4n xem \u0111\u1ed3 th\u1ecb c\u00f3 l\u00e0 \\(DAG\\) hay kh\u00f4ng. </li> <li>N\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 \\(DAG\\) th\u00ec th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c in ra.</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p - \u1ede h\u00e0m \\(DFS\\), ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\) v\u00ec m\u1ed7i \u0111\u1ec9nh ch\u1ec9 \u0111\u01b0\u1ee3c duy\u1ec7t nhi\u1ec1u nh\u1ea5t \\(1\\) l\u1ea7n v\u00e0 ta s\u1ebd m\u1ea5t th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m)\\) \u0111\u1ec3 duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb. - Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(n + m)\\).</p>"},{"location":"algo/graph-theory/topological-sort/#bai-toan-2-uong-i-dai-nhat","title":"B\u00e0i to\u00e1n 2 - \u0110\u01b0\u1eddng \u0111i d\u00e0i nh\u1ea5t","text":"<p>Longestpath - \u0110\u01b0\u1eddng \u0111i d\u00e0i nh\u1ea5t</p>"},{"location":"algo/graph-theory/topological-sort/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng g\u1ed3m \\(N\\) \u0111\u1ec9nh v\u00e0 \\(M\\) c\u1ea1nh. C\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 \\(1,2,...,N\\) v\u00e0 v\u1edbi m\u1ed7i \\(i\\) \\((1 \\le i \\le M)\\), c\u1ea1nh c\u00f3 h\u01b0\u1edbng th\u1ee9 \\(i\\) s\u1ebd \u0111i t\u1eeb \u0111\u1ec9nh \\(x_i\\) \u0111\u1ebfn \u0111\u1ec9nh \\(y_i\\). \\(G\\) kh\u00f4ng ch\u1ee9a b\u1ea5t k\u00ec chu tr\u00ecnh c\u00f3 h\u01b0\u1edbng n\u00e0o !</p> <p>T\u00ecm \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a \u0111\u01b0\u1eddng \u0111i c\u00f3 h\u01b0\u1edbng trong \\(G\\). \u1ede \u0111\u00e2y, \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111\u01b0\u1eddng \u0111i c\u00f3 h\u01b0\u1edbng ch\u00ednh l\u00e0 s\u1ed1 c\u1ea1nh trong n\u00f3.</p> <p>Input</p> <ul> <li>D\u00f2ng th\u1ee9 nh\u1ea5t ch\u1ee9a \\(2\\) s\u1ed1 nguy\u00ean \\(N,M\\).</li> <li>\\(M\\) d\u00f2ng ti\u1ebfp theo m\u1ed7i d\u00f2ng ch\u1ee9a hai s\u1ed1 nguy\u00ean \\(x_i,y_i\\) \\((1 \\le x_i, y_i \\le N)\\) (\u1ede \u0111\u00e2y c\u00e1c c\u1eb7p \\((x_i,y_i)\\) ph\u00e2n bi\u1ec7t nhau v\u00e0 \u0111\u1ec1 \u0111\u1ea3m b\u1ea3o r\u1eb1ng, \\(G\\) kh\u00f4ng ch\u1ee9a b\u1ea5t k\u00ec chu tr\u00ecnh c\u00f3 h\u01b0\u1edbng n\u00e0o).</li> </ul> <p>Output</p> <ul> <li>In ra \\(1\\) s\u1ed1 nguy\u00ean duy nh\u1ea5t l\u00e0 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u1ee7a \u0111\u01b0\u1eddng \u0111i c\u00f3 h\u01b0\u1edbng trong \\(G\\).</li> </ul> <p>Constraints</p> <ul> <li>\\(2 \\le N \\le 10^5;1 \\le M \\le 10^5\\).</li> </ul> <p>Example</p> <p>Input <pre><code>3 2\n1 2\n2 3\n</code></pre> Output <pre><code>2\n</code></pre></p> <p>Note - Con \u0111\u01b0\u1eddng c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t l\u00e0 : \\(1 \\rightarrow 2 \\rightarrow 3\\).</p>"},{"location":"algo/graph-theory/topological-sort/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<ul> <li>S\u1eafp x\u1ebfp T\u00f4-p\u00f4 c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng quan tr\u1ecdng, \u0111\u1eb7c bi\u1ec7t l\u00e0 \u00e1p d\u1ee5ng quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean m\u1ea3ng th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</li> <li>G\u1ecdi \\(dp[i]\\) l\u00e0 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i d\u00e0i nh\u1ea5t b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh c\u00f3 ch\u1ec9 s\u1ed1 \\(i\\). Ta c\u00f3 c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean danh s\u00e1ch T\u00f4-p\u00f4 nh\u01b0 sau:<ul> <li>\\(dp[topo[i]]=max(dp[topo[j]] + 1)\\) (V\u1edbi \\(i = n \\rightarrow 1\\) v\u00e0 t\u1ed3n t\u1ea1i cung t\u1eeb \\(topo[i] \\rightarrow topo[j]\\)). </li> </ul> </li> <li>Theo \u0111\u1ecbnh ngh\u0129a c\u1ee7a th\u1ee9 t\u1ef1 T\u00f4-p\u00f4, ch\u1ec9 t\u1ed3n t\u1ea1i c\u00e1c cung t\u1eeb ch\u1ec9 s\u1ed1 nh\u1ecf \u0111\u1ebfn ch\u1ec9 s\u1ed1 l\u1edbn h\u01a1n. N\u00ean khi ta t\u00ednh to\u00e1n \u0111\u1ebfn \\(dp[topo[i]]\\) th\u00ec ch\u1eafc ch\u1eafn \\(dp[topo[j]]\\) \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u0111\u00f3.</li> <li>K\u1ebft qu\u1ea3 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i d\u00e0i nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb l\u00e0 \\(max(dp[i])\\).</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 100007</code> . - M\u1ea3ng <code>dp[]</code> - M\u1ea3ng quy ho\u1ea1ch \u0111\u1ed9ng. - M\u1ea3ng <code>visit[]</code> - M\u1ea3ng l\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Vector <code>revTopo</code> - Danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN = 1e5 + 7;\n\nint n, m;\nint visit[maxN], dp[maxN];\nvector &lt;int&gt; g[maxN], revTopo;\n\nvoid dfs(int u) {\n    visit[u] = 1;\n    for (auto v : g[u])\n        if (!visit[v]) dfs(v);\n    revTopo.push_back(u);\n    visit[u] = 2;\n}\n\nmain() {\n    cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n    }\n    for (int i = 1; i &lt;= n; ++i)\n        if (!visit[i]) dfs(i);\n\n    int ans = 0;\n    for (auto u : revTopo) {\n        for (auto v : g[u])\n            dp[u] = max(dp[u], dp[v] + 1);\n        ans = max(ans, dp[u]);\n    }\n    cout &lt;&lt; ans;\n}\n</code></pre>"},{"location":"algo/graph-theory/topological-sort/#anh-gia_2","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>Khi s\u1eafp x\u1ebfp T\u00f4-p\u00f4 b\u1eb1ng \\(DFS\\), thu\u1eadt to\u00e1n s\u1ebd tr\u1ea3 ra danh s\u00e1ch ngh\u1ecbch \u0111\u1ea3o th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 (\u0111\u1ecbnh ngh\u0129a \u0111\u00e3 \u0111\u01b0\u1ee3c vi\u1ebft \u1edf m\u1ee5c B\u00e0i to\u00e1n 1 ph\u1ea7n Thu\u1eadt to\u00e1n 2). M\u00e0 \u1edf c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng, ta c\u1ea7n duy\u1ec7t ng\u01b0\u1ee3c l\u1ea1i danh s\u00e1ch, n\u00ean ta s\u1ebd gi\u1eef nguy\u00ean th\u1ee9 t\u1ef1 ngh\u1ecbch \u0111\u1ea3o \u0111\u00f3 v\u00e0 x\u1eed l\u00ed lu\u00f4n tr\u00ean n\u00f3.</li> <li>Do \u0111\u00f3, thay v\u00ec s\u1eed d\u1ee5ng ng\u0103n x\u1ebfp (stack) \u0111\u1ec3 \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ea1i danh s\u00e1ch. Ta s\u1eed d\u1ee5ng m\u1ea3ng \u0111\u1ed9ng (vector) <code>revTopo</code> \u0111\u1ec3 l\u01b0u tr\u1eef l\u1ea1i th\u1ee9 t\u1ef1 ngh\u1ecbch \u0111\u1ea3o T\u00f4-p\u00f4 \u0111\u00f3.</li> <li>V\u1edbi \u0111\u1ed3 th\u1ecb t\u1ed5ng qu\u00e1t, b\u00e0i n\u00e0y s\u1ebd tr\u1edf th\u00e0nh b\u00e0i to\u00e1n \\(NP\\).</li> <li>V\u1edbi \\(DAG\\), quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean th\u1ee9 t\u1ef1 T\u00f4-p\u00f4 c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c trong \\(O(n + m)\\), k\u1ec3 c\u1ea3 v\u1edbi tr\u1ecdng s\u1ed1 d\u01b0\u01a1ng/\u00e2m, k\u1ec3 c\u1ea3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t/d\u00e0i nh\u1ea5t.</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p - \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(n + m)\\).</p>"},{"location":"algo/graph-theory/topological-sort/#bai-toan-3-fox-and-names","title":"B\u00e0i to\u00e1n 3 - Fox And Names","text":"<p>Fox And Names - 510C Codeforces</p>"},{"location":"algo/graph-theory/topological-sort/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Fox Ciel s\u1ebd xu\u1ea5t b\u1ea3n m\u1ed9t b\u00e0i b\u00e1o tr\u00ean FOCS (Foxes Operated Computer Systems - Fox). C\u00f4 \u1ea5y nghe th\u1ea5y m\u1ed9t tin \u0111\u1ed3n: danh s\u00e1ch t\u00ean c\u00e1c t\u00e1c gi\u1ea3 tr\u00ean b\u00e0i b\u00e1o lu\u00f4n \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n.</p> <p>Sau khi ki\u1ec3m tra, c\u00f4 ph\u00e1t hi\u1ec7n ra r\u1eb1ng \u0111\u00f4i khi \u0111i\u1ec1u \u0111\u00f3 kh\u00f4ng \u0111\u00fang. Tr\u00ean m\u1ed9t s\u1ed1 b\u00e0i b\u00e1o, t\u00ean c\u1ee7a c\u00e1c t\u00e1c gi\u1ea3 kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo ti\u00eau chu\u1ea9n th\u00f4ng th\u01b0\u1eddng c\u1ee7a th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n. Nh\u01b0ng sau khi s\u1eeda \u0111\u1ed5i m\u1ed9t s\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c ch\u1eef c\u00e1i trong b\u1ea3ng ch\u1eef c\u00e1i Latin th\u00ec th\u1ee9 t\u1ef1 t\u00ean c\u1ee7a c\u00e1c t\u00e1c gi\u1ea3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp \u0111\u00fang theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n m\u1edbi.</p> <p>C\u00f4 \u1ea5y mu\u1ed1n bi\u1ebft li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 c\u00e1c ch\u1eef c\u00e1i trong b\u1ea3ng ch\u1eef c\u00e1i Latin sao cho c\u00e1c t\u00ean tr\u00ean b\u00e0i b\u00e1o m\u00e0 c\u00f4 \u1ea5y \u0111\u1ecbnh xu\u1ea5t b\u1ea3n \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n hay kh\u00f4ng. N\u1ebfu c\u00f3, b\u1ea1n h\u00e3y gi\u00fap c\u00f4 \u1ea5y t\u00ecm ra m\u1ed9t th\u1ee9 t\u1ef1 th\u1ecfa m\u00e3n b\u1ea5t k\u1ef3.</p> <p>Th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh theo c\u00e1ch sau: Khi so s\u00e1nh \\(2\\) x\u00e2u k\u00ed t\u1ef1 \\(s\\) v\u00e0 \\(t\\), \u0111\u1ea7u ti\u00ean ta t\u00ecm v\u1ecb tr\u00ed ngo\u00e0i c\u00f9ng b\u00ean tr\u00e1i sao cho c\u00e1c k\u00fd t\u1ef1 kh\u00e1c nhau \\((s_i\u2260t_i)\\) r\u1ed3i so s\u00e1nh c\u00e1c k\u00fd t\u1ef1 \\(s_i\\) v\u00e0 \\(t_i\\) theo th\u1ee9 t\u1ef1 c\u1ee7a ch\u00fang trong b\u1ea3ng ch\u1eef c\u00e1i, n\u1ebfu \\(s_i &lt; t_i\\) th\u00ec \\(s\\) c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf h\u01a1n \\(t\\) v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. C\u00f2n n\u1ebfu kh\u00f4ng c\u00f3 v\u1ecb tr\u00ed nh\u01b0 v\u1eady (t\u1ee9c l\u00e0 \\(s\\) l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(t\\) ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i) th\u00ec chu\u1ed7i ng\u1eafn h\u01a1n s\u1ebd c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf h\u01a1n. </p> <p>Input</p> <ul> <li>D\u00f2ng \u0111\u1ea7u ti\u00ean ch\u1ee9a s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng t\u00ean c\u00e1c t\u00e1c gi\u1ea3.</li> <li>\\(n\\) d\u00f2ng ti\u1ebfp theo, m\u1ed7i d\u00f2ng ch\u1ee9a m\u1ed9t chu\u1ed7i k\u00ed t\u1ef1 \\(name_i\\) \\((1 \\le \\|name_i\\| \\le 100)\\) g\u1ed3m c\u00e1c ch\u1eef c\u00e1i Latin in th\u01b0\u1eddng l\u00e0 t\u00ean c\u1ee7a t\u00e1c gi\u1ea3 th\u1ee9 \\(i\\). T\u1ea5t c\u1ea3 t\u00ean c\u1ee7a c\u00e1c t\u00e1c gi\u1ea3 \u0111\u1ec1u kh\u00e1c nhau.</li> </ul> <p>Output</p> <ul> <li>N\u1ebfu t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 c\u00e1c ch\u1eef c\u00e1i m\u00e0 c\u00e1c t\u00ean \u0111\u00e3 cho \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n, h\u00e3y in ra b\u1ea5t k\u1ef3 th\u1ee9 t\u1ef1 n\u00e0o th\u1ecfa m\u00e3n l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a c\u00e1c k\u00fd t\u1ef1 \\('a'\\) \\(-\\) \\('z'\\) (t\u1ee9c l\u00e0, \u0111\u1ea7u ti\u00ean in ra ch\u1eef c\u00e1i \u0111\u1ea7u ti\u00ean c\u1ee7a b\u1ea3ng ch\u1eef c\u00e1i \u0111\u00e3 s\u1eeda \u0111\u1ed5i, sau \u0111\u00f3 in ra ch\u1eef c\u00e1i th\u1ee9 hai, v.v.. ).</li> <li>N\u1ebfu kh\u00f4ng, in ra m\u1ed9t t\u1eeb duy nh\u1ea5t: \\(Impossible\\)</li> </ul> <p>Constraints</p> <ul> <li>\\(1 \\le n \\le 100\\).</li> </ul> <p>Example</p> <p>Input 1 <pre><code>3\nrivest\nshamir\nadleman\n</code></pre> Output 1 <pre><code>bcdefghijklmnopqrsatuvwxyz\n</code></pre></p> <p>Input 2 <pre><code>10\ntourist\npetr\nwjmzbmr\nyeputons\nvepifanov\nscottwu\noooooooooooooooo\nsubscriber\nrowdark\ntankengineer\n</code></pre> Output 2 <pre><code>Impossible\n</code></pre></p>"},{"location":"algo/graph-theory/topological-sort/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n","text":"<ul> <li>Gi\u1ea3 s\u1eed, ta c\u00f3 hai x\u00e2u k\u00ed t\u1ef1 \\(s\\) v\u00e0 \\(t\\). Theo \u0111\u1ecbnh ngh\u0129a c\u1ee7a th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n, h\u00e3y xem x\u00e9t xem n\u1ebfu \\(s &lt; t\\) th\u00ec n\u00f3 cho ta bi\u1ebft nh\u1eefng d\u1eef ki\u1ec7n g\u00ec.<ul> <li>V\u00ed d\u1ee5: \\(s=\"abcxyz\"\\) v\u00e0 \\(t=\"abcuv\"\\). \u0110\u1ec3 \\(s &lt; t\\) th\u00ec \\('x'\\) ph\u1ea3i c\u00f3 th\u1ee9 t\u1ef1 nh\u1ecf h\u01a1n \\('u'\\) trong b\u1ea3ng ch\u1eef c\u00e1i.</li> </ul> </li> <li>N\u00f3i c\u00e1ch kh\u00e1c, n\u00f3 s\u1ebd cho ta bi\u1ebft \u0111\u01b0\u1ee3c k\u00ed t\u1ef1 n\u00e0o s\u1ebd ph\u1ea3i \u0111\u1ee9ng tr\u01b0\u1edbc k\u00ed t\u1ef1 n\u00e0o trong b\u1ea3ng ch\u1eef c\u00e1i.</li> <li>Do \u0111\u00f3, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u1ed3 th\u1ecb v\u1edbi m\u1ed7i \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi \\(1\\) k\u00ed t\u1ef1 (\\('a'\\) \\(-\\) \\('z'\\)) v\u00e0 m\u1ed7i c\u1ea1nh c\u00f3 h\u01b0\u1edbng t\u1eeb \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi k\u00ed t\u1ef1 ph\u1ea3i c\u00f3 th\u1ee9 t\u1ef1 nh\u1ecf h\u01a1n \u0111\u1ebfn \u0111\u1ec9nh t\u01b0\u01a1ng \u1ee9ng v\u1edbi k\u00ed t\u1ef1 ph\u1ea3i c\u00f3 th\u1ee9 t\u1ef1 l\u1edbn h\u01a1n \u0111\u1ec9nh kia.</li> <li>T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp T\u00f4-p\u00f4 \u0111\u1ec3 t\u00ecm ra \\(1\\) th\u1ee9 t\u1ef1 ch\u1eef c\u00e1i th\u1ecfa m\u00e3n. </li> <li>N\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 \\(DAG\\) th\u00ec kh\u00f4ng t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 ch\u1eef c\u00e1i n\u00e0o th\u1ecfa m\u00e3n.</li> <li>L\u01b0u \u00fd tr\u01b0\u1eddng h\u1ee3p: N\u1ebfu \\(s\\) \u0111\u1ee9ng tr\u01b0\u1edbc \\(t\\) trong danh s\u00e1ch t\u00ean v\u00e0 \\(t\\) l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(s\\) th\u00ec \\(s\\) lu\u00f4n lu\u00f4n c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n l\u1edbn h\u01a1n \\(t\\) n\u00ean s\u1ebd kh\u00f4ng t\u1ed3n t\u1ea1i th\u1ee9 t\u1ef1 ch\u1eef c\u00e1i n\u00e0o th\u1ecfa m\u00e3n.</li> </ul>"},{"location":"algo/graph-theory/topological-sort/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u: - H\u1eb1ng s\u1ed1 <code>maxN = 110</code> . - M\u1ea3ng <code>visit[]</code> - M\u1ea3ng l\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Vector <code>g[]</code> - Danh s\u00e1ch c\u1ea1nh k\u1ec1 c\u1ee7a m\u1ed7i \u0111\u1ec9nh. - Stack <code>topo</code> - Danh s\u00e1ch th\u1ee9 t\u1ef1 T\u00f4-p\u00f4.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxN  = 110;\n\nint n;\nstring s[maxN];\nint visit[maxN];\nvector &lt;int&gt; g[maxN];\nstack &lt;int&gt; topo;\n\nvoid printImpossible() {\n    cout &lt;&lt; \"Impossible\";\n    exit(0);\n}\n\n// S\u1eafp x\u1ebfp T\u00f4-p\u00f4 b\u1eb1ng DFS\nvoid dfs(int u) {\n    visit[u] = 1;\n    for (auto v : g[u]) {\n        if (visit[v] == 1) printImpossible();\n        if (!visit[v]) dfs(v);\n    }\n    topo.push(u);\n    visit[u] = 2;\n}\n\n// X\u00e2y d\u1ef1ng c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb\nvoid solve(string x, string y) {\n    for (int i = 0; i &lt; min(x.size(), y.size()); ++i)\n        if (x[i] != y[i]) {\n            g[x[i] - 'a'].push_back(y[i] - 'a');\n            return;\n        }\n\n    /* Tr\u01b0\u1eddng h\u1ee3p y l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a x =&gt; x lu\u00f4n l\u1edbn h\u01a1n y \n         =&gt; kh\u00f4ng c\u00f3 c\u00e1ch x\u1ebfp th\u1ecfa m\u00e3n */\n    if (x.size() &gt; y.size()) printImpossible();\n}\n\nmain() {\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; ++i) {\n        cin &gt;&gt; s[i];\n        if (i) solve(s[i - 1], s[i]);\n    }\n\n    for (int i = 0; i &lt; 26; ++i)\n        if (!visit[i]) dfs(i);\n\n    while (!topo.empty()) {\n        cout &lt;&lt; char(topo.top() + 'a');\n        topo.pop();\n    }\n}\n</code></pre>"},{"location":"algo/graph-theory/topological-sort/#anh-gia_3","title":"\u0110\u00e1nh gi\u00e1","text":"<ul> <li>\u0110\u1ec3 t\u1ed1i \u01b0u \u0111\u1ed9 ph\u1ee9c t\u1ea1p, v\u1edbi m\u1ed7i chu\u1ed7i k\u00ed t\u1ef1 ta kh\u00f4ng c\u1ea7n ph\u1ea3i so s\u00e1nh n\u00f3 v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c chu\u1ed7i c\u00f2n l\u1ea1i. M\u00e0 ta ch\u1ec9 c\u1ea7n so s\u00e1nh \\(2\\) chu\u1ed7i k\u00ed t\u1ef1 li\u00ean ti\u1ebfp. V\u00ec n\u00f3 s\u1ebd lu\u00f4n \u0111\u00fang theo t\u00ednh ch\u1ea5t b\u1eafc c\u1ea7u: N\u1ebfu \\(s &lt; x\\) v\u00e0 \\(x &lt; t\\) th\u00ec \\(s &lt; t\\).</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p - \u1ede v\u00f2ng for \u0111\u1ea7u ti\u00ean \u0111\u1ec3 x\u00e2y d\u1ef1ng c\u00e1c c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n * \\|name\\|)\\). - \u1ede v\u00f2ng for th\u1ee9 hai \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u1ee9 t\u1ef1 T\u00f4-p\u00f4, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(26 + m)\\). V\u1edbi \\(m\\) l\u00e0 s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb. Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, v\u1edbi m\u1ed7i c\u1eb7p k\u00ed t\u1ef1 li\u00ean ti\u1ebfp \u0111\u1ec1u t\u1ea1o ra \\(1\\) c\u1ea1nh th\u00ec s\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 t\u1ea1o ra l\u00e0 \\(n-1\\) c\u1ea1nh. - Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(n * \\|name\\|)\\).</p>"},{"location":"algo/graph-theory/topological-sort/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<p>Danh s\u00e1ch b\u00e0i t\u1eadp Topo sort - VNOI</p> <p>NKLEAGUE - Gia\u0309i bo\u0301ng \u0111a\u0301</p> <p>KCOLLECT - Thu ho\u1ea1ch</p> <p>NKJUMP - VOI08 L\u00f2 c\u00f2</p> <p>BIC - V\u00f2ng \u0111ua xe \u0111\u1ea1p</p> <p>TOPOSORT - Topological Sorting</p> <p>RPLA - Answer the boss!</p> <p>Substring - 919D Codeforces</p> <p>CSES - Couse Schedule</p> <p>CSES - Longest Flight Route</p> <p>CSES - Game Routes</p>"},{"location":"algo/math/Ham-Mobius/","title":"H\u00e0m Mobius","text":"<p>T\u00e1c gi\u1ea3: RR</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd ti\u1ebfp t\u1ee5c gi\u1edbi thi\u1ec7u v\u1ec1 h\u00e0m Mobius. \u1ede trong b\u00e0i vi\u1ebft v\u1ec1 H\u00e0m nh\u00e2n t\u00ednh m\u00ecnh \u0111\u00e3 gi\u1edbi thi\u1ec7u h\u00e0m Mobius l\u00e0 m\u1ed9t h\u00e0m nh\u00e2n t\u00ednh v\u00e0 c\u00f3 \u1ee9ng d\u1ee5ng trong nh\u1eefng b\u00e0i to\u00e1n s\u1eed d\u1ee5ng nguy\u00ean l\u00fd b\u00f9 tr\u1eeb. Trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd \u0111i s\u00e2u v\u00e0o \u1ee9ng d\u1ee5ng c\u1ee7a h\u00e0m Mobius.</p>"},{"location":"algo/math/Ham-Mobius/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>H\u00e0m Mobius \\(\\mu(n)\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> <ul> <li> <p>\\(\\mu(1)=1\\)</p> </li> <li> <p>\\(\\mu(n)=0\\) n\u1ebfu t\u1ed3n t\u1ea1i \\(a_i&gt;1\\)</p> </li> <li> <p>\\(\\mu(n)=(-1)^r\\) n\u1ebfu \\(n={p_1}\\*{p_2}\\*{p_3}\\*...\\*{p_r}\\), hay \\(a_i = 1\\) v\u1edbi m\u1ecdi \\(i\\)</p> </li> <li> <p>C\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng \\(\\mu(n)=\\sum_{d\\|n,d &lt; n}\\mu(d)\\) v\u1edbi \\(n&gt;1\\) v\u00e0 t\u00ednh \u0111\u01b0\u1ee3c \\(\\mu(n)\\) b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng S\u00e0ng:</p> </li> </ul> <pre><code>mu[1] = 1;\nfor (int i = 1; i &lt;= N; i++)\n    for (int j = 2*i; j &lt;= N; j += i)\n        mu[j] -= mu[i];\n</code></pre>"},{"location":"algo/math/Ham-Mobius/#ung-dung-trong-nguyen-ly-bu-tru","title":"\u1ee8ng d\u1ee5ng trong nguy\u00ean l\u00fd b\u00f9 tr\u1eeb","text":"<p>Ta x\u00e9t b\u00e0i to\u00e1n CF #305 - Div 1 C</p> <p>T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i:</p> <p>Cho d\u00e3y A v\u1edbi N s\u1ed1. Ban \u0111\u1ea7u ta c\u00f3 m\u1ed9t t\u1eadp h\u1ee3p S r\u1ed7ng. B\u1ea1n c\u1ea7n th\u1ef1c hi\u1ec7n Q truy v\u1ea5n. M\u1ed7i truy v\u1ea5n c\u1ea7n th\u00eam 1 s\u1ed1 A(x) v\u00e0o S ho\u1eb7c xo\u00e1 A(x) kh\u1ecfi S, sau \u0111\u00f3 in ra s\u1ed1 c\u1eb7p (x, y) trong t\u1eadp S tho\u1ea3 m\u00e3n gcd(x, y) = 1. N, Q &lt;= 10^5.</p> <p>C\u00e1ch l\u00e0m:</p> <p>Theo nguy\u00ean l\u00fd b\u00f9 tr\u1eeb, s\u1ed1 c\u1eb7p (x, y) trong t\u1eadp S m\u00e0 \\(gcd(x, y) = 1\\) l\u00e0:</p> <pre><code>(S\u1ed1 c\u1eb7p (x, y) b\u1ea5t k\u1ef3)\n- (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 2)\n- (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 3)\n- (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 5)\n- (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 7)\n- ...\n+ (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 2 v\u00e0 3)\n+ (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 2 v\u00e0 5)\n+ (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 2 v\u00e0 7)\n+ (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 3 v\u00e0 5)\n+ ...\n- (S\u1ed1 c\u1eb7p (x, y) m\u00e0 x v\u00e0 y c\u00f9ng chia h\u1ebft cho 2 v\u00e0 3 v\u00e0 5)\n</code></pre> <p>V\u1edbi m\u1ed7i t\u1eadp h\u1ee3p g\u1ed3m ch\u1eb5n s\u1ed1 nguy\u00ean t\u1ed1, ta c\u1ed9ng th\u00eam v\u00e0o k\u1ebft qu\u1ea3 s\u1ed1 l\u01b0\u1ee3ng c\u1eb7p (x, y) m\u00e0 c\u1ea3 x v\u00e0 y chia h\u1ebft cho t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong t\u1eadp \u0111\u00f3.</p> <p>V\u1edbi m\u1ed7i t\u1eadp h\u1ee3p g\u1ed3m l\u1ebb s\u1ed1 nguy\u00ean t\u1ed1, ta tr\u1eeb kh\u1ecfi k\u1ebft qu\u1ea3 s\u1ed1 l\u01b0\u1ee3ng c\u1eb7p (x, y) m\u00e0 c\u1ea3 x v\u00e0 y chia h\u1ebft cho t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong t\u1eadp \u0111\u00f3.</p> <p>G\u1ecdi \\(cnt(k)\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 trong t\u1eadp \\(S\\) m\u00e0 l\u00e0 b\u1ed9i c\u1ee7a \\(k\\).</p> <p>\u0110\u1eb7t \\(f(k)\\) l\u00e0 s\u1ed1 c\u1eb7p x, y m\u00e0 c\u1ea3 x v\u00e0 y \u0111\u1ec1u chia h\u1ebft cho \\(k\\), th\u00ec \\(f(k) = cnt(k) * (cnt(k) - 1) / 2\\).</p> <p>Theo ph\u00e2n t\u00edch \u1edf tr\u00ean,</p> <p>\\(res = f(1) - f(2) - f(3) - f(5) - ... + f(2\\*3) + f(2\\*5) + f(2\\*7) + ... - f(2\\*3\\*5) - f(2\\*3\\*7) - ...\\)</p> <p>\\(res = sum(f(i) * mu(i))\\)</p> <p>Khi ta th\u00eam ho\u1eb7c xo\u00e1 1 s\u1ed1 \\(x\\) kh\u1ecfi t\u1eadp S:</p> <ul> <li>V\u1edbi m\u1ea3ng \\(cnt\\), ch\u1ec9 c\u00f3 nh\u1eefng \\(cnt(k)\\) v\u1edbi \\(k\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(x\\) b\u1ecb thay \u0111\u1ed5i. Do \u0111\u00f3 ta d\u1ec5 d\u00e0ng c\u1eadp nh\u1eadt \\(cnt\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ec9 l\u1ec7 v\u1edbi s\u1ed1 \u01b0\u1edbc c\u1ee7a \\(n\\).</li> <li>V\u1edbi k\u1ebft qu\u1ea3, ch\u1ec9 c\u00f3 c\u00e1c \\(f(k) * mu(k)\\) v\u1edbi \\(k\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(x\\) b\u1ecb thay \u0111\u1ed5i. Do \u0111\u00f3 ta c\u0169ng c\u00f3 th\u1ec3 c\u1eadp nh\u1eadt k\u1ebft qu\u1ea3 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ec9 l\u1ec7 v\u1edbi s\u1ed1 \u01b0\u1edbc c\u1ee7a \\(n\\).</li> </ul> <p>Do \u0111\u00f3, ta thu \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(Q*x)\\) v\u1edbi \\(x\\) l\u00e0 s\u1ed1 \u01b0\u1edbc t\u1ed1i \u0111a c\u1ee7a 1 s\u1ed1 trong m\u1ea3ng \\(A\\).</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o c\u00e0i \u0111\u1eb7t \u1edf \u0111\u00e2y</p>"},{"location":"algo/math/Ham-Mobius/#cong-thuc-nghich-ao-mobius","title":"C\u00f4ng th\u1ee9c ngh\u1ecbch \u0111\u1ea3o Mobius","text":""},{"location":"algo/math/game-theory/","title":"L\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: Nguy\u1ec5n Nh\u1eadt Minh Kh\u00f4i</p> <p>Reviewer ch\u00ednh: Tr\u1ea7n Quang L\u1ed9c, H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t</p> <p>Trong th\u1ef1c t\u1ebf, c\u00f3 r\u1ea5t nhi\u1ec1u lo\u1ea1i tr\u00f2 ch\u01a1i kh\u00e1c nhau, tuy nhi\u00ean trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd ch\u1ec9 gi\u1edbi h\u1ea1n trong c\u00e1c tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng v\u00ec \u0111\u1ed9 ph\u1ed5 bi\u1ebfn c\u1ee7a n\u00f3 trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u.</p>"},{"location":"algo/math/game-theory/#gioi-thieu-tro-choi-boc-soi","title":"Gi\u1edbi thi\u1ec7u: tr\u00f2 ch\u01a1i b\u1ed1c s\u1ecfi","text":"<p>Tr\u01b0\u1edbc khi \u0111i v\u00e0o c\u00e1c \u0111\u1ecbnh ngh\u0129a, ch\u00fang ta s\u1ebd \u0111i qua m\u1ed9t v\u00ed d\u1ee5 \u0111\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c v\u1ea5n \u0111\u1ec1 m\u00e0 l\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i v\u1edbi tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng gi\u1ea3i quy\u1ebft.</p>"},{"location":"algo/math/game-theory/#phat-bieu-tro-choi","title":"Ph\u00e1t bi\u1ec3u tr\u00f2 ch\u01a1i","text":"<p>Hai b\u1ea1n An v\u00e0 B\u00ecnh \u0111ang ch\u01a1i b\u1ed1c s\u1ecfi, tr\u00f2 ch\u01a1i \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u nh\u01b0 sau: cho m\u1ed9t \u0111\u1ed1ng s\u1ecfi c\u00f3 \\(n\\) vi\u00ean s\u1ecfi, hai b\u1ea1n s\u1ebd lu\u00e2n phi\u00ean b\u1ed1c s\u1ecfi t\u1eeb \u0111\u1ed1ng s\u1ecfi, m\u1ed7i l\u01b0\u1ee3t ch\u1ec9 \u0111\u01b0\u1ee3c b\u1ed1c \\(1\\), \\(2\\) ho\u1eb7c \\(3\\) vi\u00ean s\u1ecfi, ng\u01b0\u1eddi l\u1ea5y \u0111\u01b0\u1ee3c vi\u00ean s\u1ecfi cu\u1ed1i c\u00f9ng s\u1ebd l\u00e0 ng\u01b0\u1eddi chi\u1ebfn th\u1eafng. Bi\u1ebft r\u1eb1ng An \u0111i tr\u01b0\u1edbc, B\u00ecnh \u0111i sau. H\u00e3y t\u00ecm m\u1ed9t chi\u1ebfn thu\u1eadt \u0111\u1ec3 An c\u00f3 th\u1ec3 chi\u1ebfn th\u1eafng tr\u00f2 ch\u01a1i.</p>"},{"location":"algo/math/game-theory/#cach-giai","title":"C\u00e1ch gi\u1ea3i","text":"<p>Ta s\u1ebd ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n b\u1eb1ng c\u00e1ch gi\u1ea3i nh\u1eefng tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n tr\u01b0\u1edbc, sau \u0111\u00f3 r\u00fat ra quy lu\u1eadt chung cho tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t.</p> <p>V\u1edbi \\(n = 1, 2\\) ho\u1eb7c \\(3\\), An lu\u00f4n chi\u1ebfn th\u1eafng b\u1eb1ng c\u00e1ch l\u1ea5y h\u1ebft s\u1ecfi trong l\u01b0\u1ee3t b\u1ed1c \u0111\u1ea7u ti\u00ean.</p> <p>V\u1edbi \\(n = 4\\), An kh\u00f4ng th\u1ec3 l\u1ea5y h\u1ebft s\u1ecfi trong l\u1ea7n b\u1ed1c \u0111\u1ea7u ti\u00ean v\u00ec s\u1ed1 s\u1ecfi \u0111\u01b0\u1ee3c l\u1ea5y t\u1ed1i \u0111a m\u1ed7i l\u1ea7n ch\u1ec9 l\u00e0 \\(3\\). N\u1ebfu B\u00ecnh l\u00e0 m\u1ed9t ng\u01b0\u1eddi th\u00f4ng minh v\u00e0 lu\u00f4n bi\u1ebft \u0111\u01b0\u1ee3c nh\u1eefng n\u01b0\u1edbc \u0111i t\u1ed1i \u01b0u, An s\u1ebd lu\u00f4n thua do: - N\u1ebfu An ch\u1ecdn l\u1ea5y \\(1\\) vi\u00ean, s\u1ed1 s\u1ecfi c\u00f2n l\u1ea1i l\u00e0 \\(n' = 3\\), l\u00fac \u0111\u00f3 B\u00ecnh c\u00f3 th\u1ec3 d\u00f9ng chi\u1ebfn thu\u1eadt c\u1ee7a An \u1edf tr\u00ean, \u0111\u00f3 l\u00e0 l\u1ea5y h\u1ebft s\u1ecfi \u0111\u1ec3 chi\u1ebfn th\u1eafng. - T\u01b0\u01a1ng t\u1ef1, n\u1ebfu An ch\u1ecdn l\u1ea5y \\(2\\) ho\u1eb7c \\(3\\) vi\u00ean th\u00ec b\u1ea1n c\u0169ng s\u1ebd thua.</p> <p>Do \u0111\u00f3, trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y An n\u00ean c\u1ed1 g\u1eafng k\u00e9o d\u00e0i tr\u00f2 ch\u01a1i b\u1eb1ng c\u00e1ch ch\u1ec9 b\u1ed1c \\(1\\) vi\u00ean s\u1ecfi v\u00e0 hi v\u1ecdng B\u00ecnh s\u1ebd ph\u1ea1m sai l\u1ea7m. Tuy nhi\u00ean nh\u01b0 \u0111\u00e3 n\u00f3i, n\u1ebfu B\u00ecnh l\u00e0 m\u1ed9t ng\u01b0\u1eddi ch\u01a1i c\u00f3 chi\u1ebfn thu\u1eadt t\u1ed1i \u01b0u th\u00ec An s\u1ebd lu\u00f4n thua. T\u1eeb tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta th\u1ea5y tr\u01b0\u1eddng h\u1ee3p \\(n = 4\\) l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \"x\u1ea5u\" do n\u00f3 \u0111\u1eb7t ng\u01b0\u1eddi \u1edf l\u01b0\u1ee3t \u0111i hi\u1ec7n t\u1ea1i v\u00e0o th\u1ebf b\u1ea5t l\u1ee3i.</p> <p>T\u1eeb nh\u1eadn x\u00e9t tr\u00ean, ta th\u1ea5y n\u1ebfu \\(n = 5,6,7\\), An lu\u00f4n c\u00f3 th\u1ec3 th\u1eafng b\u1eb1ng c\u00e1ch l\u1ea5y s\u1ecfi sao cho s\u1ed1 s\u1ecfi c\u00f2n l\u1ea1i l\u00e0 \\(n'=4\\), m\u1ee5c \u0111\u00edch l\u00e0 \u0111\u1ec3 \u00e9p B\u00ecnh v\u00e0o tr\u01b0\u1eddng h\u1ee3p b\u1ea5t l\u1ee3i (c\u0169ng l\u00e0 c\u00f3 l\u1ee3i cho An).</p> <p>Ta r\u00fat ra \u0111\u01b0\u1ee3c m\u1ed9t quy lu\u1eadt c\u1ee7a tr\u00f2 ch\u01a1i: n\u1ebfu \u1edf l\u01b0\u1ee3t c\u1ee7a ai m\u00e0 s\u1ed1 s\u1ecfi l\u00e0 \\(4, 8, 12,\\ldots\\) hay n\u00f3i c\u00e1ch kh\u00e1c \\(n\\) chia h\u1ebft cho \\(4\\) th\u00ec ng\u01b0\u1eddi \u0111\u00f3 s\u1ebd \u1edf v\u1ecb tr\u00ed b\u1ea5t l\u1ee3i.</p> <p>V\u1eady chi\u1ebfn thu\u1eadt t\u1ed1i \u01b0u c\u1ee7a An d\u1ef1a tr\u00ean s\u1ed1 s\u1ecfi hi\u1ec7n t\u1ea1i \\(m\\) s\u1ebd l\u00e0:\\((x, x - c)\\) - N\u1ebfu \\(m \\bmod 4 \\neq 0\\) th\u00ec An s\u1ebd b\u1ed1c \\(m \\bmod 4\\) vi\u00ean s\u1ecfi \u0111\u1ec3 \u00e9p B\u00ecnh v\u00e0o tr\u01b0\u1eddng h\u1ee3p b\u1ea5t l\u1ee3i \\(m' \\bmod 4 = 0\\). -  N\u1ebfu \\(m \\bmod 4 = 0\\) th\u00ec An s\u1ebd b\u1ed1c \\(1\\) vi\u00ean s\u1ecfi \u0111\u1ec3 k\u00e9o d\u00e0i tr\u00f2 ch\u01a1i v\u00e0 ch\u1edd sai l\u1ea7m c\u1ee7a B\u00ecnh.</p> <p>v\u1edbi \\(\\bmod\\) l\u00e0 ph\u00e9p l\u1ea5y ph\u1ea7n d\u01b0.</p>"},{"location":"algo/math/game-theory/#tro-choi-to-hop-can-bang","title":"Tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng","text":"<p>Tr\u00f2 ch\u01a1i \u1edf tr\u00ean ch\u00ednh l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng. Trong ph\u1ea7n n\u00e0y, ch\u00fang ta s\u1ebd t\u1ed5ng qu\u00e1t h\u00f3a b\u00e0i to\u00e1n n\u00e0y th\u00e0nh \u0111\u1ecbnh ngh\u0129a tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng \u0111\u1ec3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c m\u1ed9t l\u1edbp b\u00e0i to\u00e1n l\u1edbn h\u01a1n.</p>"},{"location":"algo/math/game-theory/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p l\u00e0 tr\u00f2 ch\u01a1i g\u1ed3m: hai ng\u01b0\u1eddi ch\u01a1i (\u1edf \u0111\u00e2y g\u1ecdi ng\u01b0\u1eddi ch\u01a1i tr\u01b0\u1edbc l\u00e0 \\(A\\) v\u00e0 ng\u01b0\u1eddi ch\u01a1i sau l\u00e0 \\(B\\)), m\u1ed9t t\u1eadp h\u1eefu h\u1ea1n c\u00e1c tr\u1ea1ng th\u00e1i \\(S\\) (vi\u1ebft t\u1eaft c\u1ee7a State) c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c c\u1ee7a tr\u00f2 ch\u01a1i. M\u1ed7i ng\u01b0\u1eddi ch\u01a1i c\u00f3 m\u1ed9t t\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 \\(Q\\) \u0111\u1ec3 di chuy\u1ec3n t\u1eeb tr\u1ea1ng th\u00e1i n\u00e0y sang tr\u1ea1ng th\u00e1i kh\u00e1c (g\u1ecdi l\u00e0 lu\u1eadt ch\u01a1i) v\u00e0 m\u1ed9t t\u1eadp c\u00e1c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac g\u1ecdi l\u00e0 \\(T \\subset S\\) (vi\u1ebft t\u1eaft c\u1ee7a Terminal). Hai ng\u01b0\u1eddi ch\u01a1i s\u1ebd lu\u00e2n phi\u00ean di chuy\u1ec3n t\u1eeb tr\u1ea1ng th\u00e1i n\u00e0y sang tr\u1ea1ng th\u00e1i kh\u00e1c. Ng\u01b0\u1eddi \u0111\u1ebfn \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac tr\u01b0\u1edbc s\u1ebd l\u00e0 ng\u01b0\u1eddi chi\u1ebfn th\u1eafng.</p> <p>Trong tr\u00f2 ch\u01a1i v\u00ed d\u1ee5, gi\u1ea3 s\u1eed \\(n = 8\\) th\u00ec m\u1ed7i tr\u1ea1ng th\u00e1i s\u1ebd l\u00e0 s\u1ed1 s\u1ecfi c\u00f2n l\u1ea1i hi\u1ec7n t\u1ea1i c\u1ee7a tr\u00f2 ch\u01a1i. Do \u0111\u00f3 t\u1eadp tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i l\u00e0 \\(S = \\{0,1,\\ldots, 8\\}\\) (h\u00ecnh d\u01b0\u1edbi).</p> <p></p> <p>Gi\u1ea3 s\u1eed \u0111ang \u1edf tr\u1ea1ng th\u00e1i \\(x = 7\\), ta c\u00f3 th\u1ec3 di chuy\u1ec3n h\u1ee3p l\u1ec7 \u0111\u1ebfn tr\u1ea1ng th\u00e1i \\(x' = 6\\) (l\u1ea5y ra \\(1\\) vi\u00ean s\u1ecfi), \\(x' = 5\\) (l\u1ea5y ra \\(2\\) vi\u00ean s\u1ecfi) ho\u1eb7c \\(x' = 4\\) (l\u1ea5y ra \\(3\\) vi\u00ean s\u1ecfi). Do \u0111\u00f3 ta c\u00f3 c\u00e1c ph\u1ea7n t\u1eed \\((7, 6), (7,5), (7,4)\\) thu\u1ed9c t\u1eadp di chuy\u1ec3n h\u1ee3p l\u1ec7 \\(Q\\) (h\u00ecnh d\u01b0\u1edbi).</p> <p></p> <p>T\u1eeb \u0111\u00f3, ta nh\u1eadn x\u00e9t \u0111\u01b0\u1ee3c t\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 \\(Q\\) c\u1ee7a c\u1ea3 hai ng\u01b0\u1eddi ch\u01a1i s\u1ebd l\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng c\u1eb7p s\u1ed1 nguy\u00ean \\((x,x - c)\\) (\\(0 \\leq x \\leq n\\)) sao cho \\(c \\in \\{1, 2, 3\\}\\) (t\u1eeb tr\u1ea1ng th\u00e1i c\u00f3 s\u1ed1 s\u1ecfi \\(x\\) ch\u1ec9 c\u00f3 th\u1ec3 l\u1ea5y ra \\(1\\), \\(2\\), ho\u1eb7c \\(3\\) vi\u00ean s\u1ecfi) v\u00e0 \\(x - c \\geq 0\\) (s\u1ed1 s\u1ecfi l\u1ea5y ra kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p l\u1edbn h\u01a1n s\u1ed1 s\u1ecfi \u0111ang c\u00f3).</p> <p>Tr\u00f2 ch\u01a1i k\u1ebft th\u00fac khi kh\u00f4ng c\u00f2n vi\u00ean s\u1ecfi n\u00e0o \u0111\u1ec3 b\u1ed1c, do \u0111\u00f3 t\u1eadp tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac c\u1ee7a c\u1ea3 hai ng\u01b0\u1eddi ch\u01a1i l\u00e0 \\(T = \\{0\\}\\). Khi \u0111\u00f3 ng\u01b0\u1eddi b\u1ed1c vi\u00ean s\u1ecfi cu\u1ed1i c\u00f9ng s\u1ebd l\u00e0 ng\u01b0\u1eddi th\u1eafng.</p> <p>Khi hai ng\u01b0\u1eddi ch\u01a1i c\u00f3 t\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 \\(Q\\) v\u00e0 t\u1eadp tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac \\(T\\) gi\u1ed1ng nhau th\u00ec tr\u00f2 ch\u01a1i \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng. N\u00f3i c\u00e1ch kh\u00e1c, hai ng\u01b0\u1eddi ch\u01a1i ch\u1ec9 kh\u00e1c nhau \u1edf \u0111\u00fang m\u1ed9t \u0111i\u1ec3m l\u00e0 ng\u01b0\u1eddi n\u00e0y \u0111\u01b0\u1ee3c \u0111i tr\u01b0\u1edbc, ng\u01b0\u1eddi kia \u0111i sau.</p> <p>Tr\u00f2 ch\u01a1i b\u1ed1c s\u1ecfi \u1edf v\u00ed d\u1ee5 ch\u00ednh l\u00e0 m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, do c\u1ea3 An v\u00e0 B\u00ecnh \u0111\u1ec1u ch\u1ec9 \u0111\u01b0\u1ee3c cho ph\u00e9p b\u1ed1c \\(1\\), \\(2\\), ho\u1eb7c \\(3\\) vi\u00ean s\u1ecfi m\u1ed9t l\u1ea7n v\u00e0 \u0111\u1ec1u th\u1eafng khi b\u1ed1c \u0111\u01b0\u1ee3c vi\u00ean s\u1ecfi cu\u1ed1i c\u00f9ng.</p>"},{"location":"algo/math/game-theory/#chien-thuat-thang","title":"Chi\u1ebfn thu\u1eadt th\u1eafng","text":"<p>M\u1ee5c ti\u00eau c\u1ee7a ch\u00fang ta khi gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n v\u1edbi tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng l\u00e0 t\u00ecm ra chi\u1ebfn thu\u1eadt m\u00e0 \u1edf \u0111\u00f3 m\u1ed9t trong hai ng\u01b0\u1eddi ch\u01a1i lu\u00f4n c\u00f3 th\u1ec3 \u00e9p ng\u01b0\u1eddi c\u00f2n l\u1ea1i thua. Chi\u1ebfn thu\u1eadt nh\u01b0 v\u1eady g\u1ecdi l\u00e0 m\u1ed9t chi\u1ebfn thu\u1eadt th\u1eafng.</p> <p>R\u00f5 r\u00e0ng khi ph\u00e2n t\u00edch tr\u00f2 ch\u01a1i b\u1ed1c s\u1ecfi, ta th\u1ea5y r\u1eb1ng n\u1ebfu c\u1ea3 An v\u00e0 B\u00ecnh \u0111\u1ec1u ch\u01a1i t\u1ed1i \u01b0u th\u00ec ch\u1ec9 c\u1ea7n bi\u1ebft \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u c\u1ee7a tr\u00f2 ch\u01a1i, ta c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c ng\u01b0\u1eddi \u0111i tr\u01b0\u1edbc (An) s\u1ebd th\u1eafng hay thua. N\u1ebfu s\u1ed1 s\u1ecfi ban \u0111\u1ea7u l\u00e0 \\(n\\) chia h\u1ebft cho \\(4\\), B\u00ecnh ch\u1eafc ch\u1eafn s\u1ebd th\u1eafng do b\u1ea1n s\u1ebd lu\u00f4n \u00e9p An \u0111i t\u1edbi tr\u1ea1ng th\u00e1i c\u00f3 \\(n\\) chia h\u1ebft cho \\(4\\) v\u00e0 cu\u1ed1i c\u00f9ng l\u00e0 \\(n = 0\\) (c\u0169ng chia h\u1ebft cho \\(4\\)). L\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1, n\u1ebfu \\(n\\) kh\u00f4ng chia h\u1ebft cho \\(4\\) th\u00ec ch\u1eafc ch\u1eafn An s\u1ebd th\u1eafng.</p> <p>V\u1eady t\u1eeb \u0111\u00e2y, ta th\u1ea5y v\u1edbi m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, ch\u1ec9 c\u1ea7n bi\u1ebft tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u, ta c\u00f3 th\u1ec3 suy ra \u0111\u01b0\u1ee3c ai s\u1ebd l\u00e0 ng\u01b0\u1eddi chi\u1ebfn th\u1eafng. \u0110\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c \u0111\u01b0a ra chi\u1ebfn thu\u1eadt th\u1eafng, ng\u01b0\u1eddi ta ph\u00e2n lo\u1ea1i c\u00e1c tr\u1ea1ng th\u00e1i c\u00f9a tr\u00f2 ch\u01a1i th\u00e0nh 2 t\u1eadp \\(N\\) v\u00e0 \\(P\\): - \\(N\\): t\u1eadp c\u00e1c tr\u1ea1ng th\u00e1i \\(x \\in S\\) sao cho n\u1ebfu tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u c\u1ee7a tr\u00f2 ch\u01a1i l\u00e0 \\(x\\) th\u00ec ng\u01b0\u1eddi ch\u01a1i tr\u01b0\u1edbc lu\u00f4n chi\u1ebfn th\u1eafng. - \\(P\\): t\u1eadp c\u00e1c tr\u1ea1ng th\u00e1i \\(x \\in S\\) sao cho n\u1ebfu tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u c\u1ee7a tr\u00f2 ch\u01a1i l\u00e0 \\(x\\) th\u00ec ng\u01b0\u1eddi ch\u01a1i sau lu\u00f4n chi\u1ebfn th\u1eafng.</p> <p>Trong tr\u00f2 ch\u01a1i v\u00ed d\u1ee5, n\u1ebfu s\u1ed1 s\u1ecfi ban \u0111\u1ea7u l\u00e0 \\(n = 8\\) th\u00ec  - \\(N = \\{1, 2, 3, 5, 6, 7\\}\\) - \\(P = \\{0, 4, 8\\}\\)</p> <p>T\u1eeb \u0111\u1ecbnh ngh\u0129a tr\u00ean, \\(N\\) v\u00e0 \\(P\\) s\u1ebd th\u1ecfa ba t\u00ednh ch\u1ea5t sau: 1. T\u1eadp \\(P\\) ph\u1ea3i ch\u1ee9a to\u00e0n b\u1ed9 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac. 2. V\u1edbi m\u1ed7i tr\u1ea1ng th\u00e1i \\(s\\) thu\u1ed9c t\u1eadp \\(N\\), t\u1ed3n t\u1ea1i \u00edt nh\u1ea5t m\u1ed9t tr\u1ea1ng th\u00e1i \\(s'\\) \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(s\\) m\u00e0 thu\u1ed9c t\u1eadp \\(P\\). 3. V\u1edbi m\u1ed7i tr\u1ea1ng th\u00e1i \\(s\\) thu\u1ed9c t\u1eadp \\(P\\), t\u1ea5t c\u1ea3 c\u00e1c tr\u1ea1ng th\u00e1i \\(s'\\) \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(s\\) ph\u1ea3i thu\u1ed9c t\u1eadp \\(N\\). </p> <p>T\u1edbi \u0111\u00e2y, c\u00f3 th\u1ec3 b\u1ea1n s\u1ebd \u0111\u1eb7t ra c\u00e2u h\u1ecfi: Li\u1ec7u m\u1ecdi tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i \u0111\u1ec1u thu\u1ed9c m\u1ed9t trong hai t\u1eadp \\(N\\) hay \\(P\\)? Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh d\u1ec5 d\u00e0ng b\u1eb1ng quy n\u1ea1p m\u1ea1nh theo s\u1ed1 b\u01b0\u1edbc t\u1ed1i \u0111a \u0111\u1ec3 \u0111\u1ea1t t\u1edbi tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac. N\u1ebfu mu\u1ed1n, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam \u1edf ph\u1ea7n 1.1. Impartial game - Game Theory, Alive.</p> <p>R\u00e0ng bu\u1ed9c \u0111\u1ea7u ti\u00ean x\u00e1c \u0111\u1ecbnh tr\u01b0\u1eddng h\u1ee3p c\u01a1 b\u1ea3n nh\u1ea5t. Hai r\u00e0ng bu\u1ed9c sau s\u1ebd gi\u00fap ch\u00fang ta li\u00ean t\u1ee5c \u0111\u1ec7 quy t\u1eeb tr\u01b0\u1eddng h\u1ee3p c\u01a1 b\u1ea3n \u0111\u1ec3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c t\u1eadp \\(P\\) v\u00e0 \\(N\\) ho\u00e0n ch\u1ec9nh. Ta s\u1ebd th\u1ea5y r\u00f5 \u0111i\u1ec1u n\u00e0y \u1edf ph\u1ea7n Thu\u1eadt to\u00e1n x\u00e1c \u0111\u1ecbnh t\u1eadp \\(P\\) v\u00e0 \\(N\\).</p> <p>Khi x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c t\u1eadp \\(P\\) v\u00e0 \\(N\\) theo c\u00e1c r\u00e0ng bu\u1ed9c tr\u00ean, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng x\u00e2y d\u1ef1ng chi\u1ebfn thu\u1eadt th\u1eafng cho ng\u01b0\u1eddi ch\u01a1i \\(A\\) nh\u01b0 sau (do \u0111\u00e2y l\u00e0 tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng n\u00ean chi\u1ebfn thu\u1eadt th\u1eafng c\u1ee7a \\(B\\) c\u0169ng s\u1ebd t\u01b0\u01a1ng t\u1ef1): 1. N\u1ebfu \\(A\\) b\u1eaft \u0111\u1ea7u \u1edf tr\u1ea1ng th\u00e1i thu\u1ed9c \\(N\\), lu\u00f4n \u0111i t\u1edbi tr\u1ea1ng th\u00e1i thu\u1ed9c \\(P\\) \u0111\u1ec3 \u00e9p \\(B\\) \u0111i v\u00e0o tr\u1ea1ng th\u00e1i thu\u1ed9c \\(N\\). Do ng\u01b0\u1eddi th\u1eafng l\u00e0 ng\u01b0\u1eddi \u0111i v\u00e0o tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac, m\u00e0 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac l\u1ea1i thu\u1ed9c \\(P\\) n\u00ean ch\u1eafc ch\u1eafn \\(A\\) s\u1ebd th\u1eafng. 2. N\u1ebfu \\(A\\) b\u1eaft \u0111\u1ea7u \u1edf tr\u1ea1ng th\u00e1i thu\u1ed9c \\(P\\), \\(A\\) ch\u1ec9 c\u00f3 th\u1ec3 k\u00e9o d\u00e0i v\u00e1n \u0111\u1ea5u v\u00e0 \u0111\u1ee3i s\u01a1 h\u1edf c\u1ee7a \\(B\\) (\\(B\\) \u0111i v\u00e0o v\u1ecb tr\u00ed thu\u1ed9c \\(N\\)) v\u00e0 d\u00f9ng chi\u1ebfn thu\u1eadt th\u1eafng \u1edf tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u. Tuy nhi\u00ean n\u1ebfu \\(B\\) c\u0169ng ch\u01a1i t\u1ed1i \u01b0u th\u00ec ch\u1eafc ch\u1eafn \\(A\\) s\u1ebd thua.</p> <p>Qua \u0111\u00f3, ta th\u1ea5y \u0111\u01b0\u1ee3c \u00fd ngh\u0129a c\u1ee7a vi\u1ec7c \u0111\u1eb7t t\u00ean t\u1eadp \\(P\\) v\u00e0 \\(N\\). \\(P\\) l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a positive, \u0111\u1eb7t t\u00ean nh\u01b0 v\u1eady v\u00ec ng\u01b0\u1eddi n\u00e0o \u0111i \u0111\u1ebfn tr\u1ea1ng th\u00e1i n\u00e0y s\u1ebd c\u00f3 l\u1ee3i, \u0111\u00f3 l\u00e0 l\u00fd do t\u1ea1i sao c\u00e1c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac l\u1ea1i thu\u1ed9c \\(P\\), v\u00ec ng\u01b0\u1eddi ch\u01a1i n\u00e0o \u0111i t\u1edbi \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac s\u1ebd c\u00f3 l\u1ee3i (th\u1eafng tr\u00f2 ch\u01a1i). T\u01b0\u01a1ng t\u1ef1, \\(N\\) l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a negative, \u0111\u1eb7t t\u00ean nh\u01b0 v\u1eady v\u00ec ng\u01b0\u1eddi n\u00e0o \u0111i \u0111\u1ebfn tr\u1ea1ng th\u00e1i thu\u1ed9c t\u1eadp \\(N\\) s\u1ebd b\u1ecb b\u1ea5t l\u1ee3i (v\u00ec ng\u01b0\u1eddi kia s\u1ebd lu\u00f4n t\u00ecm c\u00e1ch \u0111i \u0111\u01b0\u1ee3c v\u00e0o tr\u1ea1ng th\u00e1i thu\u1ed9c \\(P\\)).</p>"},{"location":"algo/math/game-theory/#thuat-toan-xac-inh-tap-p-va-n","title":"Thu\u1eadt to\u00e1n x\u00e1c \u0111\u1ecbnh t\u1eadp P v\u00e0 N","text":"<p>Ta c\u00f3 \u00fd t\u01b0\u1edfng thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ecm t\u1eadp \\(P\\) v\u00e0 \\(N\\) nh\u01b0 sau: <pre><code>// H\u00e0m ki\u1ec3m tra m\u1ed9t tr\u1ea1ng th\u00e1i thu\u1ed9c P (true) hay N (false)\nbool isInP(State u) {\n    if (u in T) // n\u1ebfu u l\u00e0 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac th\u00ec u thu\u1ed9c P\n        return true;\n\n    // duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c tr\u1ea1ng th\u00e1i v trong t\u1eadp h\u1ee3p S\n    for (State v in S) \n        if (u, v) in Q and isInP(v)\n            return false; // n\u1ebfu c\u00f3 v thu\u1ed9c P th\u00ec u thu\u1ed9c N\n\n    return true; // n\u1ebfu kh\u00f4ng th\u00ec u thu\u1ed9c P\n}\n</code></pre> \u00dd t\u01b0\u1edfng \u1edf \u0111\u00e2y ch\u00ednh l\u00e0 \u0111\u1ec7 quy: 1. N\u1ebfu tr\u1ea1ng th\u00e1i \\(u\\) \u0111ang x\u00e9t l\u00e0 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac th\u00ec th\u00eam \\(u\\) v\u00e0o t\u1eadp \\(P\\). \u0110\u00e2y ch\u00ednh l\u00e0 tr\u01b0\u1eddng h\u1ee3p c\u01a1 b\u1ea3n c\u1ee7a qu\u00e1 tr\u00ecnh \u0111\u1ec7 quy. 2. N\u1ebfu \\(u\\) kh\u00f4ng l\u00e0 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac th\u00ec \u0111\u1ec7 quy \u0111\u1ebfn nh\u1eefng tr\u1ea1ng th\u00e1i \\(v\\) m\u00e0 t\u1eeb \\(u\\) c\u00f3 th\u1ec3 di chuy\u1ec3n tr\u1ef1c ti\u1ebfp \u0111\u1ebfn. N\u1ebfu c\u00f3 b\u1ea5t k\u1ef3 \\(v\\) n\u00e0o thu\u1ed9c t\u1eadp \\(P\\) th\u00ec \\(u\\) thu\u1ed9c t\u1eadp \\(N\\), ng\u01b0\u1ee3c l\u1ea1i (t\u1ea5t c\u1ea3 \\(v\\) \u0111\u1ec1u thu\u1ed9c \\(N\\)) th\u00ec \\(u\\) thu\u1ed9c \\(P\\).</p> <p>\u1ede \u0111\u00e2y c\u00f3 m\u1ed9t ch\u00fa \u00fd v\u1ec1 c\u00e1ch c\u00e0i \u0111\u1eb7t tr\u00ean, \u0111\u00f3 l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u <code>State</code> l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u t\u01b0\u1ee3ng tr\u01b0ng \u0111\u1ec3 l\u01b0u m\u1ed9t tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i. Trong th\u1ef1c t\u1ebf, tr\u1ea1ng th\u00e1i hay \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t s\u1ed1 nguy\u00ean int, tuy nhi\u00ean nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p tr\u1ea1ng th\u00e1i c\u1ee7a ch\u00fang ta kh\u00f4ng \u1edf d\u1ea1ng s\u1ed1 nguy\u00ean, khi \u0111\u00f3 c\u00f3 m\u1ed9t s\u1ed1 c\u00e1ch c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem x\u00e9t \u0111\u1ec3 l\u01b0u tr\u1ea1ng th\u00e1i nh\u01b0: bitmask, hashmap (unordered_map trong c++).</p> <p>Tuy nhi\u00ean, thu\u1eadt to\u00e1n n\u00e0y c\u00f3 m\u1ed9t nh\u01b0\u1ee3c \u0111i\u1ec3m, \u0111\u00f3 l\u00e0 g\u1ecdi l\u1ea1i c\u00f9ng m\u1ed9t gi\u00e1 tr\u1ecb qu\u00e1 nhi\u1ec1u l\u1ea7n do kh\u00f4ng l\u01b0u l\u1ea1i k\u1ebft qu\u1ea3 trong qu\u00e1 tr\u00ecnh \u0111\u1ec7 quy. C\u00e1ch gi\u1ea3i quy\u1ebft ch\u00ednh l\u00e0 quy ho\u1ea1ch \u0111\u1ed9ng top-down (hay c\u00f2n g\u1ecdi l\u00e0 \u0111\u1ec7 quy c\u00f3 nh\u1edb), trong \u0111\u00f3 ta c\u00f3 m\u1ed9t m\u1ea3ng \\(dp\\) l\u01b0u l\u1ea1i k\u1ebft qu\u1ea3 c\u1ee7a nh\u1eefng tr\u1ea1ng th\u00e1i \u0111\u00e3 t\u1eebng x\u00e9t. \u0110\u1ec3 hi\u1ec3u th\u00eam, b\u1ea1n h\u00e3y xem c\u00e0i \u0111\u1eb7t t\u00ecm tr\u00f2 ch\u01a1i b\u1ed1c s\u1ecfi \u1edf ph\u1ea7n v\u00ed d\u1ee5 sau.</p>"},{"location":"algo/math/game-theory/#vi-du-cai-at-thuat-toan-cho-tro-choi-boc-soi","title":"V\u00ed d\u1ee5 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n cho tr\u00f2 ch\u01a1i b\u1ed1c s\u1ecfi","text":"<p>\u0110\u1ea7u ti\u00ean, ta c\u1ea7n th\u00eam c\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft, c\u0169ng nh\u01b0 khai b\u00e1o m\u1ea3ng \\(dp\\) \u0111\u1ec3 nh\u1edb k\u1ebft qu\u1ea3 c\u1ee7a nh\u1eefng tr\u1ea1ng th\u00e1i \u0111\u00e3 \u0111\u1ec7 quy. <pre><code>## include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAX_N = 100000; // s\u1ed1 tr\u1ea1ng th\u00e1i t\u1ed1i \u0111a\nint dp[MAX_N];\n</code></pre></p> <p>Sau \u0111\u00f3, ta vi\u1ebft h\u00e0m x\u00e1c \u0111\u1ecbnh xem tr\u1ea1ng th\u00e1i \\(u\\) c\u00f3 thu\u1ed9c \\(P\\) kh\u00f4ng nh\u01b0 sau <pre><code>bool isInP(int u) {\n    if (dp[u] != -1) // n\u1ebfu u \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u0111\u00f3 th\u00ec\n        return dp[u];\n\n    if (u == 0) { // u = 0 l\u00e0 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac n\u00ean thu\u1ed9c P\n        dp[u] = 1;\n        return 1;\n    } \n\n    // T\u1eeb u ch\u1ec9 c\u00f3 th\u1ec3 \u0111i t\u1edbi c\u00e1c v h\u1ee3p l\u1ec7\n    for (int v = u - 1; v &gt;= max(u - 3, 0); v--)\n        if (isInP(v)) {\n            dp[u] = 0;\n            return false; \n        }\n\n    // u kh\u00f4ng \u0111i \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i n\u00e0o thu\u1ed9c P\n    dp[u] = 1;\n    return true;\n}\n</code></pre></p> <p>\u1ede \u0111\u00e2y quy \u01b0\u1edbc gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng \\(dp\\) nh\u01b0 sau: - \\(dp[u] = 0\\) ngh\u0129a l\u00e0 tr\u1ea1ng th\u00e1i \\(u\\) \u0111\u00e3 x\u00e9t v\u00e0 \\(u\\) kh\u00f4ng thu\u1ed9c \\(P\\), hay n\u00f3i c\u00e1ch kh\u00e1c \\(u\\) thu\u1ed9c \\(N\\). - \\(dp[u] = 1\\) ngh\u0129a l\u00e0 tr\u1ea1ng th\u00e1i \\(u\\) \u0111\u00e3 x\u00e9t v\u00e0 \\(u\\) thu\u1ed9c \\(P\\). - \\(dp[u] = -1\\) ngh\u0129a l\u00e0 tr\u1ea1ng th\u00e1i \\(u\\) ch\u01b0a x\u00e9t.</p> <p>S\u1edf d\u0129 ta quy \u01b0\u1edbc nh\u01b0 v\u1eady v\u00ec c++ c\u00f3 c\u01a1 ch\u1ebf implicit casting. N\u00f3i \u0111\u01a1n gi\u1ea3n, khi tr\u1ea3 v\u1ec1 \\(dp[u]\\) trong h\u00e0m <code>isInP(u)</code>, \\(dp[u]\\) s\u1ebd \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng \u00e9p ki\u1ec3u v\u1ec1 <code>bool</code> v\u1edbi quy t\u1eafc: \\(0\\) l\u00e0 \\(\\texttt{false}\\), c\u00e1c gi\u00e1 tr\u1ecb kh\u00e1c l\u00e0 \\(\\texttt{true}\\).</p> <p>C\u00e0i \u0111\u1eb7t n\u00e0y t\u1ed1i \u01b0u th\u1eddi gian \u0111\u1ec7 quy b\u1eb1ng hai \u00fd sau:  1. Khi t\u00ednh xong, tr\u01b0\u1edbc khi tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb th\u00ec ta l\u01b0u gi\u00e1 tr\u1ecb l\u1ea1i v\u00e0o m\u1ed9t m\u1ea3ng \\(dp\\) v\u00e0 \u1edf \u0111\u1ea7u h\u00e0m \\(isInP(u)\\) 2. Ta tr\u1ea3 v\u1ec1 \\(dp[u]\\) n\u1ebfu \\(dp[u] \\neq -1\\) (t\u1ee9c \\(u\\) \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u0111\u00f3).</p> <p>Cu\u1ed1i c\u00f9ng, ta vi\u1ebft h\u00e0m main \u0111\u1ec3 nh\u1eadp xu\u1ea5t v\u00e0 k\u1ebft lu\u1eadn nghi\u1ec7m. L\u01b0u \u00fd tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n qu\u00e1 tr\u00ecnh t\u00ecm t\u1eadp \\(P\\) v\u00e0 \\(N\\) ta ph\u1ea3i kh\u1edfi t\u1ea1o m\u1ea3ng \\(dp\\) th\u00e0nh to\u00e0n \\(-1\\) b\u1eb1ng h\u00e0m <code>fill</code> do th\u01b0 vi\u1ec7n chu\u1ea9n c\u1ee7a c++ cung c\u1ea5p. <pre><code>int main() {\n    int n;\n\n    cin &gt;&gt; n;\n\n    fill(dp, dp + n + 1, -1);\n    if (!isInP(n)) cout &lt;&lt; \"A win\";\n    else cout &lt;&lt; \"B win\";\n\n    return 0;\n}\n</code></pre></p>"},{"location":"algo/math/game-theory/#tro-choi-nim-chuan","title":"Tr\u00f2 ch\u01a1i Nim chu\u1ea9n","text":"<p>Sau khi \u0111\u00e3 t\u00ecm hi\u1ec3u l\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng t\u1ed5ng qu\u00e1t, ph\u1ea7n ti\u1ebfp theo ta s\u1ebd \u00e1p d\u1ee5ng l\u00fd thuy\u1ebft \u0111\u00f3 v\u00e0o m\u1ed9t b\u00e0i to\u00e1n kinh \u0111i\u1ec3n trong l\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i - tr\u00f2 ch\u01a1i Nim - \u0111\u1ea1i di\u1ec7n ti\u00eau bi\u1ec3u cho tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng.</p>"},{"location":"algo/math/game-theory/#phat-bieu-tro-choi_1","title":"Ph\u00e1t bi\u1ec3u tr\u00f2 ch\u01a1i","text":"<p>C\u00f3 \\(n\\) \u0111\u1ed1ng s\u1ecfi, v\u00e0 m\u1ed7i \u0111\u1ed1ng l\u1ea7n l\u01b0\u1ee3t c\u00f3 \\(p_1, p_2, \\ldots, p_n\\) s\u1ecfi, trong \u0111\u00f3 m\u1ed7i s\u1ed1 \\(p_i\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m. M\u1ed7i tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i b\u1ed9 \\(n\\) cho bi\u1ebft s\u1ed1 s\u1ecfi c\u1ee7a t\u1eebng \u0111\u1ed1ng n\u00e0y.</p> <p>C\u00f3 hai ng\u01b0\u1eddi ch\u01a1i thay phi\u00ean nhau b\u1ecf s\u1ecfi. Ng\u01b0\u1eddi ch\u01a1i trong l\u01b0\u1ee3t hi\u1ec7n t\u1ea1i c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf bao nhi\u00eau s\u1ecfi t\u00f9y th\u00edch, mi\u1ec5n l\u00e0 t\u1ea5t c\u1ea3 c\u00e1c s\u1ecfi \u0111\u1ec1u c\u00f9ng m\u1ed9t \u0111\u1ed1ng. H\u00ecnh th\u1ee9c h\u01a1n, ng\u01b0\u1eddi ch\u01a1i s\u1ebd ch\u1ecdn m\u1ed9t \u0111\u1ed1ng s\u1ecfi \\(i\\) v\u00e0 s\u1ed1 l\u01b0\u1ee3ng s\u1ecfi \\(s\\) \u0111\u1ec3 lo\u1ea1i b\u1ecf kh\u1ecfi \u0111\u1ed1ng (\\(0 &lt; s \\leq p_i\\)), sau \u0111\u00f3 thay \\(p_i\\) b\u1eb1ng \\(p_i-s\\). Ch\u00fa \u00fd r\u1eb1ng ng\u01b0\u1eddi ch\u01a1i kh\u00f4ng th\u1ec3 b\u1ecf qua l\u01b0\u1ee3t c\u1ee7a m\u00ecnh m\u00e0 kh\u00f4ng b\u1ecf vi\u00ean s\u1ecfi n\u00e0o c\u1ea3. Sau \u0111\u00f3, \u0111\u1ebfn l\u01b0\u1ee3t ng\u01b0\u1eddi ch\u01a1i kia lo\u1ea1i b\u1ecf s\u1ecfi, l\u1ea7n l\u01b0\u1ee3t nh\u01b0 v\u1eady t\u1edbi khi tr\u00f2 ch\u01a1i k\u1ebft th\u00fac.</p> <p>Tr\u00f2 ch\u01a1i k\u1ebft th\u00fac khi kh\u00f4ng c\u00f2n s\u1ecfi tr\u00ean b\u00e0n ch\u01a1i. Ng\u01b0\u1eddi chi\u1ebfn th\u1eafng l\u00e0 ng\u01b0\u1eddi l\u1ea5y \u0111\u01b0\u1ee3c vi\u00ean s\u1ecfi cu\u1ed1i c\u00f9ng. N\u00f3i c\u00e1ch kh\u00e1c, ng\u01b0\u1eddi thua cu\u1ed9c l\u00e0 ng\u01b0\u1eddi \u0111\u1ea7u ti\u00ean kh\u00f4ng th\u1ec3 l\u1ea5y s\u1ecfi trong l\u01b0\u1ee3t c\u1ee7a m\u00ecnh.</p> <p>Tr\u00f2 b\u1ed1c s\u1ecfi \u1edf v\u00ed d\u1ee5 tr\u00ean ch\u00ednh l\u00e0 bi\u1ebfn th\u1ec3 c\u1ee7a tr\u00f2 ch\u01a1i Nim chu\u1ea9n, kh\u00e1c hai ch\u1ed7 l\u00e0 \u1edf \u0111\u00e2y ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ed1ng s\u1ecfi (\\(n = 1\\)) v\u00e0 s\u1ed1 s\u1ecfi l\u1ea5y ra t\u1ed1i \u0111a \u1edf m\u1ed7i \u0111\u1ed1ng l\u00e0 \\(3\\).</p>"},{"location":"algo/math/game-theory/#gia-tri-nim","title":"Gi\u00e1 tr\u1ecb Nim","text":"<p>M\u1ee5c ti\u00eau l\u1edbn nh\u1ea5t c\u1ee7a ch\u00fang ta v\u1eabn l\u00e0 x\u00e1c \u0111\u1ecbnh xem ai l\u00e0 ng\u01b0\u1eddi th\u1eafng n\u1ebfu c\u1ea3 hai ng\u01b0\u1eddi ch\u01a1i t\u1ed1i \u01b0u, hay n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c chi\u1ebfn thu\u1eadt th\u1eafng.</p> <p>Tuy nhi\u00ean, khi b\u1eaft tay v\u00e0o l\u00e0m, b\u1ea1n s\u1ebd g\u1eb7p ngay m\u1ed9t r\u00e0o c\u1ea3n, \u0111\u00f3 l\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i \u0111ang \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng m\u1ed9t b\u1ed9 c\u00e1c s\u1ed1 nguy\u00ean ch\u1ee9 kh\u00f4ng ph\u1ea3i m\u1ed9t s\u1ed1 nguy\u00ean, \u0111i\u1ec1u \u0111\u00f3 g\u00e2y kh\u00f3 kh\u0103n cho ch\u00fang ta khi t\u1ed5ng qu\u00e1t h\u00f3a l\u1eddi gi\u1ea3i v\u00e0 l\u1eadp tr\u00ecnh, m\u1ed9t kh\u00f3 kh\u0103n r\u1ea5t d\u1ec5 th\u1ea5y \u0111\u00f3 l\u00e0 n\u1ebfu ch\u00fang ta x\u00e0i m\u1ea3ng \\(dp\\) nhi\u1ec1u chi\u1ec1u \u0111\u1ec3 l\u01b0u tr\u1ea1ng th\u00e1i \u0111\u00e3 t\u00ednh th\u00ec c\u00f3 kh\u1ea3 n\u0103ng khi \\(n\\) thay \u0111\u1ed5i \u0111o\u1ea1n code c\u0169 s\u1ebd kh\u00f4ng d\u00f9ng \u0111\u01b0\u1ee3c n\u1eefa do s\u1ed1 chi\u1ec1u c\u1ee7a m\u1ea3ng \u0111\u00e3 thay \u0111\u1ed5i. Theo suy ngh\u0129 t\u1ef1 nhi\u00ean, ch\u00fang ta s\u1ebd c\u1ed1 g\u1eafng t\u00ecm c\u00e1ch k\u1ebft h\u1ee3p th\u00f4ng tin c\u1ee7a b\u1ed9 tr\u1ea1ng th\u00e1i \\(n\\) s\u1ed1 l\u1ea1i th\u00e0nh m\u1ed9t s\u1ed1 nguy\u00ean duy nh\u1ea5t. M\u1ed9t c\u00e1ch kh\u1ea3 thi \u0111\u1ec3 l\u00e0m \u0111i\u1ec1u n\u00e0y ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb Nim, k\u00fd hi\u1ec7u l\u00e0 \\(g\\).</p> <p>\u0110\u1ea7u ti\u00ean, h\u00e3y gi\u1ea3i quy\u1ebft tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n nh\u1ea5t - ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ed1ng s\u1ecfi duy nh\u1ea5t v\u1edbi \\(p\\) vi\u00ean s\u1ecfi. - Theo tr\u1ef1c gi\u00e1c, v\u00ec th\u00f4ng tin duy nh\u1ea5t ta c\u00f3 l\u00e0 s\u1ed1 l\u01b0\u1ee3ng s\u1ecfi trong \u0111\u1ed1ng, ta c\u00f3 th\u1ec3 gi\u1ea3 s\u1eed r\u1eb1ng gi\u00e1 tr\u1ecb Nim c\u1ee7a tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean \\(p\\) cho bi\u1ebft s\u1ed1 s\u1ecfi c\u00f2n l\u1ea1i. - Ch\u00fang ta th\u1ea5y r\u1eb1ng n\u1ebfu \\(p &gt; 0\\) th\u00ec tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i hi\u1ec7n t\u1ea1i thu\u1ed9c \\(N\\), ng\u01b0\u1ee3c l\u1ea1i n\u1ebfu \\(p = 0\\) th\u00ec tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i hi\u1ec7n t\u1ea1i thu\u1ed9c \\(P\\). \u0110i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i th\u00edch b\u1eb1ng vi\u1ec7c n\u1ebfu s\u1ed1 s\u1ecfi l\u00e0 s\u1ed1 d\u01b0\u01a1ng, ng\u01b0\u1eddi \u0111i tr\u01b0\u1edbc lu\u00f4n c\u00f3 th\u1ec3 l\u1ea5y h\u1ebft s\u1ecfi n\u00ean ng\u01b0\u1eddi \u0111i sau lu\u00f4n thua. T\u1eeb tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n n\u00e0y, ta m\u01b0\u1eddng t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c \u0111i\u1ec1u m\u00e0 gi\u00e1 tr\u1ecb Nim \\(g\\) ph\u1ea3n \u00e1nh: tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i hi\u1ec7n t\u1ea1i thu\u1ed9c \\(N\\) khi gi\u00e1 tr\u1ecb Nim d\u01b0\u01a1ng v\u00e0 thu\u1ed9c \\(P\\) khi gi\u00e1 tr\u1ecb Nim b\u1eb1ng \\(0\\).</p> <p>Ti\u1ebfp theo, ch\u00fang ta s\u1ebd t\u00ecm c\u00e1ch gh\u00e9p c\u00e1c \u0111\u1ed1ng s\u1ecfi \u0111\u01a1n l\u1ea1i th\u00e0nh m\u1ed9t tr\u00f2 ch\u01a1i ho\u00e0n ch\u1ec9nh g\u1ed3m \\(n\\) \u0111\u1ed1ng s\u1ecfi. C\u1ee5 th\u1ec3 h\u01a1n, ta s\u1ebd t\u00ecm ra m\u1ed9t ph\u00e9p to\u00e1n \\(A \\oplus B\\) \u0111\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb Nim c\u1ee7a tr\u00f2 ch\u01a1i m\u1edbi khi k\u1ebft h\u1ee3p hai tr\u00f2 ch\u01a1i c\u00f3 gi\u00e1 tr\u1ecb Nim l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(A\\) v\u00e0 \\(B\\) l\u1ea1i. Ta s\u1ebd li\u1ec7t k\u00ea m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t c\u1ea7n c\u00f3 c\u1ee7a ph\u00e9p to\u00e1n n\u00e0y \u0111\u1ec3 c\u00f3 th\u1ec3 g\u1ed9p c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a c\u1ed9t l\u1ea1i: - \\((A \\oplus B) \\oplus C = A \\oplus (B \\oplus C)\\), v\u00e0 \\(A \\oplus B = B \\oplus A\\), ngh\u0129a l\u00e0 \\(\\oplus\\) c\u00f3 t\u00ednh ch\u1ea5t k\u1ebft h\u1ee3p v\u00e0 giao ho\u00e1n. T\u00ednh ch\u1ea5t n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i th\u00edch b\u1eb1ng l\u1eadp lu\u1eadn r\u1eb1ng th\u1ee9 t\u1ef1 c\u00e1c c\u1ecdc kh\u00f4ng th\u1ef1c s\u1ef1 quan tr\u1ecdng n\u00ean khi \u0111\u1ed5i th\u1ee9 t\u1ef1 k\u1ebft h\u1ee3p th\u00ec gi\u00e1 tr\u1ecb Nim kh\u00f4ng thay \u0111\u1ed5i. - \\(A \\oplus 0 = A\\), ngh\u0129a l\u00e0, ph\u1ea7n t\u1eed trung h\u00f2a c\u1ee7a to\u00e1n t\u1eed n\u00e0y l\u00e0 \\(0\\). \u0110i\u1ec1u n\u00e0y r\u1ea5t hi\u1ec3n nhi\u00ean v\u00ec n\u1ebfu b\u1ea1n th\u00eam m\u1ed9t \u0111\u1ed1ng s\u1ecfi tr\u1ed1ng v\u00e0o tr\u00f2 ch\u01a1i, th\u00ec tr\u00f2 ch\u01a1i v\u1eabn kh\u00f4ng thay \u0111\u1ed5i, do \u0111\u00f3 gi\u00e1 tr\u1ecb Nim v\u1eabn nh\u01b0 c\u0169. - \\(A \\oplus A = 0\\), ngh\u0129a l\u00e0 ph\u1ea7n t\u1eed \u0111\u1ed1i c\u1ee7a m\u1ed7i tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i l\u00e0 ch\u00ednh n\u00f3. T\u1ea1i sao \u0111i\u1ec1u n\u00e0y l\u1ea1i \u0111\u00fang?  Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 hai \u0111\u1ed1ng s\u1ecfi gi\u1ed1ng nhau, m\u1ed7i \u0111\u1ed1ng c\u00f3 \\(p\\) vi\u00ean s\u1ecfi. L\u00fac \u0111\u00f3, ng\u01b0\u1eddi \u0111i sau lu\u00f4n c\u00f3 m\u1ed9t chi\u1ebfn l\u01b0\u1ee3c chi\u1ebfn th\u1eafng, \u0111\u00f3 l\u00e0 ch\u1ec9 sao ch\u00e9p b\u01b0\u1edbc \u0111i c\u1ee7a ng\u01b0\u1eddi \u0111i tr\u01b0\u1edbc! \u0110i\u1ec1u t\u01b0\u01a1ng t\u1ef1 x\u1ea3y ra v\u1edbi tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t. Do \u0111\u00f3, ng\u01b0\u1eddi \u0111i tr\u01b0\u1edbc s\u1ebd lu\u00f4n l\u00e0 ng\u01b0\u1eddi thua, t\u1ee9c tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i thu\u1ed9c \\(P\\), nh\u01b0 ta \u0111\u00e3 l\u1eadp lu\u1eadn \u1edf v\u00ed d\u1ee5 tr\u01b0\u1edbc, tr\u1ea1ng th\u00e1i thu\u1ed9c \\(P\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi \\(g = 0\\), do \u0111\u00f3 \\(A \\oplus A = 0\\).</p> <p>Ba thu\u1ed9c t\u00ednh n\u00e0y, \u0111\u1eb7c bi\u1ec7t nh\u1ea5t l\u00e0 t\u00ednh ch\u1ea5t \\(A \\oplus A = 0\\) gi\u00fap ch\u00fang ta t\u00ecm ra m\u1ed9t \u1ee9ng c\u1eed vi\u00ean t\u00ecm n\u0103ng, \u0111\u00f3 l\u00e0 ph\u00e9p bitwise XOR. V\u00e0 qu\u1ea3 th\u1eadt ph\u00e9p to\u00e1n n\u00e0y c\u0169ng ch\u00ednh l\u00e0 \u0111\u00e1p \u00e1n ch\u00fang ta c\u1ea7n t\u00ecm, \u0111\u1ecbnh l\u00fd Bouton \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf ph\u00eda d\u01b0\u1edbi s\u1ebd ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a vi\u1ec7c n\u00e0y.</p> <p>Th\u1ef1c ch\u1ea5t, ph\u00e9p bitwise XOR ch\u1ec9 l\u00e0 ph\u00e9p c\u1ed9ng modulo \\(2\\) tr\u00ean t\u1eebng bit, do \u0111\u00f3 ch\u00fang ta hay g\u1ecdi gi\u00e1 tr\u1ecb Nim l\u00e0 t\u1ed5ng Nim. T\u1ed5ng Nim c\u1ee7a m\u1ed9t tr\u00f2 ch\u01a1i c\u00f3 tr\u1ea1ng th\u00e1i \\((p_1, p_2, \\ldots, p_n)\\) thu \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch th\u1ef1c hi\u1ec7n ph\u00e9p XOR c\u00e1c \\(p_i\\) l\u1ea1i v\u1edbi nhau. \\(\\(g = p_1 \\oplus p_2 \\oplus \\ldots \\oplus p_n\\)\\)</p> <p>V\u00ed d\u1ee5: v\u1edbi tr\u00f2 ch\u01a1i Nim c\u00f3 ba \u0111\u1ed1ng s\u1ecfi v\u1edbi s\u1ed1 s\u1ecfi l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(5\\), \\(7\\), \\(3\\) th\u00ec t\u1ed5ng Nim l\u00e0 \\(0101 \\oplus 0111 \\oplus 0011 = 0001\\).</p>"},{"location":"algo/math/game-theory/#inh-ly-bouton","title":"\u0110\u1ecbnh l\u00fd Bouton","text":"<p>Tuy nhi\u00ean, trong ph\u1ea7n tr\u00ecnh b\u00e0y \u1edf ph\u00eda tr\u00ean c\u00f3 m\u1ed9t gi\u1ea3 thuy\u1ebft r\u1ea5t quan tr\u1ecdng m\u00e0 ta ch\u1ec9 m\u1edbi th\u1eeba nh\u1eadn ch\u1ee9 ch\u01b0a ch\u1ee9ng minh, \u0111\u00f3 l\u00e0 tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i hi\u1ec7n t\u1ea1i thu\u1ed9c \\(N\\) khi gi\u00e1 tr\u1ecb Nim d\u01b0\u01a1ng v\u00e0 thu\u1ed9c \\(P\\) khi gi\u00e1 tr\u1ecb Nim b\u1eb1ng \\(0\\). Th\u1ef1c ra, nh\u1eadn x\u00e9t \u0111\u00f3 l\u00e0 m\u1ed9t \u0111\u1ecbnh l\u00fd \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh, g\u1ecdi l\u00e0 \u0111\u1ecbnh l\u00fd Bouton. Ph\u1ea7n n\u00e0y khuy\u1ebfn kh\u00edch b\u1ea1n \u0111\u1ecdc hi\u1ec3u v\u1ec1 c\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a ph\u00e9p to\u00e1n bitwise XOR.</p> <p>\u0110\u1ecbnh l\u00fd Bouton: tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i Nim \\((p_1, p_2, \\ldots, p_n)\\) thu\u1ed9c \\(P\\) khi v\u00e0 ch\u1ec9 khi t\u1ed5ng Nim \\(g\\) c\u1ee7a n\u00f3 b\u1eb1ng \\(0\\).</p> <p>Ch\u1ee9ng minh</p> <p>G\u1ecdi \\(\\hat{P}\\) l\u00e0 t\u1eadp g\u1ed3m c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 t\u1ed5ng Nim b\u1eb1ng \\(0\\) v\u00e0 \\(\\hat{N}\\) l\u00e0 t\u1eadp g\u1ed3m c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 t\u1ed5ng Nim l\u1edbn h\u01a1n \\(0\\). Ta nh\u1eadn x\u00e9t hai t\u1eadp n\u00e0y c\u00f3 c\u00e1c t\u00ednh ch\u1ea5t sau:</p> <p>\u0110\u1ea7u ti\u00ean, tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac l\u00e0 \\((0,\\ldots,0)\\) thu\u1ed9c \\(\\hat{P}\\) do c\u00f3 t\u1ed5ng Nim l\u00e0 \\(0\\)</p> <p>Th\u1ee9 hai, v\u1edbi m\u1ed9t tr\u1ea1ng th\u00e1i thu\u1ed9c \\(\\hat{N}\\) (\\(g &gt; 0\\)), ta lu\u00f4n c\u00f3 th\u1ec3 \u0111i t\u1edbi m\u1ed9t tr\u1ea1ng th\u00e1i thu\u1ed9c \\(\\hat{P}\\) (\\(g = 0\\)). \u0110\u1ec3 ch\u1ee9ng minh, ch\u1ecdn m\u1ed9t \u0111\u1ed1ng s\u1ecfi th\u1ee9 \\(i\\) c\u00f3 \\(p_i\\) s\u1ecfi v\u00e0 bi\u1ebfn n\u00f3 th\u00e0nh \\(p'_i\\) sao cho \\(p'_i = g \\oplus p_i &lt; p_i\\), ta c\u00f3 \u0111\u01b0\u1ee3c t\u1ed5ng Nim m\u1edbi \\(g'\\) nh\u01b0 sau:</p> \\[\\begin{align*}     g' &amp;= p_1 \\oplus p_2 \\oplus \\ldots \\oplus p'_i \\oplus \\ldots \\oplus p_n \\\\         &amp;=  p_1 \\oplus p_2 \\oplus \\ldots \\oplus [p_i \\oplus g] \\oplus \\ldots \\oplus p_n \\\\         &amp;=  (p_1 \\oplus p_2 \\oplus \\ldots \\oplus p_i \\oplus \\ldots \\oplus p_n) \\oplus g \\\\         &amp;= g \\oplus g = 0 \\end{align*}\\] <p>L\u01b0u \u00fd r\u1eb1ng ph\u00e9p XOR kh\u00f4ng gi\u1ed1ng ph\u00e9p c\u1ed9ng th\u00f4ng th\u01b0\u1eddng. \u1ede ph\u00e9p c\u1ed9ng hai s\u1ed1 nguy\u00ean d\u01b0\u01a1ng, k\u1ebft qu\u1ea3 lu\u00f4n l\u1edbn h\u01a1n c\u00e1c to\u00e1n h\u1ea1ng ban \u0111\u1ea7u. Tuy nhi\u00ean, trong ph\u00e9p XOR \u0111i\u1ec1u n\u00e0y kh\u00f4ng x\u1ea3y ra, k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 l\u1edbn h\u01a1n ho\u1eb7c nh\u1ecf h\u01a1n c\u00e1c to\u00e1n h\u1ea1ng ban \u0111\u1ea7u. Do \u0111\u00f3 vi\u1ec7c ta c\u00f3 th\u1ec3 \u0111\u1ea3m b\u1ea3o lu\u00f4n t\u1ed3n t\u1ea1i \u0111\u1ed1ng s\u1ecfi \\(i\\) th\u1ecfa m\u00e3n y\u00eau c\u1ea7u \\(p'_i = g \\oplus p_i &lt; p_i\\) kh\u00f4ng ph\u1ea3i l\u00e0 \u0111i\u1ec1u hi\u1ec3n nhi\u00ean v\u00e0 c\u1ea7n \u0111\u01b0\u1ee3c ch\u1ee9ng minh.</p> <p>V\u00ec \\(g &gt; 0\\) n\u00ean  bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a \\(g\\) lu\u00f4n t\u1ed3n t\u1ea1i bit tr\u00e1i nh\u1ea5t b\u1eb1ng \\(1\\) (t\u1ea1m g\u1ecdi l\u00e0 \\(d\\)).Khi \u0111\u00f3, x\u00e9t bit th\u1ee9 \\(d\\) c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c c\u1ed9t \\(p_i\\), ta c\u00f3 s\u1ed1 l\u01b0\u1ee3ng \\(p_i\\) c\u00f3 bit th\u1ee9 \\(d\\) b\u1eb1ng \\(1\\) ph\u1ea3i l\u1ebb (theo t\u00ednh ch\u1ea5t c\u1ee7a ph\u00e9p XOR), do \u0111\u00f3 lu\u00f4n t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u1ed1ng s\u1ecfi c\u00f3 bit th\u1ee9 \\(d\\) b\u1eb1ng \\(1\\). Ch\u1ecdn \u0111\u1ed1ng s\u1ecfi c\u00f3 bit th\u1ee9 \\(d\\) b\u1eb1ng \\(1\\) \u0111\u00f3 \u0111\u1ec3 th\u1ef1c hi\u1ec7n b\u1ed1c s\u1ecfi, ta th\u1ea5y \\(p'_i = p_i \\oplus g &lt; p_i\\) b\u1edfi v\u00ec khi XOR bit t\u1ea1i v\u1ecb tr\u00ed \\(d\\) b\u1eb1ng \\(1 \\oplus 1 = 0\\), do \u0111\u00f3 \\(p'_i\\) lu\u00f4n m\u1ea5t m\u1ed9t bit \\(1\\) t\u1ea1i v\u1ecb tr\u00ed \\(d\\) so v\u1edbi \\(p_i\\).</p> <p>V\u00ed d\u1ee5, n\u1ebfu tr\u00f2 ch\u01a1i Nim hi\u1ec7n t\u1ea1i c\u00f3 \\(4\\) c\u1ed9t c\u00f3 s\u1ed1 s\u1ecfi l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(7\\), \\(10\\), \\(12\\), \\(5\\), th\u00ec thao t\u00e1c t\u00ednh t\u1ed5ng Nim v\u00e0 ch\u1ecdn c\u1ed9t \u0111\u1ec3 l\u1ea5y s\u1ecfi ra s\u1ebd di\u1ec5n ra nh\u01b0 h\u00ecnh d\u01b0\u1edbi</p> <p></p> <p>Cu\u1ed1i c\u00f9ng, v\u1edbi m\u1ed9t tr\u1ea1ng th\u00e1i thu\u1ed9c \\(\\hat{P}\\) (t\u1ee9c \\(g = 0\\)), m\u1ecdi c\u00e1ch \u0111i \u0111\u1ec1u d\u1eabn t\u1edbi tr\u1ea1ng th\u00e1i thu\u1ed9c \\(\\hat{N}\\) (t\u1ee9c \\(g &gt; 0\\)). Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh d\u1ec5 d\u00e0ng b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p ph\u1ea3n ch\u1ee9ng. Gi\u1ea3 s\u1eed tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i hi\u1ec7n t\u1ea1i l\u00e0 \\((p_1, \\ldots, p_n)\\) c\u00f3 t\u1ed5ng Nim \\(g = 0\\) v\u00e0 t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u1ed1ng s\u1ecfi \\(i\\) sao cho khi l\u1ea5y b\u1edbt s\u1ecfi t\u1eeb \\(i\\) ra tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i m\u1edbi c\u00f3 t\u1ed5ng Nim \\(g' = 0\\). Khi \u0111\u00f3</p> \\[\\begin{align*}     g' &amp;= 0 = g     \\\\ \\Leftrightarrow     p_1 \\oplus p_2 \\oplus \\ldots \\oplus p'_i \\oplus \\ldots \\oplus p_n &amp;=  p_1 \\oplus p_2 \\oplus \\ldots \\oplus p_i \\oplus \\ldots \\oplus p_n     \\\\ \\Leftrightarrow     p'_i &amp;= p_i \\end{align*}\\] <p>\u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ta kh\u00f4ng b\u1ed1c vi\u00ean s\u1ecfi n\u00e0o t\u1eeb \u0111\u1ed1ng \\(p_i\\) ra c\u1ea3, m\u00e0 theo gi\u1ea3 thuy\u1ebft ta ph\u1ea3i b\u1ed1c \u00edt nh\u1ea5t m\u1ed9t vi\u00ean (\\(p'_i &lt; p_i\\)), v\u00ec v\u1eady kh\u00f4ng th\u1ec3 t\u1ed3n t\u1ea1i \u0111\u1ed1ng s\u1ecfi \\(i\\) n\u00e0o th\u1ecfa m\u00e3n y\u00eau c\u1ea7u.</p> <p>V\u00ed d\u1ee5, n\u1ebfu tr\u00f2 ch\u01a1i Nim hi\u1ec7n t\u1ea1i c\u00f3 \\(3\\) \u0111\u1ed1ng c\u00f3 s\u1ed1 s\u1ecfi l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(5\\), \\(6\\), \\(3\\), th\u00ec t\u1ed5ng Nim \\(g = 0\\). X\u00e9t bit \u0111\u1ea7u ti\u00ean t\u1eeb ph\u1ea3i qua, ta th\u1ea5y \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng bit \u0111\u01b0\u1ee3c b\u1eadt t\u1ea1i v\u1ecb tr\u00ed n\u00e0y l\u00e0 s\u1ed1 ch\u1eb5n (\\(2\\), t\u01b0\u01a1ng \u1ee9ng v\u1edbi bit \u0111\u1ea7u ti\u00ean c\u1ee7a \\(5\\) v\u00e0 \\(3\\)). T\u01b0\u01a1ng t\u1ef1, s\u1ed1 l\u01b0\u1ee3ng c\u00e1c bit \u0111\u01b0\u1ee3c b\u1eadt t\u1ea1i c\u00e1c v\u1ecb tr\u1ecb kh\u00e1c \u0111\u1ec1u c\u00f3 t\u00ednh ch\u1ea5t n\u00e0y. \u0110i\u1ec1u n\u00e0y kh\u00f4ng ph\u1ea3i l\u00e0 tr\u00f9ng h\u1ee3p m\u00e0 do t\u00ednh ch\u1ea5t c\u1ee7a ph\u00e9p XOR, n\u1ebfu mu\u1ed1n bit th\u1ee9 \\(i\\) trong k\u1ebft qu\u1ea3 b\u1eb1ng \\(0\\) th\u00ec s\u1ed1 l\u01b0\u1ee3ng bit th\u1ee9 \\(i\\) \u0111\u01b0\u1ee3c b\u1eadt trong c\u00e1c to\u00e1n h\u1ea1ng ph\u1ea3i l\u00e0 s\u1ed1 ch\u1eb5n. T\u1eeb \u0111\u00e2y ta nh\u1eadn th\u1ea5y, vi\u1ec7c b\u1ecf s\u1ecfi \u1edf m\u1ed9t \u0111\u1ed1ng s\u1ecfi ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0m thay \u0111\u1ed5i s\u1ed1 l\u01b0\u1ee3ng bit \u0111\u01b0\u1ee3c b\u1eadt t\u1ea1i m\u1ed7i v\u1ecb tr\u00ed \\(i\\) l\u00ean ho\u1eb7c xu\u1ed1ng 1 \u0111\u01a1n v\u1ecb, do \u0111\u00f3 d\u00f9 cho l\u1ea5y s\u1ecfi \u1edf c\u1ed9t n\u00e0o \u0111i n\u1eefa th\u00ec v\u1eabn s\u1ebd xu\u1ea5t hi\u1ec7n m\u1ed9t v\u1ecb tr\u00ed c\u00f3 s\u1ed1 bit \u0111\u01b0\u1ee3c b\u1eadt l\u00e0 l\u1ebb.</p> <p></p> <p>R\u00f5 r\u00e0ng \\(\\hat{P}\\) v\u00e0 \\(\\hat{N}\\) th\u1ecfa m\u00e3n ba \u0111i\u1ec1u ki\u1ec7n theo \u0111\u1ecbnh ngh\u0129a c\u1ee7a t\u1eadp \\(P\\) v\u00e0 \\(N\\) trong tr\u00f2 ch\u01a1i t\u1ed5ng qu\u00e1t, v\u00ec v\u1eady \\(P = \\hat{P}\\) v\u00e0 \\(N = \\hat{N}\\). \\(\\square\\)</p> <p>Qua \u0111\u1ecbnh l\u00fd Bouton, ch\u00fang ta c\u00f3 m\u1ed9t c\u00e1ch x\u00e1c \u0111\u1ecbnh t\u1eadp \\(P\\) v\u00e0 \\(N\\) d\u1ef1a tr\u00ean t\u1ed5ng Nim, h\u01a1n th\u1ebf n\u1eefa v\u1edbi vi\u1ec7c ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd Bouton, ta kh\u00f4ng ch\u1ec9 bi\u1ebft \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i th\u1eafng/thua c\u1ee7a tr\u00f2 ch\u01a1i m\u00e0 c\u00f2n c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c m\u1ed9t chi\u1ebfn thu\u1eadt th\u1eafng c\u1ee5 th\u1ec3.</p>"},{"location":"algo/math/game-theory/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>H\u00e0m <code>isInP</code> trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y r\u1ea5t \u0111\u01a1n gi\u1ea3n, n\u1ebfu l\u01b0u s\u1ed1 l\u01b0\u1ee3ng s\u1ecfi m\u1ed7i \u0111\u1ed1ng v\u00e0o vector s\u1ed1 nguy\u00ean th\u00ec thu\u1eadt to\u00e1n ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 XOR c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed v\u1edbi nhau, \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(n)\\). <pre><code>bool isInP(vector&lt;int&gt; v) {\n    int g = 0;\n    for (auto p: v)\n        g ^= p;\n    return (g == 0);\n}\n</code></pre></p>"},{"location":"algo/math/game-theory/#misere-nim","title":"Mis\u00e8re Nim","text":"<p>Ngo\u00e0i tr\u00f2 ch\u01a1i Nim chu\u1ea9n, c\u00f3 r\u1ea5t nhi\u1ec1u bi\u1ebfn th\u1ec3 c\u1ee7a tr\u00f2 ch\u01a1i Nim. M\u1ed9t trong s\u1ed1 \u0111\u00f3 l\u00e0 mis\u00e8re Nim, c\u00e1ch ch\u01a1i gi\u1ed1ng nh\u01b0 tr\u00f2 ch\u01a1i Nim b\u00ecnh th\u01b0\u1eddng, tuy nhi\u00ean thay v\u00ec ng\u01b0\u1eddi l\u1ea5y vi\u00ean s\u1ecfi cu\u1ed1i c\u00f9ng s\u1ebd th\u1eafng, trong Mis\u00e8re Nim th\u00ec ng\u01b0\u1eddi l\u1ea5y vi\u00ean s\u1ecfi cu\u1ed1i c\u00f9ng s\u1ebd thua. </p> <p>Khi \u0111\u00f3, d\u1ef1a v\u00e0o tr\u1ea1ng th\u00e1i b\u1eaft \u0111\u1ea7u, ta c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh vi\u1ec7c th\u1eafng thua nh\u01b0 sau:  - N\u1ebfu t\u1ea5t c\u1ea3 \u0111\u1ed1ng s\u1ecfi \u0111\u1ec1u c\u00f3 s\u1ed1 s\u1ecfi nh\u1ecf h\u01a1n h\u01a1n \\(2\\) (t\u1ee9c ch\u1ec9 g\u1ed3m c\u00e1c \u0111\u1ed1ng s\u1ecfi c\u00f3 \\(0\\) v\u00e0 \\(1\\) vi\u00ean): n\u1ebfu s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed1ng s\u1ecfi c\u00f2n s\u1ecfi l\u00e0 l\u1ebb (t\u1ee9c gi\u00e1 tr\u1ecb Nim \\(g=1\\)) th\u00ec ng\u01b0\u1eddi ch\u01a1i \u0111\u1ea7u ti\u00ean s\u1ebd thua, ng\u01b0\u1ee3c l\u1ea1i (t\u1ee9c \\(g=0\\)) th\u00ec ng\u01b0\u1eddi ch\u01a1i \u0111\u1ea7u ti\u00ean s\u1ebd th\u1eafng. - C\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i: Ng\u01b0\u1eddi ch\u01a1i \u0111\u1ea7u ti\u00ean s\u1ebd th\u1eafng n\u1ebfu gi\u00e1 tr\u1ecb Nim hi\u1ec7n t\u1ea1i \\(g &gt; 0\\) , ng\u01b0\u1ee3c l\u1ea1i s\u1ebd thua. Chi\u1ebfn thu\u1eadt \u0111\u1ec3 gi\u00e0nh chi\u1ebfn th\u1eafng l\u00e0 ch\u01a1i theo chi\u1ebfn l\u01b0\u1ee3c Nim th\u00f4ng th\u01b0\u1eddng, tr\u1eeb khi b\u01b0\u1edbc di chuy\u1ec3n ti\u1ebfp theo l\u00e0m c\u00e1c \u0111\u1ed1ng s\u1ecfi \u0111\u1ec1u c\u00f3 nh\u1ecf h\u01a1n \\(2\\) vi\u00ean, l\u00fac \u0111\u00f3 ng\u01b0\u1eddi ch\u01a1i th\u1ef1c hi\u1ec7n n\u01b0\u1edbc \u0111i hi\u1ec7n t\u1ea1i s\u1ebd \u0111\u1eb7t s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed1ng c\u00f3 \\(1\\) vi\u00ean s\u1ecfi l\u00e0 s\u1ed1 l\u1ebb \u0111\u1ec3 \u00e9p ng\u01b0\u1eddi kia ph\u1ea3i b\u1ed1c vi\u00ean cu\u1ed1i c\u00f9ng. Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c n\u1ebfu m\u1ed9t ng\u01b0\u1eddi \u0111ang \u1edf tr\u1ea1ng th\u00e1i c\u00f3 gi\u00e1 tr\u1ecb Nim \\(g &gt; 0\\), anh ta lu\u00f4n c\u00f3 th\u1ec3 quy\u1ebft \u0111\u1ecbnh s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed1ng s\u1ecfi l\u00e0 ch\u1eb5n hay l\u1ebb v\u00e0 do \u0111\u00f3 lu\u00f4n l\u00e0 ng\u01b0\u1eddi chi\u1ebfn th\u1eafng.</p>"},{"location":"algo/math/game-theory/#inh-ly-sprague-grundy","title":"\u0110\u1ecbnh l\u00fd Sprague-Grundy","text":""},{"location":"algo/math/game-theory/#o-thi-cua-tro-choi","title":"\u0110\u1ed3 th\u1ecb c\u1ee7a tr\u00f2 ch\u01a1i","text":"<p>N\u1ebfu xem m\u1ed7i tr\u1ea1ng th\u00e1i trong t\u1eadp tr\u1ea1ng th\u00e1i \\(S\\) l\u00e0 m\u1ed9t \u0111\u1ec9nh, m\u1ed7i c\u1ea1nh c\u00f3 h\u01b0\u1edbng \\((u,v)\\) th\u1ec3 hi\u1ec7n cho vi\u1ec7c t\u1eeb tr\u1ea1ng \\(u\\) c\u00f3 th\u1ec3 di chuy\u1ec3n \u0111\u1ebfn tr\u1ea1ng th\u00e1i \\(v\\) (t\u1ee9c \\((u,v)\\) l\u00e0 m\u1ed9t ph\u1ea7n t\u1eed thu\u1ed9c t\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n di chuy\u1ec3n h\u1ee3p l\u1ec7 \\(Q\\)) th\u00ec ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\((V,E)\\) v\u1edbi t\u1eadp \u0111\u1ec9nh \\(V\\) v\u00e0 t\u1eadp c\u1ea1nh \\(E\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1eadp tr\u1ea1ng th\u00e1i \\(S\\) v\u00e0 t\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n \\(Q\\) nh\u01b0 \u0111\u00e3 n\u00f3i. \u1ede \u0111\u00e2y c\u00f3 m\u1ed9t quan s\u00e1t quan tr\u1ecdng r\u1eb1ng ta t\u1ea5t c\u1ea3 c\u00e1c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac s\u1ebd \u1ee9ng v\u1edbi nh\u1eefng \u0111\u1ec9nh nh\u1eefng \u0111\u1ec9nh c\u00f3 b\u1eadc ra b\u1eb1ng \\(0\\) (t\u1ee9c t\u1eeb \u0111\u1ec9nh n\u00e0y kh\u00f4ng \u0111i t\u1edbi \u0111\u01b0\u1ee3c b\u1ea5t k\u1ef3 \u0111\u1ec9nh n\u00e0o kh\u00e1c)</p> <p>V\u00ed d\u1ee5: trong tr\u00f2 ch\u01a1i b\u1ed1c s\u1ecfi \u1edf ph\u1ea7n \u0111\u1ea7u, gi\u1ea3 s\u1eed ta ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ed1ng s\u1ecfi \\(4\\) vi\u00ean, th\u00ec \u0111\u1ed3 th\u1ecb c\u1ee7a tr\u00f2 ch\u01a1i s\u1ebd nh\u01b0 h\u00ecnh d\u01b0\u1edbi, tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac \\(0\\) c\u00f3 b\u1eadc ra b\u1eb1ng \\(0\\).</p> <p></p> <p>C\u0169ng c\u1ea7n ch\u00fa \u00fd r\u1eb1ng c\u00e1c tr\u00f2 ch\u01a1i \u0111\u01b0\u1ee3c xem x\u00e9t trong ph\u1ea7n \u0111\u1ecbnh l\u00fd Sprague-Grundy c\u00f3 m\u1ed9t t\u00ednh ch\u1ea5t quan tr\u1ecdng, \u0111\u00f3 l\u00e0 ch\u00fang s\u1ebd k\u1ebft th\u00fac trong h\u1eefu h\u1ea1n b\u01b0\u1edbc. Khi \u0111\u00f3, hi\u1ec3n nhi\u00ean \u0111\u1ed3 th\u1ecb tr\u00f2 ch\u01a1i ph\u1ea3i kh\u00f4ng t\u1ed3n t\u1ea1i chu tr\u00ecnh, v\u00ec n\u1ebfu t\u1ed3n t\u1ea1i chu tr\u00ecnh, s\u1ebd t\u1ed3n t\u1ea1i tr\u01b0\u1eddng h\u1ee3p ng\u01b0\u1eddi ch\u01a1i c\u1ed1 t\u00ecnh \u0111i theo chu tr\u00ecnh \u0111\u00f3 v\u00e0 s\u1ebd kh\u00f4ng bao gi\u1edd \u0111\u1ebfn \u0111\u01b0\u1ee3c \u0111\u1ec9nh k\u1ebft th\u00fac, ngh\u0129a l\u00e0 khi \u0111\u00f3 tr\u00f2 ch\u01a1i s\u1ebd l\u1eb7p v\u0129nh vi\u1ec5n. Lo\u1ea1i \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng kh\u00f4ng c\u00f3 chu tr\u00ecnh nh\u01b0 tr\u00ean c\u00f2n c\u00f3 th\u1ec3 g\u1ecdi t\u1eaft l\u00e0 DAG (Directed Acyclic Graph).</p>"},{"location":"algo/math/game-theory/#tro-choi-tong","title":"Tr\u00f2 ch\u01a1i t\u1ed5ng","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p nhi\u1ec1u tr\u00f2 ch\u01a1i \u0111\u01a1n l\u1ebb v\u1edbi nhau, ta \u0111\u1eb7t ra kh\u00e1i ni\u1ec7m tr\u00f2 ch\u01a1i t\u1ed5ng.</p> <p>Tr\u00f2 ch\u01a1i t\u1ed5ng: Cho tr\u00f2 ch\u01a1i \\(G_1(S_1,Q_1, T_1)\\) v\u00e0 \\(G_2(S_2,Q_2,T_2)\\) v\u1edbi \\(S_i,Q_i, T_i\\) l\u00e0 t\u1eadp tr\u1ea1ng th\u00e1i, t\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 v\u00e0 t\u1eadp tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac \u1ee9ng v\u1edbi tr\u00f2 ch\u01a1i \\(1\\) v\u00e0 \\(2\\), tr\u00f2 ch\u01a1i t\u1ed5ng \\(G = G_1 + G_2\\) l\u00e0 tr\u00f2 ch\u01a1i c\u00f3: - T\u1eadp tr\u1ea1ng th\u00e1i \\(S = S_1 \\times S_2\\), t\u1ee9c tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i t\u1ed5ng l\u00e0 c\u00e1c c\u1eb7p tr\u1ea1ng th\u00e1i \\((x_1, x_2)\\) v\u1edbi \\(x_1\\) l\u00e0 tr\u1ea1ng th\u00e1i thu\u1ed9c \\(S_1\\) v\u00e0 \\(x_2\\) l\u00e0 tr\u1ea1ng th\u00e1i thu\u1ed9c \\(S_2\\). - T\u1eadp c\u00e1c b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 \\(Q = (Q_1\\times \\{x_2\\}) \\cup (\\{x_1\\} \\times Q_2)\\), ngh\u0129a l\u00e0 m\u1ed9t b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 trong tr\u00f2 ch\u01a1i t\u1ed5ng s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c th\u1ef1c hi\u1ec7n m\u1ed9t b\u01b0\u1edbc di chuy\u1ec3n h\u1ee3p l\u1ec7 trong tr\u00f2 ch\u01a1i con \\(G_1\\) ho\u1eb7c \\(G_2\\) v\u00e0 gi\u1eef nguy\u00ean tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i c\u00f2n l\u1ea1i. - T\u1eadp c\u00e1c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac \\(\\(T = \\{ (x_1, x_2) : x_1 \\in T_1 \\wedge x_2 \\in T_2 \\}\\)\\), ngh\u0129a l\u00e0 tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac c\u1ee7a tr\u00f2 ch\u01a1i t\u1ed5ng l\u00e0 tr\u1ea1ng th\u00e1i m\u00e0 c\u1ea3 hai tr\u00f2 ch\u01a1i \\(G_1\\) v\u00e0 \\(G_2\\) \u0111\u1ec1u k\u1ebft th\u00fac.</p> <p>V\u00ed d\u1ee5: tr\u00f2 ch\u01a1i Nim c\u00f3 \\(3\\) \u0111\u1ed1ng s\u1ecfi c\u00f3 th\u1ec3 xem nh\u01b0 tr\u00f2 ch\u01a1i t\u1ed5ng c\u1ee7a ba tr\u00f2 ch\u01a1i \\(G_1\\), \\(G_2\\) v\u00e0 \\(G_3\\), v\u1edbi \\(G_1\\) l\u00e0 tr\u00f2 ch\u01a1i ch\u1ec9 b\u1ed1c \u1edf \u0111\u1ed1ng s\u1ecfi th\u1ee9 \\(1\\), \\(G_2\\) l\u00e0 tr\u00f2 ch\u01a1i ch\u1ec9 b\u1ed1c \u1edf \u0111\u1ed1ng s\u1ecfi th\u1ee9 \\(2\\), \\(G_3\\) l\u00e0 tr\u00f2 ch\u01a1i ch\u1ec9 b\u1ed1c \u1edf \u0111\u1ed1ng s\u1ecfi th\u1ee9 \\(3\\).</p>"},{"location":"algo/math/game-theory/#mo-rong-tro-choi-nim","title":"M\u1edf r\u1ed9ng tr\u00f2 ch\u01a1i Nim","text":"<p>\u0110\u1ecbnh l\u00fd Bouton \u0111\u00e3 cho ch\u00fang ta m\u1ed9t c\u00e1ch gi\u1ea3i r\u1ea5t \u0111\u1eb9p cho tr\u00f2 ch\u01a1i Nim chu\u1ea9n, nh\u01b0ng trong th\u1ef1c t\u1ebf, h\u1ea7u h\u1ebft c\u00e1c b\u00e0i l\u00fd thuy\u1ebft tr\u00f2 ch\u01a1i trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u s\u1ebd kh\u00f4ng l\u00e0 tr\u00f2 ch\u01a1i Nim chu\u1ea9n m\u00e0 s\u1ebd \u0111\u01b0\u1ee3c thay \u0111\u1ed5i lu\u1eadt ch\u01a1i \u1edf m\u1ed9t s\u1ed1 \u0111i\u1ec3m. L\u00fac \u1ea5y, \u0111\u1ecbnh l\u00fd Bouton s\u1ebd kh\u00f4ng th\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c d\u1ea1ng b\u00e0i n\u00e0y. Trong ph\u1ea7n n\u00e0y, ta s\u1ebd tr\u00ecnh b\u00e0y hai \u0111\u1ecbnh l\u00fd quan tr\u1ecdng \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c tr\u00f2 ch\u01a1i c\u00e2n b\u1eb1ng k\u1ebft th\u00fac trong h\u1eefu h\u1ea1n b\u01b0\u1edbc. Tuy nhi\u00ean ta s\u1ebd ch\u1ec9 tr\u00ecnh b\u00e0y v\u1ec1 \u0111\u1ed9ng l\u1ef1c h\u00ecnh th\u00e0nh v\u00e0 \u0111\u1ecbnh ngh\u0129a c\u1ee7a hai \u0111\u1ecbnh l\u00fd. \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, b\u1ea1n \u0111\u1ecdc h\u00e3y \u0111\u1ecdc ph\u1ea7n Ph\u1ee5 l\u1ee5c \u0111\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c ch\u1ee9ng minh.</p> <p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft, ta quay l\u1ea1i chi\u1ebfn l\u01b0\u1ee3c ban \u0111\u1ea7u c\u1ee7a m\u00ecnh - ph\u00e2n t\u00e1ch tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i th\u00e0nh nhi\u1ec1u tr\u00f2 ch\u01a1i con c\u00f3 c\u00f9ng c\u1ea5u tr\u00fac, t\u00ecm m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t c\u1ee7a m\u1ed7i tr\u00f2 ch\u01a1i con, sau \u0111\u00f3 k\u1ebft h\u1ee3p ch\u00fang l\u1ea1i v\u1edbi nhau \u0111\u1ec3 c\u00f3 c\u00e2u tr\u1ea3 l\u1eddi cho tr\u00f2 ch\u01a1i g\u1ed1c.</p> <p>H\u00e3y l\u1ea5y v\u00ed d\u1ee5 v\u1edbi m\u1ed9t bi\u1ebfn th\u1ec3 c\u1ee7a tr\u00f2 ch\u01a1i Nim chu\u1ea9n, trong \u0111\u00f3 ch\u00fang ta c\u00f3 \\(n\\) \u0111\u1ed1ng s\u1ecfi, lu\u1eadt ch\u01a1i v\u1eabn nh\u01b0 c\u0169, ch\u1ec9 kh\u00e1c l\u00e0 s\u1ed1 s\u1ecfi ph\u1ea3i b\u1ed1c \u1edf m\u1ed7i l\u01b0\u1ee3t ph\u1ea3i l\u00e0 s\u1ed1 ch\u00ednh ph\u01b0\u01a1ng (\\(1, 4, \\ldots\\)).</p> <p>\u0110\u1ea7u ti\u00ean, ta c\u0169ng x\u00e9t tr\u00f2 ch\u01a1i \u1edf d\u1ea1ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t: ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ed1ng s\u1ecfi duy nh\u1ea5t v\u1edbi \\(p\\) vi\u00ean. V\u1eady l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 b\u1ea1n bi\u1ebft \u0111\u00f3 l\u00e0 tr\u1ea1ng th\u00e1i thu\u1ed9c \\(P\\) hay tr\u1ea1ng th\u00e1i thu\u1ed9c \\(N\\)?</p> <p>H\u00e3y nh\u00ecn tr\u00f2 ch\u01a1i d\u01b0\u1edbi g\u00f3c \u0111\u1ed9 \u0111\u1ed3 th\u1ecb. \u0110\u1ed3 th\u1ecb n\u00e0y c\u00f3 \\(p + 1\\) \u0111\u1ec9nh c\u00f3 nh\u00e3n l\u1ea7n l\u01b0\u1ee3t l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean t\u1eeb \\(0\\) \u0111\u1ebfn \\(p\\). M\u1ed7i \u0111\u1ec9nh \u0111\u1ed3 th\u1ecb t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i, trong \u0111\u00f3 nh\u00e3n c\u1ee7a n\u00f3 cho bi\u1ebft c\u00f3 bao nhi\u00eau s\u1ecfi c\u00f2n l\u1ea1i trong \u0111\u1ed1ng hi\u1ec7n t\u1ea1i. H\u00ecnh d\u01b0\u1edbi l\u00e0 v\u00ed d\u1ee5 tr\u00f2 ch\u01a1i v\u1edbi m\u1ed9t \u0111\u1ed1ng s\u1ecfi c\u00f3 s\u1ed1 s\u1ecfi \\(p = 5\\). </p> <p>R\u00f5 r\u00e0ng \u0111\u1ec9nh \\(0\\) l\u00e0 \u0111\u1ec9nh k\u1ebft th\u00fac, do \u0111\u00f3 n\u00f3 l\u00e0 \u0111\u1ec9nh thu\u1ed9c \\(P\\). C\u00e1c \u0111\u1ec9nh ti\u1ebfp theo c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh l\u00e0 thu\u1ed9c \\(P\\) hay \\(N\\) nh\u01b0 h\u00ecnh d\u01b0\u1edbi /uploads/game_theory_custom_nim_PN.gif</p> <p>Tuy nhi\u00ean, c\u00e1ch l\u00e0m \u1edf tr\u00ean ch\u1ec9 cho ta tr\u1ea1ng th\u00e1i \u0111\u1ecbnh t\u00ednh c\u1ee7a t\u1eebng tr\u1ea1ng th\u00e1i, \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c gh\u00e9p c\u00e1c tr\u00f2 ch\u01a1i l\u1ea1i, ta c\u1ea7n m\u1ed9t h\u00e0m \u0111\u1ecbnh l\u01b0\u1ee3ng. H\u00e0m m\u00e0 ch\u00fang ta s\u1ebd d\u00f9ng c\u00f3 t\u00ean l\u00e0 h\u00e0m Sprague-Grundy, v\u1edbi m\u1ed9t tr\u1ea1ng th\u00e1i \\(x \\in S\\) th\u00ec gi\u00e1 tr\u1ecb Sprague-Grundy \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau: $$ g(x) = \\text{mex}({g(y): (x,y) \\in Q}) $$</p> <p>Trong \u0111\u1ecbnh ngh\u0129a tr\u00ean c\u00f3 d\u00f9ng h\u00e0m mex (minimum excludant), h\u00e0m n\u00e0y s\u1ebd nh\u1eadn v\u00e0o m\u1ed9t t\u1eadp h\u1ee3p v\u00e0 tr\u1ea3 v\u1ec1 s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m \\(u\\) nh\u1ecf nh\u1ea5t sao cho \\(u\\) kh\u00f4ng n\u1eb1m trong t\u1eadp h\u1ee3p, v\u00ed d\u1ee5 \\(\\text{mex}(\\{0,1,2,5,7\\}) = 3\\). Ngo\u00e0i ra, quy \u01b0\u1edbc \\(\\text{mex}(\\varnothing)=0\\). T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 ph\u00e1t bi\u1ec3u b\u1eb1ng l\u1eddi r\u1eb1ng gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a m\u1ed9t \u0111\u1ec9nh \\(x\\) s\u1ebd l\u00e0 mex c\u1ee7a t\u1eadp h\u1ee3p c\u00e1c gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a \\(y\\) sao cho t\u1eeb \\(x\\) c\u00f3 th\u1ec3 di chuy\u1ec3n tr\u1ef1c ti\u1ebfp \u0111\u1ebfn \\(y\\).</p> <p>C\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0: t\u1ea1i sao l\u1ea1i l\u00e0 h\u00e0m Sprague-Grundy? H\u00e0m n\u00e0y c\u00f3 \u00fd ngh\u0129a g\u00ec trong vi\u1ec7c gi\u1ea3i c\u00e1c tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng?</p> <p>\u0110\u1ec3 th\u1ea5y r\u00f5 h\u01a1n \u00fd ngh\u0129a c\u1ee7a h\u00e0m Sprague-Grundy, ta c\u00f3 th\u1ec3 v\u00ed d\u1ee5 bi\u1ebfn th\u1ec3 c\u1ee7a tr\u00f2 ch\u01a1i Nim \u1edf tr\u00ean. </p> <p>Quan s\u00e1t v\u00ed d\u1ee5 \u1edf tr\u00ean, ta c\u00f3 nh\u1eadn x\u00e9t r\u1eb1ng c\u00e1c tr\u1ea1ng th\u00e1i \\(u\\) thu\u1ed9c \\(P\\) \u0111\u1ec1u c\u00f3 \\(g(u) = 0\\) v\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i \\(u\\) thu\u1ed9c \\(N\\) \u0111\u1ec1u c\u00f3 \\(g(u) &gt; 0\\). \u0110i\u1ec1u n\u00e0y l\u00e0m ta nh\u1eadn ra s\u1ef1 t\u01b0\u01a1ng \u0111\u1ed3ng c\u1ee7a gi\u00e1 tr\u1ecb Sprague-Grundy v\u1edbi m\u1ed9t \u0111\u1ea1i l\u01b0\u1ee3ng \u1edf ph\u1ea7n tr\u01b0\u1edbc - gi\u00e1 tr\u1ecb Nim. \u0110\u00f3 l\u00e0 c\u1ea3m nh\u1eadn ban \u0111\u1ea7u \u0111\u1ec3 c\u00f3 \u0111\u1ecbnh l\u00fd sau.</p> <p>\u0110\u1ecbnh l\u00fd 1: Trong m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, tr\u1ea1ng th\u00e1i \\(u\\) thu\u1ed9c \\(P\\) khi v\u00e0 ch\u1ec9 khi gi\u00e1 tr\u1ecb Sprague-Grundy \\(g(u) = 0\\).</p> <p>V\u1eady v\u1edbi h\u00e0m Sprague-Grundy, ta \u0111\u00e3 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c tr\u00f2 ch\u01a1i \u0111\u01a1n gi\u1ea3n nh\u1ea5t, v\u1ea5n \u0111\u1ec1 ti\u1ebfp theo l\u00e0 gi\u1ea3i tr\u00f2 ch\u01a1i t\u1ed5ng. Ta c\u0169ng s\u1ebd t\u00ecm m\u1ed9t ph\u00e9p to\u00e1n \\(\\oplus\\) \u0111\u1ec3 t\u00ecm ra gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a tr\u00f2 ch\u01a1i t\u1ed5ng t\u1eeb hai tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n. C\u0169ng nh\u01b0 tr\u00f2 ch\u01a1i Nim, ta s\u1ebd th\u1ea5y ph\u00e9p to\u00e1n n\u00e0y c\u00f3 c\u00e1c t\u00ednh ch\u1ea5t k\u1ebft h\u1ee3p, giao ho\u00e1n, ph\u1ea7n t\u1eed trung h\u00f2a l\u00e0 \\(0\\) v\u00e0 ph\u1ea7n t\u1eed \u0111\u1ed1i c\u1ee7a m\u1ed9t tr\u00f2 ch\u01a1i l\u00e0 ch\u00ednh n\u00f3. Do \u0111\u00f3, ta s\u1ebd l\u1ea1i th\u1ea5y ph\u00e9p bitwise XOR l\u00e0 ph\u00e9p to\u00e1n m\u00e0 ch\u00fang ta c\u1ea7n t\u00ecm. T\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a ph\u00e9p to\u00e1n bitwise XOR \u0111\u01b0\u1ee3c kh\u1eb3ng \u0111\u1ecbnh b\u1eb1ng \u0111\u1ecbnh l\u00fd sau</p> <p>\u0110\u1ecbnh l\u00fd 2: v\u1edbi tr\u00f2 ch\u01a1i t\u1ed5ng \\(G = G_1 + \\ldots + G_n\\) v\u00e0 \\(x_1, \\ldots, x_n\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n \\(G_1, \\ldots, G_n\\), khi \u0111\u00f3: $$ g(x_1, \\ldots, x_n) = g_1(x_1) \\oplus \\ldots \\oplus g_n(x_n) $$ V\u1edbi \\(g, g_1, \\ldots, g_n\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 h\u00e0m Sprague-Grundy c\u1ee7a tr\u00f2 ch\u01a1i \\(G, G_1, \\ldots, G_n\\).</p> <p>V\u00ed d\u1ee5: v\u1edbi tr\u00f2 ch\u01a1i Nim bi\u1ebfn th\u1ec3 v\u1edbi lu\u1eadt b\u1ed1c c\u00e1c s\u1ed1 ch\u00ednh ph\u01b0\u01a1ng nh\u01b0 tr\u00ean, nh\u01b0ng b\u00e2y gi\u1edd ta c\u00f3 \\(3\\) \u0111\u1ed1ng s\u1ecfi l\u1ea7n l\u01b0\u1ee3t c\u00f3 \\(5, 4, 1\\) vi\u00ean s\u1ecfi. Khi \u0111\u00f3 ta c\u00f3 th\u1ec3 coi m\u1ed7i \u0111\u1ed1ng s\u1ecfi l\u00e0 m\u1ed9t tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n, v\u00ec v\u1eady gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a tr\u00f2 ch\u01a1i t\u1ed5ng l\u00e0 \\(g(5) \\oplus g(4) \\oplus g(1) = 0 \\oplus 2 \\oplus 1 = 3\\), v\u1eady \u0111\u00e2y l\u00e0 tr\u1ea1ng th\u00e1i m\u00e0 ng\u01b0\u1eddi ch\u01a1i \u0111i \u0111\u1ea7u ti\u00ean s\u1ebd gi\u00e0nh chi\u1ebfn th\u1eafng.</p> <p>Hai \u0111\u1ecbnh l\u00fd 1 v\u00e0 2 trong ph\u1ea7n n\u00e0y c\u00f3 \u00fd ngh\u0129a r\u1ea5t quan tr\u1ecdng, n\u00f3 cho ta c\u00e1ch gi\u1ea3i b\u1ea5t c\u1ee9 tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng n\u00e0o, mi\u1ec5n l\u00e0 tr\u00f2 ch\u01a1i \u0111\u00f3 lu\u00f4n k\u1ebft th\u00fac trong h\u1eefu h\u1ea1n b\u01b0\u1edbc, hay n\u00f3i c\u00e1ch kh\u00e1c \u0111\u1ed3 th\u1ecb c\u1ee7a tr\u00f2 ch\u01a1i l\u00e0 m\u1ed9t DAG. \u0110\u1ecbnh l\u00fd 2 gi\u00fap ch\u00fang ta ph\u00e2n r\u00e3 tr\u00f2 ch\u01a1i ph\u1ee9c t\u1ea1p ra th\u00e0nh nh\u1eefng tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n \u0111\u01a1n gi\u1ea3n h\u01a1n v\u00e0 \u0111\u1ecbnh l\u00fd 1 gi\u00fap ch\u00fang ta gi\u1ea3i quy\u1ebft nh\u1eefng tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n \u0111\u01a1n gi\u1ea3n \u0111\u00f3.</p> <p>Nh\u01b0 v\u1eady, ta th\u1ea5y r\u1eb1ng th\u1ef1c ra c\u00e1ch gi\u1ea3i tr\u00f2 ch\u01a1i Nim c\u0169ng ch\u1ec9 l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p ri\u00eang c\u1ee7a c\u00e1ch gi\u1ea3i v\u1edbi gi\u00e1 tr\u1ecb Sprague-Grundy n\u00e0y, trong \u0111\u00f3 gi\u00e1 tr\u1ecb Nim c\u1ee7a tr\u00f2 ch\u01a1i Nim ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ed1ng \\(n\\) vi\u00ean s\u1ecfi t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi gi\u00e1 tr\u1ecb Sprague-Grundy \\(\\text{mex}(\\{0,1,\\ldots,n-1\\}) = n\\)</p> <p>V\u00ed d\u1ee5 v\u1edbi tr\u00f2 ch\u01a1i Nim ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ed1ng \\(3\\) vi\u00ean s\u1ecfi /uploads/game_theory_nim_SP.gif</p> <p>v\u00e0 \u0111\u1ecbnh l\u00fd Bouton t\u01b0\u01a1ng \u0111\u01b0\u01a1ng \u0111\u1ecbnh l\u00fd 2.</p>"},{"location":"algo/math/game-theory/#inh-ly-sprague-grundy_1","title":"\u0110\u1ecbnh l\u00fd Sprague-Grundy","text":"<p>\u0110\u1ecbnh l\u00fd Sprague-Grundy ph\u00e1t bi\u1ec3u r\u1eb1ng: m\u1ecdi tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng k\u1ebft th\u00fac trong h\u1eefu h\u1ea1n b\u01b0\u1edbc \u0111\u1ec1u t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi tr\u00f2 ch\u01a1i Nim m\u1ed9t c\u1ed9t, trong \u0111\u00f3 tr\u1ea1ng th\u00e1i \\(x\\) c\u1ee7a tr\u00f2 ch\u01a1i hi\u1ec7n t\u1ea1i t\u01b0\u01a1ng \u1ee9ng v\u1edbi tr\u1ea1ng th\u00e1i tr\u00f2 ch\u01a1i Nim m\u1ed9t c\u1ed9t c\u00f3 \\(g(x)\\) vi\u00ean s\u1ecfi, trong \u0111\u00f3 \\(g(x)\\) l\u00e0 gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a \\(x\\).</p> <p>S\u1edf d\u0129 c\u00f3 nh\u1eadn x\u00e9t n\u00e0y l\u00e0 v\u00ec \u1edf tr\u1ea1ng th\u00e1i \\(x\\) c\u00f3 gi\u00e1 tr\u1ecb Sprague-Grundy \\(g(x)\\), h\u00e0m mex cho ch\u00fang ta m\u1ed9t \"l\u1eddi h\u1ee9a\", l\u1eddi h\u1ee9a \u0111\u00f3 l\u00e0: t\u1eeb \\(x\\) v\u1edbi gi\u00e1 tr\u1ecb Sprague-Grundy \\(g(x)\\), ta c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c tr\u1ea1ng th\u00e1i \\(y\\) c\u00f3 gi\u00e1 tr\u1ecb Sprague-Grundy t\u1eeb \\(0\\) \u0111\u1ebfn \\(g(x)-1\\). \u0110i\u1ec1u n\u00e0y c\u00f3 s\u1ef1 t\u01b0\u01a1ng \u0111\u1ed3ng v\u1edbi vi\u1ec7c trong tr\u00f2 ch\u01a1i Nim m\u1ed9t c\u1ed9t, t\u1eeb tr\u1ea1ng th\u00e1i \\(n\\) c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i t\u1eeb \\(0\\) \u0111\u1ebfn \\(n-1\\).</p> <p>Tuy nhi\u00ean, lu\u1eadt ch\u01a1i tr\u00f2 ch\u01a1i Nim m\u1ed9t c\u1ed9t n\u00e0y kh\u00f4ng gi\u1ed1ng v\u1edbi b\u00ecnh th\u01b0\u1eddng, v\u00ec trong tr\u00f2 ch\u01a1i b\u00ecnh th\u01b0\u1eddng t\u1eeb tr\u1ea1ng th\u00e1i \\(u\\) ta ch\u1ec9 c\u00f3 th\u1ec3 \u0111i t\u1edbi c\u00e1c tr\u1ea1ng th\u00e1i \\(v\\) c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n \\(u\\). Tuy nhi\u00ean, t\u1eeb m\u1ed9t tr\u1ea1ng th\u00e1i \\(x\\) c\u00f3 gi\u00e1 tr\u1ecb Sprague-Grundy l\u00e0 \\(g(x)\\) ta l\u1ea1i c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn m\u1ed9t tr\u1ea1ng th\u00e1i \\(y\\) c\u00f3 gi\u00e1 tr\u1ecb Sprague-Grundy \\(g(y) &gt; g(x)\\), t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c th\u00eam \\(g(y) - g(x)\\) vi\u00ean s\u1ecfi v\u00e0o tr\u00f2 ch\u01a1i Nim m\u1ed9t c\u1ed9t. M\u1eb7c d\u00f9 v\u1eady, ng\u01b0\u1eddi kia c\u00f3 th\u1ec3 trung h\u00f2a thao t\u00e1c th\u00eam s\u1ecfi, l\u00e0m cho tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i quay v\u1ec1 tr\u1ea1ng th\u00e1i \\(g(x)\\) b\u1eb1ng c\u00e1ch l\u1ea5y \u0111i \\(g(y)-g(x)\\) vi\u00ean s\u1ecfi trong l\u01b0\u1ee3t ti\u1ebfp theo. H\u01a1n n\u1eefa, v\u00ec \u0111i\u1ec1u ki\u1ec7n tr\u00f2 ch\u01a1i s\u1ebd k\u1ebft th\u00fac trong h\u1eefu h\u1ea1n b\u01b0\u1edbc, ch\u1eafc ch\u1eafn s\u1ebd c\u00f3 m\u1ed9t l\u00fac ng\u01b0\u1eddi ch\u01a1i kh\u00f4ng th\u1ec3 th\u00eam s\u1ecfi v\u00e0o n\u1eefa v\u00e0 s\u1ebd ph\u1ea3i ch\u01a1i nh\u01b0 tr\u00f2 ch\u01a1i Nim th\u00f4ng th\u01b0\u1eddng. Do v\u1eady, ta k\u1ebft lu\u1eadn tr\u00f2 ch\u01a1i Nim v\u1edbi ph\u00e9p th\u00eam s\u1ecfi kh\u00f4ng l\u00e0m k\u1ebft qu\u1ea3 c\u1ee7a tr\u00f2 ch\u01a1i Nim thay \u0111\u1ed5i so v\u1edbi lu\u1eadt ch\u01a1i th\u00f4ng th\u01b0\u1eddng.</p> <p>\u0110\u1ecbnh l\u00fd Sprague-Grundy cho ta s\u1ef1 li\u00ean t\u01b0\u1edfng gi\u1eefa m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng v\u1edbi tr\u00f2 ch\u01a1i Nim m\u1ed9t c\u1ed9t - m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng \u0111\u01a1n gi\u1ea3n, cung c\u1ea5p cho ta m\u1ed9t c\u00e1ch nh\u00ecn tr\u1ef1c quan h\u01a1n v\u1ec1 tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng. Tuy b\u1ea3n th\u00e2n \u0111\u1ecbnh l\u00fd kh\u00f4ng c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng, nh\u01b0ng c\u00e1c \u0111\u1ecbnh l\u00fd ph\u1ee5 tr\u1ee3 cho vi\u1ec7c ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd n\u00e0y l\u1ea1i l\u00e0 n\u1ec1n m\u00f3ng quan tr\u1ecdng cho vi\u1ec7c gi\u1ea3i c\u00e1c tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, ch\u00ednh l\u00e0 c\u00e1c \u0111\u1ecbnh l\u00fd 1 v\u00e0 2 \u1edf ph\u1ea7n tr\u01b0\u1edbc. \u0110\u1ec3 tr\u00e1nh b\u00e0i vi\u1ebft qu\u00e1 d\u00e0i d\u00f2ng, \u1edf \u0111\u00e2y s\u1ebd kh\u00f4ng tr\u00ecnh b\u00e0y l\u1ea1i ch\u1ee9ng minh c\u1ee7a \u0111\u1ecbnh l\u00fd n\u00e0y, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam v\u1ec1 c\u00e1ch ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd Sprague-Grundy b\u1eb1ng kh\u00e1i ni\u1ec7m tr\u00f2 ch\u01a1i t\u01b0\u01a1ng \u0111\u01b0\u01a1ng \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u0111\u1ebfn trong wiki.</p>"},{"location":"algo/math/game-theory/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>Ta s\u1ebd v\u00ed d\u1ee5 v\u1edbi tr\u00f2 ch\u01a1i sau</p> <p>Cho b\u00e0n c\u1edd \\(N \\times N\\) v\u1edbi \\(K\\) qu\u00e2n m\u00e3 tr\u00ean \u0111\u00f3. Kh\u00f4ng gi\u1ed1ng nh\u01b0 qu\u00e2n m\u00e3 trong c\u1edd vua truy\u1ec1n th\u1ed1ng, nh\u1eefng qu\u00e2n m\u00e3 n\u00e0y ch\u1ec9 c\u00f3 th\u1ec3 di chuy\u1ec3n nh\u01b0 th\u1ec3 hi\u1ec7n trong h\u00ecnh b\u00ean d\u01b0\u1edbi (v\u00ec v\u1eady t\u1ecda \u0111\u1ed9 c\u1ee7a c\u00e1c con s\u1ebd ch\u1ec9 b\u1ecb gi\u1ea3m ch\u1ee9 kh\u00f4ng t\u0103ng, \u0111\u1ea3m b\u1ea3o tr\u00f2 ch\u01a1i k\u1ebft th\u00fac trong h\u1eefu h\u1ea1n b\u01b0\u1edbc). C\u00f9ng m\u1ed9t l\u00fac c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u qu\u00e2n \u1edf c\u00f9ng m\u1ed9t \u00f4 c\u1ee7a b\u00e0n c\u1edd. Hai ng\u01b0\u1eddi ch\u01a1i thay phi\u00ean nhau di chuy\u1ec3n. Khi t\u1edbi l\u01b0\u1ee3t, ng\u01b0\u1eddi ch\u01a1i ch\u1ecdn m\u1ed9t trong c\u00e1c qu\u00e2n m\u00e3 v\u00e0 di chuy\u1ec3n n\u00f3. Ng\u01b0\u1eddi ch\u01a1i kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7n n\u01b0\u1edbc \u0111i \u1edf l\u01b0\u1ee3t c\u1ee7a m\u00ecnh l\u00e0 ng\u01b0\u1eddi thua.</p> <p></p> <p>\u0110\u1ea7u ti\u00ean, v\u00ec lu\u1eadt ch\u01a1i cho ph\u00e9p c\u00f3 nhi\u1ec1u qu\u00e2n m\u00e3 tr\u00ean c\u00f9ng \u00f4 n\u00ean c\u00e1c qu\u00e2n m\u00e3 c\u00f3 th\u1ec3 di chuy\u1ec3n \u0111\u1ed9c l\u1eadp v\u1edbi nhau, nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 coi tr\u00f2 ch\u01a1i c\u00f3 \\(K\\) qu\u00e2n m\u00e3 l\u00e0 tr\u00f2 ch\u01a1i t\u1ed5ng c\u1ee7a \\(K\\) tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n, trong \u0111\u00f3 tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n th\u1ee9 \\(i\\) ch\u1ec9 c\u00f3 qu\u00e2n m\u00e3 th\u1ee9 \\(i\\) tr\u00ean b\u00e0n c\u1edd.</p> <p>Ta s\u1ebd gi\u1ea3i tr\u00f2 ch\u01a1i v\u1edbi m\u1ed9t qu\u00e2n m\u00e3 tr\u01b0\u1edbc. R\u00f5 r\u00e0ng k\u1ebft qu\u1ea3 c\u1ee7a tr\u00f2 ch\u01a1i khi n\u00e0y ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o v\u1ecb tr\u00ed c\u1ee7a qu\u00e2n m\u00e3, do \u0111\u00f3 m\u1ed9t tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t c\u1eb7p s\u1ed1 nguy\u00ean \\((i,j)\\) cho bi\u1ec7t v\u1ecb tr\u00ed c\u1ee7a qu\u00e2n m\u00e3. Khi \u0111\u00f3 ta s\u1ebd t\u00ednh gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a t\u1eebng v\u1ecb tr\u00ed b\u1eb1ng h\u00e0m sau</p> <pre><code>// khai b\u00e1o c\u00e1c th\u00f4ng tin c\u1ee7a tr\u00f2 ch\u01a1i\nconst int MAXN = 100;\nint N;\nint g[MAXN + 1][MAXN + 1];\nint di[] = {-2, -2, -1, 1};\nint dj[] = {1, -1, -2, -2};\n\n// h\u00e0m t\u00ednh mex c\u1ee7a m\u1ed9t vector U\nint mex(vector&lt;int&gt;&amp; U) {\n    int res = 0;\n    sort(U.begin(), U.end());\n    for (int x: U)\n        if (res == x)\n            ++res;\n    return res;\n}\n\nint calculateGValue(int i, int j) {\n    if (g[i][j] != -1)\n        return g[i][j];\n\n    int res = 0;\n    vector&lt;int&gt; U;\n    // l\u1ea5y gi\u00e1 tr\u1ecb SP c\u1ee7a c\u00e1c tr\u1ea1ng th\u00e1i m\u00e0 (i,j) c\u00f3 th\u1ec3 \u0111i t\u1edbi\n    for (int k = 0; k &lt; 4; ++k) {\n        int x = i + di[k];\n        int y = j + dj[k];\n        if (1 &lt;= x &amp;&amp; x &lt;= N &amp;&amp; 1 &lt;= y &amp;&amp; y &lt;= N)\n            U.push_back(calculateGValue(x, y));\n    }\n    // t\u00ednh mex v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb\n    res = mex(U);\n    g[i][j] = res;\n    return res;\n}\n</code></pre> <p>\u00dd t\u01b0\u1edfng c\u1ee7a h\u00e0m tr\u00ean ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 t\u1ea1i m\u1ed7i v\u1ecb tr\u00ed \\((i,j)\\) ta t\u00ednh mex b\u1eb1ng c\u00f4ng th\u1ee9c \u0111\u1ec7 quy nh\u01b0 \u0111\u1ecbnh ngh\u0129a. \u0110\u1ec3 di chuy\u1ec3n \u0111\u1ebfn c\u00e1c v\u1ecb tr\u00ed h\u1ee3p l\u1ec7, ta c\u00f3 hai m\u1ea3ng h\u1eb1ng s\u1ed1 <code>di</code> v\u00e0 <code>dj</code> k\u00edch th\u01b0\u1edbc \\(4\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi b\u1ed1n b\u01b0\u1edbc di chuy\u1ec3n \\((i-2,j+1), (i-2,j-1), (i-1,j-2), (i+1,j-2)\\) nh\u01b0 \u0111\u1ec1 b\u00e0i mi\u00eau t\u1ea3, v\u1edbi m\u1ed7i v\u1ecb tr\u00ed ta x\u00e9t xem v\u1ecb tr\u00ed c\u00f3 n\u1eb1m tr\u00ean b\u00e0n c\u1edd kh\u00f4ng, n\u1ebfu c\u00f3 th\u00ec m\u1edbi th\u00eam th\u00eam gi\u00e1 tr\u1ecb Grundy t\u1ea1i v\u1ecb tr\u00ed \u0111\u00f3 v\u00e0o vector <code>U</code>. L\u01b0u \u00fd l\u00e0 \u1edf \u0111\u00e2y \u0111\u1ec3 t\u1ed1i \u01b0u th\u1eddi gian ch\u1ea1y th\u00ec ta s\u1ebd d\u00f9ng k\u1ef9 thu\u1eadt \u0111\u1ec7 quy c\u00f3 nh\u1edb \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf ph\u1ea7n Tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, do \u0111\u00f3 tr\u01b0\u1edbc khi g\u1ecdi t\u00ednh gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a t\u1eebng \u00f4 trong b\u1ea3ng th\u00ec ph\u1ea3i kh\u1edfi t\u1ea1o t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng \\(g\\) b\u1eb1ng \\(-1\\).</p> <p>Tr\u01b0\u1edbc ti\u00ean, ta \u0111\u1ecbnh ngh\u0129a c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin c\u1ee7a m\u1ed9t qu\u00e2n m\u00e3, \u0111\u00f3 m\u1ed9t <code>struct</code> g\u1ed3m hai th\u00f4ng tin \\(row, col\\) t\u01b0\u01a1ng \u1ee9ng l\u00e0 t\u1ecda \u0111\u1ed9 d\u00f2ng v\u00e0 c\u1ed9t c\u1ee7a qu\u00e2n m\u00e3. <pre><code>struct Cell {\n  int row, col;\n};\n</code></pre> Khi \u0111\u00e3 c\u00f3 gi\u00e1 tr\u1ecb Grundy c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u00f4 t\u1eeb \\((1,1)\\) \u0111\u1ebfn \\((N,N)\\), \u0111\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a tr\u00f2 ch\u01a1i c\u00f3 \\(K\\) qu\u00e2n m\u00e3 ta ch\u1ec9 c\u1ea7n \u00e1p d\u1ee5ng \u0111\u1ecbnh l\u00fd 2, \u0111\u00f3 l\u00e0 XOR \\(K\\) gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a \\(K\\) qu\u00e2n m\u00e3 l\u1ea1i. Thu\u1eadt to\u00e1n s\u1ebd nh\u01b0 sau: <pre><code>bool isFirstWin(vector&lt;Cell&gt; Q) {\n    int res = 0;\n    for (Cell x: Q)\n        res ^= g[x.row][x.col];\n    return (res &gt; 0);\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thao t\u00e1c t\u00ednh gi\u00e1 tr\u1ecb Sprague-Grundy c\u1ee7a tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n l\u00e0 \\(O(N^2)\\) do ta ph\u1ea3i duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c \u00f4 trong b\u00e0n c\u1edd, nh\u01b0ng do d\u00f9ng \u0111\u1ec7 quy c\u00f3 nh\u1edb n\u00ean ta kh\u00f4ng ph\u1ea3i t\u00ednh m\u1ed9t \u00f4 n\u00e0o qu\u00e1 \\(1\\) l\u1ea7n. \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thao t\u00e1c XOR \\(K\\) gi\u00e1 tr\u1ecb Sprague-Grundy l\u00e0 \\(O(K)\\), m\u00e0 \\(K \\leq N^2\\), do \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a to\u00e0n b\u1ed9 thu\u1eadt to\u00e1n l\u00e0 \\(O(N^2)\\).</p>"},{"location":"algo/math/game-theory/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOI Parigame</li> <li>Codeforce 1451F</li> <li>Codeforce 305E</li> <li>Codeforce 1312F</li> </ul>"},{"location":"algo/math/game-theory/#phu-luc","title":"Ph\u1ee5 l\u1ee5c","text":"<p>Ph\u1ea7n n\u00e0y s\u1ebd ch\u1ee9ng minh c\u01a1 s\u1edf to\u00e1n h\u1ecdc cho hai \u0111\u1ecbnh l\u00fd \\(1\\) v\u00e0 \\(2\\) \u1edf ph\u1ea7n \u0110\u1ecbnh l\u00fd Sprague-Grundy, \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n t\u1ea1i sao l\u1ea1i c\u00f3 hai \u0111\u1ecbnh l\u00fd tr\u00ean, b\u1ea1n \u0111\u1ecdc h\u00e3y \u0111\u1ecdc ph\u1ea7n n\u00e0y.</p> <p>\u0110\u1ecbnh l\u00fd 1: Trong m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, tr\u1ea1ng th\u00e1i \\(u\\) thu\u1ed9c \\(P\\) khi v\u00e0 ch\u1ec9 khi gi\u00e1 tr\u1ecb Sprague-Grundy \\(g(u) = 0\\).</p> <p>Ch\u1ee9ng minh:</p> <p>T\u01b0\u01a1ng t\u1ef1 ph\u1ea7n tr\u01b0\u1edbc, ta s\u1ebd g\u1ecdi \\(\\hat{P}\\) l\u00e0 t\u1eadp c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 \\(g(u)=0\\) v\u00e0 \\(\\hat{N}\\) l\u00e0 t\u1eadp c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 \\(g(u)&gt;0\\) v\u00e0 c\u1ed1 g\u1eafng ch\u1ee9ng minh \u0111i\u1ec1u sau: $$ \\hat{P}=P, \\: \\hat{N}=N $$</p> <p>Th\u1ee9 nh\u1ea5t, c\u00e1c tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac \\(t\\) ch\u1eafc ch\u1eafn s\u1ebd thu\u1ed9c \\(\\hat{P}\\) do \\(g(t) = \\text{mex}(\\varnothing) = 0\\).</p> <p>Th\u1ee9 hai, v\u1edbi m\u1ed9t tr\u1ea1ng th\u00e1i \\(u\\) thu\u1ed9c \\(\\hat{N}\\), khi \u0111\u00f3 \\(g(u) &gt; 0\\), \u0111i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0 trong c\u00e1c tr\u1ea1ng th\u00e1i \\(v_1,\\ldots,v_k\\) \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(u\\) lu\u00f4n t\u1ed3n t\u1ea1i m\u1ed9t tr\u1ea1ng th\u00e1i \\(v_i\\) c\u00f3 \\(g(v_i) = 0\\), t\u1ee9c \\(v\\) thu\u1ed9c \\(\\hat{P}\\). Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh d\u1ec5 d\u00e0ng b\u1eb1ng ph\u1ea3n ch\u1ee9ng r\u1eb1ng n\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c tr\u1ea1ng th\u00e1i \\(v_1,\\ldots,v_k\\) \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(u\\) c\u00f3 \\(g(v_i) &gt; 0\\) th\u00ec r\u00f5 r\u00e0ng ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t kh\u00f4ng n\u1eb1m trong t\u1eadp \\(\\{g(v_1),\\ldots,g(v_k)\\}\\) l\u00e0 \\(0\\), t\u1ee9c khi \u0111\u00f3 \\(g(u) = \\text{mex}(\\{g(v_),\\ldots,g(v_k)\\}) = 0\\) tr\u00e1i v\u1edbi gi\u1ea3 thuy\u1ebft ban \u0111\u1ea7u l\u00e0 \\(g(u) &gt; 0\\).</p> <p>Th\u1ee9 ba, v\u1edbi m\u1ecdi tr\u1ea1ng th\u00e1i \\(u\\) thu\u1ed9c \\(\\hat{P}\\) m\u00e0 \\(u\\) kh\u00f4ng ph\u1ea3i tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac, khi \u0111\u00f3 v\u1edbi m\u1ecdi tr\u1ea1ng th\u00e1i \\(v_1,\\ldots,v_k\\) \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(u\\) th\u00ec \\(g(v_i) &gt; 0\\), t\u1ee9c m\u1ecdi c\u00e1ch \u0111i t\u1eeb \\(u \\in \\hat{P}\\) lu\u00f4n d\u1eabn \u0111\u1ebfn tr\u1ea1ng th\u00e1i \\(v \\in \\hat{N}\\). Ta c\u0169ng s\u1ebd ch\u1ee9ng minh ph\u00e1t bi\u1ec3u n\u00e0y b\u1eb1ng ph\u1ea3n ch\u1ee9ng, gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i m\u1ed9t \\(v_i\\) trong c\u00e1c tr\u1ea1ng th\u00e1i \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(u\\) c\u00f3 \\(g(v_i) = 0\\), l\u00fac \u0111\u00f3 r\u00f5 r\u00e0ng \\(g(v)=\\text{mex}(\\{0,g(v_1),\\ldots\\}) &gt; 0\\), tr\u00e1i v\u1edbi gi\u1ea3 thuy\u1ebft ban \u0111\u1ea7u l\u00e0 \\(g(u) = 0\\).</p> <p>T\u1eeb ba t\u00ednh ch\u1ea5t v\u1eeba ch\u1ee9ng minh, ta th\u1ea5y r\u00f5 r\u00e0ng t\u1eadp \\(\\hat{P}\\) v\u00e0 \\(\\hat{N}\\) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi t\u1eadp \\(P\\) v\u00e0 \\(N\\) theo \u0111\u1ecbnh ngh\u0129a c\u1ee7a hai t\u1eadp n\u00e0y. \\(\\square\\)</p> <p>\u0110\u1ecbnh l\u00fd 2: v\u1edbi tr\u00f2 ch\u01a1i t\u1ed5ng \\(G = G_1 + \\ldots + G_n\\) v\u00e0 \\(x_1, \\ldots, x_n\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i c\u1ee7a tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n \\(G_1, \\ldots, G_n\\), khi \u0111\u00f3: $$ g(x_1, \\ldots, x_n) = g_1(x_1) \\oplus \\ldots \\oplus g_n(x_n) $$ V\u1edbi \\(g, g_1, \\ldots, g_n\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 h\u00e0m Sprague-Grundy c\u1ee7a tr\u00f2 ch\u01a1i \\(G, G_1, \\ldots, G_n\\).</p> <p>Ch\u1ee9ng minh:</p> <p>Do \\(G\\) l\u00e0 m\u1ed9t tr\u00f2 ch\u01a1i t\u1ed5 h\u1ee3p c\u00e2n b\u1eb1ng, do \u0111\u00f3 theo \u0111\u1ecbnh l\u00fd 1 th\u00ec  \\(\\(g(x_1, \\ldots, x_n) = mex(\\{g(y_1, \\ldots, y_n) | (x_1, \\ldots, x_n) \\rightarrow (y_1, \\ldots, y_n) \\in Q\\})\\)\\)</p> <p>T\u1eeb \u0111\u00f3, n\u1ebfu g\u1ecdi \\(U = \\{g(y_1, \\ldots, y_n) | (x_1, \\ldots, x_n) \\rightarrow (y_1, \\ldots, y_n) \\in Q\\}\\), ta th\u1ea5y n\u1ebfu mu\u1ed1n ch\u1ee9ng minh \\(g(x_1, \\ldots, x_n) = g_1(x_1) \\oplus \\ldots \\oplus g_n(x_n) = s\\) th\u00ec ta c\u1ea7n ch\u1ee9ng minh $$ \\text{mex(U)} = s $$</p> <p>Chi ti\u1ebft h\u01a1n, ta c\u1ea7n ch\u1ee9ng minh hai \u0111i\u1ec1u sau: 1. V\u1edbi m\u1ecdi \\(0 \\leq t &lt; s\\) th\u00ec \\(t \\in U\\). 2. \\(s \\notin U\\)</p> <p>\u0110\u1ec3 ch\u1ee9ng minh \u00fd 1, v\u1edbi m\u1ed9t \\(0 \\leq t &lt; s\\) b\u1ea5t k\u1ef3, ta x\u00e9t \\(s \\oplus t\\), v\u00ec \\(s &gt; 0\\) n\u00ean bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a \\(s \\oplus t\\) lu\u00f4n t\u1ed3n t\u1ea1i bit tr\u00e1i nh\u1ea5t b\u1eb1ng \\(1\\) (t\u1ea1m g\u1ecdi l\u00e0 \\(d\\)).Khi \u0111\u00f3, bit th\u1ee9 \\(d\\) c\u1ee7a m\u1ed9t trong hai s\u1ed1 \\(s\\) v\u00e0 \\(t\\) ph\u1ea3i b\u1eb1ng \\(1\\) v\u00e0 bit th\u1ee9 \\(d\\) c\u1ee7a s\u1ed1 c\u00f2n l\u1ea1i b\u1eb1ng b\u1eb1ng \\(0\\). Tuy nhi\u00ean, do \\(s &gt; t\\) n\u00ean bit th\u1ee9 \\(d\\) c\u1ee7a \\(s\\) b\u1eb1ng \\(1\\) v\u00e0 bit th\u1ee9 \\(d\\) c\u1ee7a \\(t\\) b\u1eb1ng \\(0\\), tr\u01b0\u1eddng h\u1ee3p kia kh\u00f4ng th\u1ec3 x\u1ea3y ra. L\u1eadp lu\u1eadn ti\u1ebfp r\u1eb1ng \\(s = g_1(x_1) \\oplus \\ldots \\oplus g_n(x_n)\\), t\u01b0\u01a1ng t\u1ef1 nh\u01b0 khi ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd Bouton, n\u1ebfu bit th\u1ee9 \\(d\\) c\u1ee7a \\(s\\) l\u00e0 \\(1\\) th\u00ec ta c\u00f3 s\u1ed1 l\u01b0\u1ee3ng \\(g_i(x_i)\\) c\u00f3 gi\u00e1 tr\u1ecb Sprague-Grundy c\u00f3 bit th\u1ee9 \\(d\\) b\u1eb1ng \\(1\\) ph\u1ea3i l\u1ebb (theo t\u00ednh ch\u1ea5t c\u1ee7a ph\u00e9p XOR), do \u0111\u00f3 lu\u00f4n t\u1ed3n t\u1ea1i m\u1ed9t tr\u00f2 ch\u01a1i c\u00f3 bit th\u1ee9 \\(d\\) b\u1eb1ng \\(1\\). Ch\u1ecdn tr\u00f2 ch\u01a1i m\u00e0 gi\u00e1 tr\u1ecb Sprague-Grundy c\u00f3 bit th\u1ee9 \\(d\\) b\u1eb1ng \\(1\\) \u0111\u1ec3 th\u1ef1c hi\u1ec7n b\u1ed1c s\u1ecfi, ta th\u1ea5y \\((s \\oplus t) \\oplus g_i(x_i) &lt; g_i(x_i)\\) n\u00ean theo \u0111\u1ecbnh ngh\u0129a h\u00e0m Sprague-Grundy ch\u1eafc ch\u1eafn t\u1ed3n t\u1ea1i \\(x'_i\\) c\u00f3 \\(g_i(x'_i) = (s \\oplus t) \\oplus g_i(x_i)\\) v\u00e0 t\u1eeb \\(x_i\\) c\u00f3 th\u1ec3 di chuy\u1ec3n \u0111\u1ebfn \\(x'_i\\). Theo \u0111\u1ecbnh ngh\u0129a tr\u00f2 ch\u01a1i t\u1ed5ng, khi \u0111\u00f3 b\u01b0\u1edbc di chuy\u1ec3n t\u1eeb \\((x_1,\\ldots, x_i, \\ldots, x_n)\\) t\u1edbi \\((x_1,\\ldots, x'_i, \\ldots, x_n)\\) l\u00e0 h\u1ee3p l\u1ec7 v\u00e0:</p> \\[\\begin{align*} g_1(x_1) &amp;\\oplus \\ldots \\oplus g_i(x'_i) \\oplus \\ldots \\oplus g_n(x_n)  \\\\ &amp;= g_1(x_1) \\oplus \\ldots \\oplus [(s \\oplus t) \\oplus g_i(x_i)] \\oplus \\ldots \\oplus g_n(x_n) \\\\ &amp;= (s \\oplus t) \\oplus [g_1(x_1) \\oplus \\ldots \\oplus \\oplus g_i(x_i) \\oplus \\ldots \\oplus g_n(x_n)] \\\\ &amp;= s \\oplus t \\oplus s = t \\end{align*}\\] <p>V\u1eady \\(t \\in U\\).</p> <p>\u0110\u1ec3 ch\u1ee9ng minh \u00fd 2 ta d\u00f9ng ph\u1ea3n ch\u1ee9ng, gi\u1ea3 s\u1eed tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i l\u00e0 \\((x_1, \\ldots, x_n)\\), khi \u0111\u00f3 gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i m\u1ed9t tr\u1ea1ng th\u00e1i \\((y_1, \\ldots, y_n)\\) c\u00f3 \\(g(y_1, \\ldots, y_n) = s\\). Theo \u0111\u1ecbnh ngh\u0129a m\u1ed7i b\u01b0\u1edbc di chuy\u1ec3n trong tr\u00f2 ch\u01a1i t\u1ed5ng s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c ch\u1ecdn m\u1ed9t tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n ra v\u00e0 di chuy\u1ec3n, c\u00e1c tr\u00f2 ch\u01a1i c\u00f2n l\u1ea1i gi\u1eef nguy\u00ean, do \u0111\u00f3 ta c\u00f3 th\u1ec3 vi\u1ebft \\((y_1, \\ldots, y_n) = (x_1, \\ldots, x'_i, \\ldots, x_n)\\) v\u1edbi \\(i\\) l\u00e0 tr\u00f2 ch\u01a1i ta ch\u1ecdn \u0111\u1ec3 di chuy\u1ec3n tr\u1ea1ng th\u00e1i. Khi \u0111\u00f3</p> \\[\\begin{align*} s = g_1(x_1) \\oplus \\ldots \\oplus g_i(x_i) \\oplus \\ldots \\oplus g_n(x_n) &amp;= g_1(x_1) \\oplus \\ldots \\oplus g_i(x'_i) \\oplus \\ldots \\oplus g_n(x_n) \\\\ \\Leftrightarrow g(x'_i) &amp;= g(x_i) \\end{align*}\\] <p>\u0110i\u1ec1u n\u00e0y l\u00e0 m\u00e2u thu\u1eabn v\u1edbi gi\u1ea3 thuy\u1ebft ban \u0111\u1ea7u l\u00e0 ta ch\u1ecdn tr\u00f2 ch\u01a1i th\u00e0nh ph\u1ea7n \\(i\\) \u0111\u1ec3 di chuy\u1ec3n tr\u1ea1ng th\u00e1i (khi \u0111\u00f3 \\(x'_i \\neq x_i\\)).</p> <p>V\u1edbi hai \u00fd \u0111\u01b0\u1ee3c ch\u1ee9ng minh n\u00e0y, ta \u0111\u00e3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c \u0111\u1ecbnh l\u00fd 2. \\(\\square\\)</p>"},{"location":"algo/math/modular-inverse/","title":"S\u1ed1 h\u1ecdc 4.5 - Ngh\u1ecbch \u0111\u1ea3o modulo","text":"<p>Ngu\u1ed3n: e-maxx</p> <p>Ng\u01b0\u1eddi d\u1ecbch: Nguy\u1ec5n Th\u00e0nh Trung (RR)</p>"},{"location":"algo/math/modular-inverse/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a:","text":"<p>X\u00e9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(m\\). X\u00e9t c\u00e1c s\u1ed1 nguy\u00ean tr\u00ean modulo \\(m\\) (t\u1eeb 0 \u0111\u1ebfn \\(m-1\\)).</p> <p>V\u1edbi m\u1ed9t s\u1ed1 nguy\u00ean \\(a\\), ta g\u1ecdi ngh\u1ecbch \u0111\u1ea3o modulo \\(m\\) (modular multiplicative inverse) c\u1ee7a \\(a\\) l\u00e0 \\(a^{-1}\\) l\u00e0 s\u1ed1 nguy\u00ean tho\u1ea3 m\u00e3n:</p> <p>\\(a \\* a^{-1} \\equiv 1 \\; \\pmod{m}\\)</p> <p>Ta c\u1ea7n ch\u00fa \u00fd r\u1eb1ng kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o \\(a^{-1}\\) c\u0169ng t\u1ed3n t\u1ea1i. V\u00ed d\u1ee5, v\u1edbi \\(m = 4, a = 2\\), ta kh\u00f4ng th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \\(a^{-1}\\) tho\u1ea3 m\u00e3n \u0111\u1eb3ng th\u1ee9c tr\u00ean.</p> <p>C\u00f3 th\u1ec3 ch\u1ee9ng minh r\u1eb1ng \\(a^{-1}\\) lu\u00f4n lu\u00f4n t\u1ed3n t\u1ea1i n\u1ebfu \\(gcd(a, m) = 1\\).</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, m\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y 2 c\u00e1ch kh\u00e1c nhau \u0111\u1ec3 t\u00ecm ngh\u1ecbch \u0111\u1ea3o modulo, d\u1ef1a tr\u00ean c\u00e1c ki\u1ebfn\u00a0th\u1ee9c \u0111\u00e3 \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf c\u00e1c b\u00e0i vi\u1ebft tr\u00ean VNOI:</p> <ul> <li>Extended Euclid</li> <li>T\u00ednh a^b % c b\u1eb1ng chia \u0111\u1ec3 tr\u1ecb</li> <li>Phi h\u00e0m Euler</li> </ul>"},{"location":"algo/math/modular-inverse/#extended-euclid","title":"Extended Euclid","text":"<p>Nh\u01b0 \u0111\u00e3 tr\u00ecnh b\u00e0y trong b\u00e0i vi\u1ebft S\u1ed1 h\u1ecdc 1, n\u1ebfu \\(gcd(a, m) = 1\\), ta lu\u00f4n lu\u00f4n t\u00ecm \u0111\u01b0\u1ee3c 2 s\u1ed1 nguy\u00ean x v\u00e0 y tho\u1ea3 m\u00e3n:</p> <p>\\(a \\*x + m \\* y = 1\\).</p> <p>V\u00ec ta \u0111ang l\u00e0m vi\u1ec7c tr\u00ean modulo \\(m\\), ta c\u00f3 th\u1ec3 b\u1ecf \\(m \\* y\\) v\u00e0 vi\u1ebft l\u1ea1i \u0111\u1eb3ng th\u1ee9c tr\u00ean nh\u01b0 sau:</p> <p>\\(a \\* x \\equiv 1 \\pmod{m}\\).</p> <p>Do \u0111\u00f3, \\(x\\) ch\u00ednh l\u00e0 \\(a^{-1}\\).</p> <p>C\u00e0i \u0111\u1eb7t:</p> <pre><code>int x, y;\nint g = extended_euclidean(a, m, x, y);\nif (g != 1) cout &lt;&lt; \"No solution!\";\nelse {\n    x = (x % m + m) % m;\n    cout &lt;&lt; x &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algo/math/modular-inverse/#tinh-nghich-ao-modulo-bang-ab-c","title":"T\u00ednh ngh\u1ecbch \u0111\u1ea3o modulo b\u1eb1ng a^b % c","text":"<p>Khi \\(gcd(a, m) = 1\\), theo \u0111\u1ecbnh l\u00fd Euler, ta c\u00f3:</p> <p>\\(a^{phi(m)} \\equiv 1 \\pmod{m}\\).</p> <p>V\u1edbi Phi h\u00e0m Euler \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch \u1edf b\u00e0i vi\u1ebft S\u1ed1 h\u1ecdc 4.</p> <p>Trong tr\u01b0\u1eddng h\u1ee3p \\(m\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1, \\(phi(m) = m - 1\\), n\u00ean ta c\u00f3:</p> <p>\\(a^{m-1} \\equiv 1 \\pmod{m}\\).</p> <p>Nh\u00e2n c\u1ea3 2 v\u1ebf v\u1edbi \\(a^{-1}\\), ta \u0111\u01b0\u1ee3c:</p> <ul> <li>V\u1edbi \\(m\\) b\u1ea5t k\u1ef3, \\(a^{phi(m) - 1} \\equiv a^{-1} \\pmod{m}\\),</li> <li>V\u1edbi \\(m\\) nguy\u00ean t\u1ed1, \\(a^{m-2} \\equiv a^{-1} \\pmod{m}\\).</li> </ul> <p>Nh\u01b0 v\u1eady, ta c\u00f3 th\u1ec3 d\u00f9ng thu\u1eadt to\u00e1n T\u00ednh a^b % c b\u1eb1ng chia \u0111\u1ec3 tr\u1ecb \u0111\u1ec3 t\u00ednh ngh\u1ecbch \u0111\u1ea3o modulo v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log{m})\\).</p>"},{"location":"algo/math/modular-inverse/#tinh-tat-ca-nghich-ao-modulo-m","title":"T\u00ednh t\u1ea5t c\u1ea3 ngh\u1ecbch \u0111\u1ea3o modulo m","text":"<p>Trong tr\u01b0\u1eddng h\u1ee3p \\(m\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1, ta c\u0169ng c\u00f3 th\u1ec3 t\u00ednh t\u1ea5t c\u1ea3 ngh\u1ecbch \u0111\u1ea3o modulo c\u1ee7a to\u00e0n b\u1ed9 \\([1, m-1]\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m)\\) nh\u01b0 sau:</p> <pre><code>r[1] = 1;\nfor(int i = 2; i &lt; m; ++i)\n    r[i] = (m - (m/i) * r[m%i] % m) % m;\n</code></pre> <p>Ch\u1ee9ng minh:</p> <p>\\(m \\% i = m - floor(m/i) \\* i\\)</p> <p>\\(m \\% i \\equiv -floor(m/i) \\* i \\pmod{m}\\)</p> <p>Nh\u00e2n c\u1ea3 2 v\u1ebf v\u1edbi ngh\u1ecbch \u0111\u1ea3o modulo c\u1ee7a \\(i\\) v\u00e0 ngh\u1ecbch \u0111\u1ea3o modulo c\u1ee7a \\(m \\% i\\):</p> <p>\\(r[i] \\equiv -floor(m/i) \\* r[m \\% i] \\pmod{m}\\)</p>"},{"location":"algo/math/modular-inverse/#cac-bai-luyen-tap","title":"C\u00e1c b\u00e0i luy\u1ec7n t\u1eadp","text":"<ul> <li>UVa 11904 - One Unit Machine</li> <li>Hackerrank - Longest Increasing Subsequence Arrays</li> <li>Codeforces 300C - Beautiful Numbers</li> <li>Codeforces 622F - The Sum of the k-th Powers</li> <li>Codeforces 717A - Festival Organization</li> </ul>"},{"location":"algo/math/multiplicative-function/","title":"H\u00e0m nh\u00e2n t\u00ednh","text":"<p>T\u00e1c gi\u1ea3: RR</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u v\u1ec1 h\u00e0m nh\u00e2n t\u00ednh c\u0169ng nh\u01b0 \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3 trong Competitive Programming (l\u1eadp tr\u00ecnh thi \u0111\u1ea5u).</p>"},{"location":"algo/math/multiplicative-function/#1-inh-nghia","title":"1. \u0110\u1ecbnh ngh\u0129a","text":"<p>M\u1ed9t h\u00e0m \\(f(n)\\), \\(n \\in N\\) \u0111\u01b0\u1ee3c coi l\u00e0 h\u00e0m nh\u00e2n t\u00ednh (Multiplicative Function) n\u1ebfu: V\u1edbi m\u1ecdi c\u1eb7p s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau \\(n\\), \\(m \\in N\\) ta c\u00f3 \\(f(mn)=f(m)f(n)\\).</p> <p>V\u00ed d\u1ee5</p> <p>X\u00e9t h\u00e0m \\(f(n)\\) l\u00e0 s\u1ed1 \u01b0\u1edbc c\u1ee7a \\(n\\). Ta c\u00f3:</p> <pre><code>f(1) = 1\nf(2) = 2\nf(3) = 2\nf(4) = 3\nf(5) = 2\nf(6) = 4 = f(2) * f(3)\nf(7) = 2\nf(8) = 4\nf(9) = 3\nf(10) = 4 = f(2) * f(5)\nf(12) = 6 = f(3) * f(4)\nf(18) = 6 = f(2) * f(9)\n</code></pre> <p>Ta c\u00f3 th\u1ec3 ch\u1ee9ng minh h\u00e0m \\(f\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh nh\u01b0 sau:</p> <ul> <li>X\u00e9t \\(m\\) v\u00e0 \\(n\\) nguy\u00ean t\u1ed1 c\u00f9ng nhau.</li> <li>\u0110\u1ec3 ch\u1ee9ng minh \\(f(m \\* n) = f(m) \\* f(n)\\), ta c\u1ea7n ch\u1ee9ng minh 2 chi\u1ec1u:<ol> <li>M\u1ed7i \u01b0\u1edbc c\u1ee7a \\(m * n\\) \u1ee9ng v\u1edbi 1 c\u1eb7p \\((a, b)\\) v\u1edbi \\(a\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(m\\) v\u00e0 \\(b\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\).<ul> <li>\u0110i\u1ec1u n\u00e0y \u0111\u00fang do m\u1ed7i \u01b0\u1edbc c\u1ee7a \\(m \\* n\\) ta lu\u00f4n t\u00e1ch \u0111\u01b0\u1ee3c th\u00e0nh t\u00edch c\u1ee7a 2 s\u1ed1 \\(a \\* b\\) v\u1edbi \\(a\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(m\\) v\u00e0 \\(b\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\).</li> </ul> </li> <li>M\u1ed7i c\u1eb7p \\((a, b)\\) v\u1edbi \\(a\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(m\\) v\u00e0 \\(b\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\) \u1ee9ng v\u1edbi 1 \u01b0\u1edbc c\u1ee7a \\(m \\* n\\).<ul> <li>\u0110i\u1ec1u n\u00e0y \u0111\u00fang do v\u1edbi m\u1ed7i c\u1eb7p \\((a, b)\\) th\u00ec \\(a \\* b\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(m \\* n\\).</li> </ul> </li> </ol> </li> </ul> <p>Nh\u01b0 v\u1eady, \\(f(m \\* n) = f(m) \\* f(n)\\).</p>"},{"location":"algo/math/multiplicative-function/#2-ung-dung-1","title":"2. \u1ee8ng d\u1ee5ng 1","text":"<p>Gi\u1edd ta x\u00e9t b\u00e0i to\u00e1n sau:</p> <p>Cho s\u1ed1 N kh\u00f4ng qu\u00e1 10^5. T\u00ednh t\u1ea5t c\u1ea3 c\u00e1c f(i) v\u1edbi i &lt;= N.</p> <p>\u0110\u1ec3 l\u00e0m nh\u1eefng b\u00e0i d\u1ea1ng n\u00e0y, ta s\u1ebd c\u00f3 3 b\u01b0\u1edbc:</p> <ol> <li>Ch\u1ee9ng minh \\(f\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</li> <li>T\u00ecm c\u00f4ng th\u1ee9c cho \\(f(p^k)\\) v\u1edbi p l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</li> <li>D\u00f9ng s\u00e0ng \u0111\u1ec3 t\u00ednh \\(f\\) trong \\(O(N*logN)\\).</li> </ol> <p>N\u1ebfu b\u1ea1n ch\u01b0a bi\u1ebft s\u00e0ng c\u00f3 th\u1ec3 \u0111\u1ecdc \u1edf \u0111\u00e2y.</p>"},{"location":"algo/math/multiplicative-function/#21-buoc-1","title":"2.1. B\u01b0\u1edbc 1","text":"<p>Nh\u01b0 \u0111\u00e3 ch\u1ee9ng minh \u1edf ph\u1ea7n tr\u01b0\u1edbc, \\(f\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p>"},{"location":"algo/math/multiplicative-function/#22-buoc-2","title":"2.2. B\u01b0\u1edbc 2","text":"<p>V\u1edbi m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 \\(p\\), ta c\u00f3 \\(f(p^k) = k + 1\\), do c\u00e1c \u01b0\u1edbc c\u1ee7a \\(p^k\\) l\u00e0 \\(1, p, p^2, ..., p^k\\).</p>"},{"location":"algo/math/multiplicative-function/#22-buoc-3","title":"2.2. B\u01b0\u1edbc 3","text":"<p>\u0110\u1ea7u ti\u00ean, ta d\u00f9ng s\u00e0ng \u0111\u1ec3:</p> <ol> <li>Bi\u1ebft \u0111\u01b0\u1ee3c s\u1ed1 n\u00e0o l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</li> <li>V\u1edbi m\u1ed7i s\u1ed1 kh\u00f4ng ph\u1ea3i nguy\u00ean t\u1ed1, t\u00ecm \u0111\u01b0\u1ee3c 1 \u01b0\u1edbc nguy\u00ean t\u1ed1.</li> <li>T\u1eeb 2, ta nhanh ch\u00f3ng ki\u1ec3m tra \u0111\u01b0\u1ee3c 1 s\u1ed1 c\u00f3 d\u1ea1ng \\(p^k\\) hay kh\u00f4ng.</li> </ol> <p>Nh\u01b0 v\u1eady, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</p> <pre><code>const int MN = 1e6 + 11;\n\nint sieve[MN];         // S\u00e0ng s\u1ed1 nguy\u00ean t\u1ed1. Sau khi s\u00e0ng:\n                       // - sieve[i] = 0 n\u1ebfu i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n                       // - ng\u01b0\u1ee3c l\u1ea1i sieve[i] = m\u1ed9t \u01b0\u1edbc b\u1ea5t k\u1ef3 c\u1ee7a i.\npair&lt;int,int&gt; pk[MN];  // N\u1ebfu i c\u00f3 d\u1ea1ng p^k, pk[i] = {p, k}.\n                       // Ng\u01b0\u1ee3c l\u1ea1i, pk[i] = {-1, 0}\nint ndiv[MN];          // ndiv[i] = S\u1ed1 \u01b0\u1edbc c\u1ee7a i.\n\nint main() {\n    // S\u00e0ng s\u1ed1 nguy\u00ean t\u1ed1\n    for (int i = 2; i &lt;= 1000; i++)  // s\u1ed1 kh\u00f4ng nguy\u00ean t\u1ed1 c\u00f3 1 \u01b0\u1edbc &lt;= 10^3.\n        if (!sieve[i]) {\n            for (int j = i*i; j &lt;= 1000000; j += i)\n                sieve[j] = i;\n        }\n\n    ndiv[1] = 1;\n\n    for (int i = 2; i &lt;= 1000000; i++) {\n        if (!sieve[i]) {\n            // i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.\n            pk[i] = make_pair(i, 1);\n            ndiv[i] = 2;\n        }\n        else {\n            int p = sieve[i];  // p l\u00e0 \u01b0\u1edbc b\u1ea5t k\u1ef3 c\u1ee7a i.\n\n            if (pk[i/p].first == p) {  // i = p^k\n                pk[i] = make_pair(p, pk[i/p].second + 1);\n                ndiv[i] = pk[i].second + 1;  // ndiv[p^k] = k+1.\n            }\n            else {\n                pk[i] = make_pair(-1, 0);\n                // Ph\u00e2n t\u00edch i = u*v, v\u1edbi gcd(u, v) = 1.\n                int u = i, v = 1;\n                while (u % p == 0) {\n                    u /= p;\n                    v = v * p;\n                }\n                ndiv[i] = ndiv[u] * ndiv[v];\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"algo/math/multiplicative-function/#3-ung-dung-2","title":"3. \u1ee8ng d\u1ee5ng 2","text":"<p>Ta x\u00e9t b\u00e0i to\u00e1n sau:</p> <p>Cho s\u1ed1 N kh\u00f4ng qu\u00e1 10^12. T\u00ednh f(N)</p> <p>Ch\u00fa \u00fd \u1edf b\u00e0i to\u00e1n tr\u01b0\u1edbc ta c\u1ea7n t\u00ednh nhi\u1ec1u gi\u00e1 tr\u1ecb c\u1ee7a \\(f(N)\\) v\u1edbi \\(N\\) nh\u1ecf, c\u00f2n trong b\u00e0i n\u00e0y ta ch\u1ec9 c\u1ea7n t\u00ednh duy nh\u1ea5t 1 gi\u00e1 tr\u1ecb c\u1ee7a \\(f(N)\\) v\u1edbi \\(N\\) l\u1edbn.</p> <p>C\u0169ng nh\u01b0 tr\u00ean, ta s\u1ebd l\u00e0m theo 3 b\u01b0\u1edbc ch\u00ednh:</p> <ol> <li>Ch\u1ee9ng minh \\(f\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</li> <li>T\u00ecm c\u00f4ng th\u1ee9c cho \\(f(p^k)\\) v\u1edbi p l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</li> <li>Ph\u00e2n t\u00edch \\(N\\) th\u00e0nh th\u1eeba s\u1ed1 nguy\u00ea t\u1ed1 \u0111\u1ec3 t\u00ednh \\(f(N)\\) trong \\(O(sqrt(N))\\).</li> </ol> <p>V\u00ec 2 b\u01b0\u1edbc \u0111\u1ea7u gi\u1ed1ng h\u1ec7t ph\u1ea7n tr\u01b0\u1edbc n\u00ean m\u00ecnh s\u1ebd kh\u00f4ng nh\u1eafc l\u1ea1i.</p> <p>\u1ede b\u01b0\u1edbc 3, b\u1ea1n ch\u1ec9 c\u1ea7n x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(sqrt(N)\\), t\u1eeb \u0111\u00f3 ph\u00e2n t\u00edch \u0111\u01b0\u1ee3c th\u00e0nh th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1. Code nh\u01b0 sau:</p> <pre><code>int n;\nint res = 1;  // k\u1ebft qu\u1ea3\nfor (int i = 2; i*i &lt;= n; i++) {\n  if (n % i == 0) {\n    // i l\u00e0 \u01b0\u1edbc nguy\u00ean t\u1ed1 c\u1ee7a n\n    // (n\u1ebfu i kh\u00f4ng nguy\u00ean t\u1ed1, v\u00e0 c\u00f3 \u01b0\u1edbc p, th\u00ec \u1edf b\u01b0\u1edbc tr\u01b0\u1edbc \u0111\u00f3,\n    // ta \u0111\u00e3 chia n cho p \u0111\u1ebfn khi n kh\u00f4ng chia h\u1ebft cho p).\n    int u = 1, k = 0;\n    // u = i^k l\u00e0 lu\u1ef9 th\u1eeba l\u1edbn nh\u1ea5t c\u1ee7a i m\u00e0 l\u00e0 \u01b0\u1edbc c\u1ee7a n.\n    while (n % i == 0) {\n      n /= i;\n      u = u * i;\n      k += 1;\n    }\n    res = res * (k + 1);\n  }\n}\n\nif (n &gt; 1) {  // gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i c\u1ee7a n l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n  res = res * 2;\n}\n</code></pre>"},{"location":"algo/math/multiplicative-function/#4-dirichlet-convolution","title":"4. Dirichlet Convolution","text":"<p>Vi\u1ec7c ch\u1ee9ng minh tr\u1ef1c ti\u1ebfp m\u1ed9t h\u00e0m l\u00e0 h\u00e0m nh\u00e2n t\u00ednh nh\u01b0 v\u00ed d\u1ee5 v\u1ec1 h\u00e0m s\u1ed1 \u01b0\u1edbc \u1edf tr\u00ean kh\u00f4ng h\u1ec1 \u0111\u01a1n gi\u1ea3n. Ch\u1eb3ng h\u1ea1n, b\u1ea1n h\u00e3y th\u1eed ch\u1ee9ng minh h\u00e0m \\(f(n)\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh v\u1edbi \\(f(n)\\) l\u00e0 t\u1ed5ng c\u00e1c \u01b0\u1edbc c\u1ee7a s\u1ed1 \\(n\\). D\u0129 nhi\u00ean b\u1ea1n c\u00f3 th\u1ec3 ch\u1ee9ng minh tr\u00e2u b\u00f2 b\u1eb1ng c\u00e1ch vi\u1ebft ra m\u1ed9t \u0111\u1ed1ng c\u00f4ng th\u1ee9c, tuy nhi\u00ean \u1edf m\u1ee5c n\u00e0y m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1c b\u1ea1n m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p k\u1ef3 di\u1ec7u h\u01a1n.</p> <p>V\u1edbi 2 h\u00e0m \\(f\\) v\u00e0 \\(g\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh, ta c\u00f3 m\u1ed9t h\u00e0m nh\u00e2n t\u00ednh m\u1edbi \\(f \\times g\\):</p> \\[ (f \\times g)(n) = \\sum_{d_1 * d_2=n}{f(d_1) * g(d_2)} \\] <p>M\u1ed9t c\u00e1ch bi\u1ec3u di\u1ec5n kh\u00e1c l\u00e0:</p> \\[ (f \\times g)(n) = \\sum_{d | n}{f(d) * g(n/d)} \\] <p>C\u00e1c b\u1ea1n ch\u00fa \u00fd k\u00ed hi\u1ec7u \\(d \\| n\\) ngh\u0129a l\u00e0 \\(n\\) chia h\u1ebft cho \\(d\\).</p> <p>Ch\u1ee9ng minh</p> <p>X\u00e9t \\(a\\) v\u00e0 \\(b\\) nguy\u00ean t\u1ed1 c\u00f9ng nhau. M\u1ed7i \u01b0\u1edbc \\(d\\) c\u1ee7a \\(ab\\) c\u00f3 th\u1ec3 ph\u00e2n t\u00edch duy nh\u1ea5t d\u01b0\u1edbi d\u1ea1ng \\(d = rs\\) trong \u0111\u00f3 \\(r \\| a\\) v\u00e0 \\(s \\| b\\), do \\(gcd(a, b) = 1\\).</p> <p>Do \u0111\u00f3:</p> <p>\\((f \\times g)(ab)\\)</p> <p>\\(= \\sum_{r\\|a, s\\|b}{f(rs) g(ab/rs)}\\)</p> <p>$ = \\sum_{r|a, s|b}{f(r) f(s) g(a/r) g(b/s)}$</p> <p>$ = \\sum_{r|a}{f(r) g(a/r)} \\sum_{s|b}{f(s) g(b/s)}$</p> <p>$ = (f \\times g)(a) (f \\times g)(b)$</p> <p>Nh\u01b0 v\u1eady, \\((f \\times g)\\) c\u0169ng l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p> <p>\u0110\u1ec3 hi\u1ec3u th\u00eam v\u1ec1 Dirichlet Convolution, ta x\u00e9t v\u00e0i v\u00ed d\u1ee5:</p>"},{"location":"algo/math/multiplicative-function/#41-vi-du-1","title":"4.1. V\u00ed d\u1ee5 1","text":"<p>X\u00e9t h\u00e0m \\(f(n) = 1\\) v\u00e0 \\(g(n) = 1\\). R\u00f5 r\u00e0ng \\(f\\) v\u00e0 \\(g\\) \u0111\u1ec1u l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p> \\[ (f \\times g)(n) = \\sum_{d | n}{f(d) * g(n/d)} = \\sum_{d | n}{1} \\] <p>Nh\u01b0 v\u1eady \\((f \\* g)(n)\\) l\u00e0 s\u1ed1 \u01b0\u1edbc c\u1ee7a s\u1ed1 \\(n\\) v\u00e0 l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p>"},{"location":"algo/math/multiplicative-function/#42-vi-du-2","title":"4.2. V\u00ed d\u1ee5 2","text":"<p>X\u00e9t h\u00e0m \\(f(n) = n\\) v\u00e0 \\(g(n) = 1\\). R\u00f5 r\u00e0ng \\(f\\) v\u00e0 \\(g\\) \u0111\u1ec1u l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p> \\[ (f \\times g)(n) = \\sum_{d | n}{f(d) * g(n/d)} = \\sum_{d | n}{d} \\] <p>Nh\u01b0 v\u1eady \\((f \\times g)(n)\\) l\u00e0 t\u1ed5ng c\u00e1c \u01b0\u1edbc c\u1ee7a \\(n\\) v\u00e0 l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p> <p>T\u1ed5ng qu\u00e1t h\u01a1n, v\u1edbi h\u1eb1ng s\u1ed1 \\(k\\) b\u1ea5t k\u1ef3, h\u00e0m \\(f(n) = \\sum_{d \\| n}{d^k}\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh.</p>"},{"location":"algo/math/multiplicative-function/#43-cac-ham-nhan-tinh-thuong-gap","title":"4.3. C\u00e1c h\u00e0m nh\u00e2n t\u00ednh th\u01b0\u1eddng g\u1eb7p","text":"<p>Sau \u0111\u00e2y l\u00e0 c\u00e1c h\u00e0m nh\u00e2n t\u00ednh th\u01b0\u1eddng g\u1eb7p. B\u1ea1n c\u00f3 th\u1ec3 th\u1eed ch\u1ee9ng minh nh\u1eefng h\u00e0m n\u00e0y l\u00e0 h\u00e0m nh\u00e2n t\u00ednh d\u1ef1a theo \u0111\u1ecbnh ngh\u0129a ho\u1eb7c Dirichlet Convolution. Vi\u1ec7c n\u1eafm \u0111\u01b0\u1ee3c nh\u1eefng h\u00e0m n\u00e0y s\u1ebd gi\u00fap thu\u1eadn l\u1ee3i h\u01a1n trong vi\u1ec7c g\u1ec9ai nh\u1eefng b\u00e0i li\u00ean quan \u0111\u1ebfn h\u00e0m nh\u00e2n t\u00ednh.</p> <ul> <li>\\(I(n) = 1\\), h\u00e0m \\(f\\) lu\u00f4n b\u1eb1ng 1 v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(n\\).</li> <li>\\(id(n) = n\\)</li> <li>\\(id_k(n) = n^k\\)</li> <li>\\(gcd(n, k)\\) v\u1edbi k l\u00e0 h\u1eb1ng s\u1ed1</li> <li>\\(phi(n)\\): s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(n\\) v\u00e0 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(n\\) (Phi h\u00e0m Euler)</li> <li>\\(mobius(n)\\): H\u00e0m mobius th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng trong c\u00e1c b\u00e0i to\u00e1n \u0111\u1ebfm s\u1eed d\u1ee5ng nguy\u00ean l\u00fd b\u00f9 tr\u1eeb:</li> <li>N\u1ebfu \\(n\\) c\u00f3 \u01b0\u1edbc l\u00e0 s\u1ed1 ch\u00ednh ph\u01b0\u01a1ng kh\u00e1c 1, \\(mobius(n) = 0\\).</li> <li>N\u1ebfu \\(n\\) c\u00f3 l\u1ebb \u01b0\u1edbc nguy\u00ean t\u1ed1, \\(mobius(n) = -1\\).</li> <li>N\u1ebfu \\(n\\) c\u00f3 ch\u1eb5n \u01b0\u1edbc nguy\u00ean t\u1ed1, \\(mobius(n) = 1\\). Ch\u00fa \u00fd \\(mobius(1) = 1\\).</li> <li>\\(f(n) = \\sum_{d \\|n}{d}\\) l\u00e0 t\u1ed5ng c\u00e1c \u01b0\u1edbc c\u1ee7a \\(n\\).</li> <li>\\(f_k(n) = \\sum_{d \\| n}{d^k}\\) v\u1edbi \\(k\\) l\u00e0 h\u1eb1ng s\u1ed1.</li> </ul>"},{"location":"algo/math/multiplicative-function/#5-tong-ket","title":"5. T\u1ed5ng k\u1ebft","text":"<p>Nh\u01b0 v\u1eady, n\u1ebfu b\u1ea1n ch\u1ee9ng minh \u0111\u01b0\u1ee3c m\u1ed9t h\u00e0m \\(f\\) l\u00e0 h\u00e0m nh\u00e2n t\u00ednh, v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c c\u00f4ng th\u1ee9c \\(O(1)\\) cho \\(f(p^k)\\) th\u00ec s\u1ebd d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb \\(f(i), i \\le N\\) trong \\(O(N*logN)\\).</p> <p>B\u1ea1n c\u0169ng n\u00ean n\u1eafm \u0111\u01b0\u1ee3c nh\u1eefng h\u00e0m nh\u00e2n t\u00ednh th\u01b0\u1eddng g\u1eb7p, t\u1eeb \u0111\u00f3 gi\u00fap nh\u1eadn d\u1ea1ng b\u00e0i to\u00e1n d\u1ec5 d\u00e0ng h\u01a1n.</p>"},{"location":"algo/math/multiplicative-function/#bai-luyen-tap","title":"B\u00e0i luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOJ - GCDSUM</li> </ul> <p>G\u1ee3i \u00fd: X\u00e9t \\(f(n) = \\sum_{1 \\le i \\le n}{gcd(n, i)}\\).</p> <ul> <li>CF #391 - E</li> </ul> <p>G\u1ee3i \u00fd: T\u00ecm c\u00e1ch b\u1ecf ph\u00e9p c\u1ed9ng trong c\u00f4ng th\u1ee9c c\u1ee7a \\(f_r(n)\\).</p> <ul> <li>CF #400 - E</li> </ul>"},{"location":"algo/math/multiplicative-function/#reference","title":"Reference","text":"<ul> <li>Wikipedia</li> </ul>"},{"location":"algo/search/Local-Search/","title":"Local Search","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n Th\u00e0nh Trung (RR)</p>"},{"location":"algo/search/Local-Search/#bai-toan-mo-au-tsp","title":"B\u00e0i to\u00e1n m\u1edf \u0111\u1ea7u (TSP)","text":"<p>Cho N \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng, \u0111\u00e1nh s\u1ed1 t\u1eeb 1 \u0111\u1ebfn N. T\u00ecm m\u1ed9t chu tr\u00ecnh xu\u1ea5t ph\u00e1t t\u1eeb \u0111i\u1ec3m th\u1ee9 1, \u0111i qua t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m, m\u1ed7i \u0111\u1ec9nh \u0111\u00fang 1 l\u1ea7n v\u00e0 quay tr\u1edf v\u1ec1 \u0111\u1ec9nh ban \u0111\u1ea7u.</p> <p>B\u00e0i to\u00e1n n\u00e0y l\u00e0 NP, kh\u00f4ng c\u00f3 thu\u1eadt to\u00e1n t\u1ed1i \u01b0u v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111a th\u1ee9c. T\u00ean g\u1ecdi ph\u1ed5 bi\u1ebfn c\u1ee7a b\u00e0i n\u00e0y l\u00e0 Traveling Salesman Problem (TSP).</p> <p>Khi g\u1eb7p b\u00e0i NP, ta ch\u1ec9 c\u00f3 th\u1ec3 t\u00ecm c\u00e1ch \u0111\u01b0a ra m\u1ed9t k\u1ebft qu\u1ea3 c\u00e0ng t\u1ed1i \u01b0u c\u00e0ng t\u1ed1t. M\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p th\u01b0\u1eddng d\u00f9ng l\u00e0 tham lam ho\u1eb7c local search - s\u1ebd \u0111\u01b0\u1ee3c n\u00f3i trong b\u00e0i vi\u1ebft n\u00e0y.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 n\u1ed9p th\u1eed b\u00e0i n\u00e0y \u1edf VNOJ.</p>"},{"location":"algo/search/Local-Search/#tham-lam","title":"Tham Lam","text":"<p>M\u1ed9t thu\u1eadt to\u00e1n r\u1ea5t h\u1ed3n nhi\u00ean nh\u1ea5t l\u00e0, xu\u1ea5t ph\u00e1t t\u1eeb \u0111i\u1ec3m th\u1ee9 1, t\u1ea1i m\u1ed7i b\u01b0\u1edbc, ta s\u1ebd di chuy\u1ec3n \u0111\u1ebfn \u0111i\u1ec3m g\u1ea7n n\u00f3 nh\u1ea5t (m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c di chuy\u1ec3n \u0111\u1ebfn tr\u01b0\u1edbc \u0111\u00f3). L\u1eb7p l\u1ea1i N l\u1ea7n, ta thu \u0111\u01b0\u1ee3c m\u1ed9t chu tr\u00ecnh.</p> <p>C\u00e0i \u0111\u1eb7t 1 s\u1ed1 ph\u1ea7n ch\u00ednh:</p> <pre><code>struct Point {\n    double x, y;\n    Point(double x = 0, double y = 0) : x(x), y(y) {}\n\n    Point operator - (Point a) { return Point(x-a.x, y-a.y); }\n    double len() { return sqrt(x*x + y*y); }\n} a[MAXN];\n\nbool used[MAXN];  // \u0110\u00e1nh d\u1ea5u \u0111i\u1ec3m \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111i qua.\nint id[MAXN];  // L\u01b0u ch\u1ec9 s\u1ed1 c\u1ee7a c\u00e1c \u0111i\u1ec3m trong k\u1ebft qu\u1ea3 t\u00ecm \u0111\u01b0\u1ee3c.\n\nvoid solve() {\n    memset(used, false, sizeof used);\n    used[1] = true;\n    id[1] = 1;\n\n    for(int i = 2; i &lt;= n; ++i) {\n        double bestDist = 1e6;\n        int save = -1;\n\n        for(int j = 1; j &lt;= n; ++j) {\n            double curDist = (a[current.id[i-1]] - a[j]).len();\n            if (!used[j] &amp;&amp; curDist &lt; bestDist) {\n                bestDist = curDist;\n                save = j;\n            }\n        }\n        id[i] = save;\n        used[save] = true;\n    }\n}\n</code></pre> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 k\u1ebft qu\u1ea3 khi m\u00ecnh ch\u1ea1y v\u1edbi m\u1ed9t b\u1ed9 test \u0111\u01b0\u1ee3c sinh random g\u1ed3m 50 \u0111\u1ec9nh:</p> <p></p> <p>Khi quan s\u00e1t k\u1ebft qu\u1ea3 c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean, d\u1ec5 th\u1ea5y c\u00f3 r\u1ea5t nhi\u1ec1u c\u1eb7p c\u1ea1nh c\u1eaft nhau. Khi t\u1ed3n t\u1ea1i 2 c\u1ea1nh AB v\u00e0 CD c\u1eaft nhau, ta c\u00f3 th\u1ec3 \u0111\u1ea3o n\u00f3 th\u00e0nh AC v\u00e0 BD ho\u1eb7c AD v\u00e0 BC, v\u00e0 gi\u1eef nguy\u00ean ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a chu tr\u00ecnh. Nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u1ed9t k\u1ebft qu\u1ea3 t\u1ed1t h\u01a1n. Nh\u1eadn x\u00e9t n\u00e0y \u0111\u01b0a ta \u0111\u1ebfn v\u1edbi \u00fd t\u01b0\u1edfng th\u1ee9 2:</p>"},{"location":"algo/search/Local-Search/#local-search","title":"Local Search","text":"<p>X\u00e9t m\u1ed9t chu tr\u00ecnh ban \u0111\u1ea7u b\u1ea5t k\u1ef3. X\u00e9t t\u1ea5t c\u1ea3 \\(N^2\\) c\u1eb7p c\u1ea1nh, v\u1edbi m\u1ed7i c\u1eb7p c\u1ea1nh u, v, ta c\u00f3 chu tr\u00ecnh <code>1 --&gt; u-1 --&gt; u --&gt; v-1 --&gt; v --&gt; 1</code>, ta th\u1eed \u0111\u1ed5i n\u00f3 th\u00e0nh <code>1 --&gt; u-1 --&gt; v-1 --&gt; u --&gt; v --&gt; 1</code>. N\u1ebfu vi\u1ec7c \u0111\u1ed5i n\u00e0y cho ta m\u1ed9t chu tr\u00ecnh c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf h\u01a1n, ta gi\u1eef l\u1ea1i chu tr\u00ecnh m\u1edbi n\u00e0y.</p> <p>C\u00e0i \u0111\u1eb7t:</p> <pre><code>void optimize() {\n    while (true) {\n        bool stop = true;\n        for(int u = 2; u &lt;= n; ++u) {\n            for(int v = n-1; v &gt; u; --v) {\n                // t1 = (c\u1ea1nh (u-1) --&gt; u) + (c\u1ea1nh (v --&gt; (v+1))\n                double t1 = (a[id[u-1]] - a[id[u]]).len()\n                        + (a[id[v]] - a[id[v+1]]).len();\n                // t2 = (c\u1ea1nh (u-1) --&gt; v) + (c\u1ea1nh (u --&gt; (v+1))\n                double t2 = (a[id[u-1]] - a[id[v]]).len()\n                        + (a[id[u]] - a[id[v+1]]).len();\n                if (t1 &gt; t2) {  // N\u1ebfu \u0111\u1ed5i chu tr\u00ecnh cho k\u1ebft qu\u1ea3 t\u1ed1t h\u01a1n\n                    for(int i = u, j = v; i &lt;= j; ++i, --j) {\n                        swap(id[i], id[j]);\n                    }\n                    stop = false;\n                }\n            }\n        }\n        if (stop) break;\n    }\n}\n</code></pre> <p>Minh h\u1ecda cho test tr\u00ean (ch\u00fa \u00fd r\u1eb1ng m\u00ecnh c\u00e0i \u0111\u1eb7t sai v\u00e0 kh\u00f4ng x\u00e9t c\u1ea1nh n\u1ed1i t\u1eeb \u0111\u1ec9nh cu\u1ed1i \u0111\u1ebfn \u0111\u1ec9nh 1, n\u00ean c\u00f2n m\u1ed9t c\u1eb7p c\u1ea1nh c\u1eaft nhau ^_^):</p> <p></p> <p>\u00dd t\u01b0\u1edfng n\u00e0y ch\u00ednh l\u00e0 n\u1ec1n t\u1ea3ng c\u1ee7a Local Search: Xu\u1ea5t ph\u00e1t t\u1eeb m\u1ed9t c\u1ea5u h\u00ecnh k\u1ebft qu\u1ea3, ta t\u00ecm c\u00e1ch thay \u0111\u1ed5i m\u1ed9t ph\u1ea7n c\u1ee7a c\u1ea5u h\u00ecnh \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u1ed9t c\u1ea5u h\u00ecnh t\u1ed1t h\u01a1n. Th\u00f4ng th\u01b0\u1eddng, c\u00e0i \u0111\u1eb7t local search g\u1ed3m 3 b\u01b0\u1edbc ch\u00ednh:</p> <ul> <li>Kh\u1edfi t\u1ea1o m\u1ed9t c\u1ea5u h\u00ecnh k\u1ebft qu\u1ea3 b\u1ea5t k\u1ef3</li> <li>G\u1ecdi C l\u00e0 c\u1ea5u h\u00ecnh hi\u1ec7n t\u1ea1i. Ta x\u00e9t c\u00e1c c\u1ea5u h\u00ecnh \"k\u1ec1\" v\u1edbi C, ch\u1ecdn ra c\u1ea5u h\u00ecnh t\u1ed1t nh\u1ea5t. C\u1eadp nh\u1eadt c\u1ea5u h\u00ecnh n\u00e0y cho C.</li> <li>L\u1eb7p l\u1ea1i \u0111\u1ebfn khi ta kh\u00f4ng th\u1ec3 c\u1eadp nh\u1eadt \u0111\u01b0\u1ee3c C.</li> </ul> <p>Trong c\u00e1c b\u01b0\u1edbc tr\u00ean c\u00f3 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn kh\u00e1i ni\u1ec7m \"k\u1ec1\" c\u1ee7a 2 c\u1ea5u h\u00ecnh. Kh\u00e1i ni\u1ec7m n\u00e0y ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 t\u1eadp nh\u1eefng c\u1ea5u h\u00ecnh m\u00e0 ta x\u00e9t \u0111\u1ebfn khi \u0111ang \u1edf m\u1ed9t c\u1ea5u h\u00ecnh nh\u1ea5t \u0111\u1ecbnh. Ch\u1eb3ng h\u1ea1n trong b\u00e0i to\u00e1n m\u1edf \u0111\u1ea7u, v\u1edbi m\u1ed7i \u0111\u01b0\u1eddng \u0111i, c\u00e1c c\u1ea5u h\u00ecnh k\u1ec1 n\u00f3 l\u00e0 c\u00e1c \u0111\u01b0\u1eddng \u0111i nh\u1eadn \u0111\u01b0\u1ee3c khi \u0111\u1ed5i m\u1ed9t c\u1eb7p c\u1ea1nh.</p>"},{"location":"algo/search/Local-Search/#local-search-duoi-cach-hieu-cua-ai-so","title":"Local Search d\u01b0\u1edbi c\u00e1ch hi\u1ec3u c\u1ee7a \u0111\u1ea1i s\u1ed1","text":"<p>X\u00e9t m\u1ed9t b\u00e0i to\u00e1n t\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a m\u1ed9t h\u00e0m 2 chi\u1ec1u J(theta0, theta1).</p> <p></p> <p>H\u00ecnh v\u1ebd tr\u00ean m\u00f4 t\u1ea3 c\u00e1ch l\u00e0m c\u1ee7a local search: Xu\u1ea5t ph\u00e1t t\u1eeb \u0111i\u1ec3m xanh \u0111\u1eadm, ta x\u00e9t c\u00e1c \u0111i\u1ec3m \u1edf g\u1ea7n n\u00f3, t\u00ecm \u0111i\u1ec3m m\u00e0 J l\u1edbn nh\u1ea5t, r\u1ed3i di chuy\u1ec3n \u0111\u1ebfn \u0111i\u1ec3m \u0111\u00f3.</p>"},{"location":"algo/search/Local-Search/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:","text":"<ul> <li>ACM ICPC National Vietnam 2017 - B\u00e0i E<ul> <li>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i t\u1eadp \u0111i\u1ec3n h\u00ecnh v\u1ec1 \u00e1p d\u1ee5ng Local Search trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u (Competitive programming). C\u00e1c b\u1ea1n n\u00ean l\u00e0m th\u1eed b\u00e0i n\u00e0y tr\u01b0\u1edbc khi l\u00e0m nh\u1eefng b\u00e0i kh\u00e1c.</li> <li>L\u1eddi gi\u1ea3i chi ti\u1ebft</li> </ul> </li> <li>SPOJ - PANEL</li> <li>IPSC 2013 - Invisible cats</li> <li>https://www.facebook.com/note.php?note_id=10150106829298920</li> </ul>"},{"location":"algo/skill/Ki-nang-thi-cu/","title":"T\u1ed5ng h\u1ee3p c\u00e1c l\u1eddi khuy\u00ean cho c\u00e1c k\u1ef3 thi","text":""},{"location":"algo/skill/Ki-nang-thi-cu/#nhung-loi-khuyen-truoc-khi-thi-qg-2017-pham-van-hanh-skyvn97","title":"Nh\u1eefng l\u1eddi khuy\u00ean tr\u01b0\u1edbc khi thi QG 2017 - Ph\u1ea1m V\u0103n H\u1ea1nh (skyvn97)","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>V\u1eady l\u00e0 ch\u1ec9 c\u00f2n h\u01a1n 10 ng\u00e0y n\u1eefa, k\u00ec thi h\u1ecdc sinh gi\u1ecfi qu\u1ed1c gia s\u1ebd b\u1eaft \u0111\u1ea7u. \u0110\u1ec3 gi\u00fap c\u00e1c b\u1ea1n \u0111\u1ea1t \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 cao trong k\u00ec thi n\u00e0y, m\u00ecnh xin \u0111\u01b0\u1ee3c ra m\u1eaft chuy\u00ean m\u1ee5c M\u1ed7i ng\u00e0y m\u1ed9t l\u1eddi khuy\u00ean. K\u1ec3 t\u1eeb mai cho \u0111\u1ebfn tr\u01b0\u1edbc khi thi, m\u1ed7i ng\u00e0y m\u00ecnh s\u1ebd chia s\u1ebb m\u1ed9t kinh nghi\u1ec7m nho nh\u1ecf \u0111\u1ec3 chu\u1ea9n b\u1ecb cho k\u00ec thi. \u0110\u1ed3ng th\u1eddi, chuy\u00ean m\u1ee5c c\u0169ng nh\u01b0 chi\u1ebfc \u0111\u1ed3ng h\u1ed3 \u0111\u1ebfm ng\u01b0\u1ee3c t\u1eebng ng\u00e0y t\u1edbi k\u00ec thi, l\u00e0m t\u0103ng th\u00eam ph\u1ea7n h\u1ed3i h\u1ed9p, k\u1ecbch t\u00ednh, gay c\u1ea5n, c\u0103ng th\u1eb3ng. Hy v\u1ecdng r\u1eb1ng, v\u1edbi chi\u1ebfc \u0111\u1ed3ng h\u1ed3 n\u00e0y, c\u00e1c b\u1ea1n th\u00ed sinh s\u1ebd c\u1ea3m th\u1ea5y th\u00eam \u00e1p l\u1ef1c, th\u00eam lo l\u1eafng, th\u00eam s\u1ee3 h\u00e3i, t\u0103ng x\u00f4ng, t\u0103ng huy\u1ebft \u00e1p, ng\u1ea5t x\u1ec9u, \u0111\u1ed9t qu\u1ef5, r\u1ed1i lo\u1ea1n ti\u00eau ho\u00e1, bi\u1ebfng \u0103n, ch\u1eadm l\u1edbn, c\u00f2i x\u01b0\u01a1ng, suy dinh d\u01b0\u1ee1ng, ch\u00e1n \u0111\u1eddi, th\u1ea5t t\u00ecnh, mu\u1ed1n t\u1ef1 t\u1eed. M\u00ecnh xin cam k\u1ebft r\u1eb1ng, sau lo\u1ea1t b\u00e0i vi\u1ebft n\u00e0y, b\u1ea1n n\u00e0o v\u1eabn c\u00f2n \u0111\u1ee7 can \u0111\u1ea3m b\u01b0\u1edbc v\u00e0o ph\u00f2ng thi qu\u1ed1c gia th\u00ec c\u0169ng c\u00f3 \u0111\u1ee7 s\u1ee9c m\u1ea1nh \u0111\u1ec3 v\u01b0\u1ee3t qua m\u1ecdi s\u00f3ng gi\u00f3 c\u1ee7a k\u00ec thi... tuy\u1ec3n sinh v\u00e0o \u0111\u1ea1i h\u1ecdc v\u00e0 s\u1eb5n s\u00e0ng tham gia k\u00ec thi n\u00e0y.</p> <p>\u0110\u1eebng qu\u00ean check Facebook VNOI m\u1ed7i ng\u00e0y \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c nh\u1eefng l\u1eddi khuy\u00ean b\u1ed5 \u00edch. L\u01b0u \u00fd r\u1eb1ng \u0111\u00e2y ch\u1ec9 l\u00e0 nh\u1eefng l\u1eddi khuy\u00ean d\u1ef1a tr\u00ean kinh nghi\u1ec7m thi VOI c\u1ee7a m\u00ecnh, v\u00ec v\u1eady c\u00e1c b\u1ea1n n\u00ean tham kh\u1ea3o v\u00e0 \u00e1p d\u1ee5ng cho ph\u00f9 h\u1ee3p. Ch\u00fac c\u00e1c b\u1ea1n m\u1ed9t n\u0103m m\u1edbi tr\u00e0n \u0111\u1ea7y ni\u1ec1m vui v\u00e0 g\u1eb7t h\u00e1i nhi\u1ec1u may m\u1eafn, kh\u1edfi \u0111\u1ea7u b\u1eb1ng m\u1ed9t k\u1ef3 thi HSG th\u00e0nh c\u00f4ng r\u1ef1c r\u1ee1.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#10-lam-lai-e-voi-5-nam-truoc","title":"10. L\u00e0m l\u1ea1i \u0111\u1ec1 VOI 5 n\u0103m tr\u01b0\u1edbc","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>Tr\u01b0\u1edbc m\u1ed7i k\u00ec thi, b\u1ea1n c\u1ea7n t\u00ecm hi\u1ec3u \u0111\u1ec1 ra nh\u1eefng n\u0103m tr\u01b0\u1edbc \u0111\u1ec3 ng\u1eedi \u0111\u01b0\u1ee3c \"h\u01b0\u01a1ng v\u1ecb\" c\u1ee7a n\u00f3. Con s\u1ed1 5 n\u0103m l\u00e0 v\u1eeba \u0111\u1ee7, b\u1edfi k\u1ef3 thi \u1edf nh\u1eefng n\u0103m tr\u01b0\u1edbc n\u1eefa c\u00f3 th\u1ec3 kh\u00e1c xa so v\u1edbi hi\u1ec7n t\u1ea1i, l\u1ea1i v\u1eeba kh\u00f3 ki\u1ebfm \u0111\u01b0\u1ee3c \u0111\u1ec1, v\u00e0 tr\u00ean h\u1ebft, b\u1ea1n kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t nh\u00e0 s\u1eed h\u1ecdc n\u00ean kh\u00f4ng c\u00f3 nhu c\u1ea7u t\u00ecm hi\u1ec3u xem v\u00e0o th\u1eddi Vua H\u00f9ng d\u1ef1ng n\u01b0\u1edbc, k\u1ef3 thi HSGQG \u0111\u00e3 di\u1ec5n ra nh\u01b0 th\u1ebf n\u00e0o; hay v\u00e0o th\u1eddi k\u1ef3 \u0111\u1ed3 \u0111\u00e1, ng\u01b0\u1eddi ta \u0111\u00e3 thi l\u1eadp tr\u00ecnh hay ch\u01b0a. Quan tr\u1ecdng l\u00e0, b\u1ea1n c\u1ea7n ch\u00fa \u00fd \u0111\u1ebfn v\u0103n phong ra \u0111\u1ec1, m\u1ed9t s\u1ed1 ch\u1ee7 \u0111\u1ec1 hay xu\u1ea5t hi\u1ec7n, ho\u1eb7c \u0111\u1ed9 kh\u00f3 (trung b\u00ecnh) c\u1ee7a n\u00f3.</p> <p>L\u01b0u \u00fd r\u1eb1ng, \u0110\u1ec0 RA N\u0102M NAY KH\u00d4NG \u0110\u1ea2M B\u1ea2O S\u1ebc T\u01af\u01a0NG T\u1ef0 NH\u01af NH\u1eeeNG N\u0102M TR\u01af\u1edaC. B\u1ea1n c\u1ed1 g\u1eafng l\u00e0m th\u1eed, n\u1ebfu \u0111\u01b0\u1ee3c, gi\u00e0nh ra 3h \u0111\u1ed3ng h\u1ed3 li\u00ean t\u1ee5c. Tr\u00e1nh vi\u1ec7c l\u00e0m \u0111c 1h, \u0111i wc 5h, r l\u00e0m n\u1ed1t 2h n\u1eefa. V\u00ec nh\u1eefng j di\u1ec5n ra trong wc k \u0111\u1ea3m b\u1ea3o ch\u1ea5t l\u01b0\u1ee3ng b\u00e0i thi s\u1ebd gi\u1ed1ng nh\u01b0 l\u00fac b\u1ea1n thi th\u1eadt :v Ngo\u00e0i ra, b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u m\u1ee9c \u0111i\u1ec3m thi c\u1ee7a n\u0103m \u0111\u00f3 \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 tr\u00ecnh \u0111\u1ed9 c\u1ee7a m\u00ecnh. \u0110i\u1ec3m thi t\u1eebng n\u0103m c\u00f3 th\u1ec3 kh\u00e1c bi\u1ec7t, nh\u01b0ng nh\u00ecn chung, ch\u1ea5t l\u01b0\u1ee3ng th\u00ed sinh th\u00ec k thay \u0111\u1ed5i nhi\u1ec1u.</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 danh s\u00e1ch c\u00e1c b\u00e0i thi ch\u00ednh th\u1ee9c c\u1ee7a HSGQG (tr\u00ean VNOJ), k\u00e8m theo b\u1ea3ng \u0111i\u1ec3m trong c\u00e1c n\u0103m g\u1ea7n \u0111\u00e2y:</p> <ul> <li>2016: SEQ198, VOHAUCAN, IDCODE, RBULL, VOIEXAM, VODONCAY</li> <li>2015: TFIELD, CRYPTKEY, REFORM, MINCUT, VODIVIDE, VOITSORT</li> <li>2014: MINROAD, LCS2X, AZNET, BALLGMVN, QOS, JOBSET</li> <li>2013: ORGAN, TOURS13, STMERGE, COMNET, MESSAGE1, BONUS13</li> <li>2012: TRAVEL12, MOVE12, HAM12, ROBOCON, CROSS12, FIBVAL</li> <li>2011: TREELINE, BONUS, COLOREC, BWPOINTS, PARIGAME, UPGRANET</li> </ul> <p>K\u1ebft qu\u1ea3 thi ch\u00ednh th\u1ee9c:</p> <ul> <li>2016</li> <li>2015</li> <li>2014</li> </ul>"},{"location":"algo/skill/Ki-nang-thi-cu/#9-oc-lai-phan-o-thi-trong-cuon-sach-cua-thay-hoang","title":"9. \u0110\u1ecdc l\u1ea1i ph\u1ea7n \u0110\u1ed3 th\u1ecb trong cu\u1ed1n s\u00e1ch c\u1ee7a th\u1ea7y Ho\u00e0ng","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>\u0110\u1ed3 th\u1ecb l\u00e0 ch\u1ee7 \u0111\u1ec1 ph\u1ed5 bi\u1ebfn nh\u1ea5t trong m\u1ed7i \u0111\u1ec1 thi qu\u1ed1c gia. N\u0103m n\u00e0o c\u0169ng c\u00f3 \u0111\u1ed3 th\u1ecb, \u00edt th\u00ec m\u1ed9t b\u00e0i, nhi\u1ec1u th\u00ec c\u00f3 th\u1ec3 l\u00e0 hai (2016, 2013, 2012) hay th\u1eadm ch\u00ed ba b\u00e0i (2014). Kh\u00f4ng ch\u1ec9 c\u00e1c \u0111o\u1ea1n m\u00e3 ngu\u1ed3n v\u00e0 thu\u1eadt to\u00e1n, b\u1ea1n c\u1ea7n ch\u00fa \u00fd \u0111\u1ebfn c\u1ea3 ph\u1ea7n l\u00fd thuy\u1ebft v\u00e0 nh\u1eefng kh\u00e1i ni\u1ec7m nh\u01b0 chu tr\u00ecnh/\u0111\u01b0\u1eddng \u0111i euler/hamilton, chu tr\u00ecnh/\u0111\u01b0\u1eddng \u0111i \u0111\u01a1n, \u0111a \u0111\u1ed3 th\u1ecb, khuy\u00ean,... \u0111\u1ec3 tr\u00e1nh vi\u1ec7c kh\u00f4ng n\u1eafm \u0111\u01b0\u1ee3c \u0111\u1ec1 b\u00e0i n\u1ebfu nh\u01b0 c\u00e1c kh\u00e1i ni\u1ec7m n\u00e0y xu\u1ea5t hi\u1ec7n trong \u0111\u1ec1. C\u00e1c thu\u1eadt to\u00e1n nh\u01b0 kh\u1edbp, c\u1ea7u, FordBellman d\u1ec5 b\u1ecb l\u00e3ng qu\u00ean do s\u1ed1 l\u01b0\u1ee3ng b\u00e0i v\u1ec1 n\u00f3 kh\u00f4ng nhi\u1ec1u, nh\u01b0ng ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 g\u1eb7p l\u1ea1i trong \u0111\u1ec1 thi. B\u00e0i REFORM (VOI 2015 ) l\u00e0 \u0111i\u1ec3n h\u00ecnh c\u1ee7a vi\u1ec7c nhi\u1ec1u b\u1ea1n kh\u00f4ng nh\u1edb c\u00e1c thu\u1eadt to\u00e1n v\u1ec1 c\u1ea7u n\u00ean kh\u00f4ng gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i n\u00e0y, d\u00f9 thu\u1eadt to\u00e1n c\u1ee7a n\u00f3 kh\u00e1 t\u1ef1 nhi\u00ean v\u00e0 \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#8-chu-trong-viec-ren-luyen-ki-nang-code-hon-la-suy-nghi","title":"8. Ch\u00fa tr\u1ecdng vi\u1ec7c r\u00e8n luy\u1ec7n k\u0129 n\u0103ng code h\u01a1n l\u00e0 suy ngh\u0129","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>C\u00f3 m\u1ed9t s\u1ef1 th\u1eadt l\u00e0, VOI l\u00e0 k\u00ec thi \u0111\u00f2i h\u1ecfi k\u0129 n\u0103ng h\u01a1n l\u00e0 t\u01b0 duy thu\u1eadt to\u00e1n. C\u00e2u n\u00f3i \"c\u1ee9 tr\u00e2u h\u1ebft l\u00e0 v\u00e0o v\u00f2ng hai\" kh\u00f4ng ph\u1ea3i l\u00e0 kh\u00f4ng c\u00f3 c\u01a1 s\u1edf, khi lu\u1eadt thi offline \u0111ang \u0111\u1ea9y vai tr\u00f2 c\u1ee7a s\u1ef1 c\u1ea9n th\u1eadn l\u00ean cao h\u01a1n bao gi\u1edd h\u1ebft. N\u1ebfu b\u1ea1n \u0111\u1ea3m b\u1ea3o to\u00e0n b\u1ed9 code c\u1ee7a b\u1ea1n l\u00e0 kh\u00f4ng bug, ngh\u0129a l\u00e0 \u0111i\u1ec3m c\u1ee7a b\u1ea1n \u0111\u00fang v\u1edbi kh\u1ea3 n\u0103ng b\u1ea1n l\u00e0m \u0111\u01b0\u1ee3c, th\u00ec \u0111\u00f3 \u0111\u00e3 l\u00e0 l\u1ee3i th\u1ebf qu\u00e1 l\u1edbn. M\u00ecnh ngh\u0129 r\u1eb1ng kh\u00f4ng c\u00f3 qu\u00e1 30 b\u1ea1n th\u00ed sinh c\u00f3 kh\u1ea3 n\u0103ng gi\u1eef \u0111\u01b0\u1ee3c s\u1ef1 \u1ed5n \u0111\u1ecbnh v\u00e0 t\u00ednh c\u1ea9n th\u1eadn trong khi l\u00e0m b\u00e0i, ngh\u0129a l\u00e0 s\u1ebd c\u00f3 r\u1ea5t \u00edt b\u1ea1n gi\u1eef \u0111\u01b0\u1ee3c phong \u0111\u1ed9 thi \u0111\u1ea5u \u1ed5n \u0111\u1ecbnh gi\u1eefa hai k\u00ec thi PreVOI v\u00e0 VOI. V\u00ec v\u1eady, b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ee7 quan. Gi\u1ea3i nh\u1ea5t PreVOI ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111i k\u00e8m v\u1edbi gi\u1ea3i ba VOI. V\u00e0 \u1edf chi\u1ec1u ng\u01b0\u1ee3c l\u1ea1i, c\u0169ng kh\u00f4ng vi\u1ec7c g\u00ec ph\u1ea3i lo l\u1eafng, b\u1edfi n\u1ebfu b\u1ea1n ch\u1ecbu kh\u00f3 v\u00e0 n\u1ed7 l\u1ef1c, m\u1ed9t gi\u1ea3i ba PreVOI s\u1ebd \u0111\u01b0\u1ee3c n\u1ed1i ti\u1ebfp b\u1edfi gi\u1ea3i khuy\u1ebfn kh\u00edch VOI.</p> <p>V\u00ec t\u01b0\u01a1ng lai con em ch\u00fang ta, ngay t\u1eeb l\u00fac n\u00e0y, b\u1ea1n n\u00ean ch\u1ecbu kh\u00f3 code nhi\u1ec1u, code ch\u1eafc tay, code c\u1ea9n th\u1eadn thay v\u00ec ngh\u0129 nh\u1eefng b\u00e0i qu\u00e1 kh\u00f3.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#7-tan-dung-cac-ki-thi-thu-e-xac-inh-chien-thuat-trong-ki-thi-that","title":"7. T\u1eadn d\u1ee5ng c\u00e1c k\u00ec thi th\u1eed \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh chi\u1ebfn thu\u1eadt trong k\u00ec thi th\u1eadt","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>180p l\u00e0 qu\u00e1 ng\u1eafn ng\u1ee7i \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m tr\u1ecdn v\u1eb9n v\u00e0 ch\u1eafc ch\u1eafn c\u1ea3 ba b\u00e0i trong \u0111\u1ec1 thi. Trong 180p, b\u1ea1n c\u00f3 qu\u00e1 nhi\u1ec1u vi\u1ec7c \u0111\u1ec3 l\u00e0m: \u0110\u1ecdc \u0111\u1ec1, ngh\u0129 thu\u1eadt to\u00e1n, code, ki\u1ec3m tra t\u00ean file, sinh test ch\u1ea1y tr\u00e2u so k\u1ebft qu\u1ea3, \u0111i wc, \u0103n u\u1ed1ng, ng\u1ee7 ngh\u1ec9, ch\u01a1i d\u00f2 m\u00ecn... B\u1edfi th\u1ebf, vi\u1ec7c ph\u00e2n chia th\u1eddi gian sao cho hi\u1ec7u qu\u1ea3 \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng. Ti\u1ebfc r\u1eb1ng, chi\u1ebfn l\u01b0\u1ee3c t\u1ed1i \u01b0u cho m\u1ed7i ng\u01b0\u1eddi kh\u00f4ng gi\u1ed1ng nhau, t\u00f9y thu\u1ed9c v\u00e0o kh\u1ea3 n\u0103ng ngh\u0129, t\u1ed1c \u0111\u1ed9 code, \u0111\u1eb7c \u0111i\u1ec3m t\u00e2m sinh l\u00fd,... V\u00ec v\u1eady, trong hai ng\u00e0y thi VO t\u1edbi, b\u1ea1n c\u1ea7n th\u1ef1c hi\u1ec7n m\u1ecdi c\u00f4ng vi\u1ec7c tr\u00ean nh\u01b0 m\u1ed9t k\u00ec thi th\u1eadt. Sau khi thi xong, b\u1ea1n n\u00ean nh\u1edb l\u1ea1i qu\u00e1 tr\u00ecnh m\u00ecnh l\u00e0m b\u00e0i thi, ph\u00e2n t\u00edch v\u00e0 \u0111\u00e1nh gi\u00e1 n\u00f3 (Th\u1eddi gian ph\u00e2n chia v\u00e0o c\u00f4ng vi\u1ec7c n\u00e0o b\u1ecb qu\u00e1 \u00edt, qu\u00e1 nhi\u1ec1u, s\u1eafp x\u1ebfp th\u1ee9 t\u1ef1 l\u00e0m b\u00e0i \u0111\u00e3 h\u1ee3p l\u00fd ch\u01b0a,...) Nh\u1eefng ph\u00e2n t\u00edch n\u00e0y l\u00e0 r\u1ea5t quan tr\u1ecdng, n\u00f3 gi\u00fap b\u1ea1n r\u00fat kinh nghi\u1ec7m cho ng\u00e0y thi ch\u00ednh. V\u00ec v\u1eady, ngo\u00e0i vi\u1ec7c t\u1eadp trung thi, c\u1ea7n ghi nh\u1edb th\u1eadt k\u0129 qu\u00e1 tr\u00ecnh m\u00ecnh \u0111\u00e3 l\u00e0m b\u00e0i nh\u01b0 th\u1ebf n\u00e0o.</p> <p>Ch\u00fac c\u00e1c b\u1ea1n thi t\u1ed1t :D</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#6-anh-gia-toc-o-cua-mot-thuat-toan","title":"6. \u0110\u00e1nh gi\u00e1 t\u1ed1c \u0111\u1ed9 c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>Sau khi ngh\u0129 ra m\u1ed9t thu\u1eadt to\u00e1n, b\u1ea1n bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a n\u00f3. Nh\u01b0ng c\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0, l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 bi\u1ebft m\u1ed9t thu\u1eadt to\u00e1n l\u00e0 \u0111\u1ee7 nhanh hay ch\u01b0a. N\u1ebfu bi\u1ebft tr\u01b0\u1edbc timelimit, th\u00f4ng th\u01b0\u1eddng, m\u1ed9t thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c coi l\u00e0 \u0111\u1ee7 nhanh n\u1ebfu gi\u00e1 tr\u1ecb \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1ee9ng v\u1edbi test max l\u00e0 d\u01b0\u1edbi timelimit * 1e8.</p> <p>V\u00ed d\u1ee5, n\u1ebfu c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n \\(O(Nlog^2N)\\) v\u00e0 b\u00e0i to\u00e1n c\u00f3 gi\u1edbi h\u1ea1n \\(N \\le 3e5\\) th\u00ec khi \u0111\u00f3 Nlog^2N ~ 11e7, ngh\u0129a l\u00e0 n\u1ebfu timelimt 1s th\u00ec s\u1ebd h\u01a1i ch\u1eadm m\u1ed9t ch\u00fat, c\u00f2n n\u1ebfu timelimit 2s th\u00ec c\u00f3 th\u1ec3 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c.</p> <p>Tuy nhi\u00ean, c\u00e1ch \u0111\u00e1nh gi\u00e1 tr\u00ean kh\u00e1 phi\u1ebfn di\u1ec7n, v\u00ec nhi\u1ec1u l\u00fd do: H\u00e0m \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng th\u1ec3 hi\u1ec7n ch\u00ednh x\u00e1c th\u1eddi gian ch\u1ea1y (kh\u00f4ng t\u00ednh h\u1eb1ng s\u1ed1), c\u00e1ch c\u00e0i \u0111\u1eb7t v\u00e0 t\u1ed1c \u0111\u1ed9 c\u1ee7a m\u1ed7i m\u00e1y ch\u1ea5m m\u1ed9t kh\u00e1c. T\u1ec7 h\u1ea1i h\u01a1n, n\u1ebfu kh\u00f4ng bi\u1ebft tr\u01b0\u1edbc timelimit, th\u00ec c\u0169ng c\u00f2n ch\u1eb3ng bi\u1ebft \u0111\u00e1nh gi\u00e1 ra l\u00e0m sao. Tuy nhi\u00ean, theo m\u00ecnh ngh\u0129, n\u1ebfu m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ea7m 3e8 tr\u1edf xu\u1ed1ng c\u00f3 th\u1ec3 coi l\u00e0 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c. Ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c \u1edf \u0111\u00e2y kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 thu\u1eadt to\u00e1n \u0111\u00f3 l\u00e0 \u0111\u1ee7 hi\u1ec7u qu\u1ea3 \u0111\u1ec3 \u0111\u1ea1t \u0111i\u1ec3m t\u1ed1i \u0111a, m\u00e0 c\u00f3 ngh\u0129a l\u00e0, b\u1ea1n n\u00ean b\u1eaft tay v\u00e0o vi\u1ec7c code thu\u1eadt to\u00e1n \u0111\u00f3 thay v\u00ec c\u1ed1 g\u1eafng t\u1ed1i \u01b0u th\u00eam. \u0110\u00f4i khi, vi\u1ec7c t\u1ed1i \u01b0u thu\u1eadt to\u00e1n t\u1eeb NlogN xu\u1ed1ng N hay Nlog^2N xu\u1ed1ng NlogN l\u00e0 kh\u00f4ng \u0111\u01a1n gi\u1ea3n, t\u1ed1n nhi\u1ec1u th\u1eddi gian v\u00e0 \u0111\u00f4i khi s\u1ef1 t\u0103ng \u0111\u1ed9 kh\u00f3 trong c\u00e0i \u0111\u1eb7t s\u1ebd khi\u1ebfn b\u1ea1n thi\u1ebfu th\u1eddi gian l\u00e0m b\u00e0i. Ch\u01b0a k\u1ec3, nh\u1eefng thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kho\u1ea3ng t\u1ea7m 3e8 tr\u1edf xu\u1ed1ng th\u01b0\u1eddng ch\u1ec9 b\u1ecb TLE m\u1ed9t v\u00e0i test, ch\u1ee9 kh\u00f4ng ph\u1ea3i c\u1ea3 subtask, n\u00ean kh\u00f4ng l\u00e0m thay \u0111\u1ed5i qu\u00e1 nhi\u1ec1u \u0111i\u1ec3m s\u1ed1.</p> <p>V\u00ed d\u1ee5, b\u00e0i MINROAD 2014, h\u1ed3i \u0111\u1ea5y m\u00ecnh ngh\u0129 ra m\u1ed9t thu\u1eadt to\u00e1n O(Nlog^2N), v\u1edbi gi\u1edbi h\u1ea1n N &lt;= 3e5. M\u00ecnh ng\u1ed3i code lu\u00f4n b\u00e0i \u0111\u1ea5y, m\u00e0 kh\u00f4ng ngh\u0129 \u0111\u1ec3 t\u1ed1i \u01b0u xu\u1ed1ng O(NlogN). V\u1ec1 sau, m\u00ecnh ph\u00e1t hi\u1ec7n ra m\u00ecnh l\u00e0 ng\u01b0\u1eddi duy nh\u1ea5t code thu\u1eadt \u0111\u00f3, t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi kh\u00e1c trong \u0111\u1ed9i \u0111\u1ec1u l\u00e0m O(NlogN) hay O(N). M\u00ecnh ngh\u0129 quy\u1ebft \u0111\u1ecbnh l\u00fac \u0111\u00f3 kh\u00e1 h\u1ee3p l\u00fd, b\u1edfi h\u1ed3i \u0111\u1ea5y m\u00ecnh code kh\u00e1 ch\u1eadm v\u00e0 r\u1ea5t t\u1ec7, n\u00ean c\u1ea7n \u01b0u ti\u00ean vi\u1ec7c code v\u00e0 ki\u1ec3m tra h\u01a1n v\u00e0 ch\u1ea5p nh\u1eadn kh\u00f4ng \u0111\u01b0\u1ee3c \u0111i\u1ec3m t\u1ed1i \u0111a b\u00e0i \u0111\u00f3.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#5-khong-su-dung-cac-thuat-toan-la-trong-ky-thi-voi","title":"5. Kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1c thu\u1eadt to\u00e1n \"l\u1ea1\" trong k\u1ef3 thi VOI.","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>G\u1ea7n \u0111\u00e2y, theo kh\u1ea3o s\u00e1t c\u1ee7a m\u1ed9t s\u1ed1 t\u1ed5 ch\u1ee9c gi\u1ea5u t\u00ean, xu\u1ea5t hi\u1ec7n t\u00ecnh tr\u1ea1ng nhi\u1ec1u th\u00ed sinh c\u1ee7a k\u00ec thi VOI th\u00edch khoe h\u00e0ng trong ph\u00f2ng thi. \u0110\u1eb7c \u0111i\u1ec3m chung, nh\u1eefng th\u00ed sinh n\u00e0y th\u01b0\u1eddng inbox t\u00e2m s\u1ef1 ri\u00eang v\u1edbi GS. PVH v\u1ec1 ham mu\u1ed1n \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n nh\u1eefng thu\u1eadt to\u00e1n h\u00e0ng kh\u1ee7ng nh\u01b0 thu\u1eadt to\u00e1n Lehman, Suffix Array, DFS kh\u1eed \u0111\u1ec7 quy b\u1eb1ng stack,... Qua \u0111i\u1ec1u tra s\u01a1 b\u1ed9, ch\u00fang t\u00f4i \u0111\u00e3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c ba nguy\u00ean nh\u00e2n ch\u00ednh d\u1eabn t\u1edbi c\u0103n b\u1ec7nh nghi\u1ec7n show h\u00e0ng n\u00e0y nh\u01b0 sau:</p> <ul> <li>\u0110\u00e3 ho\u1eb7c \u0111ang s\u1eed d\u1ee5ng ma t\u00fay \u0111\u00e1, c\u01a1 th\u1ec3 th\u01b0\u1eddng xuy\u00ean \u1edf trong t\u00ecnh tr\u1ea1ng ph\u00ea, ng\u00e1o, d\u1eabn \u0111\u1ebfn m\u1ea5t ki\u1ec3m so\u00e1t h\u00e0nh vi, l\u1ec7ch l\u1ea1c trong suy ngh\u0129,</li> <li>C\u00f3 ti\u1ec1n s\u1eed v\u1ec1 c\u00e1c b\u1ec7nh li\u00ean quan \u0111\u1ebfn n\u00e3o, b\u1ecb m\u1ea5t n\u00e3o ho\u1eb7c th\u01b0\u1eddng xuy\u00ean b\u1ecf qu\u00ean n\u00e3o \u1edf ngo\u00e0i ph\u00f2ng thi.</li> <li>\u0102n th\u1ee9c \u0103n kh\u00f4ng \u0111\u1ea3m b\u1ea3o v\u1ec7 sinh, ch\u1ee9a nhi\u1ec1u Progesterone, l\u00e0 ch\u1ea5t k\u00edch th\u00edch c\u1ef1c m\u1ea1nh l\u00e0m t\u0103ng ham mu\u1ed1n tham d\u1ef1 k\u00ec thi tuy\u1ec3n sinh v\u00e0o \u0111\u1ea1i h\u1ecdc.</li> </ul> <p>C\u0103n b\u1ec7nh n\u00e0y \u0111ang c\u00f3 xu h\u01b0\u1edbng l\u00e2y lan nhanh trong gi\u1edbi h\u1ecdc sinh gi\u1ecfi tin c\u1ee7a c\u00e1c tr\u01b0\u1eddng chuy\u00ean, v\u00e0 di\u1ec5n bi\u1ebfn r\u1ea5t ph\u1ee9c t\u1ea1p. V\u00ec v\u1eady, m\u00ecnh khuy\u1ebfn c\u00e1o c\u00e1c b\u1eadc ph\u1ee5 huynh c\u1ea7n theo d\u00f5i con em m\u00ecnh ch\u1eb7t ch\u1ebd, h\u1ea1n ch\u1ebf cho tr\u1ebb ti\u1ebfp x\u00fac v\u1edbi ma t\u00fay, th\u1ef1c ph\u1ea9m b\u1ea9n, nh\u1eafc tr\u1ebb mang theo n\u00e3o th\u01b0\u1eddng xuy\u00ean. N\u1ebfu th\u1ea5y con c\u00f3 bi\u1ec3u hi\u1ec7n l\u1ea1, c\u1ea7n \u0111\u01b0a \u0111\u1ebfn trung t\u00e2m GS. PVH g\u1ea7n nh\u1ea5t \u0111\u1ec3 \u0111\u01b0\u1ee3c ch\u1eefa tr\u1ecb k\u1ecbp th\u1eddi.</p> <p>Xin c\u1ea3m \u01a1n.</p> <p>M\u00ecnh ngh\u0129 c\u00f3 l\u1ebd kh\u00f4ng c\u1ea7n nh\u1eafc c\u00e1c b\u1ea1n v\u1ea5n \u0111\u1ec1 n\u00e0y, nh\u01b0ng g\u1ea7n \u0111\u00e2y c\u00f3 m\u1ea5y b\u1ea1n r\u1ea5t h\u1ed5 b\u00e1o v\u00e0o inbox m\u00ecnh h\u1ecfi v\u1ec1 thu\u1eadt to\u00e1n Leman jj \u0111\u00f3 li\u00ean quan \u0111\u1ebf s\u1ed1 nguy\u00ean t\u1ed1. M\u00ecnh th\u00fa th\u1eadt l\u00e0 m\u00ecnh \u1ee9 bi\u1ebft c\u00e1i thu\u1eadt to\u00e1n n\u00e0y l\u00e0 g\u00ec, v\u00e0 c\u00f3 l\u1ebd n\u00f3 kh\u00f3 c\u00f3 th\u1ec3 xu\u1ea5t hi\u1ec7n trong k\u1ef3 thi t\u1edbi.</p> <p>T\u1ea5t nhi\u00ean, kh\u00f4ng c\u00f3 b\u1ea5t k\u1ef3 gi\u1edbi h\u1ea1n ki\u1ebfn th\u1ee9c n\u00e0o trong k\u00ec thi n\u00e0y. Nh\u01b0ng m\u00ecnh v\u1eabn mu\u1ed1n nh\u1eafc l\u1ea1i r\u1eb1ng, v\u1edbi nh\u1eefng thu\u1eadt to\u00e1n d\u00f9 bi\u1ebft nh\u01b0ng c\u00e0i \u0111\u1eb7t kh\u00f4ng th\u00e0nh th\u1ea1o, kh\u00f4ng d\u00f9ng th\u01b0\u1eddng xuy\u00ean, ho\u1eb7c r\u1ea5t ph\u1ee9c t\u1ea1p (KMP, Suffix Array, Dinitz, DFS kh\u1eed \u0111\u1ec7 quy, ...) th\u00ec b\u1ea1n kh\u00f4ng n\u00ean c\u00e0i \u0111\u1eb7t trong ph\u00f2ng thi. N\u1ebfu c\u00e0i sai, b\u1ea1n s\u1ebd trong tr\u1ea1ng th\u00e1i ti\u1ebfn tho\u00e1i l\u01b0\u1ee1ng nan: Debug th\u00ec m\u1ea5t qu\u00e1 nhi\u1ec1u th\u1eddi gian, x\u00f3a h\u1ebft th\u00ec ph\u00ed c\u00f4ng code.</p> <p>Nh\u1edb r\u1eb1ng, VOI kh\u00f4ng l\u00e0 ch\u1ed7 th\u00edch h\u1ee3p cho vi\u1ec7c ph\u00f4 tr\u01b0\u01a1ng s\u1ee9c m\u1ea1nh, h\u00e3y c\u1ea9n th\u1eadn v\u00e0 ch\u1eafc ch\u1eafn \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o nh\u1eefng s\u1ef1 c\u1ed1 th\u01b0\u01a1ng t\u00e2m kh\u00f4ng x\u1ea3y ra.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#4-ve-cac-bai-multitest","title":"4. V\u00ea\u0300 ca\u0301c ba\u0300i multitest","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>Sau m\u1ed9t ng\u00e0y gi\u00e1n \u0111o\u1ea1n, h\u00f4m nay chuy\u00ean m\u1ee5c \"m\u1ed7i ng\u00e0y m\u1ed9t l\u1eddi khuy\u00ean xin ph\u00e9p \u0111c ti\u1ebfp t\u1ee5c.</p> <p>Nh\u01b0\u0303ng ba\u0300i toa\u0301n co\u0301 \u0111\u0103\u0323c ti\u0301nh multitest la\u0300 nh\u01b0\u0303ng ba\u0300i ma\u0300 trong \u0111o\u0301 m\u00f4\u0323t file input ch\u01b0\u0301a nhi\u00ea\u0300u b\u00f4\u0323 d\u01b0\u0303 li\u00ea\u0323u. Ca\u0301c b\u00f4\u0323 d\u01b0\u0303 li\u00ea\u0323u (test) na\u0300y lu\u00f4n \u0111\u00f4\u0323c l\u00e2\u0323p v\u01a1\u0301i nhau, va\u0300 lu\u00f4n \u0111\u01b0\u01a1\u0323c ch\u01b0\u01a1ng tri\u0300nh cu\u0309a chu\u0301ng ta x\u01b0\u0309 ly\u0301 theo ki\u00ea\u0309u tu\u00e2\u0300n t\u01b0\u0323, nghi\u0303a la\u0300 \u0111o\u0323c t\u01b0\u0300ng b\u00f4\u0323 d\u01b0\u0303 li\u00ea\u0323u, x\u01b0\u0309 ly\u0301, in ra output, r\u00f4\u0300i m\u01a1\u0301i \u0111o\u0323c b\u00f4\u0323 d\u01b0\u0303 li\u00ea\u0323u ti\u00ea\u0301p theo. Co\u0301 ba ly\u0301 do chi\u0301nh d\u00e2\u0303n t\u01a1\u0301i ki\u00ea\u0309u input na\u0300y:</p> <ul> <li>Ng\u01b0\u01a1\u0300i ra \u0111\u00ea\u0300 mu\u00f4\u0301n gi\u01a1\u0301i ha\u0323n \u0111\u00f4\u0323 ph\u01b0\u0301c ta\u0323p cu\u0309a thu\u00e2\u0323t toa\u0301n t\u01a1\u0301i m\u01b0\u0301c r\u00e2\u0301t nho\u0309 (Vi\u0301 du\u0323: O(logN) v\u01a1\u0301i N &lt;= 1e8).</li> <li>Ba\u0300i toa\u0301n co\u0301 output da\u0323ng YES/NO, \u0111\u0103\u0323t nhi\u00ea\u0300u test trong m\u00f4\u0323t file input se\u0303 v\u00f4 hi\u00ea\u0323u hoa\u0301 vi\u00ea\u0323c \u201coutput b\u01b0\u0300a\u201d cu\u0309a thi\u0301 sinh.</li> <li>M\u00f4\u0323t s\u00f4\u0301 h\u00ea\u0323 th\u00f4\u0301ng ch\u00e2\u0301m ba\u0300i gi\u01a1\u0301i ha\u0323n s\u00f4\u0301 l\u01b0\u01a1\u0323ng file input \u0111\u01b0\u01a1\u0323c \u0111\u0103\u0323t va\u0300o.</li> </ul> <p>Tr\u01b0\u0300 tr\u01b0\u01a1\u0300ng h\u01a1\u0323p \u0111\u00e2\u0300u ti\u00ean, khi \u0111o\u0301, s\u00f4\u0301 l\u01b0\u01a1\u0323ng test trong m\u00f4\u0323t file input se\u0303 r\u00e2\u0301t l\u01a1\u0301n (1e3, 1e4, \u2026), va\u0300 \u0111\u01b0\u01a1\u0323c chi\u0309 ro\u0303 trong \u0111\u00ea\u0300 ba\u0300i, co\u0300n hai tr\u01b0\u01a1\u0300ng h\u01a1\u0323p co\u0300n la\u0323i, s\u00f4\u0301 l\u01b0\u01a1\u0323ng test th\u01b0\u01a1\u0300ng kha\u0301 nho\u0309 (va\u0300 \u0111a s\u00f4\u0301 ca\u0301c test trong file input kh\u00f4ng pha\u0309i test max), s\u00f4\u0301 l\u01b0\u01a1\u0323ng test co\u0301 th\u00ea\u0309 kh\u00f4ng \u0111\u01b0\u01a1\u0323c nh\u0103\u0301c \u0111\u00ea\u0301n trong \u0111\u00ea\u0300, va\u0300 thu\u00e2\u0323t gia\u0309i ba\u0300i toa\u0301n se\u0303 y h\u00ea\u0323t nh\u01b0 khi trong file input chi\u0309 co\u0301 m\u00f4\u0323t test.</p> <p>Trong ky\u0300 thi qu\u00f4\u0301c gia, \u0111a s\u00f4\u0301 ca\u0301c ba\u0300i multitest \u0111\u00ea\u0300u thu\u00f4\u0323c hai nguy\u00ean nh\u00e2n d\u01b0\u01a1\u0301i. B\u01a1\u0309i th\u00ea\u0301, trong qua\u0301 tri\u0300nh ti\u0300m ki\u00ea\u0301m thu\u00e2\u0323t toa\u0301n, ba\u0323n kh\u00f4ng c\u00e2\u0300n quan t\u00e2m \u0111\u00ea\u0301n s\u00f4\u0301 l\u01b0\u01a1\u0323ng test co\u0301 trong m\u00f4\u0323t file input.</p> <p>Tuy nhi\u00ean, trong khi code, ba\u0323n la\u0323i c\u00e2\u0300n r\u00e2\u0301t chu\u0301 y\u0301 \u0111\u00ea\u0301n v\u00e2\u0301n \u0111\u00ea\u0300 multitest, b\u01a1\u0309i tr\u01b0\u01a1\u0301c khi x\u01b0\u0309 ly\u0301 m\u00f4\u0323t test, ba\u0323n c\u00e2\u0300n kh\u01a1\u0309i ta\u0323o la\u0323i bi\u00ea\u0301n, ma\u0309ng,... \u0111\u00ea\u0309 xoa\u0301 d\u00e2\u0301u v\u00ea\u0301t cu\u0309a b\u00f4\u0323 test cu\u0303.</p> <p>Khi co\u0301 multitest, vi\u00ea\u0323c code bug ho\u0103\u0323c qu\u00ean kh\u01a1\u0309i ta\u0323o se\u0303 ta\u0323o h\u00e2\u0323u qua\u0309 r\u00e2\u0301t nghi\u00eam tro\u0323ng (90% la\u0300 ba\u0323n se\u0303 \u0111\u01b0\u01a1\u0323c 0 \u0111i\u00ea\u0309m). Do \u0111o\u0301 ba\u0323n c\u00e2\u0300n \u01b0u ti\u00ean sinh test va\u0300 ki\u00ea\u0309m tra ki\u0303 nh\u01b0\u0303ng ba\u0300i na\u0300y. Tuy nhi\u00ean, vi\u00ea\u0323c sinh test trong nh\u01b0\u0303ng ba\u0300i na\u0300y la\u0323i co\u0301 l\u01a1\u0323i th\u00ea\u0301, b\u01a1\u0309i khi ba\u0323n sinh m\u00f4\u0323t file input g\u00f4\u0300m nhi\u00ea\u0300u test, s\u00f4\u0301 test ba\u0323n test \u0111\u01b0\u01a1\u0323c l\u01a1\u0301n h\u01a1n r\u00e2\u0301t nhi\u00ea\u0300u. Co\u0301 m\u00f4\u0323t kinh nghi\u00ea\u0323m nho\u0309 \u0111\u00ea\u0309 giu\u0301p ca\u0301c ba\u0323n tra\u0301nh vi\u00ea\u0323c kh\u01a1\u0309i ta\u0323o thi\u00ea\u0301u ma\u0309ng: </p> <ul> <li>Ca\u0301c bi\u00ea\u0301n, ma\u0309ng c\u00e2\u0300n kh\u01a1\u0309i ta\u0323o n\u00ean \u0111\u00ea\u0309 la\u0300 bi\u00ea\u0301n toa\u0300n cu\u0323c. \u0110\u00f4\u0301i v\u01a1\u0301i ca\u0301c ba\u0323n code C++, ca\u0301c bi\u00ea\u0301n toa\u0300n cu\u0323c c\u00e2\u0300n \u0111\u01b0\u01a1\u0323c \u0111\u00ea\u0309 \u01a1\u0309 cu\u0300ng m\u00f4\u0323t ch\u00f4\u0303</li> <li>Khi \u0111o\u0323c code, ba\u0323n \u0111i\u00ea\u0309m danh t\u01b0\u0300ng bi\u00ea\u0301n, v\u01a1\u0301i m\u00f4\u0303i bi\u00ea\u0301n, ba\u0323n ti\u0300m l\u00ea\u0323nh kh\u01a1\u0309i ta\u0323o cu\u0309a bi\u00ea\u0301n \u0111o\u0301 trong code, sau \u0111o\u0301 m\u01a1\u0301i ki\u00ea\u0309m tra \u0111\u00ea\u0301n bi\u00ea\u0301n ti\u00ea\u0301p theo\u2026</li> <li>Thay vi\u0300 vi\u00eac kh\u01a1\u0309i ta\u0323o theo ki\u00ea\u0309u \u201cFor i := 1 -&gt; N a[i] = 0\u201d, n\u00ean du\u0300ng fillChar ho\u0103\u0323c memset.</li> </ul>"},{"location":"algo/skill/Ki-nang-thi-cu/#3-ieu-chinh-ong-ho-may-thi-cho-ung-voi-thoi-gian-thuc","title":"3. \u0110i\u1ec1u ch\u1ec9nh \u0111\u1ed3ng h\u1ed3 m\u00e1y thi cho \u0111\u00fang v\u1edbi th\u1eddi gian th\u1ef1c","text":"<p>Ngu\u1ed3n: Facebook VNOI</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t k\u0129 n\u0103ng nh\u1ecf nh\u01b0ng quan tr\u1ecdng, trong khi l\u00e0m b\u00e0i, b\u1ea1n lu\u00f4n ph\u1ea3i \u0111\u1ec3 \u00fd l\u01b0\u1ee3ng th\u1eddi gian c\u00f2n l\u1ea1i, \u0111\u1ec3 xem m\u00ecnh n\u00ean ngh\u0129 ti\u1ebfp m\u1ed9t b\u00e0i hay k, hay b\u1eaft \u0111\u1ea7u vi\u1ec7c code tr\u00e2u lu\u00f4n, ho\u1eb7c l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 \u0111i wc th\u00eam bao nhi\u00eau l\u1ea7n n\u1eefa,... Ho\u1eb7c \u0111\u01a1n thu\u1ea7n b\u1ea1n c\u1ea7n bi\u1ebft l\u00e0 s\u1eafp h\u1ebft gi\u1edd r \u0111\u1ec3 c\u1ea3m th\u1ea5y t\u0103ng huy\u1ebft \u00e1p, s\u1ee3 h\u00e3i v\u00e0 k l\u00e0m n\u1ed5i c\u00e1i j n\u1eefa :v T\u01b0\u1edfng t\u01b0\u1ee3ng, 8h b\u1eaft \u0111\u1ea7u thi, m\u00e1y t\u00ednh b\u1ea1n ch\u1ec9 7h. \u0110\u1ebfn khi m\u00e1y t\u00ednh ch\u1ec9 9h45, b\u1ea1n y\u00ean t\u00e2m c\u00f2n 75p, qu\u00e1 th\u1eeba \u0111\u1ec3 AC c\u1ea3 3 b\u00e0i, v\u00e0 b\u1eaft \u0111\u1ea7u ch\u00ecm v\u00e0o gi\u1ea5c ng\u1ee7. Th\u1ebf nh\u01b0ng, 15p sau th\u00ecnh l\u00ecnh gv g\u1ecdi b\u1ea1n d\u1eady v\u00e0 b\u1ea1n ch\u1ee3t nh\u1eadn ra t\u01b0\u01a1ng lai s\u1ee5p \u0111\u1ed5, cu\u1ed9c \u0111\u1eddi b\u1ebf t\u1eafc. Do \u0111\u00f3, vi\u1ec7c ki\u1ec3m so\u00e1t th\u1eddi gian l\u00e0 v\u00f4 c\u00f9ng quan tr\u1ecdng. M\u1ed9t trong nh\u1eefng l\u1ed7i v\u1ec1 chi\u1ebfn l\u01b0\u1ee3c m\u00e0 k\u1ec3 c\u1ea3 nh\u1eefng ng \u0111\u00e3 thi nhi\u1ec1u l\u1ea7n m\u00e0 v\u1eabn m\u1eafc, \u0111\u00f3 l\u00e0 qu\u00e1 cay c\u00fa \u0111i t\u00ecm l\u1eddi gi\u1ea3i cho m\u1ed9t b\u00e0i to\u00e1n, k\u1ebft qu\u1ea3 l\u00e0 kh\u00f4ng c\u00f2n th\u1eddi gian ch\u1ea1y tr\u00e2u c\u00e1c b\u00e0i c\u00f2n l\u1ea1i. N\u00ean nh\u1edb r\u1eb1ng, \u0111\u00f4i khi sub cu\u1ed1i b\u00e0i 2 kh\u00f3 h\u01a1n r\u1ea5t nhi\u1ec1u, nh\u01b0ng l\u1ea1i \u00edt \u0111i\u1ec3m h\u01a1n sub 1 b\u00e0i 3, do \u0111\u00f3 tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u ngh\u0129 m\u1ed9t b\u00e0i, b\u1ea1n c\u1ea7n \u0111\u1eb7t gia h\u1ea1n m\u1ee9c th\u1eddi gian ngh\u0129 b\u00e0i \u0111\u00f3.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#2-su-dung-thu-vien-thay-the-bitsstdch","title":"2. S\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n thay th\u1ebf bits/stdc++.h","text":"<p>V\u1edbi c\u00e1c b\u1ea1n code C++, vi\u1ec7c #include v\u00f4 c\u00f9ng ti\u1ec7n l\u1ee3i, n\u00f3 gi\u00fap b\u1ea1n kh\u1ecfi b\u1eadn t\u00e2m v\u1ec1 vi\u1ec7c include m\u1ecdi th\u01b0 vi\u1ec7n kh\u00e1c. Tuy nhi\u00ean, c\u00e1ch \u0111\u00e2y ba n\u0103m, m\u1ecdi b\u1ea3n G++ t\u00edch h\u1ee3p s\u1eb5n trong Themis \u0111\u1ec1u qu\u00e1 c\u0169, vi\u1ec7c s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n n\u00e0y ch\u1eafc ch\u1eafn d\u1eabn t\u1edbi l\u1ed7i bi\u00ean d\u1ecbch. C\u00e1ch \u0111\u00e2y hai n\u0103m, vi\u1ec7c s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n n\u00e0y v\u1eabn \u0111\u01b0\u1ee3c coi l\u00e0 \u0111i\u1ec1u c\u1ea5m k\u1ef5 trong k\u00ec thi h\u1ecdc sinh gi\u1ecfi qu\u1ed1c gia. Ng\u00e0y nay, do c\u00e1c b\u1ea3n Themis \u0111\u00e3 \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt, vi\u1ec7c s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n tr\u00ean \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn. Do v\u1eady, theo quan \u0111i\u1ec3m c\u00e1 nh\u00e2n, #include kh\u00f4ng ph\u1ea3i l\u00e0 l\u1ef1a ch\u1ecdn m\u1ea1o hi\u1ec3m. Tuy nhi\u00ean, kh\u00f4ng m\u1ed9t quy \u0111\u1ecbnh n\u00e0o n\u00f3i r\u00f5 phi\u00ean b\u1ea3n Themis n\u00e0o s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, n\u00ean c\u0169ng kh\u00f4ng l\u1ea5y g\u00ec \u0111\u1ea3m b\u1ea3o r\u1eb1ng #include kh\u00f4ng ph\u1ea3i l\u00e0 tai h\u1ecda. B\u1edfi v\u1eady, c\u00e1c b\u1ea1n n\u00ean nh\u1edb t\u00ean c\u00e1c th\u01b0 vi\u1ec7n sau \u0111\u00e2y \u0111\u1ec3 include thay th\u1ebf cho th\u01b0 vi\u1ec7n huy\u1ec1n tho\u1ea1i kia. <p>Trong hai ng\u00e0y t\u1edbi, h\u00e3y code m\u1ed9t s\u1ed1 b\u00e0i \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 thay \u0111\u1ed5i th\u00f3i quen include, s\u1ebd kh\u00f4ng v\u1ea5t v\u1ea3 \u0111\u00e2u :) Ghi ch\u00fa:</p> <ol> <li>V\u1edbi c\u00e1c b\u1ea1n c\u1ea3m th\u1ea5y lo l\u1eafng, h\u00e3y v\u1ee9t b\u1ecf . N\u00f3 c\u0169ng nh\u01b0 vi\u1ec7c b\u1ea1n v\u1ee9t b\u1ecf m\u1ed9t g\u00e1nh n\u1eb7ng t\u00e2m l\u00fd trong k\u1ef3 thi \u0111\u00e1ng s\u1ee3 n\u00e0y. <li>C\u00e1c b\u1ea1n \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch include T\u1ea4T C\u1ea2 c\u00e1c th\u01b0 vi\u1ec7n sau \u0111\u00e2y. V\u1edbi nh\u1eefng \u0111\u1ecba \u0111i\u1ec3m thi c\u00e0i phi\u00ean b\u1ea3n G++ 5.0 tr\u1edf l\u00ean, VI\u1ec6C INCLUDE THI\u1ebeU KH\u00d4NG G\u1eb6P L\u1ed6I KHI CODE TR\u00caN M\u00c1Y, NH\u01afNG V\u1eaaN B\u1eca L\u1ed6I KHI CH\u1ea4M B\u1eb0NG THEMIS. C\u00e1c b\u1ea1n c\u1ea7n \u0111\u1eb7c bi\u1ec7t l\u01b0u \u00fd trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y.</li> <li>Trong khi test m\u00e1y v\u00e0o ng\u00e0y khai m\u1ea1c (ng\u00e0y mai), c\u00e1c b\u1ea1n n\u00ean include th\u1eed h\u1ebft c\u00e1c th\u01b0 vi\u1ec7n tr\u00ean \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o b\u1ed9 d\u1ecbch tr\u00ean m\u00e1y thi kh\u00f4ng g\u1eb7p v\u1ea5n \u0111\u1ec1.</li> <p>Danh s\u00e1ch c\u00e1c th\u01b0 vi\u1ec7n hay d\u00f9ng:</p> <ol> <li>Th\u01b0 vi\u1ec7n c\u01a1 b\u1ea3n c\u1ee7a C: cstdio, cstring, cstdlib, cassert (n\u1ebfu b\u1ea1n s\u1eed d\u1ee5ng h\u00e0m assert),...</li> <li>Th\u01b0 vi\u1ec7n STL c\u1ee7a C++ hay d\u00f9ng: algorithm (ch\u1ee9a h\u00e0m sort, ch\u1eb7t nh\u1ecb ph\u00e2n,..), iostream (kh s\u1eed d\u1ee5ng cin, cout), iomanip,...</li> <li>C\u00e1c th\u01b0 vi\u1ec7n c\u1ea5u tr\u00fac d\u1eef li\u1ec7u STL: vector, queue, stack, set, map, string,... C\u00e1c b\u1ea1n th\u1ea5y th\u01b0 vi\u1ec7n n\u00e0o hay d\u00f9ng m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea trong b\u00e0i vi\u1ebft n\u00e0y, h\u00e3y \u0111\u1ec3 l\u1ea1i comment \u0111\u1ec3 m\u00ecnh b\u1ed5 sung nh\u00e9 :)</li> </ol>"},{"location":"algo/skill/Ki-nang-thi-cu/#1-mot-so-kinh-nghiem-nho-nho-khac","title":"1. M\u1ed9t s\u1ed1 kinh nghi\u1ec7m nho nh\u1ecf kh\u00e1c:","text":"<p>K\u1ef3 thi qu\u1ed1c gia \u0111\u00e3 \u0111\u1ebfn th\u1eadt g\u1ea7n. C\u00e1c b\u1ea1n \u0111\u00e3 b\u1ecf ra r\u1ea5t nhi\u1ec1u c\u00f4ng s\u1ee9c, t\u00e2m huy\u1ebft v\u00e0 ni\u1ec1m tin v\u00e0o nh\u1eefng th\u00e1ng h\u1ecdc \u0111\u00f4ij tuy\u1ec3n r\u1ed3i ph\u1ea3i kh\u00f4ng :) \u0111\u1ec3 c\u00f3 nh\u1eefng b\u01b0\u1edbc chu\u1ea9n b\u1ecb ho\u00e0n h\u1ea3o cu\u1ed1i c\u00f9ng, h\u00e3y tham kh\u1ea3o b\u00e0i vi\u1ebft d\u01b0\u1edbi \u0111\u00e2y. (NOTE: Post n\u00e0y ch\u1ec9 nh\u1eb1m m\u1ee5c \u0111\u00edch gi\u1ea3i tr\u00ed. B\u1ea1n n\u00e0o c\u1ea3m th\u1ea5y qu\u00e1 c\u0103ng th\u1eb3ng ho\u1eb7c c\u00f3 t\u00ednh m\u00ea t\u00edn th\u00ec c\u00f3 th\u1ec3 k \u0111\u1ecdc n\u1eefa.)</p> <p>a/ L\u1ef1a ch\u1ecdn th\u1ee9c \u0103n ph\u00f9 h\u1ee3p:</p> <p>\u0102n g\u00ec trong nh\u1eefng ng\u00e0y thi l\u00e0 m\u1ed9t c\u00e2u h\u1ecfi kh\u00f3. B\u1ea1n s\u1ebd ph\u1ea3i g\u1ea1ch t\u00ean r\u1ea5t nhi\u1ec1u nh\u1eefng m\u00f3n \u0103n kho\u00e1i kh\u1ea9u c\u1ee7a m\u00ecnh \u0111\u1ec3 c\u00f3 m\u1ed9t k\u00ec thi su\u00f4n s\u1ebb:</p> <ul> <li>Kh\u00f4ng \u0103n tr\u1ee9ng, ng\u1ed7ng, chu\u1ed1i, th\u1ecbt b\u00f2, m\u1ef1c..., nh\u1ee9ng th\u1ee9 bi\u1ec3u t\u01b0\u1ee3ng cho s\u1ef1 \u0111en \u0111\u1ee7i.</li> <li>Kh\u00f4ng \u0103n x\u00f4i \u0111\u1ed7 v\u1edbi ch\u1ea3, Truy\u1ec1n thuy\u1ebft k\u1ec3 r\u1eb1ng. m\u1ed9t th\u00ed sinh \u0111\u00e3 b\u1ecb fail VOI v\u00ec \u0103n m\u00f3n x\u00f4i \"ch\u1ea3 \u0111\u1ed7\" b\u1ed5 b\u00e9o n\u00e0y tr\u01b0\u1edbc khi \u0111i thi.</li> </ul> <p>b/ Kh\u00f4ng nghe c\u00e1c b\u00e0i h\u00e1t mang n\u1ed9i dung \"nh\u1ea1y c\u1ea3m\".</p> <p>N\u1ebfu nh\u01b0 \u0103n chu\u1ed1i l\u00e0 \u0111i\u1ec1u c\u1ea5m k\u1ecb v\u00ec n\u00f3 khi\u1ebfn \u0111\u1ec1 thi c\u1ee7a b\u1ea1n b\u1ecb chu\u1ed1i, th\u00ec c\u0169ng nh\u01b0 v\u1eady, nh\u1eefng b\u00e0i h\u00e1t c\u00f3 nh\u1eefng t\u1eeb ng\u1eef x\u1ea5u c\u0169ng n\u00ean b\u1ecb lo\u1ea1i b\u1ecf trong gi\u1edd ph\u00fat c\u0103ng th\u1eb3ng n\u00e0y. V\u00ed d\u1ee5, nghe nh\u1eefng b\u00e0i h\u00e1t c\u00f3 ch\u1eef \"tr\u00f4i\" hay ch\u1eef \"l\u1ea1c\" s\u1ebd khi\u1ebfn b\u1ea1n l\u00e0m b\u00e0i l\u1ea1c \u0111\u1ec1, ki\u1ebfn th\u1ee9c b\u1ecb tr\u00f4i n\u1ed5i gi\u1eefa \u0111\u1eddi, v\u00ec th\u1ebf b\u1ea1n n\u00ean tr\u00e1nh xa nh\u1eefng b\u00e0i nh\u01b0 v\u1eady.</p> <p>(\u0110\u00f9a t\u00ed, c\u00e1c b\u1ea1n n\u00f3ng n\u1ea3y vl. \u0110\u1eebng ph\u1eabn n\u1ed9 m\u00ecnh sau khi \u0111\u1ecdc \u0111\u1ebfn d\u00f2ng n\u00e0y nh\u00e9)</p> <p>c/ Kh\u00f4ng t\u1eafm tr\u01b0\u1edbc khi thi.</p> <p>Nhi\u1ec1u ng\u01b0\u1eddi kh\u00f4ng g\u1ed9i \u0111\u1ea7u tr\u01b0\u1edbc khi thi v\u00f2 lo s\u1ee3 ki\u1ebfn th\u1ee9c tr\u00ean \u0111\u1ea7u s\u1ebd b\u1ecb r\u1eeda tr\u00f4i.Th\u1ef1c t\u1ebf, ki\u1ebfn th\u1ee9c c\u00f2n \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf nhi\u1ec1u n\u01a1i b\u00ed \u1ea9n kh\u00e1c trong c\u01a1 th\u1ec3. do \u0111\u00f3, b\u1ea1n kh\u00f4ng n\u00ean t\u1eafm n\u1ebfu thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c l\u01b0u tr\u00ean da, gh\u00e9t hay g\u00e0u. Ngo\u00e0i ra, n\u1ebfu b\u1ea1n l\u01b0u \u1edf b\u1ed9 ph\u1eadn t\u00edch tr\u1eef kh\u00e1c, b\u1ea1n n\u00ean k\u00ecm n\u00e9n, nh\u1ecbn kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p x\u1ea3 ra ngo\u00e0i tr\u01b0\u1edbc khi thi xong.</p> <p>d/ Ch\u1ecdn ch\u1ed7 ng\u1ed3i h\u1ee3p phong th\u1ee7y</p> <p>Phong th\u1ee7y mang \u00fd ngh\u0129a r\u1ea5t quan tr\u1ecdng v\u1edbi con ng\u01b0\u1eddi. Tr\u01b0\u1edbc khi l\u00e0m nh\u1eefng vi\u1ec7c l\u1edbn, nh\u01b0 x\u00e2y nh\u00e0, l\u1ea5y v\u1ee3, ng\u01b0\u1eddi ta \u0111\u1ec1u ph\u1ea3i xem phong th\u1ee7y. Thi HSGQG c\u0169ng v\u1eady, v\u00ec n\u00f3 \u1ea3nh h\u01b0\u1edfng r\u1ea5t l\u1edbn \u0111\u1ebfn t\u01b0\u01a1ng lai b\u1ea1n, b\u1ea1n c\u0169ng n\u00ean ch\u1ecdn ch\u1ed7 ng\u1ed3i, k\u00ea b\u00e0n gh\u1ebf theo h\u01b0\u1edbng h\u1ee3p v\u1edbi phong th\u1ee7y c\u1ee7a m\u00ecnh \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c ch\u1ea5t l\u01b0\u1ee3ng b\u00e0i thi cao h\u01a1n.</p> <p>e/ Ch\u1ecdn th\u1eddi gian thi ph\u00f9 h\u1ee3p.</p> <p>Gi\u1edd ho\u00e0ng \u0111\u1ea1o lu\u00f4n \u0111em l\u1ea1i s\u1ef1 su\u00f4n s\u1ebb v\u00e0 nh\u1eefng \u0111i\u1ec1u t\u1ed1t l\u00e0nh. V\u00ec v\u1eady, c\u00e1c b\u1ea1n h\u00e3y l\u1ef1a ch\u1ecdn th\u1eddi gian thi v\u00e0o nh\u1eefng gi\u1edd ho\u00e0ng \u0111\u1ea1o \u0111\u1ec3 l\u00e0m b\u00e0i t\u1ed1t h\u01a1n. Ng\u00e0y 5/1, c\u00e1c gi\u1edd ho\u00e0ng \u0111\u1ea1o bao g\u1ed3m S\u1eedu (1h - 3h), Ng\u1ecd (11h - 13h), M\u00f9i (13h - 15h), Tu\u1ea5t (19h - 21h) v\u00e0 H\u1ee3i (21h - 23h).</p> <p>N\u1ebfu c\u00f3 th\u1ec3, h\u00e3y l\u00e0m b\u00e0i thi qu\u1ed1c gia v\u00e0o nh\u1eefng kho\u1ea3ng th\u1eddi gian n\u00e0y, s\u1ebd c\u00f3 l\u1ee3i cho b\u1ea1n h\u01a1n. Trong ng\u00e0y mai, m\u00ecnh s\u1ebd c\u1ed1 g\u1eafng li\u1ec7t k\u00ea th\u00eam nh\u1eefng kinh nghi\u1ec7m kh\u00e1c \u0111\u1ec3 chia s\u1ebb v\u1edbi c\u00e1c b\u1ea1n. Ch\u00fac c\u00e1c b\u1ea1n ngh\u1ec9 ng\u01a1i tho\u1ea3i m\u00e1i v\u00e0 c\u00f3 m\u1ed9t bu\u1ed5i khai m\u1ea1c r\u1ef1c r\u1ee1 :)</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#0-nghi-ngoi-thu-gian-thoai-mai","title":"0. Nghi\u0309 ng\u01a1i th\u01b0 gia\u0303n thoa\u0309i ma\u0301i.","text":"<p>Gi\u01a1\u0300 k pha\u0309i la\u0300 lu\u0301c lo \u00e2u c\u0103ng th\u0103\u0309ng hay xa\u0301m h\u00f4\u0301i vi\u0300 s\u01b0\u0323 l\u01b0\u01a1\u0300i nha\u0301c cu\u0309a ba\u0323n n\u01b0\u0303a. Ha\u0303y nghi\u0309 ng\u01a1i, th\u01b0 gia\u0309n thoa\u0309i ma\u0301i, la\u0300m nh\u01b0\u0303ng gi\u0300 khi\u00ea\u0301n ba\u0323n sung s\u01b0\u01a1\u0301ng nh\u00e2\u0301t trong nga\u0300y cu\u00f4\u0301i cu\u0300ng na\u0300y.</p> <p>Chuy\u00ean mu\u0323c cu\u0309a chu\u0301ng t\u00f4i cu\u0303ng xin \u0111\u01b0\u01a1\u0323c k\u00ea\u0301t thu\u0301c ta\u0323i \u0111\u00e2y. R\u00e2\u0301t ca\u0301m \u01a1n s\u01b0\u0323 chu\u0301 y\u0301 theo do\u0303i va\u0300 u\u0309ng h\u00f4\u0323 nhi\u00ea\u0323t ti\u0300nh cu\u0309a ca\u0301c ba\u0323n gia\u0300nh cho mi\u0300nh. Hy vo\u0323ng r\u0103\u0300ng, qua series ba\u0300i vi\u00ea\u0301t na\u0300y, ba\u0323n ti\u0300m ra \u0111\u01b0\u01a1\u0323c cho mi\u0300nh nh\u01b0\u0303ng ba\u0300i ho\u0323c b\u00f4\u0309 i\u0301ch va\u0300 se\u0303 a\u0301p du\u0323ng \u0111\u01b0\u01a1\u0323c chu\u0301ng m\u00f4\u0323t ca\u0301ch h\u01a1\u0323p ly\u0301 cho hai nga\u0300y s\u0103\u0301p t\u01a1\u0301i.</p> <p>Ch\u0103\u0301c ch\u0103\u0301n, sang n\u0103m mi\u0300nh se\u0303 m\u01a1\u0309 ra nh\u01b0\u0303ng chuy\u00ean mu\u0323c hay h\u01a1n n\u01b0\u0303a :D</p> <p>Cu\u00f4\u0301i cu\u0300ng, xin chu\u0301c ca\u0301c ba\u0323n g\u0103\u0323p nhi\u00ea\u0300u may m\u0103\u0301n, va\u0300 mo\u0323i th\u01b0\u0301 su\u00f4n se\u0309 trong hay nga\u0300y thi s\u0103\u0301p t\u01a1\u0301i. Ai ai cu\u0303ng \u0111a\u0323t \u0111\u01b0\u01a1\u0323c \u01b0\u01a1\u0301c nguy\u00ea\u0323n cu\u0309a mi\u0300nh.</p> <p>A\u0300 qu\u00ean, chu\u0301c 5 ba\u0323n NDT, GTTV, DXB, NPD va\u0300 TQA nga\u0300y mai vui ve\u0309 :) Ahihi</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#1-vai-gop-y-sau-ky-thi-vo17-rr","title":"1 v\u00e0i g\u00f3p \u00fd sau k\u1ef3 thi VO17 - RR","text":"<p>Ngu\u1ed3n: Facebook VNOI</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#1","title":"1","text":"<p>Khi \u0111i thi c\u00e1c b\u1ea1n c\u1ea7n ch\u00fa \u00fd tr\u00e1nh nh\u1eefng code c\u00f3 th\u1ec3 d\u1eabn \u0111\u1ebfn Compile Error:</p> <ul> <li>pas: kh\u00f4ng th\u00eam uses crt;</li> <li>C++:<ul> <li>N\u1eafm r\u00f5 nh\u1eefng h\u00e0m m\u00ecnh hay d\u00f9ng \u1edf nh\u1eefng th\u01b0 vi\u1ec7n n\u00e0o, v\u00ed d\u1ee5 h\u00e0m memset thu\u1ed9c cstring. Th\u00f4ng th\u01b0\u1eddng th\u00ec m\u00ecnh lu\u00f4n include c\u1ea3 1 \u0111\u1ed1ng cstdio, cstdlib, cstring, cmath.</li> <li>Bi\u1ebft r\u00f5 nh\u1eefng bi\u1ebfn n\u00e0o c\u00f3 th\u1ec3 b\u1ecb tr\u00f9ng v\u1edbi bi\u1ebfn c\u1ee7a th\u01b0 vi\u1ec7n, v\u00ed d\u1ee5 y1, next.. (b\u1ea1n c\u00f3 th\u1ec3 xem code I_love_Tanya_Romanova c\u00f3 define t\u1ea5t c\u1ea3 nh\u1eefng bi\u1ebfn hay d\u00f9ng m\u00e0 tr\u00f9ng th\u01b0 vi\u1ec7n n\u00e0o \u0111\u00f3 \u0111\u1ec3 tr\u00e1nh tr\u00f9ng t\u00ean bi\u1ebfn. Ngo\u00e0i ra c\u00e1ch kh\u00e1c l\u00e0 cho t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9 v\u00e0o 1 namespace:</li> </ul> </li> </ul> <pre><code>namespace A {\n  int y1, next;\n  void solve() {\n    cout &lt;&lt; \"OK\" &lt;&lt; endl;\n    y1 = next = 1;\n    cout &lt;&lt; y1 &lt;&lt; ' ' &lt;&lt; next &lt;&lt; endl;\n  }\n};\nint main() { A::solve(); }\n</code></pre>"},{"location":"algo/skill/Ki-nang-thi-cu/#2","title":"2","text":"<p>B\u00e0i 2 ng\u00e0y 1 (VO17TV) c\u00f3 1 s\u1ed1 b\u1ea1n d\u00f9ng Suffix array. C\u00e1ch n\u00e0y \u0111\u00fang nh\u01b0ng c\u00e0i \u0111\u1eb7t ph\u1ee9c t\u1ea1p h\u01a1n r\u1ea5t nhi\u1ec1u so v\u1edbi d\u00f9ng hash. Khi \u0111i thi m\u1ed7i l\u1ef1a ch\u1ecdn sai l\u1ea7m v\u1ec1 thu\u1eadt to\u00e1n ki\u1ec3u n\u00e0y s\u1ebd l\u00e0m b\u1ea1n ti\u00eau t\u1ed1n r\u1ea5t nhi\u1ec1u th\u1eddi gian, v\u00e0 th\u01b0\u1eddng kh\u00f4ng s\u1eeda ch\u1eefa k\u1ecbp.</p> <p>V\u00ec v\u1eady khi ngh\u0129 ra b\u1ea5t k\u1ef3 thu\u1eadt to\u00e1n n\u00e0o, b\u1ea1n n\u00ean ti\u1ebfp t\u1ee5c suy ngh\u0129 xem c\u00f3 c\u00e1ch n\u00e0o \u0111\u01a1n gi\u1ea3n h\u01a1n kh\u00f4ng. Ch\u1ec9 b\u1eaft \u0111\u1ea7u code khi th\u1eadt s\u1ef1 ch\u1eafc ch\u1eafn kh\u00f4ng c\u00f3 c\u00e1ch n\u00e0o t\u1ed1t h\u01a1n.</p>"},{"location":"algo/skill/Ki-nang-thi-cu/#3","title":"3","text":"<p>C\u00f3 chi\u1ebfn thu\u1eadt r\u00f5 r\u00e0ng cho 1 b\u00e0i. V\u1edbi nh\u1eefng b\u00e0i c\u00e0i \u0111\u1eb7t ph\u1ee9c t\u1ea1p nh\u01b0 b\u00e0i VO17BACH, b\u1ea1n c\u1ea7n c\u00f3 chi\u1ebfn thu\u1eadt r\u00f5 r\u00e0ng ngay t\u1eeb \u0111\u1ea7u l\u00e0 debug nh\u01b0 th\u1ebf n\u00e0o.</p> <p>V\u00ed d\u1ee5:</p> <ul> <li>\u0110\u1ea7u ti\u00ean code duy\u1ec7t</li> <li>Sau khi duy\u1ec7t + sort, in t\u1ea5t c\u1ea3 ra r\u1ed3i ki\u1ec3m tra b\u1eb1ng m\u1eaft v\u1edbi 1 gi\u00e1 tr\u1ecb N t\u01b0\u01a1ng \u0111\u1ed1i l\u1edbn (e.g. 100)</li> <li>C\u00e0i \u0111\u1eb7t subtask 2 ho\u1eb7c 3</li> <li>D\u00f9ng subtask 1, vi\u1ebft th\u00eam tr\u00ecnh sinh test t\u1ef1 \u0111\u1ed9ng \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ed9 ch\u00ednh x\u00e1c v\u1edbi 1 s\u1ed1 l\u01b0\u1ee3ng test t\u01b0\u01a1ng \u0111\u1ed1i l\u1edbn (10^4 - 10^5 test).</li> </ul>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/","title":"Kinh nghi\u1ec7m thi VOI","text":"<p>T\u00e1c gi\u1ea3:  - Tr\u1ea7n Xu\u00e2n B\u00e1ch - HUS High School for Gifted Students</p> <p>Kh\u00e1c v\u1edbi c\u00e1c k\u00ec thi kh\u00e1c, b\u1ea3n ch\u1ea5t thi offline c\u1ee7a VOI khi\u1ebfn th\u00ed sinh ph\u1ea3i r\u1ea5t c\u1ea9n tr\u1ecdng v\u00e0 t\u1ec9 m\u1ec9 khi code. B\u00e0i vi\u1ebft d\u01b0\u1edbi \u0111\u00e2y s\u1ebd ch\u1ec9 ra c\u00e1c l\u1ed7i sai m\u00e0 c\u00e1c b\u1ea1n th\u01b0\u1eddng g\u1eb7p, \u0111\u1ed3ng th\u1eddi ch\u1ec9 ra c\u00e1ch kh\u1eafc ph\u1ee5c ch\u00fang.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#cac-loi-sai-thuong-gap","title":"C\u00e1c l\u1ed7i sai th\u01b0\u1eddng g\u1eb7p","text":"<p>Hai l\u1ed7i \u0111\u1ea7u ti\u00ean r\u1ea5t d\u1ec5 tr\u00e1nh n\u1ebfu b\u1ea1n l\u00e0m nh\u01b0 sau:</p> <p>5-7 ph\u00fat tr\u01b0\u1edbc khi h\u1ebft gi\u1edd, c\u00e1c b\u1ea1n n\u00ean ch\u1ea1y l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i b\u1eb1ng file. Ki\u1ec3m tra xem t\u1ea5t c\u1ea3 v\u00ed d\u1ee5 \u0111\u00fang ch\u01b0a, r\u1ed3i sau \u0111\u00f3 \u0111\u00f3ng code l\u1ea1i v\u00e0 kh\u00f4ng s\u1eeda g\u00ec n\u1eefa.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#dich-loi","title":"D\u1ecbch l\u1ed7i","text":"C\u00e1c n\u1ea1n nh\u00e2n x\u1ea5u s\u1ed1 :( <p>M\u1ed9t trong nh\u1eefng l\u1ed7i \"ng\u1edb ng\u1ea9n\" nh\u1ea5t c\u00f3 th\u1ec3 x\u1ea3y ra trong k\u00ec thi, nh\u01b0ng \u0111\u00e3 c\u00f3 kh\u00f4ng \u00edt tr\u01b0\u1eddng h\u1ee3p nh\u01b0 tr\u00ean x\u1ea3y ra \u1edf PreVOI v\u00e0 th\u1eadm ch\u00ed l\u00e0 VOI n\u1eefa.</p> <p>\u0110\u1ec3 ph\u00f2ng tr\u00e1nh th\u00ec \u0111\u01a1n gi\u1ea3n th\u00f4i: Tr\u01b0\u1edbc khi b\u1ea1n ho\u00e0n th\u00e0nh m\u1ed9t b\u00e0i, h\u00e3y compile l\u1ea1i n\u00f3 m\u1ed9t l\u1ea7n n\u1eefa \u0111\u1ec3 ki\u1ec3m tra, sau \u0111\u00f3 \u0111\u00f3ng n\u00f3 l\u1ea1i v\u00e0 kh\u00f4ng s\u1eeda g\u00ec n\u1eefa.</p> \u0110\u1eebng th\u00eam #define int long long l\u00fac cu\u1ed1i gi\u1edd..."},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#ocghi-file-sai","title":"\u0110\u1ecdc/ghi file sai","text":"<p>Do th\u1ec3 th\u1ee9c \u0111\u1ecdc/ghi qua file c\u1ee7a VOI kh\u00e1c v\u1edbi c\u00e1c trang thi nh\u01b0 Codeforces hay AtCoder, n\u00ean nhi\u1ec1u b\u1ea1n c\u00f2n c\u1ea9u th\u1ea3 \u1edf ph\u1ea7n n\u00e0y. C\u00e1c b\u1ea1n n\u00ean:</p> <ul> <li>\u0110\u1ecdc k\u0129 (\u00edt nh\u1ea5t hai l\u1ea7n) t\u00ean file d\u1eef li\u1ec7u \u1edf trang \u0111\u1ea7u ti\u00ean c\u1ee7a \u0111\u1ec1 thi.</li> </ul> B\u1ea1n c\u00f3 th\u1ea5y l\u1ed7i sai kh\u00f4ng? <ul> <li> <p>Khi ch\u1ea1y th\u1eed v\u00ed d\u1ee5, h\u00e3y ch\u1ea1y lu\u00f4n tr\u00ean c\u00e1c file d\u1eef li\u1ec7u thay v\u00ec nh\u1eadp xu\u1ea5t tr\u00ean terminal.</p> </li> <li> <p>N\u1ebfu b\u1ea1n c\u1ea3m th\u1ea5y c\u00e1ch tr\u00ean b\u1ea5t ti\u1ec7n, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 test b\u1eb1ng terminal tr\u00ean m\u00e1y nh\u01b0ng v\u1eabn \u0111\u1ecdc \u0111\u01b0\u1ee3c file khi ch\u1ea5m b\u00e0i.</p> </li> </ul> <pre><code>// Ki\u1ec3m tra xem file \"SEI.inp\" c\u00f3 t\u1ed3n t\u1ea1i hay kh\u00f4ng\nif (fopen(\"SEI.inp\", \"r\")){\n    // N\u1ebfu c\u00f3, m\u1edf file \"SEI.inp\" \u0111\u1ec3 \u0111\u1ecdc v\u00e0 file \"SEI.out\" \u0111\u1ec3 ghi\n    freopen(\"SEI.inp\", \"r\", stdin);\n    freopen(\"SEI.out\", \"w\", stdout);\n}\n</code></pre> <p>L\u01b0u \u00fd: Ch\u1ec9 n\u00ean d\u00f9ng c\u00e1ch n\u00e0y n\u1ebfu b\u1ea1n ch\u1eafc ch\u1eafn b\u1ea1n code \u0111\u00fang trong ph\u00f2ng thi.</p> N\u1ea1n nh\u00e2n x\u1ea5u s\u1ed1 kh\u00e1c"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#loi-khi-inputoutput","title":"L\u1ed7i khi input/output","text":""},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#in-thua-debug","title":"In th\u1eeba debug","text":"<p>Tr\u01b0\u1edbc khi n\u1ed9p b\u00e0i, h\u00e3y g\u00f5 <code>Ctrl+F</code> \u0111\u1ec3 t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a <code>cout</code>/<code>printf</code>, khi \u0111\u00f3 g\u1ea7n nh\u01b0 ch\u1eafc ch\u1eafn b\u1ea1n s\u1ebd kh\u00f4ng b\u1ecf s\u00f3t d\u00f2ng debug n\u00e0o h\u1ebft! Tr\u1eeb khi b\u1ea1n d\u00f9ng <code>cerr</code>...</p> <p>L\u01b0u \u00fd: \u0110\u1eebng xo\u00e1 nh\u1ea7m c\u1ea3 d\u00f2ng output nh\u01b0 m\u00ecnh</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#oc-chua-het-input","title":"\u0110\u1ecdc ch\u01b0a h\u1ebft input","text":"<pre><code>int n, a[N];\nint tests; cin &gt;&gt; tests; while (tests--){\n    cin &gt;&gt; n;\n    if (n % 2 == 0){\n        cout &lt;&lt; \"NO\" &lt;&lt; endl;\n        continue;\n    }\n    for (int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; a[i];\n    }\n    ...\n}\n</code></pre> <p>\u1ede code tr\u00ean, trong tr\u01b0\u1eddng h\u1ee3p \\(n\\) ch\u1eb5n, ta \u0111\u00e3 <code>continue</code> sang test ti\u1ebfp theo lu\u00f4n m\u00e0 kh\u00f4ng \u0111\u1ecdc n\u1ed1t m\u1ea3ng \\(a\\), d\u1eabn \u0111\u1ebfn vi\u1ec7c input c\u00e1c test sau b\u1ecb sai.</p> <p>\u0110\u1ec3 tr\u00e1nh vi\u1ec7c n\u00e0y x\u1ea3y ra, b\u1ea1n n\u00ean \u0111\u1ecdc t\u1ea5t c\u1ea3 d\u1eef li\u1ec7u c\u1ee7a test tr\u01b0\u1edbc khi \u0111i v\u00e0o ph\u1ea7n x\u1eed l\u00ed trong code.</p> <pre><code>int n, a[N];\nint tests; cin &gt;&gt; tests; while (tests--){\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; a[i];\n    }\n\n    // \u0110\u1ec3 ph\u1ea7n x\u1eed l\u00ed tr\u01b0\u1eddng h\u1ee3p xu\u1ed1ng d\u01b0\u1edbi ph\u1ea7n \u0111\u1ecdc d\u1eef li\u1ec7u\n    if (n % 2 == 0){\n        cout &lt;&lt; \"NO\" &lt;&lt; endl;\n        continue;\n    }\n    ...\n}\n</code></pre>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#output-thua","title":"Output th\u1eeba","text":"<pre><code>int n, m, a[N][N];\n... // \u0110\u1ecdc input\nbool has_answer = false;\nfor (int i = 1; i &lt;= n; i++){\n    for (int j = 1; j &lt;= m; j++){\n        // N\u1ebfu a[i][j] = 0, th\u00ec in ra i j v\u00e0 d\u1eebng l\u1ea1i\n        if (a[i][j] == 0){\n            cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; j &lt;&lt; endl;\n            has_answer = true;\n            break;\n        }\n    }\n}\n// N\u1ebfu kh\u00f4ng c\u00f3 ph\u1ea7n t\u1eed n\u00e0o tho\u1ea3 m\u00e3n, th\u00ec in ra -1 -1\nif (!has_answer){\n    cout &lt;&lt; -1 &lt;&lt; ' ' &lt;&lt; -1 &lt;&lt; endl;\n}\n</code></pre> <p>L\u1ed7i \u1edf tr\u00ean r\u1ea5t ph\u1ed5 bi\u1ebfn: N\u1ebfu c\u00f3 hai h\u00e0ng kh\u00e1c nhau ch\u1ee9a \u00f4 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(0\\), th\u00ec code tr\u00ean s\u1ebd in ra c\u1ea3 hai \u00f4 \u0111\u00f3!</p> <p>C\u00e1ch s\u1eeda d\u1ec5 th\u1ea5y nh\u1ea5t l\u00e0 th\u00eam m\u1ed9t l\u1ea7n if bi\u1ebfn <code>has_answer</code> \u1edf cu\u1ed1i v\u00f2ng for trong, tuy nhi\u00ean code nh\u00ecn s\u1ebd kh\u00e1 x\u1ea5u. M\u00ecnh th\u01b0\u1eddng vi\u1ebft m\u1ed9t h\u00e0m ri\u00eang \u0111\u1ec3 ki\u1ec3m tra nh\u01b0 sau:</p> <pre><code>bool check(){\n    for (int i = 1; i &lt;= n; i++){\n        for (int j = 1; j &lt;= m; j++){\n            if (a[i][j] == 0){\n                cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; j &lt;&lt; endl;\n                return true;\n            }\n        }\n    }\n    return false;\n}\n...\nif (!check()){\n    cout &lt;&lt; -1 &lt;&lt; ' ' &lt;&lt; -1 &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#tran-mang","title":"Tr\u00e0n m\u1ea3ng","text":"<p>V\u00ec VOI kh\u00f4ng cho ph\u00e9p b\u1ea1n \u0111\u01b0\u1ee3c sai s\u00f3t, n\u00ean vi\u1ec7c \u0111\u1ec3 th\u1eeba m\u1ea3ng kh\u00f4ng ph\u1ea3i l\u00e0 vi\u1ec7c \u0111\u00e1ng b\u1eadn t\u00e2m l\u1eafm. B\u00ecnh th\u01b0\u1eddng m\u00ecnh s\u1ebd khai b\u00e1o m\u1ea3ng nh\u01b0 sau:</p> <pre><code>// K\u00edch c\u1ee1 t\u1ed1i \u0111a c\u1ee7a m\u1ea3ng, n\u00ean l\u01b0u v\u00e0o m\u1ed9t bi\u1ebfn constant\nconst int N = 1e5 + 5;\n\n// M\u00ecnh th\u01b0\u1eddng \u0111\u1ec3 th\u1eeba h\u1eb3n 5 ph\u1ea7n t\u1eed \u0111\u1ec3 v\u1eeba c\u00f3 th\u1ec3\n// truy c\u1eadp m\u1ea3ng b\u1eaft \u0111\u1ea7u t\u1eeb 1 m\u00e0 v\u1eabn kh\u00f4ng lo tr\u00e0n m\u1ea3ng.\nint a[N];\n</code></pre> <p>L\u01b0u \u00fd: \u0110\u1ecdc k\u0129 gi\u1edbi h\u1ea1n m\u1ea3ng. Khi so\u00e1t l\u1ea1i b\u00e0i, h\u00e3y ki\u1ec3m tra l\u1ea1i gi\u1edbi h\u1ea1n c\u1ee7a t\u1eebng m\u1ea3ng m\u1ed9t.</p> <p>Kh\u00f4ng n\u00ean truy c\u1eadp m\u1ea3ng t\u1eeb \\(0\\) v\u00ec ai bi\u1ebft khi n\u00e0o b\u1ea1n truy c\u1eadp nh\u1ea7m v\u00e0o <code>a[i - 1]</code> \u0111\u00e2u, t\u1ed1t nh\u1ea5t l\u00e0 b\u1eaft \u0111\u1ea7u t\u1eeb \\(1\\) \u0111\u1ec3 b\u1ea1n t\u1ea1o cho ch\u00ednh m\u00ecnh m\u1ed9t v\u00f9ng an to\u00e0n. \u0110\u00e2y c\u0169ng ch\u00ednh l\u00e0 l\u00ed do b\u1ea1n n\u00ean \u0111\u1eb7c bi\u1ec7t ch\u00fa \u00fd khi d\u00f9ng std::vector hay bitmask, v\u1ed1n hay \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 duy\u1ec7t tr\u00e2u c\u00e1c subtask nh\u1ecf.</p> <p>L\u01b0u \u00fd m\u1ed9t s\u1ed1 gi\u1edbi h\u1ea1n m\u1ea3ng \u0111\u1eb7c bi\u1ec7t: Segment Tree c\u00f3 gi\u1edbi h\u1ea1n l\u00e0 \\(4\\times n\\), Euler Tour (trong c\u00e1ch c\u00e0i \u0111\u1eb7t &lt;\\(\\mathcal O(n\\log n)\\), \\(\\mathcal O(1)\\)&gt; c\u1ee7a LCA) c\u00f3 gi\u1edbi h\u1ea1n l\u00e0 \\(2 \\times n\\).</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#tran-so","title":"Tr\u00e0n s\u1ed1","text":"<p>C\u00e1ch d\u1ec5 nh\u1ea5t \u0111\u1ec3 \u0111\u1ec1 ph\u00f2ng tr\u00e0n s\u1ed1 l\u00e0 th\u00eam m\u1ed9t d\u00f2ng <code>#define int long long</code> ngay sau khi include th\u01b0 vi\u1ec7n. B\u1ea1n s\u1ebd kh\u00f4ng ph\u1ea3i lo chuy\u1ec7n cast bi\u1ebfn t\u1eeb int sang long long, tuy nhi\u00ean th\u1eddi gian ch\u1ea1y c\u1ee7a code s\u1ebd l\u00e2u h\u01a1n g\u1ea5p \u0111\u00f4i.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#tran-so-khi-modulo","title":"Tr\u00e0n s\u1ed1 khi modulo","text":"<p>V\u1edbi c\u00e1c b\u00e0i y\u00eau c\u1ea7u t\u00ednh \u0111\u00e1p \u00e1n theo m\u1ed9t modulo n\u00e0o \u0111\u00f3 (th\u01b0\u1eddng l\u00e0 \\(10^9 + 7\\) ho\u1eb7c \\(998244353\\)), th\u00ec b\u1ea1n ph\u1ea3i \u0111\u1eb7c bi\u1ec7t c\u1ea9n th\u1eadn khi code. Ch\u1ec9 c\u1ea7n qu\u00ean m\u1ed9t ph\u00e9p <code>%</code> th\u00f4i l\u00e0 b\u1ea1n s\u1ebd bay ph\u1ea7n l\u1edbn \u0111i\u1ec3m c\u1ee7a b\u00e0i.</p> <p>V\u1eady c\u00e1c l\u1ed7i n\u00e0o c\u00e1c b\u1ea1n hay g\u1eb7p?</p> <ul> <li>Qu\u00ean mod sau t\u1eebng ph\u00e9p t\u00ednh   <pre><code>int a, b; cin &gt;&gt; a &gt;&gt; b;\n\nint x1 = a + b; // Sai v\u00ec a + b c\u00f3 th\u1ec3 v\u01b0\u1ee3t qu\u00e1 mod\nint x2 = (a + b) % mod; // \u0110\u00fang\n\nint y1 = a * b; // Sai v\u00ec a * b c\u00f3 th\u1ec3 v\u01b0\u1ee3t qu\u00e1 mod\nint y2 = (a * b) % mod; // Sai v\u00ec a * b v\u1eabn c\u00f3 th\u1ec3 tr\u00e0n s\u1ed1\nint y3 = ((long long)a * b) % mod; // \u0110\u00fang\n\nint z1 = ((long long)a * b * c) % mod; // Sai v\u00ec a * b * c c\u00f3 th\u1ec3 tr\u00e0n s\u1ed1\nint z2 = (((long long)a * b) % mod * c) % mod; // \u0110\u00fang\n</code></pre></li> </ul> <p>C\u00e1c ph\u00e9p t\u00ednh <code>*</code>, <code>/</code>, <code>%</code> c\u00f3 c\u00f9ng th\u1ee9 t\u1ef1 \u01b0u ti\u00ean v\u00e0 \u0111\u01b0\u1ee3c t\u00ednh t\u1eeb tr\u00e1i qua ph\u1ea3i, n\u00ean c\u00e1ch code n\u00e0y c\u0169ng \u0111\u00fang:</p> <pre><code>int z3 = (long long)a * b % mod * c % mod; // \u0110\u00fang\n</code></pre> <ul> <li>S\u1ed1 \u00e2m sau khi tr\u1eeb   <pre><code>int x1 = (a - b) % mod; // Sai\nint x2 = ((a - b) % mod + mod) % mod; // \u0110\u00fang\n</code></pre></li> </ul> <p>L\u00ed do l\u00e0 v\u00ec ph\u00e9p mod s\u1ed1 \u00e2m s\u1ebd ra s\u1ed1 \u00e2m, n\u00ean b\u1ea1n ph\u1ea3i c\u1ed9ng th\u00eam mod \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o gi\u00e1 tr\u1ecb kh\u00f4ng \u00e2m tr\u01b0\u1edbc khi mod th\u00eam l\u1ea7n n\u1eefa.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#cach-giai-quyet","title":"C\u00e1ch gi\u1ea3i quy\u1ebft","text":"<p>M\u00ecnh s\u1ebd code ri\u00eang c\u00e1c ph\u00e9p t\u00ednh c\u1ed9ng, tr\u1eeb, nh\u00e2n ra th\u00e0nh h\u00e0m \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o m\u00ecnh mod sau m\u1ed7i ph\u00e9p t\u00ednh v\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i x\u1eed l\u00ed ph\u00e9p tr\u1eeb m\u1ed7i b\u01b0\u1edbc n\u1eefa.</p> <pre><code>// C\u00e1c h\u00e0m n\u00e0y gi\u1ea3 s\u1eed 0 &lt;= x, y &lt; mod\nint add(int x, int y){\n    return (x + y) % mod;\n}\n\nint sub(int x, int y){\n    return ((x - y) % mod + mod) % mod;\n}\n\nint mul(int x, int y){\n    return (long long)x * y % mod;\n}\n</code></pre>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#cac-dang-tran-so-khac","title":"C\u00e1c d\u1ea1ng tr\u00e0n s\u1ed1 kh\u00e1c","text":"<ul> <li>Tr\u00e0n s\u1ed1 khi shift bit: <code>1 &lt;&lt; x</code> s\u1ebd tr\u00e0n int n\u1ebfu \\(x \\ge 31\\).   \u0110\u1ec3 k\u1ebft qu\u1ea3 l\u00e0 long long, h\u00e3y d\u00f9ng <code>1ll &lt;&lt; x</code>.</li> <li>D\u00f9ng <code>builtin_popcount</code>, <code>builtin_clz</code> cho long long.   \u0110\u00fang ra ph\u1ea3i d\u00f9ng <code>builtin_popcountll</code>, <code>builtin_clzll</code>.</li> <li>Tr\u00e0n s\u1ed1 khi ch\u1eb7t nh\u1ecb ph\u00e2n.   C\u00e1ch t\u00ednh th\u00f4ng th\u01b0\u1eddng <code>int mid = (l + r) / 2</code> s\u1ebd tr\u00e0n s\u1ed1 n\u1ebfu \\(l + r \\ge 2^{31}\\).   N\u1ebfu ch\u1eb3ng may g\u1eb7p t\u00ecnh hu\u1ed1ng n\u00e0y, s\u1eeda d\u00f2ng tr\u00ean th\u00e0nh <code>int mid = l + (r - l) / 2</code> --- Gi\u00e1 tr\u1ecb c\u1ee7a \\(mid\\) v\u1eabn kh\u00f4ng thay \u0111\u1ed5i.</li> <li><code>accumulate(a + 1, a + n + 1, 0)</code> s\u1ebd tr\u00e0n s\u1ed1 n\u1ebfu t\u1ed5ng c\u1ee7a m\u1ea3ng \\(a\\) tr\u00e0n s\u1ed1 --- Ph\u1ea3i thay b\u1eb1ng <code>accumulate(a + 1, a + n + 1, 0ll)</code>.</li> </ul> <p>M\u00ecnh c\u00f3 l\u1eddi khuy\u00ean l\u00e0 \u0111\u1eebng d\u00f9ng <code>INT_MAX</code> hay <code>LLONG_MAX</code> v\u00ec b\u1ea1n s\u1ebd ph\u1ea3i c\u1ea9n th\u1eadn h\u01a1n v\u1edbi vi\u1ec7c c\u1ed9ng / tr\u1eeb c\u00e1c gi\u00e1 tr\u1ecb n\u00e0y --- v\u00ed d\u1ee5 nh\u01b0 khi DP hay Dijkstra, c\u00f3 b\u1ea1n \u0111\u1ec3 gi\u00e1 tr\u1ecb ban \u0111\u1ea7u nh\u01b0 tr\u00ean, khi \u0111\u00f3 vi\u1ec7c transition s\u1ebd b\u1ecb l\u1ed7i.</p> <p>Thay v\u00e0o \u0111\u00f3, h\u00e3y d\u00f9ng c\u00e1c bi\u1ebfn <code>const int inf = 1e9 + 7</code>, <code>const long long infll = (long long)1e18 + 7</code>. N\u1ebfu d\u00f9ng memset th\u00ec c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng bi\u1ebfn \"c\u00e1ch t\u01b0 duy c\u1ee7a Trung Qu\u1ed1c\" <code>memset(dist, 0x3f, sizeof(dist));</code><sup>1</sup> --- c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(dist\\) s\u1ebd \u0111\u01b0\u1ee3c g\u00e1n b\u1eb1ng 1061109567.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#su-dung-iterator-va-stl","title":"S\u1eed d\u1ee5ng iterator v\u00e0 STL","text":""},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#cong-tru-iterator-va-dereference","title":"C\u1ed9ng tr\u1eeb iterator v\u00e0 dereference","text":"<pre><code>vector &lt;int&gt; b;\n... // \u0110\u1ecdc v\u00e0o b\nsort(b.begin(), b.end()); // L\u01b0u \u00fd: \u0111\u1eebng qu\u00ean sort tr\u01b0\u1edbc khi ch\u1eb7t nh\u1ecb ph\u00e2n!\nint x; cin &gt;&gt; x;\nvector &lt;int&gt;::iterator itr1 = lower_bound(b.begin(), b.end(), x);\ncout &lt;&lt; (*itr1) &lt;&lt; endl;\nvector &lt;int&gt;::iterator itr2 = itr1;\nitr2--;\ncout &lt;&lt; (*itr2) &lt;&lt; endl;\n</code></pre> <p>N\u1ebfu m\u1ecdi ph\u1ea7n t\u1eed trong \\(b\\) \u0111\u1ec1u b\u00e9 h\u01a1n \\(x\\), th\u00ec \\(itr1\\) s\u1ebd ch\u1ec9 v\u1ec1 \\(b.end()\\), l\u00e0 iterator ch\u1ec9 v\u1ec1 ph\u1ea7n t\u1eed ngay sau ph\u1ea7n t\u1eed cu\u1ed1i c\u1ee7a \\(b\\). Vi\u1ec7c dereference (t\u1ea1m hi\u1ec3u l\u00e0 l\u1ea5y gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ebfn) \\(itr1\\) l\u00fac n\u00e0y l\u00e0 UB, v\u00e0 nhi\u1ec1u kh\u1ea3 n\u0103ng l\u00e0 code b\u1ea1n s\u1ebd RTE :).</p> <p>Ngo\u00e0i ra, n\u1ebfu \\(itr1\\) l\u00e0 \\(b.begin()\\), th\u00ec d\u00f2ng <code>itr2--;</code> c\u0169ng s\u1ebd b\u1ecb UB do b\u1ea1n kh\u00f4ng gi\u1ea3m iterator xu\u1ed1ng d\u01b0\u1edbi begin \u0111\u01b0\u1ee3c.</p> <p>\u0110\u1ec3 ph\u00f2ng tr\u00e1nh th\u00ec t\u1ed1t nh\u1ea5t l\u00e0 b\u1ea1n \u0111\u1eebng \u0111\u1ed9ng \u0111\u1ebfn iterator lu\u00f4n :D. Trong tr\u01b0\u1eddng h\u1ee3p b\u1ea5t \u0111\u1eafc d\u0129, th\u00ec b\u1ea1n ph\u1ea3i c\u1ed1 g\u1eafng x\u00e9t h\u1ebft m\u1ecdi tr\u01b0\u1eddng h\u1ee3p corner case th\u00f4i.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#cac-ham-stl-ac-biet-can-luu-y","title":"C\u00e1c h\u00e0m STL \u0111\u1eb7c bi\u1ec7t c\u1ea7n l\u01b0u \u00fd","text":"<ul> <li>\u0110\u1ec3 ch\u1eb7t nh\u1ecb ph\u00e2n tr\u00ean <code>set</code>, c\u00e1c b\u1ea1n ph\u1ea3i d\u00f9ng h\u00e0m ri\u00eang <code>set::lower_bound(value)</code>.   D\u00f9ng h\u00e0m <code>lower_bound(set::begin(), set::end(), value)</code> c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u00edt nh\u1ea5t l\u00e0 \\(\\mathcal O(n)\\). T\u01b0\u01a1ng t\u1ef1 cho c\u00e1c h\u00e0m kh\u00e1c nh\u01b0 <code>upper_bound</code> v\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c nh\u01b0 <code>multiset</code>.</li> <li><code>multiset::erase(value)</code> xo\u00e1 to\u00e0n b\u1ed9 c\u00e1c gi\u00e1 tr\u1ecb \\(value\\) trong multiset \u0111\u00f3.   \u0110\u1ec3 xo\u00e1 m\u1ed9t ph\u1ea7n t\u1eed duy nh\u1ea5t, d\u00f9ng <code>multiset::erase(multiset::find(value))</code>. L\u01b0u \u00fd \\(value\\) ph\u1ea3i t\u1ed3n t\u1ea1i trong multiset \u0111\u00f3.</li> <li><code>multiset::count(value)</code> c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed b\u1eb1ng \\(value\\) trong multiset \u0111\u00f3, t\u1ee9c l\u00e0 c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn \\(\\mathcal O(n)\\).   \u0110\u1ec3 \u0111\u1ebfm trong \\(\\mathcal O(\\log n)\\), b\u1ea1n n\u00ean d\u00f9ng <code>map</code>.</li> <li>B\u1ea1n s\u1ebd b\u1ecb tr\u00e0n s\u1ed1 n\u1ebfu b\u1ea1n d\u00f9ng <code>a.size() - 1</code> khi \\(a\\) r\u1ed7ng, do <code>a.size()</code> tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 unsigned.   \u0110\u1ec3 s\u1eeda th\u00ec b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t d\u00f2ng define ch\u1eafp v\u00e1 c\u1ee7a m\u00ecnh: <code>#define isz(a) ((signed)(a).size()</code></li> </ul>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#cac-loi-sai-khac","title":"C\u00e1c l\u1ed7i sai kh\u00e1c","text":""},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#truyen-ctdl-vao-ham","title":"Truy\u1ec1n CTDL v\u00e0o h\u00e0m","text":"<pre><code>// Pass by value\nint ssize(vector &lt;int&gt; a){\n    return (int)a.size();\n}\n\nint n = 1e5;\nvector &lt;int&gt; a(n);\nfor (int i = 1; i &lt;= n; i++){\n    cout &lt;&lt; ssize(a) &lt;&lt; endl;\n}\n</code></pre> <p>Code tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal O(n^2)\\), v\u00ec h\u00e0m <code>ssize</code> m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal O(n)\\). L\u00ed do l\u00e0 v\u00ec m\u1ed7i khi g\u1ecdi h\u00e0m, to\u00e0n b\u1ed9 vector \\(a\\) \u0111\u01b0\u1ee3c copy l\u1ea1i, sau \u0111\u00f3 h\u00e0m <code>size</code> m\u1edbi \u0111\u01b0\u1ee3c g\u1ecdi cho vector m\u1edbi \u0111\u1ec3 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3.</p> <p>\u0110\u1ec3 h\u00e0m <code>ssize</code> c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal O(1)\\), ta s\u1ebd s\u1eeda l\u1ea1i th\u00e0nh:</p> <pre><code>// Pass by const reference\nint ssize(const vector &lt;int&gt;&amp; a){\n    return (int)a.size();\n}\n</code></pre> <p>C\u00f2n n\u1ebfu ta mu\u1ed1n s\u1eeda gi\u00e1 tr\u1ecb c\u1ee7a \\(a\\) trong h\u00e0m:</p> <pre><code>// Pass by reference\nint ssize(vector &lt;int&gt;&amp; a){\n    return (int)a.size();\n}\n</code></pre> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#reset-mang","title":"Reset m\u1ea3ng","text":"<pre><code>const int N = 1e5 + 5;\nint n;\nint ck[N];\n\nint tests; cin &gt;&gt; tests; while (tests--){\n    cin &gt;&gt; n;\n    memset(ck, 0, sizeof(ck));\n    for (int i = 1; i &lt;= n; i++){\n        int x; cin &gt;&gt; x; // 1 &lt;= x &lt;= n\n        ck[x] = 1;\n    }\n}\n</code></pre> <p>N\u1ebfu b\u00e0i c\u00f3 \\(10^5\\) test \\(n=1\\), th\u00ec code tr\u00ean ch\u1ea1y <code>memset</code> \\(10^5\\) l\u1ea7n v\u00e0 do v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a code l\u00e0 \\(\\mathcal O(10^{10})\\)!.</p> <p>V\u1edbi c\u00e1c b\u00e0i multitest, tuy\u1ec7t \u0111\u1ed1i kh\u00f4ng \u0111\u01b0\u1ee3c memset (tr\u1eeb khi b\u1ea1n bi\u1ebft ch\u00ednh x\u00e1c b\u1ea1n \u0111ang l\u00e0m g\u00ec). B\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng h\u00e0m <code>fill</code> ho\u1eb7c for tr\u00e2u \u0111\u1ec3 thay th\u1ebf. </p> <p>L\u01b0u \u00fd: Khi so\u00e1t l\u1ea1i b\u00e0i, h\u00e3y ki\u1ec3m tra l\u1ea1i xem m\u00ecnh \u0111\u00e3 reset m\u1ecdi bi\u1ebfn tr\u01b0\u1edbc m\u1ed7i test ch\u01b0a.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#fast-io","title":"Fast I/O","text":""},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#khong-dung-endl","title":"Kh\u00f4ng d\u00f9ng endl","text":"<p><code>cout &lt;&lt; endl</code> t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi <code>cout &lt;&lt; '\\n' &lt;&lt; flush</code>. Flush \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 \u0111\u01b0a output \u0111ang \u1edf trong buffer ra ngay l\u1eadp t\u1ee9c, nh\u1eb1m \u0111\u1ed3ng b\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c \u0111\u01b0a ra t\u1eeb ch\u01b0\u01a1ng tr\u00ecnh ra b\u00ean ngo\u00e0i nh\u01b0 terminal ch\u1eb3ng h\u1ea1n. Tuy nhi\u00ean v\u00ec ta \u0111\u1ecdc/ghi qua file n\u00ean flush kh\u00f4ng \u0111\u1ec3 l\u00e0m g\u00ec c\u1ea3 v\u00e0 n\u00f3 c\u00f2n r\u1ea5t ch\u1eadm n\u1eefa.</p> <p>C\u00e1ch d\u00f9ng thay th\u1ebf l\u00e0 <code>cout &lt;&lt; '\\n'</code>. N\u1ebfu b\u1ea1n quen tay d\u00f9ng <code>endl</code> r\u1ed3i, th\u00ec c\u00f3 th\u1ec3 th\u00eam d\u00f2ng <code>#define endl '\\n'</code> \u1edf b\u00ean tr\u00ean code.</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#dung-sync_with_stdio-va-cintie","title":"D\u00f9ng sync_with_stdio v\u00e0 cin.tie","text":"<p>\u0110\u1ec3 \u0111\u1ea9y t\u1ed1c \u0111\u1ed9 nh\u1eadp/xu\u1ea5t nhanh h\u01a1n n\u1eefa, th\u00eam hai d\u00f2ng n\u00e0y \u1edf tr\u00ean c\u00f9ng h\u00e0m <code>main</code>:</p> <pre><code>int main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n}\n</code></pre> <p><code>sync_with_stdio</code> d\u00f9ng \u0111\u1ec3 \u0111\u1ed3ng b\u1ed9 th\u1ee9 t\u1ef1 nh\u1eadp/xu\u1ea5t c\u1ee7a cin -- scanf, cout -- printf. V\u00ec b\u1ea1n kh\u00f4ng d\u00f9ng l\u1eabn c\u1ea3 hai c\u00e1i n\u00ean b\u1ea1n c\u00f3 th\u1ec3 tho\u1ea3i m\u00e1i \u0111\u1eb7t n\u00f3 v\u1ec1 \\(0\\), khi \u0111\u00f3 t\u1ed1c \u0111\u1ed9 input/output s\u1ebd \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n nhi\u1ec1u.</p> <p><code>cin.tie</code> \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 \u0111\u1ed3ng b\u1ed9 th\u1ee9 t\u1ef1 nh\u1eadp/xu\u1ea5t c\u1ee7a cin -- cout. N\u1ebfu kh\u00f4ng \u0111\u1ed3ng b\u1ed9, th\u1ee9 t\u1ef1 input/output c\u1ee7a code b\u1ea1n nhi\u1ec1u kh\u1ea3 n\u0103ng s\u1ebd b\u1ecb x\u00e1o tr\u1ed9n, nh\u01b0ng v\u00ec b\u1ea1n \u0111\u1ecdc/ghi qua file n\u00ean c\u00f3 th\u1ec3 \u0111\u1eb7t n\u00f3 v\u1ec1 \\(0\\), khi \u0111\u00f3 t\u1ed1c \u0111\u1ed9 c\u0169ng s\u1ebd \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n nhi\u1ec1u.</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam t\u1ea1i \u0111\u00e2y</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#nhung-kinh-nghiem-khac","title":"Nh\u1eefng kinh nghi\u1ec7m kh\u00e1c","text":""},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#toi-uu","title":"T\u1ed1i \u01b0u","text":"<p>N\u1ebfu code b\u1ea1n \u0111\u00e3 ch\u00ednh x\u00e1c r\u1ed3i, nh\u01b0ng khi b\u1ea1n ch\u1ea1y th\u1eed m\u1ed9t test to th\u00ec b\u1ecb TLE, th\u00ec ph\u1ea3i l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u1ed1i \u01b0u?</p> <p>L\u01b0u \u00fd: Kh\u00f4ng d\u00f9ng pragma!!!</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#dung-mang","title":"D\u00f9ng m\u1ea3ng","text":"<p>D\u00f9ng m\u1ea3ng so v\u1edbi d\u00f9ng <code>vector</code> c\u00f3 th\u1ec3 l\u00e0m code b\u1ea1n nhanh h\u01a1n m\u1ed9t ch\u00fat, nh\u01b0ng nh\u01b0 th\u1ebf l\u00e0 qu\u00e1 \u00edt ;). Hi\u1ec7u qu\u1ea3 c\u1ee7a vi\u1ec7c n\u00e0y s\u1ebd cao h\u01a1n nhi\u1ec1u n\u1ebfu b\u1ea1n d\u00f9ng \u0111\u1ec3 t\u1ed1i \u01b0u <code>stack</code>, <code>queue</code> hay <code>deque</code>, v\u00ec c\u1ea3 stack v\u00e0 queue \u0111\u1ec1u \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t \"ng\u1ea7m\" b\u1eb1ng deque, v\u00e0 deque c\u00f3 constant r\u1ea5t cao c\u1ea3 v\u1ec1 time v\u00e0 memory.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#khu-e-quy","title":"Kh\u1eed \u0111\u1ec7 quy","text":"<p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc b\u00e0i vi\u1ebft n\u00e0y tr\u00ean VNOI wiki. N\u1ebfu c\u00f3 th\u1ec3 th\u00ec b\u1ea1n h\u00e3y c\u00e0i stack trong n\u00e0y b\u1eb1ng m\u1ea3ng nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean.</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#dung-struct","title":"D\u00f9ng struct","text":"<p>M\u00ecnh th\u1ea5y nhi\u1ec1u b\u1ea1n khi l\u01b0u c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb th\u01b0\u1eddng hay d\u00f9ng <code>pair &lt;pair &lt;int, int&gt;, int&gt;</code> ho\u1eb7c <code>tuple &lt;int, int, int&gt;</code>. Code th\u1ebf n\u00e0y s\u1ebd l\u00e0m gi\u1ea3m t\u1ed1c \u0111\u1ed9 code c\u1ee7a b\u1ea1n (ph\u1ea3i g\u00f5 li\u00ean t\u1ee5c <code>edge[i].first.second</code>) v\u00e0 c\u00f2n d\u1ec5 bug n\u1eefa. Nh\u1eefng l\u00fac nh\u01b0 th\u1ebf n\u00e0y c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng <code>struct</code> trong C++, l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 kh\u00e1 h\u1eefu \u00edch trong vi\u1ec7c \"\u0111\u00f3ng g\u00f3i\" d\u1eef li\u1ec7u.</p> <pre><code>struct edge{\n    int u, v, w;\n\n    // Default constructor, khi b\u1ea1n kh\u1edfi t\u1ea1o edge m\u00e0 kh\u00f4ng c\u00f3 th\u00f4ng tin g\u00ec th\u00eam\n    edge(): u(0), v(0), w(0){\n\n    }\n\n    // Constructor \u0111\u1ec3 b\u1ea1n kh\u1edfi t\u1ea1o edge v\u1edbi hai \u0111\u1ea7u m\u00fat v\u00e0 tr\u1ecdng s\u1ed1 c\u1ee7a c\u1ea1nh\n    edge(int u, int v, int w): u(u), v(v), w(w){\n\n    }\n};\n\n// Input c\u1ea1nh\nedge a[N];\nfor (int i = 1; i &lt;= n; i++){\n    int u, v, w; \n    cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n    a[i] = edge(u, v, w);\n}\n</code></pre> <p>Gi\u1edd \u0111\u00e2y b\u1ea1n c\u00f3 th\u1ec3 truy c\u1eadp c\u00e1c bi\u1ebfn trong c\u1ea1nh r\u1ea5t d\u1ec5 d\u00e0ng: <code>a[i].u</code>, <code>a[i].v</code> v\u00e0 <code>a[i].w</code>. Nh\u01b0ng kh\u00f4ng ch\u1ec9 th\u1ebf, b\u1ea1n c\u00f2n c\u00f3 th\u1ec3 code h\u00e0m nh\u1eadp/xu\u1ea5t tu\u1ef3 \u00fd cho struct n\u1eefa!</p> <pre><code>struct edge{\n    int u, v, w;\n    ...\n    // H\u00e0m nh\u1eadp edge v\u00e0o t\u1eeb in\n    istream&amp; operator&gt;&gt; (istream&amp; in, edge&amp; e){\n        in &gt;&gt; e.u &gt;&gt; e.v &gt;&gt; e.w;\n        return in;\n    }\n\n    // H\u00e0m xu\u1ea5t edge ra out\n    ostream&amp; operator&lt;&lt; (ostream&amp; out, const edge&amp; e){\n        out &lt;&lt; e.u &lt;&lt; ' ' &lt;&lt; e.v &lt;&lt; ' ' &lt;&lt; e.w;\n        return out;\n    }\n};\n\n// Input/output c\u1ea1nh\nedge a[N];\nfor (int i = 1; i &lt;= n; i++){\n    cin &gt;&gt; a[i];\n    cout &lt;&lt; a[i] &lt;&lt; endl;\n}\n</code></pre> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam t\u1ea1i \u0111\u00e2y</p>"},{"location":"algo/skill/Kinh-nghiem-thi-VOI/#sinh-test","title":"Sinh test","text":"<p>Tr\u00ean VNOI \u0111\u00e3 c\u00f3 b\u00e0i vi\u1ebft r\u1ea5t t\u1ed1t t\u1ea1i \u0111\u00e2y. M\u00ecnh mu\u1ed1n b\u1ed5 sung th\u00eam tr\u01b0\u1eddng h\u1ee3p khi c\u00e1c b\u1ea1n c\u1ea7n vi\u1ebft checker:</p> <pre><code>ifstream out1(NAME + \".out\"), out2(NAME + \".ans\");\n\n// Vi\u1ebft checker. Output c\u1ee7a code chu\u1ea9n \u0111\u1ecdc \u1edf out1, c\u1ee7a code tr\u00e2u \u0111\u1ecdc \u1edf out2.\n\nout1.close(); out2.close();\ncout &lt;&lt; \"Test \" &lt;&lt; iTest &lt;&lt; \": CORRECT!\\n\";\n</code></pre> <ol> <li> <p>link gi\u1ea3i th\u00edch.\u00a0\u21a9</p> </li> </ol>"},{"location":"algo/skill/viet-trinh-cham/","title":"T\u1ef1 code, t\u1ef1 ch\u1ea5m, t\u1ef1 s\u01b0\u1edbng - B\u00ed k\u00edp thi offline","text":"<p>T\u00e1c gi\u1ea3: V\u0169 chipchip Ph\u00fac Ho\u00e0ng</p> <p>B\u1ea1n c\u1ea3m th\u1ea5y lo s\u1ee3 trong nh\u1eefng k\u00ec thi ch\u1ea5m offline? B\u1ea1n b\u00ecnh th\u01b0\u1eddng l\u00e0m b\u00e0i r\u1ea5t t\u1ed1t nh\u01b0ng khi ch\u1ea5m offline l\u1ea1i b\u1ecb \u0111i\u1ec3m k\u00e9m v\u00ec sai nh\u1eefng l\u1ed7i v\u1edb v\u1ea9n? B\u1ea1n code sai m\u1ed9t b\u00e0i r\u1ea5t kh\u00f3 v\u00e0 debug m\u00e3i kh\u00f4ng \u0111\u01b0\u1ee3c v\u00ec kh\u00f4ng c\u00f3 test sai? T\u1ea5t c\u1ea3 nh\u1eefng v\u1ea5n \u0111\u1ec1 \u0111\u00f3 s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft \u0111\u01a1n gi\u1ea3n v\u1edbi m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea5m b\u00e0i t\u1ef1 \u0111\u1ed9ng, gi\u00fap b\u1ea1n t\u1ef1 ki\u1ec3m tra b\u00e0i m\u00ecnh v\u00e0 ph\u00e1t hi\u1ec7n test sai. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u v\u1edbi b\u1ea1n nh\u1eefng b\u01b0\u1edbc c\u01a1 b\u1ea3n nh\u1ea5t \u0111\u1ec3 vi\u1ebft tr\u00ecnh ch\u1ea5m - m\u1ed9t k\u0129 thu\u1eadt m\u00e0 b\u1ea1n n\u00ean th\u00e0nh th\u1ea1o tr\u01b0\u1edbc khi thi HSG.</p>"},{"location":"algo/skill/viet-trinh-cham/#trinh-cham-la-gi","title":"Tr\u00ecnh ch\u1ea5m l\u00e0 g\u00ec?","text":"<p>Tr\u00ecnh ch\u1ea5m l\u00e0 m\u1ed9t b\u1ed9 ch\u01b0\u01a1ng tr\u00ecnh gi\u00fap b\u1ea1n t\u1ef1 \u0111\u1ed9ng sinh ra c\u00e1c test input ng\u1eabu nhi\u00ean v\u00e0 t\u1ef1 \u0111\u1ed9ng ch\u1ea1y hai ch\u01b0\u01a1ng tr\u00ecnh l\u1eddi gi\u1ea3i kh\u00e1c nhau v\u1edbi c\u00e1c input \u0111\u00f3 \u0111\u1ec3 so s\u00e1nh output. V\u1ec1 c\u01a1 b\u1ea3n, tr\u00ecnh ch\u1ea5m g\u1ed3m 4 ch\u01b0\u01a1ng tr\u00ecnh l\u00e0: l\u1eddi gi\u1ea3i 1, l\u1eddi gi\u1ea3i 2, tr\u00ecnh sinh test, v\u00e0 tr\u00ecnh so test. Th\u01b0\u1eddng th\u00ec l\u1eddi gi\u1ea3i 1 l\u00e0 c\u00e1ch chu\u1ea9n b\u1ea1n s\u1ebd s\u1eed d\u1ee5ng, c\u00f2n l\u1eddi gi\u1ea3i 2 l\u00e0 m\u1ed9t c\u00e1ch c\u00f3 hi\u1ec7u qu\u1ea3 k\u00e9m h\u01a1n nh\u01b0ng v\u1eabn ch\u00ednh x\u00e1c.</p>"},{"location":"algo/skill/viet-trinh-cham/#tai-sao-nen-viet-trinh-cham","title":"T\u1ea1i sao n\u00ean vi\u1ebft tr\u00ecnh ch\u1ea5m?","text":"<p>Vi\u1ebft tr\u00ecnh ch\u1ea5m l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1ch ki\u1ec3m tra b\u00e0i c\u1ee7a m\u00ecnh \u0111\u00e1ng tin c\u1eady nh\u1ea5t. V\u1edbi nh\u1eefng k\u00ec thi ch\u1ea5m offline, v\u00ed d\u1ee5 nh\u01b0 VOI, vi\u1ec7c sai s\u00f3t nh\u1ecf r\u1ea5t kh\u00f3 tr\u00e1nh kh\u1ecfi khi ta kh\u00f4ng th\u1ec3 bi\u1ebft k\u1ebft qu\u1ea3 trong khi thi. V\u1eady th\u00ec, n\u1ebfu nh\u01b0 b\u00e0i c\u1ee7a b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ea5m v\u1edbi b\u1ed9 test c\u1ee7a ban t\u1ed5 ch\u1ee9c, b\u1ea1n h\u00e3y t\u1ef1 ch\u1ea5m n\u00f3 v\u1edbi b\u1ed9 test ng\u1eabu nhi\u00ean m\u00e0 m\u00ecnh sinh. N\u1ebfu b\u00e0i c\u1ee7a b\u1ea1n \u0111\u00fang v\u1edbi c\u00e1c test ng\u1eabu nhi\u00ean, b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1m y\u00ean t\u00e2m l\u00e0 b\u00e0i s\u1ebd \u0111\u01b0\u1ee3c \u0111i\u1ec3m cao v\u00e0 kh\u00f4ng b\u1ecb nh\u1eefng sai s\u00f3t \"ch\u00ed m\u1ea1ng\" d\u1eabn \u0111\u1ebfn b\u00e0i b\u1ecb 0 \u0111i\u1ec3m.</p> <p>Tr\u00ecnh ch\u1ea5m y\u00eau c\u1ea7u m\u1ed9t tr\u00ecnh \"chu\u1ea9n\" v\u00e0 m\u1ed9t tr\u00ecnh \"tr\u00e2u\", v\u00e0 so s\u00e1nh hai ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y v\u1edbi nhau. N\u1ebfu tr\u00ecnh ch\u1ea5m c\u1ee7a b\u1ea1n ph\u00e1t hi\u1ec7n \u0111\u01b0\u1ee3c m\u1ed9t test m\u00e0 k\u1ebft qu\u1ea3 hai ch\u01b0\u01a1ng tr\u00ecnh kh\u00f4ng kh\u1edbp nhau, tr\u00ecnh chu\u1ea9n ho\u1eb7c tr\u00ecnh tr\u00e2u c\u1ee7a b\u1ea1n s\u1ebd sai, v\u00e0 b\u1ea1n h\u00e3y s\u1eed d\u1ee5ng test \u0111\u00f3 \u0111\u1ec3 debug. C\u00f2n n\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c test \u0111\u1ec1u \u0111\u00fang, b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1m y\u00ean t\u00e2m, v\u00ec m\u1eb7c d\u00f9 c\u00f3 th\u1ec3 c\u1ea3 hai l\u1eddi gi\u1ea3i c\u00f9ng sai, nh\u01b0ng c\u00f9ng sai gi\u1ed1ng h\u1ec7t nhau th\u00ec r\u1ea5t kh\u00f3.</p> <p>\u0110\u1ed1i v\u1edbi nh\u1eefng k\u00ec thi ch\u1ea5m online, ho\u1eb7c \u0111\u01a1n gi\u1ea3n l\u00e0 b\u1ea1n l\u00e0m b\u00e0i online tr\u00ean m\u1ea1ng, tr\u00ecnh ch\u1ea5m c\u0169ng r\u1ea5t h\u1eefu \u00edch trong vi\u1ec7c t\u00ecm test sai. Ch\u1eb3ng h\u1ea1n khi b\u1ea1n code m\u1ed9t b\u00e0i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00f3, n\u1ed9p b\u00e0i th\u1ea5y b\u1ecb 0 \u0111i\u1ec3m, thay v\u00ec vi\u1ec7c ng\u1ed3i debug b\u1eb1ng m\u1eaft h\u00e3y th\u1eed code m\u1ed9t b\u1ed9 tr\u00ecnh ch\u1ea5m \u0111\u1ec3 gi\u00fap t\u00ecm test sai. V\u1edbi test sai t\u00ecm \u0111\u01b0\u1ee3c b\u1ea1n s\u1ebd d\u1ec5 d\u00e0ng debug h\u01a1n r\u1ea5t nhi\u1ec1u.</p> <p>Nhi\u1ec1u ng\u01b0\u1eddi ng\u1ea1i vi\u1ebft tr\u00ecnh ch\u1ea5m v\u00ec cho r\u1eb1ng l\u00e0m v\u1eady m\u1ea5t th\u1eddi gian. Tuy nhi\u00ean, khi \u0111\u00e3 th\u00e0nh th\u1ea1o th\u00ec vi\u1ebft m\u1ed9t b\u1ed9 tr\u00ecnh ch\u1ea5m cho m\u1ed9t b\u00e0i ch\u1ec9 m\u1ea5t kho\u1ea3ng 10 ph\u00fat, n\u1ebfu nh\u01b0 b\u00e0i \u0111\u00f3 c\u00f3 th\u1ec3 l\u00e0m tr\u00e2u v\u00e0 sinh test ng\u1eabu nhi\u00ean m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng. L\u1ee3i th\u1ebf v\u1ec1 m\u1eb7t t\u00e2m l\u00ed khi \u0111\u00e3 bi\u1ebft ch\u1eafc b\u00e0i l\u00e0m c\u1ee7a m\u00ecnh \u0111\u00fang s\u1ebd gi\u00fap b\u1ea1n l\u00e0m b\u00e0i hi\u1ec7u qu\u1ea3 h\u01a1n, th\u1ef1c t\u1ebf s\u1ebd ti\u1ebft ki\u1ec7m \u0111\u01b0\u1ee3c th\u1eddi gian so v\u1edbi khi kh\u00f4ng ki\u1ec3m tra b\u00e0i. T\u01b0\u01a1ng t\u1ef1, vi\u1ebft tr\u00ecnh ch\u1ea5m \u0111\u1ec3 debug nh\u1eefng b\u00e0i code kh\u00f3 \u0111\u00f4i khi hi\u1ec7u qu\u1ea3 h\u01a1n nhi\u1ec1u so v\u1edbi vi\u1ec7c debug b\u1eb1ng m\u1eaft, ti\u1ebft ki\u1ec7m \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u th\u1eddi gian.</p>"},{"location":"algo/skill/viet-trinh-cham/#khi-nao-nen-viet-trinh-cham","title":"Khi n\u00e0o n\u00ean vi\u1ebft tr\u00ecnh ch\u1ea5m?","text":"<p>L\u1eddi khuy\u00ean c\u1ee7a t\u00e1c gi\u1ea3 l\u00e0: H\u00e3y vi\u1ebft tr\u00ecnh ch\u1ea5m b\u1ea5t c\u1ee9 l\u00fac n\u00e0o m\u00e0 b\u00e0i c\u00f3 th\u1ec3 l\u00e0m tr\u00e2u v\u00e0 sinh test ng\u1eabu nhi\u00ean d\u1ec5 d\u00e0ng. C\u00f3 m\u1ed9t s\u1ed1 b\u00e0i m\u00e0 c\u00e1ch tr\u00e2u c\u00f2n kh\u00f3 h\u01a1n c\u00e1ch chu\u1ea9n th\u00ec c\u00f3 th\u1ec3 t\u1ea1m b\u1ecf qua, tuy nhi\u00ean n\u1ebfu c\u00f3 th\u1eddi gian v\u1eabn n\u00ean vi\u1ebft tr\u00ecnh ch\u1ea5m sau \u0111\u1ea5y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o ch\u1eafc ch\u1eafn.</p>"},{"location":"algo/skill/viet-trinh-cham/#thanh-phan-cua-mot-bo-trinh-cham","title":"Th\u00e0nh ph\u1ea7n c\u1ee7a m\u1ed9t b\u1ed9 tr\u00ecnh ch\u1ea5m","text":"<p>L\u01b0u \u00fd: B\u00e0i vi\u1ebft n\u00e0y h\u01b0\u1edbng d\u1eabn cho Pascal/C++ tr\u00ean h\u1ec7 \u0111i\u1ec1u h\u00e0nh Windows. V\u1edbi c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c ho\u1eb7c ch\u1ea1y tr\u00ean h\u1ec7 \u0111i\u1ec1u h\u00e0nh kh\u00e1c, m\u1ed9t s\u1ed1 l\u1ec7nh s\u1ebd thay \u0111\u1ed5i, tuy nhi\u00ean \u00fd t\u01b0\u1edfng v\u1eabn t\u01b0\u01a1ng t\u1ef1.</p> <p>M\u1ed9t b\u1ed9 tr\u00ecnh ch\u1ea5m g\u1ed3m c\u00f3 4 th\u00e0nh ph\u1ea7n: L\u1eddi gi\u1ea3i 1, l\u1eddi gi\u1ea3i 2, tr\u00ecnh sinh test, tr\u00ecnh so test.</p>"},{"location":"algo/skill/viet-trinh-cham/#loi-giai-1","title":"L\u1eddi gi\u1ea3i 1:","text":"<p>Th\u01b0\u1eddng l\u00e0 code chu\u1ea9n c\u1ee7a b\u1ea1n. D\u00f9 vi\u1ebft tr\u00ecnh ch\u1ea5m hay kh\u00f4ng th\u00ec ph\u1ea7n n\u00e0y b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 n\u00ean c\u0169ng kh\u00f4ng c\u1ea7n ph\u1ea3i n\u00f3i nhi\u1ec1u. Trong b\u00e0i vi\u1ebft n\u00e0y, ta s\u1ebd gi\u1ea3 s\u1eed input c\u1ee7a tr\u00ecnh l\u1eddi gi\u1ea3i 1 l\u00e0 <code>*.inp</code>, output l\u00e0 <code>*.out</code>.</p>"},{"location":"algo/skill/viet-trinh-cham/#loi-giai-2","title":"L\u1eddi gi\u1ea3i 2:","text":"<p>Th\u01b0\u1eddng l\u00e0 code tr\u00e2u, ho\u1eb7c l\u00e0 m\u1ed9t c\u00e1ch gi\u1ea3i kh\u00e1c, mi\u1ec5n l\u00e0 ra \u0111\u00fang \u0111\u00e1p s\u1ed1. H\u00e3y ch\u1ecdn c\u00e1ch d\u1ec5 code nh\u1ea5t, d\u1ec5 \u0111\u00fang nh\u1ea5t c\u00f3 th\u1ec3, v\u00ec th\u1eddi gian ch\u1ea1y th\u1ef1c ra kh\u00f4ng quan tr\u1ecdng l\u1eafm khi b\u1ea1n ch\u1ec9 c\u1ea7n sinh test nh\u1ecf \u0111\u1ec3 ki\u1ec3m tra. Trong b\u00e0i vi\u1ebft n\u00e0y, ta s\u1ebd gi\u1ea3 s\u1eed input c\u1ee7a tr\u00ecnh l\u1eddi gi\u1ea3i 2 l\u00e0 <code>*.inp</code>, output l\u00e0 <code>*.ans</code>.</p>"},{"location":"algo/skill/viet-trinh-cham/#trinh-sinh-test","title":"Tr\u00ecnh sinh test:","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y c\u00f3 nhi\u1ec7m v\u1ee5 sinh input ng\u1eabu nhi\u00ean v\u00e0o file <code>*.inp</code>. \u0110\u1ec3 cho h\u00e0m ng\u1eabu nhi\u00ean \u0111\u01b0\u1ee3c thay \u0111\u1ed5i khi ch\u01b0\u01a1ng tr\u00ecnh kh\u1edfi \u0111\u1ed9ng, s\u1eed d\u1ee5ng l\u1ec7nh <code>randomize</code> trong Pascal v\u00e0 <code>srand(time(NULL))</code> trong C++.</p> <p>L\u01b0u \u00fd: L\u1ec7nh <code>srand(time(NULL))</code> trong C++ t\u00ednh random theo gi\u00e2y, t\u1ee9c l\u00e0 sau 1 gi\u00e2y n\u00f3 m\u1edbi thay \u0111\u1ed5i random seed. V\u00ec v\u1eady nhi\u1ec1u kh\u1ea3 n\u0103ng c\u00e1c test random sinh ra li\u00ean t\u1ee5c s\u1ebd b\u1ecb gi\u1ed1ng nhau. \u0110\u1ec3 kh\u1eafc ph\u1ee5c \u0111i\u1ec1u n\u00e0y, ta c\u00f3 th\u1ec3 l\u1ed3ng tr\u00ecnh sinh test v\u00e0o tr\u00ecnh so test ch\u1ee9 kh\u00f4ng t\u00e1ch ra cho ch\u1ea1y ri\u00eang n\u1eefa. V\u1edbi Pascal th\u00ec kh\u00f4ng ph\u1ea3i lo v\u1ec1 \u0111i\u1ec1u n\u00e0y, v\u00ec <code>randomize</code> thay \u0111\u1ed5i random seed theo mili gi\u00e2y.</p>"},{"location":"algo/skill/viet-trinh-cham/#trinh-so-test","title":"Tr\u00ecnh so test:","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y c\u00f3 nhi\u1ec7m v\u1ee5 duy\u1ec7t N l\u1ea7n, v\u1edbi N l\u00e0 s\u1ed1 test c\u1ea7n so, m\u1ed7i l\u1ea7n th\u00ec ch\u1ea1y tr\u00ecnh sinh test tr\u01b0\u1edbc, xong \u0111\u1ebfn l\u1ea7n l\u01b0\u1ee3t l\u1eddi gi\u1ea3i 1 v\u00e0 l\u1eddi gi\u1ea3i 2. Sau khi ch\u1ea1y xong, ta c\u00f3 \u0111\u01b0\u1ee3c file <code>*.out</code> v\u00e0 <code>*.ans</code> t\u01b0\u01a1ng \u1ee9ng l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a hai ch\u01b0\u01a1ng tr\u00ecnh l\u1eddi gi\u1ea3i, v\u00e0 vi\u1ec7c c\u00f2n l\u1ea1i l\u00e0 so s\u00e1nh 2 file n\u00e0y v\u1edbi nhau. N\u1ebfu k\u1ebft qu\u1ea3 tr\u00f9ng nhau (ho\u1eb7c th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec1 b\u00e0i v\u1edbi nh\u1eefng b\u00e0i c\u00f3 nhi\u1ec1u \u0111\u00e1p s\u1ed1), ta coi nh\u01b0 test \u0111\u00f3 \u0111\u00fang v\u00e0 chuy\u1ec3n \u0111\u1ebfn test sau. N\u1ebfu kh\u00e1c nhau, ta in ra sai v\u00e0 d\u1eebng ch\u01b0\u01a1ng tr\u00ecnh l\u1ea1i lu\u00f4n, v\u00e0 ta c\u00f3 3 file <code>*.inp</code>, <code>*.out</code>, <code>*.ans</code> l\u00e0 d\u1eef li\u1ec7u c\u1ee7a test sai.</p> <p>\u0110\u1ec3 ch\u1ea1y file, ta s\u1eed d\u1ee5ng <code>exec('*.exe', '')</code> trong Pascal v\u00e0 <code>system(\"*.exe\")</code> trong C++.</p>"},{"location":"algo/skill/viet-trinh-cham/#vi-du-bai-vmellip","title":"V\u00ed d\u1ee5: B\u00e0i VMELLIP","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u r\u1ea5t kh\u00f3, thu\u1ed9c \u0111\u1ec1 thi VNOI Marathon 2015. B\u00e0i vi\u1ebft xin \u0111\u01b0\u1ee3c l\u1ea5y code c\u1ee7a tanphatls987 \u0111\u01b0\u1ee3c 90 \u0111i\u1ec3m l\u00e0m v\u00ed d\u1ee5.</p>"},{"location":"algo/skill/viet-trinh-cham/#loi-giai-1_1","title":"L\u1eddi gi\u1ea3i 1:","text":"<p>Link code</p> <p>\u0110\u00e2y l\u00e0 code c\u1ee7a tanphatls987, \u0111\u01b0\u1ee3c th\u00eam 2 d\u00f2ng <code>freopen</code> v\u00e0o \u0111\u1ec3 m\u1edf file. Code g\u1ed1c kh\u00f4ng c\u00f3 2 d\u00f2ng n\u00e0y v\u00ec n\u1ed9p tr\u00ean SPOJ s\u1eed d\u1ee5ng Standard Input / Output.</p>"},{"location":"algo/skill/viet-trinh-cham/#loi-giai-2_1","title":"L\u1eddi gi\u1ea3i 2:","text":"<p>Link code</p> <p>\u0110\u00e2y l\u00e0 code tr\u00e2u v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(N * M), l\u00e0m y nh\u01b0 nh\u1eefng g\u00ec \u0111\u1ec1 b\u00e0i b\u1ea3o.</p>"},{"location":"algo/skill/viet-trinh-cham/#trinh-sinh-test-trinh-so-test","title":"Tr\u00ecnh sinh test + Tr\u00ecnh so test:","text":"<p>Link code</p> <p>V\u00ec \u0111\u00e2y l\u00e0 code C++ n\u00ean t\u00e1c gi\u1ea3 k\u1ebft h\u1ee3p tr\u00ecnh sinh test v\u1edbi tr\u00ecnh so test \u0111\u1ec3 cho h\u00e0m random ch\u1ea1y kh\u00f4ng b\u1ecb tr\u00f9ng. Code sinh test t\u1eeb d\u00f2ng 11 \u0111\u1ebfn d\u00f2ng 37. \u1ede \u0111\u00e2y, ta duy\u1ec7t 100 l\u1ea7n \u1ee9ng v\u1edbi 100 test, m\u1ed7i l\u1ea7n duy\u1ec7t ta sinh ng\u1eabu nhi\u00ean ra file input <code>vmellip.inp</code>. Sau \u0111\u00f3, ta l\u1ea7n l\u01b0\u1ee3t ch\u1ea1y hai ch\u01b0\u01a1ng tr\u00ecnh \u1edf tr\u00ean: <code>system(\"vmellip.exe\")</code> v\u00e0 <code>system(\"vmellip_trau.exe\")</code> (l\u1eddi gi\u1ea3i 2 \u0111\u1eb7t t\u00ean l\u00e0 <code>vmellip_trau</code>). Sau \u0111\u00f3 ta s\u1eed d\u1ee5ng l\u1ec7nh <code>system(\"fc vmellip.out vmellip.ans\")</code>, c\u00f3 nhi\u1ec7m v\u1ee5 so hai file text <code>vmellip.out</code> v\u00e0 <code>vmellip.ans</code> v\u1edbi nhau. N\u1ebfu hai file ho\u00e0n to\u00e0n kh\u1edbp nhau, l\u1ec7nh <code>system</code> s\u1ebd tr\u1ea3 v\u1ec1 exit code l\u00e0 0, c\u00f2n kh\u00f4ng s\u1ebd tr\u1ea3 v\u1ec1 exit code l\u00e0 1.</p> <p>Ch\u1ea1y th\u1eed ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y, ta c\u00f3 th\u1ec3 sinh \u0111\u01b0\u1ee3c m\u1ed9t test sai nh\u01b0 sau:</p> <pre><code>1 5\n6 6 \n3 1 1 8\n1 1 1 1\n6 1 1\n1 1 1 9\n2 1 1 8\n9 8\n</code></pre> <p>Trong \u0111\u00f3, l\u1eddi gi\u1ea3i 1 ra output l\u00e0:</p> <pre><code>1\n</code></pre> <p>L\u1eddi gi\u1ea3i 2 ra output l\u00e0:</p> <pre><code>0\n</code></pre> <p>Gi\u1edbi h\u1ea1n test (d\u00f2ng 3) \u0111\u01b0\u1ee3c \u0111\u1eb7t nh\u1ecf, m\u1ee5c \u0111\u00edch l\u00e0 \u0111\u1ec3 sinh ra test sai nh\u1ecf d\u1ec5 debug h\u01a1n. Sau khi code \u0111\u00e3 \u0111\u00fang, c\u00f3 th\u1ec3 t\u0103ng gi\u1edbi h\u1ea1n l\u00ean \u0111\u1ec3 ki\u1ec3m tra m\u1ea1nh h\u01a1n.</p>"},{"location":"algo/skill/viet-trinh-cham/#lam-sao-e-viet-trinh-cham-mot-cach-hieu-qua","title":"L\u00e0m sao \u0111\u1ec3 vi\u1ebft tr\u00ecnh ch\u1ea5m m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3?","text":"<p>Qua v\u00ed d\u1ee5 tr\u00ean, b\u1ea1n c\u00f3 th\u1ec3 c\u1ea3m th\u1ea5y kh\u00e1 ng\u1ea1i khi code tr\u00ecnh so test kh\u00e1 d\u00e0i, code c\u00f3 th\u1ec3 m\u1ea5t th\u1eddi gian. Tuy nhi\u00ean, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 vi\u1ebft code so test th\u00e0nh m\u1ed9t template \u0111\u1ec3 \u1ee9ng d\u1ee5ng cho t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i! V\u1edbi m\u1ed9t template so test c\u00f3 s\u1eb5n, vi\u1ec7c c\u00f2n l\u1ea1i c\u1ee7a ta ch\u1ec9 l\u00e0 code ph\u1ea7n sinh test v\u00e0 tr\u00ecnh tr\u00e2u, n\u1ebfu nh\u01b0 \u0111\u00e3 l\u00e0m quen v\u1edbi tr\u00ecnh ch\u1ea5m th\u00ec ch\u1ec9 m\u1ea5t kho\u1ea3ng 10 ph\u00fat \u0111\u1ec3 vi\u1ebft.</p> <p>T\u00e1c gi\u1ea3 xin \u0111\u01b0\u1ee3c chia s\u1ebb v\u1edbi c\u00e1c b\u1ea1n c\u00e1c template tr\u00ecnh ch\u1ea5m do ch\u00ednh m\u00ecnh s\u1eed d\u1ee5ng.</p>"},{"location":"algo/skill/viet-trinh-cham/#template-danh-cho-c","title":"Template d\u00e0nh cho C++:","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n// T\u00ean ch\u01b0\u01a1ng tr\u00ecnh\nconst string NAME = \"template\";\n// S\u1ed1 test ki\u1ec3m tra\nconst int NTEST = 100;\n\nmt19937 rd(chrono::steady_clock::now().time_since_epoch().count());\n## define rand rd\n\n// Vi\u1ebft l\u1ea1i h\u00e0m random \u0111\u1ec3 s\u1eed d\u1ee5ng cho thu\u1eadn ti\u1ec7n. H\u00e0m random n\u00e0y sinh ng\u1eabu nhi\u00ean s\u1ed1 trong ph\u1ea1m vi long long, s\u1ed1 sinh ra &gt;= l v\u00e0 &lt;= h.\nlong long Rand(long long l, long long h) {\n    assert(l &lt;= h);\n    return l + rd() * 1LL * rd() % (h - l + 1);\n}\n\nint main()\n{\n    srand(time(NULL));\n    for (int iTest = 1; iTest &lt;= NTEST; iTest++)\n    {\n        ofstream inp((NAME + \".inp\").c_str());\n        // Code ph\u1ea7n sinh test \u1edf \u0111\u00e2y\n        inp.close();\n        // N\u1ebfu d\u00f9ng Linux th\u00ec \"./\" + T\u00ean ch\u01b0\u01a1ng tr\u00ecnh\n        system((NAME + \".exe\").c_str());\n        system((NAME + \"_trau.exe\").c_str());\n        // N\u1ebfu d\u00f9ng linux th\u00ec thay fc b\u1eb1ng diff\n        if (system((\"fc \" + NAME + \".out \" + NAME + \".ans\").c_str()) != 0)\n        {\n            cout &lt;&lt; \"Test \" &lt;&lt; iTest &lt;&lt; \": WRONG!\\n\";\n            return 0;\n        }\n        cout &lt;&lt; \"Test \" &lt;&lt; iTest &lt;&lt; \": CORRECT!\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"algo/skill/viet-trinh-cham/#template-danh-cho-pascal","title":"Template d\u00e0nh cho Pascal:","text":"<pre><code>{$mode objfpc}\n// Th\u01b0 vi\u1ec7n dos ch\u1ee9a l\u1ec7nh exec\nuses dos;\nconst\n    // T\u00ean ch\u01b0\u01a1ng tr\u00ecnh\n    NAM = 'template';\n    // S\u1ed1 test ki\u1ec3m tra\n    NTEST = 100;\nvar\n    iTest: integer;\n\nbegin\n    for iTest := 1 to NTEST do\n    begin\n        // Pascal kh\u00f4ng g\u1eb7p v\u1ea5n \u0111\u1ec1 v\u1edbi randomize, v\u00ec v\u1eady ta c\u00f3 th\u1ec3 t\u00e1ch tr\u00ecnh sinh test ri\u00eang ra.\n        Exec(NAM + '_sinhtest.exe', '');\n        Exec(NAM + '.exe', '');\n        Exec(NAM + '_trau.exe', '');\n        Exec('fc', NAM + '.out ' + NAM + '.ans');\n        if DosExitCode &lt;&gt; 0 then\n        begin\n            writeln('Test ', iTest, ': WRONG!');\n            exit;\n        end;\n        writeln('Test ', iTest, ': CORRECT!');\n    end;\nend.\n</code></pre>"},{"location":"algo/skill/viet-trinh-cham/#template-dung-shell-script","title":"Template d\u00f9ng Shell script","text":"<p>Gi\u1ea3 s\u1eed b\u1ea1n c\u00f3 2 code kh\u00e1c nhau, \u0111\u00e3 d\u1ecbch ra 2 file executable l\u00e0 <code>prog1</code> v\u00e0 <code>prog2</code>. B\u1ea1n vi\u1ebft th\u00eam 1 tr\u00ecnh sinh test v\u00e0 d\u1ecbch ra file <code>gen</code>, <code>gen</code> nh\u1eadn 1 argument l\u00e0 randomized seed (VD v\u1edbi C++ b\u1ea1n d\u00f9ng <code>srand(atoi(argv[1]))</code>):</p> <pre><code>## Sinh 100 test\nfor((i=1;i&lt;=100;i++)); do\n  # Sinh input v\u1edbi seed $i v\u00e0 l\u01b0u v\u00e0o in_tmp\n  ./gen $i &gt; in_tmp\n  # So s\u00e1nh output c\u1ee7a 2 code, n\u1ebfu output kh\u00e1c nhau th\u00ec d\u1eebng l\u1ea1i.\n  # Khi \u0111\u00f3 ta c\u00f3 file in_tmp ch\u00ednh l\u00e0 input m\u00e0 2 code ch\u1ea1y ra k\u1ebft qu\u1ea3 kh\u00e1c nhau.\n  diff &lt;(./prog1 &lt; in_tmp) &lt;(./prog2 &lt; in_tmp) || break\ndone\n</code></pre>"},{"location":"algo/skill/viet-trinh-cham/#luyen-tap-viet-trinh-cham","title":"Luy\u1ec7n t\u1eadp vi\u1ebft tr\u00ecnh ch\u1ea5m","text":"<p>\u0110\u1ec3 vi\u1ebft tr\u00ecnh ch\u1ea5m th\u00e0nh th\u1ea1o, h\u00e3y th\u1eed vi\u1ebft tr\u00ecnh ch\u1ea5m v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i m\u00e0 b\u1ea1n luy\u1ec7n t\u1eadp, cho \u0111\u1ebfn khi kh\u00f4ng c\u00f2n ng\u1ea1i vi\u1ebft tr\u00ecnh ch\u1ea5m n\u1eefa th\u00ec l\u00fac \u0111\u00f3 b\u1ea1n s\u1ebd th\u00e0nh c\u00f4ng. H\u00e3y \u0111\u1eb7t ra m\u1ee5c ti\u00eau l\u00e0 m\u1ed9t sub AC v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i m\u00ecnh l\u00e0m v\u1edbi s\u1ef1 h\u1ed7 tr\u1ee3 c\u1ee7a tr\u00ecnh ch\u1ea5m. M\u1ed9t khi \u0111\u00e3 th\u00e0nh th\u1ea1o tuy\u1ec7t k\u0129 n\u00e0y, b\u1ea1n s\u1ebd d\u1ec5 d\u00e0ng chinh ph\u1ee5c nh\u1eefng k\u00ec thi ch\u1ea5m offline v\u00e0 kh\u00f4ng bao gi\u1edd ph\u1ea3i lo l\u1eafng l\u00e0m sai n\u1eefa.</p>"},{"location":"algo/string/basic/","title":"X\u1eed l\u00fd x\u00e2u","text":"<p>X\u00e2u (string) xu\u1ea5t hi\u1ec7n r\u1ea5t nhi\u1ec1u trong c\u00e1c b\u00e0i to\u00e1n. B\u00e0i vi\u1ebft n\u00e0y gi\u1edbi thi\u1ec7u s\u01a1 qua m\u1ed9t s\u1ed1 thu\u1eadt ng\u1eef c\u0169ng nh\u01b0 thu\u1eadt to\u00e1n v\u1ec1 x\u00e2u.</p>"},{"location":"algo/string/basic/#thuat-ngu","title":"Thu\u1eadt ng\u1eef","text":"<ul> <li>M\u1ed9t x\u00e2u \\(X\\) l\u00e0 x\u00e2u con (substring) c\u1ee7a m\u1ed9t x\u00e2u \\(Y\\) n\u1ebfu \\(X\\) l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1 li\u00ean ti\u1ebfp c\u1ee7a \\(Y\\). V\u00ed d\u1ee5: <code>ab</code> v\u00e0 <code>bc</code> l\u00e0 2 x\u00e2u con c\u1ee7a <code>abcd</code>. Nh\u01b0ng <code>ac</code> th\u00ec kh\u00f4ng ph\u1ea3i l\u00e0 x\u00e2u con c\u1ee7a <code>abcd</code>.</li> <li>M\u1ed9t x\u00e2u \\(X\\) l\u00e0 ti\u1ec1n t\u1ed1 (prefix) c\u1ee7a m\u1ed9t x\u00e2u \\(Y\\) n\u1ebfu \\(X\\) l\u00e0 x\u00e2u con c\u1ee7a \\(Y\\) v\u00e0 \\(X\\) xu\u1ea5t hi\u1ec7n \u1edf \u0111\u1ea7u c\u1ee7a x\u00e2u \\(Y\\). V\u00ed d\u1ee5: <code>ab</code> l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a <code>abcd</code>, nh\u01b0ng <code>bc</code> kh\u00f4ng ph\u1ea3i l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a <code>abcd</code>.   M\u1ed9t x\u00e2u \\(X\\) l\u00e0 m\u1ed9t ti\u1ec1n t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng (proper prefix) c\u1ee7a x\u00e2u \\(Y\\) n\u1ebfu n\u00f3 l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a x\u00e2u \\(Y\\) v\u00e0 kh\u00e1c x\u00e2u \\(Y\\).</li> <li>M\u1ed9t x\u00e2u \\(X\\) l\u00e0 h\u1eadu t\u1ed1 (h\u1eadu t\u1ed1) c\u1ee7a m\u1ed9t x\u00e2u \\(Y\\) n\u1ebfu \\(X\\) l\u00e0 x\u00e2u con c\u1ee7a \\(Y\\) v\u00e0 \\(X\\) xu\u1ea5t hi\u1ec7n \u1edf cu\u1ed1i c\u1ee7a x\u00e2u \\(Y\\). V\u00ed d\u1ee5: <code>cd</code> l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a <code>abcd</code>, nh\u01b0ng <code>bc</code> kh\u00f4ng ph\u1ea3i l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a <code>abcd</code>.   M\u1ed9t x\u00e2u \\(X\\) l\u00e0 m\u1ed9t h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng (proper suffix) c\u1ee7a x\u00e2u \\(Y\\) n\u1ebfu n\u00f3 l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a x\u00e2u \\(Y\\) v\u00e0 kh\u00e1c x\u00e2u \\(Y\\).</li> </ul>"},{"location":"algo/string/basic/#cac-dang-bai","title":"C\u00e1c d\u1ea1ng b\u00e0i","text":""},{"location":"algo/string/basic/#so-khop-chuoi-string-matching","title":"So kh\u1edbp chu\u1ed7i (string matching)","text":"<p>Cho m\u1ed9t x\u00e2u \\(T\\) v\u00e0 x\u00e2u \\(S\\). T\u00ecm t\u1ea5t c\u1ea3 c\u00e1c l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a x\u00e2u \\(S\\) trong x\u00e2u \\(T\\).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>S = abc\nT = abcabcabc\n\nC\u00e1c l\u1ea7n xu\u1ea5t hi\u1ec7n: 1, 4, 7.\n</code></pre> <p>B\u00e0i to\u00e1n n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 t\u00ecm ki\u1ebfm c\u00e2y kim (needle) trong \u0111\u1ed1ng r\u01a1m (haystack), v\u00ec n\u00f3 xu\u1ea5t hi\u1ec7n trong th\u1ef1c t\u1ebf khi ta c\u1ea7n t\u00ecm m\u1ed9t x\u00e2u r\u1ea5t nh\u1ecf trong m\u1ed9t l\u01b0\u1ee3ng d\u1eef li\u1ec7u r\u1ea5t l\u1edbn (v\u00ed d\u1ee5 Google c\u1ea7n t\u00ecm t\u1eeb kh\u00f3a trong h\u00e0ng t\u1ec9 t\u1ec9 trang web).</p> <p>C\u00f3 3 thu\u1eadt to\u00e1n ch\u00ednh \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i n\u00e0y, \u0111\u00f3 l\u00e0:</p> <ul> <li>Thu\u1eadt to\u00e1n KMP</li> <li>Hash</li> <li>Z Algorithm</li> </ul>"},{"location":"algo/string/basic/#xau-oi-xung-palindrome","title":"X\u00e2u \u0111\u1ed1i x\u1ee9ng (Palindrome)","text":"<p>Palindrome hay c\u00f2n g\u1ecdi l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng, x\u00e2u \u0111\u1ed1i g\u01b0\u01a1ng l\u00e0 t\u00ean g\u1ecdi c\u1ee7a nh\u1eefng x\u00e2u k\u00ed t\u1ef1 m\u00e0 khi vi\u1ebft t\u1eeb ph\u1ea3i qua tr\u00e1i hay t\u1eeb tr\u00e1i qua ph\u1ea3i th\u00ec x\u00e2u \u0111\u00f3 kh\u00f4ng thay \u0111\u1ed5i. VD: MADAM, IOI,...</p> <p>C\u00f3 r\u1ea5t nhi\u1ec1u b\u00e0i t\u1eadp li\u00ean quan \u0111\u1ebfn x\u00e2u \u0111\u1ed1i x\u1ee9ng. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ecdc \u1edf trong c\u00e1c b\u00e0i vi\u1ebft:</p> <ul> <li>M\u1ed9t v\u00e0i b\u00e0i t\u1eadp QHD v\u1ec1 Palindrome</li> <li>Hash</li> <li>Palindrome Tree</li> </ul>"},{"location":"algo/string/basic/#cau-truc-du-lieu","title":"C\u1ea5u tr\u00fac d\u1eef li\u1ec7u","text":"<ul> <li>Trie l\u00e0 CTDL c\u01a1 b\u1ea3n nh\u1ea5t trong x\u1eed l\u00fd x\u00e2u. N\u00f3 gi\u00fap gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i to\u00e1n v\u1ec1 t\u00ecm ki\u1ebfm x\u00e2u.</li> <li> <p>L\u1edbp CTDL \u0111\u01b0\u1ee3c g\u1ecdi chung l\u00e0 Suffix Structures g\u1ed3m:</p> <ul> <li>Suffix Array</li> <li>Suffix Automaton</li> <li>Suffix Tree</li> <li>Aho Corasick</li> </ul> <p>G\u1ecdi chung nh\u01b0 v\u1eady v\u00ec c\u00e1c CTDL n\u00e0y c\u00f3 th\u1ec3 d\u00f9ng thay th\u1ebf nhau \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00f9ng m\u1ed9t l\u1edbp b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn c\u00e1c suffix c\u1ee7a c\u00e2y.</p> </li> </ul>"},{"location":"algo/string/basic/#cac-bai-ad-hoc","title":"C\u00e1c b\u00e0i Ad-hoc","text":"<p>Trong x\u1eed l\u00fd x\u00e2u c\u00f2n m\u1ed9t v\u00e0i thu\u1eadt to\u00e1n ch\u1ec9 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c cho 1 b\u00e0i to\u00e1n (ad-hoc).</p>"},{"location":"algo/string/basic/#thuat-toan-manacher","title":"Thu\u1eadt to\u00e1n Manacher","text":"<p>B\u00e0i to\u00e1n</p> <p>Cho x\u00e2u \\(S\\).</p> <ul> <li>V\u1edbi m\u1ed7i v\u1ecb tr\u00ed \\(i\\) c\u1ee7a x\u00e2u \\(S\\), t\u00ecm x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t nh\u1eadn \\(i\\) l\u00e0 t\u00e2m.</li> <li>V\u1edbi m\u1ed7i c\u1eb7p \\(i\\), \\(i+1\\) c\u1ee7a x\u00e2u \\(S\\), t\u00ecm x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t nh\u1eadn \\(i\\) v\u00e0 \\(i+1\\) l\u00e0 t\u00e2m.</li> </ul> <p>M\u00f4 t\u1ea3 thu\u1eadt to\u00e1n</p> <p>Tham kh\u1ea3o th\u00eam \u1edf link</p> <p>Code</p> <pre><code>const char DUMMY = '.';\n\nint manacher(string s) {\n  // \u0110\u1ec3 tr\u00e1nh ph\u1ea3i x\u00e9t ri\u00eang tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed9 d\u00e0i x\u00e2u \u0111\u1ed1i x\u1ee9ng ch\u1eb5n / l\u1ebb,\n  // ta th\u00eam 1 k\u00fd t\u1ef1 DUMMY v\u00e0o gi\u1eefa c\u00e1c k\u00fd t\u1ef1 c\u1ee7a s.\n  // CH\u00da \u00dd: Ph\u1ea3i \u0111\u1ea3m b\u1ea3o DUMMY kh\u00f4ng c\u00f3 trong x\u00e2u s\n\n    int n = s.size() * 2 - 1;\n    vector &lt;int&gt; f = vector &lt;int&gt;(n, 0);\n\n  // T\u1ea1o x\u00e2u a b\u1eb1ng c\u00e1ch ch\u00e8n k\u00fd t\u1ef1 DUMMY v\u00e0o gi\u1eefa c\u00e1c k\u00fd t\u1ef1 c\u1ee7a s.\n  // V\u00ed d\u1ee5:\n  // s = aabcb\n  // a = a.a.b.c.b\n    string a = string(n, DUMMY);\n    for (int i = 0; i &lt; n; i += 2) a[i] = s[i / 2];\n\n    int l = 0, r = -1, center, res = 0;\n    for (int i = 0, j = 0; i &lt; n; i++) {\n        j = (i &gt; r ? 0 : min(f[l + r - i], r - i)) + 1;\n        while (i - j &gt;= 0 &amp;&amp; i + j &lt; n &amp;&amp; a[i - j] == a[i + j]) j++;\n        f[i] = --j;\n        if (i + j &gt; r) {\n            r = i + j;\n            l = i - j;\n        }\n\n        int len = (f[i] + i % 2) / 2 * 2 + 1 - i % 2;\n        if (len &gt; res) {\n            res = len;\n            center = i;\n        }\n    }\n  // V\u1edbi m\u1ed7i v\u1ecb tr\u00ed i, x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t nh\u1eadn i l\u00e0 t\u00e2m l\u00e0 [i - f[i], i + f[i]].\n  // V\u00ed d\u1ee5:\n  // s = aabcb\n  // a = a.a.b.c.b\n  // f = 011010200\n    return res;\n}\n</code></pre>"},{"location":"algo/string/basic/#minimal-string-rotation","title":"Minimal string rotation","text":"<p>B\u00e0i to\u00e1n</p> <p>Cho m\u1ed9t x\u00e2u \\(S\\). X\u00e9t c\u00e1c x\u00e2u thu \u0111\u01b0\u1ee3c t\u1eeb x\u00e2u \\(S\\) b\u1eb1ng ph\u00e9p xoay. V\u00ed d\u1ee5: <code>S = abcd</code>, th\u00ec c\u00e1c x\u00e2u thu \u0111\u01b0\u1ee3c t\u1eeb \\(S\\) b\u1eb1ng ph\u00e9p xoay l\u00e0:</p> <ul> <li><code>abcd</code></li> <li><code>bcda</code></li> <li><code>cdab</code></li> <li><code>dabc</code></li> </ul> <p>T\u00ecm x\u00e2u c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t.</p> <p>M\u00f4 t\u1ea3 thu\u1eadt to\u00e1n</p> <p>B\u1ea1n c\u00f3 th\u1ec3 xem \u1edf \u0111\u00e2y</p> <p>Code</p> <pre><code>// T\u00ednh v\u1ecb tr\u00ed c\u1ee7a x\u00e2u xoay v\u00f2ng c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf nh\u1ea5t c\u1ee7a x\u00e2u s[]\nint minmove(string s) {\n    int n = s.length();\n    int x, y, i, j, u, v; // x is the smallest string before string y\n    for (x = 0, y = 1; y &lt; n; ++ y) {\n        i = u = x;\n        j = v = y;\n        while (s[i] == s[j]) {\n            ++ u; ++ v;\n            if (++ i == n) i = 0;\n            if (++ j == n) j = 0;\n            if (i == x) break; // All strings are equal\n        }\n        if (s[i] &lt;= s[j]) y = v;\n        else {\n            x = y;\n            if (u &gt; y) y = u;\n        }\n    }\n    return x;\n}\n</code></pre>"},{"location":"algo/string/basic/#lyndon-decomposition","title":"Lyndon Decomposition","text":"<p>B\u00e0i to\u00e1n</p> <p>Lyndon word l\u00e0 c\u00e1c x\u00e2u kh\u00e1c r\u1ed7ng, m\u00e0 c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf h\u01a1n t\u1ea5t c\u1ea3 c\u00e1c x\u00e2u thu \u0111\u01b0\u1ee3c b\u1eb1ng ph\u00e9p xoay c\u1ee7a n\u00f3.</p> <p>Cho m\u1ed9t x\u00e2u \\(S\\). T\u00ecm c\u00e1ch t\u00e1ch \\(S\\) th\u00e0nh \u00edt nh\u1ea5t c\u00e1c x\u00e2u, sao cho m\u1ed7i x\u00e2u \u0111\u1ec1u l\u00e0 Lyndon word.</p> <p>Code</p> <pre><code>void lyndon(string s) {\n    int n = (int) s.length();\n    int i = 0;\n    while (i &lt; n) {\n        int j = i + 1, k = i;\n        while (j &lt; n &amp;&amp; s[k] &lt;= s[j]) {\n            if (s[k] &lt; s[j]) k = i;\n            else ++k;\n            ++j;\n        }\n        while (i &lt;= k) {\n            cout &lt;&lt; s.substr(i, j - k) &lt;&lt; ' ';\n            i += j - k;\n        }\n    }\n    cout &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algo/string/hash/","title":"Hash: A String Matching Algorithm","text":"<p>T\u00e1c gi\u1ea3: L\u00ea Kh\u1eafc Minh Tu\u1ec7</p> <p>Ch\u1ec9nh s\u1eeda: Nguy\u1ec5n RR Th\u00e0nh Trung, Ph\u1ea1m V\u0103n H\u1ea1nh</p>"},{"location":"algo/string/hash/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":""},{"location":"algo/string/hash/#hoan-canh","title":"Ho\u00e0n c\u1ea3nh","text":"<p>M\u1ed9t l\u1edbp nh\u1eefng b\u00e0i to\u00e1n r\u1ea5t \u0111\u01b0\u1ee3c quan t\u00e2m trong khoa h\u1ecdc m\u00e1y t\u00ednh n\u00f3i chung v\u00e0 l\u1eadp tr\u00ecnh thi c\u1eed n\u00f3i ri\u00eang, \u0111\u00f3 l\u00e0 x\u1eed l\u00fd x\u00e2u chu\u1ed7i. Trong l\u1edbp b\u00e0i to\u00e1n n\u00e0y, ng\u01b0\u1eddi ta th\u01b0\u1eddng r\u1ea5t hay ph\u1ea3i \u0111\u1ed1i m\u1eb7t v\u1edbi m\u1ed9t b\u00e0i to\u00e1n: t\u00ecm ki\u1ebfm x\u00e2u chu\u1ed7i.</p>"},{"location":"algo/string/hash/#phat-bieu-bai-toan","title":"Ph\u00e1t bi\u1ec3u b\u00e0i to\u00e1n","text":"<ul> <li>Cho m\u1ed9t \u0111o\u1ea1n v\u0103n b\u1ea3n, g\u1ed3m \\(m\\) k\u00fd t\u1ef1.</li> <li>Cho m\u1ed9t \u0111o\u1ea1n m\u1eabu, g\u1ed3m \\(n\\) k\u00fd t\u1ef1.</li> <li>M\u00e1y t\u00ednh c\u1ea7n tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi: \u0111o\u1ea1n m\u1eabu xu\u1ea5t hi\u1ec7n bao nhi\u00eau l\u1ea7n trong \u0111o\u1ea1n v\u0103n b\u1ea3n v\u00e0 ch\u1ec9 ra c\u00e1c v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n \u0111\u00f3.</li> </ul>"},{"location":"algo/string/hash/#thuat-toan","title":"Thu\u1eadt to\u00e1n:","text":"<p>C\u00f3 r\u1ea5t nhi\u1ec1u thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y. Ng\u01b0\u1eddi vi\u1ebft xin t\u00f3m t\u1eaft 2 thu\u1eadt to\u00e1n ph\u1ed5 bi\u1ebfn \u0111\u01b0\u1ee3c d\u00f9ng trong c\u00e1c k\u00ec thi l\u1eadp tr\u00ecnh:</p> <ul> <li>Brute-force: V\u1edbi m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn tr\u1ef1c ti\u1ebfp, ch\u00fang ta c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n \u0111\u1ec3 gi\u1ea3i. Tuy nhi\u00ean \u0111\u1ed9 ph\u1ef1c t\u1ea1p c\u1ee7a n\u00f3 l\u00e0 r\u1ea5t l\u1edbn trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t. Thu\u1eadt to\u00e1n brute-force so kh\u1edbp t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n c\u1ee7a \u0111o\u1ea1n m\u1eabu trong \u0111o\u1ea1n v\u0103n b\u1ea3n. C\u1ee5 th\u1ec3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(mn)\\).</li> <li>Knuth-Morris-Pratt: Hay c\u00f2n \u0111\u01b0\u1ee3c vi\u1ebft t\u1eaft l\u00e0 KMP, \u0111\u01b0\u1ee3c ph\u00e1t minh v\u00e0o n\u0103m 1974, b\u1edfi Donald Knuth, Vaughan Pratt v\u00e0 James H. Morris.  Thu\u1eadt to\u00e1n n\u00e0y s\u1eed d\u1ee5ng m\u1ed9t correction-array, l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n r\u1ea5t hi\u1ec7u qu\u1ea3, c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(m + n)\\).</li> </ul>"},{"location":"algo/string/hash/#muc-ich-bai-viet","title":"M\u1ee5c \u0111\u00edch b\u00e0i vi\u1ebft","text":"<p>Trong b\u00e0i vi\u1ebft n\u00e0y, ng\u01b0\u1eddi vi\u1ebft ch\u1ec9 t\u1eadp trung v\u00e0o thu\u1eadt to\u00e1n Hash (T\u00ean chu\u1ea9n c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 Rabin\u2013Karp ho\u1eb7c Rolling Hash, tuy nhi\u00ean \u1edf Vi\u1ec7t Nam th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Hash). Theo nh\u01b0 b\u1ea3n th\u00e2n ng\u01b0\u1eddi vi\u1ebft \u0111\u00e1nh gi\u00e1, \u0111\u00e2y l\u00e0 thu\u1eadt to\u00e1n r\u1ea5t hi\u1ec7u qu\u1ea3 \u0111\u1eb7c bi\u1ec7t l\u00e0 trong thi c\u1eed. N\u00f3 hi\u1ec7u qu\u1ea3 b\u1edfi 3 y\u1ebfu t\u1ed1: t\u1ed1c \u0111\u1ed9 th\u1ef1c thi, linh \u0111\u1ed9ng trong vi\u1ec7c s\u1eed d\u1ee5ng (\u1ee9ng d\u1ee5ng hi\u1ec7u qu\u1ea3) v\u00e0 s\u1ef1 \u0111\u01a1n gi\u1ea3n trong c\u00e0i \u0111\u1eb7t.</p> <p>\u0110\u1ea7u ti\u00ean, ng\u01b0\u1eddi vi\u1ebft xin \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y v\u1ec1 thu\u1eadt to\u00e1n n\u00e0y. Sau \u0111\u00f3, ng\u01b0\u1eddi vi\u1ebft s\u1ebd tr\u00ecnh b\u00e0y m\u1ed9t v\u00e0i \u1ee9ng d\u1ee5ng, c\u00e1ch s\u1eed d\u1ee5ng v\u00e0 ph\u00e1t tri\u1ec3n thu\u1eadt to\u00e1n Hash trong c\u00e1c b\u00e0i to\u00e1n tin h\u1ecdc.</p>"},{"location":"algo/string/hash/#thuat-toan-hash","title":"Thu\u1eadt to\u00e1n Hash","text":""},{"location":"algo/string/hash/#ky-hieu","title":"K\u00fd hi\u1ec7u","text":"<ul> <li>T\u1eadp h\u1ee3p c\u00e1c ch\u1eef c\u00e1i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng: \\(\\Sigma\\)</li> <li>\u0110o\u1ea1n con t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) c\u1ee7a m\u1ed9t x\u00e2u \\(s\\): \\(s[i..j]\\)</li> <li>\u0110o\u1ea1n v\u0103n b\u1ea3n: \\(T[1..m]\\)</li> <li>\u0110o\u1ea1n m\u1eabu: \\(P[1..n]\\)</li> </ul> <p>Ch\u00fang ta c\u1ea7n t\u00ecm ra t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed \\(i (1 \\le i \\le m \u2212 n + 1)\\) th\u1ecfa  m\u00e3n: \\(T[i..i+n\u22121] = P\\).</p>"},{"location":"algo/string/hash/#mo-ta-thuat-toan","title":"M\u00f4 t\u1ea3 thu\u1eadt to\u00e1n","text":"<p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, gi\u1ea3 s\u1eed r\u1eb1ng \\(\\Sigma = {a, b, ..., z}\\) (n\u00f3i c\u00e1ch kh\u00e1c, \\(\\Sigma\\) ch\u1ec9 g\u1ed3m c\u00e1c ch\u1eef c\u00e1i in th\u01b0\u1eddng). \u0110\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed9t x\u00e2u, thay v\u00ec d\u00f9ng ch\u1eef c\u00e1i, ch\u00fang ta s\u1ebd chuy\u1ec3n sang bi\u1ec3u di\u1ec5n d\u1ea1ng s\u1ed1. V\u00ed d\u1ee5: x\u00e2u <code>aczd</code> \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi d\u1ea1ng s\u1ed1 l\u00e0 m\u1ed9t d\u00e3y g\u1ed3m 4 s\u1ed1: <code>(1,3,26,4)</code>. Nh\u01b0 v\u1eady, m\u1ed9t x\u00e2u \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng m\u1ed9t s\u1ed1 \u1edf h\u1ec7 c\u01a1 s\u1ed1 \\(base\\) v\u1edbi \\(base &gt; 26\\). T\u1eeb \u0111\u00e2y suy ra, 2 x\u00e2u b\u1eb1ng nhau khi v\u00e0 ch\u1ec9 khi bi\u1ec3u di\u1ec5n c\u1ee7a 2 x\u00e2u \u1edf h\u1ec7 c\u01a1 s\u1ed1 10 gi\u1ed1ng nhau.</p> <p>L\u01b0u \u00fd:</p> <ol> <li>\u1ede \u0111\u00e2y m\u00ecnh \u0111\u1ed5i ch\u1eef <code>a</code> th\u00e0nh s\u1ed1 1 ch\u1ee9 kh\u00f4ng ph\u1ea3i s\u1ed1 0. \u0110\u00e2y l\u00e0 chi ti\u1ebft v\u00f4 c\u00f9ng quan tr\u1ecdng, \u0111\u1ec3 tr\u00e1nh 2 x\u00e2u: <code>abc</code> v\u00e0 <code>bc</code> b\u1eb1ng nhau khi \u0111\u1ed5i ra s\u1ed1. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam chi ti\u1ebft \u1edf ph\u1ea7n Chi ti\u1ebft c\u00e0i \u0111\u1eb7t.</li> <li>Th\u00f4ng th\u01b0\u1eddng ta ch\u1ecdn \\(base\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1. M\u00ecnh s\u1ebd gi\u1ea3i th\u00edch th\u00eam trong ph\u1ea7n Chi ti\u1ebft c\u00e0i \u0111\u1eb7t.</li> </ol> <p>\u0110\u00e2y ch\u00ednh l\u00e0 t\u01b0 t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n: \u0111\u1ed5i 2 x\u00e2u t\u1eeb h\u1ec7 c\u01a1 s\u1ed1 \\(base\\) ra h\u1ec7 c\u01a1 s\u1ed1 10, r\u1ed3i \u0111em so s\u00e1nh \u1edf h\u1ec7 c\u01a1 s\u1ed1 10. Tuy nhi\u00ean, ch\u00fang ta nh\u1eadn th\u1ea5y r\u1eb1ng, khi \u0111\u1ed5i 1 x\u00e2u ra bi\u1ec3u di\u1ec5n \u1edf h\u1ec7 c\u01a1 s\u1ed1 10, bi\u1ec3u di\u1ec5n n\u00e0y c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn v\u00e0 n\u1eb1m ngo\u00e0i ph\u1ea1m vi l\u01b0u tr\u1eef s\u1ed1 nguy\u00ean c\u1ee7a m\u00e1y t\u00ednh.</p> <p>\u0110\u1ec3 kh\u1eafc ph\u1ee5c \u0111i\u1ec1u n\u00e0y, ch\u00fang ta chuy\u1ec3n sang so s\u00e1nh 2 bi\u1ec3u di\u1ec5n c\u1ee7a 2 x\u00e2u \u1edf h\u1ec7 c\u01a1 s\u1ed1 10 sau khi l\u1ea5y ph\u1ea7n d\u01b0 cho m\u1ed9t s\u1ed1 nguy\u00ean \u0111\u1ee7 l\u1edbn. C\u1ee5 th\u1ec3 h\u01a1n: n\u1ebfu bi\u1ec3u di\u1ec5n trong h\u1ec7 th\u1eadp ph\u00e2n c\u1ee7a x\u00e2u \\(a\\) l\u00e0 \\(x\\) v\u00e0 bi\u1ec3u di\u1ec5n trong h\u1ec7 th\u1eadp ph\u00e2n c\u1ee7a x\u00e2u \\(b\\) l\u00e0 \\(y\\), ch\u00fang ta s\u1ebd coi \\(a\\) b\u1eb1ng \\(b\\) \u2018khi v\u00e0 ch\u1ec9 khi\u2019 \\(x \\bmod MOD = y \\bmod MOD\\) trong \u0111\u00f3 \\(MOD\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean \u0111\u1ee7 l\u1edbn.</p> <p>L\u01b0u \u00fd: L\u00fd do ch\u1ecdn \\(MOD\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch th\u00eam trong ph\u1ea7n Chi ti\u1ebft c\u00e0i \u0111\u1eb7t.</p> <p>D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y vi\u1ec7c so s\u00e1nh \\(x \\bmod MOD\\) v\u1edbi \\(y \\bmod MOD\\) r\u1ed3i k\u1ebft lu\u1eadn \\(a\\) c\u00f3 b\u1eb1ng v\u1edbi \\(b\\) hay kh\u00f4ng l\u00e0 sai. \\(x \\bmod MOD = y \\bmod MOD\\) ch\u1ec9 l\u00e0 \u0111i\u1ec1u ki\u1ec7n c\u1ea7n \u0111\u1ec3 \\(a\\) b\u1eb1ng \\(b\\) ch\u1ee9 ch\u01b0a ph\u1ea3i \u0111i\u1ec1u  ki\u1ec7n \u0111\u1ee7. Tuy nhi\u00ean, ch\u00fang ta s\u1ebd ch\u1ea5p nh\u1eadn l\u1eadp lu\u1eadn sai n\u00e0y trong thu\u1eadt to\u00e1n Hash. V\u00e0 coi \u0111i\u1ec1u ki\u1ec7n c\u1ea7n nh\u01b0 \u0111i\u1ec1u ki\u1ec7n \u0111\u1ee7. Tr\u00ean th\u1ef1c t\u1ebf, l\u1eadp lu\u1eadn sai n\u00e0y c\u00f3 th\u1ec3 d\u1eabn \u0111\u1ebfn k\u1ebft qu\u1ea3 sai n\u1ebfu b\u1ea1n kh\u00f4ng hi\u1ec3u r\u00f5 m\u00ecnh \u0111ang l\u00e0m g\u00ec. \u0110\u1ec3 hi\u1ec3u r\u00f5 v\u1ec1 t\u1ec9 l\u1ec7 sai c\u1ee7a thu\u1eadt to\u00e1n Hash, c\u00e1c b\u1ea1n \u0111\u1ecdc th\u00eam ph\u1ea7n \u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ch\u00ednh x\u00e1c. Ph\u1ea7n Chi ti\u1ebft c\u00e0i \u0111\u1eb7t c\u0169ng n\u00f3i th\u00eam v\u1ec1 c\u00e1ch tr\u00e1nh b\u1ecb sai s\u1ed1 khi c\u00e0i \u0111\u1eb7t Hash.</p> <p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n trong vi\u1ec7c tr\u00ecnh b\u00e0y ti\u1ebfp thu\u1eadt to\u00e1n, ch\u00fang ta s\u1ebd g\u1ecdi bi\u1ec3u di\u1ec5n c\u1ee7a m\u1ed9t x\u00e2u trong h\u1ec7 th\u1eadp ph\u00e2n sau khi l\u1ea5y ph\u1ea7n d\u01b0 cho \\(MOD\\) l\u00e0 m\u00e3 Hash c\u1ee7a x\u00e2u \u0111\u00f3. Nh\u1eafc l\u1ea1i, 2 x\u00e2u b\u1eb1ng nhau \u2018khi v\u00e0 ch\u1ec9 khi\u2019 m\u00e3 Hash c\u1ee7a 2 x\u00e2u b\u1eb1ng nhau.</p> <p>Tr\u1edf l\u1ea1i b\u00e0i to\u00e1n ban \u0111\u1ea7u, ch\u00fang ta c\u1ea7n ch\u1ec9 ra \\(P\\) xu\u1ea5t hi\u1ec7n \u1edf nh\u1eefng v\u1ecb tr\u00ed n\u00e0o trong \\(T\\). \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c vi\u1ec7c n\u00e0y, ch\u00fang ta ch\u1ec9 c\u1ea7n duy\u1ec7t qua m\u1ecdi v\u1ecb tr\u00ed xu\u1ea5t ph\u00e1t c\u00f3 th\u1ec3 c\u1ee7a \\(P\\) trong \\(T\\). Gi\u1ea3 s\u1eed v\u1ecb tr\u00ed \u0111\u00f3 l\u00e0 \\(i\\), ch\u00fang ta s\u1ebd ki\u1ec3m tra \\(T[i..i+n\u22121]\\) c\u00f3 b\u1eb1ng v\u1edbi \\(P\\) hay kh\u00f4ng. \u0110\u1ec3 ki\u1ec3m tra \u0111i\u1ec1u n\u00e0y, ch\u00fang ta c\u1ea7n t\u00ednh \u0111\u01b0\u1ee3c m\u00e3 Hash c\u1ee7a \u0111o\u1ea1n \\(T[i..i+n\u22121]\\) v\u00e0 m\u00e3 Hash c\u1ee7a x\u00e2u \\(P\\).</p> <p>\u0110\u1ec3 t\u00ednh m\u00e3 Hash c\u1ee7a x\u00e2u \\(P\\) ch\u00fang ta ch\u1ec9 c\u1ea7n l\u00e0m \u0111\u01a1n gi\u1ea3n nh\u01b0 sau:</p> <pre><code>const base = 31;\nhashP = 0\nfor (i : 1 .. n)\n      hashP = (hashP * base + P[i] - 'a' + 1) mod MOD\n</code></pre> <p>Ph\u1ea7n kh\u00f3 h\u01a1n c\u1ee7a thu\u1eadt to\u00e1n Hash l\u00e0: T\u00ednh m\u00e3 Hash c\u1ee7a m\u1ed9t \u0111o\u1ea1n con \\(T[i..j]\\) c\u1ee7a x\u00e2u \\(T\\) \\((1 \\le i \\le j \\le N)\\).</p> <ul> <li>\u0110\u1ec3 h\u00ecnh dung cho \u0111\u01a1n gi\u1ea3n, x\u00e9t v\u00ed d\u1ee5 sau: X\u00e9t x\u00e2u \\(s\\) v\u00e0 bi\u1ec3u di\u1ec5n c\u1ee7a n\u00f3 d\u01b0\u1edbi c\u01a1 s\u1ed1 \\(base\\): \\((4,1,2,5,1,7,8)\\). Ch\u00fang ta c\u1ea7n l\u1ea5y m\u00e3 Hash c\u1ee7a \u0111o\u1ea1n con t\u1eeb ph\u1ea7n t\u1eed th\u1ee9 3 \u0111\u1ebfn ph\u1ea7n t\u1eed th\u1ee9 6, ngh\u0129a l\u00e0 c\u1ea7n l\u1ea5y m\u00e3 Hash c\u1ee7a x\u00e2u \\((2,5,1,7)\\). Nh\u1eadn th\u1ea5y, \u0111\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c x\u00e2u \\(s[3..6]\\), ch\u1ec9 c\u1ea7n l\u1ea5y s\u1ed1 \\(s[1..6]\\) l\u00e0 \\((4,1,2,5,1,7)\\) tr\u1eeb cho s\u1ed1 (\\(s[1..2]\\) nh\u00e2n v\u1edbi \\(base^4\\)) l\u00e0 \\((4,1,0,0,0,0)\\) ta s\u1ebd thu \u0111\u01b0\u1ee3c \\((2,5,1,7)\\).</li> <li>\u0110\u1ec3 c\u00e0i \u0111\u1eb7t \u00fd t\u01b0\u1edfng n\u00e0y, ch\u00fang ta c\u1ea7n kh\u1edfi t\u1ea1o \\(base^x \\bmod MOD\\) v\u1edbi \\((0 \\le x \\le m)\\) v\u00e0 m\u00e3 Hash c\u1ee7a t\u1ea5t c\u1ea3 nh\u1eefng ti\u1ec1n t\u1ed1 c\u1ee7a \\(s\\), c\u1ee5 th\u1ec3 l\u00e0 m\u00e3 Hash c\u1ee7a nh\u1eefng x\u00e2u \\(s[1..i]\\) v\u1edbi \\((1 \\le i \\le m)\\).</li> </ul> <pre><code>pow[0] = 1\nfor (i : 1 .. m)\n       pow[i] = (pow[i-1] * base) mod MOD\n\n\nhashT[0] = 0\nfor (i : 1 .. m)\n       hashT[i] = (hashT[i-1] * base + T[i] - 'a') mod MOD\n</code></pre> <p>Trong \u0111o\u1ea1n code tr\u00ean, ch\u00fang ta thu \u0111\u01b0\u1ee3c m\u1ea3ng \\(pow[i]\\) (l\u01b0u l\u1ea1i \\(base^i \\bmod MOD\\)) v\u00e0 m\u1ea3ng \\(hashT[i]\\) (l\u01b0u l\u1ea1i m\u00e3 Hash c\u1ee7a \\(T[1..i]\\)).</p> <ul> <li>\u0110\u1ec3 l\u1ea5y m\u00e3 Hash c\u1ee7a \\(T[i..j]\\) ta vi\u1ebft h\u00e0m sau:</li> </ul> <pre><code>function getHashT(i, j):\n       // Ch\u00fa \u00fd r\u1eb1ng `- hashT[i - 1] * pow[j - i + 1]` c\u00f3 th\u1ec3 \u00e2m.\n       // V\u1edbi 1 s\u1ed1 ng\u00f4n ng\u1eef nh\u01b0 C++, to\u00e1n t\u1eed mod s\u1ebd tr\u1ea3 k\u1ebft qu\u1ea3 sai v\u1edbi s\u1ed1 \u00e2m.\n       // Do \u0111\u00f3 ta c\u1ea7n th\u00eam \"+ MOD * MOD\" \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o k\u1ebft qu\u1ea3 lu\u00f4n ch\u00ednh x\u00e1c.\n       return (hashT[j] - hashT[i - 1] * pow[j - i + 1] + MOD * MOD) mod MOD\n</code></pre> <p>B\u00e0i to\u00e1n ch\u00ednh \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft, v\u00e0 \u0111\u00e2y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh ch\u00ednh:</p> <pre><code>for (i : 1 .. m - n +1)\n      if hashP = getHashT(i, i + n - 1):\n              print(\"Match position: \", i)\n</code></pre>"},{"location":"algo/string/hash/#ma-chuong-trinh","title":"M\u00e3 ch\u01b0\u01a1ng tr\u00ecnh","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh sau, t\u00f4i vi\u1ebft b\u1eb1ng ng\u00f4n ng\u1eef C++, l\u00e0 l\u1eddi gi\u1ea3i cho b\u00e0i SUBSTR:</p> <pre><code>typedef long long ll;\n\nconst int base = 31;\nconst ll MOD = 1000000003;\nconst ll maxn = 1000111;\n\nusing namespace std;\n\nll POW[maxn], hashT[maxn];\n\n\nll getHashT(int i,int j) {\n    return (hashT[j] - hashT[i - 1] * POW[j - i + 1] + MOD * MOD) % MOD;\n}\n\n\nint main() {\n    // Input\n    string T, P;\n    cin &gt;&gt; T &gt;&gt; P;\n\n    // Initialize\n    int lenT = T.size(), lenP = P.size();\n    T = \" \" + T;\n    P = \" \" + P;\n    POW[0] = 1;\n\n    // Precalculate base^i\n    for (int i = 1; i &lt;= lenT; i++)\n        POW[i] = (POW[i - 1] * base) % MOD;\n\n    // Calculate hash value of T[1..i]\n    for (int i = 1; i &lt;= lenT; i++)\n        hashT[i] = (hashT[i - 1] * base + T[i] - 'a' + 1) % MOD;\n\n    // Calculate hash value of P\n    ll hashP=0;\n    for (int i = 1; i &lt;= lenP; i++)\n        hashP = (hashP * base + P[i] - 'a' + 1) % MOD;\n\n    // Finding substrings of T equal to string P\n    for (int i = 1; i &lt;= lenT - lenP + 1; i++)\n        if (hashP == getHashT(i, i + lenP - 1))\n            printf(\"%d \", i);\n}\n</code></pre>"},{"location":"algo/string/hash/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(m + n)\\). Nh\u01b0ng \u0111i\u1ec1u quan tr\u1ecdng l\u00e0: ch\u00fang ta c\u00f3 th\u1ec3 ki\u1ec3m tra 2 x\u00e2u c\u00f3 gi\u1ed1ng nhau hay kh\u00f4ng trong \\(O(1)\\). \u0110\u00e2y l\u00e0 \u0111i\u1ec1u t\u1ea1o n\u00ean s\u1ef1 linh \u0111\u1ed9ng cho thu\u1eadt to\u00e1n Hash. Ngo\u00e0i s\u1ef1 linh \u0111\u1ed9ng v\u00e0 t\u1ed1c \u0111\u1ed9 th\u1ef1c thi, ch\u00fang ta c\u00f3 th\u1ec3 th\u1ea5y c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n n\u00e0y th\u1ef1c s\u1ef1 r\u1ea5t \u0111\u01a1n gi\u1ea3n n\u1ebfu so v\u1edbi c\u00e1c thu\u1eadt to\u00e1n x\u1eed l\u00fd x\u00e2u kh\u00e1c.</p>"},{"location":"algo/string/hash/#chi-tiet-cai-at","title":"Chi ti\u1ebft c\u00e0i \u0111\u1eb7t","text":"<p>Trong thu\u1eadt to\u00e1n hash, c\u00f3 hai y\u1ebfu t\u1ed1 c\u1ea7n quan t\u00e2m l\u00e0 h\u1ec7 c\u01a1 s\u1ed1 (base) v\u00e0 modulo (mod).</p>"},{"location":"algo/string/hash/#1-chon-so-nguyen-to-cho-he-co-so-va-modulo","title":"1. Ch\u1ecdn s\u1ed1 nguy\u00ean t\u1ed1 cho h\u1ec7 c\u01a1 s\u1ed1 v\u00e0 modulo","text":"<p>\u00dd t\u01b0\u1edfng c\u1ee7a thu\u1eadt to\u00e1n Hash l\u00e0 d\u1ef1a tr\u00ean m\u1ed9t ng\u1ed9 nh\u1eadn sai l\u1ea7m nh\u01b0ng x\u1ea3y ra sai s\u00f3t v\u1edbi x\u00e1c su\u1ea5t v\u00f4 c\u00f9ng nh\u1ecf: \\(a \\bmod M = b \\bmod M &lt;=&gt; a = b\\). \u0110\u1ec3 x\u00e1c su\u1ea5t x\u1ea3y ra sai l\u00e0 \\(1/M\\) cho m\u1ed9t truy v\u1ea5n, c\u00e1c b\u1ea1n c\u1ea7n ch\u1ecdn h\u1ec7 c\u01a1 s\u1ed1 v\u00e0 modulo th\u1ecfa m\u00e3n \u0111\u1ed3ng th\u1eddi:</p> <ul> <li>\\(base\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 l\u1edbn h\u01a1n c\u00e1c ch\u1eef c\u00e1i c\u1ee7a x\u00e2u <code>S</code>.</li> <li>\\(MOD\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</li> </ul> <p>Ph\u1ea7n ch\u1ee9ng minh sai s\u1ed1 b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam trong blog rng_58, tuy nhi\u00ean ph\u1ea7n ch\u1ee9ng minh r\u1ea5t ph\u1ee9c t\u1ea1p n\u00ean m\u00ecnh s\u1ebd kh\u00f4ng tr\u00ecnh b\u00e0y \u1edf \u0111\u00e2y.</p>"},{"location":"algo/string/hash/#2-chon-he-co-so","title":"2. Ch\u1ecdn h\u1ec7 c\u01a1 s\u1ed1","text":"<p>M\u00ecnh khuy\u1ebfn kh\u00edch c\u00e1c b\u1ea1n ch\u1ecdn h\u1ec7 c\u01a1 s\u1ed1 &gt; 256 (M\u00ecnh th\u01b0\u1eddng ch\u1ecdn l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 311). N\u1ebfu b\u1ea1n ch\u1ecdn h\u1ec7 c\u01a1 s\u1ed1 l\u00e0 31, b\u1ea1n ch\u1ec9 l\u00e0m vi\u1ec7c v\u1edbi x\u00e2u g\u1ed3m to\u00e0n c\u00e1c k\u00ed t\u1ef1 in th\u01b0\u1eddng, v\u00e0 ph\u1ea3i \"m\u00e3 h\u00f3a\" c\u00e1c k\u00ed t\u1ef1 t\u1eeb <code>a</code> \u0111\u1ebfn <code>z</code> th\u00e0nh c\u00e1c s\u1ed1 t\u1eeb 1 \u0111\u1ebfn 26. \u0110i\u1ec1u n\u00e0y khi\u1ebfn code c\u1ee7a b\u1ea1n b\u1ecb d\u00e0i. N\u1ebfu b\u00e0i to\u00e1n cho x\u00e2u c\u00f3 c\u00e1c k\u00ed t\u1ef1 'A'...'Z', 'a'..'z' v\u00e0 '0'...'9', vi\u1ec7c b\u1ea1n m\u00e3 h\u00f3a ch\u00fang th\u00e0nh c\u00e1c s\u1ed1 t\u1eeb 1 \u0111\u1ebfn 64 l\u00e0 ph\u1ee9c t\u1ea1p v\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft.</p> <p>Ch\u01b0a k\u1ec3, n\u1ebfu b\u1ea1n qu\u00ean m\u1ea5t kh\u00f4ng <code>+1</code> v\u00e0 m\u00e3 ho\u00e1 <code>a</code> th\u00e0nh <code>0</code> l\u00e0 h\u00e0nh \u0111\u1ed9ng t\u1ef1 treo c\u1ed5 v\u00ec r\u1ea5t d\u1ec5 b\u1ecb hack.</p> <p>N\u1ebfu b\u1ea1n ch\u1ecdn h\u1ec7 c\u01a1 s\u1ed1 &gt; 256, b\u1ea1n ch\u1ec9 c\u1ea7n d\u00f9ng m\u00e3 ASCII c\u1ee7a c\u00e1c k\u00ed t\u1ef1 l\u00e0 xong, v\u00e0 l\u1ea1i tr\u00e1nh b\u1ecb hack.</p>"},{"location":"algo/string/hash/#3-chon-modulo","title":"3. Ch\u1ecdn modulo","text":"<p>N\u1ebfu b\u1ea1n kh\u00f4ng hi\u1ec3u r\u00f5 v\u1ec1 c\u00e1ch \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a thu\u1eadt Hash (tr\u00ecnh b\u00e0y \u1edf m\u1ee5c \u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ch\u00ednh x\u00e1c), b\u1ea1n ch\u1ec9 c\u1ea7n ch\u1ecdn 3-4 s\u1ed1 nguy\u00ean t\u1ed1 kh\u00e1c nhau l\u00e0m \\(MOD\\). B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o code c\u1ee7a Ph\u1ea1m V\u0103n H\u1ea1nh. Tuy nhi\u00ean c\u00e1c b\u1ea1n c\u0169ng n\u00ean l\u01b0u \u00fd l\u00e0 d\u00f9ng nhi\u1ec1u \\(MOD\\) qu\u00e1 c\u0169ng l\u00e0m ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y ch\u1eadm \u0111i.</p>"},{"location":"algo/string/hash/#4-hash-tran-so-va-hash-co-mod","title":"4. Hash tr\u00e0n s\u1ed1 v\u00e0 Hash c\u00f3 MOD","text":"<p>Tr\u00ean th\u1ef1c t\u1ebf, khi c\u00e0i \u0111\u1eb7t Hash s\u1eed d\u1ee5ng nhi\u1ec1u ph\u00e9p <code>mod</code> s\u1ebd l\u00e0m ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y ch\u1eadm. V\u00ec v\u1eady, \u0111\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9, ng\u01b0\u1eddi ta th\u01b0\u1eddng c\u00e0i \u0111\u1eb7t v\u1edbi \\(MOD = 2^{64}\\). Do \u0111\u00f3, n\u1ebfu s\u1eed d\u1ee5ng ki\u1ec3u d\u1eef li\u1ec7u s\u1ed1 64-bit, ta kh\u00f4ng c\u1ea7n d\u00f9ng ph\u00e9p <code>mod</code> m\u00e0 c\u1ee9 \u0111\u1ec3 c\u00e1c ph\u00e9p t\u00ednh tr\u00e0n s\u1ed1. K\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Hash tr\u00e0n s\u1ed1. Tuy nhi\u00ean khi c\u00e0i \u0111\u1eb7t nh\u01b0 v\u1eady c\u00f3 m\u1ed9t v\u00e0i ch\u00fa \u00fd:</p> <ul> <li>Vi\u1ec7c s\u1eed d\u1ee5ng \\(MOD\\) kh\u00f4ng ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 (v\u00e0 h\u01a1n n\u1eefa l\u1ea1i l\u00e0 1 s\u1ed1 c\u1ed1 \u0111\u1ecbnh) khi\u1ebfn cho h\u00e0m Hash kh\u00f4ng \u0111\u1ee7 t\u1ed1t. N\u1ebfu test \u0111\u01b0\u1ee3c sinh ng\u1eabu nhi\u00ean, th\u00ec n\u00f3 kh\u00f4ng c\u00f3 v\u1ea5n \u0111\u1ec1 g\u00ec c\u1ea3. Nh\u01b0ng \u1edf tr\u00ean Codeforces, v\u00ec nh\u1eefng ng\u01b0\u1eddi thi c\u00f9ng c\u00f3 th\u1ec3 \"hack\" code c\u1ee7a b\u1ea1n b\u1eb1ng test t\u1ef1 sinh, n\u00ean b\u1ea1n h\u1ea7u nh\u01b0 kh\u00f4ng th\u1ec3 AC c\u00e1c b\u00e0i Hash v\u1edbi Hash tr\u00e0n s\u1ed1. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 c\u00e1ch sinh test gi\u1ebft Hash tr\u00e0n s\u1ed1 \u1edf \u0111\u00e2y. C\u00e1ch gi\u1ea3i quy\u1ebft l\u00e0 d\u00f9ng hash tr\u00e0n s\u1ed1 k\u1ebft h\u1ee3p v\u1edbi m\u1ed9t \\(MOD\\) kh\u00e1c.</li> <li>N\u1ebfu d\u00f9ng Pascal, c\u1ea7n t\u1eaft b\u00e1o tr\u00e0n s\u1ed1 (<code>$Q-</code>), n\u1ebfu kh\u00f4ng ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y b\u1ecb l\u1ed7i.</li> </ul>"},{"location":"algo/string/hash/#5-mot-so-loi-khuyen-nho-nho","title":"5. M\u1ed9t s\u1ed1 l\u1eddi khuy\u00ean nho nh\u1ecf","text":"<p>Ch\u1ec9 so s\u00e1nh m\u00e3 hash c\u1ee7a hai x\u00e2u c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i. Hi\u1ec3n nhi\u00ean, hai x\u00e2u k\u00ed t\u1ef1 kh\u00f4ng c\u00f9ng \u0111\u1ed9 d\u00e0i th\u00ec kh\u00f4ng b\u1eb1ng nhau. \u0110i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3m x\u00e1c su\u1ea5t r\u1ee7i ro khi hash m\u1ed9t modulo \u0111\u00e1ng k\u1ec3.</p>"},{"location":"algo/string/hash/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":"<p>Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, thu\u1eadt to\u00e1n n\u00e0y s\u1ebd c\u00f3 tr\u01b0\u1eddng h\u1ee3p ch\u1ea1y sai. T\u1ea5t nhi\u00ean, b\u00ean c\u1ea1nh vi\u1ec7c s\u1eed d\u1ee5ng Hash, c\u00f2n c\u00f3 nhi\u1ec1u thu\u1eadt to\u00e1n x\u1eed l\u00fd x\u00e2u chu\u1ed7i kh\u00e1c, mang l\u1ea1i s\u1ef1 ch\u00ednh x\u00e1c tuy\u1ec7t \u0111\u1ed1i. T\u00f4i t\u1ea1m g\u1ecdi nh\u1eefng thu\u1eadt to\u00e1n \u0111\u00f3 l\u00e0 \u2018thu\u1eadt to\u00e1n chu\u1ea9n\u2019. Vi\u1ec7c c\u00e0i \u0111\u1eb7t \u2018thu\u1eadt to\u00e1n chu\u1ea9n\u2019 c\u00f3 th\u1ec3 mang l\u1ea1i m\u1ed9t t\u1ed1c \u0111\u1ed9 ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh cao h\u01a1n, \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh l\u1edbn h\u01a1n. Tuy nhi\u00ean, ng\u01b0\u1eddi l\u00e0m b\u00e0i s\u1ebd ph\u1ea3i tr\u1ea3 gi\u00e1 l\u00e0 s\u1ef1 ph\u1ee9c t\u1ea1p khi c\u00e0i \u0111\u1eb7t c\u00e1c \u2018thu\u1eadt to\u00e1n chu\u1ea9n\u2019 \u0111\u00f3.</p> <p>S\u1eed d\u1ee5ng Hash kh\u00f4ng ch\u1ec9 gi\u00fap ng\u01b0\u1eddi l\u00e0m b\u00e0i d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t h\u01a1n m\u00e0 quan tr\u1ecdng \u1edf ch\u1ed7: Hash c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c nh\u1eefng vi\u1ec7c m\u00e0 \u2018thu\u1eadt to\u00e1n chu\u1ea9n\u2019 kh\u00f4ng l\u00e0m \u0111\u01b0\u1ee3c. Sau \u0111\u00e2y, t\u00f4i s\u1ebd x\u00e9t m\u1ed9t v\u00e0i v\u00ed d\u1ee5 \u0111\u1ec3 ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y.</p>"},{"location":"algo/string/hash/#longest-palindrome-substring","title":"Longest palindrome substring","text":"<p>B\u00e0i to\u00e1n \u0111\u1eb7t ra nh\u01b0 sau: B\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t x\u00e2u \\(s\\) \u0111\u1ed9 d\u00e0i \\(n (n \\le 50,000)\\). B\u1ea1n c\u1ea7n t\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t g\u1ed3m c\u00e1c k\u00ed t\u1ef1 li\u00ean ti\u1ebfp trong \\(s\\). (X\u00e2u \u0111\u1ed1i x\u1ee9ng l\u00e0 x\u00e2u \u0111\u1ecdc t\u1eeb 2 chi\u1ec1u gi\u1ed1ng nhau).</p> <ul> <li>M\u1ed9t \u2018thu\u1eadt to\u00e1n chu\u1ea9n\u2019 kh\u00f4ng th\u1ec3 \u00e1p d\u1ee5ng v\u00e0o b\u00e0i to\u00e1n n\u00e0y \u0111\u00f3 l\u00e0 thu\u1eadt to\u00e1n KMP. Ngo\u00e0i KMP ra, c\u00f3 2 \u2018thu\u1eadt to\u00e1n chu\u1ea9n\u2019 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c. Thu\u1eadt to\u00e1n th\u1ee9 nh\u1ea5t \u0111\u00f3 l\u00e0 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Manacher \u0111\u1ec3 t\u00ednh b\u00e1n k\u00ednh \u0111\u1ed1i x\u1ee9ng t\u1ea1i t\u1ea5t c\u1ea3 v\u1ecb tr\u00ed trong x\u00e2u. Thu\u1eadt to\u00e1n th\u1ee9 2 \u0111\u00f3 l\u00e0 s\u1eed d\u1ee5ng Suffix Array v\u00e0 LCP (Longest Common Prefix) cho x\u00e2u \u0111\u01b0\u1ee3c n\u1ed1i b\u1edfi \\(s\\) v\u00e0 x\u00e2u \\(s\\) vi\u1ebft theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c l\u1ea1i. 2 thu\u1eadt to\u00e1n n\u00e0y \u0111\u1ec1u kh\u00f4ng d\u1ec5, v\u00e0 n\u1eb1m ngo\u00e0i ph\u1ea1m vi b\u00e0i vi\u1ebft, n\u00ean t\u00f4i ch\u1ec9 n\u00eau s\u01a1 qua m\u00e0 kh\u00f4ng \u0111i v\u00e0o chi ti\u1ebft.</li> <li>B\u00e2y gi\u1edd, ch\u00fang ta s\u1ebd x\u00e9t thu\u1eadt to\u00e1n \u2018kh\u00f4ng chu\u1ea9n\u2019 l\u00e0 thu\u1eadt to\u00e1n Hash. \u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, ch\u00fang ta x\u00e9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1ed9 d\u00e0i c\u1ee7a x\u00e2u \u0111\u1ed1i x\u1ee9ng l\u00e0 l\u1ebb (tr\u01b0\u1eddng h\u1ee3p ch\u1eb5n x\u1eed l\u00fd ho\u00e0n to\u00e0n t\u01b0\u01a1ng t\u1ef1).</li> <li>Gi\u1ea3 s\u1eed x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i l\u1ebb d\u00e0i nh\u1ea5t c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 \\(l\\). D\u1ec5 th\u1ea5y, trong x\u00e2u \\(s\\) t\u1ed3n t\u1ea1i x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(l\u22122\\), \\(l\u22124\\),... Tuy nhi\u00ean, x\u00e2u \\(s\\) kh\u00f4ng t\u1ed3n t\u00e0i x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(l+2\\), \\(l+4\\), ... Nh\u01b0 v\u1eady, \\(s\\) th\u1ecfa m\u00e3n t\u00ednh ch\u1ea5t chia nh\u1ecb ph\u00e2n. Ch\u00fang ta s\u1ebd chia nh\u1ecb ph\u00e2n \u0111\u1ec3 t\u00ecm \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3. V\u1edbi m\u1ed7i \u0111\u1ed9 d\u00e0i \\(l\\), ch\u00fang ta c\u1ea7n ki\u1ec3m tra xem trong x\u00e2u c\u00f3 t\u1ed3n t\u1ea1i m\u1ed9t x\u00e2u con l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i \\(l\\) hay kh\u00f4ng. \u0110\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y, ta duy\u1ec7t qua t\u1ea5t c\u1ea3 t\u1ea5t c\u1ea3 c\u00e1c x\u00e2u con \u0111\u1ed9 d\u00e0i \\(l\\) trong \\(s\\).</li> <li>B\u00e0i to\u00e1n c\u00f2n l\u1ea1i l\u00e0: ki\u1ec3m tra xem \\(s[i..j]\\) v\u1edbi \\((1 \\le i \\le j \\le m; (j\u2212i+1) \\bmod 2 = 1)\\) c\u00f3 ph\u1ea3i l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng hay kh\u00f4ng.</li> <li>C\u00e1ch l\u00e0m nh\u01b0 sau. G\u1ecdi \\(t\\) l\u00e0 x\u00e2u \\(s\\) vi\u1ebft theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c l\u1ea1i. B\u1eb1ng thu\u1eadt to\u00e1n Hash, ch\u00fang ta c\u00f3 th\u1ec3 ki\u1ec3m tra \u0111\u01b0\u1ee3c m\u1ed9t x\u00e2u con n\u00e0o \u0111\u00f3 c\u1ee7a \\(t\\) c\u00f3 b\u1eb1ng m\u1ed9t x\u00e2u con n\u00e0o \u0111\u00f3 c\u1ee7a \\(s\\) hay kh\u00f4ng. Nh\u01b0 v\u1eady, ch\u00fang ta c\u1ea7n ki\u1ec3m tra \\(s[i..k]\\) c\u00f3 b\u1eb1ng \\(t[n\u2212j+1..n\u2212k+1]\\) hay kh\u00f4ng v\u1edbi \\(k\\) l\u00e0 t\u00e2m \u0111\u1ed1i x\u1ee9ng, n\u00f3i c\u00e1ch kh\u00e1c \\(k = (i+j)/2\\). Nh\u01b0 v\u1eady b\u00e0i to\u00e1n \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1ea3i. \u0110\u1ed9 ph\u1ee9c t\u1ea1p cho c\u00e1ch l\u00e0m n\u00e0y l\u00e0 \\(O(n log(n))\\).</li> </ul>"},{"location":"algo/string/hash/#k-th-alphabetical-cyclic","title":"k-th alphabetical cyclic","text":"<p>B\u00e0i to\u00e1n \u0111\u1eb7t ra nh\u01b0 sau: B\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t d\u00e3y \\(a_1, a_2,... , a_n (n \\le 50,000)\\). S\u1eafp x\u1ebfp \\(n\\) ho\u00e1n v\u1ecb v\u00f2ng tr\u00f2n c\u1ee7a d\u00e3y n\u00e0y theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n. C\u1ee5 th\u1ec3, c\u00e1c ho\u00e1n v\u1ecb v\u00f2ng quanh c\u1ee7a d\u00e3y n\u00e0y l\u00e0 \\((a_1, a_2,... , a_n)\\), \\((a_2, a_3, ..., a_n, a_1)\\), \\((a_3, a_4, ..., a_n, a_1, a_2)\\),... D\u00e3y n\u00e0y c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n nh\u1ecf h\u01a1n d\u00e3y kia n\u1ebfu s\u1ed1 \u0111\u1ea7u ti\u00ean kh\u00e1c nhau c\u1ee7a d\u00e3y n\u00e0y nh\u1ecf h\u01a1n d\u00e3y kia. Y\u00eau c\u1ea7u b\u00e0i to\u00e1n l\u00e0: In ra d\u00e3y c\u00f3 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n l\u1edbn th\u1ee9 \\(k\\).</p> <ul> <li>B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gi\u1ea3i b\u1eb1ng Suffix Array, tuy nhi\u00ean c\u00e1ch c\u00e0i \u0111\u1eb7t ph\u1ee9c t\u1ea1p v\u00e0 kh\u00f4ng ph\u1ea3i tr\u1ecdng t\u00e2m c\u1ee7a b\u00e0i vi\u1ebft n\u00ean t\u00f4i s\u1ebd kh\u00f4ng n\u00eau ra \u1edf \u0111\u00e2y.</li> <li>N\u1ebfu ti\u1ebfp c\u1eadn m\u1ed9t c\u00e1ch tr\u1ef1c ti\u1ebfp, ch\u00fang ta s\u1ebd sinh ra t\u1ea5t c\u1ea3 c\u00e1c d\u00e3y ho\u00e1n v\u1ecb v\u00f2ng quanh, r\u1ed3i sau \u0111\u00f3 d\u00f9ng m\u1ed9t thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp \u0111\u1ec3 s\u1eafp x\u1ebfp l\u1ea1i ch\u00fang theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n, cu\u1ed1i c\u00f9ng ch\u1ec9 vi\u1ec7c in ra d\u00e3y th\u1ee9 \\(k\\) sau khi s\u1eafp x\u1ebfp. Tuy nhi\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 r\u1ea5t l\u1edbn v\u00e0 kh\u00f4ng th\u1ec3 \u0111\u00e1p \u1ee9ng \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u v\u1ec1 th\u1eddi gian. C\u1ee5 th\u1ec3, c\u00e1ch n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n^2 \\* log(n))\\), \u0111\u00e2y l\u00e0 t\u00edch c\u1ee7a \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a s\u1eafp x\u1ebfp v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a m\u1ed7i ph\u00e9p so s\u00e1nh d\u00e3y.</li> <li>V\u1eabn gi\u1eef t\u01b0 t\u01b0\u1edfng l\u00e0 s\u1eafp x\u1ebfp l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c d\u00e3y ho\u00e1n v\u1ecb v\u00f2ng quanh r\u1ed3i in ra d\u00e3y \u0111\u1ee9ng \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(k\\), ch\u00fang ta c\u1ed1 g\u1eafng c\u1ea3i ti\u1ebfn \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a vi\u1ec7c so s\u00e1nh th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n c\u1ee7a 2 d\u00e3y.</li> <li>Nh\u1eafc l\u1ea1i \u0111\u1ecbnh ngh\u0129a v\u1ec1 th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n c\u1ee7a 2 d\u00e3y: X\u00e9t 2 d\u00e3y \\(a\\) v\u00e0 \\(b\\) c\u00f3 c\u00f9ng s\u1ed1 ph\u1ea7n t\u1eed. G\u1ecdi v\u00ed tr\u00ed th\u1ee9 \\(i\\) l\u00e0 v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean t\u1eeb tr\u00e1i sang m\u00e0 \\(a_i \\ne b_i\\). \\(a &lt; b \\Leftrightarrow a_i &lt; b_i\\). Nh\u01b0 v\u1eady, ta ph\u1ea3i t\u00ecm \u0111o\u1ea1n ti\u1ec1n t\u1ed1 gi\u1ed1ng nhau d\u00e0i nh\u1ea5t c\u1ee7a \\(a\\) v\u00e0 \\(b\\), r\u1ed3i so s\u00e1nh k\u00ed t\u1ef1 ti\u1ebfp theo. \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111o\u1ea1n ti\u1ec1n t\u1ed1 gi\u1ed1ng nhau d\u00e0i nh\u1ea5t, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Hash k\u1ebft h\u1ee3p v\u1edbi chia nh\u1ecb ph\u00e2n.</li> <li>\u0110\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i n\u00e0y, c\u1ea7n s\u1eed d\u1ee5ng th\u00eam m\u1ed9t k\u1ef9 thu\u1eadt nh\u1ecf n\u1eefa: Thay v\u00ec sinh ra t\u1ea5t c\u1ea3 c\u00e1c ho\u00e1n v\u1ecb v\u00f2ng quanh, ch\u00fang ta ch\u1ec9 c\u1ea7n nh\u00e2n \u0111\u00f4i d\u00e3y \\(a\\) l\u00ean, d\u00e3y m\u1edbi s\u1ebd c\u00f3 \\(2n\\) ph\u1ea7n t\u1eed: \\((a_1, a_2, ..., a_n, a_1, a_2, ..., a_n)\\). M\u1ed9t ho\u00e1n v\u1ecb v\u00f2ng quanh s\u1ebd l\u00e0 m\u1ed9t d\u00e3y con li\u00ean ti\u1ebfp \u0111\u1ed9 d\u00e0i \\(n\\) c\u1ee7a d\u00e3y nh\u00e2n \u0111\u00f4i n\u00e0y.</li> </ul> <p>T\u1eeb \u0111\u00f3 ta thu \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n*log^2(n))\\)</p>"},{"location":"algo/string/hash/#longest-substring-and-appear-at-least-k-times","title":"Longest substring and appear at least k times","text":"<p>B\u00e0i to\u00e1n \u0111\u1eb7t ra nh\u01b0 sau: B\u1ea1n \u0111\u01b0\u1ee3c cho x\u00e2u \\(s\\) \u0111\u1ed9 d\u00e0i \\(n (n \\le 50,000)\\), b\u1ea1n c\u1ea7n t\u00ecm ra x\u00e2u con c\u1ee7a \\(s\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t, v\u00e0 x\u00e2u con n\u00e0y xu\u1ea5t hi\u1ec7n \u00edt nh\u1ea5t \\(k\\) l\u1ea7n.</p> <ul> <li>B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gi\u1ea3i b\u1eb1ng Suffix Array, tuy nhi\u00ean c\u00e1ch c\u00e0i \u0111\u1eb7t ph\u1ee9c t\u1ea1p v\u00e0 kh\u00f4ng ph\u1ea3i tr\u1ecdng t\u00e2m c\u1ee7a b\u00e0i vi\u1ebft n\u00ean t\u00f4i s\u1ebd kh\u00f4ng n\u00eau ra \u1edf \u0111\u00e2y.</li> <li>Ti\u1ebfp t\u1ee5c b\u00e0n \u0111\u1ebfn thu\u1eadt to\u00e1n Hash \u0111\u1ec3 thay th\u1ebf thu\u1eadt to\u00e1n chu\u1ea9n. Nh\u1eadn x\u00e9t r\u1eb1ng, gi\u1ea3 s\u1eed \u0111\u1ed9 d\u00e0i l\u1edbn nh\u1ea5t t\u00ecm \u0111\u01b0\u1ee3c l\u00e0 \\(l\\), th\u00ec v\u1edbi m\u1ecdi \\(l\u2032 \\le l\\), lu\u00f4n t\u1ed3n t\u1ea1i x\u00e2u c\u00f3 \u0111\u1ed9 d\u00e0i \\(l\u2032\\) xu\u1ea5t hi\u1ec7n \u00edt nh\u1ea5t \\(k\\) l\u1ea7n. Tuy nhi\u00ean, v\u1edbi m\u1ecdi \\(l\u2032 &gt; l\\), kh\u00f4ng t\u1ed3n t\u1ea1i x\u00e2u c\u00f3 \u0111\u1ed9 d\u00e0i \\(l\u2032\\) xu\u1ea5t hi\u1ec7n \u00edt nh\u1ea5t \\(k\\) l\u1ea7n (do \\(l\\) \u0111\u00e3 l\u00e0 l\u1edbn nh\u1ea5t). Nh\u01b0 v\u1eady, \\(l\\)  th\u1ecfa m\u00e3n t\u00ednh ch\u1ea5t chia nh\u1ecb ph\u00e2n. Ch\u00fang ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n \u0111\u1ec3 t\u00ecm ra \\(l\\) l\u1edbn nh\u1ea5t.</li> <li>B\u00e2y gi\u1edd, v\u1edbi m\u1ed7i \\(l\\) khi \u0111ang chia nh\u1ecb ph\u00e2n, ch\u00fang ta s\u1ebd ph\u1ea3i ki\u1ec3m tra li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i x\u00e2u con n\u00e0o xu\u1ea5t hi\u1ec7n \u00edt nh\u1ea5t \\(k\\) l\u1ea7n hay kh\u00f4ng. \u0110i\u1ec1u n\u00e0y \u0111\u01b0\u1ee3c l\u00e0m r\u1ea5t \u0111\u01a1n gi\u1ea3n, b\u1eb1ng c\u00e1ch sinh m\u1ecdi m\u00e3 Hash c\u1ee7a c\u00e1c x\u00e2u con \u0111\u1ed9 d\u00e0i \\(k\\) trong \\(s\\). Sau \u0111\u00f3 s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c m\u00e3 Hash n\u00e0y theo chi\u1ec1u t\u0103ng d\u1ea7n, r\u1ed3i ki\u1ebfm tra xem c\u00f3 m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp c\u00e1c m\u00e3 Hash n\u00e0o gi\u1ed1ng nhau \u0111\u1ed9 d\u00e0i \\(l\\) hay kh\u00f4ng.</li> <li>Nh\u01b0 v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111\u1ec3  chia nh\u1ecb ph\u00e2n l\u00e0 \\(O(log(n))\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a s\u1eafp x\u1ebfp l\u00e0 \\(O(n log(n))\\), v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u1ea3 b\u00e0i to\u00e1n l\u00e0 \\(O(n log^2(n) )\\).</li> </ul>"},{"location":"algo/string/hash/#anh-gia-o-chinh-xac","title":"\u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ch\u00ednh x\u00e1c","text":"<p>Th\u00f4ng th\u01b0\u1eddng, khi s\u1eed d\u1ee5ng Hash, ta th\u01b0\u1eddng g\u1eb7p ph\u1ea3i 2 tr\u01b0\u1eddng h\u1ee3p nh\u01b0 sau:</p> <ol> <li>Tr\u1ea3 l\u1eddi \\(Q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n c\u00f3 d\u1ea1ng ki\u1ec3m tra 2 \u0111o\u1ea1n con c\u1ee7a 2 x\u00e2u c\u00f3 b\u1eb1ng nhau hay kh\u00f4ng</li> <li>Cho \\(N\\) x\u00e2u, ki\u1ec3m tra t\u1ea5t c\u1ea3 c\u00e1c x\u00e2u c\u00f3 ph\u00e2n bi\u1ec7t hay kh\u00f4ng.</li> </ol> <p>Gi\u1ea3 s\u1eed ta ch\u1ecdn \\(MOD\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 kho\u1ea3ng \\(10^9\\), v\u00e0 gi\u1ea3 s\u1eed d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c sinh ng\u1eabu nhi\u00ean v\u00e0 h\u00e0m hash c\u1ee7a ch\u00fang ta \u0111\u1ee7 t\u1ed1t \u0111\u1ec3 Hash c\u1ee7a c\u00e1c x\u00e2u \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 \u0111\u1ec1u v\u00e0 ng\u1eabu nhi\u00ean.</p>"},{"location":"algo/string/hash/#truong-hop-1","title":"Tr\u01b0\u1eddng h\u1ee3p 1","text":"<p>Gi\u1ea3 s\u1eed \\(Q\\) kho\u1ea3ng \\(10^5\\), v\u00e0 b\u1ed9 test c\u00f3 \\(T = 100\\) test.</p> <ul> <li>V\u1edbi 2 x\u00e2u kh\u00e1c nhau, x\u00e1c su\u1ea5t \u0111\u1ec3 n\u00f3 c\u00f3 c\u00f9ng Hash l\u00e0 x\u1ea5p x\u1ec9 \\(1 / 10^9\\). Nh\u01b0 v\u1eady, x\u00e1c su\u1ea5t \u0111\u1ec3 tr\u1ea3 l\u1eddi \u0111\u00fang 1 truy v\u1ea5n l\u00e0: \\(1 - 1 / 10^9\\).</li> <li>\u1ede tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, ta c\u00f3 \\(Q\\) truy v\u1ea5n m\u00e0 m\u1ed7i truy v\u1ea5n l\u00e0 m\u1ed9t c\u1eb7p x\u00e2u kh\u00e1c nhau. X\u00e1c su\u1ea5t \u0111\u1ec3 ta tr\u1ea3 l\u1eddi \u0111\u00fang t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n l\u00e0: \\((1 - 1 / 10^9)^Q\\).</li> <li>X\u00e1c su\u1ea5t \u0111\u1ec3 ta tr\u1ea3 l\u1eddi \u0111\u00fang t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c test l\u00e0: \\((1 - 1 / 10^9)^{Q \\* T}\\).</li> </ul> <p>Thay s\u1ed1 v\u00e0o, x\u00e1c su\u1ea5t \u0111\u1ec3 tr\u1ea3 l\u1eddi \u0111\u00fang t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n l\u00e0 \\(0.9900\\), \u0111\u1ee7 l\u1edbn \u0111\u1ec3 ta y\u00ean t\u00e2m qua t\u1ea5t c\u1ea3 c\u00e1c test, v\u1edbi \u0111i\u1ec1u ki\u1ec7n test kh\u00f4ng \u0111\u01b0\u1ee3c sinh d\u1ef1a tr\u00ean \\(P\\). (Ch\u00fa \u00fd n\u1ebfu b\u1ea1n \u0111ang thi nh\u1eefng contest nh\u01b0 Topcoder/Codeforces, ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c \\(P\\) c\u1ee7a b\u1ea1n v\u00e0 sinh test \u0111\u1ec3 challenge code c\u1ee7a b\u1ea1n).</p>"},{"location":"algo/string/hash/#truong-hop-2","title":"Tr\u01b0\u1eddng h\u1ee3p 2","text":"<p>Theo Birthday Paradox, ta d\u1ec5 d\u00e0ng th\u1ea5y r\u1eb1ng, n\u1ebfu c\u00f3 \\(\\sqrt{P} = 3*10^4\\) x\u00e2u, x\u00e1c su\u1ea5t \u0111\u1ec3 2 x\u00e2u b\u1eb1ng nhau l\u00e0 r\u1ea5t l\u1edbn. Th\u1eadt v\u1eady, x\u00e1c su\u1ea5t \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00e1c x\u00e2u kh\u00e1c nhau l\u00e0:</p> <p>\\((1 - 1 / 10^9) \\* (1 - 2 / 10^9) \\* (1 - 3 / 10^9) \\* ... (1 - N / 10^9)\\).</p> <p>V\u1edbi \\(N = 30,000\\), t\u00edch tr\u00ean l\u00e0 \\(0.6376\\), ngh\u0129a l\u00e0 b\u1ea1n c\u00f3 g\u1ea7n \\(0.40\\) x\u00e1c su\u1ea5t tr\u1ea3 l\u1eddi sai. Do v\u1eady, b\u1ea1n b\u1eaft bu\u1ed9c ph\u1ea3i d\u00f9ng nhi\u1ec1u \\(MOD\\) kh\u00e1c nhau.</p>"},{"location":"algo/string/hash/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":""},{"location":"algo/string/hash/#thuat-toan_1","title":"Thu\u1eadt to\u00e1n","text":"<p>\u00dd t\u01b0\u1edfng thu\u1eadt to\u00e1n Hash d\u1ef1a tr\u00ean vi\u1ec7c \u0111\u1ed5i t\u1eeb h\u1ec7 c\u01a1 s\u1ed1 l\u1edbn sang h\u1ec7 th\u1eadp ph\u00e2n, so s\u00e1nh hai s\u1ed1 th\u1eadp ph\u00e2n l\u1edbn b\u1eb1ng c\u00e1ch so s\u00e1nh ph\u1ea7n d\u01b0 c\u1ee7a ch\u00fang v\u1edbi m\u1ed9t s\u1ed1 \u0111\u1ee7 l\u1edbn.</p>"},{"location":"algo/string/hash/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Khi c\u00e0i \u0111\u1eb7t Hash, ta c\u1ea7n ch\u1ecdn:</p> <ul> <li>H\u1ec7 c\u01a1 s\u1ed1</li> <li>MOD</li> </ul> <p>V\u1edbi nh\u1eefng trang web m\u00e0 ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 \u0111\u1ecdc code b\u1ea1n r\u1ed3i t\u00ecm test sai (nh\u01b0 Codeforces, Topcoder), n\u1ebfu Hash tr\u00e0n s\u1ed1 ho\u1eb7c MOD l\u00e0 1 s\u1ed1 nguy\u00ean bi\u1ebft tr\u01b0\u1edbc, c\u00f3 th\u1ec3 sinh test \u0111\u1ec3 l\u00e0m code b\u1ea1n sai. V\u1edbi nh\u1eefng k\u1ef3 thi nh\u01b0 HSG QG, IOI, ACM, v\u00e0 c\u00e1c Online Judge, th\u00f4ng th\u01b0\u1eddng s\u1ebd kh\u00f4ng c\u00f3 nh\u1eefng test nh\u01b0 v\u1eady. T\u00f3m l\u1ea1i, khi ch\u1ecdn \\(MOD\\) v\u00e0 h\u1ec7 c\u01a1 s\u1ed1 ta l\u00e0m nh\u01b0 sau:</p> <ul> <li>Ch\u1ecdn h\u1ec7 c\u01a1 s\u1ed1 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 l\u1edbn h\u01a1n s\u1ed1 l\u01b0\u1ee3ng k\u00fd t\u1ef1 (v\u00ed d\u1ee5 31, 71).</li> <li>Ch\u1ecdn \\(MOD\\) \u0111\u1ee7 l\u1edbn theo nguy\u00ean t\u1eafc \u0111\u00e3 ph\u00e2n t\u00edch \u1edf ph\u1ea7n \u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ch\u00ednh x\u00e1c.</li> <li>N\u1ebfu l\u00e0 Topcoder ho\u1eb7c Codeforces, d\u00f9ng k\u1ebft h\u1ee3p Hash tr\u00e0n s\u1ed1 v\u00e0 1 \\(MOD\\) \u0111\u1ee7 l\u1edbn.</li> <li>N\u1ebfu kh\u00f4ng ph\u1ea3i Topcoder hay Codeforces, c\u00f3 th\u1ec3 d\u00f9ng Hash tr\u00e0n s\u1ed1. N\u1ebfu \\(MOD = 2^{64}\\) ch\u01b0a \u0111\u1ee7 l\u1edbn th\u00ec d\u00f9ng th\u00eam 1 \\(MOD\\) n\u1eefa.</li> </ul>"},{"location":"algo/string/hash/#uu-iem","title":"\u01afu \u0111i\u1ec3m","text":"<p>\u01afu \u0111i\u1ec3m c\u1ee7a thu\u1eadt to\u00e1n Hash l\u00e0 c\u00e0i \u0111\u1eb7t r\u1ea5t d\u1ec5 d\u00e0ng. Linh \u0111\u1ed9ng trong \u1ee9ng d\u1ee5ng v\u00e0 c\u00f3 th\u1ec3 thay th\u1ebf c\u00e1c thu\u1eadt to\u00e1n chu\u1ea9n \u2018h\u1ea7m h\u1ed1\u2019 kh\u00e1c.</p>"},{"location":"algo/string/hash/#nhuoc-iem","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<p>Nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a thu\u1eadt to\u00e1n Hash l\u00e0 t\u00ednh ch\u00ednh x\u00e1c. M\u1eb7c d\u00f9 r\u1ea5t kh\u00f3 sinh test \u0111\u1ec3 c\u00f3 th\u1ec3 l\u00e0m cho thu\u1eadt to\u00e1n ch\u1ea1y sai, nh\u01b0ng kh\u00f4ng ph\u1ea3i l\u00e0 kh\u00f4ng th\u1ec3. V\u00ec v\u1eady, \u0111\u1ec3 n\u00e2ng cao t\u00ednh ch\u00ednh x\u00e1c c\u1ee7a thu\u1eadt to\u00e1n, ng\u01b0\u1eddi ta th\u01b0\u1eddng d\u00f9ng nhi\u1ec1u modulo kh\u00e1c nhau \u0111\u1ec3 so s\u00e1nh m\u00e3 Hash (v\u00ed d\u1ee5 nh\u01b0 d\u00f9ng 3 modulo m\u1ed9t l\u00fac).</p>"},{"location":"algo/string/hash/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>VNOJ - SUBSTR</li> <li>VNOJ - PALINY</li> <li>VNOJ - DTKSUB</li> <li>VNOJ - DTCSTR</li> <li>VNOJ - TWOOPERS</li> <li>VNOJ - VOSTR</li> <li>SGU 426</li> </ul>"},{"location":"algo/string/hash/#cac-nguon-tham-khao","title":"C\u00e1c ngu\u1ed3n tham kh\u1ea3o","text":"<ul> <li>Wikipedia - String Searching Algorithm</li> <li>Wikipedia - KMP</li> <li>Wikipedia - Rabin Karp</li> <li>Wikipedia - Alphabetical Order</li> </ul>"},{"location":"algo/string/kmp/","title":"Thu\u1eadt to\u00e1n KMP","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: Tr\u1ecbnh Quang Anh - University of Melbourne</p> <p>Review b\u1edfi: - Cao Thanh H\u1eadu - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM - L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM - Ho\u00e0ng Xu\u00e2n Nh\u1eadt - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM</p> <p>B\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c d\u1ecbch t\u1eeb \u0111\u00e2y v\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ec9nh s\u1eeda b\u1ed5 sung th\u00eam m\u1ed9t s\u1ed1 ph\u1ea7n.</p> <p>Ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft: X\u1eed l\u00fd x\u00e2u c\u01a1 b\u1ea3n. B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 xem l\u1ea1i c\u00e1c thu\u1eadt ng\u1eef v\u00e0 b\u00e0i t\u1eadp v\u1ec1 x\u00e2u t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/string/kmp/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>M\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n kinh \u0111i\u1ec3n nh\u1ea5t v\u1ec1 x\u1eed l\u00fd x\u00e2u l\u00e0 b\u00e0i to\u00e1n so kh\u1edbp chu\u1ed7i: Cho x\u00e2u \\(s\\) \u0111\u1ed9 d\u00e0i \\(n\\) v\u00e0 x\u00e2u \\(t\\) \u0111\u1ed9 d\u00e0i \\(m\\), \u0111\u1ebfm s\u1ed1 l\u1ea7n \\(s\\) xu\u1ea5t hi\u1ec7n trong \\(t\\). Ch\u1eb3ng h\u1ea1n, n\u1ebfu \\(s = \\text{\"ab\"}\\) v\u00e0 \\(t = \\text{\"aabcabaab\"}\\), th\u00ec \\(s\\) xu\u1ea5t hi\u1ec7n \\(3\\) l\u1ea7n t\u1ea1i \u1edf c\u00e1c v\u1ecb tr\u00ed \\(1\\), \\(4\\), \\(7\\) c\u1ee7a \\(t\\). M\u1ee5c ti\u00eau c\u1ee7a ch\u00fang ta l\u00e0 t\u00ecm m\u1ed9t thu\u1eadt to\u00e1n t\u1ed1i \u01b0u h\u01a1n \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y, thay v\u00ec duy\u1ec7t t\u1eebng v\u1ecb tr\u00ed \u0111\u1ec3 ki\u1ec3m tra trong \\(O(mn)\\).</p> <p>Knuth-Morris-Pratt (KMP) l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n+m)\\) \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n so kh\u1edbp chu\u1ed7i. \u00dd t\u01b0\u1edfng c\u1ee7a KMP l\u00e0 m\u1edf r\u1ed9ng m\u1ed9t h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i\\) sang h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i+1\\) m\u00e0 v\u1eabn \u0111\u1ea3m b\u1ea3o kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 t\u01b0\u01a1ng \u1ee9ng, t\u1eeb \u0111\u00f3 c\u1ea3i thi\u1ec7n \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u1edd lo\u1ea1i b\u1ecf \u0111\u01b0\u1ee3c thao t\u00e1c so s\u00e1nh x\u00e2u t\u1ed1n k\u00e9m. C\u00e1c ph\u1ea7n ti\u1ebfp theo s\u1ebd n\u00f3i r\u00f5 c\u00e1c b\u01b0\u1edbc \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y. Nh\u01b0ng tr\u01b0\u1edbc ti\u00ean, ta s\u1ebd l\u00e0m quen v\u1edbi kh\u00e1i ni\u1ec7m h\u00e0m ti\u1ec1n t\u1ed1, m\u1ed9t h\u00e0m gi\u00fap ch\u00fang ta ph\u00e2n t\u00edch k\u1ef9 h\u01a1n v\u1ec1 c\u00e1c c\u1ea5u tr\u00fac \"t\u1ef1 kh\u1edbp\" trong x\u00e2u \\(s\\), v\u00e0 l\u00e0 c\u1ed1t l\u00f5i c\u1ee7a thu\u1eadt to\u00e1n KMP.</p>"},{"location":"algo/string/kmp/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>L\u01b0u \u00fd: Xuy\u00ean su\u1ed1t b\u00e0i vi\u1ebft n\u00e0y c\u00e1c v\u1ecb tr\u00ed trong m\u1ed7i x\u00e2u s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ebfm t\u1eeb 0.</p> <p>Ti\u1ec1n t\u1ed1 chu\u1ea9n. Cho m\u1ed9t x\u00e2u \\(s\\). M\u1ed9t ti\u1ec1n t\u1ed1 c\u1ee7a \\(s\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t ti\u1ec1n t\u1ed1 chu\u1ea9n n\u1ebfu n\u00f3 kh\u00f4ng l\u00e0 c\u1ea3 x\u00e2u \\(s\\). </p> <p>H\u00e0m ti\u1ec1n t\u1ed1. Cho m\u1ed9t x\u00e2u \\(s\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\). H\u00e0m ti\u1ec1n t\u1ed1 c\u1ee7a \\(s\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 m\u1ed9t m\u1ea3ng \\(\\pi\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\), trong \u0111\u00f3 \\(\\pi[i]\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a ti\u1ec1n t\u1ed1 chu\u1ea9n d\u00e0i nh\u1ea5t c\u1ee7a x\u00e2u con \\(s[0 \\dots i]\\) m\u00e0 c\u0169ng l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a x\u00e2u con n\u00e0y. T\u1eeb \u0111\u1ecbnh ngh\u0129a n\u00e0y ta c\u00f3 \\(\\pi[0] = 0\\).</p> <p>Bi\u1ec3u di\u1ec5n to\u00e1n h\u1ecdc c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1:  \\(\\(\\pi[i] = \\max_ {k = 0 \\dots i} \\{k : s[0 \\dots k-1] = s[i-(k-1) \\dots i] \\}\\)\\)</p> <p>V\u00ed d\u1ee5, h\u00e0m ti\u1ec1n t\u1ed1 c\u1ee7a x\u00e2u \"\\(abcabcd\\)\" l\u00e0 \\([0, 0, 0, 1, 2, 3, 0]\\) v\u00e0 h\u00e0m ti\u1ec1n t\u1ed1 c\u1ee7a x\u00e2u \"\\(aabaaab\\)\" l\u00e0 \\([0, 1, 0, 1, 2, 2, 3]\\).</p> <p>T\u00ednh nhanh h\u00e0m ti\u1ec1n t\u1ed1 l\u00e0 h\u1ebft s\u1ee9c quan tr\u1ecdng v\u00ec n\u00f3 l\u00e0 m\u1ed9t b\u01b0\u1edbc thi\u1ebft y\u1ebfu trong thu\u1eadt to\u00e1n KMP. \u1ede ph\u1ea7n sau, b\u00e0i vi\u1ebft gi\u1edbi thi\u1ec7u m\u1ed9t thu\u1eadt to\u00e1n \"ng\u00e2y th\u01a1\" \u0111\u1ec3 t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^3)\\). T\u1eeb \u0111\u00f3, ta s\u1ebd d\u00f9ng c\u00e1c nh\u1eadn x\u00e9t \u0111\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n th\u00e0nh \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\). </p>"},{"location":"algo/string/kmp/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":"<p>T\u1eeb bi\u1ec3u di\u1ec5n to\u00e1n h\u1ecdc c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t thu\u1eadt v\u00e9t c\u1ea1n nh\u01b0 sau: V\u1edbi m\u1ed7i \\(i\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(n - 1\\), duy\u1ec7t qua m\u1ecdi \\(k\\) \u0111\u1ec3 ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n \\(s[0 \\dots k-1] = s[i - (k-1) \\dots i]\\), khi \u0111\u00f3 \\(\\pi[i]\\) l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a \\(k\\) c\u00f3 \u0111i\u1ec1u ki\u1ec7n \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n. </p> <pre><code>vector&lt;int&gt; prefix_function(string s) {\n    int n = (int)s.length();\n    vector&lt;int&gt; pi(n, 0);\n    for (int i = 0; i &lt; n; i++)\n        for (int k = 0; k &lt;= i; k++)\n            if (s.substr(0, k) == s.substr(i - k + 1, k))\n                pi[i] = k;\n    return pi;\n}\n</code></pre> <p>Do c\u00f3 \\(O(n^2)\\) c\u1eb7p \\((i, k)\\) v\u00e0 so s\u00e1nh hai x\u00e2u b\u1eb1ng <code>s.substr()</code> m\u1ea5t \\(O(n)\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(n^3)\\).</p>"},{"location":"algo/string/kmp/#thuat-toan-toi-uu-e-tim-ham-tien-to","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u \u0111\u1ec3 t\u00ecm h\u00e0m ti\u1ec1n t\u1ed1","text":"<p>M\u1ed9t ch\u00fat b\u1ed1i c\u1ea3nh l\u1ecbch s\u1eed: Thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c t\u00ecm ra b\u1edfi Morris, ch\u1ec9 v\u00e0i tu\u1ea7n tr\u01b0\u1edbc khi \u0111\u01b0\u1ee3c Knuth t\u00ecm ra m\u1ed9t c\u00e1ch \u0111\u1ed9c l\u1eadp. Morris &amp; Pratt \u0111\u0103ng b\u00e1o c\u00e1o v\u00e0o n\u0103m 1970, r\u1ed3i c\u1ea3 ba \u0111\u1ed3ng xu\u1ea5t b\u1ea3n thu\u1eadt to\u00e1n n\u00e0y v\u00e0o n\u0103m 1977 (Ngu\u1ed3n: Wikipedia) </p>"},{"location":"algo/string/kmp/#phep-toi-uu-au-tien","title":"Ph\u00e9p t\u1ed1i \u01b0u \u0111\u1ea7u ti\u00ean","text":"<p>Nh\u1eadn x\u00e9t quan tr\u1ecdng \u0111\u1ea7u ti\u00ean l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1 ch\u1ec9 c\u00f3 th\u1ec3 t\u0103ng th\u00eam t\u1ed1i \u0111a \\(1\\) \u0111\u01a1n v\u1ecb khi duy\u1ec7t t\u1eeb \\(i\\) l\u00ean \\(i + 1\\). </p> <p>Th\u1eadt v\u1eady, gi\u1ea3 s\u1eed \\(\\pi[i + 1] \\gt \\pi[i] + 1\\), ta l\u1ea5y h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i + 1\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(\\pi[i + 1]\\) v\u00e0 b\u1ecf ch\u1eef c\u00e1i cu\u1ed1i c\u1ee7a n\u00f3 \u0111i. X\u00e2u thu \u0111\u01b0\u1ee3c l\u00e0 m\u1ed9t h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i\\) kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i l\u00e0 \\(\\pi[i + 1] - 1\\), l\u1edbn h\u01a1n \\(\\pi[i]\\), m\u00e2u thu\u1eabn v\u1edbi vi\u1ec7c \\(\\pi[i]\\) l\u00e0 h\u1eadu t\u1ed1 d\u00e0i nh\u1ea5t th\u1ecfa m\u00e3n c\u1ee7a \\(i\\). </p> <p>\u0110\u1ec3 h\u00ecnh dung s\u1ef1 m\u00e2u thu\u1eabn n\u00e0y, ta x\u00e9t v\u00ed d\u1ee5 d\u01b0\u1edbi \u0111\u00e2y. \u1ede v\u1ecb tr\u00ed \\(i\\), h\u1eadu t\u1ed1 d\u00e0i nh\u1ea5t m\u00e0 c\u0169ng l\u00e0 ti\u1ec1n t\u1ed1 c\u00f3 \u0111\u1ed9 d\u00e0i \\(2\\) (\\(\\pi[i] = 2\\)), v\u00e0 \u1edf v\u1ecb tr\u00ed \\(i + 1\\) th\u00ec ta c\u00f3 \\(\\pi[i + 1] = 4 \\gt 2 + 1\\). Khi \u0111\u00f3, x\u00e2u \\(s_0 ~ s_1 ~ s_2 ~ s_3\\) b\u1eb1ng x\u00e2u \\(s_{i-2} ~ s_{i-1} ~ s_i ~ s_{i+1}\\), d\u1eabn t\u1edbi hai x\u00e2u \\(s_0 ~ s_1 ~ s_2\\) v\u00e0 \\(s_{i-2} ~ s_{i-1} ~ s_i\\) b\u1eb1ng nhau. Do \u0111\u00f3, \\(\\pi[i]\\) ph\u1ea3i b\u1eb1ng \\(3\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i \\(2\\). </p> \\[\\underbrace{\\overbrace{s_0 ~ s_1}^{\\pi[i] = 2} ~ s_2 ~ s_3}_{\\pi[i+1] = 4} ~ \\dots ~ \\underbrace{s_{i-2} ~ \\overbrace{s_{i-1} ~ s_{i}}^{\\pi[i] = 2} ~ s_{i+1}}_{\\pi[i+1] = 4}\\] <p>Do \u0111\u00f3, khi duy\u1ec7t sang v\u1ecb tr\u00ed ti\u1ebfp theo, gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1 ch\u1ec9 c\u00f3 th\u1ec3 t\u0103ng th\u00eam \\(1\\), gi\u1eef nguy\u00ean, ho\u1eb7c gi\u1ea3m \u0111i. </p> <p>Ch\u1ec9 ri\u00eang nh\u1eadn x\u00e9t n\u00e0y l\u00e0 \u0111\u1ee7 \u0111\u1ec3 ch\u00fang ta gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p xu\u1ed1ng c\u00f2n \\(O(n^2)\\): Thay v\u00ec m\u1ed7i l\u1ea7n duy\u1ec7t \\(i\\) x\u00e9t m\u1ecdi gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 c\u1ee7a \\(k\\), thu\u1eadt to\u00e1n b\u1eaft \u0111\u1ea7u v\u1edbi \\(k = \\pi[i-1] + 1\\) (h\u00e0m ti\u1ec1n t\u1ed1 t\u0103ng t\u1ed1i \u0111a \\(1\\) n\u00ean \u0111\u00e2y l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 c\u1ee7a \\(k\\)) v\u00e0 gi\u1ea3m d\u1ea7n \\(k\\) \u0111\u1ebfn khi so kh\u1edbp th\u00e0nh c\u00f4ng. V\u00ec h\u00e0m ti\u1ec1n t\u1ed1 su\u1ed1t c\u1ea3 qu\u00e1 tr\u00ecnh duy\u1ec7t \\(i\\) ch\u1ec9 c\u00f3 th\u1ec3 t\u0103ng \\(k\\) t\u1ed1i \u0111a \\(1 * n = n\\) b\u01b0\u1edbc, d\u1eabn t\u1edbi ch\u1ec9 c\u00f3 t\u1ed1i \u0111a \\(n\\) b\u01b0\u1edbc gi\u1ea3m \\(k\\), n\u00ean s\u1ed1 b\u01b0\u1edbc th\u1ef1c hi\u1ec7n so s\u00e1nh hai x\u00e2u ch\u1ec9 c\u00f2n l\u00e0 \\(O(n)\\). V\u00ec v\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng c\u1ee7a thu\u1eadt ch\u1ec9 c\u00f2n l\u00e0 \\(O(n^2)\\) (so s\u00e1nh x\u00e2u v\u1eabn l\u00e0 \\(O(n)\\)). </p> <pre><code>vector&lt;int&gt; prefix_function(string s) {\n    int n = (int)s.length();\n    vector&lt;int&gt; pi(n, 0);\n    for (int i = 1; i &lt; n; i++)\n        int k = pi[i - 1] + 1; \n        while (k &amp;&amp; s.substr(0, k) != s.substr(i - k + 1, k))\n            k--; \n        pi[i] = k; \n    return pi;\n}\n</code></pre> <p>Tuy nhi\u00ean, ch\u00fang ta c\u00f3 th\u1ec3 l\u00e0m t\u1ed1t h\u01a1n. </p>"},{"location":"algo/string/kmp/#phep-toi-uu-thu-hai","title":"Ph\u00e9p t\u1ed1i \u01b0u th\u1ee9 hai","text":"<p>Tr\u01b0\u1edbc ti\u00ean, ta nh\u1eadn th\u1ea5y nh\u01b0\u1ee3c \u0111i\u1ec3m l\u00e0m cho thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\) l\u00e0 thao t\u00e1c so s\u00e1nh x\u00e2u m\u1ea5t \\(O(n)\\). </p> <p>Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp t\u1eeb \u0111\u1ea7u b\u00e0i vi\u1ebft, \u00fd t\u01b0\u1edfng ch\u00ednh \u0111\u1ec3 tri\u1ec7t ti\u00eau thao t\u00e1c n\u00e0y l\u00e0 m\u1edf r\u1ed9ng m\u1ed9t h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i\\) \u0111\u00e3 kh\u1edbp ti\u1ec1n t\u1ed1 \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i + 1\\) c\u0169ng kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1.</p> <p>C\u1ee5 th\u1ec3, n\u1ebfu ta c\u00f3 m\u1ed9t h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i\\) kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 c\u00f9ng \u0111\u1ed9 d\u00e0i \\(j\\), v\u00e0 ta c\u00f3 \\(s[j] = s[i+1]\\), th\u00ec h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i + 1\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(j + 1\\) kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 c\u00f3 \u0111\u1ed9 d\u00e0i \\(j + 1\\). </p> <p>V\u1eady n\u1ebfu ta nhanh ch\u00f3ng duy\u1ec7t qua \u0111\u01b0\u1ee3c c\u00e1c gi\u00e1 tr\u1ecb \\(j\\) l\u00e0 \u0111\u1ed9 d\u00e0i cho c\u1eb7p ti\u1ec1n t\u1ed1 - h\u1eadu t\u1ed1 \u1ee9ng v\u1edbi \\(i\\) \u0111\u00e3 kh\u1edbp s\u1eb5n, theo th\u1ee9 t\u1ef1 \\(j\\) gi\u1ea3m d\u1ea7n, th\u00ec gi\u00e1 tr\u1ecb \\(j\\) \u0111\u1ea7u ti\u00ean (v\u00e0 l\u1edbn nh\u1ea5t) c\u0169ng th\u1ecfa m\u00e3n \\(s[j] = s[i+1]\\) cho ta bi\u1ebft \\(\\pi[i+1] = j+1\\). N\u00f3i c\u00e1ch kh\u00e1c, nh\u1edd c\u00f3 c\u1eb7p x\u00e2u kh\u1edbp s\u1eb5n m\u00e0 ta ch\u1ec9 c\u1ea7n so s\u00e1nh m\u1ed9t c\u1eb7p k\u00fd t\u1ef1 (thao t\u00e1c c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n trong \\(O(1)\\)), v\u00e0 t\u1eeb \u0111\u00f3 lo\u1ea1i b\u1ecf \u0111\u01b0\u1ee3c thao t\u00e1c so s\u00e1nh x\u00e2u. </p> <p>Ta b\u1eaft \u0111\u1ea7u duy\u1ec7t b\u1eb1ng c\u00e1ch x\u00e9t h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(j = \\pi[i]\\). T\u1eeb \u0111\u1ecbnh ngh\u0129a h\u00e0m ti\u1ec1n t\u1ed1, h\u1eadu t\u1ed1 n\u00e0y kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 c\u00f3 \u0111\u1ed9 d\u00e0i \\(\\pi[i] ~ (s[0 \\dots \\pi[i] - 1])\\). N\u1ebfu \\(s[i + 1] = s[j] = s[\\pi[i]]\\), ta c\u00f3 th\u1ec3 kh\u1eb3ng \u0111\u1ecbnh \u0111\u01b0\u1ee3c r\u1eb1ng \\(\\pi[i+1] = \\pi[i] + 1\\) v\u00ec \\(\\pi\\) ch\u1ec9 t\u0103ng t\u1ed1i \u0111a \\(1\\) khi t\u1eeb \\(i\\) sang \\(i+1\\). </p> \\[\\underbrace{\\overbrace{s_0 ~ s_1 ~ s_2}^{\\pi[i]} ~ \\overbrace{s_3}^{s_3 = s_{i+1}}}_{\\pi[i+1] = \\pi[i] + 1} ~ \\dots ~ \\underbrace{\\overbrace{s_{i-2} ~ s_{i-1} ~ s_{i}}^{\\pi[i]} ~ \\overbrace{s_{i+1}}^{s_3 = s_{i + 1}}}_{\\pi[i+1] = \\pi[i] + 1}\\] <p>N\u1ebfu \\(s[i + 1] \\neq s[\\pi[i]]\\), ta duy\u1ec7t \u0111\u1ebfn h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn nh\u00ec, v\u00e0 kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 c\u00f9ng \u0111\u1ed9 d\u00e0i. </p> <p>N\u1ebfu \u0111\u1eb7t \u0111\u1ed9 d\u00e0i n\u00e0y l\u00e0 \\(k\\) th\u00ec ta c\u00f3 \\(s[0 \\dots k-1] = s[i-k+1 \\dots i]\\) (t\u1eeb \u0111\u1ecbnh ngh\u0129a) v\u00e0 \\(k &lt; j = \\pi[i]\\): </p> \\[\\overbrace{\\underbrace{s_0 ~ s_1}_{k} ~ s_2 ~ s_3 ~ s_4}^{j = \\pi[i]} ~ \\dots ~ \\overbrace{s_{i-4} ~ s_{i-3} ~ s_{i-2} ~ \\underbrace{s_{i-1} ~ s_{i}}_{k}}^{j = \\pi[i]} ~ s_{i+1}\\] <p>Tuy nhi\u00ean, do h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i\\) \u0111\u1ed9 d\u00e0i \\(\\pi[i]\\) c\u0169ng kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(\\pi[i]\\) l\u00e0 \\(s[0 \\dots \\pi[i] - 1]\\), h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(k\\) k\u1ebft th\u00fac \u1edf \\(\\pi[i]-1\\) kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(k\\). </p> \\[\\overbrace{\\underbrace{s_0 ~ s_1}_{k} ~ s_2 ~ \\underbrace{s_3 ~ s_4}_{k}}^{j = \\pi[i]} ~ \\dots ~ \\overbrace{s_{i-4} ~ s_{i-3} ~ s_{i-2} ~ \\underbrace{s_{i-1} ~ s_{i}}_{k}}^{j = \\pi[i]} ~ s_{i+1}\\] <p>Do \\(k\\) l\u1edbn nh\u1ea5t, ta ph\u1ea3i c\u00f3 \\(k = \\pi[\\pi[i]-1]\\). N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u1ed9 d\u00e0i h\u1eadu t\u1ed1 l\u1edbn th\u1ee9 nh\u00ec k\u1ebft th\u00fac \u1edf \\(i\\) m\u00e0 kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 t\u01b0\u01a1ng \u1ee9ng l\u00e0 \\(\\pi[\\pi[i]-1]\\). So s\u00e1nh \\(s[k]\\) v\u00e0 \\(s[i+1]\\), n\u1ebfu ch\u00fang b\u1eb1ng nhau th\u00ec ta c\u00f3 \\(\\pi[i+1] = k+1\\). </p> <p>Minh h\u1ecda cho hai tr\u01b0\u1eddng h\u1ee3p tr\u00ean:  </p> <p>N\u1ebfu \\(s[k] \\neq s[i+1]\\), l\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1, \u0111\u1ed9 d\u00e0i l\u1edbn th\u1ee9 ba cho h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i\\) kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 l\u00e0 \\(\\pi[\\pi[\\pi[i]-1]-1]\\), \u0111\u1ed9 d\u00e0i l\u1edbn th\u1ee9 t\u01b0 l\u00e0 \\(\\pi[\\pi[\\pi[\\pi[i]-1]-1]-1]\\),...</p> <p>T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 duy\u1ec7t qua m\u1ecdi h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(i\\) kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(j\\) nh\u01b0 sau: Ban \u0111\u1ea7u \u0111\u1eb7t \\(j = \\pi[i]\\), \u0111\u1ec3 \u0111\u1ebfn \u0111\u1ed9 d\u00e0i ti\u1ebfp theo th\u1ecfa m\u00e3n, ta g\u00e1n \\(j = \\pi[j-1]\\). T\u01b0\u01a1ng t\u1ef1 l\u1eadp lu\u1eadn \u1edf ph\u1ea7n ph\u00e9p t\u1ed1i \u01b0u \u0111\u1ea7u ti\u00ean, khi chuy\u1ec3n t\u1eeb \\(i\\) sang \\(i+1\\) ta g\u00e1n \\(j = \\pi[i] = j+1\\) n\u00ean \\(j\\) t\u0103ng t\u1ed1i \u0111a \\(1\\), v\u00e0 khi c\u1eadp nh\u1eadt \\(j = \\pi[j-1]\\) th\u00ec \\(j\\) gi\u1ea3m \u00edt nh\u1ea5t \\(1\\). Do \u0111\u00f3, ta ch\u1ec9 duy\u1ec7t qua \\(O(n)\\) gi\u00e1 tr\u1ecb c\u1ee7a \\(j\\) v\u00e0 m\u1ed7i l\u1ea7n thao t\u00e1c so s\u00e1nh hai k\u00fd t\u1ef1 m\u1ea5t \\(O(1)\\), \u0111\u1eabn \u0111\u1ebfn \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 \\(O(n)\\). </p>"},{"location":"algo/string/kmp/#thuat-toan-cuoi-cung","title":"Thu\u1eadt to\u00e1n cu\u1ed1i c\u00f9ng","text":"<p>T\u1ed5ng k\u1ebft l\u1ea1i, thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta ho\u1ea1t \u0111\u1ed9ng nh\u01b0 sau: </p> <ol> <li>T\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 \\(\\pi[i]\\) b\u1eb1ng c\u00e1ch duy\u1ec7t t\u1eeb \\(i = 1\\) \u0111\u1ebfn \\(i = n - 1\\) (g\u00e1n m\u1eb7c \u0111\u1ecbnh \\(\\pi[0] = 0\\)).</li> <li>Gi\u1ea3 s\u1eed \u0111\u00e3 t\u00ednh xong \\(\\pi[0], \\pi[1], \\dots, \\pi[i-1]\\). \u0110\u1ec3 t\u00ednh \\(\\pi[i]\\), ta kh\u1edfi t\u1ea1o bi\u1ebfn \\(j = \\pi[i-1]\\) mang \u00fd ngh\u0129a l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a h\u1eadu t\u1ed1 d\u00e0i nh\u1ea5t c\u1ee7a \\(i - 1\\) m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c ki\u1ec3m tra.</li> <li>Ki\u1ec3m tra li\u1ec7u h\u1eadu t\u1ed1 c\u1ee7a \\(i\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(j + 1\\) c\u0169ng kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 t\u01b0\u01a1ng \u1ee9ng hay kh\u00f4ng b\u1eb1ng c\u00e1ch so s\u00e1nh hai ch\u1eef c\u00e1i cu\u1ed1i (\\(s[j]\\) v\u00e0 \\(s[i]\\)).</li> <li>N\u1ebfu ch\u00fang b\u1eb1ng nhau, ta t\u00ecm \u0111\u01b0\u1ee3c \\(\\pi[i] = j + 1\\). N\u1ebfu kh\u00f4ng, g\u00e1n \\(j = \\pi[j-1]\\) r\u1ed3i l\u1eb7p l\u1ea1i b\u01b0\u1edbc 3. </li> <li>N\u1ebfu \\(j = 0\\) m\u00e0 v\u1eabn ch\u01b0a gh\u00e9p c\u1eb7p \u0111\u01b0\u1ee3c v\u1edbi \\(s[i]\\), ta \u0111\u1eb7t \\(\\pi[i] = 0\\) r\u1ed3i ti\u1ebfp t\u1ee5c t\u00ednh \\(\\pi[i + 1]\\). </li> </ol> <p> </p>"},{"location":"algo/string/kmp/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>C\u00e0i \u0111\u1eb7t c\u00e1c b\u01b0\u1edbc tr\u00ean r\u1ea5t ng\u1eafn v\u00e0 tr\u1ef1c quan: </p> <p><pre><code>vector&lt;int&gt; prefix_function(string s) {\n    int n = (int)s.length();\n    vector&lt;int&gt; pi(n);\n    for (int i = 1; i &lt; n; i++) {\n        int j = pi[i - 1];\n        while (j &gt; 0 &amp;&amp; s[i] != s[j])\n            j = pi[j - 1];\n        if (s[i] == s[j])\n            j++;\n        pi[i] = j;\n    }\n    return pi;\n} \n</code></pre> Code c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\) v\u00e0 s\u1eed d\u1ee5ng \\(O(n)\\) b\u1ed9 nh\u1edb.</p> <p>M\u1ed9t \u0111i\u1ec3m \u0111\u00e1ng l\u01b0u \u00fd n\u1eefa l\u00e0 \u0111\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n online: Ta c\u00f3 th\u1ec3 \u0111\u1ecdc l\u1ea7n l\u01b0\u1ee3t t\u1eebng ch\u1eef c\u00e1i c\u1ee7a x\u00e2u \\(s\\), m\u1ed7i ch\u1eef c\u00e1i m\u1edbi v\u00e0o c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd ngay l\u1eadp t\u1ee9c \u0111\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c \\(\\pi[i]\\). N\u00f3i c\u00e1ch kh\u00e1c, n\u1ebfu \u0111\u1ec1 b\u00e0i y\u00eau c\u1ea7u t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 nh\u01b0ng c\u00f3 th\u00eam truy v\u1ea5n \"th\u00eam m\u1ed9t ch\u1eef c\u00e1i v\u00e0o cu\u1ed1i x\u00e2u\" th\u00ec ta v\u1eabn c\u00f3 th\u1ec3 l\u00e0m nh\u01b0 b\u00ecnh th\u01b0\u1eddng. </p> <p>V\u1ec1 m\u1eb7t b\u1ed9 nh\u1edb, ta v\u1eabn c\u1ea7n ph\u1ea3i l\u01b0u l\u1ea1i x\u00e2u v\u00e0 gi\u00e1 tr\u1ecb c\u00e1c h\u00e0m ti\u1ec1n t\u1ed1 tr\u01b0\u1edbc \u0111\u00f3 n\u00ean v\u1eabn c\u1ea7n \u0111\u1ebfn \\(O(n)\\) b\u1ed9 nh\u1edb. Tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t l\u00e0 khi h\u00e0m ti\u1ec1n t\u1ed1 lu\u00f4n nh\u1ecf h\u01a1n m\u1ed9t h\u1eb1ng s\u1ed1 \\(M\\) n\u00e0o \u0111\u00f3, khi \u0111\u00f3 ta ch\u1ec9 c\u1ea7n l\u01b0u \\(M + 1\\) ch\u1eef c\u00e1i \u0111\u1ea7u v\u00e0 \\(M + 1\\) h\u00e0m ti\u1ec1n t\u1ed1 t\u01b0\u01a1ng \u1ee9ng c\u1ee7a x\u00e2u. Nh\u1eadn x\u00e9t n\u00e0y s\u1ebd t\u1ecf ra r\u1ea5t h\u1eefu \u00edch \u1edf c\u00e1c ph\u1ea7n sau. </p>"},{"location":"algo/string/kmp/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/string/kmp/#thuat-toan-knuth-morris-pratt-kmp","title":"Thu\u1eadt to\u00e1n Knuth-Morris-Pratt (KMP)","text":"<p>Quay tr\u1edf l\u1ea1i v\u1edbi b\u00e0i to\u00e1n ban \u0111\u1ea7u: \u0110\u1ebfm s\u1ed1 l\u1ea7n x\u00e2u \\(s\\) \u0111\u1ed9 d\u00e0i \\(n\\) xu\u1ea5t hi\u1ec7n trong x\u00e2u \\(t\\) \u0111\u1ed9 d\u00e0i \\(m\\). L\u1eddi gi\u1ea3i cho b\u00e0i to\u00e1n n\u00e0y - thu\u1eadt to\u00e1n KMP - l\u00e0 m\u1ed9t \u00e1p d\u1ee5ng kinh \u0111i\u1ec3n c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1. V\u1eady l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 d\u00f9ng h\u00e0m ti\u1ec1n t\u1ed1 khi c\u00f3 hai x\u00e2u c\u1ea7n kh\u1edbp ch\u1ee9 kh\u00f4ng ph\u1ea3i trong m\u1ed9t x\u00e2u? B\u1eb1ng c\u00e1ch g\u1ed9p ch\u00fang v\u00e0o nhau.</p> <p>Nh\u1eadn x\u00e9t r\u1eb1ng n\u1ebfu ta n\u1ed1i x\u00e2u \\(t\\) v\u00e0o sau x\u00e2u \\(s\\) v\u00e0 hai x\u00e2u \u0111\u01b0\u1ee3c ng\u0103n c\u00e1ch b\u1edfi m\u1ed9t k\u00fd t\u1ef1 \\(\\text{#}\\) kh\u00f4ng n\u1eb1m trong c\u1ea3 2 x\u00e2u (v\u00ed d\u1ee5 n\u1ebfu \\(s\\), \\(t\\) g\u1ed3m to\u00e0n ch\u1eef c\u00e1i th\u00ec c\u00f3 th\u1ec3 l\u1ea5y \\(\\text{#}\\) l\u00e0 \\(0\\), x\u00e2u m\u1edbi l\u00e0 \\(s + 0 + t\\)), th\u00ec m\u1ed7i m\u1ed9t l\u1ea7n \\(s\\) xu\u1ea5t hi\u1ec7n trong \\(t\\) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t v\u1ecb tr\u00ed \\(i\\) \u1edf x\u00e2u m\u1edbi c\u00f3 h\u00e0m ti\u1ec1n t\u1ed1 = \\(\\pi[i] = n\\). </p> <p>Thu\u1eadt to\u00e1n KMP \u0111\u1ea3m b\u1ea3o t\u00ednh \u0111\u00fang \u0111\u1eafn, v\u00ec n\u1ebfu \\(i\\) th\u1ecfa m\u00e3n \\(\\pi[i] = n\\) th\u00ec ph\u1ea3i c\u00f3 \\(i \\gt n\\) (ngh\u0129a l\u00e0 c\u00e1c gi\u00e1 tr\u1ecb \\(i\\) th\u1ecfa m\u00e3n ph\u1ea3i n\u1eb1m \u1edf n\u1eeda sau t\u1ea1o b\u1edfi \\(t\\)) v\u00e0 h\u1eadu t\u1ed1 c\u1ee7a \\(i\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(\\pi[i]\\) kh\u00f4ng th\u1ec3 \"tr\u00e0n\" sang ph\u1ea7n c\u1ee7a \\(s\\). </p> <p>Ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t KMP b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng code tr\u00ean: <code>prefix_function(s + # + t)</code> tr\u1ea3 v\u1ec1 h\u00e0m ti\u1ec1n t\u1ed1 cho \\(s + \\text{#} + t\\) v\u00e0 ta ch\u1ec9 c\u1ea7n \u0111\u1ebfm xem c\u00f3 bao nhi\u00eau ph\u1ea7n t\u1eed trong \u0111\u00f3 c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(n\\). C\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y t\u1ed1n \\(O(n + m)\\) b\u1ed9 nh\u1edb.</p> <p>Tuy nhi\u00ean, vi\u1ec7c ch\u1ecdn k\u00fd t\u1ef1 ng\u0103n c\u00e1ch l\u00e0 m\u1ed9t ch\u1eef c\u00e1i kh\u00f4ng n\u1eb1m trong c\u1ea3 hai x\u00e2u c\u00f2n d\u1eabn \u0111\u1ebfn \\(\\pi[i] \\leq n\\). Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean, ch\u1eb7n tr\u00ean n\u00e0y cho ph\u00e9p ta ch\u1ec9 l\u01b0u x\u00e2u \\(s + \\text{#}\\) v\u00e0 h\u00e0m ti\u1ec1n t\u1ed1 c\u1ee7a x\u00e2u n\u00e0y. V\u1edbi c\u00e1c v\u1ecb tr\u00ed thu\u1ed9c x\u00e2u \\(t\\) th\u00ec ta c\u00f3 th\u1ec3 t\u00ednh \\(\\pi\\) l\u1ea7n l\u01b0\u1ee3t (b\u1eb1ng c\u00e1ch l\u01b0u m\u1ed9t bi\u1ebfn \\(j\\) ch\u1ee9a gi\u00e1 tr\u1ecb \\(\\pi\\) \u1edf v\u1ecb tr\u00ed hi\u1ec7n t\u1ea1i) v\u00e0 th\u00eam \\(1\\) v\u00e0o \u0111\u00e1p \u00e1n n\u1ebfu \\(\\pi\\) t\u1ea1i v\u1ecb tr\u00ed \u0111ang x\u00e9t l\u00e0 \\(n\\): </p> <p><pre><code>vector&lt;int&gt; pi = prefix_function(s); \nint ans = 0; // S\u1ed1 l\u1ea7n s xu\u1ea5t hi\u1ec7n trong t\nint j = 0; // H\u00e0m ti\u1ec1n t\u1ed1 \u1edf v\u1ecb tr\u00ed \u0111ang x\u00e9t c\u1ee7a x\u00e2u t\n\nfor (int i = 0; i &lt; m; i++) {\n    while (j &gt; 0 &amp;&amp; t[i] != s[j])\n        j = pi[j - 1];\n    if (t[i] == s[j])\n        j++;\n    if (j == n)\n        ans++; \n}\n</code></pre> Code tr\u00ean l\u01b0u c\u1ea3 hai x\u00e2u \\(s\\), \\(t\\) n\u00ean v\u1eabn d\u00f9ng \\(O(n + m)\\) b\u1ed9 nh\u1edb, nh\u01b0ng c\u00f3 th\u1ec3 gi\u1ea3m xu\u1ed1ng c\u00f2n \\(O(n)\\) b\u1ed9 nh\u1edb n\u1ebfu ta \u0111\u1ecdc l\u1ea7n l\u01b0\u1ee3t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a \\(t\\) r\u1ed3i t\u00ednh lu\u00f4n \\(\\pi\\) thay v\u00ec l\u01b0u c\u1ea3 x\u00e2u r\u1ed3i m\u1edbi t\u00ednh.</p> <p>T\u1ed5ng k\u1ebft l\u1ea1i, thu\u1eadt to\u00e1n KMP gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n so kh\u1edbp chu\u1ed7i trong th\u1eddi gian \\(O(n + m)\\) v\u00e0 s\u1eed d\u1ee5ng \\(O(n)\\) b\u1ed9 nh\u1edb.</p>"},{"location":"algo/string/kmp/#em-so-lan-xuat-hien-cua-tung-tien-to","title":"\u0110\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a t\u1eebng ti\u1ec1n t\u1ed1","text":"<p>B\u00e0i to\u00e1n \u1ede \u0111\u00e2y ta x\u00e9t hai b\u00e0i to\u00e1n t\u01b0\u01a1ng \u0111\u1ed1i gi\u1ed1ng nhau:  Cho m\u1ed9t x\u00e2u \\(s\\) \u0111\u1ed9 d\u00e0i \\(n\\). 1. V\u1edbi m\u1ed7i \\(0 \\leq i \\lt n\\), \u0111\u1ebfm s\u1ed1 l\u1ea7n ti\u1ec1n t\u1ed1 \\(s[0 \\dots i]\\) xu\u1ea5t hi\u1ec7n trong x\u00e2u \\(s\\).  2. Thay v\u00ec \u0111\u1ebfm trong x\u00e2u \\(s\\), \u0111\u1ebfm s\u1ed1 l\u1ea7n \\(s[0 \\dots i]\\) xu\u1ea5t hi\u1ec7n trong m\u1ed9t x\u00e2u \\(t\\) kh\u00e1c c\u00f3 \u0111\u1ed9 d\u00e0i \\(m\\). </p> <p>L\u1eddi gi\u1ea3i Tr\u01b0\u1edbc ti\u00ean, ta gi\u1ea3i phi\u00ean b\u1ea3n 1.  X\u00e9t gi\u00e1 tr\u1ecb c\u1ee7a \\(\\pi[i]\\) t\u1ea1i v\u1ecb tr\u00ed \\(i\\). D\u1ef1a v\u00e0o \u0111\u1ecbnh ngh\u0129a c\u1ee7a \\(\\pi\\), m\u1ed9t trong c\u00e1c h\u1eadu t\u1ed1 c\u1ee7a \\(s[0 \\dots i]\\) l\u00e0 ti\u1ec1n t\u1ed1 \\(s[0 \\dots \\pi[i]-1]\\). \\(\\pi[i]\\) l\u1edbn nh\u1ea5t n\u00ean kh\u00f4ng th\u1ec3 c\u00f3 ti\u1ec1n t\u1ed1 n\u00e0o d\u00e0i h\u01a1n m\u00e0 c\u0169ng kh\u1edbp v\u1edbi m\u1ed9t h\u1eadu t\u1ed1 c\u1ee7a \\(s[0 \\dots i]\\), nh\u01b0ng c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t s\u1ed1 ti\u1ec1n t\u1ed1 ng\u1eafn h\u01a1n th\u1ecfa m\u00e3n.</p> <p>\u00dd t\u01b0\u1edfng l\u00e0 duy\u1ec7t qua m\u1ed7i \\(i\\) v\u00e0 ki\u1ec3m so\u00e1t xem s\u1ed1 l\u1ea7n c\u00e1c ti\u1ec1n t\u1ed1 \\(s[0 \\dots 0], s[0 \\dots 1], \\dots, s[0 \\dots i]\\) xu\u1ea5t hi\u1ec7n thay \u0111\u1ed5i nh\u01b0 th\u1ebf n\u00e0o. X\u00e9t c\u00e1c h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i\\) m\u00e0 kh\u1edbp v\u1edbi ti\u1ec1n t\u1ed1 c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i, khi \u0111\u00f3 ta \u0111\u01a1n gi\u1ea3n c\u1ed9ng m\u1ed9t v\u00e0o s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a c\u00e1c ti\u1ec1n t\u1ed1 n\u00e0y. </p> <p>Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf ph\u1ea7n thu\u1eadt to\u00e1n cu\u1ed1i c\u00f9ng, \u0111\u1ed9 d\u00e0i c\u00e1c ti\u1ec1n t\u1ed1 m\u00e0 c\u0169ng l\u00e0 h\u1eadu t\u1ed1 k\u1ebft th\u00fac \u1edf \\(i\\) t\u1eeb l\u1edbn \u0111\u1ebfn b\u00e9 l\u00e0 \\(\\pi[i]\\), \\(\\pi[\\pi[i] - 1]\\), \\(\\pi[\\pi[\\pi[i] - 1] - 1], \\dots\\) Ta duy\u1ec7t qua l\u1ea7n l\u01b0\u1ee3t t\u1eebng ti\u1ec1n t\u1ed1 n\u00e0y r\u1ed3i c\u1ed9ng \\(1\\) v\u00e0o \u0111\u00e1p \u00e1n cho ti\u1ec1n t\u1ed1 \u0111\u00f3 (\u0111\u00e1p \u00e1n cho ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(i\\) l\u00e0 \\(ans[i-1]\\)), th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(n^2)\\): </p> <p><pre><code>vector&lt;int&gt; ans(n, 0); \nfor (int i = 0; i &lt; n; i++) {\n    for (int j = i; pi[j]; j = pi[j] - 1) {\n        ans[j]++; \n        if (!pi[j]) {\n            break; \n        }\n    }\n}\n</code></pre> Thu\u1eadt to\u00e1n tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u1edbn do m\u1ed7i ti\u1ec1n t\u1ed1 ta ph\u1ea3i duy\u1ec7t qua nhi\u1ec1u l\u1ea7n. \u0110\u1ec3 kh\u1eafc ph\u1ee5c \u0111i\u1ec1u n\u00e0y, ta s\u1ebd d\u00f9ng \u00fd t\u01b0\u1edfng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 m\u1ea3ng c\u1ed9ng d\u1ed3n. </p> <p>\u0110\u1ec3 \u00fd r\u1eb1ng n\u1ebfu ta x\u00e9t \u0111\u1ed3 th\u1ecb cho \\(n + 1\\) \u0111\u1ec9nh \\(0, 1, 2, \\dots, n\\), trong \u0111\u00f3 \u0111\u1ec9nh \\(i ~ (i \\leq 1)\\) \u1ee9ng v\u1edbi ti\u1ec1n t\u1ed1 th\u1ee9 \\(i\\), v\u00e0 c\u00f3 c\u00e1c c\u1ea1nh n\u1ed1i t\u1eeb \\(i + 1\\) \u0111\u1ebfn \\(\\pi[i]\\) v\u1edbi m\u1ecdi \\(i\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(n - 1\\), th\u00ec \u0111\u1ed3 th\u1ecb n\u00e0y l\u00e0 m\u1ed9t c\u00e2y c\u00f3 h\u01b0\u1edbng. </p> <p>V\u00ed d\u1ee5: v\u1edbi x\u00e2u \"\\(abcabcd\\)\", ta c\u00f3 h\u00e0m ti\u1ec1n t\u1ed1 \\([0, 1, 0, 1, 2, 2, 3]\\), t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c c\u1ea1nh \\((1, 0), (2, 1), (3, 0), (4, 1), (5, 2), (6, 2), (7, 3)\\) c\u1ee7a c\u00e2y:   <p> </p> <p>\u00dd t\u01b0\u1edfng n\u00e0y ph\u1ea7n n\u00e0o gi\u00fap ch\u00fang ta d\u1ec5 h\u00ecnh dung h\u01a1n c\u00e1ch gi\u1ea3i: vi\u1ec7c t\u00ednh \\(ans\\) \u0111\u01b0a v\u1ec1 b\u00e0i to\u00e1n c\u1eadp nh\u1eadt truy v\u1ea5n c\u1ed9ng \\(1\\) v\u00e0o c\u00e1c n\u00fat tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb m\u1ed9t n\u00fat \u0111\u1ebfn g\u1ed1c v\u00e0 t\u00ecm gi\u00e1 tr\u1ecb t\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c n\u00fat sau m\u1ecdi truy v\u1ea5n - m\u1ed9t b\u00e0i to\u00e1n c\u00f3 c\u00e1ch gi\u1ea3i d\u00f9ng m\u1ea3ng c\u1ed9ng d\u1ed3n.</p> <p>Gi\u1ea3 s\u1eed c\u1ea7n c\u1ed9ng \\(1\\) v\u00e0o c\u00e1c gi\u00e1 tr\u1ecb \\(ans[i], ans[\\pi[i]-1]\\), \\(ans[\\pi[\\pi[i] - 1]-1]\\),... Thay v\u00ec duy\u1ec7t qua t\u1eebng gi\u00e1 tr\u1ecb m\u1ed9t ta ch\u1ec9 g\u00e1n \\(ans[i] = 1\\). Sau \u0111\u00f3, duy\u1ec7t gi\u1ea3m d\u1ea7n t\u1eeb \\(n-1\\) v\u1ec1 \\(0\\), khi duy\u1ec7t \u0111\u1ebfn \\(i\\) th\u00ec c\u1ed9ng \\(ans[i]\\) v\u00e0o \\(ans[\\pi[i]-1]\\) khi duy\u1ec7t \u0111\u1ebfn \\(\\pi[i]-1\\) th\u00ec c\u1ed9ng \\(ans[\\pi[i]-1]\\) v\u00e0o \\(ans[\\pi[\\pi[i]-1]]\\), khi duy\u1ec7t \u0111\u1ebfn \\(\\pi[\\pi[i]-1]\\) th\u00ec c\u1ed9ng \\(ans[\\pi[\\pi[i]-1]]\\) v\u00e0o \\(ans[\\pi[\\pi[\\pi[i]-1]-1]]\\),... \u0110\u1ebfn khi duy\u1ec7t xong th\u00ec gi\u00e1 tr\u1ecb c\u1ee7a \\(ans[\\pi[i]]\\), \\(ans[\\pi[\\pi[i] - 1]]\\),... \u0111\u1ec1u l\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u1ed9ng th\u00eam 1. </p> <p>Do ta duy\u1ec7t qua m\u1ed7i ph\u1ea7n t\u1eed \u0111\u00fang m\u1ed9t l\u1ea7n v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 l\u00e0 \\(O(n)\\), t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt ch\u1ec9 c\u00f2n l\u00e0 \\(O(n)\\).</p> <pre><code>vector&lt;int&gt; ans(n, 1); \nfor (int i = n - 1; i &gt; 0; i--)\n    if (pi[i])\n        ans[pi[i] - 1] += ans[i];\n</code></pre> <p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft phi\u00ean b\u1ea3n th\u1ee9 2, ta ch\u1ec9 c\u1ea7n \u00e1p d\u1ee5ng k\u1ef9 thu\u1eadt \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf thu\u1eadt to\u00e1n KMP: n\u1ed1i hai x\u00e2u \u0111\u1ec3 t\u1ea1o x\u00e2u m\u1edbi \\(s + \\text{#} + t\\) v\u00e0 x\u00e2y d\u1ef1ng h\u00e0m ti\u1ec1n t\u1ed1 cho x\u00e2u n\u00e0y. Sau \u0111\u00f3, t\u00ecm \\(ans\\) t\u01b0\u01a1ng t\u1ef1 nh\u01b0 phi\u00ean b\u1ea3n 1, \u0111\u00e1p \u00e1n l\u00e0 \\(ans\\) c\u1ee7a c\u00e1c v\u1ecb tr\u00ed \\(i\\) thu\u1ed9c v\u1ec1 x\u00e2u \\(t\\) (\\(i \\ge n + 1\\)). </p>"},{"location":"algo/string/kmp/#em-so-xau-con-phan-biet-trong-mot-xau","title":"\u0110\u1ebfm s\u1ed1 x\u00e2u con ph\u00e2n bi\u1ec7t trong m\u1ed9t x\u00e2u","text":"<p>B\u00e0i to\u00e1n Cho m\u1ed9t x\u00e2u \\(s\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\). \u0110\u1ebfm s\u1ed1 x\u00e2u con ph\u00e2n bi\u1ec7t c\u1ee7a \\(s\\). </p> <p>L\u1eddi gi\u1ea3i H\u01b0\u1edbng l\u00e0m c\u1ee7a ch\u00fang ta l\u00e0 b\u1eaft \u0111\u1ea7u v\u1edbi x\u00e2u r\u1ed7ng, r\u1ed3i m\u1edf r\u1ed9ng x\u00e2u b\u1eb1ng c\u00e1ch th\u00eam l\u1ea7n l\u01b0\u1ee3t \\(s[0], s[1], \\dots, s[n-1]\\) v\u00e0o cu\u1ed1i x\u00e2u, \u0111\u1ed3ng th\u1eddi c\u1eadp nh\u1eadt s\u1ed1 x\u00e2u con ph\u00e2n bi\u1ec7t hi\u1ec7n t\u1ea1i. Sau khi \u0111\u00e3 th\u00eam \u0111\u1ee7 \\(n\\) k\u00fd t\u1ef1 \\(s[i]\\), ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c s\u1ed1 x\u00e2u con ph\u00e2n bi\u1ec7t c\u1ee7a x\u00e2u ban \u0111\u1ea7u. </p> <p>M\u1ed7i l\u1ea7n th\u00eam k\u00fd t\u1ef1 \\(s[i]\\) ta s\u1ebd c\u00f3 th\u00eam \\(i\\) x\u00e2u m\u1edbi l\u00e0 \\(s[0 \\dots i], s[1 \\dots i], \\dots s[i \\dots i]\\), nh\u01b0ng ta ch\u1ec9 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o \u0111\u00e1p \u00e1n c\u00e1c x\u00e2u kh\u00f4ng n\u1eb1m trong x\u00e2u tr\u01b0\u1edbc khi th\u00eam \\(s[i]\\) (hay n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 kh\u00f4ng n\u1eb1m trong \\(s[0 \\dots i - 1]\\)). L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 \u0111\u1ebfm nhanh s\u1ed1 x\u00e2u kh\u00f4ng l\u1eb7p n\u00e0y? M\u1ed9t l\u1ea7n n\u1eefa ta s\u1eed d\u1ee5ng h\u00e0m ti\u1ec1n t\u1ed1. </p> <p>G\u1ecdi x\u00e2u c\u00f3 \u0111\u01b0\u1ee3c sau khi th\u00eam \\(s[i]\\) v\u00e0o cu\u1ed1i l\u00e0 \\(t\\). Nh\u1eadn x\u00e9t l\u00e0 n\u1ebfu ta \u0111\u1ea3o ng\u01b0\u1ee3c x\u00e2u \\(t\\) th\u00ec s\u1ed1 x\u00e2u b\u1ecb l\u1eb7p ch\u00ednh l\u00e0 s\u1ed1 ti\u1ec1n t\u1ed1 c\u1ee7a \\(t\\) kh\u1edbp v\u1edbi m\u1ed9t x\u00e2u con n\u00e0o \u0111\u00f3 c\u1ee7a \\(t\\). N\u1ebfu ta t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 \\(\\pi\\) tr\u00ean x\u00e2u \\(t\\) b\u1ecb \u0111\u1ea3o ng\u01b0\u1ee3c, th\u00ec s\u1ed1 x\u00e2u b\u1ecb l\u1eb7p n\u00e0y ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t \\(\\pi_{max}\\) c\u1ee7a \\(\\pi\\) v\u00ec:</p> <ul> <li>\\(s[i - \\pi_{max} \\dots i]\\) kh\u1edbp v\u1edbi m\u1ed9t x\u00e2u trong \\(t\\) kh\u00f4ng ph\u1ea3i ch\u00ednh n\u00f3 (theo \u0111\u1ecbnh ngh\u0129a h\u00e0m ti\u1ec1n t\u1ed1) n\u00ean n\u00f3 b\u1ecb l\u1eb7p, d\u1eabn c\u00e1c x\u00e2u \\(s[i - \\pi_{max} + 1], \\dots, s[i - 1 \\dots i], s[i \\dots i]\\) c\u0169ng b\u1ecb l\u1eb7p.  </li> <li>C\u00e1c x\u00e2u \\(s[j \\dots i] ~ (j \\leq i)\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn h\u01a1n \\(\\pi_{max}\\) ch\u1eafc ch\u1eafn kh\u00f4ng l\u1eb7p v\u00ec n\u1ebfu c\u00f3 th\u00ec \\(\\pi_{max}\\) s\u1ebd kh\u00f4ng ph\u1ea3i gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a \\(\\pi\\). </li> </ul> <p>V\u1eady s\u1ed1 x\u00e2u m\u1edbi b\u1ecb l\u1eb7p v\u1edbi m\u1ed9t x\u00e2u con c\u00f3 tr\u01b0\u1edbc l\u00e0 \\(\\pi_{max}\\), d\u1eabn \u0111\u1ebfn s\u1ed1 x\u00e2u c\u1ea7n th\u00eam v\u00e0o \u0111\u00e1p \u00e1n l\u00e0 \\(i - \\pi_{max}\\) (Do c\u00f3 \\(i\\) x\u00e2u m\u1edbi). T\u00ednh \\(\\pi_{max}\\) v\u1edbi m\u1ed7i \\(i\\) h\u1ebft \\(O(i)\\) n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(n^2)\\). </p> <p>Ngo\u00e0i ra, thay v\u00ec m\u1ed7i b\u01b0\u1edbc c\u1eadp nh\u1eadt k\u1ebft qu\u1ea3 sau khi th\u00eam m\u1ed9t ch\u1eef c\u00e1i v\u00e0o cu\u1ed1i x\u00e2u hi\u1ec7n t\u1ea1i, ta c\u0169ng c\u00f3 th\u1ec3 th\u00eam m\u1ed9t ch\u1eef v\u00e0o \u0111\u1ea7u x\u00e2u hi\u1ec7n t\u1ea1i, ho\u1eb7c b\u1eaft \u0111\u1ea7u v\u1edbi x\u00e2u ho\u00e0n ch\u1ec9nh v\u00e0 m\u1ed7i b\u01b0\u1edbc b\u1ecf \u0111i ch\u1eef c\u00e1i \u0111\u1ea7u (ho\u1eb7c cu\u1ed1i). \u0110\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\) c\u0169ng ch\u01b0a ph\u1ea3i l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1t nh\u1ea5t - ta c\u00f3 th\u1ec3 \u0111\u1ebfm s\u1ed1 x\u00e2u con c\u1ee7a m\u1ed9t x\u00e2u trong \\(O(n)\\) ho\u1eb7c \\(O(n \\log n)\\) nh\u1edd m\u1ea3ng h\u1eadu t\u1ed1 (Suffix Array). </p>"},{"location":"algo/string/kmp/#nen-xau","title":"N\u00e9n x\u00e2u","text":"<p>B\u00e0i to\u00e1n Cho m\u1ed9t x\u00e2u \\(s\\) \u0111\u1ed9 d\u00e0i \\(n\\). T\u00ecm x\u00e2u \\(t\\) c\u00f3 \u0111\u1ed9 d\u00e0i nh\u1ecf nh\u1ea5t sao cho c\u00f3 th\u1ec3 t\u1ea1o \u0111\u01b0\u1ee3c x\u00e2u \\(s\\) b\u1eb1ng c\u00e1ch l\u1eb7p l\u1ea1i x\u00e2u \\(t\\) h\u1eefu h\u1ea1n l\u1ea7n. </p> <p>L\u1eddi gi\u1ea3i Tr\u01b0\u1edbc ti\u00ean, nh\u1eadn x\u00e9t l\u00e0 ch\u00fang ta ch\u1ec9 c\u1ea7n t\u00ecm \u0111\u1ed9 d\u00e0i c\u1ee7a \\(t\\), v\u00ec khi \u0111\u00f3 \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n s\u1ebd l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(s\\) c\u00f3 \u0111\u1ed9 d\u00e0i n\u00e0y. </p> <p>Gi\u1ea3 s\u1eed ta c\u1ed1 \u0111\u1ecbnh \u0111\u1ed9 d\u00e0i c\u1ee7a \\(t\\) l\u00e0 \\(l\\) (ch\u1ec9 x\u00e9t \\(l\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\)) th\u00ec khi \u0111\u00f3 b\u00e0i to\u00e1n \u0111\u01b0a v\u1ec1 ki\u1ec3m tra \\(s[0 \\dots l - 1] = s[l \\dots 2l-1] = \\dots = s[n - l, n - 1]\\) \\((*)\\) c\u00f3 \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n hay kh\u00f4ng. </p> <p>N\u1ebfu ta d\u00f9ng th\u1eb3ng \u0111i\u1ec1u ki\u1ec7n \\((*)\\)), v\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb c\u1ee7a \\(l\\) ki\u1ec3m tra s\u1ebd c\u1ea7n duy\u1ec7t qua \\(O( \\frac{n}{l})\\) c\u1eb7p x\u00e2u li\u1ec1n k\u1ec1, m\u1ed7i c\u1eb7p ki\u1ec3m tra xem ch\u00fang b\u1eb1ng nhau kh\u00f4ng m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(l)\\), n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111\u1ec3 ki\u1ec3m tra khi c\u1ed1 \u0111\u1ecbnh \\(l\\) l\u00e0 \\(O( \\frac{n}{l}) * O(l) = O(n)\\). \\(l\\) ch\u1ec9 c\u00f3 th\u1ec3 nh\u1eadn \\(O(n^{\\frac{1}{3}})\\) gi\u00e1 tr\u1ecb kh\u00e1c nhau do l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\), d\u1eabn t\u1edbi t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n^{\\frac{4}{3}})\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y l\u00e0 \u0111\u1ee7 t\u1ed1t \u0111\u1ec3 AC v\u1edbi \\(n \\leq 10^5\\), nh\u01b0ng ta c\u00f3 th\u1ec3 d\u00f9ng h\u00e0m ti\u1ec1n t\u1ed1 \u0111\u1ec3 l\u00e0m t\u1ed1t h\u01a1n. </p> <p>Ch\u00eca kh\u00f3a \u1edf \u0111\u00e2y l\u00e0 thay \u0111\u1ed5i c\u00e1ch vi\u1ebft \\((*)\\) th\u00e0nh: </p> \\[s[0 \\dots l - 1] = s[l \\dots 2l-1] \\\\ s[l \\dots 2l-1] = s[2l \\dots 3l-1] \\\\ \\dots \\\\ s[n - 2l \\dots n-l-1]= s[n - l, n - 1]\\] <p>R\u1ed3i g\u1ed9p c\u00e1c x\u00e2u \u1edf c\u00e1c v\u1ebf tr\u00e1i th\u00e0nh m\u1ed9t, g\u1ed9p c\u00e1c x\u00e2u \u1edf c\u00e1c v\u1ebf ph\u1ea3i th\u00e0nh m\u1ed9t, ta thu \u0111\u01b0\u1ee3c: </p> \\[s[0 \\dots n-l-1] = s[l \\dots n-1]\\] <p>Hay n\u00f3i c\u00e1ch kh\u00e1c, \\(l\\) ph\u1ea3i th\u1ecfa m\u00e3n ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(n-l\\) kh\u1edbp v\u1edbi h\u1eadu t\u1ed1 c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i c\u1ee7a x\u00e2u. Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n r\u00fat g\u1ecdn n\u00e0y l\u00e0 \u0111\u1ee7 v\u00ec t\u1eeb n\u00f3 ta c\u00f3 th\u1ec3 suy ng\u01b0\u1ee3c l\u1ea1i ra \u0111i\u1ec1u ki\u1ec7n \\((*)\\). \u00c1p d\u1ee5ng h\u00e0m ti\u1ec1n t\u1ed1: C\u00e1c ti\u1ec1n t\u1ed1 m\u00e0 c\u0169ng l\u00e0 h\u1eadu t\u1ed1 k\u1ebft th\u00fac t\u1ea1i \\(n-1\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(\\pi[n-1], \\pi[\\pi[n-1]-1], \\pi[\\pi[\\pi[n-1]-1] - 1], \\dots\\), duy\u1ec7t qua t\u1eebng \u0111\u1ed9 d\u00e0i n\u00e0y v\u00e0 d\u1eebng l\u1ea1i khi c\u00f3 m\u1ed9t \u0111\u1ed9 d\u00e0i \\(l\\) th\u1ecfa m\u00e3n \\(n\\) chia h\u1ebft cho \\(n - l\\), khi \u0111\u00f3 \u0111\u00e1p \u00e1n s\u1ebd l\u00e0 \\(n - l\\). N\u1ebfu kh\u00f4ng c\u00f3 \u0111\u1ed9 d\u00e0i n\u00e0o th\u1ecfa m\u00e3n, \u0111\u00e1p \u00e1n khi \u0111\u00f3 l\u00e0 \\(n\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt ch\u1ec9 l\u00e0 \\(O(n)\\). </p> <p>Th\u1eadm ch\u00ed ta ch\u1ec9 c\u1ea7n ki\u1ec3m tra cho ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(\\pi[n-1]\\) l\u00e0 \u0111\u1ee7: n\u1ebfu \\(k = n - \\pi[n-1]\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\) th\u00ec \u0111\u00f3 ch\u00ednh l\u00e0 \u0111\u00e1p \u00e1n, n\u1ebfu kh\u00f4ng th\u00ec \u0111\u00e1p \u00e1n l\u00e0 \\(n\\). Ch\u1ee9ng minh:  - N\u1ebfu \\(n\\) chia h\u1ebft cho \\(k\\), do \\(\\pi[n-1]\\) l\u00e0 ti\u1ec1n t\u1ed1 d\u00e0i nh\u1ea5t c\u0169ng l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a x\u00e2u, \\(k\\) l\u00e0 \u0111\u1ed9 d\u00e0i ng\u1eafn nh\u1ea5t th\u1ecfa m\u00e3n.  - N\u1ebfu \\(n\\) kh\u00f4ng chia h\u1ebft cho \\(k\\), gi\u1ea3 s\u1eed ph\u1ea3n ch\u1ee9ng t\u1ed3n t\u1ea1i \\(p \\lt n\\) sao cho n\u00e9n \u0111\u01b0\u1ee3c x\u00e2u \\(s\\) th\u00e0nh ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(p\\) c\u1ee7a x\u00e2u. Khi \u0111\u00f3 ta c\u00f3 \\(\\pi[n-1]\\) &gt; \\(n-p\\), d\u1eabn \u0111\u1ebfn h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(\\pi[n-1]\\) c\u1ee7a x\u00e2u s\u1ebd ch\u1ee9a m\u1ed9t ph\u1ea7n c\u1ee7a \\(s[0 \\dots p-1]\\). </p> <p>X\u00e9t x\u00e2u \\(s[k \\dots (k+p-1)]\\). Do ti\u1ec1n t\u1ed1 v\u00e0 h\u1eadu \u0111\u1ed9 d\u00e0i \\(\\pi[n-1]\\) b\u1eb1ng nhau, \\(s[k \\dots (k+p-1)] = s[0 \\dots p-1]\\), so s\u00e1nh t\u1eebng c\u1eb7p ch\u1eef c\u00e1i t\u01b0\u01a1ng \u1ee9ng c\u1ee7a hai x\u00e2u n\u00e0y, ta r\u00fat ra \\(s_i = s_{(i+k) \\mod p} ~ \\forall ~ 0 \\leq i \\lt p\\). </p> <p>\u0110\u1eb7t \\(d = \\gcd(k,p)\\), \u0111i\u1ec1u ki\u1ec7n tr\u00ean khi \u0111\u00f3 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \\(s_i = s_{(i+d) \\mod p} ~ \\forall ~ 0 \\leq i \\lt p\\), ngh\u0129a l\u00e0 \\(s[0 \\dots d-1]\\) l\u00e0 m\u1ed9t x\u00e2u n\u00e9n c\u1ee7a \\(s[0 \\dots p-1]\\). Do \\(d \\leq k \\lt p\\), \\(s[0 \\dots d-1]\\) l\u00e0 m\u1ed9t x\u00e2u n\u00e9n c\u1ee7a \\(s\\) c\u00f3 \u0111\u1ed9 d\u00e0i nh\u1ecf h\u01a1n \\(p\\), m\u00e2u thu\u1eabn v\u1edbi c\u00e1ch ch\u1ecdn \\(p\\) l\u00e0 x\u00e2u n\u00e9n nh\u1ecf nh\u1ea5t. Ta c\u00f3 \u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh.</p> <p>V\u00ed d\u1ee5 minh h\u1ecda:</p> \\[\\overbrace{s_0 ~ s_1 ~ s_2 ~ s_3 ~ s_4}^p ~ \\overbrace{s_0 ~ s_1 ~ s_2 ~ s_3 ~ s_4}^p ~ \\overbrace{s_{0} ~ s_{1} ~ s_{2} ~ s_{3} ~ s_{4}}^p\\] \\[\\underbrace{s_0 ~ s_1}_k ~ \\rlap{\\underbrace{\\phantom{s_2 ~ s_3 ~ s_4 ~ s_5 ~ s_6 s_7 ~ s_8 ~ s_9 ~ s_{0} ~ s_{1} ~ s_{2} ~ s_{3} ~ s_{4}}}_{\\pi[15]=13}} \\overbrace{s_2 ~ s_3 ~ s_4 ~ s_0 ~ s_1}^p ~ s_2 ~ s_3 ~ s_4 ~ s_{0} ~ s_{1} ~ s_{2} ~ s_{3} ~ s_{4}\\] \\[s_0 = s_2, s_1 = s_3, s_2 = s_4, s_3 = s_0, s_4 = s_1 \\\\ \\Rightarrow s_0 = s_1 = s_2 = s_3 = s_4  \\\\ \\Rightarrow s_0 ~ \\text{n\u00e9n \u0111\u01b0\u1ee3c } s\\]"},{"location":"algo/string/kmp/#tao-automaton-tu-ham-tien-to","title":"T\u1ea1o automaton t\u1eeb h\u00e0m ti\u1ec1n t\u1ed1","text":"<p>M\u1ed9t k\u1ef9 thu\u1eadt \u0111\u1eb7c tr\u01b0ng \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf c\u00e1c b\u00e0i n\u00eau tr\u00ean l\u00e0: gh\u00e9p hai x\u00e2u \\(s, t\\) v\u00e0o nhau b\u1eb1ng m\u1ed9t k\u00fd t\u1ef1 ng\u0103n c\u00e1ch \\(\\text{#}\\) kh\u00f4ng n\u1eb1m trong \\(s\\) ho\u1eb7c \\(t\\), r\u1ed3i t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 cho x\u00e2u \\(s + \\text{#} + t\\) n\u00e0y.  Vi\u1ec7c \\(\\text{#}\\) l\u00e0 k\u00fd t\u1ef1 kh\u00f4ng n\u1eb1m trong c\u1ea3 hai x\u00e2u d\u1eabn t\u1edbi \\(\\pi[i]\\) kh\u00f4ng th\u1ec3 v\u01b0\u1ee3t qu\u00e1 \\(\\lvert s \\rvert\\) v\u1edbi m\u1ecdi \\(i\\), qua \u0111\u00f3 cho ph\u00e9p ch\u00fang ta ch\u1ec9 c\u1ea7n l\u01b0u x\u00e2u \\(s + \\text{#}\\) v\u00e0 c\u00e1c gi\u00e1 tr\u1ecb \\(\\pi\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi x\u00e2u n\u00e0y.</p> \\[\\underbrace{s_0 ~ s_1 ~ \\dots ~ s_{n-1} ~ \\#}_{\\text{c\u1ea7n l\u01b0u}} ~ \\underbrace{t_0 ~ t_1 ~ \\dots ~ t_{m-1}}_{\\text{kh\u00f4ng c\u1ea7n l\u01b0u}}\\] <p>\u0110\u1ec3 t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 cho c\u00e1c ch\u1eef c\u00e1i sau \u0111\u00f3, ta ch\u1ec9 c\u1ea7n bi\u1ebft ch\u1eef c\u00e1i ti\u1ebfp theo \\(c\\) trong x\u00e2u \\(t\\) v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1 \u1edf v\u1ecb tr\u00ed tr\u01b0\u1edbc m\u00e0 kh\u00f4ng c\u1ea7n l\u01b0u l\u1ea1i c\u1ea3 x\u00e2u \\(t\\). </p> <p>N\u00f3i c\u00e1ch kh\u00e1c, ta c\u00f3 th\u1ec3 d\u1ef1ng m\u1ed9t automaton (m\u00e1y h\u1eefu h\u1ea1n tr\u1ea1ng th\u00e1i), trong \u0111\u00f3 c\u00e1c tr\u1ea1ng th\u00e1i l\u00e0 c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 c\u1ee7a h\u00e0m ti\u1ec1n t\u1ed1 hi\u1ec7n t\u1ea1i (t\u1eeb \\(0\\) \u0111\u1ebfn \\(\\lvert s \\rvert\\)), v\u00e0 c\u00e1c b\u01b0\u1edbc chuy\u1ec3n tr\u1ea1ng th\u00e1i l\u00e0 c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 c\u1ee7a ch\u1eef c\u00e1i ti\u1ebfp theo. </p> <p>Do \u0111\u00f3, k\u1ec3 c\u1ea3 khi kh\u00f4ng c\u00f3 x\u00e2u \\(t\\) th\u00ec ta v\u1eabn c\u00f3 th\u1ec3 t\u00ednh ma tr\u1eadn chuy\u1ec3n tr\u1ea1ng th\u00e1i \\((\\text{old} _\\pi, c) \\rightarrow \\text{new} _\\pi\\) t\u01b0\u01a1ng t\u1ef1 nh\u01b0 khi ta t\u00ecm \\(\\pi[i]\\) hi\u1ec7n t\u1ea1i, ch\u1ec9 l\u00e0 \u1edf v\u1ecb tr\u00ed \\(i\\) c\u00f3 th\u1ec3 l\u00e0 b\u1ea5t k\u1ef3 k\u00fd t\u1ef1 n\u00e0o trong b\u1ea3ng ch\u1eef c\u00e1i:</p> <pre><code>void compute_automaton(string s, vector&lt;vector&lt;int&gt; &gt;&amp; aut) {\n    s += '#';\n    int n = s.size();\n    vector&lt;int&gt; pi = prefix_function(s);\n    aut.assign(n, vector&lt;int&gt;(26));\n    for (int i = 0; i &lt; n; i++) {\n        for (int c = 0; c &lt; 26; c++) {\n            int j = i;\n            while (j &gt; 0 &amp;&amp; 'a' + c != s[j])\n                j = pi[j - 1];\n            if ('a' + c == s[j])\n                j++;\n            aut[i][c] = j;\n        }\n    }\n}\n</code></pre> <p>\u0110\u1ed1i v\u1edbi b\u1ea3ng ch\u1eef c\u00e1i ti\u1ebfng Anh kh\u00f4ng hoa (26 ch\u1eef c\u00e1i), \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean l\u00e0 \\(O(n^2 * 26)\\). </p> <p>M\u1ed9t l\u1ea7n n\u1eefa, l\u00fd do \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt l\u1edbn l\u00e0 v\u00ec ch\u01b0a t\u1eadn d\u1ee5ng c\u00e1c th\u00f4ng tin \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u0111\u00f3. Do \u0111\u00f3 ta t\u1ed1i \u01b0u b\u1eb1ng quy ho\u1ea1ch \u0111\u1ed9ng: Khi ch\u00fang ta g\u00e1n \\(j\\) b\u1eb1ng \\(\\pi[j-1]\\), b\u01b0\u1edbc chuy\u1ec3n \\((j, c)\\) d\u1eabn \u0111\u1ebfn c\u0169ng tr\u1ea1ng th\u00e1i v\u1edbi b\u01b0\u1edbc chuy\u1ec3n \\((\\pi[j-1], c)\\), v\u00e0 tr\u1ea1ng th\u00e1i \u1ee9ng v\u1edbi \\((\\pi[j-1], c)\\) th\u00ec \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u0111\u00f3, n\u00ean v\u1edbi m\u1ed7i c\u1eb7p \\((j, c)\\) ta t\u00ednh \u0111\u01b0\u1ee3c trong \\(O(1)\\) v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng ch\u1ec9 l\u00e0 \\(O(n * 26)\\). </p> <pre><code>void compute_automaton(string s, vector&lt;vector&lt;int&gt; &gt;&amp; aut) {\n    s += '#';\n    int n = s.size();\n    vector&lt;int&gt; pi = prefix_function(s);\n    aut.assign(n, vector&lt;int&gt;(26));\n    for (int i = 0; i &lt; n; i++) {\n        for (int c = 0; c &lt; 26; c++) {\n            if (i &gt; 0 &amp;&amp; 'a' + c != s[i])\n                aut[i][c] = aut[pi[i - 1]][c];\n            else\n                aut[i][c] = i + ('a' + c == s[i]);\n        }\n    }\n}\n</code></pre> <p>V\u1eady th\u00ec t\u1ea1i sao x\u00e2y m\u1ed9t automaton nh\u01b0 v\u1eady l\u1ea1i h\u1eefu \u00edch? </p> <p>Tr\u01b0\u1edbc ti\u00ean, ta c\u1ea7n hi\u1ec3u m\u1ee5c \u0111\u00edch ch\u00ednh c\u1ee7a vi\u1ec7c t\u1ea1o x\u00e2u \\(s + \\text{#} + t\\) l\u00e0 \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 l\u1ea7n x\u00e2u \\(s\\) xu\u1ea5t hi\u1ec7n trong x\u00e2u \\(t\\). </p> <p>Do \u0111\u00f3, l\u1ee3i \u00edch g\u1ea7n nh\u1ea5t c\u1ee7a automaton n\u00e0y l\u00e0 t\u0103ng t\u1ed1c \u0111\u1ed9 t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 cho x\u00e2u \\(s + \\text{#} + t\\). Nh\u1edd c\u00f3 automaton m\u00e0 ta kh\u00f4ng c\u1ea7n l\u01b0u l\u1ea1i x\u00e2u \\(s\\) v\u00e0 h\u00e0m ti\u1ec1n t\u1ed1 \\(\\pi\\), v\u00ec m\u1ecdi b\u01b0\u1edbc chuy\u1ec3n tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh trong ma tr\u1eadn. </p> <p>Nh\u01b0ng c\u00f2n c\u00f3 m\u1ed9t \u1ee9ng d\u1ee5ng kh\u00e1c, \u00edt hi\u1ec3n nhi\u00ean h\u01a1n c\u1ee7a automaton: gi\u1ea3i b\u00e0i to\u00e1n so kh\u1edbp chu\u1ed7i khi \\(t\\) l\u00e0 m\u1ed9t x\u00e2u c\u1ef1c \u0111\u1ea1i \u0111\u01b0\u1ee3c x\u00e2y theo m\u1ed9t quy t\u1eafc n\u00e0o \u0111\u00f3. V\u00ed d\u1ee5, x\u00e2u \\(t\\) c\u00f3 th\u1ec3 l\u00e0 c\u00e1c x\u00e2u Gray (\u0111\u1ecbnh ngh\u0129a \u1edf d\u01b0\u1edbi), ho\u1eb7c m\u1ed9t x\u00e2u \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a theo m\u1ed9t c\u00f4ng th\u1ee9c \u0111\u1ec7 quy d\u1ef1a v\u00e0o c\u00e1c x\u00e2u \u0111\u1ea7u v\u00e0o. \u0110\u1ec3 minh h\u1ecda c\u1ee5 th\u1ec3 h\u01a1n, ta x\u00e9t b\u00e0i t\u1eadp sau: </p> <p>B\u00e0i to\u00e1n Cho m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(k \\leq 10^5\\) v\u00e0 m\u1ed9t x\u00e2u \\(s\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(\\leq 10^5\\). T\u00ednh s\u1ed1 l\u1ea7n \\(s\\) xu\u1ea5t hi\u1ec7n trong x\u00e2u Gray th\u1ee9 \\(k\\), trong \u0111\u00f3 c\u00e1c x\u00e2u Gray \\(g_i\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> \\[\\begin{align} g_1 &amp;= \\text{\"a\"}\\\\ g_2 &amp;= \\text{\"aba\"}\\\\ g_3 &amp;= \\text{\"abacaba\"}\\\\ g_4 &amp;= \\text{\"abacabadabacaba\"} \\end{align}\\] <p>L\u01b0u \u00fd: ch\u1eef c\u00e1i \u1edf ch\u00ednh gi\u1eefa \\(g_i\\) kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i l\u00e0 ch\u1eef c\u00e1i th\u1ee9 \\(i\\) trong b\u1ea3ng ch\u1eef c\u00e1i m\u00e0 c\u00f3 th\u1ec3 l\u00e0 b\u1ea5t k\u1ef3 ch\u1eef n\u00e0o, v\u00e0 ch\u1eef c\u00e1i \u1edf ch\u00ednh gi\u1eefa c\u1ee7a \\(g_i\\), \\(g_j\\) \\((i \\neq j)\\) \u0111\u01b0\u1ee3c ph\u00e9p gi\u1ed1ng nhau. </p> <p>L\u1eddi gi\u1ea3i H\u01b0\u1edbng l\u00e0m c\u1ee7a ch\u00fang ta v\u1eabn kh\u00f4ng \u0111\u1ed5i: t\u00ednh h\u00e0m ti\u1ec1n t\u1ed1 cho \\(t = g_i\\). Vi\u1ebft theo \"ng\u00f4n ng\u1eef\" automaton, ta c\u1ea7n duy tr\u00ec tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i khi th\u00eam d\u1ea7n c\u00e1c ch\u1eef c\u00e1i c\u1ee7a \\(t\\) t\u1eeb tr\u00e1i sang ph\u1ea3i. </p> <p>D\u1ef1ng h\u1eb3n x\u00e2u \\(t\\) l\u00e0 kh\u00f4ng th\u1ec3 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, v\u00ec x\u00e2u Gray th\u1ee9 \\(k\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(2^k-1\\), qu\u00e1 l\u1edbn so v\u1edbi gi\u1edbi h\u1ea1n b\u1ed9 nh\u1edb cho ph\u00e9p. </p> <p>Tuy v\u1eady, b\u1ea3n ch\u1ea5t x\u00e2u \\(g\\) l\u00e0 l\u1eb7p l\u1ea1i ch\u00ednh n\u00f3, n\u00ean c\u00e1ch tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i thay \u0111\u1ed5i trong automaton c\u0169ng s\u1ebd c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c d\u1ef1a v\u00e0o c\u00e1c b\u01b0\u1edbc tr\u01b0\u1edbc. </p> <p>C\u1ee5 th\u1ec3 h\u01a1n, tr\u1ea1ng th\u00e1i c\u1ee7a automaton khi duy\u1ec7t t\u1edbi cu\u1ed1i \\(g_i\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ednh n\u1ebfu ch\u00fang ta bi\u1ebft tr\u1ea1ng th\u00e1i c\u1ee7a automaton \u1edf \u0111\u1ea7u \\(g_i\\).  1. \u0110\u1eb7t \\(G[i][j]\\) l\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a automaton sau khi duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c ch\u1eef c\u00e1i c\u1ee7a \\(g_i\\) t\u1eeb tr\u00e1i sang ph\u1ea3i, bi\u1ebft r\u1eb1ng tr\u1ea1ng th\u00e1i l\u00fac \u1edf \u0111\u1ea7u \\(g_i\\) l\u00e0 \\(j\\).  2. Do c\u1ea5u tr\u00fac \\(g_i = g_{i-1} + \\text{char(i)} + g_{i-1}\\), khi duy\u1ec7t \u0111\u1ebfn h\u1ebft n\u1eeda \u0111\u1ea7u c\u1ee7a \\(g_i\\) (duy\u1ec7t qua c\u00e1c ch\u1eef c\u00e1i c\u1ee7a \\(g_{i-1}\\)) th\u00ec tr\u1ea1ng th\u00e1i \u0111\u00e3 chuy\u1ec3n t\u1eeb \\(j\\) sang \\(G[i-1][j]\\).  3. Khi \u0111\u1ecdc \u0111\u1ebfn \\(\\text{char(i)}\\), tr\u1ea1ng th\u00e1i m\u1edbi d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c b\u1eb1ng ma tr\u1eadn chuy\u1ec3n tr\u1ea1ng th\u00e1i: \\(G[i-1][j] \\rightarrow \\text{mid}\\), trong \u0111\u00f3 \\(\\text{mid} = \\text{aut}(G[i-1][j], \\text{char(i)})\\).  4. Cu\u1ed1i c\u00f9ng, ta duy\u1ec7t qua n\u1eeda b\u00ean ph\u1ea3i c\u1ee7a \\(g_i\\), t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi duy\u1ec7t qua \\(g_{i-1}\\) m\u1ed9t l\u1ea7n n\u1eefa, n\u00ean tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng l\u00e0 \\(G[i-1][\\text{mid}]\\). </p> <p>Ta c\u00f3 th\u1ec3 t\u00f3m g\u1ecdn c\u00e1ch tr\u1ea1ng th\u00e1i thay \u0111\u1ed5i b\u1eb1ng c\u00f4ng th\u1ee9c:</p> \\[\\text{mid} = \\text{aut}[G[i-1][j]][i]\\] \\[G[i][j] = G[i-1][\\text{mid}]\\] <p>Bi\u1ebft \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i thay \u0111\u1ed5i nh\u01b0 th\u1ebf n\u00e0o, ta c\u00f3 th\u1ec3 d\u00f9ng n\u00f3 \u0111\u1ec3 t\u00ednh l\u1ea1i \u0111\u00e1p \u00e1n khi \u0111i t\u1eeb \\(g_{i-1}\\) \u0111\u1ebfn \\(g_i\\). \u0110\u1ec3 th\u1ed1ng nh\u1ea5t v\u1edbi c\u00e1ch ta t\u00ednh \\(G\\), \u0111\u1eb7t \\(K[i][j]\\) l\u00e0 s\u1ed1 l\u1ea7n x\u00e2u \\(s\\) xu\u1ea5t hi\u1ec7n trong \\(g_i\\), bi\u1ebft tr\u1ea1ng th\u00e1i \u1edf \u0111\u1ea7u x\u00e2u l\u00e0 \\(j\\). Khi duy\u1ec7t \u0111\u1ebfn gi\u1eefa x\u00e2u, ta \u0111ang c\u00f3 \\(K[i][j] = K[i-1][j]\\). Khi tr\u1ea1ng th\u00e1i chuy\u1ec3n th\u00e0nh \\(mid\\), ta c\u1ed9ng \\(1\\) v\u00e0o \\(K[i][j]\\) n\u1ebfu \\(\\text{mid} = \\lvert s \\rvert\\). Ph\u1ea7n c\u00f2n l\u1ea1i ch\u1ec9 l\u00e0 \\(K[i-1][\\text{mid}]\\). C\u00f4ng th\u1ee9c:</p> \\[K[i][j] = K[i-1][j] + (\\text{mid} == |s|) + K[i-1][\\text{mid}]\\] <p>Ch\u1ed1t l\u1ea1i, nh\u1edd vi\u1ec7c s\u1eed d\u1ee5ng automaton m\u00e0 ta gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n so kh\u1edbp tr\u00ean x\u00e2u Gray, v\u00e0 ta c\u00f3 th\u1ec3 d\u00f9ng l\u1ea1i \u00fd t\u01b0\u1edfng n\u00e0y cho nhi\u1ec1u x\u00e2u kh\u00e1c \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi c\u00e1c quy t\u1eafc ph\u1ee9c t\u1ea1p h\u01a1n.  C\u1ee5 th\u1ec3 l\u00e0 b\u00e0i to\u00e1n: T\u00ecm s\u1ed1 l\u1ea7n \\(s\\) xu\u1ea5t hi\u1ec7n trong \\(t_i\\), bi\u1ebft \\(t_i\\) \u0111\u01b0\u1ee3c t\u1ea1o b\u1eb1ng c\u00e1ch n\u1ed1i c\u00e1c x\u00e2u \\(t_k^{\\text{cnt}}\\) (l\u1eb7p l\u1ea1i \\(t_k\\) \\(\\text{cnt}\\) l\u1ea7n, \\(k \\lt n\\)) v\u00e0o nhau.  V\u00ed d\u1ee5 m\u1ed9t quy t\u1eafc nh\u01b0 th\u1ebf: </p> \\[\\begin{align} t_1 &amp;= \\text{\"abdeca\"}\\\\ t_2 &amp;= \\text{\"abc\"} + t_1^{30} + \\text{\"abd\"}\\\\ t_3 &amp;= t_2^{50} + t_1^{100}\\\\ t_4 &amp;= t_2^{10} + t_3^{100} \\end{align}\\] <p>Ta kh\u00f4ng th\u1ec3 d\u1ef1ng c\u1ea3 x\u00e2u v\u00ec \u0111\u1ed9 l\u1edbn b\u00f9ng n\u1ed5 l\u00ean t\u1edbi \\(100^{100}\\) ch\u1eef c\u00e1i (!). Tuy nhi\u00ean, c\u00e1ch gi\u1ea3i cho b\u00e0i nay kh\u00f4ng kh\u00e1c g\u00ec b\u00e0i tr\u01b0\u1edbc, \u0111\u00f3 l\u00e0 x\u00e2y d\u1ef1ng automaton v\u00e0 t\u00ecm quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ec3 mi\u00eau t\u1ea3 c\u00e1ch tr\u1ea1ng th\u00e1i thay \u0111\u1ed5i. </p>"},{"location":"algo/string/kmp/#bai-tap","title":"B\u00e0i t\u1eadp","text":"<p>Test code KMP: VNOJ - SUBSTR * Codeforces - Anthem of Berland * Codeforces - MUH and Cube Walls * Codeforces - Prefixes and Suffixes * Codeforces - Password  * Codeforces - Lucky Common Subsequence * SPOJ - PSTRING * AtCoder Beginner Contest 257 - Prefix Concatenation * NOI 2014 Problem 4 - Zoo * LightOJ - Unlucky Strings</p>"},{"location":"algo/string/manacher/","title":"Thu\u1eadt to\u00e1n Manacher","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: Ph\u1ea1m Ho\u00e0ng Hi\u1ec7p - University of Georgia</p> <p>Review b\u1edfi: - Nguy\u1ec5n Minh Hi\u1ec3n - Tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, \u0110HQGHN - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN - Ng\u00f4 Nh\u1eadt Quang - The University of Texas at Dallas</p>"},{"location":"algo/string/manacher/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":""},{"location":"algo/string/manacher/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho x\u00e2u \\(S\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\). H\u00e3y t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c x\u00e2u con \u0111\u1ed1i x\u1ee9ng (palindrome) trong x\u00e2u \\(S\\).  Thu\u1eadt to\u00e1n Manacher s\u1ebd x\u1eed l\u00fd b\u00e0i to\u00e1n tr\u00ean v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian \\(O(n)\\).</p>"},{"location":"algo/string/manacher/#mot-so-khai-niem-va-ky-hieu-trong-bai","title":"M\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m v\u00e0 k\u00fd hi\u1ec7u trong b\u00e0i","text":"<ul> <li>X\u00e2u \u0111\u1ed1i x\u1ee9ng (palindrome) l\u00e0 x\u00e2u m\u00e0 khi \u0111\u1ecdc ng\u01b0\u1ee3c l\u1ea1i th\u00ec v\u1eabn l\u00e0 ch\u00ednh n\u00f3, v\u00ed d\u1ee5 nh\u01b0 \\(tacocat\\), \\(aaaaaaa\\), \\(2002\\) </li> <li>\u0110i\u1ec3m ch\u00ednh gi\u1eefa c\u1ee7a x\u00e2u \u0111\u1ed1i x\u1ee9ng l\u00e0 v\u1ecb tr\u00ed m\u00e0 khi l\u1eadt ng\u01b0\u1ee3c x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u00f3 th\u00ec v\u1ecb tr\u00ed c\u1ee7a \u0111i\u1ec3m \u0111\u00f3 trong x\u00e2u \u0111\u00f3 kh\u00f4ng thay \u0111\u1ed5i. <ul> <li>Trong x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i l\u1ebb, \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 m\u1ed9t ch\u1eef c\u00e1i trong x\u00e2u. V\u00ed d\u1ee5 x\u00e2u \\(aabaa\\) c\u00f3 \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 ch\u1eef \\(b\\)</li> <li>Trong x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i ch\u1eb5n, \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 kho\u1ea3ng tr\u1ed1ng (v\u1ecb tr\u00ed gi\u1eefa c\u1ee7a hai ch\u1eef c\u00e1i li\u00ean ti\u1ebfp). V\u00ed d\u1ee5 x\u00e2u \\(aabbaa\\) c\u00f3 \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 kho\u1ea3ng tr\u1ed1ng gi\u1eefa hai ch\u1eef \\(b\\)</li> <li>N\u1ebfu \u0111i\u1ec3m ch\u00ednh gi\u1eefa c\u1ee7a x\u00e2u \\(T\\) n\u00e0o \u0111\u00f3 l\u00e0 \\(i\\), ta c\u00f3 th\u1ec3 n\u00f3i x\u00e2u \\(T\\) \u0111\u1ed1i x\u1ee9ng qua \\(i\\)</li> </ul> </li> <li>\\(S_i\\) l\u00e0 ch\u1eef c\u00e1i th\u1ee9 \\(i\\) c\u1ee7a x\u00e2u \\(S\\). \\(S_{i...j}\\) l\u00e0 x\u00e2u con t\u1eeb v\u1ecb tr\u00ed th\u1ee9 \\(i\\) \u0111\u1ebfn \\(j\\) c\u1ee7a \\(S\\), bao g\u1ed3m c\u1ea3 \\(i\\) v\u00e0 \\(j\\)</li> </ul>"},{"location":"algo/string/manacher/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":""},{"location":"algo/string/manacher/#sai-lam-thuong-gap","title":"Sai l\u1ea7m th\u01b0\u1eddng g\u1eb7p","text":"<p>L\u01b0u \u00fd, v\u00ec c\u00f3 th\u1ec3 c\u00f3 \\(O(n^2)\\) x\u00e2u con \u0111\u1ed1i x\u1ee9ng trong m\u1ed9t x\u00e2u n\u00ean c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng l\u1ea7m t\u01b0\u1edfng r\u1eb1ng kh\u00f4ng th\u1ec3 t\u1ea1o ra thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1t h\u01a1n \\(O(n^2)\\) cho b\u00e0i to\u00e1n n\u00e0y. Tuy nhi\u00ean, v\u1edbi m\u1ed9t x\u00e2u \u0111\u1ed1i x\u1ee9ng, ch\u00fang ta c\u00f3 c\u00e1c x\u00e2u con \u1edf ph\u00eda trong c\u0169ng l\u00e0 \u0111\u1ed1i x\u1ee9ng.</p> <p>C\u1ee5 th\u1ec3, gi\u1ea3 s\u1eed x\u00e2u con \\(S_{i...j}\\) l\u00e0 m\u1ed9t x\u00e2u \u0111\u1ed1i x\u1ee9ng. N\u1ebfu \\(i+1 \\leq j-1\\) th\u00ec ta c\u00f3 \\(S_{(i+1)...(j-1)}\\) c\u0169ng l\u00e0 m\u1ed9t x\u00e2u \u0111\u1ed1i x\u1ee9ng. V\u00ed d\u1ee5, x\u00e2u \\(abcdcba\\) \u0111\u1ed1i x\u1ee9ng th\u00ec c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u1ea5y \u0111\u01b0\u1ee3c r\u1eb1ng c\u00e1c x\u00e2u \\(bcdcb\\), \\(cdc\\) hay \\(d\\) \u0111\u1ec1u \u0111\u1ed1i x\u1ee9ng.</p> <p>Nh\u01b0 v\u1eady, v\u1edbi m\u1ed7i \u0111i\u1ec3m ch\u00ednh gi\u1eefa c\u1ee7a m\u1ed9t x\u00e2u con \u0111\u1ed1i x\u1ee9ng \\(mid\\), ch\u00fang ta c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i \u0111\u1ed9 d\u00e0i d\u00e0i nh\u1ea5t \\(d[mid]\\) sao cho \\(S_{(mid-d)...(mid+d)}\\) l\u00e0 m\u1ed9t x\u00e2u \u0111\u1ed1i x\u1ee9ng. </p> <p>\u0110i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 \u0111i\u1ec3m m\u00e0 khi \u0111\u1ea3o ng\u01b0\u1ee3c tr\u1eadt t\u1ef1 c\u1ee7a x\u00e2u th\u00ec v\u1ecb tr\u00ed c\u1ee7a \u0111i\u1ec3m n\u00e0y trong x\u00e2u kh\u00f4ng thay \u0111\u1ed5i. \u0110i\u1ec3m ch\u00ednh gi\u1eefa n\u00e0y c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t ch\u1eef c\u00e1i ho\u1eb7c m\u1ed9t kho\u1ea3ng tr\u1ed1ng, t\u01b0\u01a1ng \u1ee9ng v\u1edbi x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i l\u1ebb ho\u1eb7c ch\u1eb5n. </p>"},{"location":"algo/string/manacher/#thuat-toan-ngay-tho_1","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":"<p>Nh\u01b0 v\u1eady, t\u1eeb quan s\u00e1t tr\u00ean, ch\u00fang ta c\u00f3 th\u1ec3 ngay l\u1eadp t\u1ee9c \u0111\u01b0a ra thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\). X\u00e9t t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed trong x\u00e2u (m\u1ed9t ch\u1eef c\u00e1i ho\u1eb7c m\u1ed9t kho\u1ea3ng tr\u1ed1ng), v\u00e0 ch\u1ea1y v\u1ec1 hai ph\u00eda \u0111\u1ebfn khi n\u00e0o x\u00e2u kh\u00f4ng c\u00f2n \u0111\u1ed1i x\u1ee9ng n\u1eefa.</p> <p>C\u0169ng nh\u01b0 r\u1ea5t nhi\u1ec1u thu\u1eadt to\u00e1n li\u00ean quan \u0111\u1ebfn x\u00e2u kh\u00e1c nh\u01b0 Z hay KMP, khi x\u1eed l\u00fd \u1edf t\u1eebng v\u1ecb tr\u00ed tr\u00ean x\u00e2u, k\u1ebft qu\u1ea3 \u1edf nh\u1eefng v\u1ecb tr\u00ed tr\u01b0\u1edbc cho ta r\u1ea5t nhi\u1ec1u d\u1eef li\u1ec7u \u0111\u1ec3 x\u1eed l\u00fd \u1edf v\u1ecb tr\u00ed ti\u1ebfp theo. Trong b\u00e0i to\u00e1n n\u00e0y, ch\u00fang ta c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng d\u1eef ki\u1ec7n x\u00e2u \u0111\u1ed1i x\u1ee9ng nh\u01b0 h\u00ecnh v\u1ebd d\u01b0\u1edbi \u0111\u00e2y.</p> \\[     \\ldots\\      \\overbrace{         S_{l}\\ \\ldots\\          \\underbrace{             S_{l+i-d_[l+i]}\\ \\ldots\\ S_{l+i}\\ \\ldots\\ S_{l+i+d[l+i]}\\          }_\\text{\u0111\u1ed1i x\u1ee9ng}\\          \\ldots\\ S_{mid} \\ldots\\         \\underbrace{             S_{r-i-d[l+i]}\\ \\ldots\\ S_{r-i}\\ \\ldots\\ S_{r-i+d[l+i]}\\          }_\\text{\u0111\u1ed1i x\u1ee9ng}\\          \\ldots\\ S_{r}\\      }^\\text{\u0111\u1ed1i x\u1ee9ng}\\      \\ldots \\] <p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 m\u1ed9t x\u00e2u \u0111\u1ed1i x\u1ee9ng qua \\(mid\\) k\u00e9o t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) nh\u01b0 h\u00ecnh v\u1ebd tr\u00ean. \u0110\u1ec3 t\u00ednh \\(d[r-i]\\) (\u0111\u00e3 bi\u1ebft h\u1ebft c\u00e1c gi\u00e1 tr\u1ecb \\(d\\) tr\u01b0\u1edbc \u0111\u00f3), ch\u00fang ta c\u00f3 th\u1ec3 d\u1ef1a v\u00e0o \\(S[l+i]\\).</p> <p>Do \\(l+i\\) v\u00e0 \\(r-i\\) \u0111\u1ed1i x\u1ee9ng qua \\(mid\\) n\u00ean c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng k\u1ebft qu\u1ea3 \u0111\u00e3 t\u00ednh v\u1edbi v\u1ecb tr\u00ed \\(l+i\\) \u0111\u1ec3 t\u00ednh to\u00e1n \\(r-i\\) m\u1ed9t c\u00e1ch ti\u1ebft ki\u1ec7m h\u01a1n. Tr\u00ean \u0111\u00e2y l\u00e0 \u00fd t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n Manacher. Ti\u1ebfp theo ch\u00fang ta s\u1ebd \u0111i v\u00e0o chi ti\u1ebft v\u1ec1 thu\u1eadt to\u00e1n c\u0169ng nh\u01b0 c\u00e1ch c\u00e0i \u0111\u1eb7t.</p>"},{"location":"algo/string/manacher/#code-mau","title":"Code m\u1eabu","text":"<pre><code>## include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int MaxN = 5e3 + 5;\nint D_odd[MaxN];\nint D_even[MaxN];\nstring S;\nint N;\n\nvoid Calc_D_odd() {\n    for(int i = 1 ; i &lt;= N ; i++) {\n        D_odd[i] = 0;\n        while(i - D_odd[i] - 1 &gt; 0 &amp;&amp; i + D_odd[i] + 1 &lt;= N &amp;&amp; S[i - D_odd[i] - 1] == S[i + D_odd[i] + 1]) {\n            D_odd[i]++;\n        }\n    }\n}\n\nvoid Calc_D_even() {\n    int L = 1;\n    int R = 0;\n    for(int i = 1 ; i &lt; N ; i++) {\n        int j = i + 1;\n        D_even[i] = 0;\n        while(i - D_even[i] &gt; 0 &amp;&amp; j + D_even[i] &lt;= N &amp;&amp; S[i - D_even[i]] == S[j + D_even[i]]) {\n            D_even[i]++;\n        }\n    }\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    cin &gt;&gt; S;\n    N = S.length();\n    S = ' ' + S; // for 1-base\n    Calc_D_odd();\n    Calc_D_even();\n    for(int i = 1 ; i &lt; N ; i++) {\n        cout &lt;&lt; D_odd[i] * 2 + 1 &lt;&lt; ' ' &lt;&lt; D_even[i] * 2 &lt;&lt; ' ';\n    }\n    cout &lt;&lt; D_odd[N] * 2 + 1;\n}\n</code></pre>"},{"location":"algo/string/manacher/#thuat-toan-manacher","title":"Thu\u1eadt to\u00e1n Manacher","text":""},{"location":"algo/string/manacher/#tim-cac-xau-oi-xung-co-o-dai-le","title":"T\u00ecm c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i l\u1ebb","text":"<p>Do x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i l\u1ebb c\u00f3 \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 m\u1ed9t ch\u1eef c\u00e1i, vi\u1ec7c x\u1eed l\u00fd v\u00e0 t\u00ednh to\u00e1n s\u1ebd d\u1ec5 d\u00e0ng h\u01a1n so v\u1edbi tr\u01b0\u1eddng h\u1ee3p x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i ch\u1eb5n (\u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 kho\u1ea3ng tr\u1ed1ng gi\u1eefa hai ch\u1eef c\u00e1i). V\u00ec v\u1eady, ch\u00fang ta s\u1ebd gi\u1ea3i quy\u1ebft tr\u01b0\u1eddng h\u1ee3p n\u00e0y tr\u01b0\u1edbc.</p> <p>Ch\u00fang ta s\u1ebd t\u00ednh gi\u00e1 tr\u1ecb \\(d\\) v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed ch\u1ee9a c\u00e1c k\u00fd t\u1ef1 trong x\u00e2u (t\u00ecm c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i l\u1ebb) theo th\u1ee9 t\u1ef1 l\u1ea7n l\u01b0\u1ee3t t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i x\u00e2u v\u1edbi c\u00e1c b\u01b0\u1edbc nh\u01b0 sau. Ch\u00fang ta s\u1ebd \u0111\u00e1nh s\u1ed1 c\u00e1c k\u00fd t\u1ef1 c\u1ee7a x\u00e2u \\(S\\) b\u1eaft \u0111\u1ea7u t\u1eeb \\(1\\).</p> <ul> <li>\u0110\u1eb7t \\(l=1\\) v\u00e0 \\(r=0\\) (ch\u01b0a c\u00f3 x\u00e2u con \u0111\u1ed1i x\u1ee9ng n\u00e0o)</li> <li>Duy tr\u00ec gi\u00e1 tr\u1ecb \\(l\\) v\u00e0 \\(r\\) th\u1ecfa m\u00e3n x\u00e2u con t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\) l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng v\u1edbi \\(r\\) l\u1edbn nh\u1ea5t \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y. Ch\u00fang ta lu\u00f4n c\u00f3 \\((l+r)/2 &lt; i\\) (\\(i\\) n\u1eb1m \u1edf ph\u00eda b\u00ean ph\u1ea3i c\u1ee7a x\u00e2u \u0111\u1ed1i x\u1ee9ng)</li> <li>T\u1ea1i \u0111i\u1ec3m \\(i\\), <ul> <li>n\u1ebfu \\(i &gt; r\\), th\u00ec ch\u1ea1y tr\u00e2u \u0111\u1ec3 t\u00ecm \\(d[i]\\) nh\u01b0 trong thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\)</li> <li>n\u1ebfu \\(i \\leq r\\), ta l\u1ea5y gi\u00e1 tr\u1ecb \\(d[l+(r-i)]\\) (\u0111i\u1ec3m \u0111\u1ed1i x\u1ee9ng v\u1edbi \\(i\\) qua \\(mid\\)). T\u1ea1i \u0111\u00e2y, trong ph\u1ea7n l\u1edbn tr\u01b0\u1eddng h\u1ee3p, ch\u00fang ta c\u00f3 th\u1ec3 g\u00e1n lu\u00f4n \\(d[i] = d[l+(r-i)]\\). Tuy v\u1eady, v\u1eabn c\u00f3 tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t sau \u0111\u00e2y c\u1ea7n l\u01b0u \u00fd (Xem h\u00ecnh v\u1ebd d\u01b0\u1edbi)</li> </ul> </li> </ul> <p>$$     \\ldots\\      \\overbrace{         \\underbrace{             S_{l}\\ \\ldots\\ S_{l+(r-i)}\\ \\ldots\\ S_{l+2*(r-i)}\\          }\\text{\u0111\u1ed1i x\u1ee9ng}\\          \\underbrace{         \\ldots\\ S \\ldots         }\\text{Ki\u1ec3m tra ti\u1ebfp}         \\underbrace{             S\\          }}\\ \\ldots\\ S_{i}\\ \\ldots\\ S_{r\\text{\u0111\u1ed1i x\u1ee9ng}\\      }^\\text{\u0111\u1ed1i x\u1ee9ng}\\      \\underbrace{         \\ldots \\ldots \\ldots \\ldots \\ldots     }\\text{Ki\u1ec3m tra ti\u1ebfp} $$ - N\u1ebfu x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t \u1edf v\u1ecb tr\u00ed \\(l+r-i\\) kh\u00f4ng k\u00e9o d\u00e0i \u0111\u1ebfn \\(l\\), th\u00ec x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t t\u01b0\u01a1ng \u1ee9ng qua \\(mid\\) \u1edf v\u1ecb tr\u00ed \\(i\\) c\u0169ng kh\u00f4ng k\u00e9o d\u00e0i \u0111\u1ebfn \\(r\\).  - T\u1eeb \u0111\u00f3 ta c\u00f3 th\u1ec3 kh\u1eb3ng \u0111\u1ecbnh, n\u1ebfu ti\u1ebfp t\u1ee5c m\u1edf r\u1ed9ng ra th\u00ec ph\u1ea1m vi c\u1ee7a hai x\u00e2u n\u00e0y v\u1eabn n\u1eb1m trong x\u00e2u \u0111\u1ed1i x\u1ee9ng to k\u00e9o t\u1eeb \\(l\\) \u0111\u1ebfn \\(r\\).  - Do v\u1eady, khi ti\u1ebfp t\u1ee5c m\u1edf r\u1ed9ng v\u1ec1 hai ph\u00eda th\u00ec x\u00e2u con \u0111\u01b0\u1ee3c m\u1edf r\u1ed9ng \u1edf v\u1ecb tr\u00ed \\(i\\) v\u1eabn s\u1ebd gi\u1ed1ng v\u1edbi \\((l+(r-i))\\) v\u00e0 kh\u00f4ng c\u00f2n \u0111\u1ed1i x\u1ee9ng n\u1eefa. - Tuy nhi\u00ean, n\u1ebfu x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t \u1edf \\((l+(r-i))\\) k\u00e9o d\u00e0i qu\u00e1 \\(l\\), ch\u00fang ta ch\u1ec9 c\u00f3 th\u1ec3 t\u1ea1m th\u1eddi x\u00e9t \\(d[i] = r-i\\) do kh\u00f4ng th\u1ec3 \u0111\u1ea3m b\u1ea3o c\u00e1c ch\u1eef \u1edf ph\u00eda ngo\u00e0i gi\u1ed1ng nhau. - T\u1ea1i th\u1eddi \u0111i\u1ec3m n\u00e0y, ch\u00fang ta ch\u1ea1y tr\u00e2u ti\u1ebfp t\u1eeb v\u1ecb tr\u00ed \\(r\\) \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \\(d[i]\\). - C\u1eadp nh\u1eadt l\u1ea1i \\(l\\) v\u00e0 \\(r\\) n\u1ebfu c\u1ea7n thi\u1ebft.</p>"},{"location":"algo/string/manacher/#tim-cac-xau-oi-xung-co-o-dai-chan","title":"T\u00ecm c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng c\u00f3 \u0111\u1ed9 d\u00e0i ch\u1eb5n","text":"<p>Ho\u00e0n to\u00e0n t\u01b0\u01a1ng t\u1ef1 v\u1edbi vi\u1ec7c t\u00ecm x\u00e2u c\u00f3 \u0111\u1ed9 d\u00e0i l\u1ebb, ch\u00fang ta x\u00e9t c\u00e1c kho\u1ea3ng \u1edf gi\u1eefa hai k\u00fd t\u1ef1 (c\u00f3 th\u1ec3 coi kho\u1ea3ng n\u00e0y l\u00e0 m\u1ed9t k\u00fd t\u1ef1).  Tuy nhi\u00ean, chi ti\u1ebft c\u00e0i \u0111\u1eb7t c\u1ea7n c\u1ea9n th\u1eadn \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 ch\u00ednh x\u00e1c. </p> <p>\u0110\u1ec3 tr\u00e1nh ph\u1ea3i x\u1eed l\u00fd c\u1ea9n th\u1eadn trong tr\u01b0\u1eddng h\u1ee3p x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i ch\u1eb5n, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 c\u00e2n nh\u1eafc s\u1eed d\u1ee5ng c\u00e1ch l\u00e0m nh\u01b0 sau. </p> <p>Th\u00eam c\u00e1c k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t gi\u1eefa hai k\u00fd t\u1ef1 li\u00ean ti\u1ebfp trong x\u00e2u, khi \u0111\u00f3 c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i ch\u1eb5n s\u1ebd l\u00e0 c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i l\u1ebb v\u1edbi \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 m\u1ed9t k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t. C\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i l\u1ebb v\u1eabn l\u00e0 c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng \u0111\u1ed9 d\u00e0i l\u1ebb v\u1edbi \u0111i\u1ec3m ch\u00ednh gi\u1eefa l\u00e0 c\u00e1c ch\u1eef c\u00e1i ban \u0111\u1ea7u trong x\u00e2u.</p> <p>K\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t \u0111\u01b0\u1ee3c th\u00eam c\u1ea7n ph\u1ea3i gi\u1ed1ng nhau (\u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh \u0111\u1ed1i x\u1ee9ng) v\u00e0 kh\u00e1c v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c k\u00fd t\u1ef1 \u0111\u01b0\u1ee3c d\u00f9ng trong x\u00e2u. V\u00ed d\u1ee5, \\(mike4235\\) c\u00f3 th\u1ec3 chuy\u1ec3n th\u00e0nh \\(m.i.k.e.4.2.3.5\\)</p>"},{"location":"algo/string/manacher/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>\u1ede m\u1ed7i l\u1ea7n t\u00ednh \\(d[i]\\), n\u1ebfu \\(d[i] + i &lt; r\\) th\u00ec ch\u00fang ta ch\u1ec9 m\u1ea5t \\(O(1)\\). Tuy nhi\u00ean, n\u1ebfu \\(d[i] + i &gt; r\\) th\u00ec ch\u00fang ta s\u1ebd \u0111\u1eb7t l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a \\(r\\) th\u00e0nh \\(d[i] + i\\). Do \\(r\\) kh\u00f4ng gi\u1ea3m v\u00e0  \\(r \\leq n\\) n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(O(n)\\).</p>"},{"location":"algo/string/manacher/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 code m\u1eabu c\u1ee7a thu\u1eadt to\u00e1n Manacher cho b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c n\u00eau trong ph\u1ea7n Gi\u1edbi thi\u1ec7u. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 c\u00e0i \u0111\u1eb7t v\u00e0 n\u1ed9p \u1edf link sau: Library checker - Enumerate Palindromes</p>"},{"location":"algo/string/manacher/#code-mau_1","title":"Code m\u1eabu","text":"<pre><code>## include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int MaxN = 5e5 + 5;\nint D_odd[MaxN];\nint D_even[MaxN];\nstring S;\nint N;\n\nvoid Calc_D_odd() {\n    int L = 1;\n    int R = 0;\n    for(int i = 1 ; i &lt;= N ; i++) {\n        if(i &gt; R) D_odd[i] = 0;\n        else D_odd[i] = min(R - i, D_odd[L + (R - i)]);\n        while(i - D_odd[i] - 1 &gt; 0 &amp;&amp; i + D_odd[i] + 1 &lt;= N &amp;&amp; S[i - D_odd[i] - 1] == S[i + D_odd[i] + 1]) {\n            D_odd[i]++;\n        }\n\n        if(i + D_odd[i] &gt; R) {\n            R = i + D_odd[i];\n            L = i - D_odd[i];\n        }\n    }\n}\n\nvoid Calc_D_even() {\n    int L = 1;\n    int R = 0;\n    for(int i = 1 ; i &lt; N ; i++) {\n        int j = i + 1;\n        if(j &gt; R) D_even[i] = 0;\n        else D_even[i] = min(R - j + 1, D_even[L + (R - j)]);\n        while(i - D_even[i] &gt; 0 &amp;&amp; j + D_even[i] &lt;= N &amp;&amp; S[i - D_even[i]] == S[j + D_even[i]]) {\n            D_even[i]++;\n        }\n        if(i + D_even[i] &gt; R) {\n            R = i + D_even[i];\n            L = j - D_even[i];\n        }\n    }\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    cin &gt;&gt; S;\n    N = S.length();\n    S = ' ' + S; // for 1-base\n    Calc_D_odd();\n    Calc_D_even();\n    for(int i = 1 ; i &lt; N ; i++) {\n        cout &lt;&lt; D_odd[i] * 2 + 1 &lt;&lt; ' ' &lt;&lt; D_even[i] * 2 &lt;&lt; ' ';\n    }\n    cout &lt;&lt; D_odd[N] * 2 + 1;\n}\n</code></pre>"},{"location":"algo/string/manacher/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>CF Sonya and Matrix Beauty</p>"},{"location":"algo/string/manacher/#tom-tat-e-bai","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>Cho hai s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(n, m \\leq 250\\) v\u00e0 m\u1ed9t ma tr\u1eadn k\u00edch th\u01b0\u1edbc \\(n * m\\) g\u1ed3m c\u00e1c ch\u1eef c\u00e1i th\u01b0\u1eddng trong b\u1ea3ng ch\u1eef c\u00e1i ti\u1ebfng Anh.</p> <p>M\u1ed9t ma tr\u1eadn con \\((i_1, j_1, i_2, j_2)\\) \\((1 \\leq i_1 \\leq i_2 \\leq n, 1 \\leq j_1 \\leq j_2 \\leq m)\\) l\u00e0 ma tr\u1eadn g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed \\(a_{ij}\\) c\u1ee7a ma tr\u1eadn ban \u0111\u1ea7u sao cho \\(i_1 \\leq i \\leq i_2\\) v\u00e0 \\(j_1 \\leq j \\leq j_2\\).</p> <p>M\u1ed9t ma tr\u1eadn con \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 \u0111\u1eb9p n\u1ebfu c\u00f3 c\u00e1ch \u0111\u1ec3 thay \u0111\u1ed5i th\u1ee9 t\u1ef1 c\u00e1c ch\u1eef c\u00e1i tr\u00ean c\u00e1c h\u00e0ng (kh\u00f4ng thay \u0111\u1ed5i th\u1ee9 t\u1ef1 tr\u00ean c\u00e1c c\u1ed9t) sao cho t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u1ec1u con \u0111\u00f3 \u0111\u1ec1u l\u00e0 x\u00e2u \u0111\u1ed1i x\u1ee9ng.</p> <p>X\u00e1c \u0111\u1ecbnh s\u1ed1 ma tr\u1eadn con \u0111\u1eb9p trong ma tr\u1eadn \u0111\u00e3 cho.</p>"},{"location":"algo/string/manacher/#goi-y","title":"G\u1ee3i \u00fd","text":"<ul> <li>T\u1eeb \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec1 b\u00e0i, th\u1eed t\u00ecm c\u00e1ch s\u1eafp x\u1ebfp m\u1ed9t ma tr\u1eadn con v\u00e0 x\u00e1c \u0111\u1ecbnh \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 t\u1ea1o ra x\u00e2u \u0111\u1ed1i x\u1ee9ng tr\u00ean h\u00e0ng v\u00e0 c\u1ed9t. </li> <li>Do c\u00e1c ch\u1eef c\u00e1i tr\u00ean m\u1ed9t h\u00e0ng ch\u1ec9 thay \u0111\u1ed5i th\u1ee9 t\u1ef1, khi n\u00e0o th\u00ec hai h\u00e0ng \u0111\u01b0\u1ee3c coi l\u00e0 \"b\u1eb1ng nhau\"?</li> </ul>"},{"location":"algo/string/manacher/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<ul> <li>Tr\u01b0\u1edbc h\u1ebft, ch\u00fang ta c\u00f3 nh\u1eadn x\u00e9t r\u1eb1ng \u0111\u1ec3 ma tr\u1eadn con th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n th\u00ec c\u00e1c h\u00e0ng ph\u1ea3i s\u1eafp x\u1ebfp l\u1ea1i \u0111\u01b0\u1ee3c th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng (c\u00f3 \\(0\\) ho\u1eb7c \\(1\\) ch\u1eef c\u00e1i c\u00f3 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n l\u1ebb).</li> <li>\u0110\u1ec3 c\u1ea3 ma tr\u1eadn con \u0111\u1ed1i x\u1ee9ng th\u00ec hai h\u00e0ng \u0111\u1ed1i x\u1ee9ng qua \u0111i\u1ec3m \u0111\u1ed1i x\u1ee9ng \\(mid\\) ph\u1ea3i c\u00f3 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n b\u1eb1ng nhau v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c ch\u1eef c\u00e1i.</li> <li>Nh\u01b0 v\u1eady, khi \u0111\u00e3 c\u00f3 c\u00e1ch so s\u00e1nh hai h\u00e0ng \"b\u1eb1ng nhau\", ch\u00fang ta s\u1ebd c\u00f3 th\u1ec3 \u0111\u1ebfm s\u1ed1 ma tr\u1eadn con th\u1ecfa m\u00e3n b\u1eb1ng c\u00e1ch c\u1ed1 \u0111\u1ecbnh hai c\u1ed9t b\u1ea5t k\u1ef3 v\u00e0 \u0111\u1ebfm s\u1ed1 x\u00e2u \u0111\u1ed1i x\u1ee9ng.</li> <li>Khi \u0111\u00f3, ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Manacher tr\u00ean c\u00e1c h\u00e0ng.</li> <li>L\u01b0u \u00fd, c\u1ea7n \u0111\u1ea3m b\u1ea3o c\u00e1c \u0111i\u1ec1u ki\u1ec7n v\u1ec1 h\u00e0ng c\u00f3 th\u1ec3 \u0111\u1ed1i x\u1ee9ng.</li> <li>Nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n^3 * 26)\\), trong \u0111\u00f3 \\(O(n^2)\\) l\u00e0 s\u1ed1 c\u1eb7p c\u1ed9t, \\(O(n)\\) cho thu\u1eadt to\u00e1n Manacher v\u00e0 \\(O(26)\\) \u0111\u1ec3 so s\u00e1nh gi\u1eefa 2 h\u00e0ng (26 l\u00e0 k\u00edch th\u01b0\u1edbc b\u1ea3ng ch\u1eef c\u00e1i).</li> </ul>"},{"location":"algo/string/manacher/#code-mau_2","title":"Code m\u1eabu","text":"<pre><code>## include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MaxN = 255;\nint Cnt[MaxN][26];\nint Cnt_Odd[MaxN];\nint D_odd[MaxN];\nint D_even[MaxN];\nchar c[MaxN][MaxN];\nbool Ok[MaxN];\nint N,M;\nint Ans = 0;\nbool Equal(int Row1, int Row2) {\n    if(!Ok[Row1]) return false;\n    if(!Ok[Row2]) return false;\n    for(int j = 0 ; j &lt; 26 ; j++) {\n        if(Cnt[Row1][j] != Cnt[Row2][j]) return false;\n    }\n    return true;\n}\nvoid Calc_D_odd() {\n    int L = 1;\n    int R = 0;\n    for(int i = 1 ; i &lt;= N ; i++) {\n        if(i &gt; R) D_odd[i] = 0;\n        else D_odd[i] = min(R - i, D_odd[L + (R - i)]);\n        if (Ok[i]) while(i - D_odd[i] - 1 &gt; 0 &amp;&amp; i + D_odd[i] + 1 &lt;= N &amp;&amp; Equal(i - D_odd[i] - 1, i + D_odd[i] + 1)) {\n            D_odd[i]++;\n        }\n        Ans += (D_odd[i] + Ok[i]);\n        if(i + D_odd[i] &gt; R) {\n            R = i + D_odd[i];\n            L = i - D_odd[i];\n        }\n    }\n}\n\nvoid Calc_D_even() {\n    // D_even[i] is the value for the space between i and i + 1\n    int L = 1;\n    int R = 0;\n    for(int i = 1 ; i &lt; N ; i++) {\n        int j = i + 1;\n        if(j &gt; R) D_even[i] = 0;\n        else D_even[i] = min(R - j + 1, D_even[L + (R - j)]);\n        while(i - D_even[i] &gt; 0 &amp;&amp; j + D_even[i] &lt;= N &amp;&amp; Equal(i - D_even[i], j + D_even[i])) {\n            D_even[i]++;\n        }\n        Ans += D_even[i];\n        if(i + D_even[i] &gt; R) {\n            R = i + D_even[i];\n            L = j - D_even[i];\n        }\n    }\n}\nsigned main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    cin &gt;&gt; N &gt;&gt; M;\n    for(int i = 1 ; i &lt;= N ; i++) {\n        cin &gt;&gt; c[i] + 1;\n    }\n    for(int c1 = 1 ; c1 &lt;= M ; c1++) {\n        for(int c2 = c1 ; c2 &lt;= M ; c2++) {\n            bool ok = true;\n            for(int i = 1 ; i &lt;= N ; i++) {\n                int t = c[i][c2] - 'a';\n                Cnt[i][t]++;\n\n                if(Cnt[i][t] &amp; 1) Cnt_Odd[i]++;\n                else Cnt_Odd[i]--;\n\n                if(Cnt_Odd[i] &gt; ((c2 - c1 + 1) &amp; 1)) Ok[i] = false;\n                else Ok[i] = true;\n            }\n            Calc_D_odd();\n            Calc_D_even();\n        }\n        for(int i = 1 ; i &lt;= N ; i++) {\n            for(int j = 0 ; j &lt; 26 ; j++) {\n                Cnt[i][j] = 0;\n            }    \n            Cnt_Odd[i] = 0;\n        }\n    }\n    cout &lt;&lt; Ans;\n}\n</code></pre>"},{"location":"algo/string/manacher/#nhan-xet-ve-thuat-toan","title":"Nh\u1eadn x\u00e9t v\u1ec1 thu\u1eadt to\u00e1n","text":"<ul> <li>Thu\u1eadt to\u00e1n Manacher l\u00e0 thu\u1eadt to\u00e1n c\u00f3 \u00fd t\u01b0\u1edfng kh\u00e1 \u0111\u01a1n gi\u1ea3n: t\u1eadn d\u1ee5ng c\u00e1c d\u1eef li\u1ec7u c\u00f3 s\u1eb5n \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p khi t\u00ednh to\u00e1n tr\u00ean x\u00e2u.</li> <li>Ch\u00fang ta \u0111\u00e3 t\u1eebng g\u1eb7p \u00fd t\u01b0\u1edfng t\u01b0\u01a1ng t\u1ef1 khi t\u00ednh to\u00e1n Z-function hay prefix function.</li> <li>Thu\u1eadt to\u00e1n Manacher c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong h\u01a1i \u00edt c\u00e1c b\u00e0i to\u00e1n. Tuy nhi\u00ean, thu\u1eadt to\u00e1n c\u00f3 \u00fd t\u01b0\u1edfng t\u1ef1 nhi\u00ean v\u00e0 d\u1ec5 c\u00e0i \u0111\u1eb7t n\u00ean c\u00f3 th\u1ec3 c\u00f3 \u00edch khi thi \u0111\u1ea5u.</li> </ul>"},{"location":"algo/string/manacher/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<ul> <li>CSES Longest palindrome</li> <li>UVA Extend to Palindrome</li> <li>Gym QueryreuQ</li> <li>CF Prefix-Suffix Palindrome</li> <li>SPOJ Number of Palindromes</li> <li>Kattis Palindromes</li> </ul>"},{"location":"algo/string/z-algo/","title":"Z-function","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: Nguy\u1ec5n Nh\u1eadt Minh Kh\u00f4i - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM</p> <p>Reviewer: - Tr\u1ea7n Quang L\u1ed9c - ITMO University - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean - \u0110HQG-HCM - Nguy\u1ec5n Ph\u00fa B\u00ecnh - THPT chuy\u00ean H\u00f9ng V\u01b0\u01a1ng, B\u00ecnh D\u01b0\u01a1ng - Nguy\u1ec5n Ho\u00e0ng V\u0169 - THPT chuy\u00ean Phan B\u1ed9i Ch\u00e2u, Ngh\u1ec7 An</p> <p>Tham kh\u1ea3o: cp-algorithm</p>"},{"location":"algo/string/z-algo/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Trong blog n\u00e0y, ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 h\u00e0m \\(Z\\) (Z-function) c\u1ee7a m\u1ed9t chu\u1ed7i \\(S\\) v\u00e0 nh\u1eefng \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3.</p> <p>Cho m\u1ed9t chu\u1ed7i \\(S\\) \u0111\u1ed9 d\u00e0i \\(n\\), k\u00fd hi\u1ec7u l\u00e0 \\(S[0\\ldots n - 1]\\), ta c\u00f3 h\u00e0m \\(Z\\) t\u01b0\u01a1ng \u1ee9ng l\u00e0 m\u1ed9t m\u1ea3ng \\(z[0\\ldots n - 1]\\), v\u1edbi \\(z[i]\\) l\u00e0 \u0111\u1ed9 d\u00e0i ti\u1ec1n t\u1ed1 chung l\u1edbn nh\u1ea5t c\u1ee7a chu\u1ed7i \\(S[0 \\ldots n - 1]\\) v\u00e0 \\(S[i \\ldots n - 1]\\).</p> <p>\u1ede \u0111\u00e2y, ta s\u1ebd quy \u01b0\u1edbc hai \u0111i\u1ec1u: m\u1ed9t l\u00e0 chu\u1ed7i v\u00e0 m\u1ea3ng s\u1ebd m\u1eb7c \u0111\u1ecbnh b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\), hai l\u00e0 \\(z[0] = 0\\), ta c\u00f3 th\u1ec3 hi\u1ec3u quy \u01b0\u1edbc n\u00e0y ngh\u0129a l\u00e0 chu\u1ed7i con x\u00e9t \u1edf \u0111\u00e2y ph\u1ea3i l\u00e0 chu\u1ed7i con nghi\u00eam ng\u1eb7t (t\u1ee9c kh\u00f4ng t\u00ednh ch\u00ednh n\u00f3).</p> <p>V\u00ed d\u1ee5 h\u00e0m \\(z\\) v\u1edbi \\(S = aaabaab\\):</p> i S[0..n-1] S[i..n-1] z[i] 0 \\(aaabaab\\) \\(aaabaab\\) \\(0\\) (quy \u01b0\u1edbc) 1 \\(\\color{red}{aa}abaab\\) \\(\\color{red}{aa}baab\\) \\(2\\) 2 \\(\\color{red}{a}aabaab\\) \\(\\color{red}{a}baab\\) \\(1\\) 3 \\(aaabaab\\) \\(baab\\) \\(0\\) 4 \\(\\color{red}{aa}abaab\\) \\(\\color{red}{aa}b\\) \\(2\\) 5 \\(\\color{red}{a}aabaab\\) \\(\\color{red}{a}b\\) \\(1\\) 6 \\(aaabaab\\) \\(b\\) \\(0\\)"},{"location":"algo/string/z-algo/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1","text":"<p>Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 r\u1ea5t \u0111\u01a1n gi\u1ea3n, v\u1edbi m\u1ecdi \\(i\\), ta s\u1ebd t\u00ecm \\(z[i]\\) b\u1eb1ng c\u00e1ch v\u00e9t c\u1ea1n, b\u1eaft \u0111\u1ea7u v\u1edbi \\(z[i] = 0\\) v\u00e0 t\u0103ng \\(z[i]\\) l\u00ean cho \u0111\u1ebfn khi g\u1eb7p k\u00ed t\u1ef1 \u0111\u1ea7u ti\u00ean kh\u00f4ng tr\u00f9ng v\u00e0 l\u01b0u \u00fd \\(i + z[i]\\) ph\u1ea3i h\u1ee3p l\u1ec7 (b\u00e9 h\u01a1n ho\u1eb7c b\u1eb1ng v\u1ecb tr\u00ed cu\u1ed1i chu\u1ed7i \\(n - 1\\)). Thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y nh\u01b0 sau: <pre><code>vector&lt;int&gt; z_function(string s) {\n    int n = s.length();\n    vector&lt;int&gt; z(n);\n    for (int i = 1; i &lt; n; ++i)\n        while (i + z[i] &lt; n &amp;&amp; s[z[i]] == s[i + z[i]])\n            ++z[i];\n    return z;\n}\n</code></pre> \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(n^2)\\), trong ph\u1ea7n sau ta s\u1ebd t\u1ed1i \u01b0u thu\u1eadt to\u00e1n n\u00e0y v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\).</p>"},{"location":"algo/string/z-algo/#thuat-toan-toi-uu","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u","text":"<p>\u0110\u1ec3 t\u1ed1i \u01b0u thu\u1eadt to\u00e1n, ta c\u00f3 m\u1ed9t nh\u1eadn x\u00e9t: n\u1ebfu ta \u0111\u00e3 t\u00ednh \u0111\u01b0\u1ee3c \\(z[k]\\) (\u1edf \u0111\u00e2y ch\u1ec9 x\u00e9t \\(z[k] &gt; 0\\)), ta c\u00f3 th\u00f4ng tin r\u1eb1ng \u0111o\u1ea1n \\(S[k \\ldots k + z[k] - 1]\\) kh\u1edbp v\u1edbi \u0111o\u1ea1n \\(S[0 \\ldots z[k] - 1]\\). T\u1eadn d\u1ee5ng th\u00f4ng tin n\u00e0y, ta c\u00f3 th\u1ec3 r\u00fat ng\u1eafn qu\u00e1 tr\u00ecnh t\u00ednh c\u00e1c \\(z[i]\\) \u1edf sau (\\(i &gt; k\\)). \u0110\u1ec3 ng\u1eafn g\u1ecdn, t\u1ea1m th\u1eddi \u0111\u1eb7t \\(l = k, r = k + z[k] - 1\\). C\u1ee5 th\u1ec3 c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p: - \\(i \\leq r\\): v\u00ec \u0111o\u1ea1n \\(s[l \\ldots r]\\) gi\u1ed1ng v\u1edbi \u0111o\u1ea1n \\(s[0 \\ldots r - l]\\), do \u0111\u00f3 ta kh\u00f4ng c\u1ea7n duy\u1ec7t l\u1ea1i \u0111o\u1ea1n \\(s[i\\ldots r]\\) m\u00e0 ch\u1ec9 c\u1ea7n l\u1ea5y l\u1ea1i \\(z[i - l]\\) \u0111\u00e3 t\u00ednh tr\u01b0\u1edbc \u0111\u00f3, tuy nhi\u00ean \\(z[i - l]\\) c\u00f3 th\u1ec3 l\u1edbn h\u01a1n \\(r - i + 1\\), t\u1ee9c v\u01b0\u1ee3t bi\u00ean \\(r\\) \u0111\u00e3 duy\u1ec7t, do \u0111\u00f3 ta ch\u1ec9 l\u1ea5y kh\u1edfi t\u1ea1o c\u1ee7a \\(z[i]\\) l\u00e0: $$ z[i] = \\texttt{min}(r - i + 1, z[i - l]) $$  - \\(i &gt; r\\): khi \u0111\u00f3 \\(i\\) n\u1eb1m ngo\u00e0i v\u00f9ng ta \u0111\u00e3 ki\u1ec3m tra, khi \u0111\u00f3 ta kh\u00f4ng th\u1ec3 t\u1eadn d\u1ee5ng g\u00ec n\u00ean ch\u1ec9 kh\u1edfi t\u1ea1o \\(z[i] = 0\\) v\u00e0 l\u00e0m theo thu\u1eadt to\u00e1n ng\u00e2y th\u01a1.</p> <p>T\u1eeb nh\u1eadn x\u00e9t n\u00e0y, ta th\u1ea5y r\u1eb1ng n\u1ebfu \\(k + z[k] - 1\\) c\u00e0ng l\u1edbn, t\u1ee9c \\(r\\) n\u00e0o c\u00e0ng l\u1edbn th\u00ec ta c\u00e0ng c\u00f3 c\u01a1 h\u1ed9i kh\u1edfi t\u1ea1o \u0111\u01b0\u1ee3c \\(z[i]\\) l\u1edbn h\u01a1n (t\u1ee9c \u00edt ph\u1ea3i x\u00e9t l\u1ea1i h\u01a1n). Do \u0111\u00f3 trong qu\u00e1 tr\u00ecnh t\u00ednh \\(z\\) ta s\u1ebd duy tr\u00ec hai bi\u1ebfn \\(l\\) v\u00e0 \\(r\\) v\u1edbi \u00fd ngh\u0129a \u0111o\u1ea1n \\([l,r]\\) l\u00e0 \u0111o\u1ea1n tho\u1ea3 \\(S[l \\ldots r] = S[0 \\ldots r - l]\\) v\u00e0 \\(r\\) l\u00e0 l\u1edbn nh\u1ea5t. khi \u0111\u00f3, m\u1ed7i l\u1ea7n x\u00e9t m\u1ed9t \\(z[i]\\) m\u1edbi ta s\u1ebd kh\u1edfi t\u1ea1o \\(z[i]\\) nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean. Sau khi t\u00ednh xong \\(z[i]\\), ta s\u1ebd c\u1eadp nh\u1eadt l\u1ea1i \\(l\\) v\u00e0 \\(r\\) v\u1edbi \u0111o\u1ea1n \\([i, i + z[i] - 1]\\) m\u1edbi t\u00ednh. T\u1eeb \u0111\u00f3 ta c\u00f3 thu\u1eadt to\u00e1n c\u1ea3i ti\u1ebfn nh\u01b0 sau: <pre><code>vector&lt;int&gt; z_function(string s) {\n    int n = s.length();\n    vector&lt;int&gt; z(n);\n    for (int i = 1, l = 0, r = 0; i &lt; n; ++i) {\n        // khoi tao z[i] theo thuat toan toi uu\n        if (i &lt;= r)  \n            z[i] = min(r - i + 1, z[i - l]);\n        // tinh z[i]\n        while (i + z[i] &lt; n &amp;&amp; s[z[i]] == s[i + z[i]])\n            ++z[i];\n        // cap nhat doan [l,r]\n        if (i + z[i] - 1 &gt; r) {\n            l = i;\n            r = i + z[i] - 1;\n        } \n    }\n    return z;\n}\n</code></pre></p> <p>L\u01b0u \u00fd r\u1eb1ng \u1edf \u0111\u00e2y ta kh\u1edfi t\u1ea1o \\(l = r = 0\\) \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\u00e2y l\u00e0 m\u1ed9t \u0111o\u1ea1n kh\u00f4ng ch\u1ee9a b\u1ea5t k\u1ef3 \\(i &gt; 0\\) n\u00e0o.</p> <p>\u0110\u1ec3 ch\u1ee9ng minh thu\u1eadt to\u00e1n t\u1ed1i \u01b0u ta s\u1ebd xem x\u00e9t s\u1ed1 ph\u00e9p t\u00ednh trong v\u00f2ng l\u1eb7p <code>while</code>. D\u1ec5 th\u1ea5y r\u1eb1ng, m\u1ed7i v\u1ecb tr\u00ed \\(i\\) s\u1ebd ch\u1ec9 c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p sau: - \\(i &gt; r\\): khi n\u00e0y n\u1ebfu \\(z[i] = 0\\) th\u00ec v\u00f2ng l\u1eb7p while s\u1ebd ch\u1ec9 l\u1eb7p m\u1ed9t l\u1ea7n, \\(r\\) s\u1ebd \u0111\u01b0\u1ee3c gi\u1eef nguy\u00ean. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu \\(z[i] &gt; 0\\) th\u00ec sau khi ch\u1ea1y, do \\(i &gt; r\\) n\u00ean ch\u1eafc ch\u1eafn \\(i + z[i] - 1 &gt; r\\), khi \u0111\u00f3 ta s\u1ebd t\u0103ng \\(r\\) l\u00ean th\u00e0nh \\(i + z[i] - 1\\). - \\(i \\leq r\\): ta c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p nh\u1ecf n\u1eefa:     - \\(z[i - l] &lt; r - i + 1\\): do ta \u0111\u00e3 ki\u1ec3m so\u00e1t \u0111\u01b0\u1ee3c \\(s[l \\ldots r]\\) n\u00ean r\u00f5 r\u00e0ng \\(z[i]\\) s\u1ebd kh\u00f4ng th\u1ec3 t\u0103ng l\u00ean n\u1eefa, do \u0111\u00f3 v\u00f2ng l\u1eb7p while s\u1ebd d\u1eebng sau l\u1ea7n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n \u0111\u1ea7u ti\u00ean, \\(r\\) s\u1ebd \u0111\u01b0\u1ee3c gi\u1eef nguy\u00ean.     - \\(z[i - l] \\geq r - i + 1\\): khi \u0111\u00f3, do ta ch\u01b0a bi\u1ebft ph\u00eda sau \u0111o\u1ea1n \\(s[i \\ldots r]\\) c\u00f3 kh\u1edbp ti\u1ebfp kh\u00f4ng, n\u00ean c\u00f3 th\u1ec3 v\u00f2ng while s\u1ebd ph\u1ea3i ch\u1ea1y th\u00eam n\u1eefa. Tuy nhi\u00ean, khi ch\u1ea1y xong, \\(r\\) ch\u1eafc ch\u1eafn ch\u1ec9 c\u00f3 th\u1ec3 gi\u1eef nguy\u00ean (kh\u00f4ng c\u00f3 th\u00eam k\u00fd t\u1ef1 kh\u1edbp n\u00ean \\(z[i] = r - i + 1\\)) ho\u1eb7c t\u0103ng l\u00ean (c\u00f3 th\u00eam k\u00fd t\u1ef1 kh\u1edbp n\u00ean \\(z[i] &gt; r - i + 1\\)).</p> <p>T\u1eeb hai nh\u1eadn x\u00e9t n\u00e0y, ta th\u1ea5y m\u1ed9t \u0111i\u1ec1u quan tr\u1ecdng, \u0111\u00f3 l\u00e0 ph\u00e9p to\u00e1n <code>++z[i]</code> lu\u00f4n l\u00e0m t\u0103ng \\(r\\). M\u00e0 \\(r\\) ch\u1ec9 c\u00f3 th\u1ec3 t\u0103ng ch\u1ee9 kh\u00f4ng gi\u1ea3m, h\u01a1n n\u1eefa gi\u00e1 tr\u1ecb \\(r\\) t\u1ed1i \u0111a ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0 \\(n - 1\\) n\u00ean s\u1ed1 l\u1ea7n t\u0103ng c\u1ee7a \\(r\\) ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0 \\(n - 1\\). T\u1eeb hai \u0111i\u1ec1u n\u00e0y, ta k\u1ebft lu\u1eadn r\u1eb1ng v\u00f2ng l\u1eb7p <code>while</code> ch\u1ec9 l\u1eb7p kh\u00f4ng qu\u00e1 \\(n - 1\\) l\u1ea7n ph\u00e9p <code>++z[i]</code> trong su\u1ed1t qu\u00e1 tr\u00ecnh t\u00ednh \\(z\\). Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n \u0111\u00e3 cho l\u00e0 \\(O(n)\\).</p> <p>K\u0129 thu\u1eadt hai con tr\u1ecf c\u0169ng l\u00e0 m\u1ed9t c\u00e1ch gi\u1ea3i th\u00edch kh\u00e1c cho thu\u1eadt to\u00e1n n\u00e0y. Ta c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng \\(l\\) v\u00e0 \\(r\\) l\u00e0 hai con tr\u1ecf lu\u00f4n t\u0103ng, vi\u1ec7c th\u1ef1c hi\u1ec7n ph\u00e9p <code>++z[i]</code> trong v\u00f2ng l\u1eb7p <code>while</code> c\u0169ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c t\u0103ng \\(r\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb (\\(l\\) l\u00fac n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c g\u00e1n l\u1ea1i b\u1eb1ng \\(i\\) hi\u1ec7n t\u1ea1i). Khi \u0111\u00f3, v\u00ec \\(r\\) kh\u00f4ng bao gi\u1edd t\u0103ng qu\u00e1 \\(n - 1\\) l\u1ea7n n\u00ean ph\u00e9p <code>++z[i]</code> c\u0169ng kh\u00f4ng bao gi\u1edd th\u1ef1c hi\u1ec7n qu\u00e1 \\(n - 1\\) l\u1ea7n, ta k\u1ebft lu\u1eadn thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\).</p>"},{"location":"algo/string/z-algo/#mot-so-ung-dung","title":"M\u1ed9t s\u1ed1 \u1ee9ng d\u1ee5ng","text":""},{"location":"algo/string/z-algo/#so-khop-chuoi","title":"So kh\u1edbp chu\u1ed7i","text":"<p>Cho chu\u1ed7i \\(S\\) \u0111\u1ed9 d\u00e0i \\(n\\) v\u00e0 \\(T\\) \u0111\u1ed9 d\u00e0i \\(m\\), ta c\u1ea7n t\u00ecm chu\u1ed7i con li\u00ean t\u1ee5c trong \\(S\\) sao cho chu\u1ed7i con \u0111\u00f3 b\u1eb1ng v\u1edbi chu\u1ed7i \\(T\\). B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 n\u1ed9p b\u00e0i \u1edf VNOJ.</p> <p>Thu\u1eadt to\u00e1n trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y r\u1ea5t \u0111\u01a1n gi\u1ea3n, ta ch\u1ec9 c\u1ea7n t\u1ea1o chu\u1ed7i m\u1edbi \\(P = T + \\diamond + S\\), khi \u0111\u00f3 ta ch\u1ec9 c\u1ea7n t\u00ednh \\(z\\) c\u1ee7a chu\u1ed7i \\(P\\) m\u1edbi n\u00e0y v\u00e0 ch\u1ecdn ra c\u00e1c \\(i\\) c\u00f3 \\(z[i] = m\\). \u1ede \u0111\u00e2y, \\(\\diamond\\) l\u00e0 m\u1ed9t k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t d\u00f9ng \u0111\u1ec3 ph\u00e2n t\u00e1ch \\(T\\) v\u00e0 \\(S\\) trong chu\u1ed7i \\(P\\), \u0111\u1ea3m b\u1ea3o \\(z[i]\\) kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \u0111\u1ed9 d\u00e0i c\u1ee7a \\(T\\), k\u00fd t\u1ef1 \\(\\diamond\\) n\u00e0y ph\u1ea3i tho\u1ea3 \u0111i\u1ec1u ki\u1ec7n l\u00e0 kh\u00f4ng n\u1eb1m trong c\u1ea3 chu\u1ed7i \\(S\\) v\u00e0 chu\u1ed7i \\(T\\).</p> <p>Gi\u1ea3 s\u1eed $ \\diamond = \\texttt{#} $, thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t b\u1eb1ng ng\u00f4n ng\u1eef C++ nh\u01b0 sau: <pre><code>vector&lt;int&gt; string_matching(string s, string t) {\n    string p = t + '#' + s;\n    int m = t.length();\n    int n = s.length();\n    vector&lt;int&gt; z = z_function(p);\n\n    vector&lt;int&gt; res;\n    for (int i = m + 1; i &lt;= m + n; ++i) {\n        // tim duoc dap an va them vao vector res\n        if (z[i] == m)\n            res.push_back(i - m - 1);\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"algo/string/z-algo/#so-luong-chuoi-con-phan-biet-trong-mot-chuoi-on2","title":"S\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i con ph\u00e2n bi\u1ec7t trong m\u1ed9t chu\u1ed7i \\(O(n^2)\\)","text":"<p>Cho chu\u1ed7i \\(S\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\), ta c\u1ea7n t\u00ecm s\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i con ph\u00e2n bi\u1ec7t c\u1ee7a \\(s\\).</p> <p>Ch\u00fang ta s\u1ebd gi\u1ea3i quy\u1ebft b\u00e0i n\u00e0y m\u1ed9t c\u00e1ch tu\u1ea7n t\u1ef1 nh\u01b0 sau: bi\u1ebft \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i con ph\u00e2n bi\u1ec7t c\u1ee7a chu\u1ed7i \\(s\\) hi\u1ec7n t\u1ea1i l\u00e0 \\(k\\), ta th\u00eam m\u1ed9t k\u00fd t\u1ef1 \\(c\\) v\u00e0o, \u0111\u1ebfm xem c\u00f3 bao nhi\u00eau chu\u1ed7i con ph\u00e2n bi\u1ec7t m\u1edbi c\u1ee7a \\(s + c\\) v\u00e0 c\u1eadp nh\u1eadt l\u1ea1i \\(k\\).</p> <p>G\u1ecdi \\(t = reverse(s + c)\\) l\u00e0 chu\u1ed7i thu \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch vi\u1ebft ng\u01b0\u1ee3c t\u1eeb k\u00fd t\u1ef1 cu\u1ed1i t\u1edbi k\u00fd t\u1ef1 \u0111\u1ea7u c\u1ee7a \\(s + c\\), ta nh\u1eadn x\u00e9t r\u1eb1ng c\u00e1c chu\u1ed7i con ph\u00e2n bi\u1ec7t m\u1edbi s\u1ebd lu\u00f4n k\u1ebft th\u00fac t\u1ea1i \\(c\\). Khi \u0111\u00f3 nhi\u1ec7m v\u1ee5 c\u1ee7a ch\u00fang ta t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c \u0111\u1ebfm xem c\u00f3 bao nhi\u00eau ti\u1ec1n t\u1ed1 c\u1ee7a \\(t\\) kh\u00f4ng xu\u1ea5t hi\u1ec7n \u1edf b\u1ea5t c\u1ee9 \u0111\u00e2u trong \\(t\\). Ta s\u1ebd l\u00e0m \u0111i\u1ec1u \u0111\u00f3 b\u1eb1ng c\u00e1ch t\u00ednh h\u00e0m \\(z\\) c\u1ee7a \\(t\\) v\u00e0 t\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t \\(z_{max}\\). R\u00f5 r\u00e0ng l\u00e0 c\u00e1c chu\u1ed7i con c\u00f3 \u0111\u1ed9 d\u00e0i \\(z_{max}\\) v\u00e0 nh\u1ecf h\u01a1n \u0111\u1ec1u xu\u1ea5t hi\u1ec7n l\u1ea7n th\u1ee9 hai \u0111\u00e2u \u0111\u00f3 trong \\(t\\), c\u00f2n c\u00e1c chu\u1ed7i con c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn h\u01a1n \\(z_{max}\\) s\u1ebd ch\u01b0a xu\u1ea5t hi\u1ec7n. Do \u0111\u00f3, s\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i con m\u1edbi xu\u1ea5t hi\u1ec7n l\u00e0 \\(length(t) - z_{max}\\).</p> <p>V\u1eady, thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta s\u1ebd c\u00f3 v\u00f2ng l\u1eb7p \\(i\\) t\u0103ng t\u1eeb \\(0\\) \u0111\u1ebfn \\(n - 1\\), t\u1ea1i m\u1ed7i \\(i\\), bi\u1ebft \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i ph\u00e2n bi\u1ec7t hi\u1ec7n t\u1ea1i l\u00e0 \\(k\\), ta s\u1ebd t\u00ednh xem s\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i con m\u1edbi xu\u1ea5t hi\u1ec7n khi th\u00eam \\(s[i]\\) v\u00e0o chu\u1ed7i \\(s[0\\ldots i - 1]\\) \u0111\u00e3 x\u00e9t v\u00e0 c\u1eadp nh\u1eadt l\u1ea1i s\u1ed1 l\u01b0\u1ee3ng chu\u1ed7i ph\u00e2n bi\u1ec7t. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(n^2)\\).</p> <pre><code>int num_substr(string s) {\n    vector&lt;int&gt; z = z_function(s);\n    string tmp;\n    int k = 0;\n    int n = s.length();\n    for (int i = 0; i &lt; n; ++i) {\n        tmp = s[i] + tmp;\n        vector&lt;int&gt; z = z_function(tmp);\n        int zmax = *max_element(z.begin(), z.end());\n        k += (i + 1) - zmax;\n    }\n    return k;\n}\n</code></pre> <p>Ch\u00fa \u00fd r\u1eb1ng thay v\u00ec th\u00eam d\u1ea7n d\u1ea7n k\u00fd t\u1ef1 v\u00e0o cu\u1ed1i chu\u1ed7i \\(s\\), ta c\u00f3 th\u1ec3 l\u00e0m \u0111i\u1ec1u ng\u01b0\u1ee3c l\u1ea1i l\u00e0 b\u1ecf d\u1ea7n c\u00e1c k\u00fd t\u1ef1 \u1edf \u0111\u1ea7u chu\u1ed7i \\(s\\), \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a hai c\u00e1ch l\u00e0m n\u00e0y l\u00e0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng nhau.</p>"},{"location":"algo/string/z-algo/#period-finding","title":"Period finding","text":"<p>Cho chu\u1ed7i \\(S\\) \u0111\u1ed9 d\u00e0i \\(n\\), ta c\u1ea7n t\u00ecm chu\u1ed7i \\(t\\) ng\u1eafn nh\u1ea5t sao cho ta c\u00f3 th\u1ec3 t\u1ea1o ra \\(s\\) b\u1eb1ng c\u00e1ch gh\u00e9p m\u1ed9t ho\u1eb7c nhi\u1ec1u b\u1ea3n sao c\u1ee7a chu\u1ed7i \\(t\\) l\u1ea1i.</p> <p>C\u00e1ch gi\u1ea3i b\u00e0i n\u00e0y l\u00e0 t\u00ednh h\u00e0m \\(z\\) cho \\(S\\), sau \u0111\u00f3 x\u00e9t c\u00e1c \\(i\\) m\u00e0 \\(n\\) chia h\u1ebft cho \\(i\\) v\u00e0 d\u1eebng l\u1ea1i \u1edf \\(i\\) \u0111\u1ea7u ti\u00ean tho\u1ea3 \\(i + z[i] = n\\). Khi \u0111\u00f3 k\u1ebft qu\u1ea3 c\u1ee7a ch\u00fang ta l\u00e0 \\(i\\).</p> <pre><code>int length_compress(string s) {\n    vector&lt;int&gt; z = z_function(s);\n    int n = s.length();\n\n    for (int i = 1; i &lt; n; ++i) {\n        if (n % i  == 0 &amp;&amp; i + z[i] == n)\n            return i;\n    }\n    return n;\n}\n</code></pre> <p>T\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a thu\u1eadt to\u00e1n \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh \u1edf ph\u1ea7n Compressing a string trong link n\u00e0y.</p>"},{"location":"algo/string/z-algo/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOI Z-function collection</li> </ul>"},{"location":"algo/trick/FFT/","title":"FFT","text":"<p>T\u00e1c gi\u1ea3: ngmq</p> <p>Trong b\u00e0i n\u00e0y ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 thu\u1eadt to\u00e1n nh\u00e2n nhanh hai \u0111a th\u1ee9c s\u1eed d\u1ee5ng ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier nhanh (Fast Fourier Transform - FFT) v\u00e0 c\u00e1ch c\u00e0i \u0111\u1eb7t c\u1ee7a n\u00f3. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd ch\u1ec9 n\u00eau ch\u1ee9ng minh s\u01a1 l\u01b0\u1ee3c c\u1ee7a m\u1ed9t v\u00e0i t\u00ednh ch\u1ea5t \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. C\u00e1c ch\u1ee9ng minh chi ti\u1ebft c\u00f3 th\u1ec3 t\u00ecm th\u1ea5y \u1edf m\u1ee5c t\u00e0i li\u1ec7u tham kh\u1ea3o ph\u00eda cu\u1ed1i c\u1ee7a b\u00e0i vi\u1ebft.</p>"},{"location":"algo/trick/FFT/#vai-net-lich-su","title":"V\u00e0i n\u00e9t l\u1ecbch s\u1eed","text":"<p>Ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier (Fourier Transform) l\u00e0 m\u1ed9t trong s\u1ed1 nh\u1eefng ph\u00e1t ki\u1ebfn to\u00e1n h\u1ecdc \u0111\u1eb7c s\u1eafc c\u00f3 l\u1ecbch s\u1eed h\u00e0o h\u00f9ng, g\u1eafn li\u1ec1n v\u1edbi nh\u1eefng ph\u00e1t ki\u1ebfn khoa h\u1ecdc v\u00e0 chi\u1ebfn tranh qu\u00e2n s\u1ef1 \u1edf th\u1ebf k\u1ef7 19 v\u00e0 20. Joseph Fourier (1768-1830) l\u00e0 m\u1ed9t nh\u00e0 khoa h\u1ecdc l\u00e0m vi\u1ec7c trong \u0111\u1ed9i qu\u00e2n th\u00e1m hi\u1ec3m Ai C\u1eadp c\u1ee7a Napoleon t\u1eeb n\u0103m 1798. Sau khi c\u00e1ch m\u1ea1ng Ph\u00e1p k\u1ebft th\u00fac n\u0103m 1799, Fourier tr\u1edf v\u1ec1 Ph\u00e1p v\u00e0 tham gia x\u00e2y d\u1ef1ng l\u1ea1i \u0111\u1ea5t n\u01b0\u1edbc trong vai tr\u00f2 m\u1ed9t gi\u00e1o s\u01b0 c\u1ee7a \u0111\u1ea1i h\u1ecdc \u00c9cole Polytechnique. Trong qu\u00e1 tr\u00ecnh l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c c\u00f4ng tr\u00ecnh x\u00e2y d\u1ef1ng c\u1ea7u \u0111\u01b0\u1eddng v\u00e0 \u0111\u00f3ng t\u00e0u, \u00f4ng \u0111\u1eb7c bi\u1ec7t quan t\u00e2m t\u1edbi b\u00e0i to\u00e1n m\u00f4 t\u1ea3 qu\u00e1 tr\u00ecnh truy\u1ec1n d\u1eabn nhi\u1ec7t trong kim lo\u1ea1i, \u0111i\u1ec1u d\u1eabn t\u1edbi s\u1ef1 ra \u0111\u1eddi c\u1ee7a ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier li\u00ean t\u1ee5c v\u00e0o n\u0103m 1807 trong m\u1ed9t b\u00e1o c\u00e1o c\u1ee7a \u00f4ng t\u1ea1i vi\u1ec7n ho\u00e0ng gia Paris. Trong \u0111\u00f3, \u00f4ng m\u00f4 t\u1ea3 m\u1ecdi h\u00e0m s\u1ed1, k\u1ec3 c\u1ea3 c\u00e1c h\u00e0m s\u1ed1 kh\u00f4ng li\u00ean t\u1ee5c \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng t\u1ed5ng c\u1ee7a m\u1ed9t s\u1ed1 v\u00f4 h\u1ea1n c\u00e1c h\u00e0m s\u1ed1 l\u01b0\u1ee3ng gi\u00e1c. Ph\u00e1t bi\u1ec3u n\u00e0y c\u1ee7a Fourier g\u00e2y ch\u1ea5n \u0111\u1ed9ng v\u00e0 \u1ea5n t\u01b0\u1ee3ng t\u1edbi m\u1ee9c nh\u00e0 to\u00e1n h\u1ecdc Ph\u00e1p c\u00f9ng th\u1eddi l\u00e0 Lagrange cho r\u1eb1ng vi\u1ec7c ngh\u0129 ra ph\u00e1t ki\u1ebfn n\u00e0y l\u00e0 g\u1ea7n nh\u01b0 kh\u00f4ng th\u1ec3 (\"nothing short of impossible\") [1]. Trong h\u01a1n m\u1ed9t tr\u0103m n\u0103m sau \u0111\u00f3 ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier tr\u1edf th\u00e0nh m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng nghi\u00ean c\u1ee9u ph\u1ed5 bi\u1ebfn v\u00e0 li\u00ean t\u1ee5c \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n, ho\u00e0n thi\u1ec7n b\u1edfi v\u00f4 s\u1ed1 c\u00e1c t\u00ean tu\u1ed5i l\u1edbn c\u1ee7a to\u00e1n l\u00fd thuy\u1ebft [2].</p> <p>Trong khi phi\u00ean b\u1ea3n nguy\u00ean th\u1ee7y c\u00f3 l\u1ecbch s\u1eed ho\u00e0nh tr\u00e1ng nh\u01b0 v\u1eady, ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier nhanh, d\u00f9 \u0111\u01b0\u1ee3c cho l\u00e0 ra \u0111\u1eddi tr\u01b0\u1edbc, l\u1ea1i \u0111\u01b0\u1ee3c quan t\u00e2m ch\u1eadm h\u01a1n nhi\u1ec1u. Ng\u01b0\u1eddi ta cho r\u1eb1ng nh\u1eefng \u00fd t\u01b0\u1edfng \u0111\u1ea7u ti\u00ean v\u1ec1 bi\u1ebfn \u0111\u1ed5i Fourier nhanh \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi nh\u00e0 to\u00e1n h\u1ecdc \u0110\u1ee9c Carl Friedrich Gauss (1777 - 1855) v\u00e0o n\u0103m 1805 khi \u00f4ng c\u1ed1 g\u1eafng x\u00e1c \u0111\u1ecbnh qu\u1ef9 \u0111\u1ea1o c\u1ee7a c\u00e1c thi\u00ean th\u1ea1ch [3], nh\u01b0ng khi \u0111\u00f3 \u00f4ng kh\u00f4ng c\u00f4ng b\u1ed1 k\u1ebft qu\u1ea3 c\u1ee7a m\u00ecnh. M\u1ed1i li\u00ean h\u1ec7 gi\u1eefa Gauss v\u00e0 ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier nhanh ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e1t hi\u1ec7n khi c\u00e1c c\u00f4ng tr\u00ecnh c\u1ee7a \u00f4ng \u0111\u01b0\u1ee3c t\u1eadp h\u1ee3p v\u00e0 c\u00f4ng b\u1ed1 v\u00e0o n\u0103m 1866. M\u1eb7c d\u00f9 v\u1eady, v\u00e0o th\u1eddi \u0111\u00f3 kh\u00f4ng c\u00f3 ai quan t\u00e2m t\u1edbi c\u00f4ng tr\u00ecnh n\u00e0y v\u00ec l\u00fd thuy\u1ebft \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n ch\u01b0a ph\u00e1t tri\u1ec3n (m\u00e3i t\u1edbi n\u0103m 1936 Alan Turing m\u1edbi ph\u00e1t tri\u1ec3n m\u00f4 h\u00ecnh t\u00ednh to\u00e1n \u0111\u1ea7u ti\u00ean, v\u00e0 ph\u1ea3i t\u1edbi n\u0103m 1965 th\u00ec l\u1ecbch s\u1eed ng\u00e0nh nghi\u00ean c\u1ee9u v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n m\u1edbi b\u1eaft \u0111\u1ea7u v\u1edbi c\u00f4ng tr\u00ecnh c\u1ee7a Hartmanis v\u00e0 Stearns [4]). C\u0169ng trong n\u0103m 1965 hai nh\u00e0 to\u00e1n h\u1ecdc trong ban c\u1ed1 v\u1ea5n khoa h\u1ecdc c\u1ee7a t\u1ed5ng th\u1ed1ng M\u1ef9 Kennedy l\u00e0 James Cooley v\u00e0 John Tukey \u0111\u00e3 t\u1ef1 t\u00ecm ra ph\u00e9p bi\u1ebfn \u0111\u1ed5i nhanh Fourier trong khi thi\u1ebft k\u1ebf h\u1ec7 th\u1ed1ng ph\u00e1t hi\u1ec7n c\u00e1c v\u1ee5 th\u1eed h\u1ea1t nh\u00e2n c\u1ee7a ch\u00ednh quy\u1ec1n X\u00f4 Vi\u1ebft [3]. K\u1ec3 t\u1eeb th\u1eddi \u0111i\u1ec3m \u0111\u00f3 ph\u00e9p bi\u1ebfn \u0111\u1ed5i nhanh Fourier m\u1edbi ch\u00ednh th\u1ee9c \u0111\u01b0\u1ee3c quan t\u00e2m v\u00e0 nghi\u00ean c\u1ee9u \u1ee9ng d\u1ee5ng trong r\u1ea5t nhi\u1ec1u c\u00e1c l\u0129nh v\u1ef1c nghi\u00ean c\u1ee9u kh\u00e1c nhau c\u1ee7a v\u1eadt l\u00fd, sinh h\u1ecdc, \u0111i\u1ec7n t\u1eed, y t\u1ebf, \u0111i\u1ec1u khi\u1ec3n h\u1ecdc...</p> <p>Nghi\u00ean c\u1ee9u ch\u1ec9 ra r\u1eb1ng m\u1eaft v\u00e0 tai ng\u01b0\u1eddi, \u0111\u1ed9ng v\u1eadt c\u00f3 \"c\u00e0i \u0111\u1eb7t\" s\u1eb5n thu\u1eadt to\u00e1n bi\u1ebfn \u0111\u1ed5i Fourier \u0111\u1ec3 gi\u00fap ch\u00fang ta nh\u00ecn v\u00e0 nghe, v\u00ec v\u1eady n\u00f3 \u0111\u01b0\u1ee3c GS Ronald Coifman c\u1ee7a \u0111\u1ea1i h\u1ecdc Yale g\u1ecdi l\u00e0 Ph\u01b0\u01a1ng ph\u00e1p ph\u00e2n t\u00edch d\u1eef li\u1ec7u c\u1ee7a t\u1ef1 nhi\u00ean (\"Nature's way of analyzing data\") [1].</p>"},{"location":"algo/trick/FFT/#phep-nhan-hai-a-thuc","title":"Ph\u00e9p nh\u00e2n hai \u0111a th\u1ee9c","text":"<p>Cho hai \u0111a th\u1ee9c \\(p(x), q(x)\\) c\u00f3 b\u1eadc \\(d, e\\) nh\u01b0 sau:</p> \\[ p(x) = a_0 + a_1 x + a_2 x^2 + ... + a_d x^d $$ $$ q(x) = b_0 + b_1 x + b_2 x^2 + ... + b_e x^e \\] <p>Ta c\u1ea7n t\u00ecm t\u00edch \\(c(x)\\) c\u1ee7a hai \u0111a th\u1ee9c tr\u00ean, c\u00f3 d\u1ea1ng: $$ c(x) = p(x)q(x) = c_0 + c_1 x + c_x x^2 + ... + c_{d+e} x^{d+e} $$</p> <p>trong \u0111\u00f3</p> \\[ c_{j} = \\sum_{i=0}^j a_ib_{j-i} \\qquad j = 0, 1, ..., d+e \\] <p>C\u00e1ch l\u00e0m theo \u0111\u1ecbnh ngh\u0129a l\u00e0 ta nh\u00e2n m\u1ed7i h\u1ec7 s\u1ed1 c\u1ee7a \\(p(x)\\) v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c h\u1ec7 s\u1ed1 c\u1ee7a \\(q(x)\\) r\u1ed3i c\u1ed9ng c\u00e1c h\u1ec7 s\u1ed1 c\u1ee7a c\u00f9ng t\u1ed5ng s\u1ed1 m\u0169. V\u00ec hai \u0111a th\u1ee9c c\u00f3 \\(d+1\\) v\u00e0 \\(e+1\\) h\u1ec7 s\u1ed1 n\u00ean c\u00e1ch l\u00e0m n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O((d+1)(e+1)) = O(de)\\). Khi \\(d\\) v\u00e0 \\(e\\) t\u01b0\u01a1ng \u0111\u1ed1i l\u1edbn c\u1ee1 \\(10^3\\) ho\u1eb7c \\(10^4\\) tr\u1edf l\u00ean th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y l\u00e0 qu\u00e1 l\u1edbn \u0111\u1ec3 ch\u1ea1y tr\u00ean m\u00e1y t\u00ednh, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c m\u00e1y t\u00ednh nh\u00fang \u0111\u00f2i h\u1ecfi t\u1ed1c \u0111\u1ed9 t\u00ednh to\u00e1n nhanh. Ph\u00e9p bi\u1ebfn \u0111\u1ed5i FFT gi\u00fap th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n n\u00f3i tr\u00ean trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N*logN)\\) trong \u0111\u00f3 \\(N\\) l\u00e0 l\u0169y th\u1eeba c\u1ee7a \\(2\\) nh\u1ecf nh\u1ea5t l\u1edbn h\u01a1n \\(d\\) v\u00e0 \\(e\\).</p>"},{"location":"algo/trick/FFT/#bieu-dien-a-thuc-qua-ma-tran-vandermonde","title":"Bi\u1ec3u di\u1ec5n \u0111a th\u1ee9c qua ma tr\u1eadn Vandermonde","text":"<p>K\u1ec3 t\u1eeb ph\u1ea7n n\u00e0y tr\u1edf v\u1ec1 sau, ta quy \u01b0\u1edbc \\(n\\) l\u00e0 s\u1ed1 h\u1ec7 s\u1ed1 c\u1ee7a \u0111a th\u1ee9c (b\u1eadc \\(n-1\\)) v\u00e0 \\(n\\) l\u00e0 m\u1ed9t l\u0169y th\u1eeba c\u1ee7a 2 (\\(n = 2, 4, 8, 16, 32, 64...\\)).</p> <p>X\u00e9t \u0111a th\u1ee9c \\(p(x) = a_0 + a_1 x + a_2 x^2 + ... + a_{n-1} x^{n-1}\\) v\u1edbi b\u1eadc \\(n-1\\) v\u00e0 c\u00e1c h\u1ec7 s\u1ed1 ph\u1ee9c \\(a_i \\in \\mathbb{C}\\). Bi\u1ec3u th\u1ee9c t\u00ednh \\(n\\) gi\u00e1 tr\u1ecb c\u1ee7a \\(p(x)\\) t\u1ea1i \\(n\\) \u0111i\u1ec3m \\(z_0, z_1, ... z_{n-1}\\) c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n qua ph\u00e9p nh\u00e2n ma tr\u1eadn nh\u01b0 sau:</p> \\[ \\begin{bmatrix}     1       &amp; z_0^1 &amp; z_0^2 &amp; \\dots &amp; z_0^{n-1} \\newline        1      &amp; z_1 &amp; z_1^2 &amp; \\dots &amp; z_1^{n-1} \\newline     \\ldots &amp; \\ldots &amp; \\ldots &amp; \\ldots &amp; \\ldots\\newline        1       &amp; z_{n-1}^1 &amp; z_{n-1}^2 &amp; \\dots &amp; z_{n-1}^{n-1} \\end{bmatrix} \\begin{bmatrix}     a_0 \\newline a_1 \\newline \\vdots  \\newline a_{n-1} \\end{bmatrix} \\] <p>\\(=\\)</p> \\[ \\begin{bmatrix}     p(z_0) \\newline p(z_1) \\newline \\vdots  \\newline p(z_{n-1}) \\end{bmatrix} \\space (1) \\] <p>Ma tr\u1eadn vu\u00f4ng \\(V\\) k\u00edch c\u1ee1 \\(n*n\\) c\u1ee7a \\(z_{0:{n-1}}\\) \u1edf tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ma tr\u1eadn Vandermonde. Ta c\u00f3 c\u00e1c \u0111\u1ecbnh l\u00fd sau:</p> <p>\u0110\u1ecbnh l\u00fd 1: \u0110\u1ecbnh th\u1ee9c c\u1ee7a ma tr\u1eadn Vandermonde l\u00e0 \\(\\(det(V) = \\prod_{0 \\leq i &lt; j \\leq n-1}(z_j - z_i)\\)\\)</p> <p>Ch\u1ee9ng minh (s\u01a1 l\u01b0\u1ee3c): V\u1edbi m\u1ed7i h\u00e0ng \\(i = 0, 1, ...n-2\\) c\u1ee7a \u0111\u1ecbnh th\u1ee9c ta li\u00ean t\u1ee5c thay h\u00e0ng \\(j = i+1, i+2, ...n-1\\) b\u1eb1ng hi\u1ec7u c\u1ee7a c\u00e1c h\u1ec7 s\u1ed1 c\u1ee7a h\u00e0ng \\(j\\) tr\u1eeb \u0111i h\u00e0ng \\(i\\). \u0110\u00e2y l\u00e0 ph\u00e9p bi\u1ebfn \u0111\u1ed5i c\u01a1 b\u1ea3n (elementary operation) n\u00ean gi\u00e1 tr\u1ecb \u0111\u1ecbnh th\u1ee9c c\u1ea7n t\u00ednh kh\u00f4ng \u0111\u1ed5i. L\u1ea5y nh\u00e2n t\u1eed chung \\(z_j - z_i\\) \u1edf t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng ra ngo\u00e0i v\u00e0 x\u00e9t ti\u1ebfp h\u00e0ng \\(i+1\\). Sau khi x\u00e9t xong \\(i = n-2\\) ta \u0111\u01b0\u1ee3c m\u1ed9t ma tr\u1eadn ch\u00e9o c\u00f3 \u0111\u01b0\u1eddng ch\u00e9o ch\u1ec9 g\u1ed3m \\(z_{ii} = 1\\), \u0111\u1ecbnh th\u1ee9c c\u1ee7a ma tr\u1eadn n\u00e0y hi\u1ec3n nhi\u00ean b\u1eb1ng 1. V\u00ec v\u1eady \u0111\u1ecbnh th\u1ee9c c\u1ea7n t\u00ednh l\u00e0 t\u00edch c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c nh\u00e2n t\u1eed chung b\u1ecf ra ngo\u00e0i \u1edf c\u00e1c b\u01b0\u1edbc tr\u01b0\u1edbc \u0111\u00f3.</p> <p>Ph\u00e9p ch\u1ee9ng minh b\u1eb1ng quy n\u1ea1p c\u00f3 th\u1ec3 xem th\u00eam t\u1ea1i \u0111\u00e2y</p> <p>\u0110\u1ecbnh l\u00fd 2: \u0110a th\u1ee9c \\(p(x)\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh duy nh\u1ea5t b\u1edfi c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 \\(p(z_0), p(z_1), ... p(z_{n-1})\\) khi \\(n\\) gi\u00e1 tr\u1ecb \\(z_0, z_1, ... z_{n-1}\\) ph\u00e2n bi\u1ec7t. Ta g\u1ecdi \u0111\u00e2y l\u00e0 ph\u00e9p bi\u1ebfn \u0111\u1ed5i ng\u01b0\u1ee3c.</p> <p>Ch\u1ee9ng minh:</p> <p>Coi ph\u01b0\u01a1ng tr\u00ecnh \\((1)\\) l\u00e0 m\u1ed9t h\u1ec7 ph\u01b0\u01a1ng tr\u00ecnh \\(n\\) \u1ea9n v\u1edbi b\u1ed9 nghi\u1ec7m \\(a_0, a_1, ...a_{n-1}\\). \u0110\u1ec3 \u0111a th\u1ee9c \\(p(x)\\) x\u00e1c \u0111\u1ecbnh v\u00e0 duy nh\u1ea5t th\u00ec \u0111\u1ecbnh th\u1ee9c c\u1ee7a ma tr\u1eadn \\(V\\) \u1edf tr\u00ean ph\u1ea3i kh\u00e1c \\(0\\). Theo \u0110\u1ecbnh l\u00fd 1 ta c\u00f3 \u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh.</p> <p>H\u1ec7 qu\u1ea3: khi \\(V\\) kh\u1ea3 ngh\u1ecbch, h\u1ec7 s\u1ed1 \\(a_0, a_1, ...a_{n-1}\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh th\u00f4ng qua t\u00edch c\u1ee7a ma tr\u1eadn ngh\u1ecbch \u0111\u1ea3o \\(V^{-1}\\) c\u1ee7a \\(V\\) v\u00e0 \\(p(z_0), p(z_1), ...p(z_{n-1})\\).</p> <p>T\u1eeb \u0111\u1ecbnh l\u00fd 2, ta th\u1ea5y r\u1eb1ng 1 \u0111a th\u1ee9c b\u1ea5t k\u1ef3 c\u00f3 2 c\u00e1ch bi\u1ec3u di\u1ec5n:</p> <ol> <li>D\u00f9ng \\(n\\) h\u1ec7 s\u1ed1 \\(a_i\\)</li> <li>D\u00f9ng \\(n\\) c\u1eb7p gi\u00e1 tr\u1ecb \\(z_i, p(z_i)\\).</li> </ol> <p>\u0110\u00e2y ch\u00ednh l\u00e0 n\u1ec1n t\u1ea3ng c\u1ee7a vi\u1ec7c t\u00ednh nhanh t\u00edch c\u1ee7a 2 \u0111a th\u1ee9c s\u1eed d\u1ee5ng FFT:</p> <ol> <li>Ch\u1ecdn 1 d\u00e3y \\(z_i\\) g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed. \\(z_i\\) c\u00f3 th\u1ec3 ch\u1ecdn tu\u1ef3 \u00fd mi\u1ec5n sao gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang l\u00e0 \u0111\u00f4i m\u1ed9t kh\u00e1c nhau \u0111\u1ec3 c\u00e1c \u0111a th\u1ee9c \\(p(x)\\), \\(q(x)\\) v\u00e0 \\(c(x)\\) l\u00e0 x\u00e1c \u0111\u1ecbnh v\u00e0 duy nh\u1ea5t.</li> <li>Chuy\u1ec3n 2 \u0111a th\u1ee9c \\(p(x)\\) v\u00e0 \\(q(x)\\) sang c\u00e1ch bi\u1ec3u di\u1ec5n 2. (d\u00f9ng FFT)</li> <li>T\u00ednh t\u00edch c\u1ee7a 2 \u0111a th\u1ee9c trong c\u00e1ch bi\u1ec3u di\u1ec5n 2 trong \\(O(N)\\). \u0110i\u1ec1u n\u00e0y c\u1ef1c k\u1ef3 \u0111\u01a1n gi\u1ea3n, v\u00ec khi ta \u0111\u00e3 c\u1ed1 \u0111\u1ecbnh d\u00e3y \\(z_i\\), ta c\u00f3 th\u1ec3 t\u00ednh t\u1ea5t c\u1ea3 \\(c(z_i) = p(z_i) q(z_i)\\) trong \\(O(N)\\).</li> <li>Chuy\u1ec3n \u0111a th\u1ee9c \\(c(x)\\) v\u1ec1 c\u00e1ch bi\u1ec3u di\u1ec5n 1 (d\u00f9ng FFT).</li> </ol>"},{"location":"algo/trick/FFT/#nghiem-nguyen-thuy","title":"Nghi\u1ec7m nguy\u00ean th\u1ee7y","text":"<p>Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, ta c\u1ea7n ch\u1ecdn d\u00e3y \\(z_i\\) sao cho vi\u1ec7c bi\u1ebfn \u0111\u1ed5i \u0111a th\u1ee9c gi\u1eefa 2 c\u00e1ch bi\u1ec3u di\u1ec5n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3. N\u1ebfu ta ch\u1ecdn \\(z_i\\) l\u00e0 c\u00e1c nghi\u1ec7m nguy\u00ean th\u1ee7y tho\u1ea3 m\u00e3n:</p> \\[ z^n = 1 \\qquad z \\in \\mathbb{C} \\qquad (2) \\] <p>v\u1edbi \\(n\\) nh\u01b0 \u0111\u00e3 quy \u01b0\u1edbc v\u00e0 c\u0169ng l\u00e0 s\u1ed1 nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh \\((2)\\) m\u00e0 ta c\u1ea7n. C\u00f4ng th\u1ee9c Euler x\u00e1c \u0111\u1ecbnh nghi\u1ec7m th\u1ee9 \\(k\\) c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh \\((2)\\) l\u00e0</p> \\[ z_k = w_n^k = (e^{ {2\\pi i}\\over n})^k = e^{ {2\\pi i}k\\over n} = cos{{2\\pi k}\\over n} + isin{{2\\pi k}\\over n} \\qquad k = 0, 1, ... n - 1 \\] <p>trong \u0111\u00f3 \\(w_n\\) l\u00e0 nghi\u1ec7m m\u0169 1:</p> \\[ w_n = e^{ {2\\pi i}\\over n} = cos{{2\\pi}\\over n} + isin{{2\\pi}\\over n} \\] <p>D\u1ec5 th\u1ea5y l\u00e0 nghi\u1ec7m nguy\u00ean th\u1ee7y th\u1ee9 \\(k\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ednh trong \\(O(1)\\) v\u1edbi \\(n\\) \u0111\u00e3 bi\u1ebft.</p>"},{"location":"algo/trick/FFT/#mot-so-tinh-chat-ac-biet-cua-ma-tran-vandermonde-nghiem-nguyen-thuy","title":"M\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t c\u1ee7a ma tr\u1eadn Vandermonde nghi\u1ec7m nguy\u00ean th\u1ee7y","text":"<p>T\u00ednh ch\u1ea5t 1: Ma tr\u1eadn ngh\u1ecbch \u0111\u1ea3o \\(V^{-1}\\) \u0111\u01b0\u1ee3c t\u00ednh theo c\u00f4ng th\u1ee9c: \\(V^{-1}[i,j] = {V[i,j]^{-1} \\over n}\\) v\u1edbi \\(i, j = 0, 1,...n-1\\) l\u00e0 ch\u1ec9 s\u1ed1 h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn.</p> <p>Ch\u1ee9ng minh (s\u01a1 l\u01b0\u1ee3c): g\u1ecdi \\(B\\) l\u00e0 ma tr\u1eadn k\u00edch c\u1ee1 \\(n * n\\) t\u1ea1o b\u1edfi</p> \\[ B[i, j] = V[i,j]^{-1} \\qquad \\forall i, j = 0, 1,...n-1 \\] <p>Ta s\u1ebd ch\u1ee9ng minh t\u00edch \\(P = B * V = V * B = n * I\\), trong \u0111\u00f3 \\(I\\) l\u00e0 ma tr\u1eadn \u0111\u01a1n v\u1ecb.</p> <p>X\u00e9t ph\u00e9p nh\u00e2n h\u00e0ng \\(i\\) c\u1ee7a ma tr\u1eadn \\(V\\) v\u00e0 c\u1ed9t \\(k\\) c\u1ee7a ma tr\u1eadn \\(B\\), ta c\u00f3: $$ P[i, k] = \\sum_{j=0}^{n-1}w_n^{ij}w_n^{-jk} = \\sum_{j=0}^{n-1}w_n^{j(i-k)} $$</p> <ul> <li>N\u1ebfu \\(i = k:\\) \\(P[i, k] = P[i, i] = \\sum_{j=0}^{n-1}w_n^0 = n \\qquad \\forall i = 0, 1, ...n-1\\).</li> <li>N\u1ebfu \\(i \\neq k:\\) \\(P[i, k] = \\sum_{j=0}^{n-1}{w_n^{i-k}}^j = {1 - {w_n^{i-k}}^n \\over {1-w_n^{i-k}}} = 0\\)</li> </ul> <p>V\u1eady \\(P = nI\\) hay l\u00e0 \\(V * B/n = B/n * V = I\\), v\u1eady \\(B = V^{-1}\\).</p> <p>H\u1ec7 qu\u1ea3: \u0110\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n cho \\(V^{-1}\\) b\u1eb1ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh \\(V\\).</p> <p>T\u00ednh ch\u1ea5t 2: Chia ma tr\u1eadn \\(V\\) th\u00e0nh \\(4\\) ph\u1ea7n b\u1eb1ng nhau k\u00edch c\u1ee1 \\(n/2 * n/2\\) theo \\(2\\) ti\u00eau ch\u00ed: \u0111\u1ed9 l\u1edbn c\u1ee7a h\u00e0ng so v\u1edbi \\(n/2\\) v\u00e0 t\u00ednh ch\u1eb5n l\u1ebb c\u1ee7a c\u00e1c c\u1ed9t.</p> <ul> <li>Ph\u1ea7n \\(I\\) g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 h\u00e0ng   \\(0, 1,...n/2 - 1\\) v\u00e0 ch\u1ec9 s\u1ed1 c\u1ed9t l\u00e0 ch\u1eb5n \\(0, 2, 4, ...n-2\\).</li> <li>Ph\u1ea7n \\(II\\) g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 h\u00e0ng  \\(0, 1,...n/2 - 1\\) v\u00e0 ch\u1ec9 s\u1ed1 c\u1ed9t l\u00e0 l\u1ebb   \\(1, 3, 5, ...n-1\\).</li> <li>Ph\u1ea7n \\(III\\) g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 h\u00e0ng \\(n/2, n/2+1,...n-1\\) v\u00e0 ch\u1ec9 s\u1ed1 c\u1ed9t l\u00e0 ch\u1eb5n  \\(0, 2, 4, ...n-2\\).</li> <li>Ph\u1ea7n \\(IV\\) g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 h\u00e0ng  \\(n/2, n/2+1,...n-1\\) v\u00e0 ch\u1ec9 s\u1ed1 c\u1ed9t l\u00e0 l\u1ebb  \\(1, 3, 5, ...n-1\\).</li> </ul> <p> (Image Courtesy of Aalto University)</p> <p>N\u00f3i c\u00e1ch kh\u00e1c, ta t\u1ea1o m\u1ed9t ma tr\u1eadn m\u1edbi \\(K\\) b\u1eb1ng c\u00e1ch chuy\u1ec3n t\u1ea5t c\u1ea3 c\u00e1c c\u1ed9t c\u00f3 ch\u1ec9 s\u1ed1 ch\u1eb5n c\u1ee7a ma tr\u1eadn \\(V\\) l\u00ean tr\u01b0\u1edbc, c\u00e1c c\u1ed9t c\u00f3 ch\u1ec9 s\u1ed1 l\u1ebb v\u1ec1 sau, gi\u1eef nguy\u00ean th\u1ee9 t\u1ef1 t\u01b0\u01a1ng \u0111\u1ed1i c\u1ee7a c\u00e1c c\u1ed9t c\u00f9ng ch\u1ec9 s\u1ed1 ch\u1eb5n ho\u1eb7c c\u00f9ng ch\u1ec9 s\u1ed1 l\u1ebb. \u1ede ma tr\u1eadn \\(K\\) n\u00e0y c\u1ed9t \\(n-2\\) c\u1ee7a \\(V\\) n\u1eb1m ngay tr\u01b0\u1edbc c\u1ed9t \\(1\\) c\u1ee7a \\(V\\). B\u1ed1n ph\u1ea7n \\(I, II, III, IV\\) \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi c\u1eaft \u0111\u1ec1u ma tr\u1eadn \\(K\\) th\u00e0nh 4 ph\u1ea7n b\u1eb1ng nhau.</p> <p>K\u00fd hi\u1ec7u \\(K_I, K_{II}, K_{III}, K_{IV}\\) l\u00e0 b\u1ed1n ma tr\u1eadn con c\u1ee7a \\(K\\). T\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed trong ph\u1ea7n \\(II, III, IV\\) \u0111\u1ec1u c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c t\u1eeb ph\u1ea7n \\(I\\) theo c\u00f4ng th\u1ee9c sau:</p> \\[ K_{II}[i, j] = w_n^i K_I[i,j] \\qquad \\forall i, j = 0, 1, ...n/2 - 1 $$ $$ K_{III}[i,j] = K_{I}[i,j] \\qquad \\forall i, j = 0, 1, ...n/2 - 1 $$ $$ K_{IV}[i, j] = -w_n^i K_I[i,j] \\qquad \\forall i, j = 0, 1, ...n/2 - 1 \\] <p>Ch\u1ee9ng minh: c\u00e1c b\u1ea1n t\u1ef1 ch\u1ee9ng minh ho\u1eb7c xem slide s\u1ed1 23 trong t\u00e0i li\u1ec7u c\u1ee7a tr\u01b0\u1eddng DH Aalto \u1edf ph\u1ea7n t\u00e0i li\u1ec7u tham kh\u1ea3o.</p> <p>T\u00ednh ch\u1ea5t 3: ma tr\u1eadn ngh\u1ecbch \u0111\u1ea3o \\(V^{-1}\\) c\u0169ng c\u00f3 th\u1ec3 chia th\u00e0nh \\(4\\) ph\u1ea7n b\u1eb1ng nhau v\u1edbi c\u00e1c ph\u1ea7n \\(II, III, IV\\) t\u00ednh \u0111\u01b0\u1ee3c qua ph\u1ea7n \\(I\\) gi\u1ed1ng nh\u01b0 T\u00ednh ch\u1ea5t 2.</p> <p>H\u1ec7 qu\u1ea3: Ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier ng\u01b0\u1ee3c (inverse Fourier transform) c\u00f3 c\u00f9ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1edbi ph\u00e9p bi\u1ec3n \u0111\u1ed5i Fourier.</p>"},{"location":"algo/trick/FFT/#phep-bien-oi-fourier-nhanh","title":"Ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier nhanh","text":"<p>Trong ph\u1ea7n tr\u00ean ta \u0111\u00e3 th\u1ea5y vai tr\u00f2 c\u1ee7a ma tr\u1eadn Vandermonde \\(V\\) l\u00e0 bi\u1ebfn \u0111\u1ed5i m\u1ed9t vector c\u1ed9t \\(a_0, a_1, ...a_{n-1}\\) th\u00e0nh m\u1ed9t vector c\u1ed9t kh\u00e1c c\u00f9ng k\u00edch c\u1ee1 \\(p(z_0), p(z_1), ...p(z_{n-1})\\). Ph\u00e9p bi\u1ebfn \u0111\u1ed5i n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"Bi\u1ebfn \u0111\u1ed5i Fourier r\u1eddi r\u1ea1c\" (Discrete Fourier Transform). L\u01b0u \u00fd l\u00e0 m\u1eb7c d\u00f9 hai kh\u00e1i ni\u1ec7m \"Bi\u1ebfn \u0111\u1ed5i Fourier r\u1eddi r\u1ea1c\" (DFT) v\u00e0 \"Ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier nhanh\" (FFT) l\u00e0 kh\u00e1c nhau nh\u01b0ng v\u00ec khi c\u00e0i \u0111\u1eb7t DFT ng\u01b0\u1eddi ta lu\u00f4n s\u1eed d\u1ee5ng FFT n\u00ean hai kh\u00e1i ni\u1ec7m n\u00e0y \u0111\u01b0\u1ee3c coi nh\u01b0 \u0111\u1ed3ng nh\u1ea5t.</p> <p>\u0110\u1ecbnh l\u00fd 3: T\u1ed3n t\u1ea1i thu\u1eadt to\u00e1n bi\u1ebfn \u0111\u1ed5i Fourier r\u1eddi r\u1ea1c c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(nlog_2n)\\).</p> <p>Ch\u1ee9ng minh: S\u1eed d\u1ee5ng l\u1ea1i k\u00fd hi\u1ec7u trong h\u00ecnh v\u1ebd \u1edf ph\u1ea7n tr\u00ean, ta g\u1ecdi \\(X\\) l\u00e0 vector c\u1ea7n bi\u1ebfn \u0111\u1ed5i Fourier v\u00e0 \\(Y\\) l\u00e0 vector k\u1ebft qu\u1ea3 t\u01b0\u01a1ng \u1ee9ng. Thay v\u00ec s\u1eed d\u1ee5ng ma tr\u1eadn \\(V\\) \u0111\u1ec3 nh\u00e2n v\u1edbi \\(X\\), ta s\u1eed d\u1ee5ng ma tr\u1eadn \\(K\\) l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p bi\u1ebfn \u0111\u1ed5i nh\u01b0 trong \u0110\u1ecbnh l\u00fd 2 \u0111\u1ec3 nh\u00e2n v\u1edbi \\(X\\). L\u01b0u \u00fd l\u00e0 v\u00ec \\(V\\) \u0111\u00e3 \u0111\u1ed5i th\u1ee9 t\u1ef1 c\u1ed9t n\u00ean \\(X\\) c\u0169ng ph\u1ea3i \u0111\u1ed5i th\u1ee9 t\u1ef1 h\u00e0ng: t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng c\u00f3 ch\u1ec9 s\u1ed1 ch\u1eb5n c\u1ee7a \\(X\\) \u0111\u01b0\u1ee3c chuy\u1ec3n l\u00ean tr\u00ean v\u00e0 c\u00e1c h\u00e0ng ch\u1ec9 s\u1ed1 l\u1ebb chuy\u1ec3n xu\u1ed1ng d\u01b0\u1edbi. H\u00ecnh minh h\u1ecda v\u1edbi \\(n = 4\\) v\u00e0 \\(4\\) nghi\u1ec7m \u0111\u1ec3 thay v\u00e0o ma tr\u1eadn Vandermonde l\u00e0 \\(1, i, -1, -i\\):</p> <p> (Image Courtesy: Aalto University)</p> <p>T\u00e1ch vector k\u1ebft qu\u1ea3 \\(Y\\) th\u00e0nh hai ph\u1ea7n theo \\(n/2\\), ta \u0111\u01b0\u1ee3c:</p> <p> (Image Courtesy: Aalto University)</p> <p>Ta quan s\u00e1t l\u00e0 c\u00f4ng th\u1ee9c t\u00ednh n\u1eeda tr\u00ean v\u00e0 n\u1eeda d\u01b0\u1edbi c\u1ee7a vector c\u1ed9t k\u1ebft qu\u1ea3 \\(Y\\) s\u1eed d\u1ee5ng chung hai h\u1ea1ng t\u1eed v\u00e0 ch\u1ec9 kh\u00e1c nhau v\u1ec1 d\u1ea5u c\u1ee7a h\u1ea1ng t\u1eed th\u1ee9 hai. N\u00f3i c\u00e1ch kh\u00e1c, ch\u1ec9 c\u1ea7n t\u00ednh \u0111\u01b0\u1ee3c hai h\u1ea1ng t\u1eed t\u1ea1o th\u00e0nh k\u1ebft qu\u1ea3 c\u1ee7a vector k\u00edch c\u1ee1 \\(n/2\\) l\u00e0 ta thu \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 c\u1ee7a c\u1ea3 vector k\u00edch c\u1ee1 \\(n\\) trong \\(O(n)\\). Theo \u0111\u1ecbnh l\u00fd t\u1ed5ng qu\u00e1t, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u1ea3 qu\u00e1 tr\u00ecnh l\u00e0 \\(O(nlog_2n)\\)</p> <p>C\u00f4ng th\u1ee9c truy h\u1ed3i: T\u1eeb t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t c\u1ee7a ma tr\u1eadn \\(K\\), ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i m\u1ed9t vector c\u1ed9t \\(X\\) th\u00e0nh vector c\u1ed9t \\(Y\\) nh\u01b0 sau:</p> \\[ FFT(x_{i=0, 1, 2,...n/2 - 1}) = FFT(x_{i=0, 2, 4, ...x_{n-2}}) + w_n^i FFT(x_{i=1, 3, 5...n-1}) $$ $$ FFT(x_{i=n/2, n/2+1, n/2+2,...n-1}) = FFT(x_{i=0, 2, 4, ...x_{n-2}}) - w_n^i FFT(x_{i=1, 3, 5...n-1}) \\]"},{"location":"algo/trick/FFT/#thuat-toan-nhan-hai-a-thuc","title":"Thu\u1eadt to\u00e1n nh\u00e2n hai \u0111a th\u1ee9c","text":"<p>\u0110\u1ebfn \u0111\u00e2y ta \u0111\u00e3 c\u00f3 th\u1ec3 ho\u00e0n thi\u1ec7n ch\u01b0\u01a1ng tr\u00ecnh nh\u00e2n 2 \u0111a th\u1ee9c \\(p(x), q(x)\\) v\u00e0 l\u01b0u k\u1ebft qu\u1ea3 th\u00e0nh \\(h(x)\\): <pre><code>function Nh\u00e2n\u0110aTh\u1ee9c( p(x), q(x), n )\n\n// L\u01b0u \u00fd: n l\u00e0 s\u1ed1 h\u1ec7 s\u1ed1 c\u1ee7a \u0111a th\u1ee9c k\u1ebft qu\u1ea3\n// N\u1ebfu p(x) c\u00f3 b\u1eadc d v\u00e0 q(x) c\u00f3 b\u1eadc e th\u00ec n = d + e + 1\n\nfp[] = FFT(p(x), n) // bi\u1ebfn \u0111\u1ed5i Fourier cho p(x) v\u00e0 l\u01b0u c\u00e1c gi\u00e1 tr\u1ecb v\u00e0o m\u1ea3ng fp\nfq[] = FFT(q(x), n) // bi\u1ebfn \u0111\u1ed5i Fourier cho q(x) v\u00e0 l\u01b0u c\u00e1c gi\u00e1 tr\u1ecb v\u00e0o m\u1ea3ng fq\n\nfor(i = 0; i &lt; n; ++i)\n   fh[i] = fp[i] * fq[i]; // nh\u00e2n t\u01b0\u01a1ng \u1ee9ng c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a fp v\u00e0 fq, l\u01b0u v\u00e0o m\u1ea3ng fh\n\nh(x) = FFT_ng\u01b0\u1ee3c(fh) // bi\u1ebfn \u0111\u1ed5i Fourier ng\u01b0\u1ee3c v\u00e0 l\u01b0u v\u00e0o k\u1ebft qu\u1ea3\n\nend function\n</code></pre></p>"},{"location":"algo/trick/FFT/#luu-y-ve-ky-thuat-cai-at","title":"L\u01b0u \u00fd v\u1ec1 k\u1ef9 thu\u1eadt c\u00e0i \u0111\u1eb7t","text":"<p>V\u00ec FFT \u0111\u00f2i h\u1ecfi ph\u1ea3i s\u1eed d\u1ee5ng s\u1ed1 ph\u1ee9c v\u00e0 (trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p) kh\u1eed \u0111\u1ec7 quy n\u00ean c\u00f3 th\u1ec3 g\u00e2y kh\u00f3 kh\u0103n cho c\u00e1c b\u1ea1n ch\u01b0a quen, ph\u1ea7n n\u00e0y s\u1ebd h\u01b0\u1edbng d\u1eabn s\u01a1 l\u01b0\u1ee3c v\u1ec1 c\u00e1ch c\u00e0i \u0111\u1eb7t s\u1eed d\u1ee5ng <code>C++</code>.</p>"},{"location":"algo/trick/FFT/#khai-bao","title":"Khai b\u00e1o","text":"<p>\u0110\u1ec3 s\u1eed d\u1ee5ng s\u1ed1 ph\u1ee9c trong <code>C++</code> ta c\u1ea7n khai b\u00e1o th\u01b0 vi\u1ec7n <code>complex</code>:</p> <p><pre><code>## include &lt;complex&gt;\n</code></pre> V\u00ec <code>C++</code> c\u00e0i \u0111\u1eb7t <code>complex</code> l\u00e0 m\u1ed9t l\u1edbp (<code>class</code>) g\u1ed3m 2 tr\u01b0\u1eddng th\u1ef1c (<code>real()</code>) v\u00e0 \u1ea3o (<code>imag()</code>) n\u00ean khi s\u1eed d\u1ee5ng ta c\u1ea7n ch\u1ec9 \u0111\u1ecbnh ki\u1ec3u d\u1eef li\u1ec7u cho hai tr\u01b0\u1eddng n\u00e0y. Hai ki\u1ec3u d\u1eef li\u1ec7u th\u00f4ng d\u1ee5ng l\u00e0 <code>double</code> ho\u1eb7c <code>long double</code>:</p> <pre><code>typedef complex&lt;double&gt; base;\ntypedef vector&lt;base&gt; vb;\n</code></pre> <p>Sau khi \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng l\u1ec7nh <code>typedef</code> th\u00ec \u0111\u1ec3 khai b\u00e1o bi\u1ebfn v\u00e0 vector ki\u1ec3u ph\u1ee9c, ta ch\u1ec9 c\u1ea7n vi\u1ebft <code>base x</code> v\u00e0 <code>vb v</code> l\u00e0 \u0111\u01b0\u1ee3c.</p> <p>M\u1ed9t s\u1ed1 phi\u00ean b\u1ea3n c\u00e0i \u0111\u1eb7t t\u1ef1 \u0111\u1ecbnh ngh\u0129a l\u1edbp s\u1ed1 \u1ea3o b\u1eb1ng m\u1ed9t <code>struct</code> ho\u1eb7c <code>class</code>. N\u1ebfu l\u1edbp t\u1ef1 vi\u1ebft n\u00e0y kh\u00f4ng c\u00f3 ch\u1ee9c n\u0103ng \u0111\u1eb7c bi\u1ec7t n\u00e0o th\u00ec vi\u1ec7c n\u00e0y l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft v\u00ec b\u1ea3n th\u00e2n <code>&lt;complex&gt;</code> \u0111\u00e3 l\u00e0 m\u1ed9t l\u1edbp r\u1ed3i. B\u1ea1n c\u00f3 th\u1ec3 xem qua file th\u01b0 vi\u1ec7n trong th\u01b0 m\u1ee5c c\u00e0i \u0111\u1eb7t tr\u00ecnh bi\u00ean d\u1ecbch, v\u00ed d\u1ee5 v\u1edbi CodeBlocks th\u00ec \u0111\u01b0\u1eddng d\u1eabn c\u00f3 d\u1ea1ng <code>CodeBlocks\\MinGW\\lib\\gcc\\mingw32\\4.7.1\\include\\c++\\complex</code> (file ko c\u00f3 ph\u1ea7n m\u1edf r\u1ed9ng).</p>"},{"location":"algo/trick/FFT/#chuan-hoa-bac-a-thuc","title":"Chu\u1ea9n h\u00f3a b\u1eadc \u0111a th\u1ee9c","text":"<p>Trong c\u00e1c ph\u1ea7n tr\u00ean ta \u0111\u00e3 gi\u1ea3 s\u1eed r\u1eb1ng \\(n\\) l\u00e0 l\u0169y th\u1eeba c\u1ee7a \\(2\\). \u0110\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh \u0111\u1ed1i x\u1ee9ng v\u00e0 thu\u1eadn ti\u1ec7n khi c\u00e0i \u0111\u1eb7t, n\u1ebfu \u0111\u1ec1 b\u00e0i kh\u00f4ng cho tr\u01b0\u1edbc \\(n\\) b\u1eadc c\u1ee7a \u0111a th\u1ee9c l\u00e0 l\u0169y th\u1eeba c\u1ee7a \\(2\\) th\u00ec ta c\u1ea7n chu\u1ea9n h\u00f3a th\u00e0nh s\u1ed1 l\u0169y th\u1eeba nh\u1ecf nh\u1ea5t m\u00e0 l\u1edbn h\u01a1n \\(n\\). Ch\u1eb3ng h\u1ea1n v\u1edbi \\(n = 10^5\\) th\u00ec gi\u00e1 tr\u1ecb chu\u1ea9n h\u00f3a l\u00e0 \\(2^{17} = 131072\\) v\u00ec \\(2^{16} = 65536 &lt; 10^5\\). C\u00e1c h\u1ec7 s\u1ed1 c\u1ee7a b\u1eadc cao h\u01a1n gi\u00e1 tr\u1ecb \\(n\\) ban \u0111\u1ea7u g\u00e1n b\u1eb1ng \\(0\\).</p>"},{"location":"algo/trick/FFT/#e-quy-va-khu-e-quy","title":"\u0110\u1ec7 quy v\u00e0 Kh\u1eed \u0111\u1ec7 quy","text":"<p>\u0110\u1ec7 quy:</p> <p>X\u00e9t m\u1ed9t \u0111o\u1ea1n m\u00e3 <code>C++</code> c\u00e0i \u0111\u1eb7t h\u00e0m FFT s\u1eed d\u1ee5ng \u0111\u1ec7 quy nh\u01b0 sau:</p> <pre><code>void fft_slow(int n, vb&amp; a) // bi\u1ebfn \u0111\u1ed5i fft c\u1ee7a vector a, l\u01b0u k\u1ebft qu\u1ea3 v\u00e0o ch\u00ednh n\u00f3\n{\n    if(n == 1)\n    {\n        return;\n    }\n    int i, j, k;\n\n    // B\u01b0\u1edbc 1. Khai b\u00e1o k\u1ebft qu\u1ea3 fft ch\u1eb5n v\u00e0 l\u1ebb\n    vb a_even(n / 2), a_odd (n / 2);\n\n    // B\u01b0\u1edbc 2. T\u00e1ch h\u00e0ng ch\u1eb5n v\u00e0 h\u00e0ng l\u1ebb\n    for(i = j = 0; i &lt; n; i += 2)\n    {\n        a_even[j] = a[i];\n        a_odd[j]  = a[i+1];\n        ++j;\n    }\n\n    // B\u01b0\u1edbc 3. Bi\u1ebfn \u0111\u1ed5i FFT v\u1edbi c\u00e1c h\u00e0ng ch\u1eb5n, l\u1ebb\n    fft_slow(n / 2, a_even);\n    fft_slow(n / 2, a_odd);\n\n   // B\u01b0\u1edbc 4: Gh\u00e9p ho\u00e0n ch\u1ec9nh k\u1ebft qu\u1ea3\n    double ang = 2*PI/n;\n    base w (1),  wn (cos(ang), sin(ang));\n\n    for(i = 0; i &lt; n / 2; ++i)\n    {\n        a[i]         = a_even[i] + w * a_odd[i];\n        a[i + n / 2] = a_even[i] - w * a_odd[i];\n        w *= wn;\n    }\n}\n</code></pre> <p>C\u00f3 nhi\u1ec1u nguy\u00ean nh\u00e2n l\u00e0m cho FFT \u0111\u1ec7 quy ch\u1ea1y ch\u1eadm, nh\u01b0 trong B\u01b0\u1edbc 1 th\u00ec khai b\u00e1o hai vector k\u00edch c\u1ee1 \\(n/2\\) l\u1edbn nh\u01b0 v\u1eady v\u00e0 l\u1ea1i khai b\u00e1o li\u00ean t\u1ee5c \u1edf c\u00e1c m\u1ee9c \u0111\u1ec7 quy. B\u1ea3n th\u00e2n ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec7 quy c\u0169ng ch\u1ea1y ch\u1eadm v\u00ec ch\u01b0\u01a1ng tr\u00ecnh ph\u1ea3i l\u01b0u r\u1ea5t nhi\u1ec1u con tr\u1ecf stack v\u00e0 li\u00ean t\u1ee5c gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb c\u1ee7a bi\u1ebfn c\u1ee5c b\u1ed9 \u1edf m\u1ed7i m\u1ee9c \u0111\u1ec7 quy. Nh\u00ecn chung \u0111\u1ec7 quy ch\u1ec9 c\u00f3 \u00fd ngh\u0129a nh\u01b0 trong thu\u1eadt to\u00e1n Quy Ho\u1ea1ch \u0110\u1ed9ng khi ta mu\u1ed1n t\u00ecm k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t c\u00f4ng th\u1ee9c truy h\u1ed3i m\u00e0 ch\u1ec9 duy\u1ec7t qua nh\u1eefng tr\u1ea1ng th\u00e1i li\u00ean quan tr\u1ef1c ti\u1ebfp t\u1edbi k\u1ebft qu\u1ea3. Trong FFT ta lu\u00f4n ph\u1ea3i th\u0103m h\u1ebft c\u00e1c ma tr\u1eadn con n\u00ean c\u00e0i \u0111\u1eb7t FFT b\u1eb1ng \u0111\u1ec7 quy kh\u00f4ng c\u00f3 l\u1ee3i v\u1ec1 t\u1ed1c \u0111\u1ed9 th\u1ef1c hi\u1ec7n.</p> <p>\u0110\u1ec3 cho \u0111\u1ea7y \u0111\u1ee7 th\u00ec ta c\u0169ng c\u00f3 h\u00e0m bi\u1ebfn \u0111\u1ed5i FFT ng\u01b0\u1ee3c nh\u01b0 sau:</p> <pre><code>void inverse_fft_slow(int n, vb&amp; a)\n{\n    if(n == 1)\n    {\n        return;\n    }\n    int i, j, k;\n    vb a_even, a_odd;\n    for(i = 0; i &lt; n; ++i)\n    {\n        if(i &amp; 1) a_odd.push_back(a[i]);\n        else      a_even.push_back(a[i]);\n    }\n    inverse_fft_slow(n / 2, a_even);\n    inverse_fft_slow(n / 2, a_odd);\n\n    double ang = -2*PI/n;\n    base w (1),  wn (cos(ang), sin(ang));\n\n    for(i = 0; i &lt; n/ 2; ++i)\n    {\n        a[i]         = a_even[i] + w * a_odd[i];\n        a[i]         /= 2;\n        a[i + n / 2] = a_even[i] - w * a_odd[i];\n        a[i + n / 2] /= 2;\n        w *= wn;\n    }\n}\n</code></pre> <p>Kh\u1eed \u0111\u1ec7 quy:</p> <p>\u0110\u1ec3 kh\u1eed \u0111\u1ec7 quy th\u00ec ta c\u1ea7n ph\u00e2n t\u00edch m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa c\u00e1c l\u1eddi g\u1ecdi \u0111\u1ec7 quy v\u00e0 xem c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c t\u00ednh theo th\u1ee9 t\u1ef1 n\u00e0o. H\u00ecnh v\u1ebd sau \u0111\u00e2y minh h\u1ecda tr\u01b0\u1eddng h\u1ee3p \\(n = 8\\):</p> <p>/uploads/fft_tree.png</p> <p>M\u00e0u \u0111\u1ecf l\u00e0 c\u00e1c nh\u00f3m ch\u1eb5n v\u00e0 m\u00e0u xanh l\u00e0 c\u00e1c nh\u00f3m l\u1ebb. C\u00e1c b\u1ea1n h\u00e3y d\u1ef1a v\u00e0o t\u00ednh ch\u1eb5n l\u1ebb v\u00e0 \u0111\u1ec3 \u00fd c\u00e1c s\u1ed1 nh\u1ecb ph\u00e2n \\(0, 1\\) trong h\u00ecnh v\u1ebd \u0111\u1ec3 t\u1ef1 vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh FFT kh\u1eed \u0111\u1ec7 quy ho\u1eb7c gi\u1ea3i th\u00edch t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a \u0111o\u1ea1n m\u00e3 sau (\u0111\u00e2y l\u00e0 h\u00e0m FFT \u0111\u00e3 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 gi\u1ea3i b\u00e0i POST2)</p> <pre><code>## define PI acos(-1)\nconst int NBIT = 18;\nconst int N = 1&lt;&lt;18; // chu\u1ea9n h\u00f3a b\u1eadc c\u1ee7a \u0111a th\u1ee9c l\u00e0 18\nbase W[N]; // m\u1ea3ng l\u01b0u c\u00e1c nghi\u1ec7m nguy\u00ean th\u1ee7y\n\n// H\u00e0m reverse bit: \u0110\u1ea3o ng\u01b0\u1ee3c nbit \u0111\u1ea7u ti\u00ean trong m\u00e3 nh\u1ecb ph\u00e2n c\u1ee7a s\u1ed1 mask\nint revBit(int nbit, int mask)\n{\n    int i, j;\n    for(i = 0, j = nbit - 1; i &lt;= j; ++i, --j)\n    {\n        if( (mask &gt;&gt; i &amp; 1) != (mask &gt;&gt; j &amp; 1) )\n        {\n            mask ^= 1&lt;&lt;i;\n            mask ^= 1&lt;&lt;j;\n        }\n    }\n    return mask;\n}\n\n// Bi\u1ebfn \u0111\u1ed5i FFT c\u1ee7a m\u1ea3ng a\nvoid fft(int n, vb&amp; a)\n{\n    if(n == 1)\n        return;\n\n    int i, j, k;\n\n    // \u0110i t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean c\u1ee7a c\u00e2y \u0111\u1ec7 quy: H\u00e0ng cu\u1ed1i c\u00f9ng gi\u00e1 tr\u1ecb b\u1eb1ng v\u1edbi m\u1ea3ng \u0111\u01b0\u1ee3c cho ban \u0111\u1ea7u nh\u01b0ng h\u00f3a \u0111\u1ed5i v\u1ecb tr\u00ed\n    // theo s\u1ed1 c\u00f3 bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n ng\u01b0\u1ee3c v\u1edbi ch\u1ec9 s\u1ed1\n    for(i = 0; i &lt; n; ++i)\n    {\n        j = revBit(NBIT, i);\n        if(i &lt; j) swap(a[i], a[j]);\n    }\n    vb anext(n); // h\u00e0ng ti\u1ebfp theo\n\n    // chi\u1ec1u cao c\u00e2y b\u1eb1ng Log(n)\n    // bi\u1ebfn \"step\" l\u01b0u s\u1ed1 ph\u1ea7n t\u1eed n\u1eb1m trong m\u1ed9t nh\u00f3m ch\u1eb5n ho\u1eb7c l\u1ebb\n    for(int step = 1; step &lt; n; step &lt;&lt;= 1)\n    {\n        double ang = PI / step ; //2*PI/(step * 2);\n        base w (1),  wn (cos(ang), sin(ang));\n\n        // L\u01b0u tr\u01b0\u1edbc m\u1ea3ng nghi\u1ec7m nguy\u00ean th\u1ee7y\n        for(i = 0; i &lt; step; ++i)\n        {\n            W[i] = w;\n            w *= wn;\n        }\n\n       // C\u1ee9 m\u1ed9t nh\u00f3m ch\u1eb5n v\u00e0 m\u1ed9t nh\u00f3m l\u1ebb c\u1ea1nh nhau th\u00ec t\u1ea1o th\u00e0nh k\u1ebft qu\u1ea3 cho h\u00e0ng \u1edf tr\u00ean\n       // Duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c nh\u00f3m ch\u1eb5n v\u00e0 nh\u00f3m l\u1ebb c\u1ea1nh n\u00f3\n       // even = ch\u1eb5n, odd = l\u1ebb\n        int start_even = 0;\n        int start_odd  = start_even + step;\n        while(start_even &lt; n)\n        {\n            for(i = 0; i &lt; step; ++i)\n            {\n                anext[start_even + i]        = a[start_even + i] + W[i] * a[start_odd + i];\n                anext[start_even + i + step] = a[start_even + i] - W[i] * a[start_odd + i];\n            }\n            start_even += 2*step;\n            start_odd   = start_even + step;\n        }\n        for(i = 0; i &lt; n; ++i)\n            a[i] = anext[i];\n    }\n}\n</code></pre> <p>Sau \u0111\u00e2y l\u00e0 c\u00e0i \u0111\u1eb7t cho c\u1ea3 FFT xu\u00f4i v\u00e0 ng\u01b0\u1ee3c. Bi\u1ebfn <code>invert = true</code> cho FFT ng\u01b0\u1ee3c.</p> <pre><code>void fft(int n, vb&amp; a, bool invert)\n{\n    if(n == 1)\n        return;\n\n    int i, j, k;\n    for(i = 0; i &lt; n; ++i)\n    {\n        j = revBit(NBIT, i);\n        if(i &lt; j) swap(a[i], a[j]);\n    }\n    vb anext(n);\n\n    for(int step = 1; step &lt; n; step &lt;&lt;= 1)\n    {\n        double ang = PI / step;\n        if (invert) ang = -ang;\n\n        base w (1),  wn (cos(ang), sin(ang));\n\n        for(i = 0; i &lt; step; ++i)\n        {\n            W[i] = w;\n            w *= wn;\n        }\n\n        int start_even = 0;\n        int start_odd  = start_even + step;\n        while(start_even &lt; n)\n        {\n            for(i = 0; i &lt; step; ++i)\n            {\n                anext[start_even + i]        = a[start_even + i] + W[i] * a[start_odd + i];\n                anext[start_even + i + step] = a[start_even + i] - W[i] * a[start_odd + i];\n            }\n            start_even += 2*step;\n            start_odd   = start_even + step;\n        }\n        for(i = 0; i &lt; n; ++i)\n            a[i] = anext[i];\n    }\n    if (invert) {\n        for(i = 0; i &lt; n; ++i)\n            a[i] /= n;\n    }\n}\n</code></pre> <p>M\u1ed9t s\u1ed1 c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c s\u1eed d\u1ee5ng con tr\u1ecf c\u0169ng l\u00e0m t\u0103ng t\u1ed1c \u0111\u1ed9 th\u1ef1c thi, c\u00f3 th\u1ec3 xem th\u00eam trong trang c\u1ee7a emaxx ph\u1ea7n t\u00e0i li\u1ec7u tham kh\u1ea3o. C\u0169ng trong trang c\u1ee7a emaxx c\u00f3 th\u1ec3 t\u00ecm th\u1ea5y c\u00e1ch c\u00e0i \u0111\u1eb7t g\u1ed9p hai h\u00e0m <code>fft</code> v\u00e0 <code>inverse_fft</code> l\u1ea1i l\u00e0m m\u1ed9t s\u1eed d\u1ee5ng m\u1ed9t bi\u1ebfn bool invert l\u00e0m cho code ng\u1eafn g\u1ecdn h\u01a1n.</p>"},{"location":"algo/trick/FFT/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOJ POST2</li> <li>FFT problems on Codeforces</li> <li>FFT problems by a2oj.com</li> <li>SumOfArrays - Topcoder SRM 603 v\u00e0 H\u01b0\u1edbng d\u1eabn gi\u1ea3i</li> </ul>"},{"location":"algo/trick/FFT/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>[1] Rohit Thummalapalli. Fourier Transform: Nature\u2019s Way of Analyzing Data. Yale Scientific, 2010. Link</li> <li>[2] Alejandro Dominguez. Highlights in the History of the Fourier Transform. IEEE Pulse, 2016. Link</li> <li>[3] Stefan Woerner. Fast Fourier Transform. Numerical Analysis Seminar, Swiss Federal Institute of Technology Zurich, 2008. Link</li> <li>[4] Fortnow and Homer. A Short History of Computational Complexity. Bulletin of the European Association for Theoretical Computer Science 80, June 2003. Link</li> <li>B\u00e0i to\u00e1n nh\u00e2n \u0111a th\u1ee9c, ph\u00e9p bi\u1ebfn \u0111\u1ed5i Fourier nhanh tr\u00ean csstudyfun.wordpress.com (c\u00f3 ch\u1ee9ng minh c\u00e1c t\u00ednh ch\u1ea5t \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp trong b\u00e0i</li> <li>B\u00e0i gi\u1ea3ng c\u1ee7a tr\u01b0\u1eddng DH Aalto, Ph\u1ea7n Lan</li> <li>Code c\u00e0i \u0111\u1eb7t c\u1ee7a e-maxx</li> <li>\"Tutorial on FFT \u2014 The tough made simple.\" tr\u00ean Codeforces</li> </ul>"},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/","title":"R\u1eddi r\u1ea1c ho\u00e1 v\u00e0 \u1ee9ng d\u1ee5ng","text":"<p>T\u00e1c gi\u1ea3: L\u00ea H\u00f9ng S\u01a1n - \u0110\u1ea1i h\u1ecdc FPT</p>"},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>R\u1eddi r\u1ea1c h\u00f3a l\u00e0 m\u1ed9t l\u0129nh v\u1ef1c l\u1edbn c\u00f3 \u0111\u1ed1i t\u01b0\u1ee3ng nghi\u00ean c\u1ee9u l\u00e0 c\u00e1c t\u1eadp h\u1ee3p r\u1eddi r\u1ea1c trong khoa h\u1ecdc m\u00e1y t\u00ednh. \u1ee8ng d\u1ee5ng c\u1ee7a c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p r\u1ea5t l\u1edbn v\u00e0 th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong r\u1ea5t nhi\u1ec1u k\u1ef3 thi l\u1edbn. Trong ph\u1ea1m vi chuy\u00ean \u0111\u1ec1 ta ch\u1ec9 x\u00e9t m\u1ed9t s\u1ed1 v\u00ed d\u1ee5 \u0111\u1ec3 hi\u1ec3u r\u00f5 th\u00eam ph\u01b0\u01a1ng ph\u00e1p n\u00e0y.</p> <p>Khi gi\u1ea3i thu\u1eadt l\u1eadp tr\u00ecnh ta hay quen g\u1ecdi ph\u01b0\u01a1ng ph\u00e1p r\u1eddi r\u1ea1c h\u00f3a l\u00e0 n\u00e9n s\u1ed1. Th\u1eadt v\u1eady, \u0111\u00fang nh\u01b0 t\u00ean g\u1ecdi, b\u1ea3n ch\u1ea5t c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p ta hi\u1ec3u n\u00f4m na l\u00e0 \u0111\u01b0a c\u00e1c v\u00f9ng d\u1eef li\u1ec7u l\u1edbn v\u1ec1 v\u00f9ng d\u1eef li\u1ec7u nh\u1ecf \u0111\u1ec3 d\u1ec5 x\u1eed l\u00fd, sao cho v\u1eabn th\u1ecfa m\u00e3n y\u00eau c\u1ea7u c\u1ee7a b\u00e0i to\u00e1n \u0111\u1eb7t ra.</p> <p>K\u1ef9 thu\u1eadt b\u1ed5 tr\u1ee3 trong ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 \u0111\u00e1nh l\u1ea1i s\u1ed1 th\u1ee9 t\u1ef1 hay c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 n\u00e9n s\u1ed1, \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n nh\u01b0 sau:</p> <ul> <li>Gi\u1ea3 s\u1eed ta n\u00e9n s\u1ed1 m\u1ed9t m\u1ea3ng \\(A_i\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb thu\u1ed9c kho\u1ea3ng \\([-10^9, 10^9]\\) v\u1ec1 m\u1ea3ng nh\u1ecf h\u01a1n c\u00f3 gi\u00e1 tr\u1ecb thu\u1ed9c kho\u1ea3ng \\([1, n]\\) m\u00e0 v\u1eabn \u0111\u1ea3m bao \u0111\u01b0\u1ee3c quan h\u1ec7 l\u1edbn b\u00e9.</li> </ul> <p>V\u00ed d\u1ee5: a = {100, 100, 2000, 1500, 900000} \u2192 b = {1,1,3,2,4}</p> <ul> <li>B1: D\u00f9ng 2 m\u1ea3ng song song <code>val[i] = a[i], pos[i] = i</code> (<code>pos</code> \u0111\u1ec3 l\u01b0u v\u1ecb tr\u00ed \u0111i k\u00e8m gi\u00e1 tr\u1ecb <code>a[i]</code>)</li> <li>B2: S\u1eafp x\u1ebfp l\u1ea1i theo t\u0103ng d\u1ea7n c\u1ee7a <code>val[ ]</code> ch\u00fa \u00fd khi <code>swap(val[i],val[j])</code> nh\u1edb <code>swap(pos[i],pos[j])</code>.</li> <li>B3: T\u1ea1o m\u1ed9t bi\u1ebfn <code>dem = 0, last = max</code>, duy\u1ec7t c\u00e1c gi\u00e1 tr\u1ecb <code>val[i]</code> n\u1ebfu <code>last</code> kh\u00e1c <code>val[i]</code> th\u00ec: <code>dem++, last = val[i];</code> \u1edf m\u1ed7i b\u01b0\u1edbc ta c\u1eadp nh\u1eadt <code>b[pos[i]] = dem</code>.</li> </ul> <p>K\u1ebft th\u00fac qu\u00e1 tr\u00ecnh tr\u00ean, ta nh\u1eadn \u0111\u01b0\u1ee3c m\u1ea3ng <code>b[]</code> l\u00e0 n\u00e9n t\u1eeb m\u1ea3ng <code>a[]</code> v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p thao t\u00e1c n\u00e9n n\u00e0y l\u00e0 \\(O(n*log(n))\\).</p>"},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/#vi-du-1-day-so-c11seq","title":"V\u00ed d\u1ee5 1: D\u00e3y s\u1ed1 (C11SEQ)","text":""},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho n s\u1ed1 nguy\u00ean \\((n \\le 10^5)\\) s\u1ed1 nguy\u00ean \\(a_1, a_2, \\dots, a_n\\) v\u1edbi \\((\\|a_i\\| \\le 10^9)\\) v\u00e0 2 s\u1ed1 \\(L\\), \\(R\\) \\((L \\le R)\\). H\u00e3y \u0111\u1ebfm xem c\u00f3 bao nhi\u00eau c\u1eb7p \\((i, j)\\) th\u1ecfa \\(L \\le a_i + a_{i+1} +... + a_j \\le R\\).</p> <p>Input:</p> <ul> <li>D\u00f2ng \u0111\u1ea7u ch\u1ee9a 3 s\u1ed1 \\(n, L, R\\).</li> <li>D\u00f2ng 2 ch\u1ee9a \\(n\\) s\u1ed1 nguy\u00ean \\(a_1, a_2, \\dots, a_n\\).</li> </ul> <p>Output:</p> <ul> <li>In ra k\u1ebft qu\u1ea3 c\u1ea7n t\u00ecm.</li> </ul> <p>Example:</p> <pre><code>C11SEQ.INP\n\n4 2 4\n1 2 3 4\n\nC11SEQ.OUT\n4\n</code></pre>"},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/#huong-giai-quyet","title":"H\u01b0\u1edbng gi\u1ea3i quy\u1ebft:","text":"<ul> <li>H\u01b0\u1edbng \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 duy\u1ec7t m\u1ecdi c\u1eb7p \u0111o\u1ea1n \\((i,j)\\) v\u00e0 ki\u1ec3m tra xem t\u1ed5ng n\u00f3 c\u00f3 th\u1ecfa kh\u00f4ng v\u00e0 ta t\u0103ng bi\u1ebfn \u0111\u1ebfm l\u00ean. Tuy nhi\u00ean c\u00e1ch n\u00e0y m\u1ea5t chi ph\u00ed th\u1eddi gian \\(O(n^2)\\) v\u1edbi \\(n \\le 10^5\\) th\u00ec kh\u00f4ng \u0111\u01b0\u1ee3c kh\u1ea3 thi.</li> <li>B\u00e2y gi\u1edd ta th\u1eed g\u1ecdi nh\u01b0 sau: \\(S_i = a_1 + a_2 + \\dots + a_i\\).</li> <li>\u0110o\u1ea1n con \\((i,j) \\, (i \\ge j)\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n n\u1ebfu \\(L \\le S_i - S_{j-1} \\le R\\). Bi\u1ebfn \u0111\u1ed5i ti\u1ebfp ta \u0111\u01b0\u1ee3c 2 \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 th\u1ecfa l\u00e0:  \\(S_i - L \\ge S_{j-1}\\) v\u00e0 \\(S_i - R \\le S_{j-1}\\).</li> </ul> <p>Ti\u1ebfp theo, ta c\u00f3:</p> <ul> <li>Nh\u1eadn x\u00e9t 1: \\(S_i - L, \\, S_i - R\\) l\u00e0 2 s\u1ed1 c\u1ed1 \u0111\u1ecbnh.</li> <li> <p>Nh\u1eadn x\u00e9t 2: Quan h\u1ec7 &lt;= hay &gt;= cho ta th\u1ea5y: kh\u00f4ng c\u1ea7n quan t\u00e2m gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c s\u1ed1 m\u00e0 ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o quan h\u1ec7 &lt;= hay &gt;= l\u00e0 \u0111\u01b0\u1ee3c. V\u00ed d\u1ee5: 1 &lt; 5 ta c\u00f3 th\u1ec3 n\u00e9n th\u00e0nh 1 &lt; 2 ch\u1ea3 \u1ea3nh h\u01b0\u1edfng k\u1ebft qu\u1ea3 b\u00e0i to\u00e1n.</p> </li> <li> <p>Nh\u1eadn x\u00e9t 3: Qu\u00e1 l\u1eafm ch\u1ec9 c\u00f3 \\(3*n\\) ph\u1ea7n t\u1eed cho t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb: \\(S_i - L, S_i - R, S_{j-1}\\), v\u1edbi \\(n \\le 10^5\\) th\u00ec \u0111\u00e2y l\u00e0 con s\u1ed1 nh\u1ecf.</p> </li> </ul> <p>T\u1eeb 3 nh\u1eadn x\u00e9t tr\u00ean ta s\u1ebd t\u00ecm c\u00e1ch \u0111\u01b0a \\(S_i - L, S_i - R, S_{j-1}\\) v\u1ec1 c\u00e1c m\u1ea3ng nh\u1ecf kh\u00f4ng qu\u00e1 \\(3*n\\) ph\u1ea7n t\u1eed \u0111\u1ec3 d\u1ec5 d\u00e0ng qu\u1ea3n l\u00fd:</p> <ul> <li>Ta l\u1eadp m\u1ed9t m\u1ea3ng m\u1edbi c\u00f3 3*n ph\u1ea7n t\u1eed: n ph\u1ea7n t\u1eed d\u1ea1ng \\(S_i\\), n d\u1ea1ng \\(S_i - L\\), n d\u1ea1ng \\(S_i - R\\), nh\u1edb l\u01b0u v\u1ecb tr\u00ed \u0111i k\u00e8m.</li> <li>B\u00e2y gi\u1edd ti\u1ebfn h\u00e0nh sort m\u1ea3ng \u0111\u00f3 l\u1ea1i, v\u00e0 ta ti\u1ebfn h\u00e0nh \u0111\u00e1nh s\u1ed1 lai m\u1ea3ng \u0111\u00f3, g\u1ecdi c\u00e1c m\u1ea3ng \\(p1_i, p2_i, p3_i\\) l\u00e0 c\u00e1c gi\u00e1 tr\u1ecb sau khi \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u1ee7a \\(S_i, S_i - L, S_i - R\\).</li> <li> <p>Ta ti\u1ebfn h\u00e0nh duy\u1ec7t c\u00e1c v\u1ecb tr\u00ed i, d\u00f9ng 1 c\u00e2y Segment Tree ho\u1eb7c Binary Indexed Tree \u0111\u1ec3 qu\u1ea3n l\u00fd v\u00e0 \u0111\u1ebfm:</p> <ul> <li>B1: c\u1eadp nh\u1ea5t k\u1ebft qu\u1ea3: t\u0103ng res th\u00eam s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed \u0111o\u1ea1n \\([p3_i, p2_i]\\) \u0111\u00e3 xu\u1ea5t hi\u1ec7n.</li> <li>B2: th\u00eam s\u1ed1 l\u01b0\u1ee3ng 1 ph\u1ea7n t\u1eed \\(p1_i\\) v\u00e0o c\u00e2y.</li> </ul> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(3 * n * log(3 * n))\\).</p> </li> <li>Ngo\u00e0i c\u00e1ch n\u00e0y ra, ta c\u00f2n 1 c\u00e1ch d\u00f9ng Ph\u01b0\u01a1ng ph\u00e1p chia \u0111\u1ec3 tr\u1ecb, s\u1ebd c\u00f3 trong c\u00e1c t\u00e0i li\u1ec7u s\u1eafp t\u1edbi.</li> </ul> <p>Code tham kh\u1ea3o (pascal):</p> <pre><code>// Code ph\u1ea7n n\u00e9n s\u1ed1: \n// \u1edf \u0111\u00e2y thay v\u00ec d\u00f9ng 3 m\u1ea3ng p1[i], p2[i], p3[i] m\u00ecnh t\u1eadn d\u1ee5ng lu\u00f4n m\u1ea3ng a:\n// * a[i] = p1[i], a[n + i] = p2[i], a[2*n + i] = p3[i]\nprocedure unzip;\nvar i,j,del:longint;\nbegin\n    sort(1,3*n);\n    A[3*n+1].val:=high(longint);\n    i:=1;  del:=0;\n    repeat\n         inc(del);\n         j:=i;\n         while A[i].val=A[j].val do\n         begin\n             B[A[j].pos]:=del;\n             inc(j);\n         end;\n         i:=j;\n    until i=3*n+1;\nend;\n\n// Ph\u1ea7n t\u00ednh to\u00e1n k\u1ebft qu\u1ea3 b\u1eb1ng Binary Indexed Tree\nfor i:=n downto 2 do\n    begin\n        update(B[i]);\n        res:=res+get(B[i-1+2*n])-get(B[i-1+n]);\n    end;\n</code></pre>"},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/#vi-du-2-phan-oan-voi-2005-bang-a","title":"V\u00ed d\u1ee5 2: Ph\u00e2n \u0111o\u1ea1n (VOI 2005 - B\u1ea3ng A)","text":"<p>Cho d\u00e3y \\(n\\) s\u1ed1 nguy\u00ean \\(a_1, a_2, \\dots , a_n\\) v\u00e0 s\u1ed1 \\(k \\, (1 \\le n, k \\le 15000) \\, (\\|a_i\\| \\le 30000)\\) h\u00e3y t\u00ecm s\u1ed1 m nh\u1ecf nh\u1ea5t sao cho c\u00f3 th\u1ec3 chia d\u00e3y \u0111\u00e3 cho th\u00e0nh k ph\u1ea7n, m\u1ed7i ph\u1ea7n l\u00e0 1 \u0111o\u1ea1n c\u00e1c ph\u00e2n t\u1eed li\u00ean ti\u1ebfp, v\u00e0 ph\u1ea3i \u0111\u1ea3m b\u1ea3o t\u1ed5ng m\u1ed7i ph\u1ea7n kh\u00f4ng qu\u00e1 m.</p> <p>Input:</p> <ul> <li>D\u00f2ng \u0111\u1ea7u ch\u1ee9a s\u1ed1 nguy\u00ean n v\u00e0 k.</li> <li>D\u00f2ng th\u1ee9 2 ch\u1ee9a n s\u1ed1 nguy\u00ean \\(a_1, a_2, \\dots , a_n\\).</li> </ul> <p>Output:</p> <ul> <li>In ra s\u1ed1 nguy\u00ean m.</li> </ul> <p>Example:</p> <pre><code>QBSEGPAR.INP\n\n9 4\n1 1 1 3 2 2 1 3 1\n\nQBSEGPAR.OUT\n\n5\n</code></pre>"},{"location":"algo/trick/Roi-rac-hoa-va-ung-dung/#huong-giai-quyet_1","title":"H\u01b0\u1edbng gi\u1ea3i quy\u1ebft","text":"<p>Nh\u1eadn x\u00e9t 1: B\u00e0i to\u00e1n y\u00eau c\u1ea7u t\u00ecm m nh\u1ecf nh\u1ea5t, theo kinh nghi\u1ec7m th\u00ec khi b\u00e0i to\u00e1n b\u1ea3o t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t hay l\u1edbn nh\u1ea5t nh\u01b0ng kh\u00f4ng x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c t\u1eeb d\u1eef li\u1ec7u b\u00e0i th\u00ec ta n\u00ean ngh\u0129 \u0111\u1ebfn ch\u1eb7t nh\u1ecb ph\u00e2n. V\u00f9ng gi\u00e1 tr\u1ecb ch\u1eb7t c\u00f3 th\u1ec3 ch\u1ecdn t\u1eeb \\([-10^9, 10^9]\\) l\u00e0 v\u1eeba h\u1ee3p, c\u00e1i n\u00e0y l\u00e0 t\u00f9y ch\u1ecdn, c\u00f2n t\u1ed1i \u01b0u nh\u1ea5t ch\u1ec9 c\u1ea7n ch\u1eb7t trong kho\u1ea3ng \\([-max(a_i)* n, max(a_i)*n]\\).</p> <ul> <li>Tuy nhi\u00ean, ta ch\u1ec9 d\u1ef1 \u0111o\u00e1n l\u00e0 ch\u1eb7t nh\u1ecb ph\u00e2n nh\u01b0ng ch\u01b0a kh\u1eb3ng \u0111\u1ecbnh l\u00e0 c\u00f3 \u0111\u00fang kh\u00f4ng, ta c\u00f3 nh\u1eadn x\u00e9t sau: _v\u1edbi m c\u00e0ng l\u1edbn th\u00ec vi\u1ec7c chia th\u00e0nh k \u0111o\u1ea1n c\u00e0ng d\u1ec5 _ \u2192 d\u00f9ng ch\u1eb7t nh\u1ecb ph\u00e2n l\u00e0 ch\u00ednh x\u00e1c.</li> </ul> <p>Nh\u1eadn x\u00e9t 2: N\u1ebfu ta c\u00f3 1 gi\u00e1 tr\u1ecb m x\u00e1c \u0111\u1ecbnh, ta chia \u0111\u01b0\u1ee3c \u00edt nh\u1ea5t l\u00e0 a \u0111o\u1ea1n, chia nhi\u1ec1u nh\u1ea5t l\u00e0 b \u0111o\u1ea1n, n\u1ebfu t\u1ed3n t\u1ea1i k m\u00e0 \\(a \\le k \\le b\\) th\u00ec lu\u00f4n c\u00f3 c\u00e1ch chia k \u0111o\u1ea1n th\u1ecfa m\u00e3n. \u0110\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c a v\u00e0 b ta d\u00f9ng ph\u01b0\u01a1ng ph\u00e1p Quy ho\u1ea1ch \u0111\u1ed9ng.</p> <p>Ch\u1eb7t nh\u1ecb ph\u00e2n kh\u00f4ng kh\u00f3, \u1edf \u0111\u00e2y kh\u00f3 l\u00e0 ph\u01b0\u01a1ng ph\u00e1p _quy ho\u1ea1ch \u0111\u1ed9ng _cho th\u1ecfa m\u00e3n th\u1eddi gian. C\u00f4ng th\u1ee9c s\u01a1 khai nh\u01b0 sau:</p> <ul> <li>\\(S_i = a_1 + a_2 + \\dots + a_i\\).</li> <li>\\(fmax_i\\) = s\u1ed1 \u0111o\u1ea1n chia \u0111\u01b0\u1ee3c nhi\u1ec1u nh\u1ea5t trong d\u00e3y \\(a_1, a_2, \\dots , a_i\\).</li> <li>\\(fmin_i\\) = s\u1ed1 \u0111o\u1ea1n chia \u0111\u01b0\u1ee3c \u00edt nh\u1ea5t trong d\u00e3y \\(a_1, a_2, \\dots , a_i\\).</li> </ul> <p>Kh\u1edfi t\u1ea1o: <code>fmax[0] = 0, fmin[0] = 0, fmax[i] = -max (i != 0), fmin[i] = INF (i != 0)</code>.</p> <p>C\u00f4ng th\u1ee9c:</p> <ul> <li><code>fmax[i] = max(fmax[i], fmax[j] + 1)</code> v\u1edbi <code>j &lt; i</code> v\u00e0 <code>S[i] - S[j] &lt;= m</code>.</li> <li><code>fmin[i] = min(fmin[i], fmin[j] + 1)</code> v\u1edbi <code>j &lt; i</code> v\u00e0 <code>S[i] - S[j] &lt;= m</code>.</li> </ul> <p>Nh\u1eadn th\u1ea5y \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111\u00e2y l\u00e0 \\(O(n^2 * log(2 * 10^9))\\) kh\u00f4ng th\u1ec3 \u0111\u00e1p \u1ee9ng \u0111\u01b0\u1ee3c th\u1eddi gian y\u00eau c\u1ea7u l\u00e0 1s nh\u01b0ng \u1edf tr\u01b0\u1eddng h\u1ee3p qu\u00e1 b\u00ed \u00fd t\u01b0\u1edfng \u0111\u00e2y kh\u00f4ng ph\u1ea3i gi\u1ea3i ph\u00e1p t\u1ed3i gi\u00fap l\u1ea5y \u0111\u01b0\u1ee3c m\u1ed9t \u00edt \u0111i\u1ec3m l\u1ebb.</p> <p>\u0110\u1ec3 nhanh \u0111\u01b0\u1ee3c ch\u1ec9 c\u00f3 c\u00e1ch l\u00e0 c\u1ea3i ti\u1ebfn sao cho t\u00ednh m\u1ea3ng Quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u01b0\u1ee3c nhanh, \u1edf \u0111\u00e2y ta \u0111\u1ec3 \u00fd quan h\u1ec7 \\(S_i - S_j \\le m\\) ch\u1ec9 c\u1ea7n bi\u1ebfn \u0111\u1ed5i th\u00e0nh \\(S_i - m \\le S_j\\) \u2192 gi\u1ea3i ph\u00e1p \u0111\u00e3 ph\u1ea7n n\u00e0o s\u00e1ng s\u1ee7a h\u01a1n v\u00e0 n\u1ebfu tinh \u00fd th\u00ec \u0111\u00e2y ch\u1ec9 l\u00e0 b\u00e0i to\u00e1n 1 chi\u1ec1u, \"m\u1ed9t n\u1eeda\" c\u1ee7a v\u00ed d\u1ee5 1 \u1edf tr\u00ean th\u00f4i \u2192 B\u00e2y gi\u1edd ta ch\u1ec9 c\u1ea7n r\u1eddi r\u1ea1c h\u00f3a n\u00f3 \u0111i thay v\u00ec \\(3 * n\\), ta c\u00f3 m\u1ea3ng \\(2 * n\\) l\u01b0u c\u00e1c gi\u00e1 tr\u1ecb \\(S_i\\) v\u00e0 \\(S_i - m\\), ta s\u1ebd t\u00ednh d\u1ef1a v\u00e0o 1 c\u00e2y Binary Indexed Tree cho \u0111\u01a1n gi\u1ea3n thay v\u00ec \u0111\u1ebfm nh\u01b0 b\u00e0i tr\u00ean, v\u1ea5n \u0111\u1ec1 \u1edf \u0111\u00e2y ch\u1ec9 l\u00e0 t\u00ecm max min, v\u00e0 update max, min.</p> <ul> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(n * log(n) * log(2 * 10^9))\\).</li> </ul>"},{"location":"algo/trick/convex_greedy/","title":"Sum-constrained convex optimization","text":"<p>Ng\u01b0\u1eddi vi\u1ebft: - \u0110\u1eb7ng \u0110o\u00e0n \u0110\u1ee9c Trung - UT Austin</p> <p>Reviewer: - Nguy\u1ec5n Minh Nh\u1eadt - Tr\u01b0\u1eddng THPT chuy\u00ean Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQGHN</p>"},{"location":"algo/trick/convex_greedy/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>M\u1ee5c \u0111\u00edch c\u1ee7a b\u00e0i vi\u1ebft n\u00e0y l\u00e0 \u0111\u1ec3 gi\u1edbi thi\u1ec7u cho m\u1ecdi ng\u01b0\u1eddi v\u1ec1 m\u1ed9t m\u00f4 t\u00edp \u0111\u00e3 xu\u1ea5t hi\u1ec7n trong nhi\u1ec1u b\u00e0i t\u1eadp trung b\u00ecnh kh\u00f3 t\u1edbi kh\u00f3 -- t\u1ed1i \u01b0u t\u1ed5ng c\u1ee7a m\u1ed9t s\u1ed1 h\u00e0m l\u1ed3i cho tr\u01b0\u1edbc. \u00dd t\u01b0\u1edfng gi\u1ea3i chung c\u1ee7a c\u00e1c b\u00e0i to\u00e1n n\u00e0y th\u01b0\u1eddng l\u00e0 nh\u01b0 nhau: tham lam tr\u00ean chi ph\u00ed t\u0103ng c\u1ee7a c\u00e1c h\u00e0m l\u1ed3i n\u00e0y (ta s\u1ebd \u0111\u1ecbnh ngh\u0129a chi ph\u00ed t\u0103ng \u1edf ph\u1ea7n ti\u1ebfp theo).</p> <p>B\u00e0i vi\u1ebft n\u00e0y l\u00e0 ph\u1ea7n 1 c\u1ee7a m\u1ed9t chu\u1ed7i 2 b\u00e0i vi\u1ebft; ph\u1ea7n 2 c\u1ee7a chu\u1ed7i b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u thu\u1eadt to\u00e1n t\u00ecm t\u1ed5ng Minkowski c\u1ee7a c\u00e1c bao l\u1ed3i.</p>"},{"location":"algo/trick/convex_greedy/#luu-y-truoc-khi-oc","title":"L\u01b0u \u00fd tr\u01b0\u1edbc khi \u0111\u1ecdc","text":"<p>M\u00ecnh s\u1ebd s\u1eed d\u1ee5ng c\u00e1c kh\u00e1i ni\u1ec7m sau xuy\u00ean su\u1ed1t b\u00e0i vi\u1ebft.</p> <ul> <li>H\u00e0m \\(f\\) \u0111\u1ecbnh ngh\u0129a tr\u00ean t\u1eadp s\u1ed1 nguy\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 h\u00e0m l\u1ed3i n\u1ebfu v\u1edbi m\u1ecdi \\(i \\in \\mathbb{Z}\\), ta c\u00f3 \\(f(i) - f(i - 1) \\le f(i + 1) - f(i)\\).</li> </ul>"},{"location":"algo/trick/convex_greedy/#bai-toan-tong-quat","title":"B\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t","text":"<p>Ta x\u00e9t b\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t sau.</p>"},{"location":"algo/trick/convex_greedy/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho \\(n\\) h\u00e0m l\u1ed3i \\(f_1, f_2, \\dots, f_n\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u00ean t\u1eadp s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m v\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb \\(k\\) cho tr\u01b0\u1edbc. T\u00ecm \\(n\\) s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m \\(x_1, x_2, \\dots, x_n\\) sao cho: - \\(x_1 + x_2 + \\dots + x_n = k\\). - \\(f(x_1) + f(x_2) + \\dots + f(x_n)\\) l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3.</p> <p>In ra gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a \\(f(x_1) + f(x_2) + \\dots + f(x_n)\\).</p> <p>Gi\u1edbi h\u1ea1n: \\(1 \\le n, k \\le 2 \\cdot 10^5\\).</p>"},{"location":"algo/trick/convex_greedy/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ec3 vi\u1ec7c tr\u00ecnh b\u00e0y \u0111\u01b0\u1ee3c thu\u1eadn ti\u1ec7n h\u01a1n, \u0111\u1ea7u ti\u00ean ta x\u00e9t b\u00e0i to\u00e1n v\u1edbi \\(n = 2\\).</p> <p>X\u00e9t thao t\u00e1c sau: kh\u1edfi t\u1ea1o \\(x_1 = 0\\) v\u00e0 \\(x_2 = 0\\), ta l\u1eb7p b\u01b0\u1edbc sau \\(k\\) l\u1ea7n: - N\u1ebfu \\(f(x_1 + 1) - f(x_1) \\le f(x_2 + 1) - f(x_2)\\), t\u0103ng \\(x_1\\) l\u00ean \\(1\\); n\u1ebfu kh\u00f4ng th\u00ec t\u0103ng \\(x_2\\) l\u00ean \\(1\\).</p> <p>\u00dd t\u01b0\u1edfng c\u01a1 b\u1ea3n c\u1ee7a c\u00e1ch l\u00e0m tr\u00ean l\u00e0 \u1edf m\u1ed7i b\u01b0\u1edbc, ta t\u0103ng t\u1ed5ng \\(x_1 + x_2\\) l\u00ean \\(1\\); ta ch\u1ecdn c\u00e1ch l\u00e0m m\u00e0 t\u0103ng t\u1ed5ng \\(f(x_1) + f(x_2)\\) l\u00ean \u00edt nh\u1ea5t.</p> <p>\u0110\u1ec3 ch\u1ee9ng minh c\u00e1ch l\u00e0m tr\u00ean l\u00e0 \u0111\u00fang, gi\u1ea3 s\u1eed \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n l\u00e0 \\(O\\). Ta x\u00e9t ba d\u00e3y sau: - \\(A_1\\) l\u00e0 m\u1ed9t d\u00e3y d\u00e0i v\u00f4 t\u1eadn m\u00e0 m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y c\u00f3 \u00fd ngh\u0129a l\u00e0 \"chi ph\u00ed ph\u1ea3i tr\u1ea3 v\u00e0o \\(f(x_1)\\) \u0111\u1ec3 t\u0103ng \\(x_1\\) t\u1eeb \\(t\\) l\u00ean \\(t + 1\\)\". N\u00f3i c\u00e1ch kh\u00e1c, m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y \\(A_1\\) c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(f_1(t + 1) - f_1(t)\\) v\u1edbi m\u1ecdi \\(t\\). - T\u01b0\u01a1ng t\u1ef1, \\(A_2\\) bao g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 \u00fd ngh\u0129a l\u00e0 \"chi ph\u00ed ph\u1ea3i tr\u1ea3 v\u00e0o \\(f(x_1)\\) \u0111\u1ec3 t\u0103ng \\(x_2\\) t\u1eeb \\(t\\) l\u00ean \\(t + 1\\)\". - \\(A\\) bao g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 \u00fd ngh\u0129a l\u00e0 \"chi ph\u00ed ph\u1ea3i tr\u1ea3 v\u00e0o t\u1ed5ng \\(f(x_1) + f(x_2)\\) \u0111\u1ec3 t\u0103ng \\(x_i\\) t\u1eeb \\(t\\) l\u00ean \\(t + 1\\)\" v\u1edbi \\(i = 1\\) ho\u1eb7c \\(i = 2\\). D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y l\u00e0 \\(A\\) l\u00e0 d\u00e3y gh\u00e9p t\u1eeb \\(A_1\\) v\u00e0 \\(A_2\\) (\\(A = A_1 \\cup A_2\\)).</p> <p>Nh\u1eadn x\u00e9t l\u00e0 n\u1ebfu ta s\u1eafp x\u1ebfp d\u00e3y \\(A\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n r\u1ed3i l\u1ea5y t\u1ed5ng \\(k\\) ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t, ta s\u1ebd thu \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 \\(S\\) m\u00e0 ch\u1eafc ch\u1eafn l\u00e0 \\(O \\ge S\\).</p> <p>Ngo\u00e0i ra, ta c\u0169ng c\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c l\u00e0 thao t\u00e1c tr\u00ean s\u1ebd thu \u0111\u01b0\u1ee3c t\u1ed5ng \\(f(x_1) + f(x_2)\\) \u0111\u00fang b\u1eb1ng \\(S\\). \u0110\u1ec3 \u00fd r\u1eb1ng khi s\u1eafp x\u1ebfp d\u00e3y \\(A_1\\) t\u0103ng d\u1ea7n, ta s\u1ebd c\u00f3 \\(A_1 = [f_1(1) - f_1(0), f_1(2) - f_1(1), f_1(3) - f_1(2), \\dots]\\) v\u00ec \\(f_1\\) l\u00e0 h\u00e0m l\u1ed3i. T\u01b0\u01a1ng t\u1ef1, v\u1edbi d\u00e3y \\(A_2\\), \\(A_2 = [f_2(1) - f_2(0), f_2(2) - f_2(1), f_2(3) - f_2(2), \\dots]\\) sau khi s\u1eafp x\u1ebfp c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(A_2\\) t\u0103ng d\u1ea7n. N\u00f3i c\u00e1ch kh\u00e1c, d\u00e3y \\(A_1\\) v\u00e0 \\(A_2\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo \\(t\\). B\u1edfi v\u00ec \\(A\\) ch\u1eb3ng qua l\u00e0 d\u00e3y gh\u00e9p c\u1ee7a \\(A_1\\) v\u00e0 \\(A_2\\), d\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y qua thu\u1eadt to\u00e1n merge sort r\u1eb1ng khi thao t\u00e1c tr\u00ean d\u1eebng, ta thu \u0111\u01b0\u1ee3c \\(k\\) gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a \\(A\\).</p> <p>V\u1edbi \\(n\\) l\u1edbn h\u01a1n, ta c\u00f3 thu\u1eadt to\u00e1n t\u01b0\u01a1ng t\u1ef1: kh\u1edfi t\u1ea1o m\u1ecdi \\(x_i = 0\\), l\u1eb7p b\u01b0\u1edbc sau \\(k\\) l\u1ea7n: - T\u00ecm \\(i\\) sao cho \\(f_i(x_i + 1) - f_i(x_i)\\) l\u00e0 nh\u1ecf nh\u1ea5t r\u1ed3i t\u0103ng \\(x_i\\) l\u00ean \\(1\\).</p> <p>Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng heap \u0111\u1ec3 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n tr\u00ean v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O((n + k) \\log n)\\).</p>"},{"location":"algo/trick/convex_greedy/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>int n; // S\u1ed1 l\u01b0\u1ee3ng h\u00e0m f_i\nint f(int i, int x){\n    // Tr\u1ea3 v\u1ec1 f_i(x)\n}\nlong long cost_greedy(int k) {\n    vector&lt;int&gt; x(n, 0);\n    long long ans = 0;\n    priority_queue&lt;pair&lt;int, int&gt;&gt; pq;\n    // l\u01b0u c\u1eb7p {f_i(x_i) - f_i(x_i + 1), i} v\u00ec priority_queue l\u1ea5y ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t\n    for (int i = 0; i &lt; n; i++) {\n        pq.push({f(i, 0) - f(i, 1), i});\n    }\n    while (k--) {\n        int cost = pq.top().first, i = pq.top().second;\n        pq.pop();\n        ans -= cost; // cost = f_i(x_i) - f_i(x_i + 1)\n        x[i]++;\n        pq.push({f(i, x[i]) - f(i, x[i] + 1), i});\n    }\n    return ans;\n}\n</code></pre>"},{"location":"algo/trick/convex_greedy/#minh-hoa-tham-chi-phi-tang","title":"Minh h\u1ecda tham chi ph\u00ed t\u0103ng","text":"<p>Link b\u00e0i: CF - 1428E.</p>"},{"location":"algo/trick/convex_greedy/#e-bai_1","title":"\u0110\u1ec1 b\u00e0i","text":"<p>C\u00f3 \\(n\\) c\u1ee7 c\u00e0 r\u1ed1t c\u00f3 \u0111\u1ed9 d\u00e0i \\(a_1, a_2, \\dots, a_n\\). Ng\u01b0\u1eddi ch\u1ee7 mu\u1ed1n c\u1eaft c\u00e1c c\u1ee7 c\u00e0 r\u1ed1t n\u00e0y c\u00e1c ph\u1ea7n c\u00f3 \u0111\u1ed9 d\u00e0i nguy\u00ean d\u01b0\u01a1ng cho \\(k\\) ch\u00fa th\u1ecf. M\u1ed9t ph\u1ea7n c\u00e0 r\u1ed1t c\u00f3 \u0111\u1ed9 d\u00e0i \\(x\\) s\u1ebd m\u1ea5t \\(x^2\\) gi\u00e2y \u0111\u1ec3 \u0103n. Ng\u01b0\u1eddi ch\u1ee7 n\u00e0y mu\u1ed1n c\u1eaft c\u00e0 r\u1ed1t th\u00e0nh \\(k\\) ph\u1ea7n sao cho t\u1ed5ng th\u1eddi gian \u0103n h\u1ebft \\(k\\) ph\u1ea7n n\u00e0y l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le n, k \\le 10^5\\). - \\(1 \\le a_i \\le 10^6\\).</p>"},{"location":"algo/trick/convex_greedy/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>X\u00e9t h\u00e0m \\(f_i(p)\\) l\u00e0 t\u1ed5ng th\u1eddi gian \u0103n nh\u1ecf nh\u1ea5t n\u1ebfu ta ch\u1ec9 x\u00e9t c\u1ee7 c\u00e0 r\u1ed1t \\(a_i\\), v\u00e0 c\u1ee7 c\u00e0 r\u1ed1t n\u00e0y \u0111\u01b0\u1ee3c chia th\u00e0nh \u0111\u00fang \\(p\\) ph\u1ea7n.</p> <p>Nh\u1eadn x\u00e9t r\u1eb1ng ta c\u00f3 th\u1ec3 t\u00ednh \\(f_i(x)\\) trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(1)\\) v\u1edbi m\u1ecdi \\(x\\): \u0111\u1ec3 \u00fd r\u1eb1ng khi chia c\u1ee7 c\u00e0 r\u1ed1t \\(i\\) th\u00e0nh \\(x\\) ph\u1ea7n, c\u00e1c ph\u1ea7n n\u00e0y c\u1ea7n c\u00f3 \u0111\u1ed9 d\u00e0i c\u00e1ch nhau t\u1ed1i \u0111a l\u00e0 \\(1\\) (ta c\u00f3 th\u1ec3 ch\u1ee9ng minh b\u1eb1ng vi\u1ec7c nh\u1eadn x\u00e9t r\u1eb1ng \\(f_i(x)\\) l\u00e0 t\u1ed5ng \\(t_1^2 + t_2^2 + \\dots + t_x^2\\) v\u1edbi \\(t_1 + t_2 + \\dots + t_x = a_i\\), t\u1eeb \u0111\u00f3 ta c\u00f3 th\u1ec3 d\u00f9ng c\u00e1ch l\u1eadp lu\u1eadn tham chi ph\u00ed t\u0103ng \u0111\u1ec3 ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y, chi ti\u1ebft xin \u0111\u1ec3 d\u00e0nh cho b\u1ea1n \u0111\u1ecdc).</p> <p>Quan tr\u1ecdng h\u01a1n, ta nh\u1eadn th\u1ea5y l\u00e0 m\u1ecdi \\(f_i\\) l\u00e0 h\u00e0m l\u1ed3i. \u0110\u1ec3 ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y v\u1edbi m\u1ecdi \\(i\\), ta gi\u1ea3 s\u1eed c\u1ee7 c\u00e0 r\u1ed1t \\(n + 1\\) c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 \\(2a_i\\). Nh\u1eadn x\u00e9t r\u1eb1ng v\u1edbi m\u1ecdi \\(p\\), \\(2f_i(p) = f_{n + 1}(2p)\\). \u0110\u00e2y l\u00e0 v\u00ec n\u1ebfu c\u1ee7 c\u00e0 r\u1ed1t th\u1ee9 \\(n + 1\\) \u0111\u01b0\u1ee3c chia th\u00e0nh c\u00e1c ph\u1ea7n c\u00f3 \u0111\u1ed9 d\u00e0i \\(x\\) v\u00e0 \\(x + 1\\), th\u00ec s\u1ed1 l\u01b0\u1ee3ng \u0111o\u1ea1n c\u00e0 r\u1ed1t c\u00f3 \u0111\u1ed9 d\u00e0i \\(x\\) l\u00e0 ch\u1eb5n, v\u00e0 t\u01b0\u01a1ng t\u1ef1 v\u1edbi \\(x + 1\\); v\u00ec th\u1ebf, ta lu\u00f4n c\u00f3 th\u1ec3 chia c\u1ee7 c\u00e0 r\u1ed1t th\u1ee9 \\(n + 1\\) l\u00e0m \u0111\u00f4i, r\u1ed3i c\u1eaft m\u1ed7i ph\u1ea7n gi\u1ed1ng nhau. Ngo\u00e0i ra, \\(f_{n + 1}(2p) \\le f_i(p - 1) + f_i(p + 1)\\), b\u1edfi v\u00ec m\u1ed9t c\u00e1ch c\u1eaft m\u1ed9t c\u1ee7 c\u00e0 r\u1ed1t c\u00f3 \u0111\u1ed9 d\u00e0i \\(2a_i\\) th\u00e0nh \\(2p\\) ph\u1ea7n l\u00e0 c\u1eaft \u0111\u00f4i c\u1ee7 c\u00e0 r\u1ed1t, r\u1ed3i c\u1eaft n\u1eeda \u0111\u1ea7u th\u00e0nh \\(p - 1\\) ph\u1ea7n v\u00e0 n\u1eeda sau th\u00e0nh \\(p + 1\\) ph\u1ea7n. B\u1edfi th\u1ebf, \\(2f_i(p) \\le f_i(p - 1) + f_i(p + 1)\\), t\u1eeb \u0111\u00f3 ta c\u00f3 \\(f_i(p + 1) - f_i(p) \\ge f_i(p) - f_i(p - 1)\\).</p> <p>B\u1edfi th\u1ebf, ta c\u00f3 th\u1ec3 d\u00f9ng \u00fd t\u01b0\u1edfng tham lam \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u1edf ph\u1ea7n b\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t \u0111\u1ec3 c\u00e0i \u0111\u1eb7t b\u00e0i n\u00e0y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O((n + k) \\log n)\\).</p>"},{"location":"algo/trick/convex_greedy/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstruct carrot {\n    int a, b;\n\n    carrot(int _a, int _b) : a(_a), b(_b) {}\n\n    long long value() const {\n        // t\u00ednh f_i(b). m\u1ed7i ph\u1ea7n c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 a / b ho\u1eb7c l\u00e0 a / b + 1, v\u00e0 c\u00f3 a % b ph\u1ea7n c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 a / b + 1\n        int cnt = a / b, ov = a % b;\n        return 1LL * cnt * cnt * (b - ov) + 1LL * (cnt + 1) * (cnt + 1) * ov;\n    }\n\n    long long next() const {\n        return carrot(a, b).value() - carrot(a, b + 1).value();\n    }\n\n    long long operator&lt;(const carrot&amp; oth) const {\n        return next() &lt; oth.next();\n    }\n};\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int n, k; cin &gt;&gt; n &gt;&gt; k;\n    long long ans = 0;\n    priority_queue&lt;carrot&gt; pq;\n    for (int i = 0; i &lt; n; i++) {\n        int a; cin &gt;&gt; a;\n        carrot cur(a, 1);\n        ans += cur.value();\n        pq.push(cur);\n    }\n    // \u0111\u1ec3 \u00fd r\u1eb1ng x_1 = x_2 = ... = x_n = 1; ta ti\u1ebfp t\u1ee5c t\u1eeb \u0111\u00e2y\n    // ta c\u0169ng kh\u00f4ng c\u1ea7n ph\u1ea3i quan t\u00e2m tr\u01b0\u1eddng h\u1ee3p ta c\u1eaft m\u1ed9t c\u1ee7 c\u00e0 r\u1ed1t th\u00e0nh nhi\u1ec1u h\u01a1n a[i] ph\u1ea7n, v\u00ec l\u00fac \u0111\u00f3 .next() s\u1ebd b\u1eb1ng 0 thay v\u00ec l\u00e0 m\u1ed9t s\u1ed1 \u00e2m\n    for (int i = n; i &lt; k; i++) {\n        carrot u = pq.top(); pq.pop();\n        ans -= u.next();\n        pq.push({u.a, u.b + 1});\n    }\n    cout &lt;&lt; ans &lt;&lt; \"\\n\";\n}\n</code></pre>"},{"location":"algo/trick/convex_greedy/#tham-chi-phi-tang-chat-nhi-phan","title":"Tham chi ph\u00ed t\u0103ng + ch\u1eb7t nh\u1ecb ph\u00e2n","text":"<p>Link b\u00e0i: CF - 1344D.</p>"},{"location":"algo/trick/convex_greedy/#e-bai_2","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ea3ng \\(a\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng v\u00e0 m\u1ed9t s\u1ed1 \\(k\\), b\u1ea1n c\u1ea7n t\u00ecm m\u1ea3ng \\(b\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean th\u1ecfa m\u00e3n: - \\(0 \\le b_i \\le a_i\\) v\u1edbi m\u1ecdi \\(i\\). - \\(\\sum_{i = 1}^n b_i = k\\). - \\(\\sum_{i = 1}^n b_i(a_i - b_i^2)\\) l\u00e0 l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3.</p> <p>In ra m\u1ea3ng \\(b\\) th\u1ecfa m\u00e3n 3 \u0111i\u1ec1u ki\u1ec7n n\u00e0y.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le n \\le 10^5\\). - \\(1 \\le a_i \\le 10^9\\). - \\(1 \\le k \\le \\sum_{i=1}^n a_i\\).</p>"},{"location":"algo/trick/convex_greedy/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>N\u1ebfu ta \u0111\u1eb7t \\(f_i(x) = x(a_i - x^2)\\), th\u00ec ta nh\u1eadn th\u1ea5y l\u00e0 \\(f_i(x)\\) l\u00e0 h\u00e0m l\u00f5m (hay n\u00f3i c\u00e1ch kh\u00e1c, \\(-f_i(x)\\) l\u00e0 h\u00e0m l\u1ed3i). \u0110\u1ec3 ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y, v\u1edbi m\u1ecdi \\(x\\) ta c\u00f3 \\(\\(f_i(x + 1) - f_i(x) = -3x^2 - 3x - 1 + a_i\\)\\) v\u00e0 v\u1ebf ph\u1ea3i gi\u1ea3m d\u1ea7n khi \\(x\\) t\u0103ng d\u1ea7n. V\u00ec th\u1ebf, ta c\u00f3 th\u1ec3 d\u00f9ng \u00fd t\u01b0\u1edfng t\u1ed5ng qu\u00e1t nh\u01b0 tr\u00ean. Tuy nhi\u00ean, v\u1edbi \\(k \\sim 10^{14}\\) \u1edf b\u00e0i to\u00e1n n\u00e0y, ta kh\u00f4ng th\u1ec3 tr\u1ef1c ti\u1ebfp s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n tr\u00ean. \u0110\u1ec3 t\u1ed1i \u01b0u, ta c\u00f3 th\u1ec3 ch\u1eb7t nh\u1ecb ph\u00e2n chi ph\u00ed t\u0103ng l\u1edbn th\u1ee9 \\(k\\). Khi \u0111ang x\u00e9t ch\u1eb7t nh\u1ecb ph\u00e2n v\u1edbi gi\u00e1 tr\u1ecb \\(m\\), ta c\u1ea7n t\u00ecm v\u1edbi m\u1ecdi \\(i\\) gi\u00e1 tr\u1ecb \\(b_i\\) l\u1edbn nh\u1ea5t sao cho \\(f_i(b_i + 1) - f_i(b_i) \\ge m\\); thao t\u00e1c n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(1)\\) n\u1ebfu s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c ph\u01b0\u01a1ng tr\u00ecnh b\u1eadc hai, ho\u1eb7c v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log a_i)\\) n\u1ebfu s\u1eed d\u1ee5ng th\u00eam 1 v\u00f2ng ch\u1eb7t nh\u1ecb ph\u00e2n. V\u00ec th\u1ebf, ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i tr\u00ean v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n \\log^2 A)\\) ho\u1eb7c \\(O(n \\log A)\\) v\u1edbi \\(A = \\sum_{i=1}^n a_i\\).</p>"},{"location":"algo/trick/convex_greedy/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>M\u1ed9t s\u1ed1 l\u01b0u \u00fd khi c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n tr\u00ean: s\u1ebd c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i gi\u00e1 tr\u1ecb \\(m\\) m\u00e0 s\u1ed1 l\u01b0\u1ee3ng chi ph\u00ed t\u0103ng \\(&lt; m\\) b\u00e9 h\u01a1n \\(k\\), nh\u01b0ng s\u1ed1 l\u01b0\u1ee3ng chi ph\u00ed t\u0103ng \\(\\le m\\) th\u00ec l\u1ea1i l\u1edbn h\u01a1n \\(k\\) (v\u00ec c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u chi ph\u00ed t\u0103ng \u0111\u00fang b\u1eb1ng \\(m\\)). Ta c\u1ea7n ph\u1ea3i c\u1ea9n th\u1eadn khi c\u00e0i \u0111\u1eb7t tr\u01b0\u1eddng h\u1ee3p n\u00e0y.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst long long INF = 4E18;\n\n// chi ph\u00ed t\u0103ng t\u1eeb b l\u00ean b + 1 v\u1edbi a\nlong long cost(long long a, long long b) {\n    return a - 3 * b * b - 3 * b - 1;\n}\n\n// ch\u1eb7t nh\u1ecb ph\u00e2n t\u00ecm b l\u1edbn nh\u1ea5t sao cho cost(a, b) &gt;= t\nint get_last(long long a, long long t) {\n    int l = 0, r = a + 1;\n    while (l + 1 &lt; r) {\n        int m = (l + r) / 2;\n        (cost(a, m) &gt;= t ? l : r) = m;\n    }\n    return l;\n};\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int n; cin &gt;&gt; n;\n    long long k; cin &gt;&gt; k;\n    vector&lt;int&gt; a(n);\n    for (int i = 0; i &lt; n; i++) {\n        cin &gt;&gt; a[i];\n    }\n    // ch\u1eb7t nh\u1ecb ph\u00e2n t\u00ecm gi\u00e1 tr\u1ecb ri nh\u1ecf nh\u1ea5t sao cho s\u1ed1 l\u01b0\u1ee3ng chi ph\u00ed t\u0103ng &gt;= ri l\u00e0 kh\u00f4ng qu\u00e1 k\n    long long le = -INF, ri = INF;\n    while (le + 1 &lt; ri) {\n        long long mi = (le + ri) / 2;\n        long long cnt = 0;\n        for (int i = 0; i &lt; n; i++) {\n            cnt += get_last(a[i], mi);\n        }\n        (cnt &lt;= k ? ri : le) = mi;\n    }\n    // c\u00f3 th\u1ec3 x\u1ea3y ra tr\u01b0\u1eddng h\u1ee3p s\u1ed1 l\u01b0\u1ee3ng chi ph\u00ed t\u0103ng &gt;= ri b\u00e9 h\u01a1n k, nh\u01b0ng s\u1ed1 l\u01b0\u1ee3ng chi ph\u00ed t\u0103ng &gt;= ri - 1 th\u00ec l\u1edbn h\u01a1n k\n    // \u1edf \u0111\u00e2y sau khi d\u1ef1ng \u0111\u00e1p \u00e1n v\u1edbi chi ph\u00ed t\u0103ng &gt;= ri, ta ch\u1ea1y th\u00eam 1 l\u1ea7n \u0111\u1ec3 ch\u1ecdn th\u00eam m\u1ed9t s\u1ed1 chi ph\u00ed t\u0103ng\n    // sao cho t\u1ed5ng b \u0111\u00fang b\u1eb1ng k\n    long long tot = 0;\n    vector&lt;int&gt; b(n);\n    vector&lt;pair&lt;long long, int&gt;&gt; nxt;\n    for (int i = 0; i &lt; n; i++) {\n        b[i] = get_last(a[i], ri);\n        tot += b[i];\n        if (b[i] &lt; a[i]) {\n            nxt.push_back({cost(a[i], b[i]), i});\n        }\n    }\n    sort(nxt.begin(), nxt.end(), greater&lt;pair&lt;long long, int&gt;&gt;());\n    // t\u0103ng t\u1eeb tot l\u00ean k\n    for (int i = 0; i &lt; k - tot; i++) {\n        b[nxt[i].second]++;\n    }\n    for (int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; b[i] &lt;&lt; \" \";\n    }\n}\n</code></pre>"},{"location":"algo/trick/convex_greedy/#tham-ao-ham","title":"Tham \u0111\u1ea1o h\u00e0m","text":"<p>Link b\u00e0i: SEERC 2022 - M.</p>"},{"location":"algo/trick/convex_greedy/#e-bai_3","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Jerry c\u00f3 m\u1ed9t c\u00e1i c\u00e2y v\u00f4 h\u01b0\u1edbng c\u00f3 \\(n\\) \u0111\u1ec9nh, trong \u0111\u00f3 m\u1ed7i \u0111\u1ec9nh \u0111\u01b0\u1ee3c \u0111\u1eb7t \\(c_i\\) mi\u1ebfng ph\u00f4 mai.</p> <p>C\u00f3 m\u1ed9t ch\u00fa chu\u1ed9t hi\u1ec7n \u0111ang \u0111\u1ee9ng \u1edf \u0111\u1ec9nh \\(1\\) v\u00e0 mu\u1ed1n \u0111i t\u1edbi \u0111\u1ec9nh \\(n\\) \u0111\u1ec3 tho\u00e1t kh\u1ecfi c\u00e1i c\u00e2y n\u00e0y. \u1ede m\u1ed7i b\u01b0\u1edbc, ch\u00fa chu\u1ed9t n\u00e0y s\u1ebd d\u00f9ng m\u0169i \u0111\u00e1nh h\u01a1i s\u1ed1 l\u01b0\u1ee3ng ph\u00f4 mai \u1edf nh\u1eefng \u0111\u1ec9nh k\u1ec1 \u0111\u1ec9nh ch\u00fa chu\u1ed9t \u0111ang \u0111\u1ee9ng, r\u1ed3i di chuy\u1ec3n t\u1edbi m\u1ed9t \u0111\u1ec9nh k\u1ec1 ng\u1eabu nhi\u00ean v\u1edbi x\u00e1c su\u1ea5t t\u1ec9 l\u1ec7 thu\u1eadn v\u1edbi s\u1ed1 l\u01b0\u1ee3ng ph\u00f4 mai hi\u1ec7n c\u00f3 \u1edf \u0111\u1ec9nh n\u00e0y. L\u01b0u \u00fd r\u1eb1ng ch\u00fa chu\u1ed9t n\u00e0y s\u1ebd kh\u00f4ng bao gi\u1edd quay tr\u1edf l\u1ea1i nh\u1eefng \u0111\u1ec9nh ch\u00fa chu\u1ed9t \u0111\u00e3 \u0111i tr\u01b0\u1edbc \u0111\u00f3. N\u1ebfu kh\u00f4ng c\u00f2n \u0111\u1ec9nh k\u1ec1 n\u00e0o h\u1ee3p l\u1ec7 \u0111\u1ec3 di chuy\u1ec3n, ch\u00fa chu\u1ed9t s\u1ebd b\u1ecb k\u1eb9t \u1edf \u0111\u1ec9nh n\u00e0y m\u00e3i m\u00e3i.</p> <p>Jerry mu\u1ed1n gi\u00fap ch\u00fa chu\u1ed9t n\u00e0y tho\u00e1t kh\u1ecfi m\u00ea cung (t\u1ee9c l\u00e0 \u0111i t\u1edbi \u0111\u1ec9nh \\(n\\)) v\u1edbi x\u00e1c su\u1ea5t l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, Jerry c\u00f3 th\u1ec3 \u0111\u1eb7t th\u00eam m\u1ed9t v\u00e0i mi\u1ebfng ph\u00f4 mai v\u00e0o c\u00e1c \u0111\u1ec9nh \u1edf trong c\u00e2y. Tuy nhi\u00ean, Jerry ch\u1ec9 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u1ed1i \u0111a \\(x\\) mi\u1ebfng ph\u00f4 mai, v\u00e0 Jerry ph\u1ea3i \u0111\u1eb7t m\u1ed9t s\u1ed1 nguy\u00ean c\u00e1c mi\u1ebfng ph\u00f4 mai v\u00e0o m\u1ecdi \u0111\u1ec9nh.</p> <p>In ra m\u1ed9t c\u00e1ch \u0111\u1eb7t ph\u00f4 mai \u0111\u1ec3 Jerry t\u1ed1i \u0111a h\u00f3a x\u00e1c su\u1ea5t ch\u00fa chu\u1ed9t kia c\u00f3 th\u1ec3 t\u1ea9u tho\u00e1t.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1 \\le n \\le 2 \\cdot 10^5\\). - \\(1 \\le x, c_i \\le 10^9\\).</p>"},{"location":"algo/trick/convex_greedy/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ea7u ti\u00ean ta nh\u1eadn th\u1ea5y l\u00e0 ta ch\u1ec9 n\u00ean \u0111\u1eb7t ph\u00f4 mai \u1edf nh\u1eefng \u0111\u1ec9nh tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1\\) t\u1edbi \\(n\\) kh\u00f4ng bao g\u1ed3m \\(1\\). Ngo\u00e0i ra, v\u1edbi m\u1ed7i \u0111\u1ec9nh \\(u\\) tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(1\\) t\u1edbi \\(n\\), ta c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c \\(b_u\\) l\u00e0 t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng ph\u00f4 mai \u1edf nh\u1eefng \u0111\u1ec9nh l\u00e0 con c\u1ee7a cha c\u1ee7a \\(u\\) --- n\u00f3i c\u00e1ch kh\u00e1c, \\(\\frac{c_u}{b_u}\\) l\u00e0 x\u00e1c su\u1ea5t \u0111i t\u1edbi \u0111\u1ec9nh \\(u\\) t\u1eeb \u0111\u1ec9nh cha c\u1ee7a \\(u\\) tr\u01b0\u1edbc khi thao t\u00e1c. Sau khi th\u00eam \\(x_u\\) mi\u1ebfng ph\u00f4 mai v\u00e0o \u0111\u1ec9nh \\(u\\), x\u00e1c su\u1ea5t n\u00e0y tr\u1edf th\u00e0nh \\(\\frac{c_u + x_u}{b_u + x_u}\\). V\u00ec th\u1ebf, x\u00e1c su\u1ea5t \u0111i t\u1edbi \\(n\\) s\u1ebd l\u00e0 l\u00e0 \\(\\prod_{u \\in \\{1 \\to n\\}} \\frac{c_u + x_u}{b_u + x_u}\\). \u0110\u1ec3 thu\u1eadn ti\u1ec7n h\u01a1n, ta x\u00e9t logarit c\u1ee7a h\u00e0m n\u00e0y: \\(\\sum_{u \\in \\{1 \\to n\\}} \\log(c_u + x_u) - \\log(b_u + x_u)\\).</p> <p>Nh\u1eadn x\u00e9t r\u1eb1ng n\u1ebfu ta \u0111\u1eb7t \\(f_u(t) = \\log(c_u + t) - \\log(b_u + t)\\), th\u00ec \\(f_u\\) l\u00e0 h\u00e0m l\u00f5m. V\u00ec th\u1ebf, ta c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 b\u00e0i to\u00e1n quen thu\u1ed9c sau: ch\u1ecdn \\(x_u\\) sao cho: - \\(x_u\\) l\u00e0 s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m v\u1edbi m\u1ecdi \\(u \\in \\{1 \\to n\\}\\). - \\(\\sum_{u \\in \\{1 \\to n\\}} x_u = x\\). - \\(\\sum_{u \\in \\{1 \\to n\\}} f_u(x_u)\\) l\u00e0 l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3.</p> <p>Ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng k\u0129 thu\u1eadt \u1edf tr\u00ean: ch\u1eb7t nh\u1ecb ph\u00e2n chi ph\u00ed t\u0103ng cu\u1ed1i c\u00f9ng \\(t\\), r\u1ed3i \u1edf m\u1ed7i \u0111\u1ec9nh \\(u\\) ta ch\u1eb7t nh\u1ecb ph\u00e2n \\(x_u\\) nh\u1ecf nh\u1ea5t sao cho \\(f_u(x_u + 1) - f_u(x_u) &lt; t\\). Tuy nhi\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y l\u00e0 \\(O(n \\log x \\log \\epsilon^{-1})\\) v\u1edbi \\(\\epsilon\\) l\u00e0 \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ea7n \u0111\u1ea1t \u0111\u01b0\u1ee3c; v\u1edbi b\u00e0i to\u00e1n n\u00e0y, c\u00e1ch l\u00e0m n\u00e0y s\u1ebd b\u1ecb v\u01b0\u1ee3t qu\u00e1 th\u1eddi gian cho ph\u00e9p (\\(\\epsilon\\) c\u00f3 th\u1ec3 xu\u1ed1ng t\u1edbi \\(10^{-19}\\)).</p> <p>M\u1ed9t \u00fd t\u01b0\u1edfng cho b\u00e0i to\u00e1n n\u00e0y l\u00e0 b\u1ecf gi\u1edbi h\u1ea1n r\u1eb1ng \\(x_u\\) l\u00e0 s\u1ed1 nguy\u00ean, r\u1ed3i t\u1eeb nghi\u1ec7m th\u1ef1c \\(\\hat{x}_u\\) nh\u1eadn \u0111\u01b0\u1ee3c, ta chuy\u1ec3n v\u1ec1 \\(x_u\\) b\u1eb1ng c\u00e1ch n\u00e0o \u0111\u00f3 (k\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 integer program relaxation). N\u00f3i c\u00e1ch kh\u00e1c, x\u00e9t b\u00e0i to\u00e1n sau: cho \\(f_u(t) = \\log(c_u + t) - \\log(b_u + t)\\), ch\u1ecdn \\(\\hat{x}_u\\) sao cho - \\(x_u\\) l\u00e0 s\u1ed1 th\u1ef1c kh\u00f4ng \u00e2m v\u1edbi m\u1ecdi \\(u \\in \\{1 \\to n\\}\\). - \\(\\sum_{u \\in \\{1 \\to n\\}} \\hat{x}_u = x\\). - \\(\\sum_{u \\in \\{1 \\to n\\}} f_u(\\hat{x}_u)\\) l\u00e0 l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3.</p> <p>\u1ede \u0111\u00e2y, h\u00e0m \\(g\\) tr\u00ean t\u1eadp s\u1ed1 th\u1ef1c l\u00e0 h\u00e0m l\u00f5m n\u1ebfu \\(g'(t) \\le 0\\) v\u1edbi m\u1ecdi \\(t\\). T\u01b0\u01a1ng t\u1ef1, h\u00e0m \\(g\\) tr\u00ean t\u1eadp s\u1ed1 th\u1ef1c l\u00e0 h\u00e0m l\u1ed3i n\u1ebfu \\(g'(t) \\ge 0\\) v\u1edbi m\u1ecdi \\(t\\). Nh\u1eadn th\u1ea5y l\u00e0 h\u00e0m \\(f_u\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean c\u0169ng l\u00e0 m\u1ed9t h\u00e0m l\u00f5m tr\u00ean t\u1eadp s\u1ed1 th\u1ef1c.</p> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n tr\u00ean v\u1edbi nghi\u1ec7m th\u1ef1c, ta x\u00e9t \u00fd t\u01b0\u1edfng tham chi ph\u00ed t\u0103ng nh\u01b0ng v\u1edbi b\u01b0\u1edbc ti\u1ebfn nh\u1ecf. N\u00f3i c\u00e1ch kh\u00e1c, ta ch\u1ecdn m\u1ed9t h\u1eb1ng s\u1ed1 nh\u1ecf \\(dx\\) n\u00e0o \u0111\u00f3, r\u1ed3i th\u1ef1c hi\u1ec7n thao t\u00e1c sau \\(\\frac{x}{dx}\\) l\u1ea7n: - Ch\u1ecdn \\(u\\) sao cho \\(f_u(\\hat{x}_u + dx) - f_u(\\hat{x})\\) l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3. M\u1ed9t c\u00e1ch di\u1ec5n \u0111\u1ea1t t\u01b0\u01a1ng \u0111\u01b0\u01a1ng l\u00e0 ta ch\u1ecdn \\(u\\) sao cho \\(\\frac{f_u(\\hat{x}_u + dx) - f_u(\\hat{x})}{dx}\\) l\u00e0 l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3. - T\u0103ng \\(\\hat{x}_u\\) l\u00ean \\(dx\\).</p> <p>Ta nh\u1eadn th\u1ea5y l\u00e0 v\u1edbi nghi\u1ec7m nguy\u00ean, ta l\u1eb7p thao t\u00e1c tr\u00ean v\u1edbi \\(dx = 1\\). V\u1edbi nghi\u1ec7m th\u1ef1c, ta l\u1eb7p thao t\u00e1c tr\u00ean nhi\u1ec1u l\u1ea7n v\u1edbi \\(dx\\) ti\u1ebfn t\u1edbi \\(0\\). Nh\u1eadn th\u1ea5y r\u1eb1ng khi \\(dx \\to 0\\), \\(\\frac{f_u(\\hat{x}_u + dx) - f_u(\\hat{x})}{dx} = f'_u(\\hat{x}_u)\\). T\u1eeb nh\u1eadn x\u00e9t tr\u00ean v\u00e0 b\u1edfi v\u00ec \\(f'_u\\) l\u00e0 h\u00e0m li\u00ean t\u1ee5c, ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadt r\u1eb1ng nghi\u1ec7m \\(\\hat{x}\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n sau v\u1edbi m\u1ecdi \\(u\\): - V\u1edbi m\u1ecdi \\(u\\) sao cho \\(\\hat{x}_u &gt; 0\\), \u0111\u1ea1o h\u00e0m c\u1ee7a \\(f_u\\) t\u1ea1i c\u00e1c \u0111i\u1ec3m n\u00e0y l\u00e0 b\u1eb1ng nhau. N\u00f3i c\u00e1ch kh\u00e1c, t\u1ed3n t\u1ea1i s\u1ed1 \\(t\\) sao cho v\u1edbi m\u1ecdi \\(u\\) m\u00e0 \\(\\hat{x}_u &gt; 0\\), ta c\u00f3 \\(f'_u(\\hat{x}_u) = t\\). - V\u1edbi m\u1ecdi \\(u\\) sao cho \\(\\hat{x}_u = 0\\), ta c\u00f3 \\(f'_u(\\hat{x}_u) \\le t\\).</p> <p>V\u00ec th\u1ebf, ta c\u00f3 th\u1ec3 t\u00ecm nghi\u1ec7m th\u1ef1c c\u1ee7a b\u00e0i to\u00e1n tr\u00ean nh\u01b0 sau: ta ch\u1eb7t nh\u1ecb ph\u00e2n gi\u00e1 tr\u1ecb \\(t\\); \u1edf m\u1ed7i v\u00f2ng ch\u1eb7t nh\u1ecb ph\u00e2n v\u00e0 v\u1edbi m\u1ed7i \\(u\\), ta gi\u1ea3i \\(\\hat{x}_u\\) sao cho \\(f'_u(\\hat{x}_u) = t\\) (ho\u1eb7c g\u00e1n \\(\\hat{x}_u = 0\\) n\u1ebfu \\(f'(\\hat{x}_u) \\le t\\)). \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ph\u1ea7n n\u00e0y l\u00e0 \\(O(n \\log \\epsilon^{-1})\\) v\u00ec ta c\u00f3 th\u1ec3 tr\u1ef1c ti\u1ebfp gi\u1ea3i \\(\\hat{x}_u\\).</p> Chi ti\u1ebft gi\u1ea3i <p> Ta bi\u1ebft r\u1eb1ng $f'_u(\\hat{x}_u) = \\frac{1}{c_u + \\hat{x}_u} - \\frac{1}{b_u + \\hat{x}_u}$. Gi\u1ea3 s\u1eed $c_u &lt; b_u$ (n\u1ebfu kh\u00f4ng th\u00ec ta kh\u00f4ng c\u1ea7n ph\u1ea3i th\u00eam ph\u00f4 mai v\u00e0o \u0111\u1ec9nh n\u00e0y), th\u00ec $f'_u(\\hat{x}_u) = t$ l\u00e0 ph\u01b0\u01a1ng tr\u00ecnh b\u1eadc hai, nh\u1eadn nghi\u1ec7m $\\hat{x}_u = \\frac{\\sqrt{\\frac{4(b_u - c_u)}{t} + (b_u - c_u)^2} - b_u - c_u}{2}$. </p> <p>Ta nh\u1eadn \u0111\u01b0\u1ee3c nghi\u1ec7m th\u1ef1c \\(\\hat{x}_u\\) c\u1ee7a b\u00e0i to\u00e1n th\u1ef1c tr\u00ean; b\u00e2y gi\u1edd ta ph\u1ea3i chuy\u1ec3n \u0111\u1ed5i nghi\u1ec7m th\u1ef1c n\u00e0y th\u00e0nh nghi\u1ec7m nguy\u00ean \\(x_u\\) c\u1ee7a b\u00e0i to\u00e1n ban \u0111\u1ea7u. Ta c\u00f3 nh\u1eadn x\u00e9t cu\u1ed1i c\u00f9ng: nghi\u1ec7m d\u01b0\u01a1ng ph\u1ea3i th\u1ecfa m\u00e3n \\(x_u \\ge \\lfloor \\hat{x}_u \\rfloor\\) v\u1edbi m\u1ecdi \\(u\\), ho\u1eb7c \\(x_u \\le \\lceil \\hat{x}_u \\rceil\\) v\u1edbi m\u1ecdi \\(u\\).</p> Ch\u1ee9ng minh <p> G\u1ecdi $\\hat{x}_u$ l\u00e0 nghi\u1ec7m th\u1ef1c c\u1ee7a b\u00e0i to\u00e1n v\u00e0 $x_u$ l\u00e0 nghi\u1ec7m nguy\u00ean c\u1ee7a b\u00e0i to\u00e1n. Ta ch\u1ee9ng minh m\u1ec7nh \u0111\u1ec1 tr\u00ean b\u1eb1ng ph\u1ea3n ch\u1ee9ng.  Gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i $u$ v\u00e0 $v$ sao cho $x_u \\le \\lfloor \\hat{x}_u \\rfloor - 1$ v\u00e0 $x_v \\ge \\lceil \\hat{x}_v \\rceil + 1$. \u0110\u1ec3 \u00fd r\u1eb1ng b\u1edfi v\u00ec $x_u \\ge 0$, \u0111i\u1ec1u n\u00e0y ngh\u0129a r\u1eb1ng $\\hat{x}_u \\ge 1$, t\u1ee9c l\u00e0 $f'_u(\\hat{x}_u) = t$. Tuy nhi\u00ean, ta c\u00f3:  $$f_u(x_u + 1) - f_u(x_u) &gt; f'_u(x_u + 1) \\ge f'_u(\\hat{x}_u) = t \\ge f'_v(\\hat{x}_v) \\ge f'_v(x_v - 1) \\ge f_v(x_v) - f_v(x_v - 1).$$  B\u1edfi th\u1ebf, theo thu\u1eadt to\u00e1n tham chi ph\u00ed t\u0103ng, ta ph\u1ea3i ch\u1ecdn t\u0103ng $x_u$ l\u00ean $x_u + 1$ tr\u01b0\u1edbc khi ch\u1ecdn t\u0103ng $x_v - 1$ l\u00ean $x_v$. V\u00ec th\u1ebf, $x$ kh\u00f4ng ph\u1ea3i nghi\u1ec7m nguy\u00ean c\u1ee7a b\u00e0i to\u00e1n tr\u00ean. </p> <p>T\u1eeb hai nh\u1eadn x\u00e9t n\u00e0y, ta nh\u1eadn th\u1ea5y nghi\u1ec7m nguy\u00ean c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o n\u00ean t\u1eeb nghi\u1ec7m th\u1ef1c b\u1eb1ng m\u1ed9t trong hai c\u00e1ch sau:</p> <p>\\(x_u = \\lfloor \\hat{x}_u \\rfloor\\)</p> <ul> <li>Kh\u1edfi t\u1ea1o \\(x_u =\\lfloor\\hat{x}_u\\rfloor\\) r\u1ed3i ch\u1ea1y tham chi ph\u00ed t\u0103ng kh\u00f4ng qu\u00e1 \\(n\\) b\u01b0\u1edbc (v\u00ec \\(\\sum \\lfloor \\hat{x}_u \\rfloor \\ge x - n\\)).</li> <li>Kh\u1edfi t\u1ea1o \\(x_u = \\lceil \\hat{x}_u \\rceil\\) r\u1ed3i ch\u1ea1y thu\u1eadt to\u00e1n \u0111\u1ea3o c\u1ee7a tham chi ph\u00ed t\u0103ng (xo\u00e1 chi ph\u00ed gi\u1ea3m nh\u1ecf nh\u1ea5t) kh\u00f4ng qu\u00e1 \\(n\\) b\u01b0\u1edbc (v\u00ec \\(\\sum \\lceil \\hat{x}_u \\rceil \\le x + n\\)).</li> </ul> <p>Tr\u00ean th\u1ef1c t\u1ebf, v\u1edbi ri\u00eang b\u00e0i to\u00e1n n\u00e0y, ta ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng c\u00e1ch th\u1ee9 nh\u1ea5t. M\u00ecnh kh\u00f4ng bi\u1ebft c\u00e1ch ch\u1ee9ng minh \u0111i\u1ec1u n\u00e0y, tuy nhi\u00ean k\u1ec3 c\u1ea3 khi ta th\u1ef1c hi\u1ec7n c\u1ea3 2 c\u00e1ch th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ph\u1ea7n n\u00e0y l\u00e0 \\(O(n \\log n)\\).</p> <p>V\u00ec th\u1ebf, b\u00e0i to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gi\u1ea3i v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n (\\log n + \\log \\epsilon^{-1}))\\).</p>"},{"location":"algo/trick/convex_greedy/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u1ede \u0111\u00e2y m\u00ecnh kh\u00f4ng s\u1eed d\u1ee5ng \\(\\epsilon\\); thay v\u00e0o \u0111\u00f3, \u0111i\u1ec1u ki\u1ec7n tho\u00e1t c\u1ee7a m\u00ecnh l\u00e0 khi t\u1ed5ng c\u1ee7a \\(\\hat{x}_u\\) c\u00e1ch \\(x\\) t\u1ed1i \u0111a l\u00e0 \\(n\\).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nlong double log_prob(long double c, long double b) {\n    return log(c) - log(b);\n}\n\nlong double cost(long double c, long double b, long double add) {\n    return log_prob(c + add + 1, b + add + 1) - log_prob(c + add, b + add);\n}\n\n// gi\u1ea3i ph\u01b0\u01a1ng tr\u00ecnh d/dx(log(c + x) - log(b + x)) = t\nlong double solve(long double c, long double b, long double t) {\n    if (t * b &gt;= (b - c) / c) {\n        return 0.0;\n    } else {\n        return 0.5 * (sqrt(4 * (b - c) / t + (c - b) * (c - b)) - c - b);\n    }\n}\n\nint main() {\n    int n, x; cin &gt;&gt; n &gt;&gt; x;\n    vector&lt;int&gt; c(n);\n    vector&lt;vector&lt;int&gt;&gt; adj(n);\n    for (int i = 0; i &lt; n; i++) {\n        cin &gt;&gt; c[i];\n    }\n    for (int i = 1; i &lt; n; i++) {\n        int u, v; cin &gt;&gt; u &gt;&gt; v; u--; v--;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    vector&lt;tuple&lt;int, int, int&gt;&gt; pat;\n    {\n        // kh\u1edfi t\u1ea1o \u0111\u01b0\u1eddng \u0111i t\u1eeb 1 t\u1edbi n\n        function&lt;bool(int, int)&gt; DFS;\n        DFS = [&amp;](int u, int p) {\n            if (u == n - 1) {\n                return true;\n            } else {\n                int nod = -1, tot = 0;\n                for (int v : adj[u]) {\n                    if (v != p) {\n                        tot += c[v];\n                        if (DFS(v, u)) {\n                            nod = v;\n                        }\n                    }\n                }\n                // ta ch\u1ec9 th\u00eam \u0111\u1ec9nh v\u00e0o pat n\u1ebfu \u0111\u1ec9nh n\u00e0y th\u1ecfa m\u00e3n b_u != c_u\n                if (nod != -1 &amp;&amp; c[nod] != tot) {\n                    pat.push_back({c[nod], tot, nod});\n                }\n                return nod != -1;\n            }\n        };\n        DFS(0, -1);\n    }\n    // ch\u1eb7t nh\u1ecb ph\u00e2n \u0111\u1ea1o h\u00e0m\n    long double le = 0, ri = 1;\n    while (true) {\n        long double mi = (le + ri) / 2, cur = 0;\n        for (auto [c, b, i] : pat) {\n            cur += solve(c, b, mi);\n        }\n        (cur &lt;= x ? ri : le) = mi;\n        // \u0111i\u1ec1u ki\u1ec7n tho\u00e1t: x - n &lt;= t\u1ed5ng \\hat{x}_i &lt;= x\n        if (cur &lt;= x &amp;&amp; cur + n &gt;= x) {\n            break;\n        }\n    }\n    vector&lt;int&gt; ans(n);\n    int tot = 0;\n    // kh\u1edfi t\u1ea1o nghi\u1ec7m nguy\u00ean l\u00e0 ph\u1ea7n nguy\u00ean c\u1ee7a nghi\u1ec7m th\u1ef1c\n    priority_queue&lt;tuple&lt;long double, int, int, int&gt;&gt; pq;\n    for (auto [c, b, i] : pat) {\n        int add = solve(c, b, ri);\n        ans[i] = add;\n        tot += ans[i];\n        pq.push({cost(c, b, ans[i]), c, b, i});\n    }\n    // ch\u1ea1y th\u00eam b\u00e0i b\u01b0\u1edbc tham chi ph\u00ed t\u0103ng\n    while (tot &lt; x &amp;&amp; !pq.empty()) {\n        auto [ignore, c, b, i] = pq.top(); pq.pop();\n        ans[i]++;\n        tot++;\n        pq.push({cost(c, b, ans[i]), c, b, i});\n    }\n    for (int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; ans[i] &lt;&lt; \" \";\n    }\n}\n</code></pre>"},{"location":"algo/trick/convex_greedy/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>CodeSprint 2023 - L</li> <li>ICPC Danang 2019 - F</li> </ul>"},{"location":"algo/trick/counting-without-matrix-multiplication/","title":"Kh\u1eed nh\u00e2n ma tr\u1eadn","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n Ti\u1ebfn Trung Ki\u00ean</p> <p>\u0110\u00f4i l\u1eddi v\u1ec1 t\u00e1c gi\u1ea3:</p> <p>Nguy\u1ec5n Ti\u1ebfn Trung Ki\u00ean l\u00e0 c\u1ef1u h\u1ecdc sinh Chuy\u00ean T\u1ed5ng H\u1ee3p, v\u1edbi 1 HC\u0110 IOI n\u0103m 2014 v\u00e0 1 HCB IOI n\u0103m 2015. Ki\u00ean c\u00f2n  n\u1ed5i ti\u1ebfng v\u1edbi blog ch\u1ee9a code nhi\u1ec1u thu\u1eadt to\u00e1n v\u00e0 series Free contest.</p>"},{"location":"algo/trick/counting-without-matrix-multiplication/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Nh\u00e2n ma tr\u1eadn th\u1eadt s\u1ef1 h\u1eefu d\u1ee5ng. C\u00f3 nhi\u1ec1u b\u00e0i to\u00e1n khi \\(n\\) nh\u1ecf, ta d\u00f9ng DP (Dynamic Programming - Quy Ho\u1ea1ch \u0110\u1ed9ng) \u0111\u1ec3 gi\u1ea3i. Nh\u01b0ng khi \\(n\\) l\u1edbn (kho\u1ea3ng \\(10^9\\)), ta ph\u1ea3i d\u00f9ng nh\u00e2n ma tr\u1eadn \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p. Trong qu\u00e1 tr\u00ecnh code nh\u00e2n ma tr\u1eadn, vi\u1ec7c sinh ra ma tr\u1eadn g\u1ed1c kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng \u0111\u01a1n gi\u1ea3n. T\u00f4i \u0111\u00e3 t\u00ecm ra m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p t\u1ed1t \u0111\u1ec3 gi\u1ea3i nh\u1eefng b\u00e0i to\u00e1n n\u00e0y m\u00e0 kh\u00f4ng c\u1ea7n nh\u00e2n ma tr\u1eadn.</p> <p>Khi d\u00f9ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y, ta kh\u00f4ng c\u1ea7n ph\u1ea3i sinh ma tr\u1eadn g\u1ed1c v\u00e0 kh\u00f4ng c\u1ea7n c\u00e0i ph\u00e9p to\u00e1n nh\u00e2n hai ma tr\u1eadn \\(A \\times B\\) v\u00e0 lu\u1ef9 th\u1eeba ma tr\u1eadn \\(A^k\\). Tuy nhi\u00ean, ph\u01b0\u01a1ng ph\u00e1p n\u00e0y ch\u1ec9 d\u00f9ng \u0111\u01b0\u1ee3c trong c\u00e1c b\u00e0i to\u00e1n \u0111\u1ebfm, ngh\u0129a l\u00e0 n\u00f3 kh\u00f4ng th\u1ec3 ho\u00e0n to\u00e0n thay th\u1ebf nh\u00e2n ma tr\u1eadn.</p>"},{"location":"algo/trick/counting-without-matrix-multiplication/#bat-au-bang-vi-du-on-gian-nhat","title":"B\u1eaft \u0111\u1ea7u b\u1eb1ng v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n nh\u1ea5t","text":"<p>\u0110\u1ec3 v\u00ed d\u1ee5, t\u00f4i s\u1ebd d\u00f9ng b\u00e0i to\u00e1n sau:</p> <p>\u0110\u1ebfm xem c\u00f3 bao nhi\u00eau d\u00e3y ngo\u1eb7c \u0111\u00fang \u0111\u1ed9 d\u00e0i \\(n\\) m\u00e0 \u0111\u1ed9 s\u00e2u kh\u00f4ng qu\u00e1 \\(L\\). \\((n \\le 10^9, L \\le 10)\\).</p> <p>V\u00ed d\u1ee5, khi \\(n = 4\\) v\u00e0 \\(L = 1\\), th\u00ec <code>()()</code> l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang duy nh\u1ea5t tho\u1ea3 m\u00e3n, c\u00f2n <code>(())</code>, <code>((()</code>, v\u00e0 <code>))((</code> th\u00ec kh\u00f4ng tho\u1ea3 m\u00e3n.</p> <p>B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p Quy ho\u1ea1ch \u0111\u1ed9ng nh\u01b0 sau:</p> <ul> <li>Nh\u1eadn x\u00e9t: N\u1ebfu ta \u0111i qua l\u1ea7n l\u01b0\u1ee3t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a d\u00e3y ngo\u1eb7c v\u00e0 duy tr\u00ec m\u1ed9t bi\u1ebfn <code>sum</code>: Khi g\u1eb7p <code>(</code> ta t\u0103ng <code>sum</code> l\u00ean 1 \u0111\u01a1n v\u1ecb. Khi g\u1eb7p <code>)</code> ta gi\u1ea3m <code>sum</code> \u0111i 1 \u0111\u01a1n v\u1ecb. 1 d\u00e3y ngo\u1eb7c l\u00e0 d\u00e3y ngo\u1eb7c \u0111\u00fang n\u1ebfu th\u1ecfa m\u00e3n 2 \u0111i\u1ec1u ki\u1ec7n sau:</li> <li>Kh\u00f4ng c\u00f3 th\u1eddi \u0111i\u1ec3m n\u00e0o <code>sum</code> nh\u1ecf h\u01a1n 0</li> <li>\u0110\u1ebfn cu\u1ed1i c\u00f9ng, <code>sum</code> b\u1eb1ng 0.</li> <li>\u0110\u1ed3ng th\u1eddi, n\u1ebfu l\u00e0m nh\u01b0 tr\u00ean, \u0111\u1ed9 s\u00e2u c\u1ee7a d\u00e3y ngo\u1eb7c ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb t\u1ed1i \u0111\u00e3 c\u1ee7a <code>sum</code> trong qu\u00e1 tr\u00ecnh tr\u00ean.</li> </ul> <p>T\u1eeb nh\u1eadn x\u00e9t tr\u00ean, ta t\u00ecm ra c\u00f4ng th\u1ee9c \\(f(n,\u2009h)\u2009=\u2009f(n\u2009-\u20091,\u2009h\u2009-\u20091)\u2009+\u2009f(n\u2009-\u20091,\u2009h\u2009+\u20091)\\) trong \u0111\u00f3 \\(f(n,\u2009h)\\) l\u00e0 s\u1ed1 d\u00e3y m\u00e0 ph\u1ea7n c\u00f2n l\u1ea1i c\u1ea7n x\u00e2y d\u1ef1ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\) v\u00e0 t\u1ed5ng hi\u1ec7n t\u1ea1i (sum) l\u00e0 \\(h\\). M\u1ee5c ti\u00eau c\u1ee7a ch\u00fang ta l\u00e0 t\u00ednh \\(f(n, 0)\\). T\u1ea5t nhi\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a h\u00e0m \\(f\\) l\u00e0 qu\u00e1 l\u1edbn.</p> <p>B\u00e2y gi\u1edd, g\u1ecdi \\(f(n, h, h_0)\\) l\u00e0 s\u1ed1 d\u00e3y \u0111\u1ed9 d\u00e0i \\(n\\) b\u1eaft \u0111\u1ea7u t\u1eeb t\u1ed5ng \\(h\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i t\u1ed5ng \\(h_0\\).</p> <p>X\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>N\u1ebfu \\(n = 0\\): tr\u1ea3 v\u1ec1 1 n\u1ebfu \\(h=h_0\\), tr\u1ea3 v\u1ec1 0 n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i.</li> <li>N\u1ebfu \\(n = 2 \\times k\\): \\(f(2 \\times k, h, h_0) = \\sum{f(k, h, i) \\times f(k, i, h_0)}\\) v\u1edbi m\u1ecdi \\(i\\) trong kho\u1ea3ng \\([0, L]\\).</li> <li>N\u1ebfu \\(n = 2 \\times k + 1\\): \\(f(2 \\times k+1, h, h_0) = f(2 \\times k, h-1, h_0) + f(2 \\times k, h+1, h_0)\\).</li> </ul> <p>Ngo\u00e0i ra, ch\u00fa \u00fd \u0111\u1ebfn tr\u01b0\u1eddng h\u1ee3p sau: n\u1ebfu \\(h&lt;0\\) ho\u1eb7c \\(h&gt;L\\) th\u00ec tr\u1ea3 v\u1ec1 0.</p> <p>M\u1ee5c ti\u00eau c\u1ee7a ta l\u00e0 t\u00ednh \\(f(n, 0, 0)\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 \\(\\mathcal{O}(L^3 log n)\\), nhanh b\u1eb1ng v\u1edbi nh\u00e2n ma tr\u1eadn. Ch\u00fa \u00fd r\u1eb1ng ta ch\u1ec9 c\u00f3 \\(\\mathcal{O}(L^2 log n)\\) tr\u1ea1ng th\u00e1i, kh\u00f4ng ph\u1ea3i l\u00e0 \\(\\mathcal{O}(L^2 n)\\). Ch\u1eb3ng h\u1ea1n khi \\(n=100\\), c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a \\(n\\) s\u1ebd n\u1eb1m trong t\u1eadp sau: \\({100, 50, 25, 24, 12, 6, 3, 2, 1, 0}\\). Th\u1ebf n\u00ean \\(n\\) ch\u1ec9 nh\u1eadn kho\u1ea3ng \\(2*log n\\) gi\u00e1 tr\u1ecb trong t\u1eadp h\u1ee3p \u0111\u00f3. Ta c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ed9 s\u00e2u c\u1ee7a h\u00e0m \\(f\\) \u0111\u1ec3 \u0111\u1ea1i di\u1ec7n cho \\(n\\).</p> <pre><code>function f(n, h, h_0, Depth):\n    if h &lt; 0 or h &gt; L:\n      return 0\n    if n == 0:\n      return (h==h_0 ? 1 : 0)\n\n    if Saved[h][h_0][Depth]:\n      return Value[h][h_0][Depth]\n\n    if n is even:\n        Result = 0\n        for i in 0..L:\n          Result += f(n/2, h, i, Depth+1) * f(n/2, i, h_0, Depth+1)\n    else:\n        Result = f(n-1, h-1, h_0, Depth+1) + f(n-1, h+1, h_0, Depth+1)\n\n    Saved[h][h_0][Depth] = true\n    Value[h][h_0][Depth] = Result\n\ninput n, L\noutput f(n, 0, 0, 0)\n</code></pre>"},{"location":"algo/trick/counting-without-matrix-multiplication/#tong-quat","title":"T\u1ed5ng qu\u00e1t","text":"<p>V\u1edbi tr\u01b0\u1eddng h\u1ee3p \\(f(n, [a,b,c,...])\\) \u0111\u01b0\u1ee3c t\u00ednh t\u1eeb \\(f(n-1, [a,b,c,...])\\)</p> <p>C\u00f3 \\(t\\) lo\u1ea1i hoa \\((t \\ge 4)\\). 4 trong \\(t\\) lo\u1ea1i hoa n\u00e0y l\u00e0 <code>g</code> (gerbera), <code>o</code> (orchid), <code>a</code> (azalea) v\u00e0 <code>h</code> (hydrangea). Ta d\u00f9ng c\u00e1c lo\u1ea1i hoa n\u00e0y \u0111\u1ec3 t\u1ea1o m\u1ed9t d\u00e3y \\(n\\) ch\u1eadu hoa \\((n \\le 10^9)\\). C\u00f3 v\u00e0i \u0111i\u1ec1u ki\u1ec7n \u0111\u01b0\u1ee3c \u0111\u1eb7t ra nh\u01b0 sau:</p> <ul> <li>M\u1ed9t ch\u1eadu <code>h</code> ph\u1ea3i \u0111\u01b0\u1ee3c \u0111\u1eb7t gi\u1eefa m\u1ed9t <code>a</code> v\u00e0 m\u1ed9t <code>o</code></li> <li>Gi\u1eefa hai ch\u1eadu <code>g</code> b\u1ea5t k\u00ec, ph\u1ea3i c\u00f3 \u00edt nh\u1ea5t \\(p\\) ch\u1eadu hoa lo\u1ea1i kh\u00e1c \\((p \\le 20)\\).</li> </ul> <p>Gi\u1ea3 s\u1eed c\u00f3 5 lo\u1ea1i hoa (\\(t=5\\)): <code>a</code>, <code>h</code>, <code>o</code>, <code>g</code>, v\u00e0 <code>b</code> (begonias).</p> <p>V\u1edbi \\(n=6\\), c\u00f3 2906 d\u00e3y ch\u1eadu \u0111\u00fang, 5 trong s\u1ed1 \u0111\u00f3 l\u00e0 <code>aoaaoo</code>, <code>ahohag</code>, <code>gbbbgo</code>, <code>gbbbog</code>, <code>bbbbbb</code>.</p> <p>Nh\u1eefng d\u00e3y sau \u0111\u00e2y kh\u00f4ng h\u1ee3p l\u1ec7: <code>ohoaha</code> (\u0111o\u1ea1n <code>aha</code> kh\u00f4ng h\u1ee3p l\u1ec7 v\u00ec b\u00ean c\u1ea1nh <code>h</code> ph\u1ea3i c\u00f3 m\u1ed9t <code>o</code> v\u00e0 m\u1ed9t <code>a</code>), <code>gogbao</code> (gi\u1eefa hai <code>g</code> ph\u1ea3i c\u00f3 \u00edt nh\u1ea5t 3 hoa kh\u00e1c), <code>ahoaha</code> (ch\u1eadu <code>h</code> cu\u1ed1i c\u00f9ng kh\u00f4ng k\u1ec1 v\u1edbi m\u1ed9t <code>a</code> v\u00e0 m\u1ed9t <code>o</code>).</p> <p>Kh\u00f4ng kh\u00f3 l\u1eafm \u0111\u1ec3 t\u00ecm ra c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng: \\(f(n, x, Just)\\) tr\u1ea3 v\u1ec1 s\u1ed1 d\u00e3y ch\u1eadu \u0111\u00fang. Tr\u1ea1ng th\u00e1i \\(n\\), \\(x\\), \\(Just\\) \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 nh\u01b0 sau:</p> <ul> <li>\\(n\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u00f2n l\u1ea1i ph\u1ea3i x\u00e2y d\u1ef1ng c\u1ee7a d\u00e3y \u0111ang x\u00e2y d\u1ef1ng.</li> <li>\\(x\\) l\u00e0 s\u1ed1 ch\u1eadu hoa ta v\u1eeba \u0111\u1eb7t m\u00e0 kh\u00e1c <code>g</code>, n\u00f3i c\u00e1ch kh\u00e1c t\u1ea5t c\u1ea3 c\u00e1c ch\u1eadu hoa trong kho\u1ea3ng \\(n+1\\) \u0111\u1ebfn \\(n+x\\) kh\u00f4ng ph\u1ea3i l\u00e0 <code>g</code>.</li> <li>\\(Just\\) \u0111\u1ea1i di\u1ec7n cho ch\u1eadu hoa v\u1eeba \u0111\u1eb7t (t\u1ee9c l\u00e0 ch\u1eadu \\(n+1\\)). \\(Just=1\\) ngh\u0129a l\u00e0 <code>a</code> ho\u1eb7c <code>o</code>, \\(Just=2\\) ngh\u0129a l\u00e0 <code>h</code>, \\(Just=0\\) ngh\u0129a l\u00e0 c\u00e1c lo\u1ea1i hoa c\u00f2n l\u1ea1i (bao g\u1ed3m <code>g</code> v\u00e0 \\(t-4\\) lo\u1ea1i hoa kh\u00e1c).</li> </ul> <p>H\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean c\u00f3 th\u1ec3 ch\u1ea1y v\u1edbi \\(n \\le 10,000\\).</p> <p>B\u00e2y gi\u1edd t\u00f4i s\u1ebd n\u00f3i c\u00e1ch gi\u1ea3i \u0111\u00fang. G\u1ecdi \\(f(n, p, Just, p_0, Just_0)\\) ngh\u0129a l\u00e0: ta xu\u1ea5t ph\u00e1t t\u1eeb tr\u1ea1ng th\u00e1i \\((n, p, Just)\\), c\u00f3 bao nhi\u00eau c\u00e1ch \u0111i \u0111\u1ebfn tr\u1ea1ng th\u00e1i \\((0, p_0, Just_0)\\).</p> <pre><code>long f(int n, int x, int Just) {\n    if (x&gt;=p) x=p;\n    if (Just==2) {\n        if (n==0) return 0;\n        return f(n-1, x+1, 1);\n    } else {\n        if (n==0) return 1;\n        if (F[x][Just].count(n)) return F[x][Just][n];\n        long Sum = f(n-1, x+1, 1) * 2;\n        if (Just==1) Sum += f(n-1, x+1, 2);\n        if (x&gt;=p) Sum += f(n-1, 0, 0);\n        Sum += f(n-1, x+1, 0) * (t-4);\n        return F[x][Just][n] = Sum % M;\n    }\n}\n\ncout &lt;&lt; f(n, ::p, 0) &lt;&lt; endl;\n</code></pre> <p>Ta c\u00f3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>N\u1ebfu \\(n=0\\) ho\u1eb7c \\(n=2 \\times k+1\\), ta vi\u1ebft nh\u01b0 h\u00e0m \\(f\\) c\u0169. N\u1ebfu \\(n \\ne 0\\), n\u00f3 s\u1ebd g\u1ecdi \u0111\u1ebfn m\u1ed9t tr\u1ea1ng th\u00e1i kh\u00e1c m\u00e0 l\u00fac n\u00e0y \\(n\\) ch\u1eb5n.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, \\(n=2 \\times k\\), \\(f(2 \\times k, p, Just, p_0, Just_0) = \\sum{f(k, p, Just, i, j) \\times f(k, i, j, p_0, Just_0)}\\) v\u1edbi t\u1ea5t c\u1ea3 b\u1ed9 \\(i\\), \\(j\\) h\u1ee3p l\u1ec7 (t\u1ee9c l\u00e0 \\(i\\) n\u1eb1m trong kho\u1ea3ng [0, p], \\(j\\) n\u1eb1m trong kho\u1ea3ng \\([0, 2]\\)).</li> </ul> <p>Ch\u00fa \u00fd t\u1ea1i tr\u01b0\u1eddng h\u1ee3p \\(n=0\\), vi\u1ec7c \\(n=0\\) kh\u00f4ng c\u00f3 ngh\u0129a \u0111\u00f3 l\u00e0 k\u1ebft th\u00fac c\u1ee7a m\u1ed9t d\u00e3y. V\u00ec ta chia d\u00e3y th\u00e0nh c\u00e1c ph\u1ea7n nh\u1ecf h\u01a1n, \\(n=0\\) ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0 k\u1ebft th\u00fac c\u1ee7a m\u1ed9t ph\u1ea7n nh\u1ecf. V\u00ec th\u1ebf ta s\u1ebd th\u00eam m\u1ed9t bi\u1ebfn \\(Stop\\) thu\u1ed9c ki\u1ec3u boolean. Khi \\(Stop=true\\), \\(f(n,p,Just,p_0,Just_0) = f(n,p,Just)\\), ng\u01b0\u1ee3c l\u1ea1i, t\u1ee9c l\u00e0 \\(Stop=false\\), \\(f(n,p,Just,p_0,Just_0,Stop) = f(n,p,Just,p_0,Just_0)\\).</p> <pre><code>map&lt;int, int&gt; G[21][3][21][3][2];\n## define C p][Just][p0][Just0][Stop\n\nlong g(int n, int p, int Just, int p0, int Just0, bool Stop) {\n    if (p&gt;=::p) p=::p;\n    if (n%2==1 || n==0) {\n        if (Just==2) {\n            if (n==0) return Stop ? 0 : p==p0 &amp;&amp; Just==Just0;\n            return g(n-1, p+1, 1, p0, Just0, Stop);\n        } else {\n            if (n==0) return Stop ? 1 : p==p0 &amp;&amp; Just==Just0;\n            if (G[C].count(n)) return G[C][n];\n            long Sum = g(n-1, p+1, 1, p0, Just0, Stop) * 2;\n            if (Just==1) Sum += g(n-1, p+1, 2, p0, Just0, Stop);\n            if (p&gt;=::p) Sum += g(n-1, 0, 0, p0, Just0, Stop);\n            Sum += g(n-1, p+1, 0, p0, Just0, Stop) * (t-4);\n            return G[C][n] = Sum % M;\n        }\n    } else {\n        if (G[C].count(n)) return G[C][n];\n        long Sum = 0;\n        for (int i=0; i&lt;=::p; i++)\n        for (int k=0; k&lt;=2; k++) {\n            long G1 = g(n/2, p, Just, i, k, false);\n             long G2 = g(n/2, i, k, p0, Just0, Stop);\n            Sum += G1*G2;\n        }\n        return G[C][n] = Sum % M;\n     }\n}\n\ncout &lt;&lt; g(n, ::p, 0, rand()%21, rand()%3, true) &lt;&lt; endl;\n</code></pre> <p>Ch\u00fa \u00fd \u1edf code tr\u00ean, <code>::p</code> v\u00e0 <code>p</code> l\u00e0 kh\u00e1c nhau. <code>::p</code> l\u00e0 bi\u1ebfn <code>p</code> to\u00e0n c\u1ee5c, t\u1ee9c l\u00e0 <code>p</code> \u0111\u01b0\u1ee3c nh\u1eadp t\u1eeb input. C\u00f2n <code>p</code> l\u00e0 tham s\u1ed1 \u1edf trong h\u00e0m <code>g</code>. <code>Rand()%21</code> v\u00e0 <code>rand()%3</code> l\u00e0 hai s\u1ed1 m\u00e0 ta c\u00f3 th\u1ec3 b\u1ecf qua gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang (khi n\u00e0o m\u00e0 <code>Stop=true</code> th\u00ec <code>p0</code> v\u00e0 <code>Just0</code> kh\u00f4ng c\u00f3 \u00fd ngh\u0129a).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p \u1edf code tr\u00ean l\u00e0 \\(\\mathcal{O}(p^3 log^2 n)\\). Th\u1ef1c t\u1ebf, ta c\u00f3 th\u1ec3 kh\u00f4ng d\u00f9ng <code>map</code>, b\u1eb1ng c\u00e1ch th\u00eam m\u1ed9t tham s\u1ed1 l\u00e0 <code>Depth</code> \u0111\u1ea1i di\u1ec7n cho \u0111\u1ed9 s\u00e2u c\u1ee7a h\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng. Khi \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ea5t \u0111i m\u1ed9t th\u1eeba s\u1ed1 \\(log n\\), gi\u1ea3m xu\u1ed1ng c\u00f2n \\(\\mathcal{O}(p^3 log n)\\). Code tr\u00ean t\u00f4i d\u00f9ng <code>map</code> cho n\u00f3 d\u1ec5 hi\u1ec3u.</p>"},{"location":"algo/trick/counting-without-matrix-multiplication/#fn-fn-1-fn-2","title":"\\(f(n) = f(n-1) + f(n-2)\\)","text":"<p>B\u00e2y gi\u1edd, ch\u00fang ta s\u1ebd t\u00ednh s\u1ed1 fibonacci th\u1ee9 \\(10^9\\) (trong m\u1ed9t modulo n\u00e0o \u0111\u00f3). Ch\u1eafc h\u1eb3n l\u00e0 b\u1ea1n \u0111\u00e3 bi\u1ebft c\u00e1ch d\u00f9ng nh\u00e2n ma tr\u1eadn, n\u00f3 kh\u00e1 d\u1ec5. Tuy nhi\u00ean, b\u00e2y gi\u1edd ch\u00fang ta s\u1ebd th\u1eed gi\u1ea3i b\u1eb1ng c\u00e1ch kh\u00f4ng d\u00f9ng nh\u00e2n ma tr\u1eadn. Xem b\u00e0i to\u00e1n sau:</p> <p>B\u1ea1n \u0111ang \u0111\u1ee9ng \u1edf \u0111i\u1ec3m \\(n\\) tr\u00ean tr\u1ee5c Ox. M\u1ed7i b\u01b0\u1edbc, b\u1ea1n c\u00f3 th\u1ec3 di chuy\u1ec3n sang tr\u00e1i 1 ho\u1eb7c 2 b\u01b0\u1edbc. C\u00f3 bao nhi\u00eau c\u00e1ch \u0111\u1ec3 b\u1ea1n \u0111i t\u1edbi v\u1ecb tr\u00ed 0?</p> <p>Kh\u00f4ng kh\u00f3 \u0111\u1ec3 nh\u1eadn ra \\(f(n) = f(n-1) + f(n-2)\\), trong \u0111\u00f3 \\(f(0)=1\\) v\u00e0 \\(f(1)=1\\). Th\u1ebf n\u00ean, \\(f(n)\\) l\u00e0 s\u1ed1 fibonacci th\u1ee9 \\(n+1\\).</p> <p>C\u00f3 hai tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>\\(n=2 \\times k\\), ta c\u00f3 hai l\u1ef1a ch\u1ecdn:</li> <li>L\u1ef1a ch\u1ecdn th\u1ee9 nh\u1ea5t l\u00e0 nh\u1ea3y t\u1eeb \\(2 \\times k\\) \u0111\u1ebfn \\(k\\) r\u1ed3i nh\u1ea3y t\u1eeb \\(k\\) \u0111\u1ebfn 0.</li> <li> <p>L\u1ef1a chon th\u1ee9 hai l\u00e0 nh\u1ea3y t\u1eeb \\(2 \\times k\\) \u0111\u1ebfn \\(k+1\\), sau \u0111\u00f3 di chuy\u1ec3n sang tr\u00e1i 2 b\u01b0\u1edbc, t\u1ee9c l\u00e0 t\u1eeb \\(k+1\\) \u0111\u1ebfn \\(k-1\\), r\u1ed3i nh\u1ea3y t\u1eeb \\(k-1\\) \u0111\u1ebfn 0 (ch\u00fa \u00fd ta kh\u00f4ng h\u1ec1 nh\u1ea3y v\u00e0o \u00f4 th\u1ee9 \\(k\\)).   Th\u1ebf n\u00ean, \\(f(2 \\times k) = f(k) \\times f(k) + f(k-1) \\times f(k-1)\\).</p> </li> <li> <p>\\(n=2 \\times k+1\\), b\u00e2y gi\u1edd ta chia d\u00e3y th\u00e0nh hai \u0111o\u1ea1n \\(0..k\\) v\u00e0 \\(k..n\\) (\u0111o\u1ea1n th\u1ee9 nh\u1ea5t \u0111\u1ed9 d\u00e0i \\(k+1\\), \u0111o\u1ea1n th\u1ee9 hai d\u00e0i \\(k\\)), ta l\u1ea1i c\u00f3 hai l\u1ef1a ch\u1ecdn:</p> </li> <li>L\u1ef1a ch\u1ecdn th\u1ee9 nh\u1ea5t l\u00e0 nh\u1ea3y t\u1eeb \\(n\\) \u0111\u1ebfn \\(k\\) r\u1ed3i nh\u1ea3y t\u1eeb \\(k\\) \u0111\u1ebfn 0.</li> <li>L\u1ef1a ch\u1ecdn th\u1ee9 hai l\u00e0 nh\u1ea3y t\u1eeb \\(n\\) \u0111\u1ebfn \\(k+1\\), di chuy\u1ec3n sang tr\u00e1i 2 b\u01b0\u1edbc, r\u1ed3i nh\u1ea3y t\u1eeb \\(k-1\\) \u0111\u1ebfn 0. Th\u1ebf n\u00ean \\(f(2 \\times k+1) = f(k) \\times f(k+1) + f(k-1) \\times f(k)\\).</li> </ul> <p>L\u00fac n\u00e0y \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(log n)\\). B\u1edfi v\u00ec v\u1edbi m\u1ed7i \u0111\u1ed9 s\u00e2u, ch\u1ec9 c\u00f3 t\u1ed1i \u0111a 4 gi\u00e1 tr\u1ecb \\(n\\).</p> <pre><code>map&lt;long, long&gt; F;\nF[0]=F[1]=1;\n\nlong f(long n) {\n     if (F.count(n)) return F[n];\n     long k=n/2;\n     if (n%2==0) { // n=2*k\n         return F[n] = (f(k) * f(k) + f(k-1) * f(k-1)) % M;\n     } else { // n=2*k+1\n         return F[n] = (f(k) * f(k+1) + f(k-1) * f(k)) % M;\n     }\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/","title":"Nh\u00e2n ma tr\u1eadn (Matrix multiplication)","text":"<p>Ngu\u1ed3n: Bi\u00ean so\u1ea1n l\u1ea1i t\u1eeb b\u00e0i vi\u1ebft c\u1ee7a Nguy\u1ec5n RR Th\u00e0nh Trung, Nguy\u1ec5n M\u1ea1nh Qu\u00e2n.</p> <p>T\u00e1c gi\u1ea3: </p> <ul> <li>Nguy\u1ec5n Ch\u00e2u Khanh - VNU University of Engineering and Technology (VNU-UET)</li> <li>B\u00f9i Minh Ho\u1ea1t - VNU University of Engineering and Technology (VNU-UET)</li> </ul> <p>Reviewer: </p> <ul> <li>Tr\u1ea7n Quang L\u1ed9c - ITMO University</li> <li>H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - VNUHCM-University of Science</li> <li>Tr\u1ea7n Xu\u00e2n B\u00e1ch - HUS High School for Gifted Students</li> <li>Nguy\u1ec5n Ph\u00fa B\u00ecnh - Hung Vuong High School for the Gifted, Binh Duong Province</li> </ul>"},{"location":"algo/trick/matrix-multiplication/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"<p>Th\u00f4ng th\u01b0\u1eddng, \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n nh\u01b0 mong mu\u1ed1n, c\u00e1ch l\u00e0m th\u01b0\u1eddng l\u00e0 t\u00ecm ra m\u1ed9t thu\u1eadt to\u00e1n ban \u0111\u1ea7u l\u00e0m c\u01a1 s\u1edf, r\u1ed3i t\u1eeb \u0111\u00f3 d\u00f9ng c\u00e1c k\u1ef9 n\u0103ng \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n. Trong b\u00e0i vi\u1ebft n\u00e0y, t\u00f4i xin gi\u1edbi thi\u1ec7u v\u1edbi b\u1ea1n \u0111\u1ecdc m\u1ed9t k\u1ef9 n\u0103ng kh\u00e1 th\u00f4ng d\u1ee5ng: Nh\u00e2n ma tr\u1eadn.</p>"},{"location":"algo/trick/matrix-multiplication/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Tham kh\u1ea3o: Ma tr\u1eadn_wikipedia</p>"},{"location":"algo/trick/matrix-multiplication/#ma-tran","title":"Ma tr\u1eadn","text":"<p>Ma tr\u1eadn l\u00e0 m\u1ed9t m\u1ea3ng ch\u1eef nh\u1eadt g\u1ed3m c\u00e1c s\u1ed1, k\u00fd hi\u1ec7u, ho\u1eb7c bi\u1ec3u th\u1ee9c, s\u1eafp x\u1ebfp theo h\u00e0ng v\u00e0 c\u1ed9t m\u00e0 m\u1ed7i ma tr\u1eadn tu\u00e2n theo nh\u1eefng quy t\u1eafc \u0111\u1ecbnh tr\u01b0\u1edbc.  C\u00e1c \u00f4 trong ma tr\u1eadn \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a ma tr\u1eadn. C\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng \\(2\\) \u0111\u1ecba ch\u1ec9 h\u00e0ng \\(i\\) v\u00e0 c\u1ed9t \\(j\\) t\u01b0\u01a1ng \u1ee9ng (K\u00ed hi\u1ec7u l\u00e0 \\(a_{ij}\\)).</p> <p>Ma tr\u1eadn th\u01b0\u1eddng \u0111\u01b0\u1ee3c vi\u1ebft trong d\u1ea5u ngo\u1eb7c vu\u00f4ng: </p> \\[\\begin{bmatrix} a_{11} &amp; a_{12} &amp; ... &amp; a_{1n} \\newline a_{21} &amp; a_{22} &amp; ... &amp; a_{2n} \\newline \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\newline a_{m1} &amp; a_{m2} &amp; ... &amp; a_{mn} \\end{bmatrix}\\] <p>\u0110\u1ed9 l\u1edbn hay k\u00edch th\u01b0\u1edbc c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng s\u1ed1 l\u01b0\u1ee3ng h\u00e0ng v\u00e0 c\u1ed9t. M\u1ed9t ma tr\u1eadn \\(m\\) h\u00e0ng v\u00e0 \\(n\\) c\u1ed9t \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ma tr\u1eadn \\((m \\times n)\\), trong khi \\(m\\) v\u00e0 \\(n\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 chi\u1ec1u c\u1ee7a n\u00f3. </p> <ul> <li> <p>V\u00ed d\u1ee5: Ma tr\u1eadn \\(A\\) l\u00e0 ma tr\u1eadn \\((3 \\times 2)\\)</p> <p>\\(A = \\begin{bmatrix} 1 &amp; 2 \\newline 5 &amp; 7 \\newline 6 &amp; 3 \\end{bmatrix}\\)</p> </li> </ul>"},{"location":"algo/trick/matrix-multiplication/#ma-tran-vuong","title":"Ma tr\u1eadn vu\u00f4ng","text":"<p>Ma tr\u1eadn vu\u00f4ng l\u00e0 ma tr\u1eadn c\u00f3 s\u1ed1 h\u00e0ng v\u00e0 s\u1ed1 c\u1ed9t b\u1eb1ng nhau. Ma tr\u1eadn \\((n \\times n)\\) c\u00f2n g\u1ecdi l\u00e0 ma tr\u1eadn vu\u00f4ng c\u1ea5p \\(n\\). C\u00e1c ph\u1ea7n t\u1eed \\(a_{ii}\\) t\u1ea1o th\u00e0nh \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh c\u1ee7a ma tr\u1eadn vu\u00f4ng.</p> <ul> <li> <p>V\u00ed d\u1ee5: Ma tr\u1eadn vu\u00f4ng c\u1ea5p \\(3\\) (s\u1ed1 h\u00e0ng v\u00e0 s\u1ed1 c\u1ed9t b\u1eb1ng \\(3\\))</p> \\[\\begin{bmatrix} 1 &amp; 2 &amp; 0 \\newline 3 &amp; 0 &amp; 1 \\newline 2 &amp; 3 &amp; 1 \\end{bmatrix}\\] </li> </ul>"},{"location":"algo/trick/matrix-multiplication/#ma-tran-on-vi-identity-matrix","title":"Ma tr\u1eadn \u0111\u01a1n v\u1ecb (Identity Matrix)","text":"<p>Ma tr\u1eadn \u0111\u01a1n v\u1ecb \\(I_n\\) c\u1ea5p \\(n\\) l\u00e0 m\u1ed9t ma tr\u1eadn \\((n \\times n)\\) trong \u0111\u00f3 m\u1ecdi ph\u1ea7n t\u1eed tr\u00ean \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh b\u1eb1ng \\(1\\) v\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng ph\u1ea7n t\u1eed kh\u00e1c \u0111\u1ec1u b\u1eb1ng \\(0\\). Ma tr\u1eadn \u0111\u01a1n v\u1ecb c\u1ea5p \\(n\\) c\u0169ng ch\u00ednh l\u00e0 ma tr\u1eadn vu\u00f4ng c\u1ea5p \\(n\\).</p> <ul> <li> <p>V\u00ed d\u1ee5</p> <p>\\(I_1 = \\begin{bmatrix} 1 \\end{bmatrix}\\)</p> <p>\\(I_2 = \\begin{bmatrix} 1 &amp; 0 \\newline 0 &amp; 1 \\end{bmatrix}\\)</p> <p>...</p> <p>\\(I_n = \\begin{bmatrix} 1 &amp; 0 &amp; ... &amp; 0 \\newline 0 &amp; 1 &amp; ... &amp; 0 \\newline \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\newline 0 &amp; 0 &amp; ... &amp; 1 \\end{bmatrix}\\)</p> </li> </ul>"},{"location":"algo/trick/matrix-multiplication/#vector-hang-va-vector-cot","title":"Vector h\u00e0ng v\u00e0 vector c\u1ed9t","text":"<p>Vector h\u00e0ng hay ma tr\u1eadn h\u00e0ng l\u00e0 m\u1ed9t ma tr\u1eadn \\((1 \\times n)\\), t\u1ee9c l\u00e0 ma tr\u1eadn ch\u1ec9 g\u1ed3m m\u1ed9t m\u1ed9t h\u00e0ng \u0111\u01a1n g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed.</p> <p>\\(\\mathbf{a} = \\begin{bmatrix} a_1 &amp; a_2 &amp; ... &amp; a_n \\end{bmatrix}\\)</p> <p>Vector c\u1ed9t hay ma tr\u1eadn c\u1ed9t l\u00e0 m\u1ed9t ma tr\u1eadn \\((m \\times 1)\\), t\u1ee9c l\u00e0 ma tr\u1eadn ch\u1ec9 g\u1ed3m m\u1ed9t c\u1ed9t \u0111\u01a1n g\u1ed3m \\(m\\) ph\u1ea7n t\u1eed.</p> <p>\\(\\mathbf{b} = \\begin{bmatrix} b_1 \\newline b_2 \\newline \\vdots \\newline b_m \\end{bmatrix}\\)</p> <p>Ta \u0111\u1ecbnh ngh\u0129a t\u00edch c\u1ee7a vector h\u00e0ng \\(\\mathbf{a}\\) \\((1 \\times n)\\) v\u1edbi vector c\u1ed9t \\(\\mathbf{b}\\) \\((n \\times 1)\\) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi t\u00edch v\u00f4 h\u01b0\u1edbng c\u1ee7a hai vector \\(\\mathbf{a}\\) v\u00e0 \\(\\mathbf{b}\\).</p> <p>\\(\\mathbf{a} \\cdot \\mathbf{b} = \\begin{bmatrix} a_1 &amp; a_2 &amp; ... &amp; a_n \\end{bmatrix} \\begin{bmatrix} b_1 \\newline b_2 \\newline \\vdots \\newline b_n \\end{bmatrix} = \\displaystyle\\sum_{i = 1}^{n} a_{i} b_{i} = a_1b_1+a_2b_2+...+a_nb_n\\)</p> <p>Tham kh\u1ea3o: Vector h\u00e0ng v\u00e0 c\u1ed9t</p>"},{"location":"algo/trick/matrix-multiplication/#phep-nhan-ma-tran","title":"Ph\u00e9p nh\u00e2n ma tr\u1eadn","text":"<p>Ph\u00e9p nh\u00e2n hai ma tr\u1eadn ch\u1ec9 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c khi s\u1ed1 l\u01b0\u1ee3ng c\u1ed9t trong ma tr\u1eadn th\u1ee9 nh\u1ea5t ph\u1ea3i b\u1eb1ng s\u1ed1 l\u01b0\u1ee3ng h\u00e0ng trong ma tr\u1eadn th\u1ee9 hai. Ma tr\u1eadn k\u1ebft qu\u1ea3, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 t\u00edch ma tr\u1eadn, c\u00f3 s\u1ed1 l\u01b0\u1ee3ng h\u00e0ng c\u1ee7a ma tr\u1eadn \u0111\u1ea7u ti\u00ean v\u00e0 s\u1ed1 c\u1ed9t c\u1ee7a ma tr\u1eadn th\u1ee9 hai. </p> <p>N\u1ebfu ma tr\u1eadn \\(A\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\((m \\times n)\\) v\u00e0 ma tr\u1eadn \\(B\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\((n \\times p)\\), th\u00ec ma tr\u1eadn t\u00edch \\(C = A \\times B\\) c\u00f3 k\u00edch th\u01b0\u1edbc \\((m \\times p)\\), ph\u1ea7n t\u1eed \u0111\u1ee9ng \u1edf h\u00e0ng th\u1ee9 \\(i\\), c\u1ed9t th\u1ee9 \\(j\\) x\u00e1c \u0111\u1ecbnh b\u1edfi c\u00f4ng th\u1ee9c:</p> <p>\\(C_{ij} = A_{i1} B_{1j} + A_{i2} B_{2j} + ... + A_{in} B_{nj} = \\displaystyle\\sum_{k = 1}^{n} A_{ik} B_{kj}\\) (V\u1edbi \\(1 \\le i \\le m; 1 \\le j \\le p\\))</p> <p>Hay vi\u1ebft \\(C_{ij} = \\begin{bmatrix} a_{i1} &amp; a_{i2} &amp; ... &amp; a_{in} \\end{bmatrix} \\begin{bmatrix} b_{1j} \\newline b_{2j} \\newline \\vdots \\newline b_{nj} \\end{bmatrix}\\), t\u1ee9c l\u00e0 ph\u1ea7n t\u1eed \u1edf h\u00e0ng th\u1ee9 \\(i\\), c\u1ed9t th\u1ee9 \\(j\\) c\u1ee7a \\(C\\) l\u00e0 t\u00edch c\u1ee7a vector h\u00e0ng th\u1ee9 \\(i\\) c\u1ee7a ma tr\u1eadn \\(A\\) v\u1edbi vector c\u1ed9t th\u1ee9 \\(j\\) c\u1ee7a ma tr\u1eadn \\(B\\).</p> <ul> <li>Minh h\u1ecda t\u00edch ma tr\u1eadn \\(AB\\) c\u1ee7a hai ma tr\u1eadn \\(A\\) v\u00e0 \\(B\\): </li> </ul> <p></p> <ul> <li> <p>V\u00ed d\u1ee5: Cho \\(2\\) ma tr\u1eadn</p> <p>\\(A = \\begin{bmatrix} 2 &amp; 3 &amp; 4 \\newline 1 &amp; 0 &amp; 0 \\end{bmatrix}\\) v\u00e0 \\(B = \\begin{bmatrix} 0 &amp; 1000 \\newline 1 &amp; 100 \\newline 0 &amp; 10 \\end{bmatrix}\\)</p> <p>Ph\u1ea7n t\u1eed \\(C_{12}\\) c\u1ee7a ma tr\u1eadn t\u00edch \\(AB\\) l\u00e0 t\u00edch c\u1ee7a vector h\u00e0ng th\u1ee9 nh\u1ea5t c\u1ee7a \\(A\\) v\u00e0 vector c\u1ed9t th\u1ee9 hai c\u1ee7a \\(B\\), ta c\u00f3:</p> <p>\\(C_{12} = \\displaystyle\\sum_{k = 1}^{3} A_{1k} B_{k2} = \\begin{bmatrix} 2 &amp; 3 &amp; 4 \\end{bmatrix} \\begin{bmatrix} 1000 \\newline 100 \\newline 10 \\end{bmatrix} = 2 \\times 1000 + 3 \\times 100 + 4 \\times 10= 2340\\)</p> <p>T\u00ednh t\u01b0\u01a1ng t\u1ef1 v\u1edbi t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i c\u1ee7a ma tr\u1eadn t\u00edch \\(C\\). Ta \u0111\u01b0\u1ee3c ma tr\u1eadn t\u00edch \\(AB\\) c\u00f3 d\u1ea1ng:</p> <p>\\(C = A \\times B = \\begin{bmatrix} 2 &amp; 3 &amp; 4 \\newline 1 &amp; 0 &amp; 0 \\end{bmatrix} \\begin{bmatrix} 0 &amp; 1000 \\newline 1 &amp; 100 \\newline 0 &amp; 10 \\end{bmatrix} = \\begin{bmatrix} 3 &amp; 2340 \\newline 0 &amp; 1000 \\end{bmatrix}\\)</p> <p>M\u00f4 t\u1ea3 qu\u00e1 tr\u00ecnh nh\u00e2n ma tr\u1eadn:</p> </li> </ul> <p></p>"},{"location":"algo/trick/matrix-multiplication/#tinh-chat-cua-phep-nhan-ma-tran","title":"T\u00ednh ch\u1ea5t c\u1ee7a ph\u00e9p nh\u00e2n ma tr\u1eadn","text":"<ul> <li>T\u00ednh ch\u1ea5t k\u1ebft h\u1ee3p: \\((AB)C = A(BC)\\).</li> <li>T\u00ednh ch\u1ea5t ph\u00e2n ph\u1ed1i: \\((A+B)C = AC+BC\\), c\u0169ng nh\u01b0 \\(C(A+B) = CA+CB\\). </li> <li>Ph\u00e9p nh\u00e2n ma tr\u1eadn kh\u00f4ng c\u00f3 t\u00ednh ch\u1ea5t giao ho\u00e1n: T\u00edch \\(AB\\) c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh trong khi \\(BA\\) kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i x\u00e1c \u0111\u1ecbnh, t\u1ee9c l\u00e0 n\u1ebfu \\(A\\) v\u00e0 \\(B\\) l\u1ea7n l\u01b0\u1ee3t c\u00f3 s\u1ed1 chi\u1ec1u \\((m \\times n)\\) v\u00e0 \\((n \\times p)\\), v\u00e0 \\(m \\neq p\\). Th\u1eadm ch\u00ed khi c\u1ea3 hai t\u00edch n\u00e0y \u0111\u1ec1u t\u1ed3n t\u1ea1i th\u00ec ch\u00fang kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i b\u1eb1ng nhau, t\u1ee9c l\u00e0 \\(AB \\neq BA\\).<ul> <li> <p>V\u00ed d\u1ee5:</p> <p>\\(\\begin{bmatrix} 1 &amp; 2 \\newline 3 &amp; 4 \\end{bmatrix} \\begin{bmatrix} 0 &amp; 1 \\newline 0 &amp; 0 \\end{bmatrix} = \\begin{bmatrix} 0 &amp; 1 \\newline 0 &amp; 3 \\end{bmatrix}\\), trong khi \\(\\begin{bmatrix} 0 &amp; 1 \\newline 0 &amp; 0 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 2 \\newline 3 &amp; 4 \\end{bmatrix} = \\begin{bmatrix} 3 &amp; 4 \\newline 0 &amp; 0 \\end{bmatrix}\\).  - Khi th\u1ef1c hi\u1ec7n nh\u00e2n m\u1ed9t ma tr\u1eadn b\u1ea5t k\u00ec v\u1edbi ma tr\u1eadn \u0111\u01a1n v\u1ecb th\u00ec v\u1eabn thu \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 c\u1ee7a ch\u00ednh ma tr\u1eadn \u0111\u00f3, t\u1ee9c l\u00e0: \\(AI_n = I_mA = A\\) (v\u1edbi ma tr\u1eadn \\(A\\) k\u00edch th\u01b0\u1edbc \\((m \\times n)\\) b\u1ea5t k\u1ef3).       C\u0169ng ch\u00ednh v\u00ec t\u00ednh ch\u1ea5t n\u00e0y m\u00e0 \\(I\\) c\u00f3 t\u00ean g\u1ecdi l\u00e0 ma tr\u1eadn \u0111\u01a1n v\u1ecb.</p> </li> </ul> </li> </ul> <p>B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 ph\u00e9p c\u1ed9ng tr\u1eeb ma tr\u1eadn t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/trick/matrix-multiplication/#luy-thua-ma-tran","title":"L\u0169y th\u1eeba ma tr\u1eadn","text":"<p>Cho ma tr\u1eadn vu\u00f4ng \\(A\\) c\u1ea5p \\(n\\). Khi \u0111\u00f3 ta c\u00f3 ph\u00e9p t\u00ednh ma tr\u1eadn \\(A\\) l\u0169y th\u1eeba \\(k\\) (k\u00ed hi\u1ec7u: \\(A^k\\)), v\u1edbi \\(k\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m.</p> <p>\\(A^k = \\underbrace{A \\times A \\times A \\times ... \\times A}_\\text{k}\\)</p> <p>Tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t: V\u1edbi \\(k = 0\\), ma tr\u1eadn \\(A^0\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh l\u00e0 ma tr\u1eadn \u0111\u01a1n v\u1ecb c\u00f3 c\u00f9ng k\u00edch th\u01b0\u1edbc, t\u1ee9c l\u00e0 \\(A^0 = I_n\\).</p> <ul> <li> <p>V\u00ed d\u1ee5: Cho ma tr\u1eadn vu\u00f4ng \\(A\\) c\u1ea5p \\(3\\) </p> <p>\\(A = \\begin{bmatrix} 1 &amp; 2 &amp; 0 \\newline 3 &amp; 0 &amp; 1 \\newline 2 &amp; 3 &amp; 1 \\end{bmatrix}\\)</p> <p>\\(A^0 = I_3 = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\newline 0 &amp; 1 &amp; 0 \\newline 0 &amp; 0 &amp; 1 \\end{bmatrix}\\)</p> <p>\\(A^2 = A \\times A = \\begin{bmatrix} 1 &amp; 2 &amp; 0 \\newline 3 &amp; 0 &amp; 1 \\newline 2 &amp; 3 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 2 &amp; 0 \\newline 3 &amp; 0 &amp; 1 \\newline 2 &amp; 3 &amp; 1 \\end{bmatrix} = \\begin{bmatrix} 7 &amp; 2 &amp; 2 \\newline 5 &amp; 9 &amp; 1 \\newline 13 &amp; 7 &amp; 4 \\end{bmatrix}\\) </p> <p>\\(A^3 = A \\times A \\times A = A^2 \\times A = \\begin{bmatrix} 7 &amp; 2 &amp; 2 \\newline 5 &amp; 9 &amp; 1 \\newline 13 &amp; 7 &amp; 4 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 2 &amp; 0 \\newline 3 &amp; 0 &amp; 1 \\newline 2 &amp; 3 &amp; 1 \\end{bmatrix} = \\begin{bmatrix} 17 &amp; 20 &amp; 4 \\newline 34 &amp; 13 &amp; 10 \\newline 42 &amp; 38 &amp; 11 \\end{bmatrix}\\) </p> </li> </ul> <p>Nh\u1edd t\u00ednh ch\u1ea5t k\u1ebft h\u1ee3p c\u1ee7a ph\u00e9p nh\u00e2n ma tr\u1eadn n\u00ean ta c\u00f3 th\u1ec3 t\u00ednh nhanh l\u0169y th\u1eeba c\u1ee7a ma tr\u1eadn t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1ch t\u00ednh h\u00e0m m\u0169 th\u00f4ng th\u01b0\u1eddng  b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p chia \u0111\u1ec3 tr\u1ecb  (t\u00ednh \\(a^k\\) v\u1edbi \\(a\\) l\u00e0 s\u1ed1 nguy\u00ean). B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u v\u1ec1 c\u00e1ch t\u00ednh h\u00e0m m\u0169 t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/trick/matrix-multiplication/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>L\u01b0u \u00fd: Kh\u00e1c v\u1edbi \u0111\u1ecbnh ngh\u0129a b\u00ean tr\u00ean, trong c\u00e1ch c\u00e0i \u0111\u1eb7t sau, c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nusing type = int; // Ki\u1ec3u d\u1eef li\u1ec7u c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a ma tr\u1eadn \n\nstruct Matrix {\n    vector &lt;vector &lt;type&gt; &gt; data;\n\n    // S\u1ed1 l\u01b0\u1ee3ng h\u00e0ng c\u1ee7a ma tr\u1eadn\n    int row() const { return data.size(); } \n\n    // S\u1ed1 l\u01b0\u1ee3ng h\u00e0ng c\u1ee7a ma tr\u1eadn\n    int col() const { return data[0].size(); }\n\n    auto &amp; operator [] (int i) { return data[i]; }\n\n    const auto &amp; operator[] (int i) const { return data[i]; }\n\n    Matrix() = default;\n\n    Matrix(int r, int c): data(r, vector &lt;type&gt; (c)) { }\n\n    Matrix(const vector &lt;vector &lt;type&gt; &gt; &amp;d): data(d) {\n\n        // Ki\u1ec3m tra c\u00e1c h\u00e0ng c\u00f3 c\u00f9ng size kh\u00f4ng v\u00e0 size c\u00f3 l\u1edbn h\u01a1n 0 hay kh\u00f4ng\n        // Tuy nhi\u00ean kh\u00f4ng th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft, ta c\u00f3 th\u1ec3 b\u1ecf c\u00e1c d\u00f2ng /**/ \u0111i\n        /**/ assert(d.size());\n        /**/ int size = d[0].size();\n        /**/ assert(size);\n        /**/ for (auto x : d) assert(x.size() == size);\n    }\n\n    // In ra ma tr\u1eadn.\n    friend ostream &amp; operator &lt;&lt; (ostream &amp;out, const Matrix &amp;d) {\n        for (auto x : d.data) {\n            for (auto y : x) out &lt;&lt; y &lt;&lt; ' ';\n            out &lt;&lt; '\\n';\n        }\n        return out;\n    }\n\n    // Ma tr\u1eadn \u0111\u01a1n  v\u1ecb\n    static Matrix identity(long long n) {\n        Matrix a = Matrix(n, n);\n        while (n--) a[n][n] = 1;\n        return a;\n    }\n\n    // Nh\u00e2n ma tr\u1eadn\n    Matrix operator * (const Matrix &amp;b) {\n        Matrix a = *this;\n\n        // Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n nh\u00e2n ma tr\u1eadn\n        assert(a.col() == b.row()); \n\n        Matrix c(a.row(), b.col());\n        for (int i = 0; i &lt; a.row(); ++i)\n            for (int j = 0; j &lt; b.col(); ++j)\n                for (int k = 0; k &lt; a.col(); ++k)\n                    c[i][j] += a[i][k] * b[k][j];\n        return c;\n    }\n\n    // L\u0169y th\u1eeba ma tr\u1eadn\n    Matrix pow(long long exp) {\n\n        // Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n l\u0169y th\u1eeba ma tr\u1eadn (l\u00e0 ma tr\u1eadn vu\u00f4ng)\n        assert(row() == col());  \n\n        Matrix base = *this, ans = identity(row());\n        for (; exp &gt; 0; exp &gt;&gt;= 1, base = base * base)\n            if (exp &amp; 1) ans = ans * base;\n        return ans;\n    }\n};\n\nint main(){\n    Matrix a({\n        {1, 2},\n        {3, 4}\n    });\n\n    Matrix b({\n        {0, 10, 100},\n        {1,  1,  10}\n    });\n\n    cout &lt;&lt; a * b &lt;&lt; '\\n';\n    // 2 12 120 \n    // 4 34 340 \n\n    cout &lt;&lt; a.pow(3) &lt;&lt; '\\n';\n    // 37 54 \n    // 81 118\n\n    b = a;\n    cout &lt;&lt; b &lt;&lt; '\\n';\n    // 1 2 \n    // 3 4\n\n    b = Matrix::identity(3);\n    cout &lt;&lt; b &lt;&lt; '\\n';\n    // 1 0 0 \n    // 0 1 0 \n    // 0 0 1\n\n    b = Matrix(2, 3);\n    cout &lt;&lt; b &lt;&lt; '\\n';\n    // 0 0 0 \n    // 0 0 0 \n\n    Matrix c(3, 2);\n    cout &lt;&lt; c &lt;&lt; '\\n';\n    // 0 0 \n    // 0 0 \n    // 0 0\n}\n</code></pre> <p>B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c t\u1ea1i \u0111\u00e2y.</p>"},{"location":"algo/trick/matrix-multiplication/#anh-gia","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ngo\u00e0i c\u00e1ch c\u00e0i \u0111\u1eb7t t\u00ednh l\u0169y th\u1eeba ma tr\u00ean nh\u01b0 tr\u00ean th\u00ec ta c\u00f2n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t theo m\u1ed9t c\u00e1ch kh\u00e1c b\u1eb1ng \u0111\u1ec7 quy nh\u01b0 sau:</p> <pre><code>Matrix pow(long long exp) {\n    Matrix base = *this;\n    if (exp == 0) return identity(base.row());\n    if (exp == 1) return base;\n    Matrix p = pow(exp &gt;&gt; 1);\n    p = p * p;\n    if (exp &amp; 1) return p * base;\n    return p;\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>Nh\u00e2n ma tr\u1eadn: V\u1edbi ma tr\u1eadn \\(A\\) k\u00edch th\u01b0\u1edbc \\((m \\times n)\\) v\u00e0 ma tr\u1eadn \\(B\\) k\u00edch th\u01b0\u1edbc \\((n \\times p)\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ednh \\(A \\times B\\) l\u00e0 \\(\\mathcal{O}(m \\times n \\times p)\\).</p> <ul> <li>Ghi ch\u00fa: \u0110\u1ed1i v\u1edbi ph\u00e9p nh\u00e2n c\u00e1c ma tr\u1eadn vu\u00f4ng k\u00edch th\u01b0\u1edbc \\((n \\times n)\\), c\u00f3 thu\u1eadt to\u00e1n nh\u00e2n ma tr\u1eadn Strassen v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n^{\\log_2{7}}) \\approx \\mathcal{O}(n^{2.807})\\) theo t\u01b0 t\u01b0\u1edfng chia nh\u1ecf ma tr\u1eadn (t\u01b0\u01a1ng t\u1ef1 c\u00e1ch nh\u00e2n nhanh \\(2\\) s\u1ed1 l\u1edbn). Tuy nhi\u00ean c\u00e0i \u0111\u1eb7t r\u1ea5t ph\u1ee9c t\u1ea1p v\u00e0 tr\u00ean th\u1ef1c t\u1ebf v\u1edbi gi\u00e1 tr\u1ecb \\(n\\) th\u01b0\u1eddng g\u1eb7p, c\u00e1ch n\u00e0y kh\u00f4ng ch\u1ea1y nhanh h\u01a1n nh\u00e2n ma tr\u1eadn th\u00f4ng th\u01b0\u1eddng \\(\\mathcal{O}(n^3)\\).</li> </ul> <p>L\u0169y th\u1eeba ma tr\u1eadn: V\u1edbi ma tr\u1eadn vu\u00f4ng \\(A\\) c\u1ea5p \\(n\\), thu\u1eadt to\u00e1n t\u00ednh \\(A^k\\) c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n^3 \\times \\log{k})\\).</p>"},{"location":"algo/trick/matrix-multiplication/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>Ch\u00fang ta h\u00e3y c\u00f9ng xem x\u00e9t m\u1ed9t v\u00ed d\u1ee5 kinh \u0111i\u1ec3n nh\u1ea5t trong \u1ee9ng d\u1ee5ng c\u1ee7a ph\u00e9p nh\u00e2n ma tr\u1eadn.</p>"},{"location":"algo/trick/matrix-multiplication/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>LATGACH4 - L\u00e1t g\u1ea1ch 4</p> <p>Cho m\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt k\u00edch th\u01b0\u1edbc \\(2 \\times N\\) \\((1 \\le N \\le 10^9)\\). H\u00e3y \u0111\u1ebfm s\u1ed1 c\u00e1ch l\u00e1t c\u00e1c vi\u00ean g\u1ea1ch nh\u1ecf k\u00edch th\u01b0\u1edbc \\(1 \\times 2\\) v\u00e0 \\(2 \\times 1\\) v\u00e0o h\u00ecnh tr\u00ean sao cho kh\u00f4ng c\u00f3 ph\u1ea7n n\u00e0o c\u1ee7a c\u00e1c vi\u00ean g\u1ea1ch nh\u1ecf th\u1eeba ra ngo\u00e0i, c\u0169ng kh\u00f4ng c\u00f3 v\u00f9ng di\u1ec7n t\u00edch n\u00e0o c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt kh\u00f4ng \u0111\u01b0\u1ee3c l\u00e1t.</p>"},{"location":"algo/trick/matrix-multiplication/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>G\u1ecdi \\(F_i\\) l\u00e0 s\u1ed1 c\u00e1ch l\u00e1t c\u00e1c vi\u00ean g\u1ea1ch nh\u1ecf v\u00e0o h\u00ecnh ch\u1eef nh\u1eadt k\u00edch th\u01b0\u1edbc \\(2 \\times i\\). Ta c\u00f3:</p> <ul> <li>N\u1ebfu s\u1eed d\u1ee5ng vi\u00ean g\u1ea1ch k\u00edch th\u01b0\u1edbc \\(1 \\times 2\\) th\u00ec \\(F_i = F_{i - 2}\\).</li> <li>N\u1ebfu s\u1eed d\u1ee5ng vi\u00ean g\u1ea1ch k\u00edch th\u01b0\u1edbc \\(2 \\times 1\\) th\u00ec \\(F_i = F_{i - 1}\\).</li> </ul> <p>\\(\\Rightarrow\\) \\(F_i = F_{i - 1} + F_{i - 2}\\).</p> <p></p> <p>Do \u0111\u00f3, b\u00e0i to\u00e1n quy v\u1ec1 t\u00ecm s\u1ed1 \\(Fibonacci\\) th\u1ee9 \\(N\\) v\u1edbi d\u00e3y \\(Fibonacci\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> <p>\\(F_0 = 1\\)</p> <p>\\(F_1 = 1\\)</p> <p>\\(...\\)</p> <p>\\(F_i = F_{i-1} + F_{i-2}\\) (v\u1edbi \\(i \\ge 2\\))</p> <p>Hi\u1ec3n nhi\u00ean c\u00e1ch l\u00e0m th\u00f4ng th\u01b0\u1eddng l\u00e0 t\u00ednh l\u1ea7n l\u01b0\u1ee3t c\u00e1c \\(F_i\\). Tuy nhi\u00ean, c\u00e1ch l\u00e0m n\u00e0y ho\u00e0n to\u00e0n kh\u00f4ng hi\u1ec7u qu\u1ea3 v\u1edbi \\(N\\) l\u00ean \u0111\u1ebfn \\(10^9\\), v\u00e0 ta c\u1ea7n m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c.</p> <p>Ta x\u00e9t c\u00e1c l\u1edbp s\u1ed1:</p> <ul> <li>L\u1edbp \\(1\\): \\(F_1, F_0\\)</li> <li>L\u1edbp \\(2\\): \\(F_2, F_1\\)</li> <li>L\u1edbp \\(3\\): \\(F_3, F_2\\)</li> <li>\\(...\\)</li> <li>L\u1edbp \\(i-1\\): \\(F_{i-1}, F_{i-2}\\)</li> <li>L\u1edbp \\(i\\): \\(F_{i}, F_{i-1}\\)</li> </ul> <p>Ta h\u00ecnh dung m\u1ed7i l\u1edbp l\u00e0 m\u1ed9t ma tr\u1eadn \\((2 \\times 1)\\). Ti\u1ebfp \u0111\u00f3, ta s\u1ebd bi\u1ebfn \u0111\u1ed5i t\u1eeb l\u1edbp \\(i-1\\) \u0111\u1ebfn l\u1edbp \\(i\\). Sau m\u1ed7i l\u1ea7n bi\u1ebfn \u0111\u1ed5i nh\u01b0 v\u1eady, ta t\u00ednh th\u00eam \u0111\u01b0\u1ee3c m\u1ed9t gi\u00e1 tr\u1ecb \\(F_i\\). \u0110\u1ec3 th\u1ef1c hi\u1ec7n ph\u00e9p bi\u1ebfn \u0111\u1ed5i n\u00e0y, ch\u00fa \u00fd l\u00e0 c\u00e1c s\u1ed1 \u1edf l\u1edbp sau ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o l\u1edbp ngay tr\u01b0\u1edbc n\u00f3 theo c\u00e1c ph\u00e9p c\u1ed9ng, ta t\u00ecm \u0111\u01b0\u1ee3c c\u00e1ch bi\u1ebfn \u0111\u1ed5i b\u1eb1ng nh\u00e2n ma tr\u1eadn:</p> <p>\\(A \\times \\begin{bmatrix} F_{i-1} \\newline F_{i-2} \\end{bmatrix} = \\begin{bmatrix} F_i \\newline F_{i-1} \\end{bmatrix}\\)</p> <p>Ch\u1eafc h\u1eb3n \u0111\u1ecdc \u0111\u1ebfn \u0111\u00e2y b\u1ea1n \u0111\u1ecdc s\u1ebd th\u1eafc m\u1eafc, l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c ma tr\u1eadn \\(A\\) ? \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c ma tr\u1eadn n\u00e0y, ta l\u00e0m nh\u01b0 sau:</p> <p>\\(A = \\begin{bmatrix} a_{11} &amp; a_{12} \\newline a_{21} &amp; a_{22} \\end{bmatrix}\\)</p> <p>\\(\\Rightarrow\\) \\(\\begin{bmatrix} a_{11} &amp; a_{12} \\newline a_{21} &amp; a_{22} \\end{bmatrix} \\begin{bmatrix} F_{i-1} \\newline F_{i-2} \\end{bmatrix} = \\begin{bmatrix} F_i \\newline F_{i-1} \\end{bmatrix}\\)</p> <p>Suy ra:</p> <ul> <li>\\(F_i = a_{11} \\times F_{i-1} + a_{12} \\times F_{i-2} = 1 \\times F_{i-1} + 1 \\times F_{i-2}\\), do \u0111\u00f3 h\u00e0ng \u0111\u1ea7u ti\u00ean c\u1ee7a ma tr\u1eadn \\(A\\) l\u00e0 \\(\\begin{bmatrix} 1 &amp; 1 \\end{bmatrix}\\).</li> <li>\\(F_{i-1} = a_{21} \\times F_{i-1} + a_{22} \\times F_{i-2} = 1 \\times F_{i-1} + 0 \\times F_{i-2}\\), do \u0111\u00f3 h\u00e0ng th\u1ee9 hai c\u1ee7a ma tr\u1eadn \\(A\\) l\u00e0 \\(\\begin{bmatrix} 1 &amp; 0 \\end{bmatrix}\\).</li> </ul> <p>\\(\\Rightarrow A = \\begin{bmatrix} 1 &amp; 1 \\newline 1 &amp; 0 \\end{bmatrix}\\)</p> <p>Ta c\u00f3:</p> <p>\\(\\begin{bmatrix} F_i \\newline F_{i-1} \\end{bmatrix} = A \\times \\begin{bmatrix} F_{i-1} \\newline F_{i-2} \\end{bmatrix} = A^2 \\times \\begin{bmatrix} F_{i-2} \\newline F_{i-3} \\end{bmatrix}\\) \\(\\Bigg(\\)v\u00ec \\(\\begin{bmatrix} F_{i-1} \\newline F_{i-2} \\end{bmatrix} = A \\times \\begin{bmatrix} F_{i-2} \\newline F_{i-3} \\end{bmatrix}\\) \\(\\Bigg)\\)</p> <p>\\(= A^3 \\times \\begin{bmatrix} F_{i-3} \\newline F_{i-4} \\end{bmatrix} = ... = A^{i-1} \\times \\begin{bmatrix} F_1 \\newline F_0 \\end{bmatrix}\\)</p> <p>\\(\\Rightarrow \\begin{bmatrix} F_N \\newline F_{N-1} \\end{bmatrix} = A^{N-1} \\times \\begin{bmatrix} F_1 \\newline F_0 \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 1 \\newline 1 &amp; 0 \\end{bmatrix} ^{N-1} \\times \\begin{bmatrix} 1 \\newline 1 \\end{bmatrix}\\) (v\u00ec \\(F_0 = 1\\) v\u00e0 \\(F_1 = 1\\))</p> <p>Ma tr\u1eadn \\(A\\) c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ma tr\u1eadn h\u1ec7 s\u1ed1 v\u00e0 ma tr\u1eadn \\(\\begin{bmatrix} F_1 \\newline F_0 \\end{bmatrix}\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ma tr\u1eadn c\u01a1 s\u1edf.</p> <p>V\u1eady b\u00e0i to\u00e1n tr\u00ean \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1ec1 d\u1ea1ng nh\u00e2n ma tr\u1eadn. \\(F_N\\) \u0111\u01b0\u1ee3c t\u00ednh d\u1ef1a v\u00e0o ph\u00e9p l\u0169y th\u1eeba c\u1ee7a ma tr\u1eadn \\(A\\)    .</p>"},{"location":"algo/trick/matrix-multiplication/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>L\u01b0u \u00fd: Kh\u00e1c v\u1edbi \u0111\u1ecbnh ngh\u0129a b\u00ean tr\u00ean. Trong c\u00e1ch c\u00e0i \u0111\u1eb7t sau, c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod = 111539786;\n\nusing type = int; \n\nstruct Matrix {\n    vector &lt;vector &lt;type&gt; &gt; data;\n\n    int row() const { return data.size(); } \n\n    int col() const { return data[0].size(); }\n\n    auto &amp; operator [] (int i) { return data[i]; }\n\n    const auto &amp; operator[] (int i) const { return data[i]; }\n\n    Matrix() = default;\n\n    Matrix(int r, int c): data(r, vector &lt;type&gt; (c)) { }\n\n    Matrix(const vector &lt;vector &lt;type&gt; &gt; &amp;d): data(d) { }\n\n    friend ostream &amp; operator &lt;&lt; (ostream &amp;out, const Matrix &amp;d) {\n        for (auto x : d.data) {\n            for (auto y : x) out &lt;&lt; y &lt;&lt; ' ';\n            out &lt;&lt; '\\n';\n        }\n        return out;\n    }\n\n    static Matrix identity(long long n) {\n        Matrix a = Matrix(n, n);\n        while (n--) a[n][n] = 1;\n        return a;\n    }\n\n    Matrix operator * (const Matrix &amp;b) {\n        Matrix a = *this;\n        assert(a.col() == b.row()); \n        Matrix c(a.row(), b.col());\n        for (int i = 0; i &lt; a.row(); ++i)\n            for (int j = 0; j &lt; b.col(); ++j)\n                for (int k = 0; k &lt; a.col(); ++k){\n                    c[i][j] += 1ll * a[i][k] % mod * (b[k][j] % mod) % mod;\n                    c[i][j] %= mod;\n                }\n        return c;\n    }\n\n    Matrix pow(long long exp) {\n        assert(row() == col());  \n        Matrix base = *this, ans = identity(row());\n        for (; exp &gt; 0; exp &gt;&gt;= 1, base = base * base)\n            if (exp &amp; 1) ans = ans * base;\n        return ans;\n    }\n};\n\nint main(){\n    Matrix a({\n        {1, 1},\n        {1, 0}\n    });\n\n    int t;\n    cin &gt;&gt; t;\n    while (t--) {\n        int n;\n        cin &gt;&gt; n;\n        Matrix tmp = a.pow(n - 1);\n        cout &lt;&lt; (tmp[0][0] + tmp[0][1]) % mod &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/#anh-gia_1","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(T \\times 2^3 \\times \\log{N})\\). V\u1edbi \\(T\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng b\u1ed9 test.</p>"},{"location":"algo/trick/matrix-multiplication/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>B\u00e2y gi\u1edd ch\u00fang ta s\u1ebd c\u00f9ng xem x\u00e9t m\u1ed9t v\u00ed d\u1ee5 t\u1ed5ng qu\u00e1t h\u01a1n c\u1ee7a v\u00ed d\u1ee5 1.</p>"},{"location":"algo/trick/matrix-multiplication/#bai-toan_1","title":"B\u00e0i to\u00e1n","text":"<p>SEQ - Recursive Sequence</p> <p>Cho \\(2\\) d\u00e3y s\u1ed1 nguy\u00ean \u0111\u1ed9 d\u00e0i \\(k\\) (\\(1 \\le k \\le 10\\)) l\u00e0 \\(b_1, b_2, ..., b_k\\) v\u00e0 \\(c_1, c_2, ..., c_k\\) \\((0 \\le b_i, c_i \\le 10^9\\) v\u1edbi \\(1 \\le i \\le k)\\). D\u00e3y s\u1ed1 \\(a\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh nh\u01b0 sau:</p> <ul> <li>\\(a_i = b_i\\) (v\u1edbi \\(1 \\le i \\le k\\))</li> <li>\\(a_i = c_1 \\times a_{i-1} + c_2 \\times a_{i-2} + ... + c_k \\times a_{i-k}\\) (v\u1edbi \\(i &gt; k\\))</li> </ul> <p>Y\u00eau c\u1ea7u: T\u00ednh \\(a_n\\) v\u1edbi \\(n \\le 10^9\\). \u0110\u00e1p \u00e1n in ra theo modulo \\(10^9\\).</p>"},{"location":"algo/trick/matrix-multiplication/#phan-tich_1","title":"Ph\u00e2n t\u00edch","text":"<p>C\u0169ng nh\u01b0 trong v\u00ed d\u1ee5 1, ta x\u00e9t c\u00e1c l\u1edbp s\u1ed1:</p> <ul> <li>L\u1edbp \\(1\\): \\(a_1, a_2, ..., a_k\\)</li> <li>L\u1edbp \\(2\\): \\(a_2, a_3, ..., a_{k+1}\\)</li> <li>\\(...\\)</li> <li>L\u1edbp \\(i\\): \\(a_i, a_{i+1}, ..., a_{i+k-1}\\)</li> </ul> <p>M\u1ed7i l\u1edbp l\u00e0 m\u1ed9t ma tr\u1eadn \\((k \\times 1)\\). Ta c\u0169ng s\u1ebd \u00e1p d\u1ee5ng ph\u00e9p nh\u00e2n ma tr\u1eadn \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i t\u1eeb l\u1edbp \\(i\\) sang l\u1edbp \\(i+1\\) nh\u01b0 sau:</p> <p>\\(D \\times \\begin{bmatrix} a_i \\newline a_{i+1} \\newline \\vdots \\newline a_{i+k-2} \\newline a_{i+k-1} \\end{bmatrix} = \\begin{bmatrix} a_{i+1} \\newline a_{i+2} \\newline \\vdots \\newline a_{i+k-1} \\newline a_{i+k} \\end{bmatrix}\\)</p> <p>\\(\\Rightarrow \\begin{bmatrix} d_{1, 1} &amp; d_{1, 2} &amp; \\dots &amp; d_{1, k-1} &amp; d_{1, k} \\newline d_{2, 1} &amp; d_{2, 2} &amp; \\dots &amp; d_{2, k-1} &amp; d_{2, k} \\newline \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\newline d_{k-1, 1} &amp; d_{k-1, 2} &amp; \\dots &amp; d_{k-1, k-1} &amp; d_{k-1, k} \\newline d_{k, 1} &amp; d_{k, 2} &amp; \\dots &amp; d_{k, k-1} &amp; d_{k, k} \\end{bmatrix} \\begin{bmatrix} a_i \\newline a_{i+1} \\newline \\vdots \\newline a_{i+k-2} \\newline a_{i+k-1} \\end{bmatrix} = \\begin{bmatrix} a_{i+1} \\newline a_{i+2} \\newline \\vdots \\newline a_{i+k-1} \\newline a_{i+k} \\end{bmatrix}\\) </p> <p>\u0110\u1ec3 x\u00e2y d\u1ef1ng ma tr\u1eadn vu\u00f4ng \\(D\\) nh\u01b0 tr\u00ean, ta th\u1ef1c hi\u1ec7n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 trong v\u00ed d\u1ee5 tr\u01b0\u1edbc: Ph\u00e2n t\u00edch \\(a_{i+1}\\) \u0111\u1ebfn \\(a_{i+k}\\) d\u01b0\u1edbi d\u1ea1ng \\(a_i, ..., a_{i+k-1}\\) :</p> <ul> <li>\\(a_{i+1} = 0 \\times a_i + 1 \\times a_{i+1} + 0 \\times a_{i+2} + ... + 0 \\times a_{i+k-1}\\) n\u00ean h\u00e0ng \u0111\u1ea7u ti\u00ean c\u1ee7a ma tr\u1eadn \\(D\\) l\u00e0 \\(\\begin{bmatrix} 0 &amp; 1 &amp; 0 &amp; ... &amp; 0\\end{bmatrix}\\).</li> <li>\\(a_{i+2} = 0 \\times a_i + 0 \\times a_{i+1} + 1 \\times a_{i+2} + ... + 0 \\times a_{i+k-1}\\) n\u00ean h\u00e0ng th\u1ee9 hai c\u1ee7a ma tr\u1eadn \\(D\\) l\u00e0 \\(\\begin{bmatrix} 0 &amp; 0 &amp; 1 &amp; ... &amp; 0\\end{bmatrix}\\).</li> <li>\\(...\\)</li> <li>\\(a_{i+k-1} = 0 \\times a_i + 0 \\times a_{i+1} + 0 \\times a_{i+2} + ... + 1 \\times a_{i+k-1}\\) n\u00ean h\u00e0ng th\u1ee9 \\(k-1\\) c\u1ee7a ma tr\u1eadn \\(D\\) l\u00e0 \\(\\begin{bmatrix} 0 &amp; 0 &amp; 0 &amp; ... &amp; 1\\end{bmatrix}\\).</li> <li>\\(a_{i+k} = c_k \\times a_i + c_{k-1} \\times a_{i+1} + c_{k-2} \\times a_{i+2} + ... + c_1 \\times a_{i+k-1}\\) n\u00ean h\u00e0ng th\u1ee9 \\(k\\) c\u1ee7a ma tr\u1eadn \\(D\\) l\u00e0 \\(\\begin{bmatrix} c_k &amp; c_{k-1} &amp; c_{k-2} &amp; ... &amp; c_1\\end{bmatrix}\\). </li> </ul> <p>\\(\\Rightarrow D = \\begin{bmatrix} 0 &amp; 1 &amp; 0 &amp; ... &amp; 0 \\newline 0 &amp; 0 &amp; 1 &amp; ... &amp; 0 \\newline \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\newline 0 &amp; 0 &amp; 0 &amp; ... &amp; 1 \\newline c_k &amp; c_{k-1} &amp; c_{k-2} &amp; ... &amp; c_1 \\end{bmatrix}\\)</p> <p>T\u1eeb \u0111\u00f3, ta thu \u0111\u01b0\u1ee3c c\u00e1ch l\u00e0m nh\u01b0 trong v\u00ed d\u1ee5 1. V\u00ec ta c\u1ea7n t\u00ednh \\(a_n\\) n\u00ean ch\u1ec9 c\u1ea7n x\u00e1c \u0111\u1ecbnh \u0111\u1ebfn l\u1edbp \\(n - k + 1\\).</p> <p>\\(\\Rightarrow \\begin{bmatrix} a_{n - k + 1} \\newline a_{n - k + 2} \\newline \\vdots \\newline a_{n-1} \\newline a_{n} \\end{bmatrix} = D^{n - k} \\times \\begin{bmatrix} a_1 \\newline a_2 \\newline \\vdots \\newline a_{k-1} \\newline a_k \\end{bmatrix} = D^{n - k} \\times \\begin{bmatrix} b_1 \\newline b_2 \\newline \\vdots \\newline b_{k-1} \\newline b_k \\end{bmatrix}\\) (v\u00ec \\(a_i = b_i\\) v\u1edbi \\(1 \\le i \\le k\\))</p>"},{"location":"algo/trick/matrix-multiplication/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>L\u01b0u \u00fd: Kh\u00e1c v\u1edbi \u0111\u1ecbnh ngh\u0129a b\u00ean tr\u00ean. Trong c\u00e1ch c\u00e0i \u0111\u1eb7t sau, c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod  = 1e9;\n\nusing type = int;\n\nstruct Matrix {\n    vector &lt;vector &lt;type&gt; &gt; data;\n\n    int row() const { return data.size(); } \n\n    int col() const { return data[0].size(); }\n\n    auto &amp; operator [] (int i) { return data[i]; }\n\n    const auto &amp; operator[] (int i) const { return data[i]; }\n\n    Matrix() = default;\n\n    Matrix(int r, int c): data(r, vector &lt;type&gt; (c)) { }\n\n    Matrix(const vector &lt;vector &lt;type&gt; &gt; &amp;d): data(d) { }\n\n    friend ostream &amp; operator &lt;&lt; (ostream &amp;out, const Matrix &amp;d) {\n        for (auto x : d.data) {\n            for (auto y : x) out &lt;&lt; y &lt;&lt; ' ';\n            out &lt;&lt; '\\n';\n        }\n        return out;\n    }\n\n    static Matrix identity(long long n) {\n        Matrix a = Matrix(n, n);\n        while (n--) a[n][n] = 1;\n        return a;\n    }\n\n    Matrix operator * (const Matrix &amp;b) {\n        Matrix a = *this;\n        assert(a.col() == b.row()); \n        Matrix c(a.row(), b.col());\n        for (int i = 0; i &lt; a.row(); ++i)\n            for (int j = 0; j &lt; b.col(); ++j)\n                for (int k = 0; k &lt; a.col(); ++k){\n                    c[i][j] += 1ll * a[i][k] % mod * (b[k][j] % mod) % mod;\n                    c[i][j] %= mod;\n                }\n        return c;\n    }\n\n    Matrix pow(long long exp) {\n        assert(row() == col());  \n        Matrix base = *this, ans = identity(row());\n        for (; exp &gt; 0; exp &gt;&gt;= 1, base = base * base)\n            if (exp &amp; 1) ans = ans * base;\n        return ans;\n    }\n};\n\nint b[15], c[15];\n\nint main(){\n    int t;\n    cin &gt;&gt; t;\n    while (t--) {\n        int n, k;\n        cin &gt;&gt; k;\n        for (int i = 1; i &lt;= k; ++i) cin &gt;&gt; b[i];\n        for (int i = 1; i &lt;= k; ++i) cin &gt;&gt; c[i];\n        cin &gt;&gt; n;\n\n        if (n &lt;= k) { cout &lt;&lt; b[n] &lt;&lt; '\\n'; continue; }\n\n        // X\u00e2y d\u1ef1ng ma tr\u1eadn c\u01a1 s\u1edf\n        Matrix base(k, 1);\n        for (int i = 1; i &lt;= k; ++i) base[i - 1][0] = b[i];\n\n        // X\u00e2y d\u1ef1ng ma tr\u1eadn h\u1ec7 s\u1ed1 D\n        Matrix d(k, k);\n        for (int i = 0; i &lt; k - 1; ++i) d[i][i + 1] = 1;\n        for (int i = 0; i &lt; k; ++i) d[k - 1][i] = c[k - i];\n\n        Matrix ans = d.pow(n - k) * base;\n        cout &lt;&lt; ans[k - 1][0] &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/#anh-gia_2","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(t \\times k ^ 3 \\times \\log{(n - k)})\\). V\u1edbi \\(t\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng b\u1ed9 test.</p>"},{"location":"algo/trick/matrix-multiplication/#vi-du-3","title":"V\u00ed d\u1ee5 3","text":""},{"location":"algo/trick/matrix-multiplication/#bai-toan_2","title":"B\u00e0i to\u00e1n","text":"<p>VNOJ - THBAC</p> <p>Ng\u01b0\u1eddi ta m\u1edbi t\u00ecm ra m\u1ed9t lo\u1ea1i vi khu\u1ea9n m\u1edbi. Ch\u00fang s\u1ed1ng th\u00e0nh \\(N\\) b\u1ea7y \\((N \\le 100)\\), \u0111\u00e1nh s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(N-1\\). Ban \u0111\u1ea7u, m\u1ed7i b\u1ea7y n\u00e0y ch\u1ec9 c\u00f3 m\u1ed9t con vi khu\u1ea9n. Tuy nhi\u00ean, m\u1ed7i gi\u00e2y, s\u1ed1 l\u01b0\u1ee3ng vi khu\u1ea9n trong c\u00e1c b\u1ea7y l\u1ea1i c\u00f3 s\u1ef1 thay \u0111\u1ed5i: M\u1ed9t s\u1ed1 vi khu\u1ea9n c\u00f3 th\u1ec3 ch\u1ebft \u0111i, sinh s\u1ea3n th\u00eam, ho\u1eb7c di chuy\u1ec3n sang b\u1ea7y kh\u00e1c. Nh\u1eefng thay \u0111\u1ed5i n\u00e0y lu\u00f4n tu\u00e2n theo m\u1ed9t quy lu\u1eadt c\u00f3 s\u1eb5n. T\u1ea1i m\u1ed7i gi\u00e2y ch\u1ec9 x\u1ea3y ra \u0111\u00fang m\u1ed9t quy lu\u1eadt. C\u00e1c quy lu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n n\u1ed1i ti\u1ebfp nhau v\u00e0 theo chu k\u1ef3. C\u00f3 ngh\u0129a l\u00e0, n\u1ebfu \u0111\u00e1nh s\u1ed1 c\u00e1c quy lu\u1eadt t\u1eeb \\(0\\) \u0111\u1ebfn \\(M-1\\), t\u1ea1i gi\u00e2y th\u1ee9 \\(S\\) th\u00ec quy lu\u1eadt \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng s\u1ebd l\u00e0 \\((S-1) \\bmod M\\) \\((M \\le 1000)\\).</p> <p>Nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n l\u00e0 t\u00ecm xem, v\u1edbi m\u1ed9t b\u1ed9 c\u00e1c quy lu\u1eadt cho tr\u01b0\u1edbc, sau \\(T\\) \u0111\u01a1n v\u1ecb th\u1eddi gian \\((T \\le 10^{18})\\), m\u1ed7i b\u1ea7y c\u00f3 bao nhi\u00eau vi khu\u1ea9n.</p> <p>C\u00e1c lo\u1ea1i quy lu\u1eadt c\u00f3 th\u1ec3 c\u00f3:</p> <ul> <li><code>A i 0</code> : T\u1ea5t c\u1ea3 c\u00e1c vi khu\u1ea9n thu\u1ed9c b\u1ea7y \\(i\\) ch\u1ebft.</li> <li><code>B i k</code> : S\u1ed1 vi khu\u1ea9n trong b\u1ea7y \\(i\\) t\u0103ng l\u00ean g\u1ea5p \\(k\\) l\u1ea7n \\((1 \\le k \\le 100)\\).</li> <li><code>C i j</code> : s\u1ed1 vi khu\u1ea9n  trong b\u1ea7y \\(i\\) t\u0103ng l\u00ean m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng b\u1eb1ng v\u1edbi s\u1ed1 vi khu\u1ea9n trong b\u1ea7y \\(j\\).</li> <li><code>D i j</code> : C\u00e1c vi khu\u1ea9n thu\u1ed9c b\u1ea7y \\(j\\) di chuy\u1ec3n to\u00e0n b\u1ed9 sang b\u1ea7y \\(i\\).</li> <li><code>E i j</code> : C\u00e1c vi khu\u1ea9n thu\u1ed9c b\u1ea7y \\(i\\) v\u00e0 b\u1ea7y \\(j\\) \u0111\u1ed5i v\u1ecb tr\u00ed cho nhau.</li> <li><code>F 0 0</code> : V\u1ecb tr\u00ed c\u00e1c vi khu\u1ea9n di chuy\u1ec3n tr\u00ean v\u00f2ng tr\u00f2n. Ngh\u0129a l\u00e0 c\u00e1c vi khu\u1ea9n \u1edf b\u1ea7y \\(i\\) di chuy\u1ec3n sang b\u1ea7y \\((i +1) \\space mod \\space N\\). C\u00e1c di chuy\u1ec3n x\u1ea3y ra \u0111\u1ed3ng th\u1eddi.</li> </ul>"},{"location":"algo/trick/matrix-multiplication/#phan-tich_2","title":"Ph\u00e2n t\u00edch","text":"<p>C\u00e1ch l\u00e0m \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ch\u00fang ta m\u00f4 ph\u1ecfng l\u1ea1i s\u1ed1 l\u01b0\u1ee3ng vi khu\u1ea9n trong m\u1ed7i b\u1ea7y qua t\u1eebng \u0111\u01a1n v\u1ecb th\u1eddi gian. C\u00e1ch l\u00e0m n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(T \\times N \\times k)\\) v\u1edbi \\(\\mathcal{O}(k)\\) l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho x\u1eed l\u00fd s\u1ed1 l\u1edbn. C\u00e1ch n\u00e0y kh\u00f4ng th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c v\u1edbi \\(T\\) l\u1edbn.</p> <p>Ta h\u00ecnh dung s\u1ed1 l\u01b0\u1ee3ng vi khu\u1ea9n trong m\u1ed7i b\u1ea7y trong m\u1ed9t \u0111\u01a1n v\u1ecb th\u1eddi gian l\u00e0 m\u1ed9t d\u00e3y s\u1ed1. Nh\u01b0 v\u1eady, m\u1ed7i quy lu\u1eadt cho tr\u01b0\u1edbc th\u1ef1c ch\u1ea5t l\u00e0 m\u1ed9t ph\u00e9p bi\u1ebfn \u0111\u1ed5i t\u1eeb m\u1ed9t d\u00e3y s\u1ed1 th\u00e0nh m\u1ed9t d\u00e3y s\u1ed1 m\u1edbi, v\u00e0 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n bi\u1ebfn \u0111\u1ed5i n\u00e0y b\u1eb1ng m\u1ed9t ph\u00e9p nh\u00e2n ma tr\u1eadn.</p> <p>C\u1ee5 th\u1ec3 h\u01a1n, ta coi s\u1ed1 l\u01b0\u1ee3ng vi khu\u1ea9n trong \\(N\\) b\u1ea7y t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m x\u00e1c \u0111\u1ecbnh l\u00e0 m\u1ed9t ma tr\u1eadn \\(1 \\times N\\), v\u00e0 m\u1ed7i ph\u00e9p bi\u1ebfn \u0111\u1ed5i l\u00e0 m\u1ed9t ma tr\u1eadn \\(N \\times N\\). Khi \u00e1p d\u1ee5ng m\u1ed7i ph\u00e9p bi\u1ebfn \u0111\u1ed5i, ta nh\u00e2n hai ma tr\u1eadn n\u00f3i tr\u00ean v\u1edbi nhau.</p> <p>B\u00e2y gi\u1edd, x\u00e9t tr\u01b0\u1eddng h\u1ee3p \\(N = 4\\), c\u00e1c ma tr\u1eadn t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i l\u1ea7n l\u01b0\u1ee3t \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 nh\u01b0 sau:</p> <ul> <li> <p>Bi\u1ebfn \u0111\u1ed5i: <code>A 2 0</code> <pre><code>1 0 0 0\n0 1 0 0\n0 0 0 0\n0 0 0 1\n</code></pre></p> </li> <li> <p>Bi\u1ebfn \u0111\u1ed5i: <code>B 2 6</code> <pre><code>1 0 0 0\n0 1 0 0\n0 0 6 0\n0 0 0 1\n</code></pre></p> </li> <li> <p>Bi\u1ebfn \u0111\u1ed5i: <code>C 1 3</code> <pre><code>1 0 0 0\n0 1 0 0\n0 0 1 0\n0 1 0 1\n</code></pre></p> </li> <li> <p>Bi\u1ebfn \u0111\u1ed5i: <code>D 1 3</code> <pre><code>1 0 0 0\n0 1 0 0\n0 0 1 0\n0 1 0 0\n</code></pre></p> </li> <li> <p>Bi\u1ebfn \u0111\u1ed5i: <code>E 1 3</code> <pre><code>1 0 0 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n</code></pre></p> </li> <li> <p>Bi\u1ebfn \u0111\u1ed5i: <code>F 0 0</code> <pre><code>0 1 0 0\n0 0 1 0\n0 0 0 1\n1 0 0 0\n</code></pre></p> </li> </ul> <p>C\u0169ng nh\u01b0 c\u00e1c b\u00e0i to\u00e1n tr\u01b0\u1edbc, ta s\u1ebd c\u1ed1 g\u1eafng \u00e1p d\u1ee5ng vi\u1ec7c t\u00ednh to\u00e1n l\u0169y th\u1eeba, k\u1ebft h\u1ee3p v\u1edbi ph\u00e9p nh\u00e2n ma tr\u1eadn \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1eeb \\(T\\) xu\u1ed1ng \\(\\log{T}\\). Tuy nhi\u00ean, c\u00f3 th\u1ec3 th\u1ea5y vi\u1ec7c s\u1eed d\u1ee5ng ph\u00e9p l\u0169y th\u1eeba trong b\u00e0i to\u00e1n n\u00e0y ph\u1ea7n n\u00e0o ph\u1ee9c t\u1ea1p h\u01a1n b\u1edfi c\u00e1c ma tr\u1eadn \u0111\u01b0\u1ee3c cho kh\u00f4ng gi\u1ed1ng nhau. \u0110\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y, ta l\u00e0m nh\u01b0 sau:</p> <p>G\u1ecdi \\(X_1, X_2, ..., X_m\\) l\u00e0 c\u00e1c ma tr\u1eadn t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i \u0111\u01b0\u1ee3c cho.</p> <p>\u0110\u1eb7t \\(X = X_1 \\times X_2 \\times ... \\times X_m\\).</p> <p>\u0110\u1eb7t \\(S = [1, 1, ..., 1]\\) (d\u00e3y s\u1ed1 l\u01b0\u1ee3ng vi khu\u1ea9n t\u1ea1i th\u1eddi \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean).</p> <p>Nh\u01b0 v\u1eady, \\(Y = S \\times X^t \\times X_1 \\times X_2 \\times ... \\times X_r\\) l\u00e0 ma tr\u1eadn th\u1ec3 hi\u1ec7n s\u1ed1 l\u01b0\u1ee3ng vi khu\u1ea9n t\u1ea1i th\u1eddi \u0111i\u1ec3m \\(M \\times t + r\\).</p> <p>Nh\u01b0 v\u1eady, thu\u1eadt to\u00e1n \u0111\u1ebfn \u0111\u00e2y \u0111\u00e3 r\u00f5. Ta ph\u00e2n t\u00edch \\(T = M \\times t + r\\), nh\u1edd \u0111\u00f3, ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n trong \\(\\mathcal{O}(N^3 \\times M)\\) cho b\u01b0\u1edbc t\u00ednh ma tr\u1eadn \\(X\\) v\u00e0 \\(\\mathcal{O}(N^3 \\times (\\log{T/M} + M))\\) cho b\u01b0\u1edbc t\u00ednh \\(Y\\). B\u00e0i to\u00e1n \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft.</p>"},{"location":"algo/trick/matrix-multiplication/#vi-du-4","title":"V\u00ed d\u1ee5 4","text":""},{"location":"algo/trick/matrix-multiplication/#bai-toan_3","title":"B\u00e0i to\u00e1n","text":"<p>beautynumbers - S\u1ed1 \u0111\u1eb9p</p> <p>S\u1ed1 \u0111\u1eb9p l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean d\u01b0\u01a1ng v\u1edbi b\u1ea5t k\u1ef3 ch\u1eef s\u1ed1 l\u1ebb n\u00e0o \\((1, 3, 5, 7, 9)\\) \u0111\u1ec1u xu\u1ea5t hi\u1ec7n l\u1ebb l\u1ea7n n\u1ebfu n\u00f3 xu\u1ea5t hi\u1ec7n v\u00e0 b\u1ea5t k\u1ef3 ch\u1eef s\u1ed1 ch\u1eb5n n\u00e0o \\((0, 2, 4, 6, 8)\\) c\u0169ng xu\u1ea5n hi\u1ec7n ch\u1eb5n l\u1ea7n n\u1ebfu n\u00f3 xu\u1ea5t hi\u1ec7n. V\u00ed d\u1ee5 s\u1ed1 \\(141222124\\) l\u00e0 m\u1ed9t s\u1ed1 \u0111\u1eb9p. G\u1ecdi \\(f_n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 \u0111\u1eb9p c\u00f3 kh\u00f4ng qu\u00e1 \\(n\\) ch\u1eef s\u1ed1. Y\u00eau c\u1ea7u v\u1edbi m\u1ed9t s\u1ed1 \\(n\\) \\((1 \\le n \\le 10^{18})\\) t\u00ednh \\(f_n \\bmod 1000000123\\).</p>"},{"location":"algo/trick/matrix-multiplication/#phan-tich_3","title":"Ph\u00e2n t\u00edch","text":"<p>C\u00e1ch l\u00e0m \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ta s\u1eed d\u1ee5ng quy ho\u1ea1ch \u0111\u1ed9ng v\u1edbi \\(4\\) tr\u1ea1ng th\u00e1i: </p> <ul> <li><code>added</code> : s\u1ed1 l\u01b0\u1ee3ng ch\u1eef s\u1ed1 \u0111\u00e3 th\u00eam v\u00e0o.</li> <li><code>ewoc</code> (even_with_odd_cnt) : s\u1ed1 ch\u1eef s\u1ed1 ch\u1eb5n \u0111\u00e3 xu\u1ea5t hi\u1ec7n l\u1ebb l\u1ea7n.</li> <li><code>owoc</code> (odd_with_odd_cnt) : s\u1ed1 ch\u1eef s\u1ed1 l\u1ebb \u0111\u00e3 xu\u1ea5t hi\u1ec7n l\u1ebb l\u1ea7n.</li> <li><code>added_odd</code> : s\u1ed1 ch\u1eef s\u1ed1 l\u1ebb \u0111\u00e3 xu\u1ea5t hi\u1ec7n. </li> </ul> <p>Ta kh\u00f4ng ph\u1ea3i l\u01b0u s\u1ed1 ch\u1eef s\u1ed1 ch\u1eb5n \u0111\u00e3 xu\u1ea5t hi\u1ec7n v\u00ec n\u1ebfu ch\u1eef s\u1ed1 ch\u1eb5n \u0111\u00f3 kh\u00f4ng xu\u1ea5t hi\u1ec7n th\u00ec c\u0169ng \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh v\u00e0o tr\u01b0\u1eddng h\u1ee3p n\u00f3 \u0111\u00e3 xu\u1ea5t hi\u1ec7n ch\u1eb5n l\u1ea7n r\u1ed3i.</p> <p>Do \u0111\u00f3, ta c\u00f3 c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng theo nh\u01b0 code sau:</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod = 1e9 + 123;\n\nint n;\nint dp[10005][6][6][6];\n\nlong long digit_dp(int added, int ewoc, int owoc, int added_odd) {\n\n    // Khi \u0111\u00e3 ch\u1ecdn \u0111\u1ee7 n ch\u1eef s\u1ed1\n    if (added == n) return (!ewoc &amp;&amp; owoc == added_odd);\n\n    if (dp[added][ewoc][owoc][added_odd] != -1) return dp[added][ewoc][owoc][added_odd];\n    long long cur = 0;\n\n    // Th\u00eam v\u00e0o 1 s\u1ed1 ch\u1eb5n \u0111\u00e3 xu\u1ea5t hi\u1ec7n l\u1ebb l\u1ea7n\n    if (ewoc) \n        cur += digit_dp(added + 1, ewoc - 1, owoc, added_odd) * ewoc;\n\n    // Th\u00eam v\u00e0o 1 s\u1ed1 ch\u1eb5n \u0111\u00e3 xu\u1ea5t hi\u1ec7n ch\u1eb5n l\u1ea7n\n    if (ewoc &lt; 5) \n        cur += digit_dp(added + 1, ewoc + 1, owoc, added_odd) * (5 - ewoc);\n\n    // Th\u00eam v\u00e0o 1 s\u1ed1 l\u1ebb ch\u01b0a xu\u1ea5t hi\u1ec7n\n    if (added_odd &lt; 5) \n        cur += digit_dp(added + 1, ewoc, owoc + 1, added_odd + 1) * (5 - added_odd); \n\n    // Th\u00eam v\u00e0o 1 s\u1ed1 l\u1ebb \u0111\u00e3 xu\u1ea5t hi\u1ec7n l\u1ebb l\u1ea7n\n    if (owoc) \n        cur += digit_dp(added + 1, ewoc, owoc - 1, added_odd) * owoc;\n\n    // Th\u00eam v\u00e0o 1 s\u1ed1 l\u1ebb \u0111\u00e3 xu\u1ea5t hi\u1ec7n ch\u1eb5n l\u1ea7n\n    if (owoc &lt; added_odd) \n        cur += digit_dp(added + 1, ewoc, owoc + 1, added_odd) * (added_odd - owoc);\n\n    // Kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i ch\u1ecdn \u0111\u1ee7 n ch\u1eef s\u1ed1\n    if (!ewoc &amp;&amp; owoc == added_odd) ++cur;\n\n    return dp[added][ewoc][owoc][added_odd] = cur % mod;\n}\n\nint solve(int n1) {\n    n = n1;\n    for (int i = 0; i &lt; n; ++i)\n        for (int j = 0; j &lt; 6; ++j)\n            for (int k = 0; k &lt; 6; ++k)\n                for (int l = 0; l &lt; 6; ++l) dp[i][j][k][l] = -1;\n\n    // Lo\u1ea1i tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn ph\u1ea3i s\u1ed1 0 v\u00f4 ngh\u0129a b\u1eb1ng c\u00e1ch \u0111\u1eb7t tr\u01b0\u1edbc ch\u1eef s\u1ed1 \u0111\u1ea7u ti\u00ean\n    long long tmp1 = digit_dp(1, 1, 0, 0) * 4; \n\n    long long tmp2 = digit_dp(1, 0, 1, 1) * 5;\n    return (tmp1 + tmp2) % mod;\n}\n\nint main(){ \n    int n1;\n    while (cin &gt;&gt; n1) cout &lt;&lt; solve(n1) &lt;&lt; '\\n';\n}\n</code></pre> <p>B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 k\u0129 thu\u1eadt quy ho\u1ea1ch \u0111\u1ed9ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy c\u00f3 nh\u1edb (Top-Down) t\u1ea1i \u0111\u00e2y.</p> <p>V\u00ec s\u1ed1 ch\u1eef s\u1ed1 l\u1ebb \u0111\u00e3 xu\u1ea5t hi\u1ec7n l\u1ebb l\u1ea7n kh\u00f4ng \u0111\u01b0\u1ee3c v\u01b0\u1ee3t qu\u00e1 s\u1ed1 ch\u1eef s\u1ed1 l\u1ebb \u0111\u00e3 xu\u1ea5t hi\u1ec7n, n\u00ean ta t\u1ed1i \u01b0u \u0111\u01b0\u1ee3c s\u1ed1 tr\u1ea1ng th\u00e1i xu\u1ed1ng c\u00f2n kho\u1ea3ng \\(6 \\times 6 \\times 6 \\space / \\space 2\\). Khi \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean s\u1ebd l\u00e0 \\(\\mathcal{O}(n \\times (6 \\times 6 \\times 6 \\space / \\space 2))\\).</p> <p>Tuy nhi\u00ean, v\u1edbi \\(n \\le 10^{18}\\) th\u00ec hi\u1ec3n nhi\u00ean thu\u1eadt to\u00e1n tr\u00ean s\u1ebd b\u1ecb qu\u00e1 c\u1ea3 th\u1eddi gian l\u1eabn b\u1ed9 nh\u1edb.</p> <p>Do \u0111\u00f3, ta c\u1ea7n ph\u1ea3i c\u1ea3i ti\u1ebfn thu\u1eadt to\u00e1n b\u1eb1ng l\u0169y th\u1eeba ma tr\u1eadn v\u1edbi s\u1ed1 tr\u1ea1ng th\u00e1i cho \\(1\\) l\u1edbp \\(\\mathrm{dp}\\) l\u00e0 \\(6 \\times 6 \\times 6 \\space / \\space 2 = 108\\).</p> <p>T\u1ed1i \u01b0u h\u00f3a thu\u1eadt to\u00e1n b\u1eb1ng c\u00e1ch t\u00e1ch \\(n\\) th\u00e0nh c\u00e1c l\u0169y th\u1eeba c\u1ee7a \\(2\\) sau \u0111\u00f3 s\u1eed d\u1ee5ng c\u00e1c ma tr\u1eadn h\u1ec7 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng \u0111\u00e3 t\u00ednh to\u00e1n tr\u01b0\u1edbc \u0111\u1ec3 t\u00ednh nhanh k\u1ebft qu\u1ea3.</p>"},{"location":"algo/trick/matrix-multiplication/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>L\u01b0u \u00fd: Trong c\u00e1ch c\u00e0i \u0111\u1eb7t sau, c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod = 1e9 + 123;\n\nusing type = int;\n\nstruct Matrix {\n    vector &lt;vector &lt;type&gt; &gt; data;\n\n    int row() const { return data.size(); } \n\n    int col() const { return data[0].size(); }\n\n    auto &amp; operator [] (int i) { return data[i]; }\n\n    const auto &amp; operator[] (int i) const { return data[i]; }\n\n    Matrix() = default;\n\n    Matrix(int r, int c): data(r, vector &lt;type&gt; (c)) { }\n\n    Matrix(const vector &lt;vector &lt;type&gt; &gt; &amp;d): data(d) { }\n\n    friend ostream &amp; operator &lt;&lt; (ostream &amp;out, const Matrix &amp;d) {\n        for (auto x : d.data) {\n            for (auto y : x) out &lt;&lt; y &lt;&lt; ' ';\n            out &lt;&lt; '\\n';\n        }\n        return out;\n    }\n\n    Matrix operator * (const Matrix &amp;b) {\n        Matrix a = *this;\n        assert(a.col() == b.row()); \n        Matrix c(a.row(), b.col());\n        for (int i = 0; i &lt; a.row(); ++i)\n            for (int j = 0; j &lt; b.col(); ++j)\n                for (int k = 0; k &lt; a.col(); ++k){\n                    c[i][j] += 1ll * a[i][k] % mod * (b[k][j] % mod) % mod;\n                    c[i][j] %= mod;\n                }\n        return c;\n    }\n};\n\nint last;\nint odd_id[6][6];\nMatrix coef, base;\nvector &lt;Matrix&gt; coef_pow;\n\nint id(int ewoc, int owoc, int added_odd) {\n    assert(owoc &lt;= added_odd);\n    return ewoc * last + odd_id[added_odd][owoc];\n};\n\n// X\u00e2y d\u1ef1ng ma tr\u1eadn h\u1ec7 s\u1ed1\nvoid build_coef() {\n    int ans_id = id(5, 5, 5) + 1;\n    coef = Matrix(ans_id + 1, ans_id + 1);\n\n    for (int added_odd = 0; added_odd &lt;= 5; ++added_odd)\n        for (int ewoc = 0; ewoc &lt;= 5; ++ewoc)\n            for (int owoc = 0; owoc &lt;= added_odd; ++owoc) {\n\n                int cur_id = id(ewoc, owoc, added_odd);\n                if (ewoc) \n                    coef[id(ewoc - 1, owoc, added_odd)][cur_id] += ewoc;\n\n                if (ewoc &lt; 5) \n                    coef[id(ewoc + 1, owoc, added_odd)][cur_id] += 5 - ewoc;\n\n                if (added_odd &lt; 5)\n                    coef[id(ewoc, owoc + 1, added_odd + 1)][cur_id] += 5 - added_odd;\n\n                if (owoc) \n                    coef[id(ewoc, owoc - 1, added_odd)][cur_id] += owoc;\n\n                if (owoc &lt; added_odd)\n                    coef[id(ewoc, owoc + 1, added_odd)][cur_id] += added_odd - owoc;\n\n                if (!ewoc &amp;&amp; owoc == added_odd) ++coef[ans_id][cur_id];\n            }\n\n    coef[ans_id][ans_id] = 1;\n}\n\n// X\u00e2y d\u1ef1ng ma tr\u1eadn c\u01a1 s\u1edf\nvoid build_base() {\n    int ans_id = id(5, 5, 5) + 1;\n    base = Matrix(ans_id + 1, 1);\n    base[id(1, 0, 0)][0] = 4;\n    base[id(0, 1, 1)][0] = 5;\n}\n\nint main() {\n    last = 0;\n    for (int added_odd = 0; added_odd &lt;= 5; ++added_odd)\n        for (int owoc = 0; owoc &lt;= added_odd; ++owoc)\n            odd_id[added_odd][owoc] = ++last;\n\n    build_base();\n    build_coef();\n\n    // T\u00ednh l\u0169y th\u1eeba ma tr\u1eadn h\u1ec7 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi l\u0169y th\u1eeba c\u1ee7a 2\n    coef_pow.push_back(coef);\n    for (int i = 1; i &lt;= 60; ++i)\n        coef_pow.push_back(coef_pow[i - 1] * coef_pow[i - 1]);\n\n    long long n;\n    while (cin &gt;&gt; n) {\n        Matrix ans = base;\n        for (int i = 0; n &gt; 0; n &gt;&gt;= 1, ++i)\n            if (n &amp; 1) ans = coef_pow[i] * ans;\n        cout &lt;&lt; ans[ans.row() - 1][0] &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/#anh-gia_3","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>Ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(6 \\times 6 \\times 6 \\space / \\space 2)\\) cho vi\u1ec7c x\u00e2y d\u1ef1ng ma tr\u1eadn h\u1ec7 s\u1ed1. </p> <p>V\u00ec ma tr\u1eadn k\u1ebft qu\u1ea3 c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 \\((\\)(s\u1ed1 tr\u1ea1ng th\u00e1i) \\(\\times \\space 1)\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 \\((\\)(s\u1ed1 tr\u1ea1ng th\u00e1i) \\(\\times\\) (s\u1ed1 tr\u1ea1ng th\u00e1i)\\()\\), n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u00e2n ma tr\u1eadn trong l\u00fac t\u00ednh k\u1ebft qu\u1ea3 l\u00e0 (s\u1ed1 tr\u1ea1ng th\u00e1i)\\(^2\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i (s\u1ed1 tr\u1ea1ng th\u00e1i)\\(^3\\). N\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0  \\(\\mathcal{O}(\\log{10^{18}} \\times 108^2)\\).</p> <p>Ngo\u00e0i ra, k\u1ec3 c\u1ea3 khi ta kh\u00f4ng gi\u1ea3m s\u1ed1 tr\u1ea1ng th\u00e1i xu\u1ed1ng c\u00f2n kho\u1ea3ng \\(6 \\times 6 \\times 6 \\space / \\space 2\\) th\u00ec thu\u1eadt to\u00e1n n\u00e0y v\u1eabn \u0111\u1ee7 t\u1ed1t.</p>"},{"location":"algo/trick/matrix-multiplication/#vi-du-5","title":"V\u00ed d\u1ee5 5","text":""},{"location":"algo/trick/matrix-multiplication/#bai-toan_4","title":"B\u00e0i to\u00e1n","text":"<p>Codeforces - 446C DZY Loves Fibonacci Numbers</p> <p>D\u00e3y \\(Fibonacci\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> <ul> <li>\\(F_1 = 1\\)</li> <li>\\(F_2 = 1\\)</li> <li>\\(...\\)</li> <li>\\(F_n = F_{n - 1} + F_{n - 2} \\space (n &gt; 2)\\)</li> </ul> <p>Cho m\u1ed9t d\u00e3y g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean: \\(a_1, a_2, ..., a_n\\). C\u00f3 \\(m\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n thu\u1ed9c m\u1ed9t trong hai d\u1ea1ng:</p> <ul> <li>D\u1ea1ng 1: <code>1 l r</code> : T\u0103ng m\u1ed7i ph\u1ea7n t\u1eed \\(a_i\\) th\u00eam \\(F_{i - l + 1}\\) , trong \u0111\u00f3 \\(l \\le i \\le r\\) .</li> <li>D\u1ea1ng 2: <code>2 l r</code> : In ra gi\u00e1 tr\u1ecb c\u1ee7a \\(\\displaystyle\\sum_{i = l}^{r} a_{i}\\) theo modulo \\(10^9 + 9\\) .</li> </ul> <p>H\u00e3y th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n.</p>"},{"location":"algo/trick/matrix-multiplication/#phan-tich_4","title":"Ph\u00e2n t\u00edch","text":"<p>B\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p quy n\u1ea1p, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ch\u1ee9ng minh \\(2\\) \u0111\u1ecbnh l\u00fd sau:</p> <ul> <li>\u0110\u1ecbnh l\u00ed 1: Cho d\u00e3y \\(f_1 = a, f_2 = b, ..., f_n = f_{n-1} + f_{n-2} \\space (n &gt; 2)\\) th\u00ec \\(f_n = b \\times F_{n-1} + a \\times F_{n-2} \\space (n &gt; 2)\\), trong \u0111\u00f3 \\(F_i\\) l\u00e0 s\u1ed1 h\u1ea1ng th\u1ee9 \\(i\\) c\u1ee7a d\u00e3y \\(Fibonacci\\).</li> <li>\u0110\u1ecbnh l\u00ed 2: Cho d\u00e3y \\(f_1 = a, f_2 = b, ..., f_n = f_{n-1} + f_{n-2} \\space (n &gt; 2)\\) th\u00ec \\(f_1 + f_2 + ... + f_n = f_{n + 2} - b\\) .</li> </ul> <p>Ta c\u00f2n c\u00f3 t\u00ednh ch\u1ea5t c\u1ee7a d\u00e3y \\(Fibonacci\\) nh\u01b0 sau: </p> <ul> <li>Ta c\u00f3 th\u1ec3 chuy\u1ec3n \u0111\u1ed5i hai s\u1ed1 h\u1ea1ng \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y \\(Fibonacci\\) \u0111\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c m\u1ed9t d\u00e3y m\u1edbi. </li> <li>G\u1ecdi \\(f1\\), \\(f2\\) l\u00e0 hai d\u00e3y m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o th\u00e0nh t\u1eeb vi\u1ec7c chuy\u1ec3n \u0111\u1ed5i hai s\u1ed1 h\u1ea1ng \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y \\(Fibonacci\\), v\u00e0 d\u00e3y \\(f3\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh nh\u01b0 sau \\(f3 \\displaystyle_{\\space i} = f1 \\displaystyle_{\\space i} + f2 \\displaystyle_{\\space i} \\space (i \\ge 1)\\) th\u00ec d\u00e3y \\(f3\\) v\u1eabn tu\u00e2n theo c\u00f4ng th\u1ee9c truy h\u1ed3i \\(f_n = f_{n-1} + f_{n-2}\\).</li> </ul> <p>Sau khi s\u1eed d\u1ee5ng c\u00e1c t\u00ednh ch\u1ea5t tr\u00ean, b\u00e0i to\u00e1n tr\u1edf th\u00e0nh m\u1ed9t ho\u1ea1t \u0111\u1ed9ng r\u1ea5t c\u01a1 b\u1ea3n c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n (C\u00e2y IT - Interval Tree / Segment Tree). V\u1edbi m\u1ed7i n\u00fat c\u1ee7a c\u00e2y ph\u00e2n \u0111o\u1ea1n l\u01b0u l\u1ea1i hai gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y. B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o code kh\u00f4ng s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p nh\u00e2n ma tr\u1eadn t\u1ea1i \u0111\u00e2y \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 c\u00e1ch c\u1eadp nh\u1eadt c\u00e2y ph\u00e2n \u0111o\u1ea1n.</p> <p>\u1ede b\u00e0i vi\u1ebft n\u00e0y, t\u00f4i s\u1ebd s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p nh\u00e2n ma tr\u1eadn k\u1ebft h\u1ee3p v\u1edbi c\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n. V\u1edbi m\u1ed7i n\u00fat c\u1ee7a c\u00e2y s\u1ebd l\u01b0u l\u1ea1i ma tr\u1eadn h\u1ec7 s\u1ed1 c\u1ee7a d\u00e3y \\(Fibonacci\\).</p>"},{"location":"algo/trick/matrix-multiplication/#cai-at_4","title":"C\u00e0i \u0111\u1eb7t","text":"<p>L\u01b0u \u00fd: Trong c\u00e1ch c\u00e0i \u0111\u1eb7t sau, c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod  = 1e9 + 9;\n\nstruct Matrix {\n    static const int size = 2;\n    int row, col;\n    int data[size][size];\n\n    Matrix(){\n        row = col = size;\n        for (int i = 0; i &lt; row; ++i) fill_n(data[i], col, 0);\n    };\n\n    auto &amp; operator [] (int i) { return data[i]; }\n\n    const auto &amp; operator[] (int i) const { return data[i]; }\n\n    // Ph\u00e9p c\u1ed9ng ma tr\u1eadn\n    Matrix operator + (const Matrix &amp;b) {\n        Matrix a = *this;\n        for (int i = 0; i &lt; a.row; ++i)\n            for (int j = 0; j &lt; a.col; ++j) \n                a[i][j] = (a[i][j] + b[i][j]) % mod;\n        return a;\n    }\n\n    Matrix operator * (const Matrix &amp;b) {\n        Matrix a = *this, c;\n        for (int i = 0; i &lt; a.row; ++i)\n            for (int j = 0; j &lt; b.col; ++j)\n                for (int k = 0; k &lt; a.col; ++k) {\n                    c[i][j] += 1ll * a[i][k] * (b[k][j] % mod) % mod;\n                    c[i][j] %= mod;\n                }\n        return c;\n    }\n\n    // Ki\u1ec3m tra xem t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u1ee7a ma tr\u1eadn c\u00f3 b\u1eb1ng 0 hay kh\u00f4ng\n    bool iszero() {\n        for (int i = 0; i &lt; size; ++i)\n            for (int j = 0; j &lt; size; ++j)\n                if (data[i][j]) return false;\n\n        return true;\n    }\n};\n\nconst int maxN = 3e5 + 10;\n\nint n, m;\nint a[maxN];\nint st[4 * maxN];\nMatrix lazy[4 * maxN], base_pow[4 * maxN];\n\nvoid build(int id, int l, int r) {\n    if (l == r) {\n        st[id] = a[l]; \n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    build(id &lt;&lt; 1, l, mid);\n    build(id &lt;&lt; 1 | 1, mid + 1, r);\n    st[id] = (st[id &lt;&lt; 1] + st[id &lt;&lt; 1 | 1]) % mod;\n}\n\nvoid fix(int id, int l, int r) {\n    if (lazy[id].iszero()) return;\n\n    long long a = lazy[id][0][1];\n    long long b = lazy[id][0][0];\n    int tmp = (r - l + 1) + 2;\n    st[id] += (b * base_pow[tmp - 1][0][1] + a * base_pow[tmp - 2][0][1] - b) % mod;\n    st[id] %= mod;\n\n    if (l != r) {\n        int mid = (r - l) &gt;&gt; 1;\n        lazy[id &lt;&lt; 1] = lazy[id &lt;&lt; 1] + lazy[id];\n        lazy[id &lt;&lt; 1 | 1] = lazy[id &lt;&lt; 1 | 1] + lazy[id] * base_pow[mid + 1];\n    }\n    lazy[id] = Matrix();\n}\n\nvoid update(int id, int l, int r, int u, int v) {\n    fix(id, l, r);\n    if (l &gt;  v || r &lt;  u) return;\n    if (l &gt;= u &amp;&amp; r &lt;= v) {\n        lazy[id] = lazy[id] + base_pow[l - u + 1];\n        fix(id, l, r);\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    update(id &lt;&lt; 1, l, mid, u, v);\n    update(id &lt;&lt; 1 | 1, mid + 1, r, u, v);\n    st[id] = (st[id &lt;&lt; 1] + st[id &lt;&lt; 1 | 1]) % mod;\n}\n\nint get(int id, int l, int r, int u, int v) {\n    fix(id, l, r);\n    if (l &gt;  v || r &lt;  u) return 0;\n    if (l &gt;= u &amp;&amp; r &lt;= v) return st[id];\n\n    int mid = (l + r) &gt;&gt; 1;\n    int g1 = get(id &lt;&lt; 1, l, mid, u, v);\n    int g2 = get(id &lt;&lt; 1 | 1, mid + 1, r, u, v);\n    return (g1 + g2) % mod;\n}\n\nmain() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n    build(1, 1, n);\n\n    // X\u00e2y d\u1ef1ng l\u0169y th\u1eeba ma tr\u1eadn h\u1ec7 s\u1ed1 c\u1ee7a d\u00e3y Fibonacci \n    base_pow[1][0][0] = base_pow[1][0][1] = base_pow[1][1][0] = 1;\n    for (int i = 2; i &lt;= n + 2; ++i) \n        base_pow[i] = base_pow[i - 1] * base_pow[1];\n\n    while (m--) {\n        int t, l, r; \n        cin &gt;&gt; t &gt;&gt; l &gt;&gt; r; \n        if (t == 1) update(1, 1, n, l, r);\n        else cout &lt;&lt; get(1, 1, n, l, r) &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/#anh-gia_4","title":"\u0110\u00e1nh gi\u00e1","text":"<p>\u1ede thu\u1eadt to\u00e1n n\u00e0y, ta s\u1eed d\u1ee5ng m\u1ea3ng t\u0129nh \u0111\u1ec3 l\u01b0u ma tr\u1eadn thay v\u00ec s\u1eed d\u1ee5ng m\u1ea3ng \u0111\u1ed9ng (Vector) nh\u01b0 nh\u1eefng b\u00e0i to\u00e1n tr\u01b0\u1edbc. V\u00ec s\u1ed1 l\u01b0\u1ee3ng ma tr\u1eadn ph\u1ea3i l\u01b0u l\u00ean \u0111\u1ebfn \\(4 \\times n\\) n\u00ean vi\u1ec7c khai b\u00e1o m\u1ea3ng \u0111\u1ed9ng s\u1ebd khi\u1ebfn thu\u1eadt to\u00e1n b\u1ecb qu\u00e1 th\u1eddi gian.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n, ta s\u1ebd m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(\\log{N})\\) cho c\u00e1c thao t\u00e1c tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n. V\u00e0 ta c\u0169ng m\u1ea5t th\u00eam \\(\\mathcal{O}(2^2)\\) v\u00e0 \\(\\mathcal{O}(2^3)\\) cho c\u00e1c ph\u00e9p c\u1ed9ng v\u00e0 ph\u00e9p nh\u00e2n ma tr\u1eadn. Nh\u00ecn chung, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(m \\times \\log{N} \\times 2^3)\\).</p>"},{"location":"algo/trick/matrix-multiplication/#vi-du-6","title":"V\u00ed d\u1ee5 6","text":""},{"location":"algo/trick/matrix-multiplication/#phep-nhan-ma-tran-cong-toi-thieu-min-plus-matrix-multiplication","title":"Ph\u00e9p nh\u00e2n ma tr\u1eadn c\u1ed9ng t\u1ed1i thi\u1ec3u (Min-plus matrix multiplication)","text":"<p>Tham kh\u1ea3o: Min-plus matrix multiplication</p> <p>Nh\u1eadn th\u1ea5y r\u1eb1ng, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 thay th\u1ebf ph\u00e9p nh\u00e2n v\u00e0 ph\u00e9p c\u1ed9ng trong \u0111\u1ecbnh ngh\u0129a ph\u00e9p nh\u00e2n ma tr\u1eadn, ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o gi\u1eef nguy\u00ean t\u00ednh ch\u1ea5t k\u1ebft h\u1ee3p. C\u1ee5 th\u1ec3 h\u01a1n, v\u1edbi \\(A\\) v\u00e0 \\(B\\) l\u00e0 hai ma tr\u1eadn vu\u00f4ng c\u1ea5p \\(n\\), thay v\u00ec \\(C_{ij} = \\displaystyle\\sum_{k = 1}^{n} A_{ik} B_{kj}\\) , ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a ph\u00e9p \"nh\u00e2n ma tr\u1eadn\" m\u1edbi nh\u01b0 sau: \\(C_{ij} = \\displaystyle\\min_{k = 1}^{n} (A_{ik} + B_{kj}\\)). N\u00f3 c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ph\u00e9p nh\u00e2n ma tr\u1eadn c\u1ed9ng t\u1ed1i thi\u1ec3u hay t\u00edch ma tr\u1eadn kho\u1ea3ng c\u00e1ch.</p> <p>T\u1eeb \u0111\u00f3, ta c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u1ed9t l\u1edbp c\u00e1c b\u00e0i to\u00e1n kh\u00e1c. Sau \u0111\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 minh ho\u1ea1 cho nh\u00f3m c\u00e1c b\u00e0i to\u00e1n n\u00e0y.</p>"},{"location":"algo/trick/matrix-multiplication/#bai-toan_5","title":"B\u00e0i to\u00e1n","text":"<p>CSES - Graph Paths II</p> <p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng c\u00f3 tr\u1ecdng s\u1ed1 g\u1ed3m \\(N\\) \u0111\u1ec9nh v\u00e0 \\(M\\) c\u1ea1nh. H\u00e3y t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t xu\u1ea5t ph\u00e1t t\u1eeb \u0111\u1ec9nh \\(1\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i \u0111\u1ec9nh \\(N\\) \u0111i qua ch\u00ednh x\u00e1c \\(k\\) c\u1ea1nh.</p> <ul> <li>\\(N \\le 100\\)</li> <li>\\(1 \\le M \\le N(N\u22121)\\)</li> <li>\\(1 \\le k \\le 10^9\\)</li> </ul>"},{"location":"algo/trick/matrix-multiplication/#phan-tich_5","title":"Ph\u00e2n t\u00edch","text":"<p>G\u1ecdi ma tr\u1eadn \\(C(k)\\) k\u00edch th\u01b0\u1edbc \\(N \\times N\\), v\u1edbi \\(C(k) [i,j]\\) l\u00e0 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) \u0111i qua \u0111\u00fang \\(k\\) c\u1ea1nh.</p> <p>X\u00e9t ma tr\u1eadn \\(A\\) l\u00e0 ma tr\u1eadn k\u1ec1 c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u00e3 cho. Ta c\u00f3:</p> <ul> <li>\\(C(1) = A\\)</li> <li>\\(C(2)[i,j] = \\min (A[i,u] + A[u,j])\\) v\u1edbi \\(1 \\le u \\le N\\)</li> <li>\\(C(k)[i,j] = \\min (C(k-1)[i,u] + A[u,j])\\) v\u1edbi \\(1 \\le u \\le N\\)</li> </ul> <p>Nh\u01b0 v\u1eady, n\u1ebfu ta thay ph\u00e9p nh\u00e2n v\u00e0 ph\u00e9p c\u1ed9ng trong nh\u00e2n ma tr\u1eadn th\u00f4ng th\u01b0\u1eddng l\u1ea7n l\u01b0\u1ee3t b\u1edfi ph\u00e9p c\u1ed9ng v\u00e0 ph\u00e9p l\u1ea5y min, ta thu \u0111\u01b0\u1ee3c m\u1ed9t ph\u00e9p \u201dnh\u00e2n ma tr\u1eadn\u201d m\u1edbi, k\u00fd hi\u1ec7u  l\u00e0 \\(\\star\\) , th\u00ec:</p> <p>\\(C(1) = A\\)</p> <p>\\(C(2) = C(1) \\star C(1) = A \\star C(1)\\)</p> <p>\\(C(3) = C(1) \\star C(2) = A \\star C(2)\\)</p> <p>\\(C(4) = C(1) \\star C(3) = A \\star C(3)\\)</p> <p>\\(...\\)</p> <p>\\(C(k) = C(1) \\star C(k-1) = A \\star C(k-1)\\)</p> <p>Do \u0111\u00f3, \\(C(k) = A^k\\)</p> <p>Nh\u01b0 v\u1eady, b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1ec1 b\u00e0i to\u00e1n t\u00ednh l\u0169y th\u1eeba c\u1ee7a m\u1ed9t ma tr\u1eadn, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 gi\u1ea3i t\u01b0\u01a1ng t\u1ef1 c\u00e1c v\u00ed d\u1ee5 tr\u01b0\u1edbc. C\u00e0i \u0111\u1eb7t ph\u00e9p nh\u00e2n ma tr\u1eadn m\u1edbi n\u00e0y ho\u00e0n to\u00e0n kh\u00f4ng ph\u1ee9c t\u1ea1p h\u01a1n c\u00e0i \u0111\u1eb7t ph\u00e9p nh\u00e2n ma tr\u1eadn th\u00f4ng th\u01b0\u1eddng. Vi\u1ec7c c\u00e0i \u0111\u1eb7t xin nh\u01b0\u1eddng l\u1ea1i cho b\u1ea1n \u0111\u1ecdc.</p>"},{"location":"algo/trick/matrix-multiplication/#phep-toan-ket-hop-va-o-phuc-tap-tinh-toan","title":"Ph\u00e9p to\u00e1n k\u1ebft h\u1ee3p v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n","text":""},{"location":"algo/trick/matrix-multiplication/#nhan-to-hop-day-ma-tran","title":"Nh\u00e2n t\u1ed5 h\u1ee3p d\u00e3y ma tr\u1eadn","text":"<p>Trong ph\u1ea7n C\u00e0i \u0111\u1eb7t, ta \u0111\u00e3 c\u00f3 thu\u1eadt to\u00e1n nh\u00e2n hai ma tr\u1eadn \\(A\\) k\u00edch c\u1ee1 \\((m \\times n)\\) v\u00e0 \\(B\\) k\u00edch c\u1ee1 \\((n \\times p)\\) c\u1ea7n \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(m \\times n \\times p)\\). Gi\u1ea3 s\u1eed ta c\u00f3 th\u00eam ma tr\u1eadn \\(C\\) c\u00f3 k\u00edch c\u1ee1 \\((p \\times q)\\) v\u00e0 ta c\u1ea7n t\u00ednh t\u00edch \\(A \\times B \\times C\\). X\u00e9t hai c\u00e1ch th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n n\u00e0y:</p> <ul> <li>C\u00e1ch 1: \\((A \\times B) \\times C\\) th\u1ef1c hi\u1ec7n nh\u00e2n \\(A\\) v\u00e0 \\(B\\) r\u1ed3i nh\u00e2n v\u1edbi \\(C\\) c\u1ea7n \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(m \\times n \\times p) + \\mathcal{O}(m \\times p \\times q) = \\mathcal{O}(m \\times p \\times (n + q))\\).</li> <li>C\u00e1ch 2: \\(A \\times (B \\times C)\\) th\u1ef1c hi\u1ec7n nh\u00e2n \\(B\\) v\u00e0 \\(C\\) r\u1ed3i nh\u00e2n v\u1edbi \\(A\\) c\u1ea7n \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n \\times p \\times q) + \\mathcal{O}(m \\times n \\times q) = \\mathcal{O}(n \\times q \\times (m + p))\\).</li> </ul> <p>Nh\u01b0 v\u1eady l\u00e0 hai c\u00e1ch th\u1ef1c hi\u1ec7n kh\u00e1c nhau c\u1ea7n hai \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00e1c nhau.  V\u00ed d\u1ee5:</p> <ul> <li>Cho \\(m = n = 500, p = 1000, q = 2\\). C\u00e1ch 1 s\u1ebd c\u1ea7n t\u1edbi \\(500 \\times 1000 \\times (500 + 2) = 251 \\times 10^6\\) ph\u00e9p t\u00ednh, trong khi c\u00e1ch 2 ch\u1ec9 c\u1ea7n \\(500 \\times 2 \\times (500 + 1000) = 1.5 \\times 10^6\\) ph\u00e9p t\u00ednh, ngh\u0129a l\u00e0 c\u00e1ch 1 ch\u1eadm h\u01a1n c\u00e1ch 2 t\u1edbi g\u1ea7n \\(200\\) l\u1ea7n.</li> </ul> <p>Khi \u0111\u1ed9 d\u00e0i c\u1ee7a d\u00e3y ma tr\u1eadn t\u0103ng l\u00ean, s\u1ef1 kh\u00e1c bi\u1ec7t c\u00f3 th\u1ec3 c\u00f2n l\u1edbn h\u01a1n n\u1eefa. V\u00ed d\u1ee5 tr\u00ean \u0111\u00e3 cho th\u1ea5y r\u1eb1ng trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p th\u1ee9 t\u1ef1 th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n ma tr\u1eadn c\u00f3 \u00fd ngh\u0129a r\u1ea5t l\u1edbn \u0111\u1ed1i v\u1edbi vi\u1ec7c t\u00ecm l\u1eddi gi\u1ea3i c\u1ee7a c\u00e1c b\u00e0i to\u00e1n.</p> <p>Trong th\u1ef1c t\u1ebf, b\u00e0i to\u00e1n x\u00e1c \u0111\u1ecbnh th\u1ee9 t\u1ef1 nh\u00e2n ma tr\u1eadn hi\u1ec7u qu\u1ea3 nh\u1ea5t l\u00e0 m\u1ed9t b\u00e0i to\u00e1n r\u1ea5t ph\u1ed5 bi\u1ebfn, b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ecdc chi ti\u1ebft th\u00eam t\u1ea1i \u0111\u00e2y ho\u1eb7c \u1edf Ph\u1ea7n 3 m\u1ee5c 3.5 Ph\u00e9p Nh\u00e2n T\u1ed5 H\u1ee3p d\u00e3y Ma Tr\u1eadn trong s\u00e1ch Gi\u1ea3i thu\u1eadt v\u00e0 l\u1eadp tr\u00ecnh c\u1ee7a th\u1ea7y L\u00ea Minh Ho\u00e0ng.</p>"},{"location":"algo/trick/matrix-multiplication/#giai-thuat-freivalds-kiem-tra-tich-hai-ma-tran","title":"Gi\u1ea3i thu\u1eadt Freivalds ki\u1ec3m tra t\u00edch hai ma tr\u1eadn","text":"<p>Gi\u1ea3i thu\u1eadt Freivalds l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh v\u1ec1 vi\u1ec7c \u00e1p d\u1ee5ng th\u1ee9 t\u1ef1 th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n ma tr\u1eadn \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n c\u1ee7a ph\u00e9p nh\u00e2n m\u1ed9t d\u00e3y ma tr\u1eadn. B\u00e0i to\u00e1n \u0111\u1eb7t ra l\u00e0 cho ba ma tr\u1eadn vu\u00f4ng \\(A, B, C\\) c\u00f3 k\u00edch c\u1ee1 \\(N \\times N\\) v\u1edbi \\(N \\le 1000\\). Ta c\u1ea7n ki\u1ec3m tra xem \\(C\\) c\u00f3 ph\u1ea3i l\u00e0 t\u00edch c\u1ee7a \\(A\\) v\u00e0 \\(B\\), n\u00f3i c\u00e1ch kh\u00e1c ta c\u1ea7n ki\u1ec3m tra \\(A \\times B = C\\) c\u00f3 ph\u1ea3i l\u00e0 m\u1ec7nh \u0111\u1ec1 \u0111\u00fang hay kh\u00f4ng (\u0111\u00e2y ch\u00ednh l\u00e0 b\u00e0i VMATRIX - VNOI Marathon 2014).</p>"},{"location":"algo/trick/matrix-multiplication/#phan-tich_6","title":"Ph\u00e2n t\u00edch","text":"<p>C\u00e1ch l\u00e0m th\u00f4ng th\u01b0\u1eddng l\u00e0 nh\u00e2n tr\u1ef1c ti\u1ebfp hai ma tr\u1eadn \\(A, B\\) r\u1ed3i so s\u00e1nh k\u1ebft qu\u1ea3 v\u1edbi \\(C\\). Nh\u01b0 \u0111\u00e1nh gi\u00e1 trong ph\u1ea7n C\u00e0i \u0111\u1eb7t, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y l\u00e0 \\(\\mathcal{O}(N^3)\\), v\u1edbi \\(N = 1000\\) th\u00ec c\u00e1ch l\u00e0m n\u00e0y kh\u00f4ng \u0111\u1ee7 nhanh. Gi\u1ea3i thu\u1eadt \\(\\mathrm{Freivalds}\\) th\u1ef1c hi\u1ec7n vi\u1ec7c ki\u1ec3m tra th\u00f4ng qua thu\u1eadt to\u00e1n x\u00e1c su\u1ea5t ki\u1ec3u Monte Carlo v\u1edbi \\(k\\) l\u1ea7n th\u1eed cho x\u00e1c su\u1ea5t k\u1ebft lu\u1eadn sai l\u00e0 x\u1ea5p x\u1ec9 \\(2^{-k}\\), m\u1ed7i l\u1ea7n th\u1eed c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N^2)\\). C\u00e1c b\u01b0\u1edbc c\u01a1 b\u1ea3n c\u1ee7a m\u1ed9t ph\u00e9p th\u1eed \\(\\mathrm{Freivalds}\\) nh\u01b0 sau:</p> <ol> <li>Sinh ng\u1eabu nhi\u00ean m\u1ed9t ma tr\u1eadn \\(v\\) k\u00edch c\u1ee1 \\((N \\times 1)\\) v\u1edbi c\u00e1c ph\u1ea7n t\u1eed ch\u1ec9 nh\u1eadn gi\u00e1 tr\u1ecb \\(0\\) ho\u1eb7c \\(1\\).</li> <li>T\u00ednh hi\u1ec7u \\(P = A \\times B \\times v - C \\times v\\). D\u1ec5 th\u1ea5y r\u1eb1ng \\(P\\) l\u00e0 ma tr\u1eadn k\u00edch c\u1ee1 \\(N \\times 1\\).</li> <li>Tr\u1ea3 v\u1ec1 <code>True</code> n\u1ebfu \\(P\\) ch\u1ec9 g\u1ed3m ph\u1ea7n t\u1eed \\(0\\) (b\u1eb1ng v\u1edbi vector \\(0\\)) v\u00e0 <code>False</code> n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i. </li> </ol> <p>B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 ph\u00e9p c\u1ed9ng tr\u1eeb ma tr\u1eadn t\u1ea1i \u0111\u00e2y.</p> <p>Ta th\u1ef1c hi\u1ec7n \\(k\\) l\u1ea7n th\u1eed, n\u1ebfu g\u1eb7p ph\u00e9p th\u1eed tr\u1ea3 v\u1ec1 <code>False</code> th\u00ec ta k\u1ebft lu\u1eadn l\u00e0 \\(A \\times B \\neq C\\). Ng\u01b0\u1ee3c l\u1ea1i n\u1ebfu sau \\(k\\) ph\u00e9p th\u1eed m\u00e0 lu\u00f4n th\u1ea5y <code>True</code> th\u00ec ta k\u1ebft lu\u1eadn \\(A \\times B = C\\). V\u00ec x\u00e1c su\u1ea5t l\u1ed7i gi\u1ea3m theo h\u00e0m m\u0169 c\u1ee7a \\(k\\) n\u00ean th\u00f4ng th\u01b0\u1eddng ch\u1ec9 c\u1ea7n ch\u1ecdn \\(k\\) v\u1eeba \u0111\u1ee7 l\u00e0 s\u1ebd thu \u0111\u01b0\u1ee3c x\u00e1c su\u1ea5t \u0111\u00fang r\u1ea5t cao (\\(k = 5\\) v\u1edbi b\u00e0i VMATRIX \u1edf tr\u00ean). M\u1ed9t nh\u1eadn x\u00e9t quan tr\u1ecdng kh\u00e1c l\u00e0 c\u1eadn tr\u00ean c\u1ee7a \u0111\u00e1nh gi\u00e1 x\u00e1c su\u1ea5t ki\u1ec3m tra l\u1ed7i kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o k\u00edch c\u1ee1 \\(N\\) c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c cho m\u00e0 ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o s\u1ed1 l\u1ea7n th\u1ef1c hi\u1ec7n ph\u00e9p th\u1eed.</p> <p>X\u00e9t b\u01b0\u1edbc th\u1ee9 \\(2\\), ta th\u1ea5y r\u1eb1ng ph\u00e9p th\u1eed \\(\\mathrm{Freivalds}\\) ch\u1ec9 c\u00f3 \u00fd ngh\u0129a n\u1ebfu nh\u01b0 ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n \\(A \\times B \\times v\\) trong th\u1eddi gian \\(\\mathcal{O}(N^2)\\) (v\u00ec ph\u00e9p nh\u00e2n \\(C \\times v\\) \u0111\u00e3 \u0111\u1ea1t s\u1eb5n \\(\\mathcal{O}(N^2)\\) r\u1ed3i). Thay v\u00ec th\u1ef1c hi\u1ec7n tu\u1ea7n t\u1ef1 t\u1eeb tr\u00e1i qua ph\u1ea3i s\u1ebd c\u1ea7n \\(\\mathcal{O}(N^3)\\), ta th\u1ef1c hi\u1ec7n theo th\u1ee9 t\u1ef1 \\(A \\times (B \\times v)\\). V\u00ec k\u1ebft qu\u1ea3 c\u1ee7a ph\u00e9p nh\u00e2n \\(B\\) v\u00e0 \\(v\\) l\u00e0 m\u1ed9t ma tr\u1eadn \\((N \\times 1)\\) n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng c\u1ed9ng s\u1ebd l\u00e0 \\(\\mathcal{O}(N^2)\\). Tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c ph\u00e9p th\u1eed, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(k \\times N^2)\\). </p>"},{"location":"algo/trick/matrix-multiplication/#cai-at_5","title":"C\u00e0i \u0111\u1eb7t","text":"<p>B\u00e0i to\u00e1n VMATRIX - VNOI Marathon 2014</p> <p>L\u01b0u \u00fd: Trong c\u00e1ch c\u00e0i \u0111\u1eb7t sau, c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(0\\) \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c x\u1eed l\u00ed.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int mod = 10;\n\nusing type = int;\n\nstruct Matrix {\n    vector &lt;vector &lt;type&gt; &gt; data;\n\n    int row() const { return data.size(); } \n\n    int col() const { return data[0].size(); }\n\n    auto &amp; operator [] (int i) { return data[i]; }\n\n    const auto &amp; operator[] (int i) const { return data[i]; }\n\n    Matrix() = default;\n\n    Matrix(int r, int c): data(r, vector &lt;type&gt; (c)) { }\n\n    Matrix(const vector &lt;vector &lt;type&gt; &gt; &amp;d): data(d) { }\n\n    friend ostream &amp; operator &lt;&lt; (ostream &amp;out, const Matrix &amp;d) {\n        for (auto x : d.data) {\n            for (auto y : x) out &lt;&lt; y &lt;&lt; ' ';\n            out &lt;&lt; '\\n';\n        }\n        return out;\n    }\n\n    // Ph\u00e9p tr\u1eeb ma tr\u1eadn\n    Matrix operator - (const Matrix &amp;b) {\n        Matrix a = *this;\n\n        // Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n ph\u00e9p tr\u1eeb ma tr\u1eadn\n        assert(a.row() == b.row() &amp;&amp; a.col() == b.col()); \n\n        for (int i = 0; i &lt; a.row(); ++i)\n            for (int j = 0; j &lt; a.col(); ++j) \n                a[i][j] = (a[i][j] - b[i][j] + mod) % mod;\n        return a;\n    }\n\n    Matrix operator * (const Matrix &amp;b) {\n        Matrix a = *this;\n        assert(a.col() == b.row()); \n        Matrix c(a.row(), b.col());\n        for (int i = 0; i &lt; a.row(); ++i)\n            for (int j = 0; j &lt; b.col(); ++j)\n                for (int k = 0; k &lt; a.col(); ++k){\n                    c[i][j] += a[i][k] % mod * (b[k][j] % mod) % mod;\n                    c[i][j] %= mod;\n                }\n        return c;\n    }\n};\n\nmt19937 rd(chrono::steady_clock::now().time_since_epoch().count());\n\nint random(int l, int r) { return l + rd() % (r - l + 1); }\n\nbool check(Matrix a, Matrix b, Matrix c, int n) {\n    int k = 5;\n    while (k--) {\n        Matrix v(n, 1);\n        for (int i = 0; i &lt; n; ++i) v[i][0] = random(0, 1);\n        Matrix p = (a * (b * v)) - (c * v);\n        for (int i = 0; i &lt; n; ++i) \n            if (p[i][0]) return false;\n    }\n    return true;\n}\n\nint main(){\n    int t;\n    cin &gt;&gt; t;\n    while (t--) {\n        int n;\n        cin &gt;&gt; n;\n        Matrix a(n, n), b(n, n), c(n, n);\n        for (int i = 0; i &lt; 3 * n; ++i) {\n            string s;\n            cin &gt;&gt; s;\n            for (int j = 0; j &lt; s.size(); ++j) {\n                if (i / n == 0) a[i][j] = s[j] - '0';\n                if (i / n == 1) b[i - n][j] = s[j] - '0';\n                if (i / n == 2) c[i - n - n][j] = s[j] - '0';\n            }\n        }\n\n        if (check(a, b, c, n)) cout &lt;&lt; \"YES\\n\";\n        else cout &lt;&lt; \"NO\\n\";\n    }\n}\n</code></pre>"},{"location":"algo/trick/matrix-multiplication/#anh-gia_5","title":"\u0110\u00e1nh gi\u00e1","text":"<p>Ngo\u00e0i thu\u1eadt to\u00e1n tr\u00ean, ta v\u1eabn c\u00f3 th\u1ec3 nh\u00e2n tr\u1ef1c ti\u1ebfp \\(2\\) ma tr\u1eadn \\(A, B\\) r\u1ed3i so s\u00e1nh v\u1edbi \\(C\\) b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n nh\u00e2n ma tr\u1eadn \\(\\mathrm{Strassen}\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(N^{\\log_2{7}}) = \\mathcal{O}(1000^{\\log_2{7}}) \\approx \\mathcal{O}(2.6 \\times 10^8)\\). Tuy nhi\u00ean, c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y ph\u1ee9c t\u1ea1p h\u01a1n.</p>"},{"location":"algo/trick/matrix-multiplication/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Codeforces - 1182E Product Oriented Recurrence</li> <li>HackerEarth - PK and interesting language</li> <li>HackerEarth - Long walks from Office to Home Sweet Home</li> <li>HackerEarth - Tiles</li> <li>HackerEarth - ABCD Strings</li> <li>HackerEarth - Mehta and the difficult task</li> <li>HackerEarth - Mehta and the Evil Strings</li> <li>VNOJ - PA06ANT</li> <li>VNOJ - ONE4EVER</li> <li>VNOJ - CONNECTE</li> <li>VNOJ - DHLOCO</li> <li>VNOJ - FBRICK</li> </ul>"},{"location":"algo/trick/mitm/","title":"Meet In The Middle (MITM)","text":""},{"location":"algo/trick/mitm/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>MITM l\u00e0 m\u1ed9t k\u1ef9 thu\u1eadt t\u00ecm ki\u1ebfm \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi \u0111\u1ea7u v\u00e0o nh\u1ecf nh\u01b0ng kh\u00f4ng \u0111\u1ee7 nh\u1ecf \u0111\u1ec3 c\u00f3 th\u1ec3 quay lui (backtracking). Tr\u01b0\u1edbc khi ti\u1ebfp t\u1ee5c v\u1ec1 k\u1ef9 thu\u1eadt MITM, ch\u00fang ta c\u1ea7n xem x\u00e9t b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n sau:</p>"},{"location":"algo/trick/mitm/#cses-meet-in-the-middle","title":"CSES - Meet in the Middle","text":""},{"location":"algo/trick/mitm/#e-bai","title":"\u0110\u1ec1 b\u00e0i","text":"<p>Cho m\u1ea3ng \\(t\\) c\u00f3 \\(N\\) ph\u1ea7n t\u1eed. H\u1ecfi c\u00f3 bao nhi\u00eau c\u00e1ch ch\u1ecdn t\u1eadp con sao cho t\u1ed5ng b\u1eb1ng \\(x\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le N\\le40\\) - \\(1\\le x\\le10^9\\) - \\(1\\le t_i\\le10^9\\)</p>"},{"location":"algo/trick/mitm/#thuat-toan-ngay-tho-quay-lui-backtracking","title":"Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1: Quay lui (Backtracking)","text":""},{"location":"algo/trick/mitm/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>Ta duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con c\u00f3 th\u1ec3 c\u00f3 r\u1ed3i c\u1eadp nh\u1eadt k\u1ebft qu\u1ea3 b\u1eb1ng \u0111\u1ec7 quy (m\u1ed9t c\u00e1ch kh\u00e1c \u0111\u1ec3 duy\u1ec7t qua c\u00e1c t\u1eadp con l\u00e0 s\u1eed d\u1ee5ng bitmask )."},{"location":"algo/trick/mitm/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>long long cnt;\n// quay lui \u0111\u1ebfn ph\u1ea7n t\u1eed th\u1ee9 i\n// trong i-1 ph\u1ea7n t\u1eed \u0111\u1ea7u, t\u1ed5ng c\u00e1c t[i] trong t\u1eadp l\u00e0 sum\nvoid Try(int i, int sum) {\n    // ti\u1ebfp t\u1ee5c quay lui v\u1edbi t\u1eadp c\u00f3 sum &gt; x l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft\n    if (sum &gt; x) return;\n\n    if (i &gt; n) {\n        if (sum == x) ++cnt;\n    }\n    else {\n        // kh\u00f4ng l\u1ea5y ph\u1ea7n t\u1eed th\u1ee9 i\n        Try(i + 1, sum);\n        // l\u1ea5y ph\u1ea7n t\u1eed th\u1ee9 i\n        Try(i + 1, sum + t[i]);\n    }\n}\nlong long solve() {\n    cnt = 0;\n    Try(1, 0);\n    return cnt;\n}\n</code></pre> <p>Thu\u1eadt to\u00e1n tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 \\(\\mathcal{O}(2^N)\\), kh\u00f4ng \u0111\u1ee7 nhanh \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n b\u1edfi v\u00ec \\(2^{40}\\) kh\u00e1 l\u1edbn. Do \u0111\u00f3, ta c\u1ea7n t\u00ecm m\u1ed9t ph\u01b0\u01a1ng \u00e1n t\u1ed1i \u01b0u h\u01a1n.</p>"},{"location":"algo/trick/mitm/#thuat-toan-toi-uu-ky-thuat-mitm","title":"Thu\u1eadt to\u00e1n t\u1ed1i \u01b0u: k\u1ef9 thu\u1eadt MITM","text":"<p>K\u1ef9 thu\u1eadt MITM \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 nh\u01b0 sau: - \u0110\u1eb7t \\(K=N/2\\) - Chia \\(N\\) ph\u1ea7n t\u1eed th\u00e0nh \\(2\\) t\u1eadp:     - T\u1eadp \\(X\\) bao g\u1ed3m \\(K\\) ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean.     - T\u1eadp \\(Y\\) bao g\u1ed3m t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i. - Quay lui \u1edf t\u1eadp \\(X\\) v\u00e0 l\u01b0u t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 t\u1eadp con v\u00e0o m\u1ea3ng \\(A\\). T\u01b0\u01a1ng t\u1ef1, quay lui \u1edf t\u1eadp \\(Y\\) v\u00e0 l\u01b0u t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 t\u1eadp con v\u00e0o m\u1ea3ng \\(B\\). Do \u0111\u00f3, k\u00edch th\u01b0\u1edbc t\u1ed1i \u0111a c\u1ee7a m\u1ed7i m\u1ea3ng \\(A\\) v\u00e0 \\(B\\) l\u00e0 \\(2^K\\). - B\u00e2y gi\u1edd, ta c\u1ea7n k\u1ebft h\u1ee3p \\(2\\) m\u1ea3ng \\(A\\) v\u00e0 \\(B\\):     - C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 l\u1eb7p qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a \\(A\\), v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed, ta duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed c\u1ee7a \\(B\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(2^K\\times2^K)=\\mathcal{O}(2^{N})\\) (kh\u00f4ng \u0111\u1ee7 nhanh)     - \u0110\u1ec3 t\u1ed1i \u01b0u, ta s\u1eafp x\u1ebfp m\u1ea3ng \\(B\\) tr\u01b0\u1edbc. Sau \u0111\u00f3, l\u1eb7p qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a \\(A\\), v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed, ta s\u1eed d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n trong m\u1ea3ng \\(B\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(2^K\\times\\log_2{2^K})=\\mathcal{O}(2^KK)\\)     - M\u1ed9t c\u00e1ch t\u1ed1i \u01b0u kh\u00e1c l\u00e0 ta s\u1eafp x\u1ebfp c\u1ea3 \\(2\\) m\u1ea3ng \\(A\\) v\u00e0 \\(B\\) tr\u01b0\u1edbc, sau \u0111\u00f3 s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt hai con tr\u1ecf. \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(\\text{sort algorithm})+\\mathcal{O}(2^K)\\)</p>"},{"location":"algo/trick/mitm/#cai-at-su-dung-tim-kiem-nhi-phan","title":"C\u00e0i \u0111\u1eb7t (s\u1eed d\u1ee5ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n)","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 40 + 2;\nint n, x;\nint t[N];\nvector&lt;int&gt; A, B;\n\nvoid TryX(int i, int sum) {\n    if (sum &gt; x) return;\n\n    if (i &gt; n / 2) A.push_back(sum);\n    else {\n        TryX(i + 1, sum);\n        TryX(i + 1, sum + t[i]);\n    }\n}\nvoid TryY(int i, int sum) {\n    if (sum &gt; x) return;\n\n    if (i &gt; n) B.push_back(sum);\n    else {\n        TryY(i + 1, sum);\n        TryY(i + 1, sum + t[i]);\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; x;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; t[i];\n\n    // Quay lui 2 t\u1eadp X v\u00e0 Y\n    TryX(1, 0);\n    TryY(n / 2 + 1, 0);\n\n    // S\u1eafp x\u1ebfp m\u1ea3ng B\n    sort(B.begin(), B.end());\n\n    // L\u1eb7p qua m\u1ea3ng A v\u00e0 t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n:\n    // - \u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed trong B c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng x - A[i]\n    long long cnt = 0;\n    for (int sum : A) {\n        cnt += upper_bound(B.begin(), B.end(), x - sum)\n             - lower_bound(B.begin(), B.end(), x - sum);\n    }\n    cout &lt;&lt; cnt &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"algo/trick/mitm/#cai-at-su-dung-ky-thuat-hai-con-tro","title":"C\u00e0i \u0111\u1eb7t (s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt hai con tr\u1ecf)","text":"<pre><code>    // Quay lui 2 t\u1eadp X v\u00e0 Y\n    TryX(1, 0);\n    TryY(n / 2 + 1, 0);\n\n    // S\u1eafp x\u1ebfp m\u1ea3ng A v\u00e0 B\n    sort(A.begin(), A.end(), greater&lt;int&gt;());\n    sort(B.begin(), B.end());\n\n    // S\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt 2 con tr\u1ecf\n    long long cnt = 0;\n    for (int i = 0, j1 = 0, j2 = 0; i &lt; A.size(); ++i) {\n        int s = x - A[i]; // c\u1ea7n \u0111\u1ebfm l\u01b0\u1ee3ng B[j] tho\u1ea3 B[j] = s\n        while (j1 &lt; B.size() &amp;&amp; B[j1] &lt; s) ++j1;\n        while (j2 &lt; B.size() &amp;&amp; B[j2] &lt;= s) ++j2;\n        cnt += j2 - j1;\n    }\n    cout &lt;&lt; cnt &lt;&lt; '\\n';\n</code></pre>"},{"location":"algo/trick/mitm/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"algo/trick/mitm/#bai-toan-1-vnoj-cai-tui-1","title":"B\u00e0i to\u00e1n 1: VNOJ - C\u00e1i t\u00fai 1","text":"<p>C\u00f3 \\(N\\) c\u1ee5c v\u00e0ng, m\u1ed7i c\u1ee5c v\u00e0ng c\u00f3 tr\u1ecdng l\u01b0\u1ee3ng \\(W_i\\) v\u00e0 gi\u00e1 tr\u1ecb \\(V_i\\). B\u1ea1n c\u00f3 m\u1ed9t c\u00e1i t\u00fai c\u00f3 t\u1ea3i tr\u1ecdng t\u1ed1i \u0111a l\u00e0 \\(M\\). H\u1ecfi t\u1ed5ng gi\u00e1 tr\u1ecb v\u00e0ng l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u00e0 kh\u00f4ng l\u00e0m r\u00e1ch t\u00fai.</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le N\\le40\\) - \\(1\\le M\\le10^9\\) - \\(1\\le W_i, V_i\\le10^8\\)</p>"},{"location":"algo/trick/mitm/#y-tuong_1","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u00c1p d\u1ee5ng MITM, ta t\u00e1ch \\(N\\) c\u1ee5c v\u00e0ng th\u00e0nh \\(2\\) t\u1eadp \\(X\\) v\u00e0 \\(Y\\), t\u1eadp \\(X\\) ch\u1ee9a \\(N/2\\) c\u1ee5c v\u00e0ng \u0111\u1ea7u ti\u00ean v\u00e0 t\u1eadp \\(Y\\) ch\u1ee9a ph\u1ea7n c\u00f2n l\u1ea1i.</p> <p>B\u00e2y gi\u1edd, quay lui cho v\u1edbi m\u1ed7i t\u1eadp \\(X\\) v\u00e0 \\(Y\\), ta \u0111\u01b0\u1ee3c \\(2\\) t\u1eadp \\(A\\) v\u00e0 \\(B\\) ch\u1ee9a c\u00e1c c\u1eb7p (t\u1ed5ng tr\u1ecdng l\u01b0\u1ee3ng \\(sumW\\), t\u1ed5ng gi\u00e1 tr\u1ecb \\(sumV\\)) c\u1ee7a c\u00e1c t\u1eadp con.</p> <p>\u0110\u1ec3 k\u1ebft h\u1ee3p \\(2\\) t\u1eadp \\(A\\) v\u00e0 \\(B\\), ta c\u1ea7n gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n con: V\u1edbi m\u1ed7i c\u1eb7p \\((sumW_i, sumV_i)\\) c\u1ee7a t\u1eadp \\(A\\), ta c\u1ea7n t\u00ecm m\u1ed9t c\u1eb7p \\((sumW_j, sumV_j)\\) trong t\u1eadp \\(B\\) sao cho \\(sumW_j\\le M-sumW_i\\) v\u00e0 \\(sumV_j\\) l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>\u0110\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n con n\u00e0y, g\u1ee3i \u00fd l\u00e0 s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng \\(B\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a \\(sumW_j\\) v\u00e0 \u0111\u1eb7t \\(maxSumV_j=max(sumV_1, \\ldots,sumV_j)\\) (ph\u1ea7n n\u00e0y c\u00f3 th\u1ec3 t\u00ednh nhanh b\u1eb1ng m\u1ea3ng c\u1ed9ng d\u1ed3n).</p>"},{"location":"algo/trick/mitm/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 40 + 2, MaxSize = (1 &lt;&lt; 20) + 10;\nint n, m;\nint w[N], v[N];\n\nlong long sumVA[MaxSize];\nint sumWA[MaxSize];\nint sizeA;\n\npair&lt;int, long long&gt; B[MaxSize];\nint sizeB;\nint sumWB[MaxSize];\nlong long maxSumVB[MaxSize];\n\nvoid TryX(int i, int sumW, long long sumV) {\n    if (sumW &gt; m) return;\n    if (i &gt; n / 2) {\n        ++sizeA;\n        sumWA[sizeA] = sumW;\n        sumVA[sizeA] = sumV;\n        return;\n    }\n    TryX(i + 1, sumW, sumV);\n    TryX(i + 1, sumW + w[i], sumV + v[i]);\n}\n\nvoid TryY(int i, int sumW, long long sumV) {\n    if (sumW &gt; m) return;\n    if (i &gt; n) {\n        ++sizeB;\n        B[sizeB].first  = sumW;\n        B[sizeB].second = sumV;\n        return;\n    }\n    TryY(i + 1, sumW, sumV);\n    TryY(i + 1, sumW + w[i], sumV + v[i]);\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; w[i] &gt;&gt; v[i];\n\n    TryX(1, 0, 0);\n    TryY(n / 2 + 1, 0, 0);\n    sort(B + 1, B + sizeB + 1);\n    for (int i = 1; i &lt;= sizeB; ++i) {\n        sumWB[i]    = B[i].first;\n        maxSumVB[i] = max(maxSumVB[i - 1], B[i].second);\n    }\n\n    long long maxValue = 0;\n    for (int i = 1; i &lt;= sizeA; ++i) {\n        int j    = upper_bound(sumWB + 1, sumWB + sizeB + 1, m - sumWA[i]) - sumWB - 1;\n        maxValue = max(maxValue, sumVA[i] + maxSumVB[j]);\n    }\n    cout &lt;&lt; maxValue;\n}\n</code></pre>"},{"location":"algo/trick/mitm/#bai-toan-2","title":"B\u00e0i to\u00e1n 2","text":"<p>Cho m\u1ea3ng \\(a\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean, \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng d\u00e3y con t\u0103ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(3\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le n\\le2000\\) - \\(1\\le a_i\\le10^9\\)</p>"},{"location":"algo/trick/mitm/#y-tuong_2","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u0110\u1eb7t \\(a_i, a_j, a_k (i&lt;j&lt;k)\\) \u1ee9ng v\u1edbi m\u1ed9t d\u00e3y con t\u0103ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(3\\).</p> <p>Theo c\u00e1ch l\u00e0m ng\u00e2y th\u01a1, v\u1edbi m\u1ed7i \\(i\\), ta \u0111\u1ebfm s\u1ed1 c\u1eb7p \\((j,k)\\) tho\u1ea3 m\u00e3n trong \\(\\mathcal{O}(n^2)\\), t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian s\u1ebd l\u00e0 \\(\\mathcal{O}(n^3)\\).</p> <p>Ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng \"middle\" nh\u01b0 sau: thay v\u00ec x\u00e9t \\(i\\) \u0111\u1ea7u ti\u00ean, ta x\u00e9t \\(j\\) \u0111\u1ea7u ti\u00ean. V\u1edbi m\u1ed7i \\(j\\), ta \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng \\(i&lt;j\\) tho\u1ea3 \\(a_i &lt; a_j\\) v\u00e0 \\(k&gt;j\\) tho\u1ea3 \\(a_k&gt;a_j\\) trong \\(\\mathcal{O}(n)\\), t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00fac n\u00e0y s\u1ebd l\u00e0 \\(\\mathcal{O}(n^2)\\).</p>"},{"location":"algo/trick/mitm/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>for (int j = 0; j &lt; n; ++j) {\n    int smaller = 0, bigger = 0;\n    for (int i = 0; i &lt; j; ++i) {\n        if (a[i] &lt; a[j]) ++smaller;\n    }\n    for (int k = j + 1; k &lt; n; ++k) {\n        if (a[k] &gt; a[j]) ++bigger;\n    }\n    answer += smaller * bigger;\n}\n</code></pre>"},{"location":"algo/trick/mitm/#bai-toan-3-cses-sum-of-four-values","title":"B\u00e0i to\u00e1n 3: CSES - Sum of Four Values","text":"<p>Cho m\u1ea3ng \\(a\\) g\u1ed3m \\(n\\) s\u1ed1 nguy\u00ean v\u00e0 s\u1ed1 nguy\u00ean \\(x\\). Ta c\u1ea7n t\u00ecm \\(4\\) v\u1ecb tr\u00ed ph\u00e2n bi\u1ec7t sao cho t\u1ed5ng gi\u00e1 tr\u1ecb \u1edf \\(4\\) v\u1ecb tr\u00ed \u0111\u00f3 b\u1eb1ng \\(x\\).</p> <p>Gi\u1edbi h\u1ea1n: - \\(1\\le n\\le1000\\) - \\(1\\le x,a_i\\le10^9\\)</p>"},{"location":"algo/trick/mitm/#y-tuong_3","title":"\u00dd t\u01b0\u1edfng","text":"<p>\u0110\u1eb7t \\(i,j,k,l\\) \\((i&lt;j&lt;k&lt;l)\\) l\u00e0 \\(4\\) v\u1ecb tr\u00ed tho\u1ea3 m\u00e3n \\(a_i+a_j+a_k+a_l=x\\).</p> <p>Thu\u1eadt to\u00e1n ng\u00e2y th\u01a1 c\u1ee7a b\u00e0i to\u00e1n n\u00e0y l\u00e0 s\u1eed d\u1ee5ng \\(4\\) v\u00f2ng l\u1eb7p l\u1ed3ng nhau v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n^4)\\). <pre><code>for (int i = 1; i &lt;= n; ++i)\n    for (int j = i + 1; j &lt;= n; ++j)\n        for (int k = j + 1; k &lt;= n; ++k)\n            for (int l = k + 1; l &lt;= n; ++l)\n                if (a[i] + a[j] + a[k] + a[l] == x) { ... }\n</code></pre> Ta c\u00f3 nh\u1eadn x\u00e9t: trong v\u00f2ng l\u1eb7p th\u1ee9 \\(2\\) (bi\u1ebfn \\(j\\)), ta \u0111ang gi\u1ea3i b\u00e0i to\u00e1n: t\u00ecm \\(2\\) v\u1ecb tr\u00ed ph\u00e2n bi\u1ec7t l\u1edbn h\u01a1n \\(j\\) sao cho t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a \\(2\\) v\u1ecb tr\u00ed \u0111\u00f3 b\u1eb1ng \\(x-a_i-a_j\\).</p> <p>Ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y tr\u01b0\u1edbc b\u1eb1ng c\u00e1ch: - Duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u1eb7p \\(2\\) v\u1ecb tr\u00ed (\u0111\u1eb7t \\(2\\) v\u1ecb tr\u00ed n\u00e0y l\u00e0 \\(k\\) v\u00e0 \\(l\\), \\(k &lt; l\\)), v\u1edbi m\u1ed7i c\u1eb7p v\u1ecb tr\u00ed, ta c\u00f3 m\u1ed9t t\u1ed5ng \\(a_k+a_l\\). - V\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb t\u1ed5ng, c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u c\u1eb7p v\u1ecb tr\u00ed kh\u00e1c nhau tho\u1ea3 m\u00e3n, ta ch\u1ec9 c\u1ea7n l\u01b0u l\u1ea1i c\u1eb7p c\u00f3 \\(k\\) l\u1edbn nh\u1ea5t (v\u00ec \\(k\\) c\u00e0ng l\u1edbn th\u00ec c\u00e0ng c\u00f3 nhi\u1ec1u \\(j\\) tho\u1ea3 m\u00e3n).</p>"},{"location":"algo/trick/mitm/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>S\u1eed d\u1ee5ng <code>std::map</code> \u0111\u1ec3 l\u01b0u c\u1eb7p v\u1ecb tr\u00ed c\u1ee7a m\u1ed7i gi\u00e1 tr\u1ecb t\u1ed5ng.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 1000 + 3;\nint n, x;\nint a[N];\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; x;\n    for (int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n\n    // preprocess\n    map&lt;int, pair&lt;int, int&gt;&gt; mp;\n    for (int i = 1; i &lt;= n; ++i)\n        for (int j = i + 1; j &lt;= n; ++j)\n            mp[a[i] + a[j]] = make_pair(i, j);\n\n    // solve\n    for (int i = 1; i &lt;= n; ++i)\n        for (int j = i + 1; j &lt;= n; ++j) {\n            // thay v\u00ec 2 v\u00f2ng for, b\u00e2y gi\u1edd ta ch\u1ec9 c\u1ea7n \n            // truy v\u1ea5n tr\u00ean std::map\n            int X = x - a[i] - a[j];\n            if (mp.count(X)) {\n                pair&lt;int, int&gt; arr = mp[X];\n                if (j &lt; arr.first) {\n                    cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; j &lt;&lt; ' ' &lt;&lt; arr.first &lt;&lt; ' ' &lt;&lt; arr.second;\n                    return 0;\n                }\n            }\n        }\n\n    cout &lt;&lt; \"IMPOSSIBLE\";\n}\n</code></pre>"},{"location":"algo/trick/mitm/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ti\u1ec1n x\u1eed l\u00fd: \\(\\mathcal{O}(n^2\\log(n^2))\\) \u0110\u1ed9 ph\u1ee9c t\u1ea1p truy v\u1ea5n: \\(\\mathcal{O}(\\log(n^2))\\) C\u00f3 \\(\\mathcal{O}(n^2)\\) truy v\u1ea5n, v\u00ec th\u1ebf, t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0: \\(\\mathcal{O}(n^2\\log(n^2))\\)</p>"},{"location":"algo/trick/mitm/#bai-toan-4-kattis-playlist","title":"B\u00e0i to\u00e1n 4: Kattis - Playlist","text":"<p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(n\\) \u0111\u1ec9nh (\\(n\\le100\\)) v\u00e0 b\u1eadc ngo\u00e0i c\u1ee7a m\u1ed7i \u0111\u1ec9nh kh\u00f4ng qu\u00e1 \\(40\\). T\u1ea5t c\u1ea3 \u0111\u1ec9nh \u0111\u1ec1u \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u. T\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(9\\) sao cho \\(9\\) \u0111\u1ec9nh trong \u0111\u01b0\u1eddng \u0111i c\u00f3 m\u00e0u ph\u00e2n bi\u1ec7t. N\u1ebfu c\u00f3 nhi\u1ec1u c\u00e1ch ch\u1ecdn, in ra b\u1ea5t k\u1ef3, ng\u01b0\u1ee3c l\u1ea1i, in ra \"fail\".</p> <p>Gi\u1edbi h\u1ea1n th\u1eddi gian l\u00e0 r\u1ea5t l\u1edbn (12 gi\u00e2y).</p>"},{"location":"algo/trick/mitm/#y-tuong_4","title":"\u00dd t\u01b0\u1edfng","text":"<p>T\u01b0\u01a1ng t\u1ef1 B\u00e0i to\u00e1n 2, ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng \"middle\" nh\u01b0 sau: - \u0110\u1eb7t \u0111\u1ec9nh th\u1ee9 \\(5\\) trong \u0111\u01b0\u1eddng \u0111i l\u00e0 \\(u\\). - V\u1edbi m\u1ed7i \\(u\\):     - Ta c\u00f3 t\u1eadp \\(A\\) g\u1ed3m c\u00e1c \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) \u1ee9ng v\u1edbi \\(4\\) \u0111\u1ec9nh \\(1,2,3,4\\) tho\u1ea3 m\u00e3n c\u00e1c m\u00e0u l\u00e0 ph\u00e2n bi\u1ec7t v\u00e0 kh\u00e1c m\u00e0u c\u1ee7a \\(u\\) (b\u1eb1ng DFS ho\u1eb7c 4 v\u00f2ng for t\u1eeb \\(u\\) trong \u0111\u1ed3 th\u1ecb ng\u01b0\u1ee3c)     - Ta c\u00f3 t\u1eadp \\(B\\) g\u1ed3m c\u00e1c \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) \u1ee9ng v\u1edbi \\(4\\) \u0111\u1ec9nh \\(6,7,8,9\\) tho\u1ea3 m\u00e3n c\u00e1c m\u00e0u l\u00e0 ph\u00e2n bi\u1ec7t v\u00e0 kh\u00e1c m\u00e0u c\u1ee7a \\(u\\) (b\u1eb1ng DFS ho\u1eb7c 4 v\u00f2ng for t\u1eeb \\(u\\))     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\mathcal{O}(40^4)\\) - B\u00e2y gi\u1edd, \u0111\u1ec3 k\u1ebft h\u1ee3p \\(2\\) t\u1eadp, ta c\u1ea7n gi\u1ea3i b\u00e0i to\u00e1n:     - V\u1edbi m\u1ed7i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) trong \\(A\\), \u0111\u1eb7t l\u00e0 \\(X\\), ta ki\u1ec3m tra xem c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) trong \\(B\\) sao cho m\u00e0u c\u1ee7a \\(8\\) \u0111\u1ec9nh l\u00e0 ph\u00e2n bi\u1ec7t.     - Ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y b\u1eb1ng Bao h\u00e0m - lo\u1ea1i tr\u1eeb: S\u1ed1 \u0111\u01b0\u1eddng \u0111i \u0111\u1ed9 d\u00e0i \\(4\\) trong \\(B\\) c\u00f3 m\u00e0u ph\u00e2n bi\u1ec7t v\u1edbi \\(X\\) = \\(|B|\\) - (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng \u00edt nh\u1ea5t \\(1\\) m\u00e0u) + (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng \u00edt nh\u1ea5t \\(2\\) m\u00e0u) - (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng \u00edt nh\u1ea5t \\(3\\) m\u00e0u) + (s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00f9ng c\u1ea3 \\(4\\) m\u00e0u)     - \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian: \\(\\mathcal{O}(2^4\\times40^4)\\) - \u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(N\\times2^4\\times40^4)\\)</p>"},{"location":"algo/trick/mitm/#cai-at_4","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 100 + 2;\nint n;\nint c[N];\nvector&lt;int&gt; g[2][N];\n\nint cntbit[16];\nvoid init() {\n    for (int msk = 1; msk &lt; 16; ++msk) {\n        cntbit[msk] = cntbit[msk &gt;&gt; 1] + (msk &amp; 1);\n    }\n}\n\nvoid readData() {\n    cin &gt;&gt; n;\n    map&lt;string, int&gt; artist;\n    for (int i = 1; i &lt;= n; ++i) {\n        string name;\n        cin &gt;&gt; name;\n        c[i] = artist.count(name) ? artist[name] : (artist[name] = artist.size() + 1);\n\n        int k, to;\n        cin &gt;&gt; k;\n        while (k--) {\n            cin &gt;&gt; to;\n            g[0][i].push_back(to);\n            g[1][to].push_back(i);\n        }\n    }\n}\n\nvector&lt;int&gt; getAns(vector&lt;int&gt; res) {\n    set&lt;int&gt; s;\n    for (int u : res) s.insert(c[u]);\n\n    for (int v0 : g[0][res.back()]) {\n        if (s.count(c[v0])) continue;\n        s.insert(c[v0]);\n        for (int v1 : g[0][v0]) {\n            if (s.count(c[v1])) continue;\n            s.insert(c[v1]);\n            for (int v2 : g[0][v1]) {\n                if (s.count(c[v2])) continue;\n                s.insert(c[v2]);\n                for (int v3 : g[0][v2]) {\n                    if (s.count(c[v3])) continue;\n\n                    res.push_back(v0);\n                    res.push_back(v1);\n                    res.push_back(v2);\n                    res.push_back(v3);\n                    return res;\n                }\n                s.erase(c[v2]);\n            }\n            s.erase(c[v1]);\n        }\n        s.erase(c[v0]);\n    }\n    return {};\n}\n\nint cnt[N * N * N * N];\nint getHash(const array&lt;int, 4&gt; &amp;a, int msk) {\n    int hsh = 0;\n    for (int i = 0; i &lt; 4; ++i) {\n        if (msk &gt;&gt; i &amp; 1) hsh = hsh * N + c[a[i]];\n    }\n    return hsh;\n}\nvector&lt;int&gt; solve(int u) {\n    vector&lt;int&gt; sav(1, 0);\n\n    for (int v0 : g[0][u]) {\n        if (c[v0] == c[u]) continue;\n        for (int v1 : g[0][v0]) {\n            if (c[v1] == c[v0] || c[v1] == c[u]) continue;\n            for (int v2 : g[0][v1]) {\n                if (c[v2] == c[v1] || c[v2] == c[v0] || c[v2] == c[u]) continue;\n                for (int v3 : g[0][v2]) {\n                    if (c[v3] == c[v2] || c[v3] == c[v1] || c[v3] == c[v0] || c[v3] == c[u]) continue;\n\n                    array&lt;int, 4&gt; a = { c[v0], c[v1], c[v2], c[v3] };\n                    sort(a.begin(), a.end());\n                    for (int msk = 0; msk &lt; 16; ++msk) {\n                        int hsh = getHash(a, msk);\n                        ++cnt[hsh];\n                        sav.push_back(hsh);\n                    }\n                }\n            }\n        }\n    }\n\n    for (int v0 : g[1][u]) {\n        if (c[v0] == c[u]) continue;\n        for (int v1 : g[1][v0]) {\n            if (c[v1] == c[v0] || c[v1] == c[u]) continue;\n            for (int v2 : g[1][v1]) {\n                if (c[v2] == c[v1] || c[v2] == c[v0] || c[v2] == c[u]) continue;\n                for (int v3 : g[1][v2]) {\n                    if (c[v3] == c[v2] || c[v3] == c[v1] || c[v3] == c[v0] || c[v3] == c[u]) continue;\n\n                    array&lt;int, 4&gt; a = { c[v0], c[v1], c[v2], c[v3] };\n                    sort(a.begin(), a.end());\n                    int sum = 0;\n                    for (int msk = 0; msk &lt; 16; ++msk) {\n                        int hsh = getHash(a, msk);\n                        sum += cnt[hsh] * (cntbit[msk] &amp; 1 ? -1 : 1);\n                    }\n                    if (sum &gt; 0) {\n                        vector&lt;int&gt; res = { v3, v2, v1, v0, u };\n                        return getAns(res);\n                    }\n                }\n            }\n        }\n    }\n\n    for (int x : sav) cnt[x] = 0;\n    return vector&lt;int&gt;();\n}\n\nvoid solve() {\n    for (int i = 1; i &lt;= n; ++i) {\n        vector&lt;int&gt; vec = solve(i);\n        if (!vec.empty()) {\n            for (int x : vec) cout &lt;&lt; x &lt;&lt; ' ';\n            return;\n        }\n    }\n    cout &lt;&lt; \"fail\";\n}\n\nint main() {\n    init();\n    readData();\n    solve();\n}\n</code></pre>"},{"location":"algo/trick/mitm/#bai-tap-ap-dung-khac","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng kh\u00e1c","text":"<ul> <li>VNOJ - Chia v\u00e0ng </li> <li>VNOJ - Ph\u00e2n t\u1eadp </li> <li>VNOJ - Bipalindrome </li> <li>Codeforces - 888E (Maximum Subsequence) </li> <li>Codeforces - 1006F (Xor-Paths) </li> <li>Codeforces - 995E (Number Clicker) </li> <li>Atcoder - ARC135F (Delete 1, 4, 7, ...)</li> </ul>"},{"location":"cs/crypto/Cipher-Tools/","title":"M\u1eadt m\u00e3 v\u00e0 Code","text":"<p>Gi\u1ea3 s\u1eed r\u1eb1ng b\u1ea1n mu\u1ed1n chuy\u1ec3n m\u1ed9t b\u1ee9c th\u01b0 cho m\u1ed9t ng\u01b0\u1eddi b\u1ea1n c\u1ee7a m\u00ecnh, c\u00f3 th\u1ec3 l\u00e0 \"c\u00f4 \u1ea5y\" ho\u1eb7c \"anh \u1ea5y\", nh\u01b0ng b\u1ea1n kh\u00f4ng mu\u1ed1n ng\u01b0\u1eddi kh\u00e1c bi\u1ebft \u0111\u01b0\u1ee3c n\u1ed9i dung c\u1ee7a b\u1ee9c th\u01b0 l\u00e0 g\u00ec. </p> <p>B\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t thu\u1eadt to\u00e1n m\u00e3 h\u00f3a b\u00e1 \u0111\u1ea1o s\u1eed d\u1ee5ng Hash v\u00e0 Public key Private key, nh\u01b0ng n\u1ebfu n\u1ed9i dung c\u1ee7a b\u1ee9c th\u01b0 \u1ea5y kh\u00f4ng quan tr\u1ecdng l\u1eafm th\u00ec b\u1ea1n c\u00f3 th\u1ec3 m\u00e3 h\u00f3a n\u00f3 b\u1eb1ng tay, s\u1eed d\u1ee5ng nh\u1eefng c\u00f4ng c\u1ee5 r\u1ea5t \u0111\u01a1n gi\u1ea3n. </p> <p>H\u00f4m nay t\u00f4i s\u1ebd g\u1eedi \u0111\u1ebfn c\u00e1c b\u1ea1n m\u1ed9t v\u00e0i c\u00f4ng c\u1ee5 m\u00e3 h\u00f3a \u0111\u1ed1i v\u1edbi c\u00e2u ch\u1eef, h\u1ea7u h\u1ebft c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u1ef1c hi\u1ec7n ch\u1ec9 v\u1edbi b\u00fat v\u00e0 nh\u00e1p.</p> ROT13 M\u1ed9t thu\u1eadt m\u00e3 h\u00f3a n\u1ed5i ti\u1ebfng b\u1eb1ng vi\u1ec7c thay \u0111\u1ed5i m\u1ed7i ch\u1eef c\u00e1i b\u1eb1ng ch\u1eef th\u1ee9 13 sau n\u00f3 trong b\u1ea3ng alphabet"},{"location":"cs/crypto/Public-Key-Cryptography/","title":"Public Key Cryptography","text":"<p>T\u00e1c gi\u1ea3: Ho\u00e0ng Gia Minh</p> <p>B\u00e0i vi\u1ebft n\u00e0y nh\u1eb1m gi\u00fap b\u1ea1n \u0111\u1ecdc n\u1eafm \u0111\u01b0\u1ee3c \u00fd t\u01b0\u1edfng c\u01a1 b\u1ea3n c\u1ee7a c\u00e1c h\u1ec7 m\u00e3 h\u00f3a kh\u00f3a c\u00f4ng khai (Public Key Cryptography) v\u00e0 m\u1ed9t s\u1ed1 \u1ee9ng d\u1ee5ng c\u1ee7a ch\u00fang. Ngo\u00e0i ra, ch\u00fang ta c\u0169ng s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 thu\u1eadt to\u00e1n m\u00e3 h\u00f3a RSA, m\u1ed9t h\u1ec7 m\u00e3 h\u00f3a kh\u00f3a c\u00f4ng khai \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng kh\u00e1 ph\u1ed5 bi\u1ebfn hi\u1ec7n nay.</p>"},{"location":"cs/crypto/Public-Key-Cryptography/#1-mot-so-khai-niem","title":"1. M\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m","text":"<p>M\u00e3 h\u00f3a (Encryption): Qu\u00e1 tr\u00ecnh chuy\u1ec3n \u0111\u1ed5i th\u00f4ng tin t\u1eeb d\u1ea1ng th\u00f4ng th\u01b0\u1eddng (c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c) sang d\u1ea1ng kh\u00f4ng \u0111\u1ecdc \u0111\u01b0\u1ee3c (n\u1ebfu kh\u00f4ng c\u00f3 kh\u00f3a b\u00ed m\u1eadt), nh\u1eb1m b\u1ea3o m\u1eadt th\u00f4ng tin.</p> <p>Gi\u1ea3i m\u00e3 (Decryption): L\u00e0 qu\u00e1 tr\u00ecnh ng\u01b0\u1ee3c c\u1ee7a m\u00e3 h\u00f3a - chuy\u1ec3n \u0111\u1ed5i t\u1eeb th\u00f4ng tin \u0111\u00e3 m\u00e3 h\u00f3a v\u1ec1 th\u00f4ng tin ban \u0111\u1ea7u.</p> <p>Kh\u00f3a (Key): M\u1ed9t \u0111o\u1ea1n th\u00f4ng tin \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 m\u00e3 h\u00f3a v\u00e0/ho\u1eb7c gi\u1ea3i m\u00e3.</p>"},{"location":"cs/crypto/Public-Key-Cryptography/#2-lich-su","title":"2. L\u1ecbch s\u1eed","text":""},{"location":"cs/crypto/Public-Key-Cryptography/#21-ma-hoa-khoa-oi-xung-symmetric-key-cryptography","title":"2.1. M\u00e3 h\u00f3a kh\u00f3a \u0111\u1ed1i x\u1ee9ng (Symmetric-key cryptography)","text":"<p>Cho \u0111\u1ebfn tr\u01b0\u1edbc n\u0103m 1976, c\u00e1c ph\u01b0\u01a1ng ph\u00e1p m\u00e3 h\u00f3a \u0111\u1ec1u l\u00e0 m\u00e3 h\u00f3a \u0111\u1ed1i x\u1ee9ng. </p> <p>C\u00e1c h\u1ec7 m\u00e3 h\u00f3a \u0111\u1ed1i x\u1ee9ng s\u1eed d\u1ee5ng c\u00f9ng m\u1ed9t kh\u00f3a cho c\u1ea3 b\u00ean g\u1eedi l\u1eabn b\u00ean nh\u1eadn. N\u00f3i m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c h\u01a1n, hai kh\u00f3a n\u00e0y c\u00f3 th\u1ec3:</p> <ul> <li>gi\u1ed1ng nhau, ho\u1eb7c</li> <li>kh\u00e1c nhau nh\u01b0ng c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm ra \u0111\u01b0\u1ee3c kh\u00f3a c\u00f2n l\u1ea1i n\u1ebfu \u0111\u00e3 bi\u1ebft m\u1ed9t kh\u00f3a.</li> </ul> <p>\u01afu \u0111i\u1ec3m c\u1ee7a c\u00e1c ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 \u0111\u01a1n gi\u1ea3n, t\u1ed1c \u0111\u1ed9 cao, mang l\u1ea1i hi\u1ec7u qu\u1ea3 t\u1ed1t n\u1ebfu b\u1ea1n kh\u00f4ng chia s\u1ebb kh\u00f3a c\u1ee7a m\u00ecnh cho ng\u01b0\u1eddi kh\u00e1c. Tuy nhi\u00ean, ch\u00fang l\u1ea1i c\u00f3 c\u00e1c nh\u01b0\u1ee3c \u0111i\u1ec3m sau:</p> <ul> <li>\u0110\u1ec3 c\u00f3 th\u1ec3 trao \u0111\u1ed5i th\u00f4ng tin b\u00ed m\u1eadt v\u1edbi nhau, hai b\u00ean ph\u1ea3i th\u1ed1ng nh\u1ea5t v\u1edbi nhau tr\u01b0\u1edbc v\u1ec1 kh\u00f3a b\u00ed m\u1eadt. B\u00e0i to\u00e1n \u0111\u1eb7t ra l\u00e0 l\u00e0m sao c\u00f3 th\u1ec3 \u0111\u1ea3m b\u1ea3o vi\u1ec7c g\u1eedi kh\u00f3a cho nhau l\u00e0 b\u00ed m\u1eadt.</li> <li>\u0110\u1ec3 \u0111\u1ea3m b\u1ea3o trong 1 nh\u00f3m \\(n\\) ng\u01b0\u1eddi c\u1ea7n ph\u1ea3i c\u00f3 1 s\u1ed1 l\u01b0\u1ee3ng kh\u00f3a kh\u00e1 l\u1edbn - \\(\\frac{n(n-1)}{2}\\) kh\u00f3a. \u0110i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn m\u1ed9t b\u00e0i to\u00e1n v\u1ec1 vi\u1ec7c l\u01b0u tr\u1eef, ph\u00e2n ph\u1ed1i m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng l\u1edbn kh\u00f3a m\u00e0 v\u1eabn ph\u1ea3i \u0111\u1ea3m b\u1ea3o s\u1ef1 an to\u00e0n c\u1ee7a ch\u00fang.</li> <li>Do b\u00ean g\u1eedi v\u00e0 nh\u1eadn s\u1eed d\u1ee5ng chung kh\u00f3a, ch\u00fang ta kh\u00f4ng th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c ngu\u1ed3n g\u1ed1c c\u1ee7a m\u1ed9t th\u00f4ng \u0111i\u1ec7p (message).</li> </ul>"},{"location":"cs/crypto/Public-Key-Cryptography/#22-ma-hoa-khoa-cong-khai-public-key-cryptography","title":"2.2. M\u00e3 h\u00f3a kh\u00f3a c\u00f4ng khai (Public-key cryptography)","text":"<p>V\u00e0o n\u0103m 1874, William Stanley Jevons vi\u1ebft trong quy\u1ec3n The Principles of Science v\u1ec1 m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa c\u00e1c h\u00e0m m\u1ed9t chi\u1ec1u v\u00e0 m\u1eadt m\u00e3 h\u1ecdc. \u0110\u1eb7c bi\u1ec7t, \u00f4ng \u0111\u00e3 \u0111i s\u00e2u v\u00e0o b\u00e0i to\u00e1n ph\u00e2n t\u00edch ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 (sau n\u00e0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong thu\u1eadt to\u00e1n RSA). </p> <p>Li\u1ec7u r\u1eb1ng b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c 2 s\u1ed1 nguy\u00ean n\u00e0o c\u00f3 t\u00edch b\u1eb1ng 8,616,460,799? T\u00f4i ngh\u0129 r\u1eb1ng ngo\u00e0i t\u00f4i ra th\u00ec kh\u00f4ng ai c\u00f3 th\u1ec3 bi\u1ebft k\u1ebft qu\u1ea3 \u0111\u01b0\u1ee3c.</p> <p>N\u0103m 1976, Whitfield Diffie v\u00e0 Martin Hellman c\u00f4ng b\u1ed1 b\u00e0i b\u00e1o New Directions in Cryptography, l\u00e0m thay \u0111\u1ed5i c\u0103n b\u1ea3n v\u1ec1 c\u00e1ch c\u00e1c h\u1ec7 m\u1eadt m\u00e3 ho\u1ea1t \u0111\u1ed9ng.  B\u00e0i b\u00e1o \u0111\u00e3 \u0111\u01b0a ra m\u1ed9t h\u1ec7 th\u1ed1ng m\u00e3 h\u00f3a b\u1ea5t \u0111\u1ed1i x\u1ee9ng trong \u0111\u00f3 n\u00eau ra ph\u01b0\u01a1ng ph\u00e1p trao \u0111\u1ed5i kh\u00f3a c\u00f4ng khai, gi\u1ea3i quy\u1ebft c\u00e1c h\u1ea1n ch\u1ebf c\u1ee7a m\u00e3 \u0111\u1ed1i x\u1ee9ng.</p> <p>Kh\u00e1c v\u1edbi m\u00e3 \u0111\u1ed1i x\u1ee9ng, m\u00e3 h\u00f3a kh\u00f3a b\u1ea5t \u0111\u1ed1i x\u1ee9ng s\u1eed d\u1ee5ng m\u1ed9t c\u1eb7p kh\u00f3a: kh\u00f3a c\u00f4ng khai (public key) v\u00e0 kh\u00f3a b\u00ed m\u1eadt (private key). Hai kh\u00f3a n\u00e0y \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng sao cho t\u1eeb m\u1ed9t kh\u00f3a, r\u1ea5t kh\u00f3 c\u00f3 c\u00e1ch sinh ra \u0111\u01b0\u1ee3c kh\u00f3a c\u00f2n l\u1ea1i. M\u1ed9t kh\u00f3a s\u1ebd d\u00e0nh \u0111\u1ec3 m\u00e3 h\u00f3a, kh\u00f3a c\u00f2n l\u1ea1i d\u00f9ng \u0111\u1ec3 gi\u1ea3i m\u00e3. Ch\u1ec9 c\u00f3 ng\u01b0\u1eddi s\u1edf h\u1eefu n\u1eafm \u0111\u01b0\u1ee3c kh\u00f3a b\u00ed m\u1eadt trong khi kh\u00f3a c\u00f4ng khai \u0111\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn r\u1ed9ng r\u00e3i. H\u00ecnh v\u1ebd sau minh h\u1ecda vi\u1ec7c m\u00e3 h\u00f3a v\u00e0 gi\u1ea3i m\u00e3:</p> <p></p>"},{"location":"cs/crypto/Public-Key-Cryptography/#3-ung-dung","title":"3. \u1ee8ng d\u1ee5ng","text":"<p>M\u1eadt m\u00e3 h\u00f3a kh\u00f3a c\u00f4ng khai hay c\u00f2n g\u1ecdi l\u00e0 m\u00e3 h\u00f3a b\u1ea5t \u0111\u1ed1i x\u1ee9ng c\u00f3 2 \u1ee9ng d\u1ee5ng ph\u1ed5 bi\u1ebfn sau:</p>"},{"location":"cs/crypto/Public-Key-Cryptography/#31-ma-hoa-cong-khai-public-key-encryption","title":"3.1. M\u00e3 h\u00f3a c\u00f4ng khai (Public-key encryption):","text":"<p>M\u1ed9t th\u00f4ng \u0111i\u1ec7p \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a b\u1eb1ng kh\u00f3a c\u00f4ng khai c\u1ee7a ng\u01b0\u1eddi nh\u1eadn. Th\u00f4ng \u0111i\u1ec7p n\u00e0y ch\u1ec9 c\u00f3 th\u1ec3 gi\u1ea3i m\u00e3 \u0111\u01b0\u1ee3c b\u1eb1ng kh\u00f3a b\u00ed m\u1eadt m\u00e0 ch\u1ec9 ng\u01b0\u1eddi nh\u1eadn c\u00f3. </p>"},{"location":"cs/crypto/Public-Key-Cryptography/#32-chu-ky-ien-tu-digital-signatures","title":"3.2. Ch\u1eef k\u00fd \u0111i\u1ec7n t\u1eed (Digital signatures):","text":"<p>Ch\u1eef k\u00fd \u0111i\u1ec7n t\u1eed l\u00e0 th\u00f4ng tin \u0111i k\u00e8m v\u1edbi d\u1eef li\u1ec7u nh\u1eb1m m\u1ee5c \u0111\u00edch x\u00e1c \u0111\u1ecbnh ch\u1ee7 s\u1edf h\u1eefu c\u1ee7a d\u1eef li\u1ec7u \u0111\u00f3.</p> <p>M\u1ed9t v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c \"k\u00fd\" b\u1eb1ng kh\u00f3a b\u00ed m\u1eadt c\u1ee7a ng\u01b0\u1eddi g\u1eedi v\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn b\u1edbi b\u1ea5t k\u1ef3 ai c\u00f3 kh\u00f3a c\u00f4ng khai c\u1ee7a ng\u01b0\u1eddi g\u1eedi.</p> <p>C\u1ee5 th\u1ec3 h\u01a1n, b\u00ean g\u1eedi s\u1ebd t\u00ednh ra m\u00e3 hash \\(h\\) c\u1ee7a v\u0103n b\u1ea3n, sau \u0111\u00f3 d\u00f9ng kh\u00f3a b\u00ed m\u1eadt \u0111\u1ec3 m\u00e3 h\u00f3a \\(h\\) th\u00e0nh \\(\\sigma\\) r\u1ed3i g\u1eedi cho b\u00ean nh\u1eadn v\u0103n b\u1ea3n \u0111\u00f3 c\u00f9ng v\u1edbi \"ch\u1eef k\u00fd\" \\(\\sigma\\) . B\u00ean nh\u1eadn th\u1ef1c hi\u1ec7n x\u00e1c nh\u1eadn nh\u01b0 sau:</p> <ul> <li>T\u00ednh m\u00e3 hash \\(h\\) c\u1ee7a v\u0103n b\u1ea3n.</li> <li>Gi\u1ea3i m\u00e3 \"ch\u1eef k\u00fd\" \\(\\sigma\\) th\u00e0nh \\(h'\\) b\u1eb1ng kh\u00f3a c\u00f4ng khai.</li> <li>So s\u00e1nh \\(h\\) v\u00e0 \\(h'\\), n\u1ebfu ch\u00fang b\u1eb1ng nhau th\u00ec qu\u00e1 tr\u00ecnh x\u00e1c th\u1ef1c th\u00e0nh c\u00f4ng, ng\u01b0\u1ee3c l\u1ea1i qu\u00e1 tr\u00ecnh x\u00e1c th\u1ef1c th\u1ea5t b\u1ea1i.</li> </ul>"},{"location":"cs/crypto/Public-Key-Cryptography/#4-rsa","title":"4. RSA","text":"<p>RSA l\u00e0 m\u1ed9t trong nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p m\u00e3 h\u00f3a kh\u00f3a c\u00f4ng khai \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng r\u1ed9ng r\u00e3i trong vi\u1ec7c \u0111\u1ea3m b\u1ea3o an to\u00e0n khi truy\u1ec1n th\u00f4ng tin. S\u1ef1 b\u1ea5t \u0111\u1ed1i x\u1ee9ng c\u1ee7a h\u1ec7 m\u00e3 n\u00e0y \u0111\u01b0\u1ee3c d\u1ef1a tr\u00ean quan s\u00e1t l\u00e0 kh\u00f3 c\u00f3 th\u1ec3 ph\u00e2n t\u00edch ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 c\u1ee7a m\u1ed9t s\u1ed1 l\u00e0 t\u00edch c\u1ee7a 2 s\u1ed1 nguy\u00ean t\u1ed1. RSA \u0111\u01b0\u1ee3c t\u1ea1o th\u00e0nh b\u1eb1ng ch\u1eef c\u00e1i \u0111\u1ea7u ti\u00ean c\u1ee7a Ron Rivest, Adi Shamir, Lenonard Adleman, 3 ng\u01b0\u1eddi \u0111\u1ea7u ti\u00ean m\u00f4 t\u1ea3 thu\u1eadt to\u00e1n v\u00e0o n\u0103m 1977.</p> <p>Nguy\u00ean l\u00fd c\u01a1 b\u1ea3n c\u1ee7a RSA d\u1ef1a tr\u00ean nh\u1eadn \u0111\u1ecbnh l\u00e0 c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c 3 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng r\u1ea5t l\u1edbn \\(e\\), \\(d\\) v\u00e0 \\(n\\) m\u00e0:</p> <p>\\((m^e)^d \\equiv m \\pmod n \\quad \\forall m\\)</p> <p>v\u00e0 d\u00f9 cho c\u00f3 bi\u1ebft c\u1ea3 \\(e\\), \\(n\\) hay c\u1ea3 \\(m\\) th\u00ec c\u0169ng r\u1ea5t kh\u00f3 \u0111\u1ec3 t\u00ecm ra \\(d\\).</p> <p>Ti\u1ebfp theo ch\u00fang ta s\u1ebd \u0111i s\u00e2u v\u00e0o t\u1eebng c\u00f4ng \u0111o\u1ea1n c\u1ee7a 1 h\u1ec7 m\u00e3, bao g\u1ed3m vi\u1ec7c m\u00e3 h\u00f3a, gi\u1ea3i m\u00e3 v\u00e0 sinh kh\u00f3a.</p>"},{"location":"cs/crypto/Public-Key-Cryptography/#41-ma-hoa","title":"4.1 M\u00e3 h\u00f3a","text":"<p>Gi\u1ea3 s\u1eed r\u1eb1ng Bob mu\u1ed1n g\u1eedi m\u1eabu tin \\(M\\) cho Alice.</p> <p>\u0110\u1ea7u ti\u00ean th\u00f4ng \u0111i\u1ec7p \\(M\\) th\u00e0nh t\u1eebng ph\u1ea7n nh\u1ecf, m\u1ed7i ph\u1ea7n bi\u1ec3u di\u1ec5n b\u1edfi m\u1ed9t s\u1ed1 nguy\u00ean \\(m\\) sao cho \\(0 \\leq m &lt; n\\). Vi\u1ec7c chuy\u1ec3n \u0111\u1ed5i n\u00e0y c\u1ea7n \u0111\u1ea3m b\u1ea3o l\u00e0 ng\u1eabu nhi\u00ean v\u00e0 \\(m\\) kh\u00f4ng nh\u1eadn c\u00e1c gi\u00e1 tr\u1ecb kh\u00f4ng an to\u00e0n (v\u00ed d\u1ee5 nh\u01b0 s\u1ed1 0 hay 1) nh\u01b0ng v\u1eabn \u0111\u1ea3m b\u1ea3o l\u00e0 c\u00f3 th\u1ec3 suy ra \\(M\\) t\u1eeb \\(m\\). Ti\u1ebfp theo, Bob t\u00ednh ra b\u1ea3n m\u00e3 h\u00f3a \\(c\\), s\u1eed d\u1ee5ng kh\u00f3a c\u00f4ng khai \\(e\\) c\u1ee7a Alice nh\u01b0 sau:</p> <p>$ c \\equiv m^e \\pmod n $</p> <p>Bob g\u1eedi \\(c\\) cho Alice.</p> <p>L\u01b0u \u00fd r\u1eb1ng sao khi m\u00e3 h\u00f3a, ch\u00ednh Bob c\u0169ng kh\u00f4ng th\u1ec3 gi\u1ea3i m\u00e3 \u0111\u01b0\u1ee3c t\u1eeb \\(c\\) th\u00e0nh \\(m\\).</p>"},{"location":"cs/crypto/Public-Key-Cryptography/#42-giai-ma","title":"4.2. Gi\u1ea3i m\u00e3","text":"<p>Alice t\u00ednh l\u1ea1i ra \\(m\\) t\u1eeb \\(c\\) d\u1ef1a v\u00e0o kh\u00f3a b\u00ed m\u1eadt \\(d\\):</p> <p>$ c^d \\equiv (m^e)^d \\equiv m \\pmod n $</p> <p>D\u1ef1a v\u00e0o \\(m\\), Alice c\u00f3 th\u1ec3 kh\u00f4i ph\u1ee5c l\u1ea1i m\u1eabu tin ban \u0111\u1ea7u \\(M\\).</p>"},{"location":"cs/crypto/Public-Key-Cryptography/#43-sinh-khoa-key-generation","title":"4.3. Sinh kh\u00f3a (Key generation)","text":"<ul> <li> <p>Ch\u1ecdn 2 s\u1ed1 nguy\u00ean t\u1ed1 kh\u00e1c nhau \\(p\\) v\u00e0 \\(q\\).</p> </li> <li> <p>T\u00ednh \\(n = p * q\\). \u0110\u1ed9 d\u00e0i c\u1ee7a \\(n\\) (t\u00ednh theo bit) ch\u00ednh l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a kh\u00f3a. Hi\u1ec7n nay ng\u01b0\u1eddi ta khuy\u1ebfn c\u00e1o s\u1eed d\u1ee5ng kh\u00f3a c\u00f3 \u0111\u1ed9 d\u00e0i t\u1ed1i thi\u1ebfu 2048 bit.</p> </li> <li> <p>T\u00ednh \\(\\varphi(n) = \\varphi(p)\\varphi(q) = (p - 1)(q - 1) = n - (p + q - 1)\\). Trong \u0111\u00f3 \\(\\varphi(n)\\) l\u00e0 phi h\u00e0m Euler. \\(\\varphi(n) =\\) s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 nguy\u00ean d\u01b0\u01a1ng nh\u1ecf h\u01a1n \\(n\\) m\u00e0 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(n\\).</p> </li> <li> <p>Ch\u1ecdn m\u1ed9t s\u1ed1 nguy\u00ean \\(e\\) th\u1ecfa m\u00e3n \\(1 &lt; e &lt; \\varphi(n)\\) v\u00e0 \\(gcd(e, \\varphi(n)) = 1\\).</p> </li> <li> <p>T\u00ednh ra \\(d \\equiv e^{-1} \\pmod{\\varphi(n)}\\).</p> </li> </ul> <p>Ch\u1ee9ng minh</p> <p>\u0110\u1ec3 ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a thu\u1eadt to\u00e1n sinh kh\u00f3a tr\u00ean, ta c\u1ea7n ch\u1ee9ng minh r\u1eb1ng \\(m^{ed} \\equiv m \\pmod n\\) v\u1edbi \\(n = pq\\).</p> <p>1. Tr\u01b0\u1eddng h\u1ee3p \\(gcd(n, m) = 1\\)</p> <p>Ta c\u00f3 \\(ed \\equiv 1 \\pmod{\\varphi(n)}\\)</p> <p>Do \\(e\\) v\u00e0 \\(d\\) nguy\u00ean d\u01b0\u01a1ng n\u00ean \\(ed = 1 + h\\varphi(n)\\) v\u1edbi \\(h\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m.</p> <p>Do \u0111\u00f3 \\(m^{ed} = m^{1 + h\\varphi{n}} = m(m^{\\varphi(n)})^h\\).</p> <p>Theo \u0111\u1ecbnh l\u00fd Euler, \\(a^{\\varphi(n)} \\equiv 1 \\pmod n \\quad \\forall a, n: gcd(a, n) = 1\\) n\u00ean \\(m(m^{\\varphi(n)})^h \\equiv m(1)^h \\equiv m \\pmod n\\).</p> <p>2. Tr\u01b0\u1eddng h\u1ee3p \\(gcd(n, m) \\neq 1\\)</p> <p>Theo \u0111\u1ecbnh l\u00fd ph\u1ea7n d\u01b0 Trung Hoa (Chinese Remainder Theorem), n\u1ebfu \\(p\\), \\(q\\) nguy\u00ean t\u1ed1 c\u00f9ng nhau th\u00ec:</p> <p>\\(x \\equiv y \\pmod p \\quad v\u00e0  \\quad x \\equiv y \\pmod q \\Rightarrow x \\equiv y \\pmod {pq}\\).</p> <p>Do v\u1eady ta c\u1ea7n ch\u1ee9ng m\u00ecnh 2 m\u1ec7nh \u0111\u1ec1 sau:</p> <ul> <li>\\(m^{ed} \\equiv m \\pmod p\\)</li> <li>\\(m^{ed} \\equiv m \\pmod q\\)</li> </ul> <p>V\u00ec \\(gcd(m, n) \\neq 1 \\Rightarrow gcd(m, n) = p \\quad ho\u1eb7c \\quad gcd(m, n) = q\\).</p> <p>Kh\u00f4ng m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(gcd(m, n) = p\\). Ta c\u00f3:</p> <ul> <li> <p>\\(gcd(m, p) = p \\\\ \\Rightarrow m \\equiv 0 \\pmod p \\\\ \\Rightarrow m^{ed} \\equiv 0 \\equiv m \\pmod p\\)</p> </li> <li> <p>\\(gcd(m, q) = 1 \\\\ \\Rightarrow m^{ed} \\equiv m \\pmod q\\)  (ch\u1ee9ng m\u00ecnh t\u01b0\u01a1ng t\u1ef1 trong tr\u01b0\u1eddng h\u1ee3p 1)</p> </li> </ul>"},{"location":"cs/crypto/Public-Key-Cryptography/#44-sample-code","title":"4.4. Sample code","text":"<pre><code>## !/usr/bin/env python\n## -*- coding: utf-8 -*-\n\nimport random\n\ndef is_prime(n):\n    return all([(n % j) for j in range(2, int(n ** 0.5) + 1)]) and n &gt; 1\n\n## Sinh ra s\u1ed1 nguy\u00ean t\u1ed1 ng\u1eabu nhi\u00ean trong [left, right) m\u00e0 kh\u00e1c exclude\ndef random_prime(left, right, exclude = -1):\n    p = random.randint(left, right - 1);\n    if is_prime(p) and p != exclude:\n        return p\n    else:\n        return random_prime(left, right - 1, exclude)\n\n## Thu\u1eadt to\u00e1n t\u00ecm ngh\u1ecbch \u0111\u1ea3o modulo\n## MMI(A, n) = x th\u1ecfa m\u00e3n (Ax) mod n = 1\nMMI = lambda A, n,s=1,t=0,N=0: (n &lt; 2 and t%N or MMI(n, A%n, t, s-A/n*t, N or n),-1)[n&lt;1]\n\n## Thu\u1eadt to\u00e1n sinh kh\u00f3a\ndef rsa_generate():\n    p = random_prime(1, 255)\n    q = random_prime(1, 255, p)\n    n = p * q\n    t = (p - 1) * (q - 1)\n    e = random_prime(1, t)\n    d = MMI(e, t)\n\n    # K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 bao g\u1ed3m:\n    #    - Kh\u00f3a c\u00f4ng khai (n, e)\n    #    - Kh\u00f3a b\u00ed m\u1eadt (n, d)\n    return n, e, d\n\ndef rsa_encrypt(message, n, e):\n    return pow(message, e, n)\n\ndef rsa_decrypt(encrypt_message, n, d):\n    return pow(encrypt_message, d, n)\n\n\n## Example\nn, e, d = rsa_generate()\n\nprint 'n={0}, e={1}, d={2}'.format(n, e, d)\n\nmessage = random.randint(1, n - 1)\nprint 'Original message: {0}'.format(message)\n\nencrypted_message = rsa_encrypt(message, n, e)\nprint 'Encrypted message: {0}'.format(encrypted_message)\n\ndecrypted_message = rsa_decrypt(encrypted_message, n, d)\nprint 'Decrypted message: {0}'.format(decrypted_message)\n</code></pre>"},{"location":"cs/crypto/Public-Key-Cryptography/#5-tham-khao","title":"5. Tham kh\u1ea3o","text":"<p>Wiki - Public-key Cryptography</p> <p>Wiki - RSA</p> <p>Wiki - History of Cryptography</p>"},{"location":"cs/crypto/cipher/ROT13/","title":"ROT13","text":"<p>ROT13 (\"rotate by 13 places\") l\u00e0 m\u1ed9t lo\u1ea1i m\u00e3 h\u00f3a thay th\u1ebf ch\u1eef c\u00e1i, b\u1eb1ng c\u00e1ch thay m\u1ed7i ch\u1eef c\u00e1i b\u1eb1ng ch\u1eef th\u1ee9 13 sau n\u00f3 trong b\u1ea3ng ch\u1eef c\u00e1i. \u0110\u00e2y l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t c\u1ee7a Caesar Cipher, \u0111\u01b0\u1ee3c ph\u00e1t minh t\u1eeb th\u1eddi Rome c\u1ed5.</p> <p>B\u1edfi v\u00ec b\u1ea3ng ch\u1eef c\u00e1i Latin c\u00f3 26 ch\u1eef c\u00e1i, ROT13 l\u00e0 inverse c\u1ee7a c\u00e1c ch\u1eef c\u00e1i. \u0110\u1ec3 gi\u1ea3i m\u00e3, ta l\u00e0m \u0111i\u1ec1u t\u01b0\u01a1ng t\u1ef1. \u0110\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n m\u00e3 h\u00f3a t\u1ed1t nh\u01b0ng c\u0169ng \u0111\u1ee7 \u0111\u1ec3 m\u00e3 h\u00f3a m\u1ed9t b\u1ee9c th\u01b0 ng\u1eafn.</p>"},{"location":"cs/crypto/cipher/ROT13/#cach-su-dung","title":"C\u00e1ch s\u1eed d\u1ee5ng","text":"<p>\u0110\u1ec3 s\u1eed d\u1ee5ng ROT13, ta ch\u1ec9 c\u1ea7n thay ch\u1eef c\u00e1i n\u00e0y b\u1eb1ng ch\u1eef c\u00e1i th\u1ee9 13 sau n\u00f3 trong b\u1ea3ng ch\u1eef c\u00e1i. \u0110\u1ec3 gi\u1ea3i m\u00e3, ch\u00fang ta c\u0169ng thay b\u1eb1ng ch\u1eef c\u00e1i th\u1ee9 13 sau n\u00f3 l\u00e0 tr\u1edf l\u1ea1i \u0111\u01b0\u1ee3c v\u1ec1 ch\u1eef ban \u0111\u1ea7u</p> <p></p> <p>Hay n\u00f3i c\u00e1ch kh\u00e1c: <pre><code>ROT13(ROT13(x)) = x\n</code></pre> V\u00ed d\u1ee5: <pre><code>The Quick Brown Fox Jumps Over The Lazy Dog\nGur Dhvpx Oebja Sbk Whzcf Bire Gur Ynml Qbt\n</code></pre></p>"},{"location":"cs/crypto/cipher/ROT13/#cac-bien-the","title":"C\u00e1c bi\u1ebfn th\u1ec3","text":"<p>ROT5 c\u0169ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng y h\u1ec7t nh\u01b0 ROT13 trong b\u1ea3ng ch\u1eef s\u1ed1 (0 \u0111\u1ebfn 9).  Ngo\u00e0i ra ROT13 v\u00e0 ROT5 c\u00f2n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00f9ng m\u1ed9t v\u0103n b\u1ea3n. M\u1edf r\u1ed9ng ROT13, ta c\u00f2n c\u00f3 ROT47. ROT47 \u00e1p d\u1ee5ng \u0111\u1ed1i v\u1edbi ch\u1eef c\u00e1i trong b\u1ea3ng m\u00e3 ASCII. V\u00ed d\u1ee5: <pre><code>The Quick Brown Fox Jumps Over The Lazy Dog.\n%96 \"F:4&lt; qC@H? u@I yF&gt;AD ~G6C %96 {2KJ s@8]\n</code></pre></p>"},{"location":"cs/imageprocessing/Seam-Carving/","title":"Seam Carving Algorithm","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c: Seam Carving Algorithm - K. Lykov Blog</p>"},{"location":"cs/imageprocessing/Seam-Carving/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Seam carving l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n d\u00f9ng \u0111\u1ec3 thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc h\u00ecnh \u1ea3nh, n\u00f3 \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong b\u00e0i b\u00e1o c\u00e1o khoa h\u1ecdc c\u1ee7a S. Avidan &amp; A. Shamir. Trong b\u00e0i b\u00e1o, vi\u1ec7c thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc \u1ea3nh \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch lo\u1ea1i b\u1ecf \u0111i c\u00e1c \u0111i\u1ec3m \u1ea3nh \u00edt quan tr\u1ecdng v\u00e0 gi\u1eef l\u1ea1i c\u00e1c \u0111i\u1ec3m \u1ea3nh quan tr\u1ecdng. B\u1ee9c \u1ea3nh d\u01b0\u1edbi \u0111\u00e2y l\u00e0 minh h\u1ecda \u0111i\u1ec1u n\u00e0y (\u1ea3nh b\u00ean tr\u00ean l\u00e0 \u1ea3nh g\u1ed1c v\u1edbi k\u00edch th\u01b0\u1edbc 332x480 v\u00e0 \u1ea3nh b\u00ean d\u01b0\u1edbi l\u00e0 \u1ea3nh sau khi \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n seam carving \u0111\u1ebb thu nh\u1ecf c\u00f2n l\u1ea1i k\u00edch th\u01b0\u1edbc l\u00e0 272x400).</p> <p> </p> <p></p> <p>Thu\u1eadt to\u00e1n n\u00e0y kh\u00e1 ph\u1ed5 bi\u1ebfn n\u00ean c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm th\u1ea5y r\u1ea5t nhi\u1ec1u b\u00e0i vi\u1ebft n\u00f3i v\u1ec1 n\u00f3. Tuy nhi\u00ean h\u1ea7u h\u1ebft \u0111a s\u1ed1 c\u00e1c t\u00e1c gi\u1ea3 \u0111\u00e3 kh\u00f4ng \u0111\u1ecdc b\u00e0i b\u00e1o c\u00e1o ban \u0111\u1ea7u v\u00e0 ch\u1ec9 cung c\u1ea5p c\u00e1ch c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n kh\u00e1 c\u01a1 b\u1ea3n. Trong b\u00e0i vi\u1ebft n\u00e0y t\u00f4i s\u1ebd m\u00f4 t\u1ea3 thu\u1eadt to\u00e1n \u0111\u1ea7y \u0111\u1ee7 c\u00e1c chi ti\u1ebft nh\u01b0 trong b\u00e0i vi\u1ebft c\u1ee7a Avidan &amp; Shamir, d\u01b0\u1edbi g\u00f3c nh\u00ecn c\u1ee7a m\u1ed9t l\u1eadp tr\u00ecnh vi\u00ean. \u1ede \u0111\u00e2y ta s\u1ebd s\u1eed d\u1ee5ng matlab \u0111\u1ec3 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n. Ph\u1ea7n ch\u1ee9ng minh c\u1ee5 th\u1ec3 c\u00e1c b\u1ea1n xem \u1edf ph\u1ea7n tham kh\u1ea3o.</p>"},{"location":"cs/imageprocessing/Seam-Carving/#nang-luong-energy","title":"N\u0103ng l\u01b0\u1ee3ng (Energy)","text":"<p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, b\u00e0i vi\u1ebft n\u00e0y ch\u1ec9 t\u1eadp trung n\u00f3i v\u1ec1 vi\u1ec7c l\u00e0m gi\u1ea3m k\u00edch th\u01b0\u1edbc h\u00ecnh \u1ea3nh. Tuy nhi\u00ean vi\u1ec7c l\u00e0m t\u0103ng k\u00edch th\u01b0\u1edbc h\u00ecnh \u1ea3nh c\u0169ng c\u00f3 th\u1ec3 l\u00e0m t\u01b0\u01a1ng t\u1ef1, v\u00e0 s\u1ebd \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 s\u01a1 qua \u1edf ph\u1ea7n sau. \u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 vi\u1ec7c lo\u1ea1i b\u1ecf c\u00e1c n\u1ed9i dung c\u00f3 \u00edt \u00fd ngh\u0129a \u0111\u1ed1i v\u1edbi ng\u01b0\u1eddi s\u1eed d\u1ee5ng (ch\u1ee9a \u00edt th\u00f4ng tin). Ta g\u1ecdi th\u00f4ng tin n\u00e0y l\u00e0 N\u0103ng l\u01b0\u1ee3ng (Energy). V\u00ec v\u1eady ta c\u1ea7n \u0111\u1ecbnh ngh\u0129a h\u00e0m n\u0103ng l\u01b0\u1ee3ng \u0111\u1ec3 t\u00ednh n\u0103ng l\u01b0\u1ee3ng \u0111i\u1ec3m \u1ea3nh t\u1eeb c\u00e1c \u0111i\u1ec3m \u1ea3nh c\u1ee7a \u1ea3nh g\u1ed1c. V\u00ed d\u1ee5, \u1edf \u0111\u00e2y ta c\u00f3 th\u1ec3 t\u00ednh n\u0103ng l\u01b0\u1ee3ng c\u1ee7a \u1ea3nh th\u00f4ng qua \u0111\u1ea1o h\u00e0m c\u1ee7a t\u1eebng \u0111i\u1ec3m \u1ea3nh theo c\u00e1c h\u01b0\u1edbng:</p> <p>\\(e_{1}=\\left \\| \\frac{\\delta I}{\\delta x} \\right \\| + \\left \\| \\frac{\\delta I}{\\delta y} \\right \\|\\). </p> <p>N\u1ebfu nh\u01b0 \u1ea3nh c\u00f3 3 k\u00eanh m\u00e0u th\u00ec ta l\u1ea5y t\u1ed5ng gi\u00e1 tr\u1ecb n\u0103ng l\u01b0\u1ee3ng c\u1ee7a 3 k\u00eanh n\u00e0y l\u1ea1i v\u1edbi nhau. \u0110o\u1ea1n code Matlab d\u01b0\u1edbi \u0111\u00e2y s\u1ebd m\u00f4 t\u1ea3 qu\u00e1 tr\u00ecnh t\u00ednh. H\u00e0m <code>imfilter</code> \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho c\u00e1c \u0111i\u1ec3m \u1ea3nh \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u, do \u0111\u00f3 k\u1ebft qu\u1ea3 l\u00e0</p> <p>\\(dI(i, j)/dx = I(i+1)-I(i-1)/dx\\) v\u1edbi \\(dx = 1\\).</p> <p>T\u01b0\u01a1ng t\u1ef1 cho \\(dI(i, j)/dy\\):</p> <p>\\(dI(i, j)/dy = I(j+1)-I(j-1)/dy\\) v\u1edbi \\(dy = 1\\).</p> <pre><code>function res = energyRGB(I)\n% Input: \u1ea2nh m\u00e0u (3 k\u00eanh m\u00e0u)\n% Output: M\u1ed9t m\u1ea3ng 2 chi\u1ec1u th\u1ec3 hi\u1ec7n n\u0103ng l\u01b0\u1ee3ng c\u1ee7a c\u00e1c \u0111i\u1ec3m trong \u1ea3nh.\n% e = |dI/dx| + |dI/dy|\n% V\u00ec \u1ea3nh c\u00f3 3 k\u00eanh m\u00e0u n\u00ean ta tr\u1ea3 ra t\u1ed5ng n\u0103ng l\u01b0\u1ee3ng theo 3 k\u00eanh m\u00e0u\n    res = energyGrey(I(:, :, 1)) + energyGrey(I(:, :, 2)) + energyGrey(I(:, :, 3));\n\nfunction res = energyGrey(I)\n% Input: \u1ea2nh \u0111en tr\u1eafng\n% Output: M\u1ed9t m\u1ea3ng 2 chi\u1ec1u th\u1ec3 hi\u1ec7n n\u0103ng l\u01b0\u1ee3ng c\u1ee7a c\u00e1c \u0111i\u1ec3m trong \u1ea3nh.\n% e = |dI/dx| + |dI/dy|\n    res = abs(imfilter(I, [-1,0,1], 'replicate')) + abs(imfilter(I, [-1;0;1], 'replicate'));\nend\n</code></pre> <p>N\u0103ng l\u01b0\u1ee3ng thu \u0111\u01b0\u1ee3c:</p> <p></p>"},{"location":"cs/imageprocessing/Seam-Carving/#seam","title":"Seam","text":"<p>N\u1ebfu ch\u00fang ta x\u00f3a \u0111i c\u00e1c \u0111i\u1ec3m \u1ea3nh c\u00f3 n\u1eb7ng l\u01b0\u1ee3ng th\u1ea5p nh\u1ea5t \u1edf c\u00e1c v\u1ecb tr\u00ed ng\u1eabu nhi\u00ean, ta s\u1ebd ra m\u1ed9t h\u00ecnh \u1ea3nh m\u00e9o m\u00f3. N\u1ebfu ch\u00fang ta x\u00f3a theo c\u1ed9t ho\u1eb7c h\u00e0ng v\u1edbi n\u0103ng l\u01b0\u1ee3ng t\u1ed1i thi\u1ec3u, ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c m\u1ed9t b\u1ee9c \u1ea3nh ho\u00e0n ch\u1ec9nh \u0111\u01b0\u1ee3c thu nh\u1ecf k\u00edch th\u01b0\u1edbc l\u1ea1i. \u1ede \u0111\u00e2y c\u1ed9t j ngh\u0129a l\u00e0 t\u1eadp h\u1ee3p {(i, j) v\u1edbi j c\u1ed1 \u0111\u1ecbnh} v\u00e0 m\u1ed9t h\u00e0ng i ngh\u0129a l\u00e0 t\u1eadp h\u1ee3p {(i, j) v\u1edbi i c\u1ed1 \u0111\u1ecbnh}.</p> <p>Thu\u1eadt to\u00e1n Seam Carving x\u00f3a c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t t\u1ed5ng qu\u00e1t (\u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u01b0\u1eddng seam). C\u1ee5 th\u1ec3 h\u01a1n, g\u1ecdi \\(I\\) l\u00e0 m\u1ed9t b\u1ee9c \u1ea3nh c\u00f3 k\u00edch th\u01b0\u1edbc \\(n \\* m\\), m\u1ed9t \u0111\u01b0\u1eddng seam d\u1ecdc l\u00e0 \\((s^x)i = (i, x(i))s.t.\\forall i, \\|x(i) - x(i - 1)\\| \\leq 1\\) trong \u0111\u00f3 \\(x[1..n] \\to [1..m]\\). N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u h\u01a1n, m\u1ed9t \u0111\u01b0\u1eddng seam d\u1ecdc (vertical seam) l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb bi\u00ean tr\u00ean c\u1ee7a b\u1ee9c \u1ea3nh xu\u1ed1ng bi\u00ean d\u01b0\u1edbi c\u1ee7a b\u1ee9c \u1ea3nh v\u1edbi \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i b\u1eb1ng chi\u1ec1u cao c\u1ee7a b\u1ee9c \u1ea3nh, v\u00e0 v\u1edbi m\u1ed7i ph\u1ea7n v\u1ecb tr\u00ed \\((i, j)\\) c\u1ee7a \u0111\u01b0\u1eddng seam, ta c\u00f3 th\u1ec3 \u0111i ti\u1ebfp \u0111\u1ebfn c\u00e1c ph\u1ea7n t\u1eed \\((i + 1, j - 1)\\), \\((i + 1, j)\\), \\((i + 1, j + 1)\\). T\u01b0\u01a1ng t\u1ef1 ta c\u0169ng c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a cho \u0111\u01b0\u1eddng seam ngang (horizontal seam). V\u00ed d\u1ee5 v\u1ec1 c\u00e1c \u0111\u01b0\u1eddng m\u00e0u \u0111en l\u00e0 c\u00e1c \u0111\u01b0\u1eddng seam trong h\u00ecnh d\u01b0\u1edbi \u0111\u00e2y.</p> <p></p> <p>Ch\u00fang ta s\u1ebd t\u00ecm ki\u1ebfm m\u1ed9t \u0111\u01b0\u1eddng seam sao cho c\u00f3 t\u1ed5ng gi\u00e1 tr\u1ecb n\u0103ng l\u01b0\u1ee3ng l\u00e0 nh\u1ecf nh\u1ea5t (theo chi\u1ec1u ch\u00fang ta ch\u1ecdn): \\(s^*= [\\min \\limits_{s} \\sum\\limits_{i=1}^n e(I(s_{i}))]\\). C\u00e1ch \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u cho b\u00e0i to\u00e0n l\u00e0 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p quy ho\u1ea1ch \u0111\u1ed9ng.</p> <ol> <li> <p>T\u00ecm \u0111\u01b0\u1eddng seam t\u1ed1i \u01b0u t\u1eeb bi\u00ean tr\u00ean c\u1ee7a \u1ea3nh \u0111\u1ebfn m\u1ed7i \u0111i\u1ec3m \u1ea3nh \\((i, j)\\).</p> <ul> <li>G\u1ecdi \\(M[i, j]\\) l\u00e0 gi\u00e1 tr\u1ecb n\u0103ng l\u01b0\u1ee3ng nh\u1ecf nh\u1ea5t \u0111i t\u1eeb bi\u00ean tr\u00ean c\u1ee7a \u1ea3nh \u0111\u1ebfn \u0111i\u1ec3m \u1ea3nh \\((i, j)\\).</li> <li>\\(M[1, j] = e(1, j)\\) v\u1edbi \\(e(i, j)\\) l\u00e0 n\u0103ng l\u01b0\u1ee3ng \u0111i\u1ec3m \u1ea3nh t\u1ea1i \\((i, j)\\).</li> <li>\\(M[i, j] = min(M[i - 1, j - 1], M[i - 1, j], M[i - 1, j + 1]) + e(i, j)\\).</li> </ul> </li> <li> <p>\u1ede bi\u00ean d\u01b0\u1edbi c\u1ee7a \u1ea3nh, ta t\u00ecm \u0111i\u1ec3m \u0111\u01b0\u1eddng seam t\u1ed1i \u01b0u (t\u1ed5ng gi\u00e1 tr\u1ecb n\u0103ng l\u01b0\u1ee3ng th\u1ea5p nh\u1ea5t th\u00f4ng qua b\u1ea3ng ph\u01b0\u01a1ng \u00e1n \\(M\\)) v\u00e0 \u0111i ng\u01b0\u1ee3c v\u1ec1 \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i t\u1ed1i \u01b0u.</p> </li> </ol> <p>L\u01b0u \u00fd: trong \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y tr\u1ea3 v\u1ec1 m\u1ed9t ma tr\u1eadn \\(n \\* m\\) ch\u1ec9 g\u1ed3m 0 v\u00e0 1 v\u1edbi c\u00e1c \u0111i\u1ec3m \u1ea3nh tr\u00ean \u0111\u01b0\u1eddng \u0111i seam s\u1ebd c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 0 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1eddng seam ngang, ta ch\u1ec9 c\u1ea7n chuy\u1ec3n v\u1ecb ma tr\u1eadn n\u0103ng l\u01b0\u1ee3ng l\u1ea1i.</p> <pre><code>function [optSeamMask, seamEnergy] = findOptSeam(energy)\n% Input: m\u1ea3ng 2 chi\u1ec1u l\u00e0 n\u0103ng l\u01b0\u1ee3ng c\u1ee7a c\u00e1c \u0111i\u1ec3m \u1ea3nh\n% Output: \u0110\u01b0\u1eddng seam d\u1ecdc t\u1ed1i \u01b0u &amp; n\u0103ng l\u01b0\u1ee3ng\n% M\u1ea3ng optSeamMask g\u1ed3m 0/1, v\u1edbi 0 th\u1ec3 hi\u1ec7n \u0111i\u1ec3m \u0111\u00f3 thu\u1ed9c \u0111\u01b0\u1eddng seam\n% \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1eddng seam ngang t\u1ed1i \u01b0u, cho Input l\u00e0 ma tr\u1eadn chuy\u1ec3n v\u1ecb\n\n    % T\u00ednh m\u1ea3ng quy ho\u1ea1ch \u0111\u1ed9ng M cho c\u00e1c \u0111\u01b0\u1eddng seam d\u1ecdc\n    M = padarray(energy, [0 1], realmax('double')); % M = m\u1ea3ng energy th\u00eam 2 c\u1ed9t c\u00f3 gi\u00e1 tr\u1ecb c\u1ef1c \u0111\u1ea1i \u1edf \u0111\u1ea7u v\u00e0 cu\u1ed1i \u0111\u1ec3 tr\u00e1nh x\u1eed l\u00fd bi\u00ean\n\n    sz = size(M);\n    for i = 2 : sz(1)\n        for j = 2 : (sz(2) - 1)\n            neighbors = [M(i - 1, j - 1) M(i - 1, j) M(i - 1, j + 1)];\n            M(i, j) = M(i, j) + min(neighbors);\n        end\n    end\n\n    % T\u00ecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t h\u00e0ng cu\u1ed1i\n    [val, indJ] = min(M(sz(1), :));\n    seamEnergy = val;\n\n    optSeamMask = zeros(size(energy), 'uint8');\n\n    % \u0110i ng\u01b0\u1ee3c l\u1ea1i v\u00e0 truy v\u1ebft\n    for i = sz(1) : -1 : 2\n        % optSeam(i) = indJ - 1;\n        optSeamMask(i, indJ - 1) = 1; % -1 v\u00ec l\u00fac \u0111\u1ea7u ta th\u00eam m\u1ed9t c\u1ed9t 0 v\u00e0o b\u00ean tr\u00e1i\n        neighbors = [M(i - 1, indJ - 1) M(i - 1, indJ) M(i - 1, indJ + 1)];\n        [val, indIncr] = min(neighbors);\n\n        seamEnergy = seamEnergy + val;\n\n        indJ = indJ + (indIncr - 2); % (x - 2): [1,2]-&gt;[-1,1]]\n    end\n\n    optSeamMask(1, indJ - 1) = 1; % -1 v\u00ec l\u00fac \u0111\u1ea7u ta th\u00eam m\u1ed9t c\u1ed9t 0 v\u00e0o b\u00ean tr\u00e1i\n    optSeamMask = ~optSeamMask;\nend\n</code></pre>"},{"location":"cs/imageprocessing/Seam-Carving/#tim-phuong-an-toi-uu-e-xoa-uong-seam","title":"T\u00ecm ph\u01b0\u01a1ng \u00e1n t\u1ed1i \u01b0u \u0111\u1ec3 x\u00f3a \u0111\u01b0\u1eddng seam","text":"<p>B\u00e2y gi\u1edd ta c\u00f3 th\u1ec3 t\u00ednh to\u00e1n ra \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng seam v\u00e0 s\u1eed d\u1ee5ng \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y, ta c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf \u0111\u01b0\u1eddng seam ra kh\u1ecfi b\u1ee9c \u1ea3nh.</p> <pre><code>function imageReduced = reduceImageByMaskVertical(image, seamMask)\n    % Input: \u1ea2nh &amp; mask c\u1ee7a \u0111\u01b0\u1eddng seam\n    % Output: \u1ea2nh sau khi x\u00f3a \u0111\u01b0\u1eddng seam d\u1ecdc\n    imageReduced = zeros(size(image, 1), size(image, 2) - 1, size(image, 3));\n    for i = 1 : size(seamMask, 1)\n        imageReduced(i, :, 1) = image(i, seamMask(i, :), 1);\n        imageReduced(i, :, 2) = image(i, seamMask(i, :), 2);\n        imageReduced(i, :, 3) = image(i, seamMask(i, :), 3);\n    end\nend\n\nfunction imageReduced = reduceImageByMaskHorizontal(image, seamMask)\n    % Input: \u1ea2nh &amp; mask c\u1ee7a \u0111\u01b0\u1eddng seam\n    % Output: \u1ea2nh sau khi x\u00f3a \u0111\u01b0\u1eddng seam ngang\n    imageReduced = zeros(size(image, 1) - 1, size(image, 2), size(image, 3));\n    for j = 1 : size(seamMask, 2)\n        imageReduced(:, j, 1) = image(seamMask(:, j), j, 1);\n        imageReduced(:, j, 2) = image(seamMask(:, j), j, 2);\n        imageReduced(:, j, 3) = image(seamMask(:, j), j, 3);\n    end\nend\n</code></pre> <p>\u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n hi\u1ec7u qu\u1ea3 \u0111\u1ec3 l\u00e0m gi\u00e1m k\u00edch th\u01b0\u1edbc \u1ea3nh theo m\u1ed9t chi\u1ec1u - ch\u1ec9 c\u1ea7n vi\u1ec7c t\u00ecm v\u00e0 x\u00f3a c\u00e1c \u0111\u01b0\u1eddng seam nhi\u1ec1u l\u1ea7n nh\u01b0 b\u1ea1n c\u1ea7n. Nh\u01b0ng n\u1ebfu l\u00e0m gi\u1ea3m k\u00edch th\u01b0\u1edbc theo c\u1ea3 hai chi\u1ec1u, ta c\u1ea7n ph\u1ea3i l\u00e0m nh\u01b0 th\u1ebf n\u00e0o? L\u00e0m sao \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh r\u1eb1ng \u1edf m\u1ed7i l\u1ea7n l\u1eafp \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh l\u00e0 x\u00f3a theo d\u00f2ng hay c\u1ed9t s\u1ebd t\u1ed1t h\u01a1n? V\u1ea5n \u0111\u1ec1 n\u00e0y m\u1ed9t l\u1ea7n n\u1eefa \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft b\u1eb1ng quy ho\u1ea1ch \u0111\u1ed9ng. Ta g\u1ecdi \\(T(i, j)\\) l\u00e0 gi\u00e1 tr\u1ecb n\u0103ng l\u01b0\u1ee3ng th\u1ea5p nh\u1ea5t khi ta lo\u1ea1i b\u1ecf i \u0111\u01b0\u1eddng seam theo chi\u1ec1u d\u1ecdc v\u00e0 j \u0111\u01b0\u1eddng seam theo chi\u1ec1u ngang.  C\u1ee5 th\u1ec3: \\(T(i, j) = min(T(i, j-1) + E(seamVertical), T(i-1,j) + E(seamHorizontal))\\). Trong \u0111\u00f3 \\(E(seamVertical)\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t (t\u1ed1i \u01b0u) \u0111\u01b0\u1eddng seam d\u1ecdc lo\u1ea1i b\u1ecf \u0111i, \\(E(seamHorizontal)\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t (t\u1ed1i \u01b0u) \u0111\u01b0\u1eddng seam ngang lo\u1ea1i b\u1ecf \u0111i. Ta s\u1eed d\u1ee5ng th\u00eam m\u1ed9t m\u1ea3ng \\(transBitMask(i, j)\\) l\u01b0u truy v\u1ebft \u0111\u01b0\u1eddng \u0111i cho b\u1ea3n ph\u01b0\u01a1ng \u00e1n \\(T(i, j)\\) .  \\(transBitMask(i, j) = 1\\) b\u1ecf \u0111i \u0111\u01b0\u1eddng seam d\u1ecdc, \\(transBitMask(i, j) = 0\\)  b\u1ecf \u0111i \u0111\u01b0\u1eddng seam ngang. Nh\u00ecn m\u1ed9t \u0111o\u1ea1n code gi\u1ea3 d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 h\u00ecnh dung.</p> <pre><code>1) T(0, 0) = 0;\n2) Kh\u1edfi t\u1ea1o T:\n   for all j {\n       T(0, j) = T(0, j - 1) + E(seamVertical); \n   }\n   for all i {\n       T(i, 0) = T(j - 1, 0) + E(seamHorizontal);\n    }\n3) Initialize borders of TransBitMask (TBM):\n   for all j { TBM(0, j) = 1; }\n   for all i { TBM(0, i) = 0; }\n4) T\u00ednh T v\u00e0 TBM:\n   for i = 2 to r {\n       imageWithoutRow = image;\n       for j = 2 to c {\n            energy = computeEnergy(imageWithoutRow);\n\n            horizontalSeamEnergy = findHorizontalSeamEnergy(energy);\n            verticalSeamEnergy = findVerticalSeamEnergy(energy);\n            tVertical = T(i - 1, j) + verticalSeamEnergy;\n            tHorizontal = T(i, j - 1) _ horizontalSeamEnergy;\n            if (tVertical &lt; tHorizontal) {\n                T(i, j) = tVertical;\n                TBM(i, j) = 1\n            } else {\n                T(i, j) = tHorizontal;    \n                TBM(i, j) = 0\n            }\n            // X\u00f3a \u0111\u01b0\u1eddng seam d\u1ecdc\n            imageWithoutRow = removeVerticalSeam(energy);\n        }\n\n        energy = computeEnergy(image);\n        image = removeHorizontalSeam(energy);\n    }\n\n5) Truy v\u1ebft theo T v\u00e0 TBM.\n</code></pre> <p>\u0110o\u1ea1n code b\u1eb1ng matlab. Ch\u00fa \u00fd \u1edf pseduocode d\u00f9ng zerobased index, do matlab s\u1eed d\u1ee5ng onebased index n\u00ean c\u1ea7n ph\u1ea3i \u0111\u1ea9y index l\u00ean 1 \u0111\u01a1n v\u1ecb.</p> <pre><code>function [T, transBitMask] = findTransportMatrix(sizeReduction, image)\n% Input: K\u00edch th\u01b0\u1edbc c\u1ea7n gi\u1ea3m &amp; \u1ea3nh g\u1ed1c\n% Output: T, TBM \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean\n\n    T = zeros(sizeReduction(1) + 1, sizeReduction(2) + 1, 'double');\n    transBitMask = ones(size(T)) * -1;\n\n    % Kh\u1edfi t\u1ea1o T(i, 1), T(1, i), TBM(i, 1), TBM(1, i)\n    imageNoRow = image;\n    for i = 2 : size(T, 1)\n        % T\u00ednh n\u0103ng l\u01b0\u1ee3ng\n        energy = energyRGB(imageNoRow);\n        % T\u00ecm \u0111\u01b0\u1eddng seam ngang t\u1ed1i \u01b0u\n        [optSeamMask, seamEnergyRow] = findOptSeam(energy');\n        % X\u00f3a \u0111\u01b0\u1eddng seam\n        imageNoRow = reduceImageByMask(imageNoRow, optSeamMask, 0);\n\n        % T\u00ednh T v\u00e0 TBM\n        T(i, 1) = T(i - 1, 1) + seamEnergyRow;\n        transBitMask(i, 1) = 0;\n    end;\n\n    imageNoColumn = image;\n    for j = 2 : size(T, 2)\n        % T\u00ednh n\u0103ng l\u01b0\u1ee3ng\n        energy = energyRGB(imageNoColumn);\n        % T\u00ecm \u0111\u01b0\u1eddng seam d\u1ecdc\n        [optSeamMask, seamEnergyColumn] = findOptSeam(energy);\n        % X\u00f3a \u0111\u01b0\u1eddng seam d\u1ecdc\n        imageNoColumn = reduceImageByMask(imageNoColumn, optSeamMask, 1);\n\n        % T\u00ednh TBM &amp; T\n        transBitMask(1, j) = 1;\n        T(1, j) = T(1, j - 1) + seamEnergyColumn;\n    end;\n\n    % X\u00f3a 1 h\u00e0ng v\u00e0 1 c\u1ed9t\n    energy = energyRGB(image);\n    [optSeamMask, seamEnergyRow] = findOptSeam(energy');\n    image = reduceImageByMask(image, optSeamMask, 0);\n\n    energy = energyRGB(image);\n    [optSeamMask, seamEnergyColumn] = findOptSeam(energy);\n    image = reduceImageByMask(image, optSeamMask, 1);\n\n    % fill in internal part\n    for i = 2 : size(T, 1)\n\n        imageWithoutRow = image; % Ta s\u1ebd x\u00f3a 1 h\u00e0ng c\u1ee7a imageWithoutRow\n\n        for j = 2 : size(T, 2)\n            energy = energyRGB(imageWithoutRow);\n\n            [optSeamMaskRow, seamEnergyRow] = findOptSeam(energy');\n            imageNoRow = reduceImageByMask(imageWithoutRow, optSeamMaskRow, 0);\n\n            [optSeamMaskColumn, seamEnergyColumn] = findOptSeam(energy);\n            imageNoColumn = reduceImageByMask(imageWithoutRow, optSeamMaskColumn, 1);\n\n            neighbors = [(T(i - 1, j) + seamEnergyRow) (T(i, j - 1) + seamEnergyColumn)];\n            [val, ind] = min(neighbors);\n\n            T(i, j) = val;\n            transBitMask(i, j) = ind - 1;\n\n            % Ta x\u00f3a l\u1ea7n l\u01b0\u1ee3t t\u1eebng c\u1ed9t\n            imageWithoutRow = imageNoColumn;\n        end;\n\n        energy = energyRGB(image);\n        [optSeamMaskRow, seamEnergyRow] = findOptSeam(energy');\n         % move from top to bottom\n        image = reduceImageByMask(image, optSeamMaskRow, 0);\n    end;\n\nend\n</code></pre>"},{"location":"cs/imageprocessing/Seam-Carving/#phong-to-hinh-anh","title":"Ph\u00f3ng to h\u00ecnh \u1ea3nh","text":"<p>\u0110\u1ec3 ph\u00f3ng to h\u00ecnh \u1ea3nh, thay v\u00ec ta lo\u1ea1i b\u1ecf \u0111\u01b0\u1eddng seam ra kh\u1ecfi \u1ea3nh, th\u00ec ta th\u00eam m\u1ed9t \u0111\u01b0\u1eddng seam m\u1edbi v\u00e0o v\u1edbi gi\u00e1 tr\u1ecb trung b\u00ecnh c\u1ee7a c\u00e1c \u0111i\u1ec3m \u1ea3nh l\u1eadn c\u1eadn.</p> <pre><code>function imageEnlarged = enlargeImageByMaskVertical(image, seamMask)\n% Input: \u1ea2nh v\u00e0 \u0111\u01b0\u1eddng seam\n% Output: \u1ea2nh \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00f3ng to th\u00eam 1 c\u1ed9t\n\n    avg = @(image, i, j, k) (image(i, j-1, k) + image(i, j+1, k))/2;\n\n    imageEnlarged = zeros(size(image, 1), size(image, 2) + 1, size(image, 3));\n    for i = 1 : size(seamMask, 1)\n        j = find(seamMask(i, :) ~= 1);\n        imageEnlarged(i, :, 1) = [image(i, 1:j, 1), avg(image, i, j, 1), image(i, j+1:end, 1)];\n        imageEnlarged(i, :, 2) = [image(i, 1:j, 2), avg(image, i, j, 2), image(i, j+1:end, 2)];\n        imageEnlarged(i, :, 3) = [image(i, 1:j, 3), avg(image, i, j, 3), image(i, j+1:end, 3)];\n    end;\nend\n\nfunction imageEnlarged = enlargeImageByMaskHorizontal(image, seamMask)\n% Input: \u1ea2nh v\u00e0 \u0111\u01b0\u1eddng seam\n% Output: \u1ea2nh \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00f3ng to th\u00eam 1 h\u00e0ng\n\n    avg = @(image, i, j, k) (image(i-1, j, k) + image(i+1, j, k))/2;\n\n    imageEnlarged = zeros(size(image, 1) + 1, size(image, 2), size(image, 3));\n    for j = 1 : size(seamMask, 2)\n        i = find(seamMask(:, j) ~= 1);\n        imageEnlarged(:, j, 1) = [image(1:i, j, 1); avg(image, i, j, 1); image(i+1:end, j, 1)];\n        imageEnlarged(:, j, 2) = [image(1:i, j, 2); avg(image, i, j, 2); image(i+1:end, j, 2)];\n        imageEnlarged(:, j, 3) = [image(1:i, j, 3); avg(image, i, j, 3); image(i+1:end, j, 3)];\n    end;\nend\n</code></pre>"},{"location":"cs/imageprocessing/Seam-Carving/#source-code","title":"Source code","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 to\u00e0n b\u1ed9 code c\u1ee7a t\u00e1c gi\u1ea3 (gi\u1eef nguy\u00ean l\u1ea1i comment g\u1ed1c b\u1eb1ng ti\u1ebfng Anh)</p> <pre><code>% (C) Copyright Kirill Lykov 2013.\n%\n% Distributed under the FreeBSD Software License (See accompanying file license.txt)\n\nfunction image = seamCarving(newSize, image)\n% apply seam carving to the image\n% following paper by Avidan and Shamir '07\n    sizeReductionX = size(image, 1) - newSize(1);\n    sizeReductionY = size(image, 2) - newSize(2);\n\n    mmax = @(left, right) max([left right]);\n\n    image = seamCarvingReduce([mmax(0, sizeReductionX), mmax(0, sizeReductionY)], image);\n\n    image = seamCarvingEnlarge([mmax(0, -sizeReductionX), mmax(0, -sizeReductionY)], image);\nend\n\nfunction image = seamCarvingReduce(sizeReduction, image)\n    if (sizeReduction == 0)\n        return;\n    end;\n    [T, transBitMask] = findTransportMatrix(sizeReduction, image);\n    image = addOrDeleteSeams(transBitMask, sizeReduction, image, @reduceImageByMask);\nend\n\n% TODO Bug: enlarge gives artifacts althout I chouse different seams as described \n% in 4.3 in the paper\nfunction image = seamCarvingEnlarge(sizeEnlarge, image)\n    if (sizeEnlarge == 0)\n        return;\n    end;\n    [T, transBitMask] = findTransportMatrix(sizeEnlarge, image);\n    image = addOrDeleteSeams(transBitMask, sizeEnlarge, image, @enlargeImageByMask);\nend\n\nfunction [T, transBitMask] = findTransportMatrix(sizeReduction, image)\n% find optimal order of removing raws and columns\n\n    T = zeros(sizeReduction(1) + 1, sizeReduction(2) + 1, 'double');\n    transBitMask = ones(size(T)) * -1;\n\n    % fill in borders\n    imageNoRow = image;\n    for i = 2 : size(T, 1)\n        energy = energyRGB(imageNoRow);\n        [optSeamMask, seamEnergyRow] = findOptSeam(energy');\n        imageNoRow = reduceImageByMask(imageNoRow, optSeamMask, 0);\n        transBitMask(i, 1) = 0;\n\n        T(i, 1) = T(i - 1, 1) + seamEnergyRow;\n    end;\n\n    imageNoColumn = image;\n    for j = 2 : size(T, 2)\n        energy = energyRGB(imageNoColumn);\n        [optSeamMask, seamEnergyColumn] = findOptSeam(energy);\n        imageNoColumn = reduceImageByMask(imageNoColumn, optSeamMask, 1);\n        transBitMask(1, j) = 1;\n\n        T(1, j) = T(1, j - 1) + seamEnergyColumn;\n    end;\n\n    % on the borders, just remove one column and one row before proceeding\n    energy = energyRGB(image);\n    [optSeamMask, seamEnergyRow] = findOptSeam(energy');\n    image = reduceImageByMask(image, optSeamMask, 0);\n\n    energy = energyRGB(image);\n    [optSeamMask, seamEnergyColumn] = findOptSeam(energy);\n    image = reduceImageByMask(image, optSeamMask, 1);\n\n    % fill in internal part\n    for i = 2 : size(T, 1)\n\n        imageWithoutRow = image; % copy for deleting columns\n\n        for j = 2 : size(T, 2)\n            energy = energyRGB(imageWithoutRow);\n\n            [optSeamMaskRow, seamEnergyRow] = findOptSeam(energy');\n            imageNoRow = reduceImageByMask(imageWithoutRow, optSeamMaskRow, 0);\n\n            [optSeamMaskColumn, seamEnergyColumn] = findOptSeam(energy);\n            imageNoColumn = reduceImageByMask(imageWithoutRow, optSeamMaskColumn, 1);\n\n            neighbors = [(T(i - 1, j) + seamEnergyRow) (T(i, j - 1) + seamEnergyColumn)];\n            [val, ind] = min(neighbors);\n\n            T(i, j) = val;\n            transBitMask(i, j) = ind - 1;\n\n            % move from left to right\n            imageWithoutRow = imageNoColumn;\n        end;\n\n        energy = energyRGB(image);\n        [optSeamMaskRow, seamEnergyRow] = findOptSeam(energy');\n         % move from top to bottom\n        image = reduceImageByMask(image, optSeamMaskRow, 0);\n    end;\n\nend\n\nfunction image = addOrDeleteSeams(transBitMask, sizeReduction, image, operation)\n% delete seams following optimal way\n    i = size(transBitMask, 1);\n    j = size(transBitMask, 2);\n\n    for it = 1 : (sizeReduction(1) + sizeReduction(2))\n\n        energy = energyRGB(image);\n        if (transBitMask(i, j) == 0)\n            [optSeamMask, seamEnergyRaw] = findOptSeam(energy');\n            image = operation(image, optSeamMask, 0);\n            i = i - 1;\n        else\n            [optSeamMask, seamEnergyColumn] = findOptSeam(energy);\n            image = operation(image, optSeamMask, 1);\n            j = j - 1;\n        end;\n\n    end;\nend\n\nfunction [optSeamMask, seamEnergy] = findOptSeam(energy)\n% following paper by Avidan and Shamir `07\n% finds optimal seam\n% returns mask with 0 mean a pixel is in the seam\n\n    % find M for vertical seams\n    % for vertical - use I`\n    M = padarray(energy, [0 1], realmax('double')); % to avoid handling border elements\n\n    sz = size(M);\n    for i = 2 : sz(1)\n        for j = 2 : (sz(2) - 1)\n            neighbors = [M(i - 1, j - 1) M(i - 1, j) M(i - 1, j + 1)];\n            M(i, j) = M(i, j) + min(neighbors);\n        end\n    end\n\n    % find the min element in the last raw\n    [val, indJ] = min(M(sz(1), :));\n    seamEnergy = val;\n\n    %optSeam = zeros(sz(1), 1, 'int32');\n    optSeamMask = zeros(size(energy), 'uint8');\n\n    %indJ = indJ - 1; % because of padding on 1 element from left\n\n    %go backward and save (i, j)\n    for i = sz(1) : -1 : 2\n        %optSeam(i) = indJ - 1;\n        optSeamMask(i, indJ - 1) = 1; % -1 because of padding on 1 element from left\n        neighbors = [M(i - 1, indJ - 1) M(i - 1, indJ) M(i - 1, indJ + 1)];\n        [val, indIncr] = min(neighbors);\n\n        seamEnergy = seamEnergy + val;\n\n        indJ = indJ + (indIncr - 2); % (x - 2): [1,2]-&gt;[-1,1]]\n    end\n    %optSeam(1) = indJ; % to avoid if in loop becuase matlab is slow as hell\n\n    optSeamMask(1, indJ - 1) = 1; % -1 because of padding on 1 element from left\n    optSeamMask = ~optSeamMask;\n\nend\n\nfunction imageReduced = reduceImageByMask( image, seamMask, isVerical )\n% removes pixels by input mask\n% removes vertical line if isVerical == 1, otherwise horizontal\n    if (isVerical)\n        imageReduced = reduceImageByMaskVertical(image, seamMask);\n    else\n        imageReduced = reduceImageByMaskHorizontal(image, seamMask');\n    end;\nend\n\n% could not find a more elegant way to do it\nfunction imageReduced = reduceImageByMaskVertical(image, seamMask)\n    imageReduced = zeros(size(image, 1), size(image, 2) - 1, size(image, 3));\n    for i = 1 : size(seamMask, 1)\n        imageReduced(i, :, 1) = image(i, seamMask(i, :), 1);\n        imageReduced(i, :, 2) = image(i, seamMask(i, :), 2);\n        imageReduced(i, :, 3) = image(i, seamMask(i, :), 3);\n    end\nend\n\nfunction imageReduced = reduceImageByMaskHorizontal(image, seamMask)\n    imageReduced = zeros(size(image, 1) - 1, size(image, 2), size(image, 3));\n    for j = 1 : size(seamMask, 2)\n        imageReduced(:, j, 1) = image(seamMask(:, j), j, 1);\n        imageReduced(:, j, 2) = image(seamMask(:, j), j, 2);\n        imageReduced(:, j, 3) = image(seamMask(:, j), j, 3);\n    end\nend\n\nfunction imageEnlarged = enlargeImageByMask(image, seamMask, isVerical)\n% removes pixels by input mask\n% removes vertical line if isVerical == 1, otherwise horizontal\n    if (isVerical)\n        imageEnlarged = enlargeImageByMaskVertical(image, seamMask);\n    else\n        imageEnlarged = enlargeImageByMaskHorizontal(image, seamMask');\n    end;\nend\n\nfunction imageEnlarged = enlargeImageByMaskVertical(image, seamMask)\n\n    avg = @(image, i, j, k) (image(i, j-1, k) + image(i, j+1, k))/2;\n\n    imageEnlarged = zeros(size(image, 1), size(image, 2) + 1, size(image, 3));\n    for i = 1 : size(seamMask, 1)\n        j = find(seamMask(i, :) ~= 1);\n        imageEnlarged(i, :, 1) = [image(i, 1:j, 1), avg(image, i, j, 1), image(i, j+1:end, 1)];\n        imageEnlarged(i, :, 2) = [image(i, 1:j, 2), avg(image, i, j, 2), image(i, j+1:end, 2)];\n        imageEnlarged(i, :, 3) = [image(i, 1:j, 3), avg(image, i, j, 3), image(i, j+1:end, 3)];\n    end;\nend\n\nfunction imageEnlarged = enlargeImageByMaskHorizontal(image, seamMask)\n\n    avg = @(image, i, j, k) (image(i-1, j, k) + image(i+1, j, k))/2;\n\n    imageEnlarged = zeros(size(image, 1) + 1, size(image, 2), size(image, 3));\n    for j = 1 : size(seamMask, 2)\n        i = find(seamMask(:, j) ~= 1);\n        imageEnlarged(:, j, 1) = [image(1:i, j, 1); avg(image, i, j, 1); image(i+1:end, j, 1)];\n        imageEnlarged(:, j, 2) = [image(1:i, j, 2); avg(image, i, j, 2); image(i+1:end, j, 2)];\n        imageEnlarged(:, j, 3) = [image(1:i, j, 3); avg(image, i, j, 3); image(i+1:end, j, 3)];\n    end;\nend\n\nfunction res = energyRGB(I)\n% returns energy of all pixelels\n% e = |dI/dx| + |dI/dy|\n    res = energyGrey(I(:, :, 1)) + energyGrey(I(:, :, 2)) + energyGrey(I(:, :, 3));\nend\n\nfunction res = energyGrey(I)\n% returns energy of all pixelels\n% e = |dI/dx| + |dI/dy|\n    res = abs(imfilter(I, [-1,0,1], 'replicate')) + abs(imfilter(I, [-1;0;1], 'replicate'));\nend\n</code></pre>"},{"location":"cs/imageprocessing/Seam-Carving/#tham-khao","title":"Tham kh\u1ea3o","text":"<p>Wikipedia</p> <p>Seam Carving for Content-Aware Image Scaling</p> <p>https://jeremykun.com/2013/03/04/seam-carving-for-content-aware-image-scaling/</p> <p>http://kirilllykov.github.io/blog/2013/06/06/seam-carving-algorithm/</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/","title":"H\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t OpenCV tr\u00ean Windows","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#bien-dich-thu-vien-opencv","title":"Bi\u00ean d\u1ecbch th\u01b0 vi\u1ec7n OpenCV","text":"<p>\u0110i\u1ec3m thu\u1eadn l\u1ee3i c\u1ee7a vi\u1ec7c t\u1ef1 c\u00e0i \u0111\u1eb7t v\u00e0 bi\u00ean d\u1ecbch th\u01b0 vi\u1ec7n c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn nh\u01b0 sau: 1. H\u1ed7 tr\u1ee3 IDE m\u1edbi nh\u1ea5t, nh\u01b0 trong b\u1ea3n OpenCV 3.0 (22/11/2015) th\u00ec ch\u01b0a c\u00f3 b\u1ea3n bi\u00ean d\u1ecbch s\u1eb5n d\u00e0nh cho VS 2015. 2. Customize \u0111\u01b0\u1ee3c c\u00e1c th\u01b0 vi\u1ec7n kh\u00e1c li\u00ean quan nh\u01b0 Kinect, OpenCL, Python\u2026</p> <p>Link Download th\u01b0 vi\u1ec7n OpenCV cho H\u0110H Windows</p> <p>B\u01b0\u1edbc 1: Gi\u1ea3i n\u00e9n th\u01b0 vi\u1ec7n v\u00e0o th\u01b0 m\u1ee5c \u0111\u01b0\u1ee3c \u0111\u1ecbnh s\u1eb5n. Gi\u1ea3 s\u1eed \u0111\u01b0\u1eddng d\u1eabn c\u1ee7a m\u00e3 ngu\u1ed3n l\u00e0 C:\\opencv</p> <p></p> <p>B\u01b0\u1edbc 2: T\u1ea3i v\u00e0 c\u00e0i \u0111\u1eb7t CMake. Th\u01b0 m\u1ee5c build ch\u1ee9a nh\u1eefng t\u1eadp tin c\u1ee7a ph\u1ea7n m\u00e3 ngu\u1ed3n \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch s\u1eb5n. Ph\u1ea7n sources \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho c\u00e0i \u0111\u1eb7t manual.</p> <p></p> <p>B\u01b0\u1edbc 3: M\u1edf CMake. Trong ph\u1ea7n Where is the source code s\u1ebd tr\u1ecf \u0111\u1ebfn th\u01b0 m\u1ee5c sources \u0111\u00e3 \u0111\u1ec1 c\u1eadp l\u00fac tr\u01b0\u1edbc. Ph\u1ea7n Where to build the binaries l\u00e0 n\u01a1i ch\u1ee9a ph\u1ea7n th\u01b0 vi\u1ec7n \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch. Trong v\u00ed d\u1ee5 n\u00e0y \u0111\u01b0\u1eddng d\u1eabn l\u00e0 C:\\opencv\\source\\build.</p> <p></p> <p>B\u01b0\u1edbc ti\u1ebfp theo nh\u1ea5n Configure, sau \u0111\u00f3 ch\u1ecdn b\u1ed9 generator cho project, trong ph\u1ea7n n\u00e0y s\u1ebd ch\u1ecdn t\u01b0\u01a1ng \u1ee9ng v\u1edbi IDE/Compiler m\u00e0 m\u00e3 ngu\u1ed3n m\u00ecnh s\u1eed d\u1ee5ng. \u0110\u1ed3ng th\u1eddi, n\u1ebfu m\u00e1y t\u00ednh \u0111ang \u1edf ki\u1ebfn tr\u00fac x86 th\u00ec ch\u1ecdn c\u00e1c phi\u00ean b\u1ea3n IDE v\u1edbi t\u00f9y ch\u1ecdn l\u00e0 x86 (V\u00ed d\u1ee5 Visual Studio 14 2015). \u0110\u1ed1i v\u1edbi c\u00e1c m\u00e1y t\u00ednh ki\u1ebfn tr\u00fac x64 th\u00ec ch\u1ecdn phi\u00ean b\u1ea3n c\u00f3 h\u1eadu t\u1ed1 l\u00e0 Win64. Nh\u1ea5n Finish \u0111\u1ec3 k\u1ebft th\u00fac c\u1ea5u h\u00ecnh.</p> <p>Sau khi configure xong th\u00ec danh s\u00e1ch c\u00e1c t\u00f9y ch\u1ecdn khi bi\u00ean d\u1ecbch \u0111\u1ec3 hi\u1ec7n ra v\u1edbi r\u1ea5t nhi\u1ec1u t\u00f9y bi\u1ebfn \u0111i k\u00e8m. Ph\u1ea7n n\u00e0y trong tutorial n\u00e0y s\u1ebd b\u1ecf qua v\u00ec m\u1ee5c ti\u00eau ch\u1ec9 c\u1ea7n c\u00e0i \u0111\u1eb7t b\u1ed9 th\u01b0 vi\u1ec7n \u1edf m\u1ee9c m\u1eb7c \u0111\u1ecbnh l\u00e0 th\u00e0nh c\u00f4ng r\u1ed3i. N\u1ebfu kh\u00f4ng c\u00f3 g\u00ec thay \u0111\u1ed5i ta nh\u1ea5n ch\u1ecdn Generate.</p> <p>Sau khi qu\u00e1 tr\u00ecnh ph\u00e1t sinh m\u00e3 ngu\u1ed3n ho\u00e0n t\u1ea5t, trong th\u01b0 m\u1ee5c build s\u1ebd xu\u1ea5t hi\u1ec7n c\u00e1c Project/Solution kh\u00e1c nhau.</p> <p>B\u01b0\u1edbc 4: D\u00f9ng Visual Studio \u0111\u1ec3 m\u1edf solution c\u00f3 t\u00ean l\u00e0 OPENCV. L\u01b0u \u00fd: khi b\u1ea3n VS n\u00e0y ph\u1ea3i tr\u00f9ng v\u1edbi b\u1ea3n VS \u0111\u00e3 configure trong cmake.</p> <p></p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#cau-hinh-opencv-tren-visual-studio","title":"C\u1ea5u h\u00ecnh Opencv tr\u00ean Visual Studio","text":"<p>B\u01b0\u1edbc 1: T\u1ea1o m\u1ed9t Project (Empty Project).</p> <p></p> <p>Tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n ti\u1ebfp c\u00e1c c\u00f4ng vi\u1ec7c c\u1ea5u h\u00ecnh cho project. Ta c\u1ea7n x\u00e1c \u0111\u1ecbnh r\u00f5 s\u1ebd c\u1ea7n c\u1ea5u h\u00ecnh nh\u1eefng th\u00f4ng tin g\u00ec: 1. N\u01a1i ch\u1ee9a header file c\u1ee7a OpenCV. D\u0129 nhi\u00ean ta c\u1ea7n l\u00e0m \u0111i\u1ec1u n\u00e0y \u0111\u1ec3 include c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng, h\u00e0m\u2026 c\u1ee7a  2. C\u1ea5u h\u00ecnh c\u00e1c file c\u1ea7n thi\u1ebft khi l\u1eadp  3. C\u1ea5u h\u00ecnh c\u00e1c file c\u1ea7n thi\u1ebft cho qu\u00e1 tr\u00ecnh th\u1ef1c thi. B\u1edfi trong Visual Studio c\u00f3 2 target khi run bao g\u1ed3m Debug v\u00e0 Release, n\u00ean ta c\u1ea7n ph\u1ea3i c\u1ea5u h\u00ecnh ri\u00eang bi\u1ec7t cho m\u1ed7i target \u0111\u00f3.</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#cau-hinh-header-file","title":"C\u1ea5u h\u00ecnh header file","text":"<p>Click chu\u1ed9t ph\u1ea3i v\u00e0o t\u00ean project (InstallOpencv) ch\u1ecdn Properties (Ho\u1eb7c nh\u1ea5n Alt + F7).</p> <p></p> <p>Ph\u00eda b\u00ean ph\u1ea7n Sidebar ch\u1ecdn C/C++, General, m\u1ee5c Additional Include Directories ta tr\u1ecf \u0111\u1ebfn th\u01b0 m\u1ee5c opencv\\build\\include (kh\u00f4ng ph\u1ea3i sources\\build\\include). \u0110\u1ec3 \u0111\u1ea3m b\u1ea3o ta c\u00f3 th\u1ec3 check b\u1eb1ng c\u00e1ch ki\u1ec3m tra xem th\u01b0 m\u1ee5c include \u0111\u00f3 c\u00f3 c\u00e1c header file kh\u00f4ng. Xong nh\u1ea5n OK.</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#cau-hinh-thu-vien-cho-qua-trinh-lap-trinh","title":"C\u1ea5u h\u00ecnh th\u01b0 vi\u1ec7n cho qu\u00e1 tr\u00ecnh l\u1eadp tr\u00ecnh","text":"<p>Nh\u1ea5n Alt + F7 \u0111\u1ec3 v\u00e0o ph\u1ea7n Properties c\u1ee7a Project. Ch\u1ecdn Th\u1ebb Linker, m\u1ee5c Additional Library Directories ta tr\u1ecf \u0111\u1ebfn th\u01b0 m\u1ee5c lib\\Debug (trong v\u00ed d\u1ee5 n\u00e0y l\u00e0: C:\\oepncv\\sources\\build\\lib\\Debug). V\u00ec \u0111ang c\u1ea5u h\u00ecnh cho target l\u00e0 Debug n\u00ean ph\u1ea7n Configuration ph\u1ea3i l\u00e0 Debug</p> <p></p> <p>Chuy\u1ec3n \u0111\u1ebfn th\u1ebb Input, m\u1ee5c Additional Dependencies ta nh\u1eadp c\u00e1c file sau:</p> <p>opencv_calib3d300d.lib opencv_core300d.lib opencv_features2d300d.lib opencv_flann300d.lib opencv_hal300d.lib opencv_highgui300d.lib opencv_imgcodecs300d.lib opencv_imgproc300d.lib opencv_ml300d.lib opencv_objdetect300d.lib opencv_photo300d.lib opencv_shape300d.lib opencv_stitching300d.lib opencv_superres300d.lib opencv_ts300d.lib opencv_video300d.lib opencv_videoio300d.lib opencv_videostab300d.lib</p> <p>Sau khi c\u1ea5u h\u00ecnh xong, ta chuy\u1ec3n qua target l\u00e0 Release v\u00e0 th\u1ef1c hi\u1ec7n gi\u1ed1ng h\u1ec7t nh\u01b0 v\u1eady. Tuy nhi\u00ean \u0111\u01b0\u1eddng d\u1eabn l\u1ea7n n\u00e0y s\u1ebd l\u00e0 sources\\build\\lib\\Release.</p> <p>Ph\u1ea7n Additional Dependencies s\u1ebd l\u00e0:</p> <p>opencv_calib3d300.lib opencv_core300.lib opencv_features2d300.lib opencv_flann300.lib opencv_hal300.lib opencv_highgui300.lib opencv_imgcodecs300.lib opencv_imgproc300.lib opencv_ml300.lib opencv_objdetect300.lib opencv_photo300.lib opencv_shape300.lib opencv_stitching300.lib opencv_superres300.lib opencv_ts300.lib opencv_video300.lib opencv_videoio300.lib opencv_videostab300.lib</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#cau-hinh-thu-vien-cho-qua-trinh-thuc-thi","title":"C\u1ea5u h\u00ecnh th\u01b0 vi\u1ec7n cho qu\u00e1 tr\u00ecnh th\u1ef1c thi","text":"<p>Khi th\u1ef1c hi\u1ec7n build 1 ch\u01b0\u01a1ng tr\u00ecnh, VS s\u1ebd t\u1ea1o ra trong th\u01b0 m\u1ee5c c\u1ee7a Solution m\u1ed9t th\u01b0 m\u1ee5c v\u1edbi c\u1ea5u tr\u00fac nh\u01b0 sau: \\Debug v\u00e0 \\Release. Trong v\u00ed d\u1ee5 n\u00e0y l\u00e0 x64\\Debug, x64\\Release. Ta ch\u00e9p to\u00e0n b\u1ed9 file trong build\\bin\\Debug v\u00e0o x64\\Debug, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady \u0111\u1ed1i v\u1edbi build\\bin\\Release v\u00e0 x64\\Release.</p> <p>T\u1ea1o m\u1ed9t file cpp v\u00e0 run th\u1eed ch\u01b0\u01a1ng tr\u00ecnh.</p> <p>M\u00e3 ngu\u1ed3n:</p> <p><pre><code>## include &lt;opencv2/opencv.hpp&gt;\n## include &lt;iostream&gt;\nusing namespace cv;\nusing namespace std;\nint main() {\n    Mat img = imread(\"demo.jpg\");\n    imshow(\"show image\", img);\n    waitKey(0);\n    destroyAllWindows();\n}\n</code></pre> (V\u1edbi m\u00e3 ngu\u1ed3n n\u00e0y l\u01b0u \u00fd \u0111\u1eb7t 1 file t\u00ean l\u00e0 demo.jpg v\u00e0o trong th\u01b0 m\u1ee5c ch\u1ee9a m\u00e3 ngu\u1ed3n).</p> <p></p> <p>K\u1ebft qu\u1ea3 ta \u0111\u01b0\u1ee3c nh\u01b0 h\u00ecnh tr\u00ean.</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#tuy-nhien","title":"Tuy nhi\u00ean","text":"<p>C\u00f3 m\u1ed9t ch\u1eef tuy nhi\u00ean to \u0111\u00f9ng nh\u01b0 v\u1eady v\u00ec v\u1edbi c\u00e1ch c\u1ea5u h\u00ecnh th\u1ebf n\u00e0y c\u00f3 kh\u00e1 l\u00e0 nhi\u1ec1u b\u1ea5t c\u1eadp:</p> <ol> <li>M\u1ed7i l\u1ea7n t\u1ea1o 1 project OpenCV m\u1edbi m\u00e0 ng\u1ed3i config (M\u1ee5c 2) th\u00ec c\u0169ng r\u1ea5t l\u00e0 m\u1ea5t th\u1eddi gian. Ch\u01b0a k\u1ec3 trong l\u00fac c\u1ea5u h\u00ecnh m\u00e0 qu\u00ean m\u1ea5t m\u1ed9t c\u00f4ng \u0111o\u1ea1n n\u00e0o th\u00ec c\u00f3 khi \u0111i tong c\u1ea3 bu\u1ed5i ch\u1ec9 \u0111\u1ec3 fix l\u1ed7i.</li> <li>Nh\u1eefng file trong sources\\bin\\Debug hay Release \u0111\u1ec1u x\u1ea5p x\u1ec9 900MB. V\u1ecb chi m\u1ed7i l\u1ea7n ch\u00e9p qua b\u00ean project th\u00ec t\u1ed1n th\u00eam 1.8GB b\u1ed9 nh\u1edb. Ch\u1ec9 c\u1ea7n trong m\u00e1y ch\u1ee9a d\u0103m ba project d\u00f9ng OpenCV th\u00ec s\u1ebd ng\u1ed1n dung l\u01b0\u1ee3ng \u0111\u1ebfn ch\u1eebng n\u00e0o.</li> <li>Ph\u1ea7n Additional Dependencies m\u1ed7i phi\u00ean b\u1ea3n OpenCV m\u1ed7i kh\u00e1c, l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c danh s\u00e1ch c\u00e1c file nh\u01b0 th\u1ebf n\u00e0y.</li> </ol> <p>Ta s\u1ebd gi\u1ea3i quy\u1ebft t\u1eeb d\u1ec5 \u0111\u1ebfn kh\u00f3 tr\u01b0\u1edbc.</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#additional-dependencies","title":"Additional Dependencies","text":"<p>Sau khi bi\u00ean d\u1ecbch xong th\u01b0 vi\u1ec7n ta m\u1edf Command Line v\u00e0 tr\u1ecf \u0111\u1ebfn th\u01b0 m\u1ee5c sources\\build\\lib</p> <p>G\u00f5 l\u1ec7nh sau:</p> <p>dir Debug*d.lib /B &gt;..\\DependenciesDebug.txt dir Release*.lib /B &gt;..\\DependenciesRelease.txt</p> <p>Sau khi g\u00f5 xong th\u00ec trong th\u01b0 m\u1ee5c build s\u1ebd xu\u1ea5t hi\u1ec7n 2 file text l\u00e0 DependenciesDebug v\u00e0 DependenciesRelease ch\u1ee9a danh s\u00e1ch t\u00e2t c\u1ea3 c\u00e1c file libs. M\u1ed7i l\u1ea7n s\u1eed d\u1ee5ng ch\u1ec9 c\u1ea7n m\u1edf file l\u00ean v\u00e0 ch\u00e9p v\u00e0o.</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#lib-configuration","title":"Lib Configuration","text":"<p>M\u1edf Command Line (V\u1edbi quy\u1ec1n Admin - click chu\u1ed9t ph\u1ea3i v\u00e0o bi\u1ec3u t\u01b0\u1ee3ng Start v\u00e0 ch\u1ecdn Command Promp) v\u00e0 g\u00f5 l\u1ec7nh</p> <p>setx -m OPENCV_DIR C:\\opencv</p> <p>Nh\u1ea5n Windows E \u0111\u1ec3 m\u1edf Windows Explore</p> <p></p> <p>Click v\u00e0o Computer v\u00e0 ch\u1ecdn Properties</p> <p></p> <p>Ch\u1ecdn Advanced system settings. Trong th\u1ebb Advanced ch\u1ecdn Environment Variables\u2026</p> <p></p> <p>\u0110i\u1ec1n ngay ph\u00eda sau c\u1ee7a ph\u1ea7n Variable value gi\u00e1 tr\u1ecb sau: %OPENCV_DIR%\\sources\\build\\bin\\Debug;%OPENCV_DIR%\\sources\\build\\bin\\Release</p> <p>Xong, v\u00e0 t\u1eeb gi\u1edd tr\u1edf \u0111i ta kh\u00f4ng c\u1ea7n ph\u1ea3i ch\u00e9p c\u00e1c file trong build\\bin v\u00e0o trong project n\u1eefa.</p>"},{"location":"cs/imageprocessing/setup-opencv-windows/#sao-luu-config-cua-project","title":"Sao l\u01b0u config c\u1ee7a project","text":"<p>Trong sidebar Property Manager ta th\u1ea5y danh s\u00e1ch c\u00e1c config architecture trong project t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1eebng target .</p> <p></p> <p>Ta s\u1ebd t\u1ea1o m\u1ed9t Property Sheet m\u1edbi (Click chu\u1ed9t ph\u1ea3i v\u00e0o t\u1eebng m\u1ee5c v\u00e0 ch\u1ecdn Add New Project Property Sheet\u2026), double click v\u00e0o m\u1ee5c m\u1edbi t\u1ea1o v\u00e0 c\u1ea5u h\u00ecnh gi\u1ed1ng h\u1ec7t v\u1edbi m\u1ee5c 2. Sau \u0111\u00f3 l\u01b0u l\u1ea1i. VS s\u1ebd t\u1ea1o ra 1 file c\u00f3 \u0111\u1ecbnh d\u1ea1ng props trong project. Sau n\u00e0y khi t\u1ea1o ra 1 project m\u1edbi ta ch\u1ec9 c\u1ea7n import Property \u0111\u00e3 t\u1ea1o m\u00e0 kh\u00f4ng c\u1ea7n config l\u1ea1i t\u1eeb \u0111\u1ea7u.</p> <p>V\u00ec \u0111\u00e3 set OPENCV_DIR l\u00e0 th\u01b0 m\u1ee5c c\u1ee7a OpenCV n\u00ean ta c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u01b0\u1eddng d\u1eabn c\u1ee7a c\u00e1c config th\u00e0nh</p> <p>%OPENCV_DIR%\\build\\include %OPENCV_DIR%\\source\\build\\lib\\Debug %OPENCV_DIR%\\source\\build\\lib\\Release</p>"},{"location":"cs/ml/machine-learning-101/","title":"Machine Learning 101 (1): L\u00e0m quen","text":"<p>T\u00e1c gi\u1ea3: Nguy\u1ec5n Xu\u00e2n Kh\u00e1nh</p> <p>Xin ch\u00e0o, m\u00ecnh l\u00e0 khanhptnk. M\u00ecnh l\u00e0 m\u1ed9t ng\u01b0\u1eddi \u0111ang h\u1ecdc v\u00e0 nghi\u00ean c\u1ee9u v\u1ec1 Machine Learning. L\u0129nh v\u1ef1c m\u00ecnh chuy\u00ean s\u00e2u cho \u0111\u1ebfn b\u00e2y gi\u1edd l\u00e0 Natural Language Processing (g\u1ecdi t\u1eaft l\u00e0 NLP), t\u1ee9c l\u00e0 l\u00e0m cho m\u00e1y t\u00ednh c\u00f3 kh\u1ea3 n\u0103ng hi\u1ec3u \u0111\u01b0\u1ee3c ng\u00f4n ng\u1eef c\u1ee7a con ng\u01b0\u1eddi. M\u00ecnh kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t chuy\u00ean gia, kinh nghi\u1ec7m c\u00f2n kh\u00e1 non n\u1ebfu so v\u1edbi c\u00e1c gi\u00e1o s\u01b0 \u0111\u1ea7u ng\u00e0nh nh\u01b0ng m\u00ecnh r\u1ea5t mu\u1ed1n \u0111em b\u1ed9 m\u00f4n n\u00e0y v\u1ec1 gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n, nh\u1ea5t l\u00e0 c\u00e1c b\u1ea1n c\u00f2n \u0111ang loay hoay t\u00ecm c\u00e2u tr\u1ea3 l\u1eddi cho c\u00e2u h\u1ecfi: h\u1ecdc Tin h\u1ecdc sau n\u00e0y l\u00e0m \u0111\u01b0\u1ee3c g\u00ec? \u0110\u00e2y l\u00e0 b\u00e0i vi\u1ebft m\u1edf \u0111\u1ea7u cho cu\u1ed1n s\u00e1ch v\u1ec1 machine learning c\u01a1 b\u1ea3n c\u1ee7a m\u00ecnh.</p> <p>V\u00e0o n\u0103m 2014, m\u00ecnh c\u00f3 thuy\u1ebft tr\u00ecnh tr\u01b0\u1edbc l\u1edbp m\u1ed9t b\u00e0i gi\u1edbi thi\u1ec7u v\u1ec1 Machine Learning. N\u1ed9i dung b\u00e0i vi\u1ebft n\u00e0y ph\u1ea7n l\u1edbn d\u1ef1a v\u00e0o \u0111\u00f3. \u0110\u1ec3 gi\u1edbi thi\u1ec7u v\u1ec1 Machine Learning, m\u00ecnh xin d\u1ef1a v\u00e0o m\u1ed1i quan h\u1ec7 c\u1ee7a n\u00f3 v\u1edbi ba kh\u00e1i ni\u1ec7m sau:</p> <ol> <li>Machine Learning v\u00e0 tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o (Artificial Intelligence hay AI)</li> <li>Machine Learning v\u00e0 Big Data.</li> <li>Machine Learning v\u00e0 d\u1ef1 \u0111o\u00e1n t\u01b0\u01a1ng lai.</li> </ol> <p>Tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o, AI, m\u1ed9t c\u1ee5m t\u1eeb v\u1eeba g\u1ea7n g\u0169i v\u1eeba xa l\u1ea1 \u0111\u1ed1i v\u1edbi ch\u00fang ta. G\u1ea7n g\u0169i b\u1edfi v\u00ec th\u1ebf gi\u1edbi \u0111ang ph\u00e1t s\u1ed1t v\u1edbi nh\u1eefng c\u00f4ng ngh\u1ec7 \u0111\u01b0\u1ee3c d\u00e1n nh\u00e3n AI. Xa l\u1ea1 b\u1edfi v\u00ec m\u1ed9t AI th\u1ef1c th\u1ee5 v\u1eabn c\u00f2n n\u1eb1m ngo\u00e0i t\u1ea7m v\u1edbi c\u1ee7a ch\u00fang ta. N\u00f3i \u0111\u1ebfn AI, h\u1eb3n m\u1ed7i ng\u01b0\u1eddi s\u1ebd li\u00ean t\u01b0\u1edfng \u0111\u1ebfn m\u1ed9t h\u00ecnh \u1ea3nh kh\u00e1c nhau. C\u00e1c b\u1ea1n c\u00f3 \u0111\u1ec3 \u00fd r\u1eb1ng v\u00e0i th\u1eadp ni\u00ean g\u1ea7n \u0111\u00e2y c\u00f3 m\u1ed9t s\u1ef1 thay \u0111\u1ed5i v\u1ec1 di\u00ean m\u1ea1o c\u1ee7a AI trong c\u00e1c b\u1ed9 phim qu\u1ed1c t\u1ebf. Tr\u01b0\u1edbc \u0111\u00e2y, c\u00e1c nh\u00e0 s\u1ea3n xu\u1ea5t phim th\u01b0\u1eddng xuy\u00ean \u0111\u01b0a h\u00ecnh \u1ea3nh robot ho\u1eb7c terminator v\u00e0o phim, nh\u1eb1m gieo v\u00e0o \u0111\u1ea7u ng\u01b0\u1eddi xem suy ngh\u0129 r\u1eb1ng tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o nh\u01b0 m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c nh\u00e2n b\u1ea3n con ng\u01b0\u1eddi b\u1eb1ng m\u00e1y m\u00f3c. Tuy nhi\u00ean, trong nh\u1eefng b\u1ed9 phim g\u1ea7n \u0111\u00e2y nh\u1ea5t v\u1ec1 \u0111\u1ec1 t\u00e0i n\u00e0y, v\u00ed d\u1ee5 nh\u01b0 Transcendence do Johny Depp v\u00e0o vai ch\u00ednh, ta kh\u00f4ng th\u1ea5y h\u00ecnh \u1ea3nh c\u1ee7a m\u1ed9t con robot n\u00e0o c\u1ea3. Thay v\u00e0o \u0111\u00f3 l\u00e0 m\u1ed9t b\u1ed9 n\u00e3o \u0111i\u1ec7n to\u00e1n kh\u1ed5ng l\u1ed3 ch\u1ec9 huy h\u00e0ng v\u1ea1n con Nanobot, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Singularity. T\u1ea5t nhi\u00ean c\u1ea3 hai h\u00ecnh \u1ea3nh \u0111\u1ec1u l\u00e0 h\u01b0 c\u1ea5u v\u00e0 gi\u1ea3 t\u01b0\u1edfng, nh\u01b0ng s\u1ef1 thay \u0111\u1ed5i nh\u01b0 v\u1eady c\u0169ng m\u1ed9t ph\u1ea7n n\u00e0o ph\u1ea3n \u00e1nh s\u1ef1 thay \u0111\u1ed5i \u00fd ni\u1ec7m c\u1ee7a con ng\u01b0\u1eddi v\u1ec1 AI. AI b\u00e2y gi\u1edd \u0111\u01b0\u1ee3c xem nh\u01b0 v\u00f4 h\u00ecnh v\u00f4 d\u1ea1ng, hay n\u00f3i c\u00e1c kh\u00e1c c\u00f3 th\u1ec3 mang b\u1ea5t c\u1ee9 h\u00ecnh d\u1ea1ng n\u00e0o.</p> <p>Trong gi\u1edbi h\u00e0n l\u00e2m, theo hi\u1ec3u bi\u1ebft chung, AI l\u00e0 m\u1ed9t ng\u00e0nh khoa h\u1ecdc \u0111\u01b0\u1ee3c sinh ra v\u1edbi m\u1ee5c \u0111\u00edch l\u00e0m cho m\u00e1y t\u00ednh c\u00f3 \u0111\u01b0\u1ee3c tr\u00ed th\u00f4ng minh. M\u1ee5c ti\u00eau n\u00e0y v\u1eabn kh\u00e1 m\u01a1 h\u1ed3 v\u00ec kh\u00f4ng ph\u1ea3i ai c\u0169ng \u0111\u1ed3ng \u00fd v\u1edbi m\u1ed9t \u0111\u1ecbnh ngh\u0129a th\u1ed1ng nh\u1ea5t v\u1ec1 tr\u00ed th\u00f4ng minh. Th\u1ebf n\u00ean c\u00e1c nh\u00e0 khoa h\u1ecdc ph\u1ea3i \u0111\u1ecbnh ngh\u0129a m\u1ed9t s\u1ed1 m\u1ee5c ti\u00eau c\u1ee5 th\u1ec3 h\u01a1n, m\u1ed9t trong s\u1ed1 \u0111\u00f3 l\u00e0 vi\u1ec7c l\u00e0m cho m\u00e1y t\u00ednh l\u1eeba \u0111\u01b0\u1ee3c Turing Test. Turing Test \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1edfi Alan Turing (1912-1954), ng\u01b0\u1eddi \u0111\u01b0\u1ee3c xem l\u00e0 cha \u0111\u1ebb c\u1ee7a ng\u00e0nh khoa h\u1ecdc m\u00e1y t\u00ednh hi\u1ec7n \u0111\u1ea1i, nh\u1eb1m ph\u00e2n bi\u1ec7t xem ng\u01b0\u1eddi \u0111\u1ed1i di\u1ec7n c\u00f3 ph\u1ea3i l\u00e0 ng\u01b0\u1eddi hay kh\u00f4ng (xem phim The Imitation Game v\u1ec1 nh\u00e2n v\u1eadt n\u00e0y, nh\u01b0ng \u0111\u1eebng tin h\u1ebft nh\u1eefng g\u00ec trong phim).</p> <p>AI th\u1ec3 hi\u1ec7n m\u1ed9t m\u1ee5c ti\u00eau c\u1ee7a con ng\u01b0\u1eddi. Machine Learning l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ti\u1ec7n \u0111\u01b0\u1ee3c k\u1ef3 v\u1ecdng s\u1ebd gi\u00fap con ng\u01b0\u1eddi \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u1ee5c ti\u00eau \u0111\u00f3. V\u00e0 th\u1ef1c th\u1ebf th\u00ec Machine Learning \u0111\u00e3 mang nh\u00e2n lo\u1ea1i \u0111i m\u1ed9t qu\u00e3ng \u0111\u01b0\u1eddng r\u1ea5t xa tr\u00ean qu\u00e3ng \u0111\u01b0\u1eddng chinh ph\u1ee5c AI. Nh\u01b0ng v\u1eabn c\u00f2n m\u1ed9t qu\u00e3ng \u0111\u01b0\u1eddng xa h\u01a1n c\u1ea7n ph\u1ea3i \u0111i. Machine Learning v\u00e0 AI c\u00f3 m\u1ed1i quan h\u1ec7 ch\u1eb7t ch\u1ebd v\u1edbi nhau nh\u01b0ng kh\u00f4ng h\u1eb3n l\u00e0 tr\u00f9ng kh\u1edbp v\u00ec m\u1ed9t b\u00ean l\u00e0 m\u1ee5c ti\u00eau (AI), m\u1ed9t b\u00ean l\u00e0 ph\u01b0\u01a1ng ti\u1ec7n (Machine Learning). Chinh ph\u1ee5c AI m\u1eb7c d\u00f9 v\u1eabn l\u00e0 m\u1ee5c \u0111\u00edch t\u1ed1i th\u01b0\u1ee3ng c\u1ee7a Machine Learning, nh\u01b0ng hi\u1ec7n t\u1ea1i Machine Learning t\u1eadp trung v\u00e0o nh\u1eefng m\u1ee5c ti\u00eau ng\u1eafn h\u1ea1n h\u01a1n nh\u01b0:</p> <ol> <li>L\u00e0m cho m\u00e1y t\u00ednh c\u00f3 nh\u1eefng kh\u1ea3 n\u0103ng nh\u1eadn th\u1ee9c c\u01a1 b\u1ea3n c\u1ee7a con ng\u01b0\u1eddi nh\u01b0 nghe, nh\u00ecn, hi\u1ec3u \u0111\u01b0\u1ee3c ng\u00f4n ng\u1eef, gi\u1ea3i to\u00e1n, l\u1eadp tr\u00ecnh, ...</li> <li>H\u1ed7 tr\u1ee3 con ng\u01b0\u1eddi trong vi\u1ec7c x\u1eed l\u00fd m\u1ed9t kh\u1ed1i l\u01b0\u1ee3ng th\u00f4ng tin kh\u1ed5ng l\u1ed3 m\u00e0 ch\u00fang ta ph\u1ea3i \u0111\u1ed1i m\u1eb7t h\u00e0ng ng\u00e0y, hay c\u00f2n g\u1ecdi l\u00e0 Big Data.</li> </ol> <p>Big Data th\u1ef1c ch\u1ea5t kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t ng\u00e0nh khoa h\u1ecdc ch\u00ednh th\u1ed1ng. \u0110\u00f3 l\u00e0 m\u1ed9t c\u1ee5m t\u1eeb d\u00e2n gian v\u00e0 \u0111\u01b0\u1ee3c gi\u1edbi truy\u1ec1n th\u00f4ng tung h\u00f4 \u0111\u1ec3 \u00e1m ch\u1ec9 th\u1eddi k\u00ec b\u00f9ng n\u1ed5 c\u1ee7a d\u1eef li\u1ec7u hi\u1ec7n nay. N\u00f3 c\u0169ng kh\u00f4ng kh\u00e1c g\u00ec v\u1edbi nh\u1eefng c\u1ee5m t\u1eeb nh\u01b0 \u201cc\u00e1ch m\u1ea1ng c\u00f4ng nghi\u1ec7p\u201d, \u201ck\u1ec9 nguy\u00ean ph\u1ea7n m\u1ec1m\u201d. Big Data l\u00e0 m\u1ed9t h\u1ec7 qu\u1ea3 t\u1ea5t y\u1ebfu c\u1ee7a vi\u1ec7c m\u1ea1ng Internet ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u k\u1ebft n\u1ed1i. V\u1edbi s\u1ef1 ra \u0111\u1eddi c\u1ee7a c\u00e1c m\u1ea1ng x\u00e3 h\u1ed9i nh\u01b0ng Facebook, Instagram, Twitter, nhu c\u1ea7u chia s\u1ebb th\u00f4ng c\u1ee7a con ng\u01b0\u1eddi t\u0103ng tr\u01b0\u1edfng m\u1ed9t c\u00e1ch ch\u00f3ng m\u1eb7t. Youtube c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem l\u00e0 m\u1ed9t m\u1ea1ng x\u00e3 h\u1ed9i, n\u01a1i m\u1ecdi ng\u01b0\u1eddi chia s\u1ebb video v\u00e0 comment v\u1ec1 n\u1ed9i dung c\u1ee7a video. \u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c quy m\u00f4 c\u1ee7a Big Data, h\u00e3y xem qua nh\u0169ng con s\u1ed1 sau \u0111\u00e2y:</p> <ul> <li>Kho\u1ea3ng 300 gi\u1edd video \u0111\u01b0\u1ee3c upload tr\u00ean youtube trong m\u1ed7i ph\u00fat (ngu\u1ed3n)</li> <li>H\u01a1n 900 tri\u1ec7u ng\u01b0\u1eddi th\u1eadt s\u1ef1 s\u1eed d\u1ee5ng Facebook m\u1ed7i ng\u00e0y, 82.8% trong s\u1ed1 \u0111\u00f3 \u1edf ngo\u00e0i M\u1ef9 v\u00e0 Canada (ngu\u1ed3n)</li> <li>Nhu c\u1ea7u chia s\u1ebb t\u0103ng \u0111i \u0111\u00f4i v\u1edbi vi\u1ec7c nhu c\u1ea7u t\u00ecm ki\u1ebfm th\u00f4ng tin c\u0169ng t\u0103ng. Google ph\u1ea3i x\u1eed l\u00fd 100 t\u1ec9 l\u01b0\u1ee3t t\u00ecm ki\u1ebfm m\u1ed7i th\u00e1ng, t\u1ee9c l\u00e0 3,3 t\u1ec9 l\u01b0\u1ee3t m\u1ed7i ng\u00e0y v\u00e0 38.000 l\u01b0\u1ee3t m\u1ed7i gi\u00e2y (ngu\u1ed3n)</li> </ul> <p>V\u00e0 nh\u1eefng con s\u1ed1 n\u00e0y \u0111ang t\u0103ng l\u00ean theo t\u1eebng gi\u00e2y!</p> <p>B\u00f9ng n\u1ed5 th\u00f4ng tin kh\u00f4ng ph\u1ea3i l\u00e0 l\u00fd do duy nh\u1ea5t d\u1eabn \u0111\u1ebfn s\u1ef1 ra \u0111\u1eddi c\u1ee7a c\u1ee5m t\u1eeb Big Data. N\u00ean nh\u1edb r\u1eb1ng Big Data xu\u1ea5t hi\u1ec7n m\u1edbi t\u1eeb v\u00e0i n\u0103m g\u1ea7n \u0111\u00e2y nh\u01b0ng kh\u1ed1i l\u01b0\u1ee3ng d\u1eef li\u1ec7u t\u00edch t\u1ee5 k\u1ec3 t\u1eeb khi m\u1ea1ng Internet xu\u1ea5t hi\u1ec7n v\u00e0o cu\u1ed1i th\u1ebf k\u1ec9 tr\u01b0\u1edbc c\u0169ng kh\u00f4ng ph\u1ea3i l\u00e0 nh\u1ecf. Th\u1ebf nh\u01b0ng, l\u00fac \u1ea5y con ng\u01b0\u1eddi ng\u1ed3i quanh m\u1ed9t \u0111\u1ed1ng d\u1eef li\u1ec7u v\u00e0 kh\u00f4ng bi\u1ebft l\u00e0m g\u00ec v\u1edbi ch\u00fang ngo\u00e0i l\u01b0u tr\u1eef v\u00e0 sao ch\u00e9p. Cho \u0111\u1ebfn m\u1ed9t ng\u00e0y, c\u00e1c nh\u00e0 khoa h\u1ecdc nh\u1eadn ra r\u1eb1ng trong \u0111\u1ed1ng d\u1eef li\u1ec7u \u1ea5y th\u1ef1c ra ch\u1ee9a m\u1ed9t kh\u1ed1i l\u01b0\u1ee3ng tri th\u1ee9c kh\u1ed5ng l\u1ed3. Nh\u1eefng tri th\u1ee9c \u1ea5y c\u00f3 th\u1ec3 gi\u00fap cho ta hi\u1ec3u th\u00eam v\u1ec1 con ng\u01b0\u1eddi v\u00e0 x\u00e3 h\u1ed9i. T\u1eeb danh s\u00e1ch b\u1ed9 phim y\u00eau th\u00edch c\u1ee7a m\u1ed9t c\u00e1 nh\u00e2n ch\u00fang ta c\u00f3 th\u1ec3 r\u00fat ra \u0111\u01b0\u1ee3c s\u1edf th\u00edch c\u1ee7a ng\u01b0\u1eddi \u0111\u00f3 v\u00e0 gi\u1edbi thi\u1ec7u nh\u1eefng b\u1ed9 phim ng\u01b0\u1eddi \u1ea5y ch\u01b0a t\u1eebng xem, nh\u01b0ng ph\u00f9 h\u1ee3p v\u1edbi s\u1edf th\u00edch. T\u1eeb danh s\u00e1ch t\u00ecm ki\u1ebfm c\u1ee7a c\u1ed9ng \u0111\u1ed3ng m\u1ea1ng ch\u00fang ta s\u1ebd bi\u1ebft \u0111\u01b0\u1ee3c v\u1ea5n \u0111\u1ec1 n\u00f3ng h\u1ed5i nh\u1ea5t \u0111ang \u0111\u01b0\u1ee3c quan t\u00e2m v\u00e0 s\u1ebd t\u1eadp trung \u0111\u0103ng t\u1ea3i nhi\u1ec1u tin t\u1ee9c h\u01a1n v\u1ec1 v\u1ea5n \u0111\u1ec1 \u0111\u00f3. Big Data ch\u1ec9 th\u1ef1c s\u1ef1 b\u1eaft \u0111\u1ea7u t\u1eeb khi ch\u00fang ta hi\u1ec3u \u0111\u01b0\u1ee3c g\u00eda tr\u1ecb c\u1ee7a th\u00f4ng tin \u1ea9n ch\u1ee9a trong d\u1eef li\u1ec7u, v\u00e0 c\u00f3 \u0111\u1ee7 t\u00e0i nguy\u00ean c\u0169ng nh\u01b0 c\u00f4ng ngh\u1ec7 \u0111\u1ec3 c\u00f3 th\u1ec3 khai th\u00e1c ch\u00fang tr\u00ean quy m\u00f4 kh\u1ed5ng l\u1ed3. V\u00e0 kh\u00f4ng c\u00f3 g\u00ec ng\u1ea1c nhi\u00ean khi Machine Learning ch\u00ednh l\u00e0 th\u00e0nh ph\u1ea7n m\u1ea5u ch\u1ed1t c\u1ee7a c\u00f4ng ngh\u1ec7 \u0111\u00f3. \u1ede \u0111\u00e2y ta c\u00f3 m\u1ed9t quan h\u1ec7 h\u1ed7 t\u01b0\u01a1ng gi\u1eefa Machine Learning v\u00e0 Big Data: Machine Learning ph\u00e1t tri\u1ec3n h\u01a1n nh\u1edd s\u1ef1 gia t\u0103ng c\u1ee7a kh\u1ed1i l\u01b0\u1ee3ng d\u1eef li\u1ec7u; ng\u01b0\u1ee3c l\u1ea1i, th\u00e0nh c\u00f4ng c\u1ee7a Big Data ph\u1ee5 thu\u1ed9c v\u00e0o kh\u1ea3 n\u0103ng khai th\u00e1c tri th\u1ee9c t\u1eeb d\u1eef li\u1ec7u.</p> <p>Ng\u01b0\u1ee3c d\u00f2ng l\u1ecbch s\u1eed, Machine Learning \u0111\u00e3 xu\u1ea5t hi\u1ec7n t\u1eeb r\u1ea5t l\u00e2u tr\u01b0\u1edbc khi m\u1ea1ng Internet ra \u0111\u1eddi. M\u1ed9t trong nh\u1eefng thu\u1eadt to\u00e1n Machine Learning \u0111\u1ea7u ti\u00ean l\u00e0 thu\u1eadt to\u00e1n Perceptron \u0111\u01b0\u1ee3c ph\u00e1t minh ra b\u1edfi Frank Rosenblatt v\u00e0o n\u0103m 1957. \u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n kinh \u0111i\u1ec3n d\u00f9ng \u0111\u1ec3 ph\u00e2n lo\u1ea1i (classification) hai kh\u00e1i ni\u1ec7m. M\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n g\u1ec9an l\u00e0 ph\u00e2n lo\u1ea1i th\u01b0 r\u00e1c (tam g\u00edac) v\u00e0 th\u01b0 b\u00ecnh th\u01b0\u1eddng (vu\u00f4ng). Ch\u1eafc c\u00e1c b\u1ea1n s\u1ebd kh\u00f3 h\u00ecnh ra \u0111\u01b0\u1ee3c l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3. \u0110\u1ed1i v\u1edbi Perceptron, \u0111i\u1ec1u n\u00e0y kh\u00f4ng kh\u00e1c g\u00ec v\u1edbi vi\u1ec7c v\u1ebd m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng tr\u00ean m\u1eb7t ph\u1eb3ng \u0111\u1ec3 ph\u00e2n chia hai t\u1eadp \u0111i\u1ec3m:</p> <p></p> <p>S\u01a1 l\u01b0\u1ee3c quy tr\u00ecnh ph\u00e2n lo\u1ea1i th\u01b0 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 sau. Tr\u01b0\u1edbc h\u1ebft, ta c\u1ea7n m\u1ed9t thu\u1eadt to\u00e1n \u0111\u1ec3 chuy\u1ec3n email th\u00e0nh nh\u1eefng \u0111i\u1ec3m d\u1eef li\u1ec7u. C\u00f4ng \u0111o\u1ea1n n\u00e0y r\u1ea5t r\u1ea5t quan tr\u1ecdng v\u00ec n\u1ebfu ch\u00fang ta ch\u1ecdn \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n ph\u00f9 h\u1ee3p, c\u00f4ng vi\u1ec7c c\u1ee7a Perceptron s\u1ebd nh\u1eb9 nh\u00e0ng h\u01a1n r\u1ea5t nhi\u1ec1u. Ti\u1ebfp theo, Perceptron s\u1ebd \u0111\u1ecdc t\u1ecda \u0111\u1ed9 c\u1ee7a t\u1eebng \u0111i\u1ec3m v\u00e0 s\u1eed d\u1ee5ng th\u00f4ng tin n\u00e0y \u0111\u1ec3 c\u1eadp nh\u1eadt tham s\u1ed1 c\u1ee7a \u0111\u01b0\u1eddng th\u1eb3ng c\u1ea7n t\u00ecm. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem demo c\u1ee7a Perceptron t\u1ea1i \u0111\u00e2y (\u0111i\u1ec3m xanh l\u00e1 c\u00e2y l\u00e0 \u0111i\u1ec3m Perceptron \u0111ang x\u1eed l\u00fd):</p> <p>Youtube Video</p> <p>Nh\u1eefng \u0111i\u1ec3m tam gi\u00e1c v\u00e0 vu\u00f4ng \u0111\u1ea1i di\u1ec7n cho nh\u1eefng email ch\u00fang ta \u0111\u00e3 bi\u1ebft nh\u00e3n tr\u01b0\u1edbc. Ch\u00fang \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 \u201chu\u1ea5n luy\u1ec7n\u201d (train) Perceptron. Sau khi v\u1ebd \u0111\u01b0\u1eddng th\u1eb3ng chia hai t\u1eadp \u0111i\u1ec3m, ta nh\u1eadn th\u00eam c\u00e1c \u0111i\u1ec3m ch\u01b0a \u0111\u01b0\u1ee3c d\u00e1n nh\u00e3n, \u0111\u1ea1i di\u1ec7n cho c\u00e1c email c\u1ea7n \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i (\u0111i\u1ec3m tr\u00f2n). Ta d\u00e1n nh\u00e3n c\u1ee7a m\u1ed9t \u0111i\u1ec3m theo nh\u00e3n c\u1ee7a c\u00e1c \u0111i\u1ec3m c\u00f9ng n\u1eeda m\u1eb7t ph\u1eb3ng v\u1edbi \u0111i\u1ec3m \u0111\u00f3. V\u00ec l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n kh\u00e1 \u0111\u01a1n gi\u1ea3n, c\u00f3 r\u1ea5t nhi\u1ec1u v\u1ea5n \u0111\u1ec1 c\u00f3 th\u1ec3 n\u1ea3y sinh v\u1edbi Perceptron, v\u00ed d\u1ee5 nh\u01b0 \u0111i\u1ec3m c\u1ea7n ph\u00e2n lo\u1ea1i n\u1eb1m ngay tr\u00ean \u0111\u01b0\u1eddng th\u1eb3ng ph\u00e2n chia. Ho\u1eb7c t\u1ec7 h\u01a1n l\u00e0 v\u1edbi m\u1ed9t t\u1eadp d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p h\u01a1n, \u0111\u01b0\u1eddng th\u1eb3ng ph\u00e2n chia kh\u00f4ng t\u1ed3n t\u1ea1i:</p> <p></p> <p>L\u00fac n\u00e0y, ta c\u1ea7n c\u00e1c lo\u1ea1i \u0111\u01b0\u1eddng ph\u00e2n chia \u201ckh\u00f4ng th\u1eb3ng\u201d. Nh\u01b0ng \u0111\u00f3 l\u1ea1i l\u00e0 m\u1ed9t c\u00e2u chuy\u1ec7n kh\u00e1c.</p> <p>Perceptron l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n \u201ch\u1ecdc c\u00f3 h\u01b0\u1edbng d\u1eabn\u201d (supervised learning): ta \u0111\u01b0a cho m\u00e1y t\u00ednh h\u00e0ng lo\u1ea1t c\u00e1c v\u00ed d\u1ee5 c\u00f9ng c\u00e2u tr\u1ea3 l\u1eddi m\u1eabu v\u1edbi hy v\u1ecdng m\u00e1y t\u00ednh s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c nh\u1eefng \u0111\u1eb7c \u0111i\u1ec3m c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u01b0a ra d\u1ef1 \u0111o\u00e1n cho nh\u1eefng v\u00ed d\u1ee5 kh\u00e1c ch\u01b0a c\u00f3 c\u00e2u tr\u1ea3 l\u1eddi trong t\u01b0\u01a1ng lai. Ngo\u00e0i ra, c\u0169ng c\u00f3 nh\u1eefng thu\u1eadt to\u00e1n Machine Learning \u201ckh\u00f4ng c\u1ea7n h\u01b0\u1edbng d\u1eabn\u201d (unsupervised learning): m\u00e1y t\u00ednh c\u1ed1 g\u1eafng khai th\u00e1c ra c\u1ea5u tr\u00fac \u1ea9n c\u1ee7a m\u1ed9t t\u1eadp d\u1eef li\u1ec7u m\u00e0 kh\u00f4ng c\u1ea7n c\u00e2u tr\u1ea3 l\u1eddi m\u1eabu. M\u1ed9t lo\u1ea1i Machine Learning kh\u00e1c \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u201ch\u1ecdc c\u1ee7ng c\u1ed1\u201d (reinforcement learning). Trong d\u1ea1ng n\u00e0y, c\u0169ng kh\u00f4ng h\u1ec1 c\u00f3 c\u00e2u tr\u1ea3 l\u1eddi m\u1eabu, nh\u01b0ng thay v\u00ec \u0111\u00f3 m\u00e1y t\u00ednh nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i cho m\u1ed7i h\u00e0nh \u0111\u1ed9ng. D\u1ef1a v\u00e0o ph\u1ea3n h\u1ed3i t\u00edch c\u1ef1c hay ti\u00eau c\u1ef1c m\u00e0 m\u00e1y t\u00ednh s\u1ebd \u0111i\u1ec1u ch\u1ec9nh ho\u1ea1t \u0111\u1ed9ng cho ph\u00f9 h\u1ee3p. Sau \u0111\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 minh h\u1ecda:</p> <p>Youtube Video</p> <p>M\u1ee5c ti\u00eau c\u1ee7a chi\u1ebfc xe l\u00e0 leo l\u00ean \u0111\u01b0\u1ee3c \u0111\u1ec9nh \u0111\u1ed3i v\u00e0 l\u1ea5y \u0111\u01b0\u1ee3c ng\u00f4i sao. Chi\u1ebfc xe c\u00f3 hai chuy\u1ec3n \u0111\u1ed9ng t\u1edbi v\u00e0 lui. B\u1eb1ng c\u00e1ch th\u1eed c\u00e1c chuy\u1ec3n \u0111\u1ed9ng v\u00e0 nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i l\u00e0 \u0111\u1ed9 cao \u0111\u1ea1t \u0111\u01b0\u1ee3c v\u00e0 th\u1eddi gian \u0111\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c ng\u00f4i sao, chi\u1ebfc xe d\u1ea7n tr\u1edf n\u00ean thu\u1ea7n th\u1ee5c h\u01a1n trong vi\u1ec7c leo \u0111\u1ed3i l\u1ea5y sao.</p> <p>Machine Learning c\u00f3 m\u1ed1i quan h\u1ec7 r\u1ea5t m\u1eadt thi\u1ebft \u0111\u1ed1i v\u1edbi th\u1ed1ng k\u00ea (statistics). Machine Learning s\u1eed d\u1ee5ng c\u00e1c m\u00f4 h\u00ecnh th\u1ed1ng k\u00ea \u0111\u1ec3 \u201cghi nh\u1edb\u201d l\u1ea1i s\u1ef1 ph\u00e2n b\u1ed1 c\u1ee7a d\u1eef li\u1ec7u. Tuy nhi\u00ean, kh\u00f4ng \u0111\u01a1n thu\u1ea7n l\u00e0 th\u1ed1ng k\u00ea d\u1eef li\u1ec7u, Machine Learning ph\u1ea3i c\u00f3 kh\u1ea3 n\u0103ng t\u1ed5ng qu\u00e1t h\u00f3a nh\u1eefng g\u00ec \u0111\u00e3 \u0111\u01b0\u1ee3c nh\u00ecn th\u1ea5y v\u00e0 \u0111\u01b0a ra d\u1ef1 \u0111o\u00e1n cho nh\u1eefng tr\u01b0\u1eddng h\u1ee3p ch\u01b0a \u0111\u01b0\u1ee3c nh\u00ecn th\u1ea5y. B\u1ea1n c\u00f3 th\u1ec3 h\u00ecnh dung m\u1ed9t m\u00f4 h\u00ecnh Machine Learning kh\u00f4ng c\u00f3 kh\u1ea3 n\u0103ng t\u1ed5ng qu\u00e1t nh\u01b0 m\u1ed9t \u0111\u1ee9a tr\u1ebb h\u1ecdc v\u1eb9t: ch\u1ec9 tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c nh\u1eefng c\u00e2u tr\u1ea3 l\u1eddi m\u00e0 n\u00f3 \u0111\u00e3 h\u1ecdc thu\u1ed9c l\u00f2ng \u0111\u00e1p \u00e1n. Kh\u1ea3 n\u0103ng t\u1ed5ng qu\u00e1t l\u00e0 m\u1ed9t kh\u1ea3 n\u0103ng t\u1ef1 nhi\u00ean v\u00e0 k\u00ec di\u1ec7u c\u1ee7a con ng\u01b0\u1eddi: b\u1ea1n kh\u00f4ng th\u1ec3 nh\u00ecn th\u1ea5y t\u1ea5t c\u1ea3 c\u00e1c khu\u00f4n m\u1eb7t ng\u01b0\u1eddi tr\u00ean th\u1ebf gi\u1edbi nh\u01b0ng b\u1ea1n c\u00f3 th\u1ec3 nh\u1eadn bi\u1ebft \u0111\u01b0\u1ee3c m\u1ed9t th\u1ee9 c\u00f3 ph\u1ea3i l\u00e0 khu\u00f4n m\u1eb7t ng\u01b0\u1eddi hay kh\u00f4ng v\u1edbi x\u00e1c su\u1ea5t \u0111\u00fang g\u1ea7n nh\u01b0 tuy\u1ec7t \u0111\u1ed1i. \u0110\u1ec9nh cao c\u1ee7a Machine Learning s\u1ebd l\u00e0 m\u00f4 ph\u1ecfng \u0111\u01b0\u1ee3c kh\u1ea3 n\u0103ng t\u1ed5ng qu\u00e1t h\u00f3a v\u00e0 suy lu\u1eadn n\u00e0y c\u1ee7a con ng\u01b0\u1eddi.</p> <p>Nh\u01b0 ta \u0111\u00e3 th\u1ea5y, n\u00f3i \u0111\u1ebfn Machine Learning l\u00e0 n\u00f3i \u0111\u1ebfn \u201cd\u1ef1 \u0111o\u00e1n\u201d: t\u1eeb vi\u1ec7c d\u1ef1 \u0111o\u00e1n nh\u00e3n ph\u00e2n lo\u1ea1i \u0111\u1ebfn d\u1ef1 \u0111o\u00e1n h\u00e0nh \u0111\u1ed9ng c\u1ea7n th\u1ef1c hi\u1ec7n trong b\u01b0\u1edbc ti\u1ebfp theo. V\u1eady Machine Learning c\u00f3 th\u1ec3 d\u1ef1 \u0111o\u00e1n t\u01b0\u01a1ng lai hay kh\u00f4ng? C\u00f3 th\u1ec3 c\u00f3 ho\u1eb7c c\u00f3 th\u1ec3 kh\u00f4ng: Machine Learning c\u00f3 th\u1ec3 d\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c t\u01b0\u01a1ng lai, nh\u01b0ng ch\u1ec9 khi t\u01b0\u01a1ng lai c\u00f3 m\u1ed1i li\u00ean h\u1ec7 m\u1eadt thi\u1ebft v\u1edbi hi\u1ec7n t\u1ea1i.</p> <p>\u0110\u1ec3 k\u1ebft th\u00fac b\u00e0i vi\u1ebft, m\u00ecnh mu\u1ed1n c\u00f9ng c\u00e1c b\u1ea1n xem x\u00e9t m\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n sau. Gi\u1ea3 s\u1eed b\u1ea1n \u0111\u01b0\u1ee3c \u0111\u01b0a cho m\u1ed9t \u0111\u1ed3ng xu, r\u1ed3i \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u tung \u0111\u1ed3ng xu m\u1ed9t s\u1ed1 l\u1ea7n. V\u1ea5n \u0111\u1ec1 \u0111\u1eb7t ra l\u00e0: d\u1ef1a v\u00e0o nh\u1eefng l\u1ea7n tung \u0111\u1ed3ng xu \u0111\u00f3, b\u1ea1n h\u00e3y ti\u00ean \u0111o\u00e1n ra k\u1ebft qu\u1ea3 l\u1ea7n tung ti\u1ebfp theo. Ch\u1ec9 c\u1ea7n d\u1ef1a v\u00e0o t\u1ec9 l\u1ec7 x\u1ea5p/ng\u1eeda c\u1ee7a nh\u1eefng l\u1ea7n tung tr\u01b0\u1edbc \u0111\u00f3, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u01b0a ra m\u1ed9t d\u1ef1 \u0111o\u00e1n kh\u00e1 t\u1ed1t. Nh\u01b0ng n\u1ebfu m\u1ed7i l\u1ea7n tung, ng\u01b0\u1eddi ta \u0111\u01b0a cho b\u1ea1n m\u1ed9t \u0111\u1ed3ng xu kh\u00e1c nhau th\u00ec m\u1ecdi chuy\u1ec7n s\u1ebd ho\u00e0n to\u00e0n kh\u00e1c. C\u00e1c \u0111\u1ed3ng xu kh\u00e1c nhau c\u00f3 x\u00e1c su\u1ea5t x\u1ea5p ng\u1eeda kh\u00e1c nhau. L\u00fac n\u00e0y vi\u1ec7c d\u1ef1 \u0111o\u00e1n g\u1ea7n nh\u01b0 kh\u00f4ng th\u1ec3 v\u00ec x\u00e1c su\u1ea5t x\u1ea5p ng\u1eeda c\u1ee7a l\u1ea7n tung sau kh\u00f4ng h\u1ec1 li\u00ean quan g\u00ec \u0111\u1ebfn l\u1ea7n tung tr\u01b0\u1edbc. \u0110i\u1ec1u t\u01b0\u01a1ng t\u1ef1 c\u0169ng x\u1ea3y ra v\u1edbi vi\u1ec7c d\u1ef1 \u0111o\u00e1n t\u01b0\u01a1ng lai b\u1eb1ng Machine Learning, n\u1ebfu ta xem nh\u01b0 m\u1ed7i ng\u00e0y c\u00f3 m\u1ed9t \u201c\u0111\u1ed3ng xu\u201d \u0111\u01b0\u1ee3c tung ra \u0111\u1ec3 xem m\u1ed9t s\u1ef1 ki\u1ec7n c\u00f3 di\u1ec5n ra hay kh\u00f4ng. N\u1ebfu \u201c\u0111\u1ed3ng xu\u201d c\u1ee7a ng\u00e0y mai \u0111\u01b0\u1ee3c ch\u1ecdn m\u1ed9t c\u00e1ch t\u00f9y \u00fd kh\u00f4ng theo ph\u00e2n b\u1ed1 n\u00e0o c\u1ea3 th\u00ec Machine Learning s\u1ebd th\u1ea5t b\u1ea1i. R\u1ea5t may l\u00e0 trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p \u0111i\u1ec1u \u0111\u00f3 kh\u00f4ng ho\u00e0n to\u00e0n \u0111\u00fang, th\u1ebf gi\u1edbi ho\u1ea1t \u0111\u1ed9ng theo nh\u1eefng quy lu\u1eadt nh\u1ea5t \u0111\u1ecbnh v\u00e0 Machine Learning c\u00f3 th\u1ec3 nh\u1eadn ra nh\u1eefng quy lu\u1eadt \u0111\u00f3. Nh\u01b0ng n\u00f3i cho c\u00f9ng, Machine Learning ho\u00e0n to\u00e0n kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t b\u00e0 ph\u1ee7 th\u1ee7y v\u1edbi qu\u1ea3 c\u1ea7u ti\u00ean tri m\u00e0 c\u0169ng gi\u1ed1ng nh\u01b0 ch\u00fang ta: ph\u00e1n \u0111o\u00e1n b\u1eb1ng c\u00e1ch t\u1ed5ng qu\u00e1t h\u00f3a nh\u1eefng kinh nghi\u1ec7m, nh\u1eefng g\u00ec \u0111\u00e3 \u0111\u01b0\u1ee3c h\u1ecdc t\u1eeb d\u1eef li\u1ec7u.</p>"},{"location":"languages/cpp/pointers/","title":"Con tr\u1ecf trong C/C++","text":"<p>T\u00e1c gi\u1ea3: Ph\u1ea1m V\u0103n H\u1ea1nh (skyvn97, prof.PVH, I_love_tigersugar)</p> <p>Con tr\u1ecf l\u00e0 m\u1ed9t trong nh\u1eefng t\u00ednh n\u0103ng quan tr\u1ecdng c\u1ee7a m\u1ed7i ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh. Th\u1ef1c t\u1ebf, \u0111\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 s\u1eed d\u1ee5ng th\u00e0nh th\u1ea1o m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh nh\u01b0 C/C++, l\u1eadp tr\u00ecnh vi\u00ean c\u1ea7n bi\u1ebft c\u00e1ch s\u1eed d\u1ee5ng con tr\u1ecf. Tuy nhi\u00ean, do \u00edt \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n l\u1eadp tr\u00ecnh \u1edf c\u00e1c k\u1ef3 thi h\u1ecdc sinh gi\u1ecfi, nhi\u1ec1u b\u1ea1n h\u1ecdc sinh chuy\u00ean tin c\u1ea5p ba kh\u00f4ng n\u1eafm ch\u1eafc c\u00e1ch d\u00f9ng con tr\u1ecf, ho\u1eb7c th\u1eadm ch\u1ec9 b\u1ecf qua ph\u1ea7n ki\u1ebfn th\u1ee9c n\u00e0y. V\u00ec v\u1eady, b\u00e0i vi\u1ebft n\u00e0y gi\u00fap c\u00e1c b\u1ea1n hi\u1ec3u qua c\u00e1ch s\u1eed d\u1ee5ng con tr\u1ecf v\u00e0 c\u00e1c \u00fd ngh\u0129a c\u1ee7a n\u00f3.</p> <p>C\u1ea7n n\u00f3i th\u00eam r\u1eb1ng, \u0111\u1ec3 c\u00f3 c\u00e1i nh\u00ecn to\u00e0n di\u1ec7n v\u1ec1 con tr\u1ecf trong c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, b\u1ea1n c\u1ea7n c\u00f3 c\u00e1c ki\u1ebfn th\u1ee9c v\u1ec1 ki\u1ebfn tr\u00fac m\u00e1y t\u00ednh, h\u1ec7 \u0111i\u1ec1u h\u00e0nh, c\u00e1ch l\u01b0u tr\u1eef bi\u1ebfn trong b\u1ed9 nh\u1edb m\u00e1y t\u00ednh. B\u00e0i vi\u1ebft d\u01b0\u1edbi \u0111\u00e2y b\u1ecf qua c\u00e1c kh\u00eda c\u1ea1nh n\u00e0y, ch\u1ee7 y\u1ebfu nh\u1eafc \u0111\u1ebfn c\u00e1ch s\u1eed d\u1ee5ng con tr\u1ecf, c\u00e1c l\u1ed7i hay m\u1eafc, l\u1ee3i \u00edch c\u1ee7a con tr\u1ecf trong c\u00e1c b\u00e0i to\u00e1n l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. </p> <p>B\u1edfi th\u1ebf, b\u1ea1n c\u00f3 th\u1ec3 y\u00ean t\u00e2m r\u1eb1ng b\u00e0i vi\u1ebft d\u01b0\u1edbi \u0111\u00e2y kh\u00f4ng khi\u1ebfn c\u00e1c b\u1ea1n h\u1ea1i n\u00e3o, ch\u1ec9 c\u1ea7n u\u1ed1ng ch\u00fat s\u1eefa t\u01b0\u01a1i ch\u00e2n tr\u00e2u \u0111\u01b0\u1eddng h\u1ed5 r\u1ed3i b\u1eaft \u0111\u1ea7u \u0111\u1ecdc th\u00f4i :)</p>"},{"location":"languages/cpp/pointers/#1-con-tro-la-gi","title":"1. Con tr\u1ecf l\u00e0 g\u00ec?","text":""},{"location":"languages/cpp/pointers/#a-bien-thong-thuong","title":"a. Bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\"","text":"<p>Ch\u00fang ta \u0111\u00e3 qu\u00e1 quen thu\u1ed9c v\u1edbi c\u00e1c bi\u1ebfn (variables) trong C++. M\u1ed9t bi\u1ebfn c\u00f3 th\u1ec3 mang m\u1ed9t gi\u00e1 tr\u1ecb, v\u00ed d\u1ee5 nh\u01b0 bi\u1ebfn d\u1ea1ng <code>bool</code>, <code>int</code> hay <code>double</code>. M\u1ed7i bi\u1ebfn thu\u1ed9c c\u00e1c ki\u1ec3u n\u00e0y d\u00f9ng \u0111\u1ec3 l\u01b0u m\u1ed9t gi\u00e1 tr\u1ecb n\u00e0o \u0111\u00f3. C\u00e1c bi\u1ebfn c\u00f2n c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng ph\u1ee9c t\u1ea1p h\u01a1n, v\u00ed d\u1ee5 nh\u01b0 c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u <code>vector&lt;int&gt;</code>, <code>queue&lt;string&gt;</code> hay <code>map&lt;int, string&gt;</code>. C\u00e1c bi\u1ebfn thu\u1ed9c lo\u1ea1i n\u00e0y c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t t\u1eadp h\u1ee3p nhi\u1ec1u gi\u00e1 tr\u1ecb n\u00e0o \u0111\u00f3. D\u00f9 \u0111\u01a1n gi\u1ea3n hay ph\u1ee9c t\u1ea1p, c\u00e1c bi\u1ebfn thu\u1ed9c m\u1ed9t trong c\u00e1c d\u1ea1ng k\u1ec3 tr\u00ean lu\u00f4n gi\u00fap ch\u00fang ta l\u01b0u tr\u1eef d\u1eef li\u1ec7u. T\u00e1c gi\u1ea3 t\u1ea1m g\u1ecdi nh\u1eefng ki\u1ec3u bi\u1ebfn n\u00e0y l\u00e0 bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\".</p> <p>Nh\u01b0 v\u1eady, c\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" l\u00e0 c\u00e1c bi\u1ebfn c\u00f3 th\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u. Ch\u00fang c\u00f3 hai t\u00ednh ch\u1ea5t c\u01a1 b\u1ea3n sau:  - D\u1eef li\u1ec7u c\u1ee7a c\u00e1c bi\u1ebfn n\u00e0y ho\u00e0n to\u00e0n \u0111\u1ed9c l\u1eadp v\u1edbi nhau: Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn <code>a</code> kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn <code>b</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.  - M\u1ed7i khi ta khai b\u00e1o m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" <code>int x; string s; vector&lt;double&gt; v;...</code> ta c\u00f3 th\u00eam m\u1ed9t bi\u1ebfn m\u1edbi, v\u00e0 bi\u1ebfn \u0111\u00f3 cho ta th\u00eam kh\u00f4ng gian l\u01b0u tr\u1eef d\u1eef li\u1ec7u.</p>"},{"location":"languages/cpp/pointers/#b-bien-tham-chieu-reference","title":"b. Bi\u1ebfn tham chi\u1ebfu (reference)","text":"<p>Gi\u1edd ch\u00fang ta sang t\u1edbi m\u1ed9t lo\u1ea1i bi\u1ebfn kh\u00e1c, c\u00f3 t\u00ean ch\u00ednh th\u1ee9c l\u00e0 bi\u1ebfu tham chi\u1ebfn (reference). C\u00f3 th\u1ec3 c\u00e1c b\u1ea1n \u0111\u00e3 bi\u1ebft, \u0111\u00e3 s\u1eed d\u1ee5ng nh\u01b0ng kh\u00f4ng \u0111\u1ec3 \u00fd, ho\u1eb7c ch\u01b0a t\u1eebng s\u1eed d\u1ee5ng bi\u1ebfn tham chi\u1ebfu. \u0110\u1ea7u ti\u00ean, ta h\u00e3y c\u00f9ng ch\u1ea1y th\u1eed m\u1ed9t \u0111o\u1ea1n code \u0111\u01a1n gi\u1ea3n sau:</p> <pre><code>int a = 1;\nint &amp;b = a;\nb = 2;\ncout &lt;&lt; a &lt;&lt; endl; // it prints 2, not 1 (!)\na = 3;\ncout &lt;&lt; b &lt;&lt; endl; // it prints 3, not 2 (!)\n</code></pre> <p>Trong \u0111o\u1ea1n code n\u00e0y, bi\u1ebfn <code>b</code> \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn tham chi\u1ebfu ki\u1ec3u <code>int</code>. N\u00f3 \u0111\u01b0\u1ee3c khai b\u00e1o b\u1eb1ng vi\u1ec7c th\u00eam m\u1ed9t d\u1ea5u <code>&amp;</code> v\u00e0o sau t\u00ean ki\u1ec3u <code>int</code>. Ch\u00fa \u00fd r\u1eb1ng hai c\u00e1ch khai b\u00e1o <code>int&amp; a = b</code> v\u00e0 <code>int &amp;a = b</code> \u0111\u1ec1u h\u1ee3p l\u1ec7 v\u00e0 c\u00f3 \u00fd ngh\u0129a nh\u01b0 nhau. Qua th\u00ed nghi\u1ec7m n\u00e0y, ta th\u1ea5y r\u1eb1ng l\u1ec7nh g\u00e1n bi\u1ebfn <code>a</code> c\u0169ng l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a <code>b</code> v\u00e0 l\u1ec7nh g\u00e1n bi\u1ebfn <code>b</code> c\u0169ng lam thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a <code>a</code>. Th\u1ef1c t\u1ebf, hai bi\u1ebfn <code>a</code> v\u00e0 <code>b</code> n\u00e0y ch\u1ec9 l\u00e0 m\u1ed9t bi\u1ebfn, ngh\u0129a l\u00e0 <code>a</code> v\u00e0 <code>b</code> lu\u00f4n mang c\u00f9ng m\u1ed9t gi\u00e1 tr\u1ecb, v\u00e0 m\u1ecdi l\u1ec7nh l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a <code>a</code> c\u0169ng l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a <code>b</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>Ta x\u00e9t th\u00eam m\u1ed9t v\u00ed d\u1ee5 n\u1eefa - m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111i\u1ec3n h\u00ecnh cho vi\u1ec7c s\u1eed d\u1ee5ng bi\u1ebfn tham chi\u1ebfu trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u: Quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ec7 quy c\u00f3 nh\u1edb.</p> <pre><code>int cacheDPResults[2207][1997] = {-1};\nint dp(int i, int j) {\n    int &amp;result = cacheDPResults[i][j];\n    if (result &gt;= 0) return result;\n\n    if (i == 0) return result = 0;\n    result = dp(i - 1, j);\n    if (j &gt;= weight[i]) result = max(result, dp(i - 1, j - weight[i]) + value[i];\n\n    return result;\n}\n</code></pre> <p>Ch\u1eafc c\u00e1c b\u1ea1n l\u1edd m\u1edd \u0111o\u00e1n ra \u0111o\u1ea1n code tr\u00ean m\u00f4 ph\u1ecfng c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng c\u1ee7a b\u00e0i to\u00e1n c\u00e1i t\u00fai (knapsack). T\u1ea5t nhi\u00ean kh\u00f4ng ai c\u00e0i b\u00e0i to\u00e1n c\u00e1i t\u00fai b\u1eb1ng \u0111\u1ec7 quy c\u00f3 nh\u1edb c\u1ea3 :)</p> <p>Gi\u1edd ta \u0111\u1ec3 \u00fd d\u00f2ng code th\u1ee9 3 trong \u0111o\u1ea1n v\u00ed d\u1ee5 tr\u00ean: <code>int &amp;result = cacheDPResults[i][j]</code>. D\u00f9 d\u00f2ng code n\u00e0y d\u00f9ng \u0111\u1ec3 khai b\u00e1o bi\u1ebfn <code>result</code>, nh\u01b0ng do c\u00f3 k\u00fd t\u1ef1 <code>&amp;</code> \u1edf tr\u01b0\u1edbc, k\u1ebft qu\u1ea3 c\u1ee7a bi\u1ebfn <code>result</code> n\u00e0y \u0111\u01b0\u1ee3c \"\u0111\u1ed3ng b\u1ed9\" v\u1edbi bi\u1ebfn <code>cacheDPResult[i][j]</code>. Bi\u1ebfn <code>result</code> v\u00e0 <code>cacheDPResult[i][j]</code> lu\u00f4n mang c\u00f9ng gi\u00e1 tr\u1ecb, v\u00e0 khi gi\u00e1 tr\u1ecb m\u1ed9t bi\u1ebfn thay \u0111\u1ed5i, bi\u1ebfn kia c\u0169ng thay \u0111\u1ed5i theo.</p> <p>Nh\u01b0 v\u1eady, bi\u1ebfn <code>result</code> n\u00e0y (v\u00e0 bi\u1ebfn <code>b</code> \u1edf v\u00ed d\u1ee5 tr\u01b0\u1edbc) c\u00f3 hai \u0111i\u1ec3m kh\u00e1c v\u1edbi c\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u1edf ph\u1ea7n 1a: - Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn <code>result</code> kh\u00f4ng \u0111\u1ed9c l\u1eadp v\u1edbi gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn <code>cacheDPResult[i][j]</code>: Hai gi\u00e1 tr\u1ecb n\u00e0y lu\u00f4n b\u1eb1ng nhau. - Khi khai b\u00e1o bi\u1ebfn <code>result</code>, ta kh\u00f4ng c\u00f3 th\u00eam kh\u00f4ng gian l\u01b0u tr\u1eef d\u1eef li\u1ec7u.</p> <p>Do \u0111\u00f3, n\u1ebfu gi\u1eef \u0111\u1ecbnh ngh\u0129a v\u1ec1 bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" nh\u01b0 \u1edf ph\u1ea7n 1a, ta kh\u00f4ng coi <code>result</code> l\u00e0 bi\u1ebfn, m\u00e0 n\u00f3 ch\u1ec9 nh\u01b0 m\u1ed9t t\u00ean g\u1ecdi kh\u00e1c c\u1ee7a bi\u1ebfn <code>cacheDPResults[i][j]</code>. Th\u1ef1c t\u1ebf, c\u00e1ch \u0111\u1eb7t bi\u1ebfn <code>result</code> ch\u1ec9 gi\u00fap cho \u0111o\u1ea1n code c\u1ee7a b\u1ea1n trong s\u00e1ng h\u01a1n. N\u1ebfu b\u1ea1n thay l\u1ec7nh khai b\u00e1o <code>int &amp;result = cacheDPResults[i][j]</code> b\u1eb1ng l\u1ec7nh <code>#define result cacheDPResults[i][j]</code>, hi\u1ec7u \u1ee9ng c\u1ee7a \u0111o\u1ea1n code kh\u00f4ng \u0111\u1ed5i. Th\u1eadm ch\u00ed, b\u1ea1n c\u00f3 th\u1ec3 kh\u00f4ng s\u1eed d\u1ee5ng bi\u1ebfn result v\u00e0 t\u1ea1o ra \u0111o\u1ea1n code tuy kh\u00f4ng \u0111\u01b0\u1ee3c trong s\u00e1ng, nh\u01b0ng c\u00f3 k\u1ebft qu\u1ea3 ho\u00e0n to\u00e0n gi\u1ed1ng \u0111o\u1ea1n code ph\u00eda tr\u00ean:</p> <pre><code>int cacheDPResults[2207][1997] = {-1};\nint dp(int i, int j) {\n    if (cacheDPResults[i][j] &gt;= 0) return cacheDPResults[i][j];\n    if (i == 0) return 0;\n    cacheDPResults[i][j] = dp(i - 1, j);\n    if (j &gt;= weight[i]) cacheDPResults[i][j] = max(cacheDPResults[i][j], dp(i - 1, j - weight[i]) + value[i];\n    return cacheDPResults[i][j];\n}\n</code></pre> <p>Bi\u1ebfu tham chi\u1ebfn n\u00e0y cho ta \u00fd t\u01b0\u1edfng v\u1ec1 m\u1ed9t d\u1ea1ng bi\u1ebfn \u0111\u1eb7c bi\u1ec7t trong ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, \u1edf \u0111\u00f3 d\u00f9 bi\u1ebfn \u0111\u01b0\u1ee3c t\u1ea1o ra nh\u01b0ng b\u1ea3n ch\u1ea5t ch\u1ec9 l\u00e0 \"\u0111\u1eb7t m\u1ed9t t\u00ean kh\u00e1c\" cho m\u1ed9t bi\u1ebfn \u0111\u00e3 c\u00f3 s\u1eb5n t\u1eeb tr\u01b0\u1edbc. Tuy nhi\u00ean, bi\u1ebfn tham chi\u1ebfu n\u00e0y c\u00f3 hai nh\u01b0\u1ee3c \u0111i\u1ec3m: Bi\u1ebfn tham chi\u1ebfu lu\u00f4n tham chi\u1ebfu v\u00e0o m\u1ed9t bi\u1ebfn c\u1ed1 \u0111\u1ecbnh v\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c tham chi\u1ebfu ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh ngay l\u00fac khai b\u00e1o. C\u00f3 ngh\u0129a l\u00e0, n\u1ebfu b\u1ea1n c\u00f3 hai bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" <code>int a, b</code> v\u00e0 m\u1ed9t bi\u1ebfn tham chi\u1ebfu <code>int &amp;c = a</code>, b\u1ea1n kh\u00f4ng th\u1ec3 n\u00e0o l\u00e0m cho <code>b</code> v\u00e0 <code>c</code> \u0111\u1ed3ng b\u1ed9 nhau \u0111\u01b0\u1ee3c. \u0110\u1ed3ng th\u1eddi, n\u1ebfu b\u1ea1n ch\u1ec9 khai b\u1ea3o <code>int &amp;c</code> m\u00e0 kh\u00f4ng c\u00f3 v\u1ebf ph\u1ea3i, tr\u00ecnh bi\u00ean d\u1ecbch s\u1ebd b\u00e1o l\u1ed7i.</p> <p>Nh\u1eefng th\u00f4ng tin tr\u00ean cho ch\u00fang ta \u00fd t\u01b0\u1edfng v\u1ec1 con tr\u1ecf.</p>"},{"location":"languages/cpp/pointers/#c-con-tro-pointer","title":"c. Con tr\u1ecf (pointer)","text":"<p>Con tr\u1ecf s\u1eed d\u1ee5ng \u00fd t\u01b0\u1edfng c\u1ee7a bi\u1ebfn tham chi\u1ebfu: Bi\u1ebfn con tr\u1ecf \u0111\u01b0\u1ee3c t\u1ea1o ra th\u01b0\u1eddng kh\u00f4ng \u0111\u1ec3 c\u00f3 th\u00eam kh\u00f4ng gian l\u01b0u tr\u1eef d\u1eef li\u1ec7u, m\u00e0 l\u00e0 \u0111\u1ec3 t\u1ea1o ra \"t\u00ean kh\u00e1c\" ho\u1eb7c \"nh\u00e3n m\u00e1c m\u1edbi\" cho m\u1ed9t bi\u1ebfn \u0111\u00e3 c\u00f3 t\u1eeb tr\u01b0\u1edbc. \u0110i\u1ec1u n\u00e0y gi\u1ea3i th\u00edch t\u00ean g\u1ecdi \"con tr\u1ecf\": \"tr\u1ecf\" trong t\u1eeb \"ch\u1ec9 tr\u1ecf\" c\u00f3 ngh\u0129a l\u00e0 ch\u1ec9 v\u00e0o, h\u01b0\u1edbng v\u00e0o m\u1ed9t c\u00e1i g\u00ec \u0111\u00f3. Nh\u01b0ng kh\u00e1c v\u1edbi bi\u1ebfn tham chi\u1ebfu, m\u1ed9t con tr\u1ecf \u1edf nh\u1eefng th\u1eddi \u0111i\u1ec3m kh\u00e1c nhau c\u00f3 th\u1ec3 tr\u1ecf v\u00e0o (hay \"l\u00e0 t\u00ean bi\u1ebfn kh\u00e1c\" ho\u1eb7c \"\u0111\u1ea1i di\u1ec7n cho\") c\u00e1c bi\u1ebfn kh\u00e1c nhau. Bi\u1ebfn con tr\u1ecf c\u00f3 th\u1ec3 kh\u00f4ng tr\u1ecf v\u00e0o c\u00e1i g\u00ec (g\u1ecdi l\u00e0 con tr\u1ecf r\u1ed7ng - NULL m\u00e0 ta s\u1ebd nghi\u00ean c\u1ee9u \u1edf ph\u1ea7n sau) v\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft ph\u1ea3i \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o l\u00fac khai b\u00e1o.</p> <p>T\u00f3m l\u1ea1i, sau ph\u1ea7n n\u00e0y, b\u1ea1n c\u1ea7n n\u1eafm \u0111\u01b0\u1ee3c s\u1ef1 kh\u00e1c bi\u1ec7t c\u1ee7a con tr\u1ecf v\u1edbi nh\u1eefng lo\u1ea1i bi\u1ebfn m\u00e0 c\u00e1c b\u1ea1n hay s\u1eed d\u1ee5ng: C\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin v\u00e0 c\u00f3 t\u00ednh \u0111\u1ed9c l\u1eadp. C\u00e1c bi\u1ebfn tham chi\u1ebfu v\u00e0 con tr\u1ecf d\u00f9ng \u0111\u1ec3 \"\u0111\u1eb7t l\u1ea1i t\u00ean\" ho\u1eb7c \"t\u1ea1o m\u1ed9t t\u00ean m\u1edbi\" cho c\u00e1c bi\u1ebfn \u0111\u00e3 c\u00f3 t\u1eeb tr\u01b0\u1edbc.</p> <p>Ghi ch\u00fa: \u00dd t\u01b0\u1edfng ph\u00e2n t\u00edch \u1edf ph\u1ea7n n\u00e0y c\u00f3 th\u1ec3 KH\u00d4NG ph\u1ea3i l\u00e0 \u00fd t\u01b0\u1edfng \u0111\u1ec3 ng\u01b0\u1eddi s\u00e1ng l\u1eadp ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh C/C++ \u0111\u01b0a con tr\u1ecf v\u00e0o ng\u00f4n ng\u1eef; nh\u01b0ng theo quan \u0111i\u1ec3m c\u1ee7a t\u00e1c gi\u1ea3, g\u00f3c nh\u00ecn n\u00e0y gi\u00fap c\u00e1c b\u1ea1n h\u1ecdc l\u1eadp tr\u00ecnh \u1edf ph\u1ed5 th\u00f4ng hi\u1ec3u \u0111\u01b0\u1ee3c kh\u00e1i ni\u1ec7m c\u1ee7a con tr\u1ecf.</p>"},{"location":"languages/cpp/pointers/#2-cach-su-dung-con-tro","title":"2. C\u00e1ch s\u1eed d\u1ee5ng con tr\u1ecf","text":""},{"location":"languages/cpp/pointers/#a-cac-cu-phap-co-ban","title":"a. C\u00e1c c\u00fa ph\u00e1p c\u01a1 b\u1ea3n","text":"<p>Ph\u1ea7n n\u00e0y ch\u1ee7 y\u1ebfu gi\u1edbi thi\u1ec7u cho c\u00e1c b\u1ea1n c\u00e1c c\u00fa ph\u00e1p c\u01a1 b\u1ea3n \u0111\u1ec3 s\u1eed d\u1ee5ng con tr\u1ecf m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c. B\u1ea1n c\u00f3 th\u1ec3 coi nh\u1eefng \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y nh\u01b0 l\u00e0 c\u00fa ph\u00e1p, ch\u1ec9 h\u1ecdc thu\u1ed9c l\u00f2ng m\u00e0 kh\u00f4ng c\u1ea7n quan t\u00e2m qu\u00e1 nhi\u1ec1u v\u1ec1 \u00fd ngh\u0129a.</p>"},{"location":"languages/cpp/pointers/#khai-bao-con-tro","title":"Khai b\u00e1o con tr\u1ecf","text":"<p>D\u00f9 con tr\u1ecf c\u00f3 th\u1ec3 tr\u1ecf v\u00e0o (\u0111\u1ea1i di\u1ec7n cho/l\u00e0 m\u1ed9t t\u00ean kh\u00e1c c\u1ee7a) nhi\u1ec1u bi\u1ebfn kh\u00e1c nhau trong nh\u1eefng th\u1eddi \u0111i\u1ec3m kh\u00e1c nhau, c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c tr\u1ecf v\u00e0o ph\u1ea3i c\u00f3 c\u00f9ng m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u. Ki\u1ec3u d\u1eef li\u1ec7u chung n\u00e0y c\u1ea7n \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi khai b\u00e1o.</p> <p>\u0110\u1ec3 khai b\u00e1o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o c\u00e1c bi\u1ebfn c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u <code>int</code>, ta khai b\u00e1o <code>int *p</code> ho\u1eb7c <code>int* p</code> (hai c\u00e1ch n\u00e0y nh\u01b0 nhau v\u1ec1 m\u1eb7t c\u00fa ph\u00e1p). T\u01b0\u01a1ng t\u1ef1, n\u1ebfu b\u1ea1n mu\u1ed1n con tr\u1ecf c\u1ee7a b\u1ea1n tr\u1ecf v\u00e0o c\u00e1c bi\u1ebfn c\u00f3 ki\u1ec3u <code>string</code> ho\u1eb7c <code>queue&lt;char&gt;</code>, ta khai b\u00e1o <code>string *s</code> ho\u1eb7c <code>queue&lt;char&gt; *q</code>.</p> <p>T\u1ed5ng qu\u00e1t, n\u1ebfu <code>T</code> l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u n\u00e0o \u0111\u00f3 (c\u00f3 th\u1ec3 l\u00e0 ki\u1ec3u nguy\u00ean th\u1ee7y nh\u01b0 <code>int</code>, <code>char</code>, <code>double</code> ho\u1eb7c c\u00e1c struct, class nh\u01b0 <code>vector&lt;string&gt;</code>, <code>queue&lt;pair&lt;int, int&gt;&gt;</code>) th\u00ec <code>T*</code> l\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o c\u00e1c bi\u1ebfn thu\u1ed9c ki\u1ec3u T. Do con tr\u1ecf c\u0169ng l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u, con tr\u1ecf c\u0169ng c\u00f3 th\u1ec3 tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf kh\u00e1c. V\u00ed d\u1ee5, <code>int **p</code> l\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t bi\u1ebfn ki\u1ec3u <code>int</code> hay <code>char *******just_to_troll</code> l\u00e0 m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t bi\u1ebfn ki\u1ec3u <code>char</code>.</p> <p>Theo kinh nghi\u1ec7m c\u1ee7a m\u00ecnh, con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf l\u00e0 th\u1ee9 r\u1ea5t \u00edt khi s\u1eed d\u1ee5ng trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. V\u00ec v\u1eady, \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n, trong ph\u1ea7n l\u1edbn th\u1eddi l\u01b0\u1ee3ng c\u00f2n l\u1ea1i c\u1ee7a b\u00e0i vi\u1ebft, m\u00ecnh ch\u1ec9 x\u00e9t tr\u01b0\u1eddng h\u1ee3p con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\".</p>"},{"location":"languages/cpp/pointers/#thay-oi-gan-bien-uoc-con-tro-tro-vao","title":"Thay \u0111\u1ed5i (g\u00e1n) bi\u1ebfn \u0111\u01b0\u1ee3c con tr\u1ecf tr\u1ecf v\u00e0o","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 cho m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ho\u1eb7c tr\u1ecf v\u00e0o n\u01a1i m\u00e0 m\u1ed9t con tr\u1ecf kh\u00e1c \u0111ang tr\u1ecf t\u1edbi. V\u00ed d\u1ee5</p> <p><pre><code>int normal;\nint *first;\nint *second;\nfirst = &amp;normal;\nsecond = first;\n</code></pre> Trong v\u00ed d\u1ee5 tr\u00ean, ta c\u00f3 <code>normal</code> l\u00e0 m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code>. <code>first</code> v\u00e0 <code>second</code> l\u00e0 c\u00e1c con tr\u1ecf m\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng (bi\u1ebfn) \u0111\u01b0\u1ee3c tr\u1ecf t\u1edbi c\u00f3 ki\u1ec3u <code>int</code>. D\u00f2ng s\u1ed1 4 <code>first = &amp;normal</code> gi\u00fap con tr\u1ecf first tr\u1ecf v\u00e0o bi\u1ebfn normal. D\u00f2ng s\u1ed1 5 <code>second = first</code> mang \u00fd ngh\u0129a r\u1eb1ng con tr\u1ecf <code>second</code> tr\u1ecf v\u00e0o n\u01a1i m\u00e0 <code>first</code> \u0111ang tr\u1ecf v\u00e0o, ngh\u0129a l\u00e0 bi\u1ebfn <code>normal</code>. </p> <p>Ch\u00fa \u00fd r\u1eb1ng n\u1ebfu b\u1ea1n mu\u1ed1n tr\u1ecf v\u00e0o m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\", tr\u01b0\u1edbc t\u00ean bi\u1ebfn ph\u1ea3i c\u00f3 d\u1ea5u <code>&amp;</code>. C\u00f2n n\u1ebfu mu\u1ed1n m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a m\u1ed9t con tr\u1ecf kh\u00e1c, v\u1ebf ph\u1ea3i kh\u00f4ng c\u1ea7n c\u00f3 d\u1ea5u <code>&amp;</code>. \u0110\u1ed3ng th\u1eddi, c\u00e1c con tr\u1ecf tr\u1ecf v\u00e0o c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c ki\u1ec3u nhau kh\u00f4ng th\u1ec3 b\u1ecb g\u00e1n gh\u00e9p v\u1edbi nhau. Do \u0111\u00f3, c\u00e1c d\u00f2ng code d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec1u g\u1eb7p l\u1ed7i khi bi\u00ean d\u1ecbch:</p> <pre><code>int normal;\nint *pointer_1, *pointer_2;\nstring *pointer_string;\n\npointer_1 = normal; // ERROR!!! should be pointer_1 = &amp;normal\npointer_2 = &amp;pointer_1; // ERROR!!! should be pointer_2 = pointer_1;\npointer_2 = pointer_string // ERROR!!! type mismatches: string* vs int*\n</code></pre> <p>T\u1edbi \u0111\u00e2y c\u00e1c b\u1ea1n s\u1ebd th\u1eafc m\u1eafc: D\u1ea5u <code>&amp;</code> xu\u1ea5t hi\u1ec7n trong <code>&amp;normal</code> c\u00f3 m\u1ed1i quan h\u1ec7 bi\u1ec7n ch\u1ee9ng n\u00e0o v\u1edbi d\u1ea5u <code>&amp;</code> \u1edf ph\u1ea7n bi\u1ebfn tham chi\u1ebfu hay kh\u00f4ng. C\u00e2u tr\u1ea3 l\u1eddi l\u00e0 c\u00f3, nh\u01b0ng n\u00f3 h\u01a1i ph\u1ee9c t\u1ea1p v\u1edbi c\u00e1c b\u1ea1n. Nh\u1eafc l\u1ea1i l\u1ea7n n\u1eefa, m\u00ecnh khuy\u00ean c\u00e1c b\u1ea1n coi c\u00e1c \u0111o\u1ea1n code \u1edf ph\u1ea7n n\u00e0y l\u00e0 nh\u1eefng c\u00fa ph\u00e1p c\u1ed1 \u0111\u1ecbnh v\u00e0 ph\u1ea3i h\u1ecdc thu\u1ed9c l\u00f2ng thay v\u00ec c\u1ed1 ph\u00e2n t\u00edch c\u00e1c quy t\u1eafc.</p>"},{"location":"languages/cpp/pointers/#truy-cap-vao-bien-uoc-con-tro-tro-toi","title":"Truy c\u1eadp v\u00e0o bi\u1ebfn \u0111\u01b0\u1ee3c con tr\u1ecf tr\u1ecf t\u1edbi","text":"<p>Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean, ngo\u1ea1i tr\u1eeb tr\u01b0\u1eddng h\u1ee3p con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf, c\u00e1c con tr\u1ecf \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 \"\u0111\u1eb7t t\u00ean kh\u00e1c\" cho m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" n\u00e0o \u0111\u00f3. \u0110\u1ec3 truy c\u1eadp v\u00e0o m\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c con tr\u1ecf <code>p</code> tr\u1ecf t\u1edbi, b\u1ea1n d\u00f9ng <code>*p</code>. C\u00e1c b\u1ea1n h\u00e3y coi <code>*p</code> \u1edf \u0111\u00e2y nh\u01b0 m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\", ngh\u0129a l\u00e0 n\u1ebfu c\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" c\u00f9ng ki\u1ec3u c\u00f3 th\u1ec3 xu\u1ea5t hi\u1ec7n th\u1ebf n\u00e0o, <code>*p</code> c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ho\u00e0n to\u00e0n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady:</p> <pre><code>int *p_int = ...; // something which does not matter\nstring *p_string = ...; // something which does not matter\n\n*p_int = 5; (*p_int)++; cout &lt;&lt; *p_int &lt;&lt; endl;\nif (!(*p_string).empty()) for (int i = 0; i &lt; (*p_string).size(); i++) printf(\"%c\", (*p_string)[i]);\n</code></pre> <p>Vi\u1ec7c m\u1ed9t con tr\u1ecf l\u00e0 m\u1ed9t t\u00ean kh\u00e1c c\u1ee7a m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>int normal_1, normal_2;\nint *pointer;\n\nnormal_1 = normal_2 = 100;\npointer = &amp;normal_1;\nprintf(\"%d\\n\", *pointer); // 100\n*pointer = 200;\nprintf(\"%d\\n\", normal_1); // 200;\n\npointer = &amp;normal_2;\n*pointer = 300;\nprintf(\"%d %d\\n\", normal_1, normal_2); // 200 300\n\nint *another_pointer = pointer;\nnormal_2 = 400;\nprintf(\"%d\\n\", *another_pointer); // 400\n</code></pre> <p>Trong v\u00ed d\u1ee5 tr\u00ean: - \u0110\u1ea7u ti\u00ean con tr\u1ecf <code>pointer</code> tr\u1ecf v\u00e0o bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" <code>normal_1</code>. Do \u0111\u00f3, <code>normal_1</code> v\u00e0 <code>*pointer</code> l\u00fac n\u00e0y c\u00f9ng l\u00e0 m\u1ed9t bi\u1ebfn: Khi m\u1ed9t l\u1ec7nh l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb <code>normal_1</code>, gi\u00e1 tr\u1ecb c\u1ee7a <code>*pointer</code> c\u0169ng thay \u0111\u1ed5i theo v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.  - Sau l\u1ec7nh g\u00e1n <code>pointer = &amp;normal_2</code>, <code>pointer</code> l\u00fac n\u00e0y tr\u1ecf v\u00e0o <code>normal_2</code> v\u00e0 kh\u00f4ng c\u00f2n tr\u1ecf v\u00e0o <code>normal_1</code> n\u1eefa. V\u00ec v\u1eady, l\u1ec7n g\u00e1n <code>*pointer_2 = 300</code> l\u00e0m thay \u0111\u1ed5i <code>normal_2</code> nh\u01b0ng kh\u00f4ng l\u00e0m thay \u0111\u1ed5i <code>normal_1</code>.  - Cu\u1ed1i c\u00f9ng, con tr\u1ecf <code>another_pointer</code> \u0111\u01b0\u1ee3c cho tr\u1ecf v\u00e0o n\u01a1i <code>pointer</code> \u0111ang tr\u1ecf v\u00e0o, t\u1ee9c l\u00e0 bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" <code>normal_2</code>. Do \u0111\u00f3 l\u1ec7nh g\u00e1n <code>normal_2</code> l\u00e0m thay \u0111\u1ed5i <code>*another_pointer</code>.</p> <p>Ch\u00fa \u00fd: C\u00e1c l\u1ec7nh g\u00e1n c\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" <code>normal_1</code> v\u00e0 <code>normal_2</code> \u1edf tr\u00ean kia l\u00e0m thay \u0111\u1ed5i <code>*pointer</code>, nh\u01b0ng kh\u00f4ng thay \u0111\u1ed5i <code>pointer</code>. C\u00e1c b\u1ea1n c\u1ea7n ph\u00e2n bi\u1ec7t r\u1ea5t c\u1ea9n th\u1eadn hai l\u1ec7nh <code>*another_pointer = *pointer</code> v\u00e0 <code>another_pointer = pointer</code>. L\u1ec7nh th\u1ee9 nh\u1ea5t ch\u1ec9 l\u00e0 ph\u00e9p g\u00e1n gi\u00e1 tr\u1ecb gi\u1eefa hai bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\", trong khi l\u1ec7nh th\u1ee9 hai l\u00e0m thay \u0111\u1ed5i \u0111\u1ed1i t\u01b0\u1ee3ng m\u00e0 <code>another_pointer</code> \u0111\u1ea1i di\u1ec7n cho.</p>"},{"location":"languages/cpp/pointers/#con-tro-null-con-tro-khong-tro-vao-mot-oi-tuong-nao","title":"Con tr\u1ecf NULL - con tr\u1ecf kh\u00f4ng tr\u1ecf v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng n\u00e0o.","text":"<p>Ch\u00fa th\u00edch: N\u1ebfu b\u1ea1n d\u00f9ng C++11 ho\u1eb7c c\u00e1c phi\u00ean b\u1ea3n m\u1edbi h\u01a1n, b\u1ea1n \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch s\u1eed d\u1ee5ng t\u1eeb kh\u00f3a nullptr thay cho t\u1eeb NULL \u0111\u01b0\u1ee3c n\u00eau \u1edf \u0111\u00e2y. Tuy vi\u1ec7c d\u00f9ng t\u1eeb NULL l\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i an to\u00e0n, nullptr v\u1eabn th\u00edch h\u1ee3p h\u01a1n trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y. Chi ti\u1ebft c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem t\u1ea1i \u0111\u00e2y. Ph\u1ea7n c\u00f2n l\u1ea1i v\u1eabn s\u1ebd s\u1eed d\u1ee5ng NULL b\u1edfi ch\u1ec9 t\u1eeb kh\u00f3a n\u00e0y t\u01b0\u01a1ng th\u00edch v\u1edbi C v\u00e0 c\u00e1c b\u1ea3n C++ tr\u01b0\u1edbc 11.</p> <p>M\u1ed9t con tr\u1ecf c\u00f3 th\u1ec3 kh\u00f4ng tr\u1ecf v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng n\u00e0o, khi \u0111\u00f3 con tr\u1ecf mang m\u1ed9t gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh NULL. Khi b\u1ea1n c\u1ed1 g\u1eafng truy c\u1eadp v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a m\u1ed9t con tr\u1ecf mang g\u00eda tr\u1ecb NULL, ch\u01b0\u01a1ng tr\u00ecnh b\u1ea1n b\u1ecb crash ngay l\u1eadp t\u1ee9c (b\u1ecb crash ch\u1ee9 kh\u00f4ng b\u1ecb crush) v\u00e0 b\u1ea1n s\u1ebd g\u1eb7p ph\u1ea3i l\u1ed7i run-time error (ho\u1eb7c non-zero exit code, segmentation fault):</p> <pre><code>int* p = NULL;\ncout &lt;&lt; *p &lt;&lt; endl; // ERROR!!!\n</code></pre> <p>Do \u0111\u00f3, kinh nghi\u1ec7m \u1edf \u0111\u00e2y l\u00e0 lu\u00f4n ki\u1ec3m tra m\u1ed9t con tr\u1ecf c\u00f3 ph\u1ea3i NULL hay kh\u00f4ng tr\u01b0\u1edbc khi truy c\u1eadp v\u00e0o. Khi bi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n ch\u1ea1y sinh l\u1ed7i (khi ch\u1ea1y th\u1eed test \u0111\u1ec1 ho\u1eb7c n\u1ed9p l\u00ean h\u1ec7 th\u1ed1ng b\u1ecb run-time error), b\u1ea1n n\u00ean r\u00e0 so\u00e1t l\u1ea1i to\u00e0n b\u1ed9 code, v\u00e0 xem c\u00e1c con tr\u1ecf \u0111\u00e3 \u0111\u01b0\u1ee3c ki\u1ec3m tra NULL tr\u01b0\u1edbc khi truy c\u1eadp hay ch\u01b0a:</p> <pre><code>int* p ...;\nprintf(\"%d\\n\", *p); // DANGEROUS!!! p might be NULL\nprintf(\"%d\\n\", p != NULL ? *p : 0); // SAFE :)\n</code></pre>"},{"location":"languages/cpp/pointers/#lenh-new-tao-bien-thong-thuong","title":"L\u1ec7nh new t\u1ea1o bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\":","text":"<p>D\u00f9 m\u1ed9t con tr\u1ecf th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 tr\u1ecf v\u00e0o (\"t\u1ea1o t\u00ean bi\u1ebfn kh\u00e1c\") cho m\u1ed9t bi\u1ebfn \u0111\u00e3 c\u00f3 tr\u01b0\u1edbc \u0111\u00f3, c\u00f3 nh\u1eefng tr\u01b0\u1eddng h\u1ee3p ch\u00fang ta mu\u1ed1n con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t bi\u1ebfn ho\u00e0n to\u00e0n m\u1edbi. Khi \u0111\u00f3 l\u1ec7nh <code>new</code> (t\u1eeb kh\u00f3a c\u1ee7a C/C++) gi\u00fap ch\u00fang t\u1ea1o ra m\u1ed9t bi\u1ebfn m\u1edbi:</p> <pre><code>int normal_1 = 100, normal_2 = 200, normal_3 = 300;\nint *pointer = new int;\n*pointer = 400;\nprintf(\"%d %d %d %d\\n\", normal_1, normal_2, normal_3, *pointer); // 100 200 300\n</code></pre> <p>\u1ede \u0111\u00e2y, r\u00f5 r\u00e0ng bi\u1ebfn <code>*pointer</code> l\u00e0 m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code>. Nh\u01b0ng bi\u1ebfn n\u00e0y kh\u00f4ng tr\u00f9ng v\u1edbi b\u1ea5t k\u1ef3 bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code> n\u00e0o \u0111\u00e3 khai b\u00e1o tr\u01b0\u1edbc \u0111\u00f3. Do \u0111\u00f3 l\u1ec7nh <code>*pointer = 400</code> kh\u00f4ng \u1ea3nh h\u01b0\u1edfng t\u1edbi <code>normal_1</code>, <code>normal_2</code> hay <code>normal_3</code>.</p> <p>N\u1ebfu c\u00e1c b\u1ea1n \u0111\u00e3 quen v\u1edbi constructor c\u1ee7a struct/class hay c\u00e1c th\u01b0 vi\u1ec7n STL (m\u1ed9t c\u00e1ch truy\u1ec1n tham s\u00f3 \u0111\u1ec3 kh\u1edfi t\u1ea1o c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng), b\u1ea1n c\u00f3 th\u1ec3 truy\u1ec1n c\u00e1c tham s\u1ed1 m\u1ed9t c\u00e1ch ho\u00e0n to\u00e0n t\u01b0\u01a1ng t\u1ef1 \u0111\u1ec3 kh\u1edfi t\u1ea1o c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a l\u1ec7nh <code>new</code>. D\u01b0\u1edbi \u0111\u00e2y, ta c\u00f3 m\u1ed9t bi\u1ebfn th\u00f4ng th\u01b0\u1eddng <code>vec</code> l\u00e0 m\u1ed9t <code>vector&lt;int&gt;</code> c\u00f3 10 s\u1ed1 1, v\u00e0 m\u1ed9t con tr\u1ecf <code>vec_pointer</code> tr\u1ecf v\u00e0o m\u1ed9t <code>vector&lt;int&gt;</code> c\u00f3 10 s\u1ed1 1. Tuy nhi\u00ean, hai vector n\u00e0y kh\u00f4ng li\u00ean quan \u0111\u1ebfn nhau.</p> <pre><code>vector&lt;int&gt; vec(10, 1);\nvector&lt;int&gt; *vec_pointer = new vector&lt;int&gt;(10, 1);\ncerr &lt;&lt; (*vec_pointer).size() &lt;&lt; \" \" &lt;&lt; (*vec_pointer)[0] &lt;&lt; endl; // 10 1\n</code></pre>"},{"location":"languages/cpp/pointers/#truy-cap-cac-truong-cua-mot-con-tro-tro-vao-oi-tuong","title":"Truy c\u1eadp c\u00e1c tr\u01b0\u1eddng c\u1ee7a m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng.","text":"<p>N\u1ebfu m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng (struct/class) ho\u1eb7c c\u00e1c bi\u1ebfn c\u00f3 ki\u1ec3u l\u00e0 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u trong STL, ta c\u00f3 th\u1ec3 d\u00f9ng m\u0169i t\u00ean <code>-&gt;</code> \u0111\u1ec3 truy c\u1eadp v\u00e0o c\u00e1c tr\u01b0\u1eddng v\u00e0 h\u00e0m c\u1ee7a ch\u00fang. V\u1ec1 m\u1eb7t \u00fd ngh\u0129a, <code>(*p).x</code> v\u00e0 <code>p-&gt;x</code> ho\u00e0n to\u00e0n gi\u1ed1ng nhau, nh\u01b0ng c\u00e1ch vi\u1ebft sau ng\u1eafn g\u1ecdn v\u00e0 d\u1ec5 nh\u00ecn h\u01a1n.</p> <pre><code>vector&lt;int&gt; *p = new vector&lt;int&gt;(); // an empty vector\np-&gt;push_back(2);\ncerr &lt;&lt; p-&gt;size() &lt;&lt; \" \" &lt;&lt; p-&gt;front() &lt;&lt; \"\\n\"; // 1 2\n</code></pre>"},{"location":"languages/cpp/pointers/#b-cac-cu-phap-nang-cao","title":"b. C\u00e1c c\u00fa ph\u00e1p n\u00e2ng cao","text":"<p>Ph\u1ea7n n\u00e0y n\u00f3i v\u1ec1 c\u00e1c ki\u1ebfn th\u1ee9c n\u00e2ng cao h\u01a1n v\u1ec1 con tr\u1ecf, d\u00f9 kh\u00f3 hi\u1ec3u h\u01a1n nh\u01b0ng v\u1eabn n\u00f3i \u0111\u1ebfn c\u00fa ph\u00e1p l\u00e0 ch\u00ednh. \u0110\u00e2y l\u00e0 c\u00e1c t\u00ecnh hu\u1ed1ng s\u1eed d\u1ee5ng con tr\u1ecf \u00edt khi g\u1eb7p trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u. N\u1ebfu c\u00e1c b\u1ea1n c\u1ea3m th\u1ea5y ph\u1ea7n tr\u00ean kh\u00f3 hi\u1ec3u v\u1edbi b\u1ea1n, c\u00f3 th\u1ec3 c\u00e2n nh\u1eafc b\u1ecf qua ph\u1ea7n n\u00e0y. Th\u00e0nh th\u1eadt xin l\u1ed7i c\u00e1c b\u1ea1n :(</p>"},{"location":"languages/cpp/pointers/#lay-con-tro-lam-tham-so-cua-ham","title":"L\u1ea5y con tr\u1ecf l\u00e0m tham s\u1ed1 c\u1ee7a h\u00e0m","text":"<p>Tr\u01b0\u1edbc ti\u00ean, ta nh\u1eafc l\u1ea1i 3 lo\u1ea1i tham s\u1ed1 \u0111\u1ed1i v\u1edbi c\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\": tham tr\u1ecb, tham bi\u1ebfn v\u00e0 h\u1eb1ng tham bi\u1ebfn:</p> Ki\u1ec3m tham s\u1ed1 C\u00fa ph\u00e1p Gi\u00e1 tr\u1ecb truy\u1ec1n v\u00e0o Chi ph\u00ed truy\u1ec1n tham s\u1ed1 Thay \u0111\u1ed5i gi\u00e1 tr\u1ecb tham s\u1ed1 Tham tr\u1ecb `int a` Bi\u1ebfn, bi\u1ec3u th\u1ee9c ho\u1eb7c h\u1eb1ng s\u1ed1 Chi ph\u00ed l\u1edbn n\u1ebfu ki\u1ec3u d\u1eef li\u1ec7u truy\u1ec1n v\u00e0o l\u00e0 vector, set... do ph\u1ea3i copy gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn C\u00f3 th\u1ec3 g\u00e1n l\u1ea1i trong h\u00e0m, nh\u01b0ng gi\u00e1 tr\u1ecb ngo\u00e0i h\u00e0m c\u1ee7a bi\u1ebfn kh\u00f4ng \u0111\u1ed5i Tham bi\u1ebfn `int &amp;a` Ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0 bi\u1ebfn Chi ph\u00ed r\u1ea5t nh\u1ecf do kh\u00f4ng ph\u1ea3i copy gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn L\u1ec7nh g\u00e1n trong h\u00e0m l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn \u1edf ngo\u00e0i h\u00e0m H\u1eb1ng tham bi\u1ebfn `const int &amp;a` Bi\u1ebfn, bi\u1ec3u th\u1ee9c ho\u1eb7c h\u1eb1ng s\u1ed1 Chi ph\u00ed l\u1edbn n\u1ebfu \u0111\u1ed1i t\u01b0\u1ee3ng truy\u1ec1n v\u00e0o l\u00e0 bi\u1ec3u th\u1ee9c, chi ph\u00ed nh\u1ecf n\u1ebfu \u0111\u1ed1i t\u01b0\u1ee3ng truy\u1ec1n v\u00e0o l\u00e0 bi\u1ebfn Kh\u00f4ng th\u1ec3 l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn trong h\u00e0m <p>V\u00ed d\u1ee5: <pre><code>void update(int a, int &amp;b, const int &amp;c) {\n   a = 10; // OK but has no effect\n   b = 20; // OK and has effect\n   c = 30; // COMPILATION ERROR\n}\n\nint main(void) {\n   int a = 1, b = 2, c = 3;\n   update(a, b, c);\n   cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; \" \" &lt;&lt; c &lt;&lt; endl; // 1 20 3\n\n   update(1 + 1, b, c); // OK\n   update(a, 1 + 1, c); // COMPILATION ERROR\n   update(a, b, 1 + 1); // OK\n}\n</code></pre></p> <p>Trong \u0111o\u1ea1n code tr\u00ean, l\u1ec7nh <code>c = 30</code> g\u1eb7p l\u1ed7i v\u00ec h\u1eb1ng tham bi\u1ebfn kh\u00f4ng th\u1ec3 b\u1ecb g\u00e1n l\u1ea1i trong h\u00e0m. N\u1ebfu x\u00f3a d\u00f2ng <code>c = 30</code> n\u00e0y \u0111i, h\u00e0m update ch\u1ec9 l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb bi\u1ebfn <code>b</code> v\u00ec <code>a</code> l\u00e0 tham tr\u1ecb c\u00f2n <code>b</code> l\u00e0 tham bi\u1ebfn. Do \u0111\u00f3 khi in ra, bi\u1ebfn <code>a</code> v\u1eabn c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 <code>1</code>, c\u00f2n bi\u1ebfn <code>b</code> b\u1ecb g\u00e1n l\u1ea1i th\u00e0nh <code>20</code>, bi\u1ebfn <code>c</code> kh\u00f4ng thay \u0111\u1ed5i gi\u00e1 tr\u1ecb do \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o l\u00e0 h\u1eb1ng tham bi\u1ebfn v\u00e0 kh\u00f4ng th\u1ec3 g\u00e1n l\u1ea1i.</p> <p>N\u1ebfu ta th\u1eed truy\u1ec1n m\u1ed9t bi\u1ec3u th\u1ee9c (v\u00ed d\u1ee5, <code>1 + 1</code> nh\u01b0 \u1edf tr\u00ean), tham s\u1ed1 th\u1ee9 nh\u1ea5t v\u00e0 th\u1ee9 ba c\u1ee7a h\u00e0m <code>update</code> (tham tr\u1ecb v\u00e0 h\u1eb1ng tham bi\u1ebfn) cho ph\u00e9p l\u00e0m \u0111i\u1ec1u n\u00e0y, c\u00f2n tham s\u1ed1 th\u1ee9 hai (tham bi\u1ebfn) ch\u1ec9 ch\u1ea5p nh\u1eadn truy\u1ec1n v\u00e0o m\u1ed9t bi\u1ebfn.</p> <p>V\u1edbi con tr\u1ecf, b\u1ea1n c\u00f3 th\u1ec3 truy\u1ec1n v\u00e0o ba lo\u1ea1i tham s\u1ed1 t\u01b0\u01a1ng t\u1ef1. Tuy nhi\u00ean, do k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed9t bi\u1ebfn con tr\u1ecf l\u00e0 r\u1ea5t nh\u1ecf (4 bytes (b\u1eb1ng m\u1ed9t bi\u1ebfn <code>int</code>) v\u1edbi c\u00e1c m\u00e1y t\u00ednh d\u00f9ng H\u0110H 32-bit, ho\u1eb7c 8 bytes (b\u1eb1ng m\u1ed9t bi\u1ebfn <code>long long</code>) v\u1edbi c\u00e1c m\u00e1y t\u00ednh d\u00f9ng H\u0110H 64-bit); m\u00ecnh th\u1ea5y vi\u1ec7c d\u00f9ng h\u1eb1ng tham bi\u1ebfn v\u1edbi con tr\u1ecf l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft (H\u1eb1ng tham bi\u1ebfn ch\u1ec9 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi b\u1ea1n truy\u1ec1n c\u00e1c tham s\u1ed1 c\u00f3 k\u00edch th\u01b0\u1edbc l\u1edbn nh\u01b0 vector, map, set...). V\u1edbi con tr\u1ecf \u0111\u01b0\u1ee3c truy\u1ec1n theo ki\u1ec3u tham tr\u1ecb ho\u1eb7c tham bi\u1ebfn, c\u00f3 c\u00e1c \u0111i\u1ec3m c\u1ea7n ch\u00fa \u00fd sau \u0111\u00e2y: - Chi ph\u00ed truy\u1ec1n v\u00e0o lu\u00f4n r\u1ea5t nh\u1ecf, b\u1ea5t k\u1ec3 l\u00e0 tham tr\u1ecb hay tham bi\u1ebfn, b\u1ea5t k\u1ec3 \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c tr\u1ecf v\u00e0o l\u00e0 <code>int</code> hay <code>vector</code>. - Gi\u00e1 tr\u1ecb c\u1ee7a con tr\u1ecf (bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" \u0111\u01b0\u1ee3c con tr\u1ecf tr\u1ecf v\u00e0o) kh\u00f4ng \u0111\u1ed5i v\u1edbi tham tr\u1ecb, v\u00e0 c\u00f3 th\u1ec3 thay \u0111\u1ed5i v\u1edbi tham bi\u1ebfn. - Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn \u0111\u01b0\u1ee3c \u0111\u1ed1i t\u01b0\u1ee3ng tr\u1ecf v\u00e0o lu\u00f4n b\u1ecb thay \u0111\u1ed5i n\u1ebfu c\u00f3 c\u00e1c l\u1ec7nh g\u00e1n ho\u1eb7c g\u1ecdi h\u00e0m l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang.</p> <p>V\u00ed d\u1ee5: <pre><code>int normal_1, normal_2;\nvoid update(int* pointer) {\n   *pointer = 10;\n   pointer = &amp;normal_2;\n   *pointer = 20;\n}\n\nint main(void) {\n   normal_1 = 1; normal_2 = 2;\n   int* pointer = &amp;normal_1;\n   update(pointer);\n   cout &lt;&lt; normal_1 &lt;&lt; \" \" &lt;&lt; normal_2 &lt;&lt; \" \" &lt;&lt; *pointer &lt;&lt; endl; // 10 20 10;\n}\n</code></pre> Trong v\u00ed d\u1ee5 tr\u00ean: - Khi h\u00e0m <code>update</code> \u0111\u01b0\u1ee3c g\u1ecdi, tham s\u1ed1 <code>pointer</code> \u0111ang tr\u1ecf v\u00e0o bi\u1ebfn <code>normal_1</code>. Do \u0111\u00f3, l\u1ec7nh <code>*pointer = 10</code> mang \u00fd ngh\u0129a <code>normal_1 = 10</code>; - Sau hai l\u1ec7nh <code>pointer = &amp;normal_2</code> v\u00e0 <code>*pointer = 20</code>, bi\u1ebfn <code>pointer</code> n\u00e0y tr\u1ecf v\u00e0o bi\u1ebfn <code>normal_2</code> v\u00e0 g\u00e1n bi\u1ebfn n\u00e0y th\u00e0nh <code>20</code>. - K\u1ebft qu\u1ea3 in ra cho th\u1ea5y <code>*pointer = 10</code>, t\u1ee9c l\u00e0 <code>pointer</code> tr\u1ecf v\u00e0o <code>normal_1</code>. T\u1ee9c l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng b\u1ecb <code>pointer</code> tr\u1ecf v\u00e0o kh\u00f4ng \u0111\u1ed5i sau khi g\u1ecdi h\u00e0m update.</p> <p><pre><code>int normal_1, normal_2;\nvoid update(int *&amp;pointer) {\n   *pointer = 10;\n   pointer = &amp;normal_2;\n   *pointer = 20;\n}\n\nint main(void) {\n   normal_1 = 1; normal_2 = 2;\n   int* pointer = &amp;normal_1;\n   update(pointer);\n   cout &lt;&lt; normal_1 &lt;&lt; \" \" &lt;&lt; normal_2 &lt;&lt; \" \" &lt;&lt; *pointer &lt;&lt; endl; // 10 20 20;\n}\n</code></pre> \u0110o\u1ea1n code n\u00e0y ch\u1ec9 kh\u00e1c \u1edf \u0111o\u1ea1n code tr\u00ean \u1edf ch\u1ed7 tham s\u1ed1 <code>pointer</code> c\u1ee7a h\u00e0m <code>update</code> l\u00e0 tham bi\u1ebfn thay v\u00ec tham tr\u1ecb.  G\u00eda tr\u1ecb c\u1ee7a hai bi\u1ebfn <code>normal_1</code> v\u00e0 <code>normal_2</code> gi\u1ed1ng h\u1ec7t \u0111o\u1ea1n code tr\u00ean, nh\u01b0ng <code>pointer</code> l\u00fac n\u00e0y tr\u1ecf v\u00e0o <code>normal_2</code>. S\u1edf d\u0129 c\u00f3 \u0111i\u1ec1u n\u00e0y l\u00e0 v\u00ec trong h\u00e0m <code>update</code>, <code>pointer</code> b\u1ecb g\u00e1n l\u1ea1i th\u00e0nh <code>&amp;normal_2</code>, v\u00e0 v\u00ec <code>pointer</code> l\u00e0 tham bi\u1ebfn, l\u1ec7nh g\u00e1n n\u00e0y gi\u1eef nguy\u00ean gi\u00e1 tr\u1ecb khi ra kh\u1ecfi h\u00e0m.</p>"},{"location":"languages/cpp/pointers/#tao-mang-ong","title":"T\u1ea1o m\u1ea3ng \u0111\u1ed9ng","text":"<p>C\u00e1c b\u1ea1n \u0111\u00e3 bi\u1ebft, trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p b\u1ea1n kh\u00f4ng th\u1ec3 khai b\u00e1o m\u1ea3ng t\u0129nh v\u00ec nh\u01b0 v\u1eady k\u00edch th\u01b0\u1edbc m\u1ea3ng c\u1ea7n thi\u1ebft s\u1ebd qu\u00e1 l\u1edbn, v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n b\u1ed9 nh\u1edb cho ph\u00e9p v\u00e0 th\u1ef1c t\u1ebf kh\u00f4ng c\u1ea7n thi\u1ebft t\u1edbi v\u1eady.</p> <p>V\u00ed d\u1ee5, khi b\u1ea1n c\u1ea7n nh\u1eadp v\u00e0o m\u1ed9t b\u1ea3ng hai chi\u1ec1u k\u00edch th\u01b0\u1edbc \\(m \\cdot n\\) v\u1edbi \\(1 \\leq m \\cdot n \\leq 10^5\\), ta bi\u1ebft r\u1eb1ng c\u1ea3 \\(m\\) v\u00e0 \\(n\\) \u0111\u1ec1u c\u00f3 th\u1ec3 l\u00ean t\u1edbi \\(10^5\\). Tuy nhi\u00ean, khai b\u00e1o m\u1ea3ng t\u0129nh <code>int a[1e5][1e5]</code> l\u00e0 kh\u00f4ng kh\u1ea3 thi v\u00ec k\u00edch th\u01b0\u1edbc m\u1ea3ng \\(10^{10}\\) l\u00e0 qu\u00e1 to. </p> <p>M\u1ed9t tr\u01b0\u1eddng h\u1ee3p kh\u00e1c kh\u00e1 quen thu\u1ed9c v\u1edbi c\u00e1c b\u1ea1n: C\u00e1c b\u1ea1n c\u1ea7n l\u01b0u m\u1ea3ng danh s\u00e1ch k\u1ec1 c\u1ee7a m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 \\(10^5\\) \u0111\u1ec9nh v\u00e0 \\(10^5\\) c\u1ea1nh. Ta bi\u1ebft r\u1eb1ng m\u1ed9t \u0111\u1ec9nh c\u00f3 th\u1ec3 k\u1ec1 v\u1edbi t\u1ed1i \u0111a \\(10^5-1\\) \u0111\u1ec9nh kh\u00e1c, do \u0111\u00f3 n\u1ebfu d\u00f9ng m\u1ea3ng t\u0129nh ta ph\u1ea3i khai b\u00e1o <code>int adj[1e5][1e5]</code>, nh\u01b0ng \u0111i\u1ec1u n\u00e0y m\u1ed9t l\u1ea7n n\u1eefa kh\u00f4ng kh\u1ea3 thi. Nh\u01b0ng ch\u00fang ta bi\u1ebft r\u1eb1ng, th\u1ef1c t\u1ebf ch\u1ec9 c\u00f3 \\(10^5\\) c\u1ea1nh, t\u1ee9c l\u00e0 t\u1ed5ng k\u00edch th\u01b0\u1edbc c\u1ee7a danh s\u00e1ch k\u1ec1 \u1ee9ng v\u1edbi c\u00e1c \u0111\u1ec9nh l\u00e0 kh\u00f4ng qu\u00e1 \\(2 \\cdot 10^5\\), \u0111\u00f3 l\u00e0 l\u00fd do ch\u00fang ta s\u1eed d\u1ee5ng <code>vector&lt;int&gt; adj[1e5]</code>.</p> <p>Theo quan \u0111i\u1ec3m c\u1ee7a m\u00ecnh, vi\u1ec7c t\u1ea1o m\u1ea3ng \u0111\u1ed9ng b\u1eb1ng con tr\u1ecf kh\u00f4ng c\u1ea7n thi\u1ebft, do <code>vector</code> c\u1ee7a C++ c\u0169ng kh\u00e1 ti\u1ec7n l\u1ee3i. H\u01a1n n\u1eefa, vi\u1ec7c khai b\u00e1o vector c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh kh\u00f4ng khi\u1ebfn vector ch\u1eadm h\u01a1n ho\u1eb7c d\u00f9ng nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n m\u1ea3ng (ch\u1ec9 vi\u1ec7c <code>push_back</code> qu\u00e1 nhi\u1ec1n l\u1ea7n v\u1edbi nh\u1eefng vector c\u00f3 k\u00edch th\u01b0\u1edbc nh\u1ecf m\u1edbi khi\u1ebfn vector b\u1ecb ch\u1eadm). V\u00ec v\u1eady, n\u1ebfu b\u1ea1n kh\u00f4ng th\u1ea1o con tr\u1ecf, l\u1eddi khuy\u00ean l\u00e0 h\u00e3y d\u00f9ng vector.</p> <p>\u0110\u1ec3 hi\u1ec3u c\u00e1ch t\u1ea1o m\u1ea3ng b\u1eb1ng con tr\u1ecf, b\u1ea1n c\u1ea7n hi\u1ec3u v\u1ec1 nguy\u00ean l\u00fd ho\u1ea1t \u0111\u1ed9ng c\u1ee7a m\u1ea3ng, v\u00e0 v\u00ec sao truy c\u1eadp ph\u1ea7n t\u1eed th\u1ee9 \\(k\\) c\u1ee7a m\u1ea3ng l\u1ea1i m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\\\mathcal{O}(1)\\). \u0110i\u1ec1u n\u00e0y n\u00f3i chi ti\u1ebft ra s\u1ebd kh\u00e1 d\u00e0i d\u00f2ng v\u00e0 c\u0169ng h\u01a1i kh\u00f3 hi\u1ec3u, v\u00ec v\u1eady m\u00ecnh s\u1ebd b\u1ecf qua (c\u00e1c b\u1ea1n khi l\u00ean \u0111\u1ea1i h\u1ecdc s\u1ebd \u0111\u01b0\u1ee3c h\u1ecdc th\u00eam v\u1ec1 ph\u1ea7n n\u00e0y, v\u00e0 m\u00ecnh c\u1ea3nh b\u00e1o tr\u01b0\u1edbc, \u0111\u00e2y l\u00e0 ph\u1ea7n r\u1ea5t r\u1ea5t kh\u00f3. B\u1ea3n th\u00e2n m\u00ecnh ko \u0111\u1ea1t \u0111i\u1ec3m t\u1ed1i \u0111a b\u00e0i ki\u1ec3m tra m\u00f4n l\u1eadp tr\u00ecnh c\u01a1 b\u1ea3n ph\u1ea7n con tr\u1ecf).</p> <p>N\u00f3i v\u1eafn t\u1eaft, m\u1ed9t m\u1ea3ng c\u00e1c s\u1ed1 nguy\u00ean ki\u1ec3u <code>int</code> c\u00f3 b\u1ea3n ch\u1ea5t gi\u1ed1ng nh\u01b0 m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a m\u1ea3ng. T\u1ee9c l\u00e0, n\u1ebfu ta khai b\u00e1o <code>int a[100]</code> th\u00ec bi\u1ebfn  <code>a</code> c\u00f3 ki\u1ec3u <code>int*</code> (d\u00f9 <code>a[0]</code>, <code>a[1]</code>,... c\u00f3 ki\u1ec3u l\u00e0 <code>int</code>). Do <code>a</code> l\u00e0 con tr\u1ecf ki\u1ec3u <code>int*</code>, <code>*a</code> l\u00e0 m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code>, v\u00e0 v\u00ec <code>a</code> tr\u1ecf v\u00e0o ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean <code>a[0]</code>, <code>*a</code> v\u00e0 <code>a[0]</code> l\u00e0 c\u00f9ng m\u1ed9t bi\u1ebfn (g\u00e1n <code>*a = 4</code> v\u00e0 <code>a[0] = 4</code> l\u00e0 nh\u01b0 nhau).</p> <p>T\u01b0\u01a1ng t\u1ef1, do m\u1ea3ng hai chi\u1ec1u l\u00e0 m\u1ea3ng c\u00e1c m\u1ea3ng m\u1ed9t chi\u1ec1u, m\u1ea3ng hai chi\u1ec1u gi\u1ed1ng nh\u01b0 **con tr\u1ecf tr\u1ecf v\u00e0o m\u1ed9t con tr\u1ecf. N\u1ebfu ta khai b\u00e1o <code>int b[100][100]</code>, bi\u1ebfn <code>b</code> c\u00f3 ki\u1ec3u <code>int**</code>. </p> <p>\u0110\u1ec3 t\u1ea1o ra m\u1ea3ng m\u1ed9t chi\u1ec1u c\u00f3 \\(100\\) ph\u1ea7n t\u1eed <code>int</code>, ta khai b\u00e1o nh\u01b0 sau: <pre><code>int *a = new int[100];\n</code></pre></p> <p>\u0110\u1ec3 t\u1ea1o ra c\u00e1c m\u1ea3ng nhi\u1ec1u chi\u1ec1u, \u00fd t\u01b0\u1edfng l\u00e0 ta s\u1ebd t\u1ea1o ra t\u1eebng chi\u1ec1u m\u1ed9t. V\u00ed d\u1ee5 d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ecdc v\u00e0o 3 s\u1ed1 m, n, p v\u00e0 t\u1ea1o ra m\u1ed9t m\u1ea3ng hai chi\u1ec1u k\u00edch th\u01b0\u1edbc \\(m \\cdot n\\) c\u00f9ng m\u1ed9t m\u1ea3ng ba chi\u1ec1u k\u00edch th\u01b0\u1edbc \\(m \\cdot n \\cdot p\\): <pre><code>int **array_2d, ***array_3d;\nint m, n, p; cin &gt;&gt; m &gt;&gt; n &gt;&gt; p;\n\narray_2d = new int*[m];\nfor (int i = 0; i &lt; m; i++) array_2d[i] = new int[n];\n\narray_3d = new int**[m];\nfor (int i = 0; i &lt; m; i++) {\n   array_3d[i] = new int*[n];\n   for (int j = 0; j &lt; n; j++) array_3d[i][j] = new int[p];\n}\n</code></pre></p> <p>Vi\u1ec7c d\u00f9ng vector \u0111\u1ec3 t\u1ea1o m\u1ea3ng \u0111\u1ed9ng \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch do s\u1ef1 d\u1ec5 d\u00e0ng v\u00e0 thu\u1eadn ti\u1ec7n. Tuy nhi\u00ean, c\u00f3 hai \u01b0u \u0111i\u1ec3m c\u1ee7a vi\u1ec7c d\u00f9ng m\u1ea3ng \u0111\u1ed9ng b\u1eb1ng con tr\u1ecf: T\u1ed1n \u00edt b\u1ed9 nh\u1edb v\u00e0 code ng\u1eafn g\u1ecdn h\u01a1n.</p> <p>V\u00ed d\u1ee5, n\u1ebfu ta c\u1ea7n m\u1ed9t m\u1ea3ng 4 chi\u1ec1u k\u00edch th\u01b0\u1edbc \\(10^5 \\cdot 10^2 \\cdot 2 \\cdot 2\\), c\u00f3 hai c\u00e1ch khai b\u00e1o m\u00e0 m\u00ecnh bi\u1ebft: <pre><code>int m = (int)1e5, n = (int)1e2;\n\nvector&lt;vector&lt;vector&lt;vector&lt;int&gt;&gt;&gt;&gt; dynamic_vector(m, vector&lt;vector&lt;vector&lt;int&gt;&gt;&gt;);\nfor (int i = 0; i &lt; m; i++) {\n   dynamic_vector[i].resize(n);\n   for (int j = 0; j &lt; n; j++) {\n      dynamic_vector[i][j].resize(2);\n      for (int k = 0; k &lt; 2; k++)\n         dynamic_vector[i][j][k].resize(2);\n   }\n}\n\n/**OR**/\nint**** dynamic_array = new int***[m];\nfor (int i = 0; i &lt; m; i++) {\n   dynamic_array[i] = new int**[n];\n   for (int j = 0; j &lt; n; j++) {\n      dynamic_array[i][j] = new int*[2];\n      for (int k = 0; k &lt; 2; k++) {\n         dynamic_array[i][j][k] = new int[2];\n      }\n   }\n}\n</code></pre></p> <p>M\u1ed9t vector c\u1ea7n 24 bytes \u0111\u1ec3 l\u01b0u, c\u00f2n m\u1ed9t con tr\u1ecf ch\u1ec9 c\u1ea7n 8 bytes. \u1ede m\u1ed7i c\u00e1ch, ta c\u1ea7n l\u01b0u \\(m + m \\cdot n + m \\cdot n \\cdot 2 = 30.1 \\cdot 10^6\\) vector/con tr\u1ecf v\u00e0 \\(4 \\cdot 10^7\\) bi\u1ebfn <code>int</code>. Do \u0111\u00f3 d\u00f9ng vector s\u1ebd t\u1ed1n \\(882.4 \\cdot 10^6\\) bytes ~ \\(841.5\\)MB, nh\u01b0ng d\u00f9ng con tr\u1ecf ch\u1ec9 t\u1ed1n ~400MB. </p> <p>Sau \u0111\u00e2y l\u00e0 hai l\u1eddi khuy\u00ean cu\u1ed1i c\u00f9ng v\u1ec1 vi\u1ec7c t\u1ea1o m\u1ea3ng \u0111\u1ed9ng: - B\u1ea5t k\u1ec3 s\u1eed d\u1ee5ng vector hay con tr\u1ecf \u0111\u1ec3 khai b\u00e1o m\u1ea3ng \u0111\u1ed9ng, b\u1ea1n c\u1ed1 g\u1eafng ch\u1ec9 t\u1ea1o m\u1ed9t chi\u1ec1u \u0111\u1ed9ng, c\u00f2n c\u00e1c chi\u1ec1u c\u00f2n l\u1ea1i t\u0129nh. - Tr\u01b0\u1eddng h\u1ee3p b\u1eaft bu\u1ed9c ph\u1ea3i d\u00f9ng m\u1ea3ng \u0111\u1ed9ng nhi\u1ec1u chi\u1ec1u, d\u00f9ng con tr\u1ecf s\u1ebd t\u1ed1t h\u01a1n vector.</p> <p>Gi\u1ea3 s\u1eed b\u1ea1n c\u00f3 m\u1ed9t b\u00e0i quy ho\u1ea1ch \u0111\u1ed9ng 4 chi\u1ec1u v\u1edbi h\u00e0m qh\u0111 \\(f(i, j, k, l)\\) v\u1edbi \\(0 \\leq i \\leq m\\), \\(0 \\leq j \\leq n\\) v\u00e0 \\(k\\) v\u00e0 \\(l\\) ch\u1ec9 l\u00e0 c\u00e1c gi\u00e1 tr\u1ecb \\(0\\) ho\u1eb7c \\(1\\). N\u1ebfu \u0111\u1ec1 b\u00e0i r\u00e0ng bu\u1ed9c \\(1 \\leq m \\cdot n \\leq 10^5\\), ta bi\u1ebft r\u1eb1ng k\u00edch th\u01b0\u1edbc c\u1ee7a ba chi\u1ec1u \\(i\\), \\(k\\), v\u00e0 \\(l\\) kh\u00f4ng qu\u00e1 \\(4 \\cdot 10^5\\). Do \u0111\u00f3 m\u00ecnh khuy\u00ean c\u00e1c b\u1ea1n n\u00ean bi\u1ec3u di\u1ec5n tr\u1ea1ng th\u00e1i d\u01b0\u1edbi d\u1ea1ng \\(f(k, l, i, j)\\) thay v\u00ec \\(f(i, j, k, l)\\) (\u0111\u1ea3o th\u1ee9 t\u1ef1 c\u00e1c chi\u1ec1u): <pre><code>## define MAX   100100\nint *f[2][2][MAX];\n\nint main(void) {\n   int m, n; cin &gt;&gt; m &gt;&gt; n;\n   ...\n   for (int k = 0; k &lt; 2; k++) for (int l = 0; l &lt; 2; l++) for (int i = 0; i &lt;= m; i++)\n      f[k][l][i] = new int[n + 1]; // note that 0 &lt;= j &lt;= n so the array size is n+1.\n}\n</code></pre></p>"},{"location":"languages/cpp/pointers/#lenh-delete-e-giai-phong-bo-nho","title":"L\u1ec7nh delete \u0111\u1ec3 gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb","text":"<p><code>delete</code> l\u00e0 l\u1ec7nh tr\u00e1i ng\u01b0\u1ee3c v\u1edbi <code>new</code>. N\u1ebfu nh\u01b0 <code>new</code> l\u00e0 l\u1ec7nh d\u00f9ng \u0111\u1ec3 \"xin\" b\u1ed9 nh\u1edb m\u00e1y t\u00ednh cho m\u1ed9t bi\u1ebfn m\u1edbi, th\u00ec <code>delete</code> d\u00f9ng \u0111\u1ec3 tr\u1ea3 l\u1ea1i b\u1ed9 nh\u1edb bi\u1ebfn n\u00e0y. Khi b\u1ea1n g\u1ecdi l\u1ec7nh <code>new</code>: <code>int *p = new int</code> hay <code>int *arr = new int[100]</code>, b\u1ea1n ti\u00eau t\u1ed1n m\u1ed9t ph\u1ea7n t\u00e0i nguy\u00ean c\u1ee7a m\u00e1y t\u00ednh \u0111\u1ec3 l\u01b0u c\u00e1c bi\u1ebfn <code>int</code> \u0111\u01b0\u1ee3c t\u1ea1o th\u00eam n\u00e0y. \u0110\u1ebfn l\u00fac b\u1ea1n kh\u00f4ng c\u1ea7n ch\u00fang n\u1eefa, b\u1ea1n kh\u00f4ng mu\u1ed1n ti\u00eau t\u1ed1n t\u00e0i nguy\u00ean, b\u1ea1n g\u1ecdi l\u1ec7nh <code>delete p</code> ho\u1eb7c <code>delete[] arr</code>. Khi \u0111\u00f3, c\u00e1c bi\u1ebfn b\u1ea1n v\u1eeba \"xin\" th\u00eam s\u1ebd bi\u1ebfn m\u1ea5t.</p> <p>L\u1ec7nh <code>delete</code> n\u00e0y r\u1ea5t thi\u1ebft th\u1ef1c trong l\u1eadp tr\u00ecnh th\u1ef1c t\u1ebf, do b\u1ea1n kh\u00f4ng mu\u1ed1n s\u1eed d\u1ee5ng t\u00e0i nguy\u00ean khi kh\u00f4ng c\u1ea7n thi\u1ebft. Nh\u01b0ng nh\u00ecn chung, b\u1ea1n kh\u00f4ng c\u1ea7n <code>delete</code> trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, do m\u1ed9t khi \u0111\u00e3 <code>new</code> \u0111\u01b0\u1ee3c th\u00ec ngh\u0129a l\u00e0 b\u1ea1n kh\u00f4ng b\u1ecb qu\u00e1 gi\u1edbi h\u1ea1n b\u1ed9 nh\u1edb cho ph\u00e9p.</p>"},{"location":"languages/cpp/pointers/#c-cac-loi-thuong-gap-ve-con-tro","title":"c. C\u00e1c l\u1ed7i th\u01b0\u1eddng g\u1eb7p v\u1ec1 con tr\u1ecf","text":""},{"location":"languages/cpp/pointers/#sai-cu-phap","title":"Sai c\u00fa ph\u00e1p","text":"<p>L\u1ed7i n\u00e0y bao g\u1ed3m vi\u1ec7c g\u00f5 thi\u1ebfu ho\u1eb7c th\u1eeba c\u00e1c d\u1ea5u <code>*</code> ho\u1eb7c c\u00e1c d\u1ea5u <code>&amp;</code>. Trong m\u1ed9t ph\u00e9p g\u00e1n ho\u1eb7c ph\u00e9p t\u00ednh, n\u1ebfu b\u1ea1n ch\u1ec9 g\u00f5 sai \u1edf m\u1ed9t trong hai v\u1ebf, b\u1ea1n s\u1ebd c\u00f3 m\u1ed9t ph\u00e9p g\u00e1n kh\u00f4ng h\u1ee3p l\u1ec7 v\u00e0 tr\u00ecnh bi\u00ean d\u1ecbch s\u1ebd b\u00e1o l\u1ed7i. Khi \u0111\u00f3 b\u1ea1n bi\u1ebft m\u00ecnh m\u1eafc l\u1ed7i v\u00e0 ph\u1ea3i s\u1eeda, nh\u01b0ng vi\u1ec7c s\u1eeda l\u00e0 kh\u00f4ng d\u1ec5 d\u00e0ng do c\u00e1c th\u00f4ng \u0111i\u1ec7p b\u00e1o l\u1ed7i c\u1ee7a C++ trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y th\u01b0\u1eddng kh\u00f3 hi\u1ec3u. L\u1eddi khuy\u00ean khi g\u1eb7p ph\u1ea3i tr\u01b0\u1eddng h\u1ee3p n\u00e0y \u0111\u00f3 l\u00e0 b\u1ea1n h\u00e3y nh\u00ecn k\u1ef9 l\u1ea1i hai v\u1ebf xem ki\u1ec3u d\u1eef li\u1ec7u \u1edf hai v\u1ebf c\u00f3 t\u01b0\u01a1ng \u1ee9ng nhau hay kh\u00f4ng: - N\u1ebfu <code>a</code> l\u00e0 m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code>, <code>&amp;a</code> l\u00e0 m\u1ed9t con tr\u1ecf ki\u1ec3u <code>int*</code> v\u00e0 <code>*a</code> l\u00e0 m\u1ed9t bi\u1ec3u th\u1ee9c v\u00f4 ngh\u0129a. - N\u1ebfu <code>a</code> l\u00e0 m\u1ed9t con tr\u1ecf ki\u1ec3u <code>int*</code>, <code>*a</code> l\u00e0 m\u1ed9t bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code> v\u00e0 <code>&amp;a</code> l\u00e0 m\u1ed9t con tr\u1ecf ki\u1ec3u <code>int**</code>. - M\u1ed9t ph\u00e9p g\u00e1n ch\u1ec9 h\u1ee3p l\u1ec7 khi ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a hai v\u1ebf gi\u1ed1ng nhau (\u0111\u1ec1u l\u00e0 <code>int</code> hay \u0111\u1ec1u l\u00e0 <code>int*</code>).</p> <p>Tuy nhi\u00ean, c\u00f3 nh\u1eefng tr\u01b0\u1eddng h\u1ee3p kh\u00f3 ph\u00e1t hi\u1ec7n h\u01a1n do l\u1ed7i sai kh\u00f4ng g\u00e2y l\u1ed7i bi\u00ean d\u1ecbch (gi\u1ed1ng nh\u01b0 c\u00e1c b\u1ec7nh nh\u00e2n nhi\u1ec5m virus Corona nh\u01b0ng kh\u00f4ng tri\u1ec7u ch\u1ee9ng), v\u00ec v\u1eady b\u1ea1n ph\u1ea3i th\u1eadt c\u1ea9n th\u1eadn. Gi\u1ea3 s\u1eed ta c\u00f3 hai con tr\u1ecf <code>int *p</code> v\u00e0 <code>int *q</code>: - L\u1ec7nh <code>printf(\"%d\\n\", p)</code> d\u00f9 kh\u00f4ng g\u00e2y l\u1ed7i bi\u00ean d\u1ecbch nh\u01b0ng t\u1ea1o ra c\u1ea3nh b\u00e1o. \u0110\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c c\u1ea3nh b\u00e1o n\u00e0y, b\u1ea1n c\u1ea7n b\u1eadt ch\u1ebf \u0111\u1ed9 -O2, -Wall v\u00e0 -Wextra trong Codeblocks/Dev-Cpp. - <code>cout &lt;&lt; p</code> thay v\u00ec <code>cout &lt;&lt; *p</code>: L\u1ec7nh kh\u00f4ng g\u00e2y ra l\u1ed7i bi\u00ean d\u1ecbch hay c\u1ea3nh b\u00e1o. - <code>p &lt; q</code> thay v\u00ec <code>*p &lt; *q</code>: L\u1ec7nh kh\u00f4ng g\u00e2y ra l\u1ed7i bi\u00ean d\u1ecbch hay c\u1ea3nh b\u00e1o. - <code>p = q</code> thay v\u00ec <code>*p = *q</code> ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i: L\u1ec7nh kh\u00f4ng g\u00e2y ra l\u1ed7i bi\u00ean d\u1ecbch hay c\u1ea3nh b\u00e1o.</p>"},{"location":"languages/cpp/pointers/#khai-bao-sai-cach","title":"Khai b\u00e1o sai c\u00e1ch","text":"<p>\u0110\u1ec3 khai b\u00e1o c\u00e1c bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" c\u00f9ng m\u1ed9t ki\u1ec3u, thay v\u00ec b\u1ea1n khai b\u00e1o <code>int a; int b; int c</code> b\u1ea1n s\u1ebd g\u1ed9p l\u1ea1i th\u00e0nh <code>int a, b, c;</code>. V\u1edbi con tr\u1ecf, \u0111\u1ec3 c\u00f3 3 con tr\u1ecf tr\u1ecf v\u00e0o c\u00e1c bi\u1ebfn ki\u1ec3u <code>int</code>, b\u1ea1n c\u1ea7n khai b\u00e1o l\u00e0 <code>int *a, *b, *c</code> (c\u00f3 d\u1ea5u <code>*</code> tr\u01b0\u1edbc m\u1ed7i bi\u1ebfn), thay v\u00ec <code>int* a, b, c</code> ho\u1eb7c <code>int *a, b, c</code>. N\u1ebfu b\u1ea1n ch\u1ec9 c\u00f3 m\u1ed9t d\u1ea5u <code>*</code>, ch\u1ec9 bi\u1ebfn <code>a</code> l\u00e0 con tr\u1ecf (ki\u1ec3u <code>int*</code>), c\u00f2n c\u00e1c bi\u1ebfn <code>b</code> v\u00e0 <code>c</code> v\u1eabn l\u00e0 bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" ki\u1ec3u <code>int</code>. T\u1ea5t nhi\u00ean, b\u1ea1n s\u1ebd ph\u00e1t hi\u1ec7n l\u1ed7i n\u00e0y d\u1ec5 d\u00e0ng do tr\u00ecnh bi\u00ean d\u1ecbch s\u1ebd b\u00e1o l\u1ed7i. Nh\u01b0ng tr\u00ecnh bi\u00ean d\u1ecbch ch\u1ec9 b\u00e1o l\u1ed7i \u1edf d\u00f2ng b\u1ea1n g\u00e1n/s\u1eed d\u1ee5ng con tr\u1ecf, c\u00f2n d\u00f2ng khai b\u00e1o l\u00e0 ch\u1ed7 b\u1ea1n ph\u1ea3i s\u1eeda th\u00ec tr\u00ecnh bi\u00ean d\u1ecbch kh\u00f4ng bao gi\u1edd b\u00e1o l\u1ed7i \u1edf \u0111\u00e2y.</p> <p>B\u1edfi th\u1ebf, khi c\u1ea7n khai b\u00e1o nhi\u1ec1u con tr\u1ecf c\u00f9ng m\u1ed9t l\u00fac, b\u1ea1n ph\u1ea3i khai b\u00e1o l\u00e0 <code>int *a, *b, *c</code>. C\u00f2n khi ch\u1ec9 c\u00f3 m\u1ed9t con tr\u1ecf (l\u00fac khai b\u00e1o bi\u1ebfn ho\u1eb7c khai b\u00e1o tham s\u1ed1 c\u1ee7a h\u00e0m), b\u1ea1n n\u00ean vi\u1ebft l\u00e0 <code>int *a</code> thay v\u00ec <code>int* a</code>. Th\u1ef1c l\u00f2ng th\u00ec m\u00ecnh th\u00edch c\u00e1ch <code>int* a</code> h\u01a1n, v\u00e0 khi \u0111i l\u00e0m \u1edf Google m\u00ecnh nh\u1edb l\u00e0 m\u1ecdi ng\u01b0\u1eddi c\u0169ng vi\u1ebft th\u1ebf, b\u1edfi v\u00ec khi x\u00e9t <code>int*</code> l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u th\u00ec <code>int* a</code> l\u00e0 m\u1ed9t c\u00e1ch vi\u1ebft r\u1ea5t trong s\u00e1ng. Tuy nhi\u00ean m\u00ecnh kh\u00f4ng hi\u1ec3u sao C++ l\u1ea1i kh\u00f4ng hi\u1ec3u <code>int* a, b, c</code> l\u00e0 3 con tr\u1ecf, m\u00ecnh th\u1eadt s\u1ef1 th\u1ea5y h\u01a1i v\u00f4 l\u00fd \u1edf \u0111\u00e2y.</p>"},{"location":"languages/cpp/pointers/#con-tro-tro-lung-tung","title":"Con tr\u1ecf tr\u1ecf lung tung","text":"<p>L\u1ed7i n\u00e0y c\u00f3 tri\u1ec7u ch\u1ee9ng l\u00e0 vi\u1ec7c b\u1ea1n b\u1ecb run-time-error, do b\u1ea1n truy c\u1eadp v\u00e0o v\u00f9ng nh\u1edb (bi\u1ebfn \"th\u00f4ng th\u01b0\u1eddng\" \u0111\u01b0\u1ee3c tr\u1ecf t\u1edbi) c\u1ee7a m\u1ed9t con tr\u1ecf tr\u1ecf v\u00e0o n\u01a1i \"lung tung\", kh\u00f4ng x\u00e1c \u0111\u1ecbnh.</p> <p>\u0110\u00e2y l\u00e0 l\u1ed7i hay g\u1eb7p nh\u1ea5t, c\u00f3 ba l\u00fd do ch\u00ednh d\u1eabn \u0111\u1ebfn l\u1ed7i n\u00e0y: - Ch\u01b0a x\u00e9t tr\u01b0\u1eddng h\u1ee3p con tr\u1ecf hi\u1ec7n t\u1ea1i l\u00e0 con tr\u1ecf NULL. L\u1ed7i n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c n\u00f3i \u0111\u1ebfn \u1edf ph\u1ea7n tr\u00ean. \u0110\u1ec3 kh\u00e1c ph\u1ee5c, b\u1ea1n c\u1ea7n x\u00e9t c\u1ea9n th\u1eadn t\u1eebng tr\u01b0\u1eddng h\u1ee3p, khi g\u1ecdi v\u00e0o <code>*p</code> hay <code>p-&gt;</code>, b\u1ea1n c\u1ea7n ngh\u0129 xem li\u1ec7u <code>p</code> c\u00f3 th\u1ec3 l\u00e0 <code>NULL</code> kh\u00f4ng. N\u1ebfu c\u00f3, b\u1ea1n c\u1ea7n th\u00eam c\u00e1c l\u1ec7nh <code>if</code> (v\u00ed d\u1ee5, <code>if (p != NULL) p-&gt;push_back(1)</code>) hay ph\u00e9p to\u00e1n \u0111i\u1ec1u ki\u1ec7n (v\u00ed d\u1ee5, <code>cout &lt;&lt; (p == NULL ? 0 : *p)</code>). - Ch\u01b0a kh\u1edfi t\u1ea1o con tr\u1ecf tr\u01b0\u1edbc khi truy c\u1eadp. Ch\u00fa \u00fd, c\u00e1c con tr\u1ecf n\u1ebfu \u0111\u01b0\u1ee3c khai b\u00e1o l\u00e0 bi\u1ebfn c\u1ee5c b\u1ed9 (khai b\u00e1o trong h\u00e0m), n\u00f3 kh\u00f4ng t\u1ef1 \u0111\u1ed9ng kh\u1edfi t\u1ea1o l\u00e0 NULL. Do \u0111\u00f3, n\u1ebfu b\u1ea1n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n <code>p == NULL</code>, n\u00f3 sai, nh\u01b0ng khi truy c\u1eadp v\u00e0o <code>*p</code>, b\u1ea1n v\u1eabn b\u1ecb ch\u1ea1y sinh l\u1ed7i nh\u01b0 khi truy c\u1eadp v\u00e0o con tr\u1ecf NULL. L\u1eddi khuy\u00ean \u0111\u01b0a ra: Gi\u1ed1ng nh\u01b0 b\u1ea5t k\u1ef3 bi\u1ebfn c\u1ee5c b\u1ed9 n\u00e0o kh\u00e1c, b\u1ea1n ph\u1ea3i kh\u1edfi t\u1ea1o tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng. - Truy c\u1eadp sau khi <code>delete</code>: Khi b\u1ea1n x\u00f3a v\u00f9ng nh\u1edb c\u1ee7a m\u1ed9t con tr\u1ecf b\u1eb1ng <code>delete p</code> ho\u1eb7c <code>delete[] arr</code>, c\u00e1c v\u00f9ng nh\u1edb t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c con tr\u1ecf b\u1ecb x\u00f3a, nh\u01b0ng con tr\u1ecf kh\u00f4ng \u0111\u01b0\u1ee3c g\u00e1n l\u1ea1i th\u00e0nh NULL. Khi \u0111\u00f3, n\u1ebfu b\u1ea1n v\u00f4 t\u00ecnh truy c\u1eadp v\u00e0o <code>*p</code> b\u1ea1n v\u1eabn b\u1ecb ch\u1ea1y sinh l\u1ed7i, v\u00e0 ki\u1ec3m tra <code>p == NULL</code> kh\u00f4ng gi\u00fap b\u1ea1n tr\u00e1nh \u0111\u01b0\u1ee3c l\u1ed7i n\u00e0y.</p>"},{"location":"languages/cpp/pointers/#sizeof-khong-hoat-ong-voi-con-tro-va-mang-ong","title":"sizeof kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng v\u1edbi con tr\u1ecf v\u00e0 m\u1ea3ng \u0111\u1ed9ng.","text":"<p>C\u00e1c b\u1ea1n \u0111\u00e3 bi\u1ebft, ta c\u00f3 th\u1ec3 d\u00f9ng <code>memset</code> \u0111\u1ec3 kh\u1edfi t\u1ea1o m\u1ed9t m\u1ea3ng v\u1edbi c\u00fa ph\u00e1p th\u00f4ng th\u01b0\u1eddng: <code>memset(arr, ..., sizeof arr)</code>. \u0110i\u1ec1u n\u00e0y \u0111\u00fang v\u1edbi m\u1ea3ng t\u0129nh c\u00e1c b\u1ea1n hay d\u00f9ng, nh\u01b0ng v\u1edbi m\u1ea3ng \u0111\u1ed9ng \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1edfi thao t\u00e1c <code>new</code>, b\u1ea1n kh\u00f4ng th\u1ec3 d\u00f9ng <code>sizeof</code> m\u00e0 ph\u1ea3i t\u1ef1 truy\u1ec1n k\u00edch c\u1ee1 th\u1ef1c c\u1ee7a ch\u00fang.</p> <pre><code>int m = 100, n = 10000;\nint *int_array; int_array = new int[m];\nint *ll_array; ll_array = new long long[n];\n\n// INCORRECT\nmemset(int_array, 0, sizeof int_array);\nmemset(ll_array, 0, sizeof ll_array);\n\n\n// CORRECT\nmemset(int_array, 0, m * sizeof(int));\nmemset(ll_array, 0, n * sizeof(long long));\n</code></pre> <p>T\u01b0\u01a1ng t\u1ef1, n\u1ebfu m\u1ed9t m\u1ea3ng \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o m\u1ed9t h\u00e0m, k\u1ec3 c\u1ea3 n\u1ebfu m\u1ea3ng \u0111\u00f3 l\u00e0 m\u1ea3ng t\u0129nh, b\u1ea1n kh\u00f4ng th\u1ec3 kh\u1edfi t\u1ea1o theo c\u00e1ch th\u00f4ng th\u01b0\u1eddng.</p> <p><pre><code>## define MAX   100100\nint arr[MAX];\n\n// INCORRECT\nvoid do_something_funny(int arr[MAX]) { // \"int arr[MAX]\", \"int arr[]\" or \"int *arr\" are the same here\n   memset(arr, 0, sizeof arr);\n}\n\n// CORRECT\nvoid do_something_funny(int arr[MAX]) {\n   memset(arr, 0, MAX * sizeof(int));\n}\n</code></pre> D\u00f9 c\u00e1ch th\u1ee9 hai trong ph\u1ea7n tr\u00ean l\u00e0 ch\u00ednh x\u00e1c, m\u00ecnh khuy\u00ean c\u00e1c b\u1ea1n kh\u00f4ng n\u00ean d\u00f9ng. T\u1ed1t nh\u1ea5t l\u00e0 n\u1ebfu <code>memset</code> th\u00ec kh\u00f4ng n\u00ean truy\u1ec1n m\u1ea3ng v\u00e0o h\u00e0m</p>"},{"location":"languages/cpp/pointers/#cac-con-tro-tro-khong-ung-thu-can-tro","title":"C\u00e1c con tr\u1ecf tr\u1ecf kh\u00f4ng \u0111\u00fang th\u1ee9 c\u1ea7n tr\u1ecf.","text":"<p>C\u00e1c b\u1ea1n th\u1eed ngh\u0129 xem hai \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y kh\u00e1c nhau nh\u01b0 th\u1ebf n\u00e0o. Sau khi nh\u1eadn ra \u0111\u01b0\u1ee3c s\u1ef1 kh\u00e1c bi\u1ec7t, b\u1ea1n s\u1ebd c\u00f3 c\u00e1ch kh\u00e1c ph\u1ee5c cho ri\u00eang m\u00ecnh. <pre><code>vector&lt;int*&gt; v(10);\nfor (int i = 0; i &lt; 10; i++) v[i] = new int;\n</code></pre> v\u00e0 <pre><code>vector&lt;int*&gt; v(10, new int);\n</code></pre></p>"},{"location":"languages/cpp/pointers/#3-mot-so-ung-dung-cua-con-tro-trong-lap-trinh-thi-au","title":"3. M\u1ed9t s\u1ed1 \u1ee9ng d\u1ee5ng c\u1ee7a con tr\u1ecf trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u","text":"<p>Ph\u1ea7n n\u00e0y \u0111i\u1ec3m qua m\u1ed9t s\u1ed1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u v\u00e0 thu\u1eadt to\u00e1n m\u00e0 vi\u1ec7c d\u00f9ng con tr\u1ecf c\u00e0i \u0111\u1eb7t s\u1ebd h\u1eefu \u00edch. T\u1ea5t nhi\u00ean, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \"n\u00e9 tr\u00e1nh\" con tr\u1ecf b\u1eb1ng nhi\u1ec1u c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c; nh\u01b0ng b\u1ea1n s\u1ebd ph\u1ea3i tr\u1ea3 gi\u00e1 b\u1eb1ng m\u1ed9t \u0111o\u1ea1n code r\u1ea5t x\u1ea5u v\u00e0 l\u1eb1ng nh\u1eb1ng.</p>"},{"location":"languages/cpp/pointers/#a-cay-tien-to-trie","title":"a. C\u00e2y ti\u1ec1n t\u1ed1 (trie)","text":"<p>\u1ee8ng d\u1ee5ng ph\u1ed5 bi\u1ebfn nh\u1ea5t c\u1ee7a con tr\u1ecf l\u00e0 \u0111\u1ec3 bi\u1ec3u di\u1ec5n c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u d\u1ea1ng c\u00e2y. \u00dd t\u01b0\u1edfng chung l\u00e0 ta s\u1ebd vi\u1ebft m\u1ed9t <code>struct Node</code> \u0111\u1ec3 m\u00f4 t\u1ea3 m\u1ed9t n\u00fat tr\u00ean c\u00e2y. Khi ta v\u1ebd m\u1ed9t c\u00e2y l\u00ean gi\u1ea5y, ta th\u01b0\u1eddng m\u00f4 t\u1ea3 c\u00e1c quan h\u1ec7 cha con b\u1eb1ng c\u00e1ch v\u1ebd m\u1ed9t \u0111\u01b0\u1eddng c\u00f3 m\u0169i t\u00ean n\u1ed1i t\u1eeb cha xu\u1ed1ng con. N\u00f3i c\u00e1ch kh\u00e1c, m\u0169i t\u00ean n\u00e0y ch\u1ec9 vi\u1ec7c ch\u1ea3 \"tr\u1ecf\" v\u00e0o con. Vi\u1ec7c bi\u1ec3u di\u1ec5n c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u00e2y b\u1eb1ng con tr\u1ecf d\u1ef1a tr\u00ean \u00fd t\u01b0\u1edfng n\u00e0y: Trong <code>struct Node</code>, ta c\u00f3 c\u00e1c tr\u01b0\u1eddng \u0111\u1ec3 l\u01b0u c\u00e1c con tr\u1ecf <code>Node*</code> tr\u1ecf v\u00e0o c\u00e1c con.</p> <p>Gi\u1ea3 s\u1eed ta ch\u1ec9 l\u00e0m vi\u1ec7c tr\u00ean c\u00e1c x\u00e2u k\u00fd t\u1ef1 g\u1ed3m c\u00e1c ch\u1eef c\u00e1i latin in th\u01b0\u1eddng. Khi \u0111\u00f3, trong <code>struct Node</code> c\u1ea7n c\u00f3 m\u1ed9t m\u1ea3ng g\u1ed3m \\(26\\) ph\u1ea7n t\u1eed c\u00f3 ki\u1ec3u <code>Node *</code>, \u0111\u1ec3 l\u01b0u l\u1ea1i \\(26\\) con tr\u1ecf tr\u1ecf \u0111\u1ebfn \\(26\\) con c\u1ee7a m\u1ed9t n\u00fat \u1ee9ng v\u1edbi \\(26\\) k\u00fd t\u1ef1 'a' - 'z'.</p> <p>Ta x\u00e9t b\u00e0i to\u00e1n v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n: *Cho \\(n\\) x\u00e2u k\u00fd t\u1ef1 \\(s_1, s_2, \\ldots, s_n\\), t\u00ednh t\u1ed5ng \u0111\u1ed9 d\u00e0i c\u00e1c ti\u1ec1n t\u1ed1 ph\u00e2n bi\u1ec7t c\u1ee7a \\(n\\) x\u00e2u k\u00ed t\u1ef1 n\u00e0y.</p> <p>\u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c b\u00e0i n\u00e0y, \u0111\u1ea7u ti\u00ean ta s\u1ebd d\u1ef1ng c\u00e2y ti\u1ec1n t\u1ed1. Sau \u0111\u00f3, v\u1edbi m\u1ed7i n\u00fat ta s\u1ebd t\u00ednh hai gi\u00e1 tr\u1ecb: - \u0110\u1ed9 cao c\u1ee7a n\u00fat n\u00e0y - T\u1ed5ng \u0111\u1ed9 cao c\u1ee7a c\u00e1c n\u00fat n\u1eb1m trong c\u00e2y con c\u00f3 g\u1ed1c l\u00e0 n\u00fat n\u00e0y.</p> <p>\u0110o\u1ea1n code m\u1eabu: <pre><code>## define REP(i, n) for (int i = 0, _n = (n); i &lt; _n; i++)\n\nstruct Node {\n   Node *child[26];\n   long long high, totHigh;\n\n   Node() {\n      high = totHigh = 0;\n      REP(i, 26) child[i] = NULL;\n   }\n};\nNode *root;\n\nvoid addString(const string &amp;s) {\n   Node *p = root;\n   REP(i, s.size()) {\n      if (p-&gt;child[s[i] - 'a'] == NULL) p-&gt;child[s[i] - 'a'] = new Node();\n      p = p-&gt;child[s[i] - 'a'];\n      p-&gt;high = i + 1;\n   }\n}\n\nvoid dfs(Node *p) {\n   p-&gt;totHigh = p-&gt;high;\n   REP(i, 26) if (p-&gt;child[i] != NULL) {\n      dfs(p-&gt;child[i]);\n      p-&gt;totHigh += p-&gt;child[i]-&gt;totHigh;\n   }\n}\n\nint main(void) {\n   int n; cin &gt;&gt; n;\n   root = new Node();\n\n   REP(love, n) {\n      string s; cin &gt;&gt; s; addString(s);\n   }\n\n   root-&gt;dfs();\n   cout &lt;&lt; root-&gt;totHigh &lt;&lt; endl;\n}\n</code></pre></p> <p>\u0110o\u1ea1n code tr\u00ean c\u00f3 ba ph\u1ea7n ch\u00ednh: - Ph\u1ea7n m\u00f4 t\u1ea3 <code>struct Node</code>: \u1ede \u0111\u00e2y, ta th\u1ea5y trong Node l\u01b0u l\u1ea1i m\u1ed9t m\u1ea3ng <code>Node *child[26]</code> l\u00e0 m\u1ea3ng con tr\u1ecf tr\u1ecf v\u00e0o c\u00e1c con nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean. Ngo\u00e0i ra, ta c\u00f2n d\u00f9ng th\u00eam bi\u1ebfn <code>high</code> \u0111\u1ec3 l\u01b0u l\u1ea1i \u0111\u1ed9 cao c\u1ee7a c\u00e2y v\u00e0 <code>totHigh</code> \u0111\u1ec3 l\u01b0u l\u1ea1i t\u1ed5ng \u0111\u1ed9 cao c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c n\u00fat trong c\u00e2y con. \u0110o\u1ea1n code trong <code>Node() { ... }</code> \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 constructor, gi\u00fap ta kh\u1edfi t\u1ea1o m\u1ea3ng child b\u1eb1ng NULL. - H\u00e0m <code>addString(string s)</code>: D\u00f9ng \u0111\u1ec3 th\u00eam m\u1ed9t x\u00e2u k\u00fd t\u1ef1 v\u00e0o c\u00e2y trie. Trong h\u00e0m n\u00e0y ta c\u00f3 m\u1ed9t con tr\u1ecf <code>Node *p</code>. Ban \u0111\u1ea7u con tr\u1ecf tr\u1ecf v\u00e0o g\u1ed1c c\u00e2y. Ta l\u1ea7n l\u01b0\u1ee3t duy\u1ec7t qua c\u00e1c k\u00ed t\u1ef1 c\u1ee7a x\u00e2u \\(s\\), m\u1ed7i k\u00ed t\u1ef1 duy\u1ec7t qua ta \"\u0111i\" xu\u1ed1ng m\u1ed9t b\u01b0\u1edbc tr\u00ean c\u00e2y, duy tr\u00ec sao cho con tr\u1ecf <code>p</code> lu\u00f4n tr\u1ecf v\u00e0o n\u00fat \u1ee9ng v\u1edbi ti\u1ec1n t\u1ed1 k\u1ebft th\u00fac b\u1edfi k\u00ed t\u1ef1 \u0111ang x\u00e9t. L\u1ec7nh <code>if (p-&gt;child[...] == NULL) p-&gt;child[...] = new Node()</code> c\u00f3 ngh\u0129a l\u00e0 n\u1ebfu n\u00fat c\u1ea7n \u0111i t\u1edbi ch\u01b0a t\u1ed3n t\u1ea1i tr\u00ean c\u00e2y, ta ph\u1ea3i t\u1ea1o ra n\u00fat \u0111\u00f3. L\u1ec7nh <code>p = p-&gt;child[...]</code> ch\u00ednh l\u00e0 ta \u0111\u00e3 \"nh\u1ea3y\" m\u1ed9t b\u01b0\u1edbc xu\u1ed1ng l\u1edbp x\u00e2u h\u01a1n c\u1ee7a c\u00e2y. - H\u00e0m <code>dfs</code> l\u00e0m qu\u00e1 tr\u00ecnh DFS v\u00e0 t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb. H\u00e0m n\u00e0y c\u00f3 logic gi\u1ed1ng h\u1ec7t DFS tr\u00ean c\u00e2y b\u00ecnh th\u01b0\u1eddng. Ch\u1ec9 kh\u00e1c r\u1eb1ng, m\u1ecdi khi b\u1ea1n \u0111\u00e1nh s\u1ed1 c\u00e1c n\u00fat t\u1eeb \\(1\\) t\u1edbi \\(n\\), do \u0111\u00f3 ta c\u00f3 h\u00e0m <code>void dfs(int u)</code>. C\u00f2n \u1edf \u0111\u00e2y ta kh\u00f4ng \u0111\u00e1nh s\u1ed1 m\u00e0 d\u00f9ng con tr\u1ecf, do \u0111\u00f3 ta d\u00f9ng <code>void dfs(Node *p)</code>.</p> <p>C\u00e1c l\u1ed7i hay m\u1eafc khi c\u00e0i \u0111\u1eb7t trie: - Thi\u1ebfu constructor trong <code>struct Node</code>: N\u1ebfu kh\u00f4ng c\u00f3 constructor kh\u1edfi t\u1ea1o m\u1ea3ng <code>Node *child[26]</code> b\u1eb1ng NULL, c\u00e1c con tr\u1ecf kh\u00f4ng mang gi\u00e1 tr\u1ecb NULL v\u00e0 do \u0111\u00f3 b\u1ea1n s\u1ebd b\u1ecb run-time error. - Qu\u00ean kh\u1edfi t\u1ea1o g\u1ed1c c\u00e2y <code>root = new Node()</code> (d\u00f2ng th\u1ee9 2 \u1edf h\u00e0m <code>main</code>). N\u1ebfu thi\u1ebfu d\u00f2ng n\u00e0y, b\u1ea1n ch\u1eafc ch\u1eafn b\u1ecb run-time error do c\u00e2y c\u1ee7a b\u1ea1n ch\u01b0a c\u00f3 g\u1ed1c th\u00ec ch\u01b0a th\u1ec3 th\u00eam c\u00e1c n\u00fat kh\u00e1c \u0111\u01b0\u1ee3c. - Vi\u1ebft sai h\u00e0m <code>addString</code>. S\u1ebd c\u00f3 nhi\u1ec1u b\u1ea1n khi m\u1edbi code s\u1ebd b\u1ecb sai nhu d\u01b0\u1edbi \u0111\u00e2y. C\u00e1c b\u1ea1n th\u1eed \u0111o\u00e1n xem l\u1ed7i sai l\u00e0 g\u00ec:</p> <pre><code>void addString(const string &amp;s) {\n   Node *p = root;\n   REP(i, s.size()) {      \n      p = p-&gt;child[s[i] - 'a'];\n      if (p == NULL) p = new Node();\n      p-&gt;high = i + 1;\n   }\n}\n</code></pre> <p>M\u1ed9t s\u1ed1 b\u00e0i t\u1eadp d\u00f9ng trie cho c\u00e1c b\u1ea1n luy\u1ec7n t\u1eadp: - Trie Sharding, Google Code Jam 2014 round 2, problem D. Xem code t\u1ea1i \u0111\u00e2y - Short Code, CF 476 div.2, problem E. Xem code t\u1ea1i \u0111\u00e2y - Lexicographical Disorder, AtCoder - CODE FESTIVAL 2016 round B, problem E. Xem code t\u1ea1i \u0111\u00e2y</p>"},{"location":"languages/cpp/pointers/#b-ky-thuat-gop-set-tren-cay","title":"b. K\u1ef9 thu\u1eadt g\u1ed9p set tr\u00ean c\u00e2y","text":""},{"location":"languages/cpp/pointers/#c-persistent-segment-tree","title":"c. Persistent Segment Tree","text":"<p>S\u1eed d\u1ee5ng con tr\u1ecf \u0111\u1ec3 c\u00e0i \u0111\u1eb7t Persistent Segment Tree kh\u00e1 ph\u1ed5 bi\u1ebfn, do \u0111\u00e2y l\u00e0 m\u1ed9t lo\u1ea1i c\u00e2y nh\u1ecb ph\u00e2n m\u00e0 b\u1ea1n c\u1ea7n c\u00e0i \u0111\u1eb7t nhi\u1ec1u \"phi\u00ean b\u1ea3n\" kh\u00e1c nhau. Do vi\u1ec7c c\u00e0i \u0111\u1eb7t r\u1ea5t ph\u1ee9c t\u1ea1p, m\u00ecnh ch\u1ec9 cho c\u00e1c b\u1ea1n xem code ch\u1ee9 kh\u00f4ng th\u1ec3 ph\u00e2n t\u00edch chi ti\u1ebft \u0111\u01b0\u1ee3c. Khi \u0111\u1ecdc code c\u1ee7a m\u00ecnh, b\u1ea1n ch\u1ec9 c\u1ea7n \u0111\u1ecdc ph\u1ea7n <code>class PersistentSegmentTree</code>. C\u00e1c ph\u1ea7n c\u00f2n l\u1ea1i kh\u00f4ng li\u00ean quan tr\u1ef1c ti\u1ebfp \u0111\u1ebfn CTDL, ch\u1ec9 l\u00e0 \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n.</p> <p>B\u00e0i t\u1eadp li\u00ean quan: - Persistent Bookcase, CF 368 Div.2, problem D. Xem code t\u1ea1i \u0111\u00e2y - Lazy Learner, The 2018 ICPC Hanoi Regional Contest, problem L.</p>"},{"location":"languages/cpp/pointers/#d-balanced-binary-search-tree-red-black-tree-avl-splay-tree","title":"d. Balanced Binary Search Tree (Red-black Tree, AVL, Splay Tree...)","text":""},{"location":"languages/cpp/string/","title":"X\u00e2u trong C++","text":"<p>B\u00e0i vi\u1ebft s\u01b0u t\u1ea7m tr\u00ean m\u1ea1ng.</p>"},{"location":"languages/cpp/string/#0-kieu-chuoi-cua-c-va-han-che","title":"0. Ki\u1ec3u chu\u1ed7i c\u1ee7a C v\u00e0 h\u1ea1n ch\u1ebf","text":"<p>Khi m\u1edbi h\u1ecdc C, ch\u1eafc c\u00e1c b\u1ea1n \u0111\u1ec1u r\u1ea5t b\u1ed1i r\u1ed1i khi l\u00e0m vi\u1ec7c v\u1edbi x\u00e2u k\u00fd t\u1ef1, vi\u1ec7c s\u1eed d\u1ee5ng con tr\u1ecf l\u01b0u x\u00e2u k\u00fd t\u1ef1 r\u1ea5t ph\u1ee9c t\u1ea1p, d\u1ec5 g\u00e2y l\u1ed7i khi\u1ebfn nhi\u1ec1u ng\u01b0\u1eddi cho r\u1eb1ng n\u00f3 kh\u00f4ng b\u1eb1ng x\u00e2u k\u00fd t\u1ef1 trong Pascal.</p> <p>C\u00e1c ch\u01b0\u01a1ng tr\u00ecnh C++ c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng chu\u1ed7i theo c\u00e1ch th\u1ee9c c\u0169 c\u1ee7a Ng\u00f4n ng\u1eef C (trong b\u00e0i vi\u1ebft n\u00e0y g\u1ecdi l\u00e0 C-String): m\u1ea3ng c\u00e1c k\u00fd t\u1ef1 k\u1ebft th\u00fac b\u1edfi k\u00fd t\u1ef1 m\u00e3 ASCII l\u00e0 0 (k\u00fd t\u1ef1 <code>\\0</code>) c\u00f9ng v\u1edbi c\u00e1c h\u00e0m th\u01b0 vi\u1ec7n khai b\u00e1o trong <code>&lt;string.h&gt;</code>. C\u00f3 nhi\u1ec1u b\u1ea5t ti\u1ec7n khi d\u00f9ng theo c\u00e1ch th\u1ee9c n\u00e0y:</p> <ul> <li>Ng\u01b0\u1eddi l\u1eadp tr\u00ecnh ph\u1ea3i ch\u1ee7 \u0111\u1ed9ng ki\u1ec3m so\u00e1t b\u1ed9 nh\u1edb c\u1ea5p ph\u00e1t cho chu\u1ed7i k\u00fd t\u1ef1. N\u00f3i chung l\u00e0 ph\u1ea3i am hi\u1ec3u v\u00e0 r\u1ea5t th\u00f4ng th\u1ea1o v\u1ec1 k\u1ef9 thu\u1eadt d\u00f9ng b\u1ed9 nh\u1edb v\u00e0 con tr\u1ecf th\u00ec ch\u01b0\u01a1ng tr\u00ecnh m\u1edbi tr\u00e1nh \u0111\u01b0\u1ee3c c\u00e1c l\u1ed7i v\u1ec1 k\u1ef9 thu\u1eadt;</li> <li>Kh\u00f4ng th\u1ec3 g\u00e1n gi\u00e1 tr\u1ecb hay s\u1eed d\u1ee5ng ph\u00e9p to\u00e1n <code>+</code> (gh\u00e9p chu\u1ed7i) v\u00e0 c\u00e1c ph\u00e9p to\u00e1n so s\u00e1nh nh\u01b0: <code>&gt;</code> (l\u1edbn h\u01a1n), <code>&lt;</code> (nh\u1ecf h\u01a1n),... m\u00e0 ph\u1ea3i g\u1ecdi c\u00e1c h\u00e0m th\u01b0 vi\u1ec7n trong <code>&lt;string.h&gt;</code>;</li> <li>N\u1ebfu d\u00f9ng k\u1ef9 thu\u1eadt c\u1ea5p ph\u00e1t \u0111\u1ed9ng th\u00ec ph\u1ea3i qu\u1ea3n l\u00fd vi\u1ec7c c\u1ea5p th\u00eam b\u1ed9 nh\u1edb khi chu\u1ed7i d\u00e3n ra (ch\u1eb3ng h\u1ea1n do gh\u00e9p chu\u1ed7i) v\u00e0 ph\u1ea3i h\u1ee7y b\u1ed9 nh\u1edb (khi kh\u00f4ng d\u00f9ng n\u1eefa) \u0111\u1ec3 tr\u00e1nh vi\u1ec7c c\u1ea1n ki\u1ec7t b\u1ed9 nh\u1edb c\u1ee7a m\u00e1y t\u00ednh trong tr\u01b0\u1eddng h\u1ee3p c\u00f3 nhi\u1ec1u ch\u01b0\u01a1ng tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng \u0111\u1ed3ng th\u1eddi.</li> </ul>"},{"location":"languages/cpp/string/#1-kieu-chuoi-string-trong-thu-vien-stl-cua-c","title":"1. Ki\u1ec3u chu\u1ed7i string trong th\u01b0 vi\u1ec7n STL c\u1ee7a C++","text":"<p>Th\u01b0 vi\u1ec7n chu\u1ea9n STL (Standard Template Library) cung c\u1ea5p ki\u1ec3u <code>string</code> (x\u00e2u k\u00fd t\u1ef1), gi\u00fap c\u00e1c b\u1ea1n tr\u00e1nh kh\u1ecfi ho\u00e0n to\u00e0n c\u00e1c phi\u1ec1n ph\u1ee9c n\u00eau tr\u00ean.C\u00e1c ch\u1ec9 th\u1ecb <code>#include</code> c\u1ea7n khai b\u00e1o \u0111\u1ec3 s\u1eed d\u1ee5ng string:</p> <pre><code>## include &lt;string&gt;\nusing std::string;\n//using namespace std;\n</code></pre> <p>N\u1ebfu b\u1ea1n mu\u1ed1n t\u1eadn d\u1ee5ng c\u00e1c h\u00e0m c\u1ee7a C-String, c\u1ea7n chuy\u1ec3n \u0111\u1ed5i gi\u1eefa 2 ki\u1ec3u d\u1eef li\u1ec7u n\u00e0y:</p> <ul> <li>Chuy\u1ec3n t\u1eeb <code>string</code> sang C-String:</li> </ul> <pre><code>string s;\ns.c_str();\n</code></pre> <ul> <li>Chuy\u1ec3n t\u1eeb C-String sang <code>string</code>:</li> </ul> <pre><code>char* s_old = \"ABC\";\nstring s(s_old);\n</code></pre>"},{"location":"languages/cpp/string/#2-cac-phuong-thuc-phep-toan-tien-ich-cua-kieu-string","title":"2. C\u00e1c ph\u01b0\u01a1ng th\u1ee9c, ph\u00e9p to\u00e1n ti\u1ec7n \u00edch c\u1ee7a ki\u1ec3u string","text":"<p>Ki\u1ec3u <code>string</code> c\u1ee7a STL h\u1ed7 tr\u1ee3 c\u00e1c nh\u00f3m ph\u01b0\u01a1ng th\u1ee9c v\u00e0 ph\u00e9p to\u00e1n ti\u1ec7n \u00edch sau \u0111\u00e2y.</p>"},{"location":"languages/cpp/string/#a-cac-phep-toan-va-phuong-thuc-co-ban","title":"a) C\u00e1c ph\u00e9p to\u00e1n v\u00e0 ph\u01b0\u01a1ng th\u1ee9c c\u01a1 b\u1ea3n","text":"<ul> <li>C\u00e1c to\u00e1n t\u1eed <code>+</code>, <code>+=</code> d\u00f9ng \u0111\u1ec3 gh\u00e9p hai chu\u1ed7i v\u00e0 c\u0169ng \u0111\u1ec3 gh\u00e9p m\u1ed9t k\u00fd t\u1ef1 v\u00e0o chu\u1ed7i;</li> <li>C\u00e1c ph\u00e9p so s\u00e1nh theo th\u1ee9 t\u1ef1 t\u1eeb \u0111i\u1ec3n: <code>==</code> (b\u1eb1ng nhau), <code>!=</code> (kh\u00e1c nhau), <code>&gt;</code> (l\u1edbn h\u01a1n), <code>&gt;=</code> (l\u1edbn h\u01a1n hay b\u1eb1ng), <code>&lt;</code> (nh\u1ecf h\u01a1n), <code>&lt;=</code> (nh\u1ecf h\u01a1n hay b\u1eb1ng);</li> <li>H\u00e0m <code>length()</code> v\u00e0 ph\u00e9p l\u1ea5y ch\u1ec9 s\u1ed1 <code>[]</code> \u0111\u1ec3 duy\u1ec7t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i: n\u1ebfu <code>s</code> l\u00e0 bi\u1ebfn ki\u1ec3u <code>string</code> th\u00ec <code>s[i]</code> l\u00e0 k\u00fd t\u1ef1 th\u1ee9 <code>i</code> c\u1ee7a <code>s</code> v\u1edbi \\(0 \\le i &lt; s.length()\\);</li> <li> <p>Ph\u00e9p g\u00e1n <code>=</code> d\u00f9ng \u0111\u1ec3 g\u00e1n bi\u1ebfn ki\u1ec3u <code>string</code> b\u1eb1ng m\u1ed9t chu\u1ed7i, ho\u1eb7c b\u1eb1ng <code>string</code> kh\u00e1c, ch\u1eb3ng h\u1ea1n: <code>string s=\"ABCDEF\"</code>; hay <code>s1=s2</code>; m\u00e0 kh\u00f4ng c\u1ea7n copy x\u00e2u.</p> </li> <li> <p>Nh\u1eefng constructor th\u01b0\u1eddng s\u1eed d\u1ee5ng nh\u1ea5t:</p> </li> </ul> <pre><code>string();\nstring(const char *str);    // char* l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u x\u00e2u c\u1ee7a C\nstring(const string &amp; str);\n</code></pre> <ul> <li>C\u00f3 th\u1ec3 d\u00f9ng to\u00e1n t\u1eed <code>&lt;&lt;</code> v\u1edbi <code>cout</code> \u0111\u1ec3 xu\u1ea5t m\u1ed9t chu\u1ed7i ra m\u00e0n h\u00ecnh ho\u1eb7c d\u00f9ng to\u00e1n t\u1eed <code>&gt;&gt;</code> v\u1edbi <code>cin</code> \u0111\u1ec3 nh\u1eadp m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1 \u0111\u1ebfn khi g\u1eb7p m\u1ed9t kho\u1ea3ng tr\u1ed1ng th\u00ec d\u1eebng.</li> </ul> <pre><code>char st[]=\"ABCDEF\";\nstring s;\ns=\"XYZ\";\ncout &lt;&lt; s &lt;&lt; endl;\ns=st;\ncout &lt;&lt; s.length() &lt;&lt; \" : \" &lt;&lt; s &lt;&lt; endl;\n</code></pre> <ul> <li>M\u1ed9t v\u1ea5n \u0111\u1ec1 th\u01b0\u1eddng n\u1ea3y sinh trong c\u00e1c \u1ee9ng d\u1ee5ng c\u00f3 s\u1eed d\u1ee5ng C-string: m\u1ed9t C-String ch\u01b0a kh\u1edfi t\u1ea1o c\u1ea7n \u0111\u01b0\u1ee3c g\u00e1n NULL. Tuy nhi\u00ean, r\u1ea5t nhi\u1ec1u h\u00e0m th\u01b0 vi\u1ec7n c\u1ee7a C-String s\u1ebd g\u1eb7p s\u1ef1 c\u1ed1 trong th\u1eddi gian ch\u1ea1y khi g\u1eb7p \u0111\u1ed1i t\u01b0\u1ee3ng C-String l\u00e0 NULL. Ch\u1eb3ng h\u1ea1n, l\u1ec7nh</li> </ul> <pre><code>char* x = NULL;\ncout &lt;&lt; strlen(x);\n</code></pre> <p>\u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 tr\u00ecnh bi\u00ean d\u1ecbch ch\u1ea5p nh\u1eadn, nh\u01b0ng v\u1edbi nhi\u1ec1u hi\u1ec7n th\u1ef1c kh\u00e1c c\u1ee7a th\u01b0 vi\u1ec7n C-String, th\u00ec g\u1eb7p l\u1ed7i trong th\u1eddi gian ch\u1ea1y. string kh\u00f4ng g\u1eb7p v\u1ea5n \u0111\u1ec1 n\u00e0y, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 cho 1 x\u00e2u l\u00e0 r\u1ed7ng m\u00e0 kh\u00f4ng g\u1eb7p b\u1ea5t c\u1ee9 l\u1ed7i n\u00e0o: string s=\"\";</p> <p>String th\u1ef1c ch\u1ea5t l\u00e0 m\u1ed9t <code>vector&lt;char&gt;</code> c\u00f3 b\u1ed5 sung th\u00eam m\u1ed9t s\u1ed1 h\u00e0m v\u00e0 thu\u1ed9c t\u00ednh, do \u0111\u00f3, n\u00f3 c\u00f3 to\u00e0n b\u1ed9 c\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a 1 vector, nh\u01b0 h\u00e0m <code>size()</code>, <code>push_back()</code>, to\u00e1n t\u1eed <code>[]</code>, ...</p> <ul> <li>C\u00e1c h\u00e0m t\u1eeb <code>vector</code>:</li> <li><code>v.size()</code>: S\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed</li> <li><code>v.empty()</code>: Tr\u1ea3 v\u1ec1 1 n\u1ebfu chu\u1ed7i r\u1ed7ng, 0 n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i.</li> <li><code>v.max_size()</code>: Tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed t\u1ed1i \u0111a \u0111\u00e3 \u0111\u01b0\u1ee3c c\u1ea5p ph\u00e1t</li> <li><code>v1 == v2</code>: Tr\u1ea3 v\u1ec1 1 n\u1ebfu hai chu\u1ed7i gi\u1ed1ng nhau</li> <li><code>v1 != v2</code>: Tr\u1ea3 v\u1ec1 1 n\u1ebfu hai chu\u1ed7i kh\u00e1c nhau</li> <li><code>v.begin()</code>: Tr\u1ea3 v\u1ec1 iterator \u0111\u1ea7u ti\u00ean c\u1ee7a chu\u1ed7i</li> <li><code>v.end()</code>: Tr\u1ea3 v\u1ec1 iterator cu\u1ed1i c\u00f9ng c\u1ee7a chu\u1ed7i (tr\u1ecf v\u00e0o sau k\u00ed t\u1ef1 cu\u1ed1i c\u00f9ng)</li> <li><code>v.front()</code>: Tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean c\u1ee7a chu\u1ed7i</li> <li><code>v.back()</code>: Tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng c\u1ee7a chu\u1ed7i</li> <li><code>v1.swap(v2)</code>: Ho\u00e1n \u0111\u1ed5i 2 chu\u1ed7i v\u1edbi nhau (gi\u1ed1ng vi\u1ec7c ho\u00e1n \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a 2 bi\u1ebfn)</li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;conio.h&gt;\n#include &lt;string&gt;\nusing namespace std;\nint main()\n{\n    string s = \"Hello string\"; // Khai b\u00e1o bi\u1ebfn ki\u1ec3u string\n    cout &lt;&lt; \"Noi dung string: \" &lt;&lt; s &lt;&lt; endl; // In n\u00f4i dung string ra m\u00e0n h\u00ecnh\n    cout &lt;&lt; \"Chieu dai cua string: \" &lt;&lt; s.size() &lt;&lt; endl;\n    // Chi\u1ec1u d\u00e0i\n    cout &lt;&lt; \"Ky tu 0: \" &lt;&lt; s[0] &lt;&lt; endl; // In k\u00fd t\u1ef1 \u0111\u1ea7u ti\u00ean c\u1ee7a x\u00e2u\n    cout &lt;&lt; \"Ky tu 1: \" &lt;&lt; s[1] &lt;&lt; endl; // In k\u00fd t\u1ef1 th\u1ee9 2\n    cout &lt;&lt; \"Ky tu 2: \" &lt;&lt; s[2] &lt;&lt; endl; // In k\u00fd t\u1ef1 th\u1ee9 3\n    getchar();\n    return 0;\n}\n</code></pre> <ul> <li>Nh\u1eadp m\u1ed9t <code>string</code> tr\u00ean 1 d\u00f2ng (ch\u00fa \u00fd <code>cin</code> s\u1ebd ch\u1ec9 \u0111\u1ecdc \u0111\u1ebfn d\u1ea5u c\u00e1ch ho\u1eb7c xu\u1ed1ng d\u00f2ng \u0111\u1ea7u ti\u00ean):   <code>istream&amp; getline ( istream&amp; in, string&amp; str, char delimiter = \u2018\\n\u2019);</code></li> </ul> <p>\u0110\u1ecdc 1 d\u00f2ng v\u0103n b\u1ea3n t\u1eeb <code>istream in</code> (c\u00f3 th\u1ec3 l\u00e0 file hay \u0111\u1ed1i t\u01b0\u1ee3ng chu\u1ea9n cin) t\u1eebng k\u00fd t\u1ef1 \u0111\u1ebfn khi k\u00fd t\u1ef1 delimiter \u0111\u01b0\u1ee3c nh\u1eadp v\u00e0o (m\u1eb7c \u0111\u1ecbnh l\u00e0 <code>\\n</code>)</p> <pre><code>// getline with strings\n#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\nint main ()\n{\n    string str;\n    short age;\n    cout &lt;&lt; \"Please enter full name and age\"&lt;&lt; endl;\n    getline( cin, str) &gt;&gt; age;\n    cout &lt;&lt; \"Thank you \" &lt;&lt; str &lt;&lt; \"!\\n\";\n    return 0;\n}\n</code></pre>"},{"location":"languages/cpp/string/#b-cac-phuong-thuc-chen-xoa-lay-chuoi-con","title":"b) C\u00e1c ph\u01b0\u01a1ng th\u1ee9c ch\u00e8n, x\u00f3a, l\u1ea5y chu\u1ed7i con:","text":"<ul> <li>Ph\u01b0\u01a1ng th\u1ee9c <code>substr(int pos, int nchar)</code> tr\u00edch ra chu\u1ed7i con c\u1ee7a m\u1ed9t chu\u1ed7i cho tr\u01b0\u1edbc, v\u00ed d\u1ee5 <code>str.substr(2,4)</code> tr\u1ea3 v\u1ec1 chu\u1ed7i con g\u1ed3m 4 k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i <code>str</code> k\u1ec3 t\u1eeb k\u00fd t\u1ef1 \u1edf v\u1ecb tr\u00ed th\u1ee9 2 (k\u00fd t\u1ef1 \u0111\u1ea7u ti\u00ean c\u1ee7a chu\u1ed7i \u1edf v\u1ecb tr\u00ed 0).</li> </ul> <pre><code>//get substring\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;conio.h&gt;\nusing namespace std;\nint main ()\n{\n    string s=\"ConCho chay qua rao\";\n    cout &lt;&lt; s.substr(2,4) &lt;&lt; endl;\n    // cout &lt;&lt; new string(str.begin()+2, str.begin()+2+4);\n    getchar();\n    return 0;\n}\n</code></pre> <ul> <li>Ph\u01b0\u01a1ng th\u1ee9c <code>insert()</code> ch\u00e8n th\u00eam k\u00fd t\u1ef1 hay chu\u1ed7i v\u00e0o m\u1ed9t v\u1ecb tr\u00ed n\u00e0o \u0111\u00f3 c\u1ee7a chu\u1ed7i <code>str</code> cho tr\u01b0\u1edbc. C\u00f3 nhi\u1ec1u c\u00e1ch d\u00f9ng ph\u01b0\u01a1ng th\u1ee9c n\u00e0y:</li> <li><code>str.insert(int pos, char* s)</code>; ch\u00e8n <code>s</code> (m\u1ea3ng k\u00fd t\u1ef1 k\u1ebft th\u00fac <code>\\0</code>) v\u00e0o v\u1ecb tr\u00ed <code>pos</code> c\u1ee7a <code>str</code>;</li> <li><code>str.insert(int pos, string s)</code>; ch\u00e8n chu\u1ed7i <code>s</code> (ki\u1ec3u <code>string</code>) v\u00e0o v\u1ecb tr\u00ed <code>pos</code> c\u1ee7a chu\u1ed7i <code>str</code>;</li> <li><code>str.insert(int pos, int n, int ch)</code>; ch\u00e8n <code>n</code> l\u1ea7n k\u00fd t\u1ef1 <code>ch</code> v\u00e0o v\u1ecb tr\u00ed <code>pos</code> c\u1ee7a chu\u1ed7i <code>str</code>;</li> </ul> <pre><code>// inserting into a string\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;conio.h&gt;\nusing namespace std;\nint main ()\n{\n    string str=\"day la .. xau thu\";\n    string istr = \"them\";\n    str.insert(8, istr);\n    cout &lt;&lt; str &lt;&lt; endl;\n    getchar();\n    return 0;\n}\n</code></pre> <ul> <li>Ph\u01b0\u01a1ng th\u1ee9c <code>str.erase(int pos, int n)</code> x\u00f3a <code>n</code> k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i <code>str</code> k\u1ec3 t\u1eeb v\u1ecb tr\u00ed <code>pos</code>; n\u1ebfu kh\u00f4ng quy \u0111\u1ecbnh gi\u00e1 tr\u1ecb <code>n</code> th\u00ec t\u1ea5t c\u1ea3 c\u00e1c k\u00fd t\u1ef1 c\u1ee7a <code>str</code> t\u1eeb v\u1ecb tr\u00ed <code>pos</code> tr\u1edf \u0111i s\u1ebd b\u1ecb x\u00f3a</li> </ul> <pre><code>// erase from a string\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;conio.h&gt;\nusing namespace std;\nint main ()\n{\n    string str=\"day cung la xau thu\";\n    str.erase(0, 3); // \" cung la xau thu\"\n    cout &lt;&lt; str &lt;&lt; endl;\n    str.erase(6, 2);\n    cout &lt;&lt; str &lt;&lt; endl; // \" cung xau thu\"\n    getchar();\n    return 0;\n}\n</code></pre>"},{"location":"languages/cpp/string/#c-so-sanh","title":"c) So s\u00e1nh","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u01a1n gi\u1ea3n l\u00e0 s\u1eed d\u1ee5ng nh\u1eefng to\u00e1n t\u1eed quan h\u1ec7 (<code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;=</code>) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a s\u1eb5n. Tuy nhi\u00ean, n\u1ebfu mu\u1ed1n so s\u00e1nh m\u1ed9t ph\u1ea7n c\u1ee7a m\u1ed9t chu\u1ed7i th\u00ec s\u1ebd c\u1ea7n s\u1eed d\u1ee5ng ph\u01b0\u01a1ng th\u1ee9c <code>compare()</code>:</p> <pre><code>int compare ( const string&amp; str ) const;\nint compare ( const char* s ) const;\nint compare ( size_t pos1, size_t n1, const string&amp; str ) const;\nint compare ( size_t pos1, size_t n1, const char* s) const;\nint compare ( size_t pos1, size_t n1, const string&amp; str, size_t pos2, size_t n2 ) const;\nint compare ( size_t pos1, size_t n1, const char* s, size_t n2) const;\n</code></pre> <p>H\u00e0m tr\u1ea3 v\u1ec1 0 khi hai chu\u1ed7i b\u1eb1ng nhau v\u00e0 l\u1edbn h\u01a1n ho\u1eb7c nh\u1ecf h\u01a1n 0 cho tr\u01b0\u1eddng h\u1ee3p kh\u00e1c V\u00ed d\u1ee5:</p> <pre><code>// comparing apples with apples\n## include &lt;iostream&gt;\n## include &lt;string&gt;\nusing namespace std;\nint main ()\n{\n    string str1 (\"green apple\");\n    string str2 (\"red apple\");\n    if (str1.compare(str2) != 0)\n    cout &lt;&lt; str1 &lt;&lt; \" is not \" &lt;&lt; str2 &lt;&lt; \"\\n\";\n    if (str1.compare(6,5,\"apple\") == 0)\n    cout &lt;&lt; \"still, \" &lt;&lt; str1 &lt;&lt; \" is an apple\\n\";\n    if (str2.compare(str2.size()-5,5,\"apple\") == 0)\n    cout &lt;&lt; \"and \" &lt;&lt; str2 &lt;&lt; \" is also an apple\\n\";\n    if (str1.compare(6,5,str2,4,5) == 0)\n    cout &lt;&lt; \"therefore, both are apples\\n\";\n    return 0;\n}\n</code></pre>"},{"location":"languages/cpp/string/#d-cac-phuong-thuc-tim-kiem-va-thay-the","title":"d) C\u00e1c ph\u01b0\u01a1ng th\u1ee9c t\u00ecm ki\u1ebfm v\u00e0 thay th\u1ebf","text":"<ul> <li>Ph\u01b0\u01a1ng th\u1ee9c <code>find()</code> t\u00ecm ki\u1ebfm xem m\u1ed9t k\u00fd t\u1ef1 hay m\u1ed9t chu\u1ed7i n\u00e0o \u0111\u00f3 c\u00f3 xu\u1ea5t hi\u1ec7n trong m\u1ed9t chu\u1ed7i <code>str</code> cho tr\u01b0\u1edbc hay kh\u00f4ng. C\u00f3 nhi\u1ec1u c\u00e1ch d\u00f9ng ph\u01b0\u01a1ng th\u1ee9c n\u00e0y:</li> </ul> <pre><code>str.find(int ch, int pos = 0); t\u00ecm k\u00fd t\u1ef1 ch k\u1ec3 t\u1eeb v\u1ecb tr\u00ed pos \u0111\u1ebfn cu\u1ed1i chu\u1ed7i str\nstr.find(char *s, int pos = 0); t\u00ecm s (m\u1ea3ng k\u00fd t\u1ef1 k\u1ebft th\u00fac \u2018\\0\u2019) k\u1ec3 t\u1eeb v\u1ecb tr\u00ed pos \u0111\u1ebfn cu\u1ed1i\nstr.find(string&amp; s, int pos = 0); t\u00ecm chu\u1ed7i s k\u1ec3 t\u1eeb v\u1ecb tr\u00ed pos \u0111\u1ebfn cu\u1ed1i chu\u1ed7i.\n</code></pre> <p>N\u1ebfu kh\u00f4ng quy \u0111\u1ecbnh gi\u00e1 tr\u1ecb pos th\u00ec hi\u1ec3u m\u1eb7c nhi\u00ean l\u00e0 0; n\u1ebfu t\u00ecm c\u00f3 th\u00ec ph\u01b0\u01a1ng th\u1ee9c tr\u1ea3 v\u1ec1 v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n \u0111\u1ea7u ti\u00ean, ng\u01b0\u1ee3c l\u1ea1i tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb -1.</p> <pre><code>//find substring\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;conio.h&gt;\nusing namespace std;\nint main ()\n{\n    string str=\"ConCho chay qua rao\";\n    cout &lt;&lt; str.find(\"chay\") &lt;&lt; endl; // 7\n    cout &lt;&lt; (int)str.find(\"Chay\") &lt;&lt; endl; // -1\n    getchar();\n    return 0;\n}\n</code></pre> <ul> <li>H\u00e0m t\u00ecm ki\u1ebfm ng\u01b0\u1ee3c (<code>rfind</code>)</li> </ul> <pre><code>//find from back\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;conio.h&gt;\nusing namespace std;\nint main ()\n{\n    string str=\"ConCho chay qua chay qua rao\";\n    cout &lt;&lt; str.find(\"chay\") &lt;&lt; endl; // 7\n    cout &lt;&lt; (int)str.rfind(\"chay\") &lt;&lt; endl; // 16\n    getchar();\n    return 0;\n}\n</code></pre> <ul> <li>Ph\u01b0\u01a1ng th\u1ee9c <code>replace()</code> thay th\u1ebf m\u1ed9t \u0111o\u1ea1n con trong chu\u1ed7i <code>str</code> cho tr\u01b0\u1edbc (\u0111o\u1ea1n con k\u1ec3 t\u1eeb m\u1ed9t v\u1ecb tr\u00ed <code>pos</code> v\u00e0 \u0111\u1ebfm t\u1edbi <code>nchar</code> k\u00fd t\u1ef1 k\u00fd t\u1ef1 v\u1ec1 ph\u00eda cu\u1ed1i chu\u1ed7i) b\u1edfi m\u1ed9t chu\u1ed7i <code>s</code> n\u00e0o \u0111\u00f3, ho\u1eb7c b\u1edfi <code>n</code> k\u00fd t\u1ef1 <code>ch</code> n\u00e0o \u0111\u00f3. C\u00f3 nhi\u1ec1u c\u00e1ch d\u00f9ng, th\u1ee9 t\u1ef1 tham s\u1ed1 nh\u01b0 sau:</li> </ul> <pre><code>str.replace(int pos, int nchar, char *s);\nstr.replace(int pos, int nchar, string s);\nstr.replace(int pos, int nchar, int n, int ch);\n\nstring str=\"con cho la con cho con. Con meo ko phai la con cho\";\nstr.replace(4, 3, \"CHO\"); // \"con CHO la con cho con. Con meo ko phai la con cho\";\ncout &lt;&lt; str &lt;&lt; endl;\ngetchar();\n</code></pre>"},{"location":"languages/cpp/string/#e-tach-xau","title":"e) T\u00e1ch x\u00e2u","text":"<p>Trong vi\u1ec7c x\u1eed l\u00fd x\u00e2u k\u00fd t\u1ef1, kh\u00f4ng th\u1ec3 thi\u1ebfu \u0111\u01b0\u1ee3c c\u00e1c thao t\u00e1c t\u00e1ch x\u00e2u k\u00fd t\u1ef1 th\u00e0nh nhi\u1ec1u x\u00e2u k\u00fd t\u1ef1 con th\u00f4ng qua c\u00e1c k\u00fd t\u1ef1 ng\u0103n c\u00e1ch. C\u00e1c h\u00e0m n\u00e0y c\u00f3 s\u1eb5n trong c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c nh\u01b0 Visual Basic, Java, hay th\u1eadm ch\u00ed l\u00e0 trong <code>&lt;string.h&gt;</code>. V\u1edbi STL, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng l\u00e0m \u0111i\u1ec1u n\u00e0y v\u1edbi <code>stringstream</code>:</p> <pre><code>string S = \"Xin chao tat ca cac ban\"; // Kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb c\u1ee7a x\u00e2u\nstringstream ss(S); // Kh\u1edfi t\u1ea1o stringstream t\u1eeb x\u00e2u S\n\nwhile (ss &gt;&gt; token) { // \u0110\u1ecdc l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n c\u1ee7a x\u00e2u. C\u00e1c ph\u1ea7n t\u00e1ch nhau b\u1edfi d\u1ea5u c\u00e1ch ho\u1eb7c xu\u1ed1ng d\u00f2ng.\n  cout &lt;&lt; token &lt;&lt; endl;\n}\n</code></pre> <p>Output:</p> <pre><code>Xin\nchao\ntat\nca\ncac\nban\n</code></pre> <p>Ch\u00fa \u00fd r\u1eb1ng, c\u00e1ch n\u00e0y c\u0169ng c\u00f3 th\u1ec3 d\u1ec5 \u00e1p d\u1ee5ng n\u1ebfu b\u1ea1n mu\u1ed1n chuy\u1ec3n s\u1ed1 th\u00e0nh x\u00e2u (ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i), t\u00e1ch 1 x\u00e2u th\u00e0nh nhi\u1ec1u s\u1ed1.</p> <p>N\u1ebfu kh\u00f4ng mu\u1ed1n s\u1eed d\u1ee5ng <code>stringstream</code>, c\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 t\u1ef1 x\u00e2y d\u1ef1ng h\u00e0m t\u00e1ch x\u00e2u nh\u01b0 sau:</p> <pre><code>string S = \"Xin chao tat ca cac ban\"; // Kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb c\u1ee7a x\u00e2u\nstring::iterator t, t2; // C\u00e1c bi\u1ebfn l\u1eb7p\nvector&lt;string&gt; split; // M\u1ea3ng c\u00e1c x\u00e2u (l\u01b0u k\u1ebft qu\u1ea3 t\u00e1ch)\n\nfor (t=S.begin(); t&lt;S.end();)\n{\n    // L\u1eb7p t\u1eeb v\u1ecb tr\u00ed b\u1eaft \u0111\u1ea7u\n    t2=find(t, S.end(), ' '); // T\u00ccm k\u00fd t\u1ef1 space ' ' \u0111\u1ea7u ti\u00ean\n    // k\u1ec3 t\u1eeb v\u1ecb tr\u00ed t\n    if (t!=t2) split.push_back(string(t, t2)); // L\u1ea5y x\u00e2u k\u00fd t\u1ef1 gi\u1eefa 2 v\u1ecb tr\u00ed\n    t = t2+1; // Chuy\u1ec3n sang v\u1ecb tr\u00ed sau\n}\nfor (int i=0; i&lt;split\u00ecsize(); i++)\ncout &lt;&lt; split[i] &lt;&lt; endl; // In m\u1ea3ng c\u00e1c x\u00e2u k\u00fd t\u1ef1\ngetchar();\n</code></pre> <p>Output:</p> <pre><code>Xin\nchao\ntat\nca\ncac\nban\n</code></pre> <p>\u0110o\u1ea1n ch\u01b0\u01a1ng tr.nh s\u1eed d\u1ee5ng c\u00e1c k\u1ef9 thu\u1eadt sau</p> <ul> <li>Ph\u01b0\u01a1ng th\u1ee9c <code>find(v\u1ecb_tr\u00ed_\u0111\u1ea7u, v\u1ecb_tr\u00ed_cu\u1ed1i, k\u00fd_t\u1ef1_t\u00ecm)</code> d\u00f9ng \u0111\u1ec3 t\u00ecm v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a <code>k\u00fd_t\u1ef1_t\u00ecm</code> b\u1eaft \u0111\u1ea7u t\u1eeb <code>v\u1ecb_tr\u00ed_\u0111\u1ea7u</code>. H\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 v\u1ecb tr\u00ed c\u1ee7a k\u00fd t\u1ef1 t\u00ecm \u0111\u01b0\u1ee3c (n\u1ebfu t\u00ecm th\u1ea5y) ho\u1eb7c <code>v\u1ecb_tr\u00ed_cu\u1ed1i</code> (n\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y)</li> <li><code>string</code> c\u00f3 th\u1ec3 kh\u1edfi t\u1ea1o t\u1eeb m\u1ed9t \u0111o\u1ea1n k\u00fd t\u1ef1 con c\u1ee7a m\u1ed9t x\u00e2u k\u00fd t\u1ef1 kh\u00e1c v\u1edbi c\u00fa ph\u00e1p <code>string(v\u1ecb_tr\u00ed_\u0111\u1ea7u, v\u1ecb_tr\u00ed_cu\u1ed1i)</code></li> <li>\u0110o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh th\u1ef1c hi\u1ec7n t\u00e1ch c\u00e1c x\u00e2u k\u00fd t\u1ef1 k\u1ec3 c\u1ea3 trong tr\u01b0\u1eddng h\u1ee3p c\u00f3 nhi\u1ec1u k\u00fd t\u1ef1 <code>space</code> n\u1eb1m li\u00ean ti\u1ebfp nhau. M\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n h\u01a1n l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 g\u1ecdi h\u00e0m <code>strtok()</code> trong <code>string.h</code> \u0111\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y, nh\u01b0ng kh\u00f4ng may l\u00e0 h\u00e0m n\u00e0y thao t\u00e1c tr\u00ean <code>char*</code> ch\u1ee9 kh\u00f4ng ph\u1ea3i <code>string</code>. H\u00e0m th\u00e0nh vi\u00ean <code>c_str()</code> s\u1ebd gi\u00fap b\u1ea1n chuy\u1ec3n t\u1eeb <code>string</code> th\u00e0nh d\u1ea1ng <code>const charT* c_str () const</code>;</li> </ul> <p>H\u00e0m n\u00e0y c\u0169ng t\u1ef1 \u0111\u1ed9ng sinh ra k\u00fd t\u1ef1 null ch\u00e8n v\u00e0o cu\u1ed1i x\u00e2u.</p> <p>T\u1eeb prototype ta c\u0169ng th\u1ea5y \u0111\u01b0\u1ee3c h\u00e0m tr\u1ea3 v\u1ec1 m\u1ed9t h\u1eb1ng chu\u1ed7i, \u0111i\u1ec1u n\u00e0y \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c ta kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i chu\u1ed7i tr\u1ea3 v\u1ec1. G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c c_str();</p> <pre><code>string s = \"some_string\";\ncout &lt;&lt; s.c_str() &lt;&lt; endl;\ncout &lt;&lt; strlen(s.c_str()) &lt;&lt; endl;\n</code></pre> <p>Sau \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 b\u00ean tr\u00ean \u0111\u01b0\u1ee3c vi\u1ebft l\u1ea1i d\u00f9ng h\u00e0m th\u00e0nh vi\u00ean <code>c_str()</code> v\u00e0 c\u00e1c h\u00e0m trong <code>&lt;string.h&gt;</code></p> <pre><code>// strings vs c-strings\n## include &lt;iostream&gt;\n## include &lt;string.h&gt;\n## include &lt;string&gt;\nusing std::string;\nint main ()\n{\n    char* cstr;\n    char* p;\n    string str (\"Xin chao tat ca cac ban\");\n    cstr = new char [str.size()+1];\n    strcpy (cstr, str.c_str());\n    // cstr l\u00e0 1 b\u1ea3n sao c-string c\u1ee7a str\n    p=strtok (cstr,\" \");\n    while (p!=NULL)\n    {\n        cout &lt;&lt; p &lt;&lt; endl;\n        p=strtok(NULL,\" \");\n    }\n    delete[] cstr;\n    return 0;\n}\n</code></pre> <p>Output:</p> <pre><code>Xin\nchao\ntat\nca\ncac\nban\n</code></pre>"},{"location":"languages/cpp/string/#f-chuyen-oi-hang-loat-voi-transform","title":"f) Chuy\u1ec3n \u0111\u1ed5i h\u00e0ng lo\u1ea1t v\u1edbi transform","text":"<pre><code>OutputIterator transform( InputIterator first,\nInputIterator last,\nOutputIterator result,\nUnaryOperation unary_op );\n\n## include &lt;cctype&gt; // for toupper\n## include &lt;string&gt;\n## include &lt;algorithm&gt; //for transform\nusing namespace std;\nchar alphabet(char c)\n{\n    static char ch = 'a';\n    return ch++;\n}\nint main()\n{\n    string s(\"this is a lower case string\");\n    transform(s.begin(), s.end(), s.begin(), toupper);\n    cout &lt;&lt; s &lt;&lt; endl;\n    transform(s.begin(), s.end(), s.begin(), alphabet);\n    cout &lt;&lt; s;\n    return 0;\n}\n</code></pre>"},{"location":"languages/cpp/string/#g-mot-so-phuong-thuc-khac","title":"g) M\u1ed9t s\u1ed1 ph\u01b0\u01a1ng th\u1ee9c kh\u00e1c","text":"<p>C\u00f2n nhi\u1ec1u ph\u01b0\u01a1ng th\u1ee9c ti\u1ec7n \u00edch kh\u00e1c nh\u01b0: <code>append()</code>, <code>rfind()</code>, <code>find_first_not_of()</code>, <code>find_last_not_of()</code>, <code>swap()</code>. C\u00e1ch d\u00f9ng c\u00e1c h\u00e0m n\u00e0y \u0111\u1ec1u \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y trong h\u1ec7 th\u1ed1ng h\u01b0\u1edbng d\u1eabn (help) c\u1ee7a c\u00e1c m\u00f4i tr\u01b0\u1eddng c\u00f3 h\u1ed7 tr\u1ee3 STL (trong VC++ l\u00e0 MSDN). Ngo\u00e0i ra c\u00e1c ph\u01b0\u01a1ng th\u1ee9c nh\u01b0 <code>find_first_of()</code> t\u01b0\u01a1ng t\u1ef1 nh\u01b0 <code>find()</code>, <code>find_last_of()</code> t\u01b0\u01a1ng t\u1ef1 nh\u01b0 <code>rfind()</code></p>"},{"location":"others/Pascal-Vi-sao/","title":"Ho\u00e0i ni\u1ec7m v\u1ec1 Pascal - L\u00ea Minh Ho\u00e0ng","text":"<p>Nh\u00e2n chuy\u1ec7n th\u1ea3o lu\u1eadn v\u1ec1 vi\u1ec7c IOI 2019 s\u1ebd d\u1eebng cho ph\u00e9p l\u00e0m b\u00e0i b\u1eb1ng Pascal, th\u1ea7y L\u00ea Minh Ho\u00e0ng \u0111\u00e3 c\u00f3 chia s\u1ebb r\u1ea5t \u00fd ngh\u0129a v\u1ec1 vi\u1ec7c t\u1ea1i sao Pascal l\u1ea1i \u0111\u01b0\u1ee3c gi\u1ea3ng d\u1ea1y \u1edf Vi\u1ec7t Nam. \u0110\u1ec3 nh\u1eefng chia s\u1ebb c\u1ee7a th\u1ea7y kh\u00f4ng b\u1ecb th\u1ea5t l\u1ea1c m\u1ea5t, m\u00ecnh s\u1ebd l\u01b0u l\u1ea1i v\u00e0o \u0111\u00e2y :).</p>"},{"location":"others/Pascal-Vi-sao/#au-tien-tai-sao-vn-lai-hoc-pascal","title":"\u0110\u1ea7u ti\u00ean: T\u1ea1i sao VN l\u1ea1i h\u1ecdc Pascal?","text":"<p>B\u00e2y gi\u1edd c\u00f3 nhi\u1ec1u b\u1ea1n ch\u1eedi b\u1edbi t\u00f9m lum, th\u1eadm ch\u00ed cho \u0111\u00e2y l\u00e0 m\u00f3n qu\u00e0 cay \u0111\u1ed9c c\u1ee7a B\u1ed9 GDDT.</p> <p>Kh\u00f4ng ph\u1ea3i m\u00ecnh b\u00eanh B\u1ed9 GD, nh\u01b0ng c\u00e1c b\u1ea1n \u0111\u00f3 kh\u00f4ng hi\u1ec3u m\u1ed9t v\u1ea5n \u0111\u1ec1 l\u1ecbch s\u1eed: T\u1eeb nh\u1eefng n\u0103m 1970s, 1980s l\u00e0 khi tin h\u1ecdc b\u1eaft \u0111\u1ea7u v\u00e0o VN, Pascal l\u00e0 ng\u00f4n ng\u1eef ch\u00ednh c\u1ee7a t\u1ea1p ch\u00ed c\u00f4ng ngh\u1ec7 PC Magazine, Turbo Pascal v\u1eabn l\u00e0 best IDE, ph\u1ea7n m\u1ec1m hi\u1ec7u su\u1ea5t cao \u0111a s\u1ed1 vi\u1ebft b\u1eb1ng Pascal, s\u00e1ch v\u1edf v\u1ec1 thu\u1eadt to\u00e1n, c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1ec1u d\u00f9ng Pascal. V\u1eady ngo\u00e0i Pascal ra c\u00f2n c\u00f3 th\u1ec3 ch\u1ecdn g\u00ec kh\u00e1c?. Nh\u1eefng g\u00ec Kernighan vi\u1ebft trong \"Why Pascal Is Not My Favorite Programming Language\" kh\u00f4ng h\u1ec1 \u0111\u00fang v\u1edbi Pascal Extension c\u1ee7a Turbo v\u00e0 ObjPas sau n\u00e0y. Trong khi ng\u00f4n ng\u1eef C l\u00fac \u0111\u00f3 b\u1ecb \u0111\u1eadp be b\u00e9t. L\u00fd do duy nh\u1ea5t n\u00f3 t\u1ed3n t\u1ea1i l\u00e0 v\u00ec Unix \u0111\u01b0\u1ee3c m\u1edf m\u00e3 v\u00e0 C \u0111\u01b0\u1ee3c h\u1ecdc \u0111\u1ec3 m\u1ed5 x\u1ebb c\u1ea5u tr\u00fac H\u1ec7 \u0111i\u1ec1u h\u00e0nh m\u00e0 th\u00f4i, c\u00f2n c\u00e1i ki\u1ec3u vi\u1ebft C: <code>++(**p)***--q</code> th\u00ec d\u00f9 b\u1ea1n th\u00e0nh ki\u1ebfn c\u00e1ch m\u1ea5y, Pascal v\u1eabn kh\u00f4ng bao gi\u1edd cho ph\u00e9p vi\u1ebft c\u00e1i code t\u1ed1i nh\u01b0 th\u1ebf n\u00e0y. Ng\u01b0\u1eddi ta n\u00f3i Pascal trong s\u00e1ng h\u01a1n ch\u00ednh l\u00e0 khi so s\u00e1nh v\u1edbi C, ch\u1ee9 kh\u00f4ng ph\u1ea3i so v\u1edbi Python hay Java l\u00e0 nh\u1eefng th\u1ee9 m\u1edbi \u0111\u00e2u.</p>"},{"location":"others/Pascal-Vi-sao/#thu-hai-tai-sao-vn-lai-cham-chuyen-sang-c","title":"Th\u1ee9 hai: T\u1ea1i sao VN l\u1ea1i ch\u1eadm chuy\u1ec3n sang C++?","text":"<p>C++ ra \u0111\u1eddi t\u1eeb nh\u1eefng n\u0103m 1980s, m\u1ed9t ng\u00f4n ng\u1eef s\u1ebd c\u1ea7n kho\u1ea3ng th\u1eddi gian h\u01a1n ch\u1ee5c n\u0103m \u0111\u1ec3 qu\u1ea3ng b\u00e1 v\u00e0 ki\u1ec3m ch\u1ee9ng th\u1ef1c t\u1ebf tr\u01b0\u1edbc khi kh\u1eb3ng \u0111\u1ecbnh n\u00f3 c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i l\u00e2u d\u00e0i \u00edt ra l\u00e0 trong m\u1ed9t l\u0129nh v\u1ef1c n\u00e0o \u0111\u00f3. \u0110\u1ebfn khi h\u1ecd \u0111\u00e3 ki\u1ec3m ch\u1ee9ng xong v\u00e0 tri\u1ec3n khai di\u1ec7n r\u1ed9ng, s\u00e1ch v\u1edf t\u00e0i li\u1ec7u \u0111\u1ea7y \u0111\u1ee7, c\u1ed9ng \u0111\u1ed3ng ho\u1ea1t \u0111\u1ed9ng t\u00edch c\u1ef1c,... th\u00ec Vi\u1ec7t Nam ch\u01b0a c\u00f3 internet, n\u00f3i g\u00ec \u0111\u1ebfn c\u00e1c h\u00ecnh th\u1ee9c th\u01b0\u01a1ng m\u1ea1i \u0111i\u1ec7n t\u1eed \u0111\u1ec3 m\u00e0 mua s\u00e1ch, ph\u1ea7n m\u1ec1m, ... \u1ede b\u1eadc ph\u1ed5 th\u00f4ng th\u00ec k\u1ef3 thi qu\u1ed1c t\u1ebf v\u1eabn ph\u1ed5 bi\u1ebfn Pascal cho t\u1edbi \u0111\u1ea7u nh\u1eefng n\u0103m 2000. \u1ede ngo\u00e0i x\u00e3 h\u1ed9i, t\u1ea1p ch\u00ed PC World VN ra r\u1ea3 c\u00e1c b\u00e0i n\u00f3i v\u1ec1 Visual Basic, Foxpro, ... l\u00e0 nh\u1eefng th\u1ee9 m\u00e0 c\u00e1c c\u00f4ng ty tin h\u1ecdc d\u00f9ng \u0111\u1ec3 l\u00e0m c\u00e1c ph\u1ea7n m\u1ec1m qu\u1ea3n l\u00fd nh\u00e2n s\u1ef1,... Ch\u1eb3ng c\u00f3 b\u00e0i n\u00e0o n\u00f3i v\u1ec1 C++ c\u1ea3. Th\u1eadm ch\u00ed nhi\u1ec1u ng\u01b0\u1eddi \u0111\u1ec1u cho l\u00e0 C++ l\u00e0 m\u1ed9t extension c\u1ee7a C ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef m\u1edbi n\u1eefa kia. 4 n\u0103m h\u1ecdc khoa To\u00e1n c\u1ee7a m\u00ecnh khi ra tr\u01b0\u1eddng, CNTT c\u00f3 nh\u1eefng b\u01b0\u1edbc ph\u00e1t tri\u1ec3n nh\u01b0ng l\u00e0 ph\u00e1t tri\u1ec3n sai h\u01b0\u1edbng. M\u00ecnh c\u00f3 c\u1ea3m gi\u00e1c l\u00e0 n\u1ebfu nh\u01b0 MS \u0111\u00e1nh m\u1ea5t v\u1ecb tr\u00ed #1, m\u1ecdi th\u1ee9 c\u1ee7a Vi\u1ec7t Nam s\u1ebd reset l\u1ea1i nh\u01b0 khi m\u00ecnh t\u1ed1t nghi\u1ec7p PT.</p>"},{"location":"others/Pascal-Vi-sao/#thu-ba-tai-sao-minh-phai-ngung-day-pascal","title":"Th\u1ee9 ba: T\u1ea1i sao m\u00ecnh ph\u1ea3i ng\u1eebng d\u1ea1y Pascal?","text":"<p>Pascal, Object Pascal \u0111\u1ed1i v\u1edbi m\u00ecnh v\u1eabn l\u00e0 ng\u00f4n ng\u1eef hay. Th\u1eadt \u0111\u00e1ng ti\u1ebfc v\u00ec n\u00f3 kh\u00f4ng c\u00f2n s\u1ef1 h\u1ed7 tr\u1ee3 t\u1eeb nh\u1eefng \u00f4ng l\u1edbn n\u00ean kh\u00f4ng \u0111\u01b0\u1ee3c chu\u1ea9n h\u00f3a, m\u1edf r\u1ed9ng v\u1ec1 ng\u00f4n ng\u1eef c\u0169ng nh\u01b0 th\u01b0 vi\u1ec7n h\u1ed7 tr\u1ee3. Ch\u00ednh c\u00e1i c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n Free Pascal \u0111\u00e3 gi\u1ebft n\u00f3 b\u1eb1ng c\u00e1ch \u0111\u01b0a ra nh\u1eefng phi\u00ean b\u1ea3n m\u1edbi \u0111\u1ea7y l\u1ed7i, d\u1ecbch sai, ch\u1eadm s\u1eeda. L\u1ebd ra ph\u00e1t tri\u1ec3n theo h\u01b0\u1edbng c\u00f4ng c\u1ee5 h\u1ecdc t\u1eadp thi c\u1eed, ho\u00e0n thi\u1ec7n th\u01b0 vi\u1ec7n FCL-STL,... th\u00ec l\u1ea1i \u0111i ph\u00e1t tri\u1ec3n th\u00eam m\u1ed9t \u0111\u1ed1ng tool l\u00e0m software ch\u1eb3ng \u0111\u1ec3 l\u00e0m g\u00ec v\u00ec ng\u01b0\u1eddi l\u00e0m chuy\u00ean nghi\u1ec7p c\u00f3 Delphi r\u1ed3i. Ngay c\u1ea3 m\u00ecnh l\u00e0 ng\u01b0\u1eddi code ObjPas kh\u00e1 gi\u1ecfi m\u00e0 nhi\u1ec1u l\u00fac r\u1ea5t \u1ee9c ch\u1ebf v\u1edbi m\u1ea5y c\u00e1i l\u1ed7i c\u1ee7a n\u00f3, ngay c\u1ea3 b\u1ed9 c\u00e0i \u0111\u1eb7t l\u00e0m c\u0169ng kh\u00f4ng n\u00ean h\u00ecnh.</p>"},{"location":"others/Pascal-Vi-sao/#thu-tu-minh-khao-sat-chuyen-day-c-nhu-the-nao","title":"Th\u1ee9 t\u01b0, m\u00ecnh kh\u1ea3o s\u00e1t chuy\u1ec7n d\u1ea1y C++ nh\u01b0 th\u1ebf n\u00e0o?","text":"<p>V\u00e0o kho\u1ea3ng 2008-2009, c\u00f3 nhi\u1ec1u th\u1ea7y khuy\u00ean v\u00e0 c\u00e1c b\u1ea1n m\u00ecnh \u0111\u1ec1 xu\u1ea5t chuy\u1ec3n sang d\u1ea1y C++ \u1edf ph\u1ed5 th\u00f4ng \u1edf Chuy\u00ean S\u01b0 Ph\u1ea1m (CSP). M\u00ecnh b\u1eaft \u0111\u1ea7u l\u1ed9 tr\u00ecnh d\u00f9 r\u1ea5t nhi\u1ec1u b\u1ea1n ph\u00ea ph\u00e1n r\u1ea5t gay g\u1eaft v\u00e0 \u0111\u1ec1 ngh\u1ecb chuy\u1ec3n ngay l\u1eadp t\u1ee9c. Nh\u01b0ng m\u00ecnh n\u1eafm h\u01a1i nhi\u1ec1u sinh m\u1ea1ng trong tay, kh\u00f4ng th\u1ec3 li\u1ec1u \u0111\u01b0\u1ee3c.</p> <ul> <li> <p>\u0110\u1ea7u ti\u00ean l\u00e0 kh\u1ea3o s\u00e1t t\u00ecnh h\u00ecnh anh em: Nh\u1eefng \u0111\u01a1n v\u1ecb n\u00e0o \u0111ang d\u00f9ng C++ \u0111\u1ec3 h\u1ecdc t\u1eadp m\u00f4 h\u00ecnh \u0111\u00f3. K\u1ebft qu\u1ea3 kh\u00e1 l\u00e0 th\u1ea5t v\u1ecdng, chuy\u00ean T\u1ed5ng H\u1ee3p (A0) c\u00f3 k\u1ebft qu\u1ea3 t\u1ed1t nh\u01b0ng \u0111\u1ed1i t\u01b0\u1ee3ng h\u1ecdc sinh \u0111\u1ea7u v\u00e0o r\u1ea5t kh\u00e1c v\u1edbi CSP, c\u00e1ch h\u1ecdc, c\u00e1ch tuy\u1ec3n ch\u1ecdn c\u0169ng kh\u00e1c, kh\u00f4ng tham kh\u1ea3o \u0111\u01b0\u1ee3c g\u00ec. C\u00e1c \u0111\u01a1n v\u1ecb kh\u00e1c d\u00f9ng C++ th\u00ec k\u1ebft qu\u1ea3 ch\u1eadp ch\u1eddn, trong khi nh\u1eefng \u0111\u01a1n v\u1ecb d\u00f9ng Pascal nh\u01b0 H\u1ea3i Ph\u00f2ng, H\u00e0 N\u1ed9i, PTNK... k\u1ebft qu\u1ea3 \u1ed5n \u0111\u1ecbnh t\u1ed1t.</p> </li> <li> <p>Ti\u1ebfp theo l\u00e0 t\u00ecm hi\u1ec3u h\u1ec7 th\u1ed1ng ch\u1ea5m b\u00e0i thi QG (b\u00ean m\u00ecnh kh\u00f4ng thi th\u00e0nh ph\u1ed1 n\u00ean ko quan t\u00e2m th\u00e0nh ph\u1ed1 ch\u1ea5m ki\u1ec3u g\u00ec): K\u1ebft qu\u1ea3: H\u1ec7 th\u1ed1ng AMM2 kh\u00f4ng ch\u1ea5m \u0111\u01b0\u1ee3c tr\u1ef1c ti\u1ebfp m\u00e3 CPP, ph\u1ea3i d\u1ecbch tay, h\u01a1n n\u1eefa khi m\u00e3 CPP ch\u1ea1y l\u1ed7i th\u01b0\u1eddng treo lu\u00f4n h\u1ec7 th\u1ed1ng ch\u1ea5m... n\u1ebfu kh\u00f4ng ch\u1ea5m tay th\u00ec ph\u1ea3i ch\u1ea1y trung gian qua m\u1ed9t code Pascal, thi\u1ec7t th\u00f2i v\u1ec1 th\u1eddi gian...</p> </li> <li> <p>V\u1ec1 IDE v\u00e0 tr\u00ecnh d\u1ecbch: Tr\u00ean Unix th\u00ec kh\u00e1 \u1ed5n, nh\u01b0ng GCC v\u00e0 DevC tr\u00ean Windows t\u00ednh cho t\u1edbi b\u1ea3n 3.x v\u1eabn c\u00f2n l\u1eafm l\u1ed7i qu\u00e1. Sinh l\u1ed7i b\u00e1o l\u1ed7i lung tung \u0111\u1ed1i v\u1edbi ng\u01b0\u1eddi m\u1edbi h\u1ecdc s\u1ebd g\u00e2y \u1ee9c ch\u1ebf, gi\u1ea3m c\u1ea3m h\u1ee9ng t\u00ecm hi\u1ec3u.</p> </li> <li> <p>V\u1ec1 t\u00ecnh h\u00ecnh h\u1ecdc t\u1eadp: Code b\u1ea9n tr\u00e0n lan, v\u00f4 s\u1ed1 undefined behaviors, ch\u1eb3ng theo standard/style n\u00e0o c\u1ea3. H\u1ec7 qu\u1ea3 c\u1ee7a vi\u1ec7c h\u1ecdc t\u1eadp thi\u1ebfu h\u1ec7 th\u1ed1ng v\u00e0 kh\u00f4ng nghi\u00eam kh\u1eafc v\u1edbi b\u1ea3n th\u00e2n.</p> </li> <li> <p>V\u1ec1 s\u00e1ch v\u1edf th\u00ec \u00f4i th\u00f4i, b\u00f3 tay lu\u00f4n, xin l\u1ed7i c\u00e1c b\u1ed9 gi\u00e1o tr\u00ecnh C++ ti\u1ebfng Vi\u1ec7t m\u00ecnh \u0111\u00e3 \u0111\u1ecdc qua, t\u1ea5t c\u1ea3 \u0111\u1ec1u kh\u00f4ng x\u00e0i \u0111\u01b0\u1ee3c. M\u00ecnh kh\u00f4ng th\u1ec3 y\u00eau c\u1ea7u hs \u0111\u1ecdc \u0111\u01b0\u1ee3c ti\u1ebfng Anh v\u00ec h\u1ecdc sinh c\u00e1c t\u1ec9nh v\u1ec1 CSP h\u1ecdc \u0111\u00e2u c\u00f3 n\u1ec1n t\u00e0ng ti\u1ebfng Anh t\u1ed1t. H\u01a1n n\u1eefa th\u1ee9 ti\u1ebfng Anh h\u00f9ng bi\u1ec7n ch\u00e9m gi\u00f3 kh\u00e1c h\u1eb3n v\u1edbi th\u1ee9 ti\u1ebfng Anh \u0111\u1ec3 \u0111\u1ecdc hi\u1ec3u b\u1ea3n ch\u1ea5t.</p> </li> <li> <p>V\u1ec1 n\u1ed9i l\u1ef1c: Trong b\u1ed9 m\u00f4n c\u0169ng to\u00e0n ng\u01b0\u1eddi nh\u01b0 m\u00ecnh, n\u1ebfu chuy\u1ec3n ng\u00f4n ng\u1eef th\u00ec c\u00f9ng chuy\u1ec3n ch\u1ee9 l\u1ec7ch pha th\u00ec c\u1ed9ng t\u00e1c gi\u1ea3ng d\u1ea1y sao \u0111\u01b0\u1ee3c. H\u01a1n n\u1eefa C++ m\u00ecnh kh\u00f4ng gi\u1ecfi nh\u01b0 Pascal, d\u1ea1y l\u1eadp tr\u00ecnh l\u00e0 ph\u1ea3i th\u1ecb ph\u1ea1m, kh\u00f4ng ph\u1ea3i c\u1ee9 chi\u1ebfu b\u1ee5p c\u00e1i code l\u00ean gi\u1ea3i th\u00edch l\u00e0 xong. Ph\u1ea3i l\u00e0m t\u1eeb \u0111\u1ea7u =&gt; g\u1eb7p bugs =&gt; debug ngay tr\u01b0\u1edbc m\u0169i h\u1ecdc sinh sinh vi\u00ean, n\u00f3 m\u1edbi h\u1ecdc \u0111\u01b0\u1ee3c c\u00e1ch thi\u1ebft k\u1ebf, tri\u1ec3n khai v\u00e0 g\u1ee1 r\u1ed1i, ki\u1ec3m th\u1eed. Nh\u1ee1 g\u1eb7p c\u00e1i bug m\u00ecnh g\u1ee1 c\u1ea3 ti\u1ebft kh\u00f4ng xong th\u00ec ch\u00e1y, n\u00ean h\u01a1i run.</p> </li> <li> <p>V\u1ec1 quan \u0111i\u1ec3m: C\u00f3 nhi\u1ec1u quan \u0111i\u1ec3m m\u00ecnh kh\u00f4ng th\u1ec3 theo. V\u00ed d\u1ee5 nh\u00e9:</p> <ul> <li>\"Chuy\u1ec3n C++ ch\u1ec9 l\u00e0 transcode th\u00f4i, if b\u00ean Pascal vi\u1ebft th\u1ebf n\u00e0y b\u00ean C++ vi\u1ebft th\u1ebf kia, while, repeat, for c\u0169ng th\u1ebf...\". M\u00ecnh ngh\u0129 r\u1ea5t kh\u00e1c, first language gi\u1ed1ng nh\u01b0 ti\u1ebfng m\u1eb9 \u0111\u1ebb, ta ph\u1ea3i ngh\u0129 theo ng\u00f4n ng\u1eef \u0111\u00f3 m\u1edbi \u0111\u01b0\u1ee3c, ch\u1ee9 ngh\u0129 b\u1eb1ng m\u1ed9t ng\u00f4n ng\u1eef r\u1ed3i d\u1ecbch ra m\u1ed9t ng\u00f4n ng\u1eef kh\u00e1c kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e1ch l\u00e0m t\u1ef1 nhi\u00ean v\u00e0 hi\u1ec7u qu\u1ea3.</li> <li>\"D\u1ea1y pointers v\u00e0 OOP l\u00e0m g\u00ec, d\u1ea1y ch\u00fang n\u00f3 kh\u00f4ng hi\u1ec3u m\u00e0 \u0111i thi \u0111\u00e2u c\u00f3 c\u1ea7n\". D\u1ea1y l\u00e0 d\u1ea1y m\u00e0 thi l\u00e0 thi, C++ v\u1ee9t \u0111i 2 th\u1ee9 \u0111\u00f3 s\u1ebd \u0111\u1ebfn l\u00fac c\u00f3 b\u00e0i kh\u00f4ng th\u1ec3 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c th\u00ec bi\u1ebft k\u00eau ai gi\u1edd. M\u00ecnh v\u1eabn lu\u00f4n k\u00eau ca l\u00e0 SGK l\u1edbp 8 d\u01b0\u1edbi \u00e1p l\u1ef1c gi\u1ea3m t\u1ea3i v\u1ee9t \u0111i lu\u00f4n l\u1ec7nh REPEAT v\u00e0 FOR c\u1ee7a Pascal l\u00e0 m\u1ed9t sai l\u1ea7m. Kh\u00f3 b\u01b0\u1edbc \u0111\u1ea7u th\u00ec m\u1edbi d\u1ec5 v\u1ec1 sau, c\u00f3 ph\u1ea3i v\u00f2ng l\u1eb7p n\u00e0o vi\u1ebft ki\u1ec3u WHILE c\u0169ng thu\u1eadn v\u1edbi t\u01b0 duy l\u1eadp tr\u00ecnh \u0111\u00e2u.</li> </ul> </li> </ul>"},{"location":"others/Pascal-Vi-sao/#thu-nam-minh-trien-khai-day-c-as-first-language-nhu-the-nao","title":"Th\u1ee9 n\u0103m, m\u00ecnh tri\u1ec3n khai d\u1ea1y C++ (as first language) nh\u01b0 th\u1ebf n\u00e0o?","text":"<p>N\u00f3i chuy\u1ec7n n\u00e0y \u0111\u00fang l\u00e0 s\u1ed1, ch\u00e9m gi\u00f3 t\u00ed th\u00ec g\u1ecdi l\u00e0 thi\u00ean th\u1eddi.</p> <p>C\u00e1i may th\u1ee9 nh\u1ea5t l\u00e0 n\u0103m 2011. M\u00ecnh v\u00e0 th\u1ea7y \u0110\u00f4ng nh\u1eadn \u0111\u01b0\u1ee3c d\u1ef1 \u00e1n c\u1ee7a B\u1ed9 GD vi\u1ebft h\u1ec7 th\u1ed1ng ch\u1ea5m t\u1ef1 \u0111\u1ed9ng tr\u00ean Windows. M\u00ecnh \u0111\u1eb7t m\u1ee5c ti\u00eau vi\u1ebft m\u1ed9t b\u1ed9 ch\u1ea5m \u1ed5n \u0111\u1ecbnh, ch\u1ea1y kh\u00f4ng c\u1ea7n c\u1ea5u h\u00ecnh cao, d\u1ecbch CPP nh\u01b0 PAS, d\u00f9 \u00edt ch\u1ee9c n\u0103ng c\u0169ng \u0111\u01b0\u1ee3c. M\u00e3 ngu\u1ed3n kernel sau khi nghi\u1ec7m thu B\u1ed9 gi\u1eef b\u1ea3n quy\u1ec1n, m\u00ecnh th\u00ec build v\u00e0 c\u1eadp nh\u1eadt b\u1ea3n end-user cho c\u00e1c n\u01a1i d\u00f9ng Free. V\u1eady l\u00e0 thi\u00ean h\u1ea1 kh\u1ecfi b\u0103n kho\u0103n vi\u1ec7c d\u00f9ng CPP thi\u1ec7t th\u00f2i khi ch\u1ea5m.</p> <p>C\u00e1i may th\u1ee9 hai l\u00e0 n\u0103m 2012. UET \u0111\u01b0\u1ee3c giao ch\u1ec9nh s\u1eeda quy ch\u1ebf thi QG v\u00e0 ph\u1ee5 tr\u00e1ch vi\u1ec7c hu\u1ea5n luy\u1ec7n \u0110TQG. Th\u1ea7y \u0110\u00e0m, th\u1ea7y Ngh\u0129a, anh Vi\u1ec7t H\u00e0 v\u00e0 Ph\u1ea1m B\u1ea3o S\u01a1n... g\u1ecdi m\u00ecnh v\u1edbi H\u1ed3 \u0110\u1eafc Ph\u01b0\u01a1ng \u0111i h\u1ecdp, nh\u00e2n l\u00fac \u0111\u00f3 \u1ea5n lu\u00f4n Code Blocks v\u00e0o v\u00e0 th\u1ebf l\u00e0 c\u00e1i h\u1ecda DevCPP v\u1edbi GCC c\u0169 r\u00edch coi nh\u01b0 \u0111\u01b0\u1ee3c lo\u1ea1i b\u1ecf. Ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd \u0111\u01b0\u1ee3c d\u1ecbch theo phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t t\u00ednh t\u1eeb l\u00fac tri\u1ec3n khai k\u1ef3 thi.</p> <p>C\u00f2n l\u1ea1i l\u00e0 vi\u1ec7c n\u1ed9i b\u1ed9, c\u1ea3 b\u1ed9 m\u00f4n lao v\u00e0o c\u00e0y, h\u1ecdc, vi\u1ebft gi\u00e1o tr\u00ecnh th\u1eadm ch\u00ed ph\u1ea3i thi nh\u01b0 th\u1eadt c\u00f9ng b\u1ecdn h\u1ecdc sinh xem th\u1ebf n\u00e0o. M\u00ecnh kh\u00f4ng thi \u0111\u01b0\u1ee3c th\u00ec \u0111i d\u1ea1y th\u1eb1ng \u0111i thi c\u0169ng kh\u00f3. C\u1ef1u h\u1ecdc sinh c\u0169ng ph\u1ea3i x\u1eafn tay v\u00e0o n\u1eefa.</p>"},{"location":"others/Pascal-Vi-sao/#cuoi-cung-tai-sao-cu-phai-pascalcc-ma-khong-phai-thu-nao-khac-pho-bien-hon","title":"Cu\u1ed1i c\u00f9ng, t\u1ea1i sao c\u1ee9 ph\u1ea3i Pascal/C/C++ m\u00e0 kh\u00f4ng ph\u1ea3i th\u1ee9 n\u00e0o kh\u00e1c ph\u1ed5 bi\u1ebfn h\u01a1n?","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 h\u1ecdc m\u1ed9t ng\u00f4n ng\u1eef d\u1ec5 h\u01a1n \u0111\u1ec3 l\u00e0m quen v\u1edbi vi\u1ec7c l\u1eadp tr\u00ecnh (Scratch, Python,...), c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t ng\u00f4n ng\u1eef kh\u00e1c thi\u1ebft k\u1ebf ph\u1ea7n m\u1ec1m (Java, Basic,...). Nh\u01b0ng khi b\u1ea1n mu\u1ed1n t\u00ecm hi\u1ec3u s\u00e2u v\u1ec1 thu\u1eadt to\u00e1n c\u0169ng nh\u01b0 mu\u1ed1n \u0111\u00e1nh gi\u00e1 ch\u00ednh x\u00e1c hi\u1ec7u su\u1ea5t thu\u1eadt to\u00e1n, nh\u1eefng ng\u00f4n ng\u1eef \u0111\u00f3 ho\u00e0n to\u00e0n kh\u00f4ng ph\u00f9 h\u1ee3p. Trong giai \u0111o\u1ea1n h\u1ecdc thu\u1eadt to\u00e1n, ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, ch\u01b0\u01a1ng tr\u00ecnh d\u1ecbch, c\u00f4ng c\u1ee5 l\u1eadp tr\u00ecnh l\u00e0 c\u1ef1c k\u1ef3 quan tr\u1ecdng. B\u1edfi v\u00ec b\u1ea1n s\u1ebd ph\u1ea3i t\u01b0 duy tr\u00ean ng\u00f4n ng\u1eef \u0111\u00f3, b\u1ea1n c\u00f2n ph\u1ea3i hi\u1ec3u b\u1ea3n ch\u1ea5t th\u1ebf n\u00e0o l\u00e0 m\u1ed9t \u0111o\u1ea1n code t\u1ed1t, th\u1ebf n\u00e0o l\u00e0 m\u1ed9t \u0111o\u1ea1n code t\u1ed3i v\u1ec1 m\u1eb7t hi\u1ec7u su\u1ea5t. B\u1ea1n c\u0169ng kh\u00f4ng th\u1ec3 h\u1ecdc c\u00e1c thu\u1eadt to\u00e1n chia \u0111\u1ec3 tr\u1ecb n\u1ebfu d\u00f9ng m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00f4ng cho ph\u00e9p \u0111\u1ec7 quy, kh\u00f4ng th\u1ec3 \u0111\u00e1nh gi\u00e1 \u0111\u00fang hi\u1ec7u su\u1ea5t c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n tr\u00ean th\u1ef1c t\u1ebf (\u0111ong \u0111\u1ebfm \u0111\u1ebfn t\u1eebng nano gi\u00e2y), khi m\u00e0 th\u1eddi gian th\u1ef1c hi\u1ec7n ch\u01b0\u01a1ng tr\u00ecnh m\u1ea5t ph\u1ea7n l\u1edbn v\u00e0o c\u00f4ng \u0111o\u1ea1n th\u00f4ng d\u1ecbch hay k\u00edch ho\u1ea1t m\u00e1y \u1ea3o.</p> <p>V\u00ed d\u1ee5 th\u1ebf n\u00e0y nh\u00e9: Khi b\u1ea1n h\u1ecdc l\u00e1i xe, th\u00f4ng th\u01b0\u1eddng b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c t\u1eadp b\u1eb1ng m\u1ed9t chi\u1ebfc sedan, hatchback hay couple. Khi ra \u0111\u01b0\u1eddng ph\u1ed1, ngo\u00e0i c\u00e1c lo\u1ea1i tr\u00ean b\u1ea1n th\u01b0\u1eddng th\u1ea5y ph\u1ed5 bi\u1ebfn c\u00e1c lo\u1ea1i xe SUV, Pick-up, roadster, ... Nh\u01b0ng \u1edf ph\u01b0\u01a1ng di\u1ec7n nh\u1eefng ng\u01b0\u1eddi l\u00e0m chuy\u00ean nghi\u1ec7p trong ng\u00e0nh c\u00f4ng nghi\u1ec7p \u00f4 t\u00f4, b\u1ea1n ph\u1ea3i bi\u1ebft v\u1ec1 c\u00f4ng su\u1ea5t v\u00e0 t\u1eebng chi ti\u1ebft \u0111\u1ed9ng c\u01a1, hi\u1ec3u r\u00f5 kh\u1ea3 n\u0103ng c\u00e2n b\u1eb1ng xe, c\u00e1c thi\u1ebft k\u1ebf kh\u00ed \u0111\u1ed9ng h\u1ecdc, \u0111\u1ed9 c\u1ee9ng v\u00e0 \u0111\u1ed9 b\u00e1m c\u1ee7a l\u1ed1p, h\u1ec7 th\u1ed1ng phanh,... v\u00e0 \u0111\u1ec3 bi\u1ebft t\u1ea5t c\u1ea3 nh\u1eefng th\u1ee9 n\u00e0y, b\u1ea1n b\u1eaft bu\u1ed9c ph\u1ea3i ng\u1ed3i v\u00e0o m\u1ed9t chi\u1ebfc F1 d\u00f9 vi\u1ec7c \u0111i\u1ec1u khi\u1ec3n n\u00f3 kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng v\u00e0 n\u00f3 c\u0169ng s\u1ebd kh\u00f4ng bao gi\u1edd l\u00e0 lo\u1ea1i xe ph\u1ed5 bi\u1ebfn tr\u00ean \u0111\u01b0\u1eddng ph\u1ed1.</p> <p>T\u1ea5t c\u1ea3 nh\u1eefng th\u1ee9 \u0111\u00f3 b\u1ea5t k\u1ef3 \u0111\u01a1n v\u1ecb n\u00e0o mu\u1ed1n chuy\u1ec3n \u0111\u1ed5i c\u00f3 l\u1ebd s\u1ebd \u00edt nhi\u1ec1u ph\u1ea3i tr\u1ea3i qua. V\u1edbi m\u1ed9t c\u01a1 ch\u1ebf t\u1ed5 ch\u1ee9c c\u1ed3ng k\u1ec1nh, r\u1ea5t kh\u00f3 m\u00e0 thay \u0111\u1ed5i di\u1ec7n r\u1ed9ng \u0111\u01b0\u1ee3c n\u1ebfu kh\u00f4ng nh\u1eafm m\u1eaft ch\u1ecbu g\u1ea1ch \u0111\u00e1.</p> <p>Ngay c\u1ea3 vi\u1ec7c IOI c\u00f3 l\u1ed9 tr\u00ecnh b\u1ecf Pascal, m\u00ecnh kh\u00f4ng bi\u1ebft g\u00ec h\u1ebft v\u00ec m\u00ecnh kh\u00f4ng \u0111i theo \u0111o\u00e0n t\u1eeb n\u0103m 2011 do l\u00fd do t\u00e0i ch\u00ednh. N\u0103m 2011 th\u1eb1ng Korokevich v\u00f4 \u0111\u1ecbch IOI b\u1eb1ng Pascal, ch\u1eb3ng ai n\u00f3i g\u00ec v\u1ec1 l\u1ed9 tr\u00ecnh n\u00e0y. Nh\u1eefng n\u0103m sau c\u0169ng kh\u00f4ng th\u1ea5y ai v\u1ec1 n\u00f3i ho\u1eb7c m\u1ed9t th\u00f4ng t\u01b0 ch\u00ednh th\u1ee9c t\u1eeb ph\u00eda B\u1ed9 GDDT. T\u1ea5t c\u1ea3 nh\u1eefng xu h\u01b0\u1edbng ki\u1ebfn th\u1ee9c hay th\u1ec3 th\u1ee9c m\u00ecnh \u0111\u1ec1u ph\u1ea3i \u0111o\u00e1n t\u1eeb m\u1ea5y b\u00e0i tham lu\u1eadn c\u1ee7a t\u1ea1p ch\u00ed Olympiads in Informatics.</p> <p>N\u00f3i nh\u01b0 th\u1ebf t\u1ee9c l\u00e0 m\u00ecnh \u0111\u00e3 s\u1eed d\u1ee5ng h\u1ebft quy\u1ec1n trong ph\u1ea1m vi c\u00f3 th\u1ec3 r\u1ed3i, vi\u1ec7c c\u00f2n l\u1ea1i l\u00e0 \u1edf c\u1ea5p v\u0129 m\u00f4 h\u01a1n n\u1eefa kia.</p> <p>Ch\u00fa th\u00edch: 1 v\u00e0i nh\u00e2n v\u1eadt xu\u1ea5t hi\u1ec7n trong b\u00e0i:</p> <ul> <li>Th\u1ea7y \u0110\u00f4ng: th\u1ea7y \u0110\u1ed7 \u0110\u1ee9c \u0110\u00f4ng.</li> <li>anh Vi\u1ec7t H\u00e0: th\u1ea7y Nguy\u1ec5n Vi\u1ec7t H\u00e0, HC\u0110 IOI l\u1ea7n th\u1ee9 2 n\u0103m 1990, hi\u1ec7u tr\u01b0\u1eddng \u0110H C\u00f4ng Ngh\u1ec7 (UET).</li> <li>Ph\u1ea1m B\u1ea3o S\u01a1n: th\u1ea7y Ph\u1ea1m B\u1ea3o S\u01a1n, HCB IOI n\u0103m 1994 v\u00e0 1994, hi\u1ec7u ph\u00f3 tr\u01b0\u1eddng \u0110H C\u00f4ng Ngh\u1ec7 (UET).</li> </ul> <p>C\u00e1c comment n\u00e0y \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb comment c\u1ee7a th\u1ea7y Ho\u00e0ng \u1edf post c\u1ee7a anh Tr\u01b0\u01a1ng Xu\u00e2n Nam, HCB IOI 1994.</p>"},{"location":"others/vojsol/ALAKE/","title":"ALAKE","text":"<p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n h\u00f3a b\u00e0i to\u00e1n, ta t\u1ea1m coi \\(w_i = 1\\) v\u1edbi m\u1ecdi \\(i\\) (m\u00ecnh s\u1ebd g\u1ecdi m\u1ed7i \u0111o\u1ea1n trong \u0111\u1ec1 b\u00e0i l\u00e0 m\u1ed7i c\u1ed9t cho d\u1ec5 t\u01b0\u1edfng t\u01b0\u1ee3ng), v\u00e0 ta ch\u1ec9 t\u00ednh th\u1eddi gian ng\u1eadp c\u1ee7a v\u1ecb tr\u00ed \\(i\\) khi n\u01b0\u1edbc ch\u1ea3y \u1edf ngay v\u1ecb tr\u00ed \\(i\\). \u0110\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c th\u1eddi gian v\u1ecb tr\u00ed \\(i\\) b\u1ecb ng\u1eadp trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta l\u00e0m nh\u01b0 sau: - T\u00ecm hai c\u1ed9t cao h\u01a1n \\(H_i\\) \u1edf hai b\u00ean \\(i\\) v\u00e0 g\u1ea7n \\(i\\) nh\u1ea5t. G\u1ecdi v\u1ecb tr\u00ed c\u1ee7a hai c\u1ed9t n\u00e0y trong m\u1ea3ng l\u00e0 \\(prv_i\\) v\u00e0 \\(nxt_i\\) - T\u00ednh ph\u1ea7n n\u01b0\u1edbc trong h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 chi\u1ec1u d\u00e0i t\u1eeb \\(prv_i+1\\) \u0111\u1ebfn \\(nxt_i-1\\) c\u00f3 chi\u1ec1u cao \\(H_i+1\\), r\u1ed3i tr\u1eeb \u0111i ph\u1ea7n c\u1ed9t (t\u1ed5ng chi\u1ec1u cao trong \u0111o\u1ea1n \u0111\u00f3)</p> <p>G\u1ecdi th\u1eddi gian t\u00ednh \u0111\u01b0\u1ee3c l\u00e0 \\(orig(i)\\) B\u00e2y gi\u1edd \u0111\u1ec3 t\u00ednh ra \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n c\u1ea7n t\u00ecm, ta c\u1ea7n ph\u1ea3i t\u00ednh th\u1eddi \u0111i\u1ec3m m\u00e0 b\u1eaft \u0111\u1ea7u n\u01b0\u1edbc ch\u1ea3y v\u00e0o v\u1ecb tr\u00ed trong kho\u1ea3ng t\u1eeb \\(prv_i+1\\) \u0111\u1ebfn \\(nxt_i\\) (b\u1ea1n c\u00f3 th\u1ec3 th\u1eed t\u01b0\u1edfng t\u01b0\u1ee3ng qu\u00e1 tr\u00ecnh n\u01b0\u1edbc ch\u1ea3y \u0111\u1ec3 hi\u1ec3u t\u1ea1i sao ta ch\u1ec9 c\u1ea7n t\u00ednh th\u00eam c\u00e1i n\u00e0y). G\u1ecdi th\u1eddi \u0111i\u1ec3m n\u00e0y l\u00e0 \\(dp(i)\\), v\u00e0 v\u1ecb tr\u00ed n\u01b0\u1edbc ch\u1ea3y v\u00e0o \u0111\u1ea7u ti\u00ean l\u00e0 \\(x\\), ta c\u00f3: - \\(dp(x) = 0\\) - N\u1ebfu \u0111o\u1ea1n \\(prv_i+1\\) \u0111\u1ebfn \\(nxt_i-1\\) c\u00f3 \u0111i\u1ec3m \\(x\\), \\(dp(i) = 0\\) - N\u1ebfu \\(i&lt;x\\), \\(dp(i) =\\) (th\u1eddi gian \u0111\u1ec3 n\u01b0\u1edbc d\u00e2ng l\u00ean \u0111\u1ebfn \u0111\u1ed9 cao \\(H_{nxt_i}\\) tinh t\u1eeb khi n\u01b0\u1edbc b\u1eaft \u0111\u1ea7u ch\u1ea3y v\u00e0o \u0111o\u1ea1n \\(prv_{nxt_i}\\) \u0111\u1ebfn \\(nxt_{nxt_i}\\)) + (th\u1eddi gian \u0111\u1ec3 n\u01b0\u1edbc b\u1eaft \u0111\u1ea7u ch\u1ea3y v\u00e0o \u0111o\u1ea1n) \\(=\\) (b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 t\u00ednh) + \\(dp(nxt_i)\\) - N\u1ebfu \\(i&gt;x\\), ta thay \\(nxt_i\\) \u1edf c\u00f4ng th\u1ee9c tr\u00ean th\u00e0nh \\(prv_i\\) v\u00e0 x\u1eed l\u00ed t\u01b0\u01a1ng t\u1ef1 tr\u01b0\u1eddng h\u1ee3p tr\u00ean.</p> <p>Ta th\u1ea5y ph\u1ea7n t\u00ednh \\(prv_i\\) v\u00e0 \\(nxt_i\\) c\u00f3 th\u1ec3 m\u1ea5t \\(O(N^2)\\), c\u00f2n ph\u1ea7n \\(dp\\) do c\u00f3 \\(n\\) tr\u1ea1ng th\u00e1i, m\u1ed7i tr\u1ea1ng th\u00e1i ch\u1ec9 \"di chuy\u1ec3n\" \\(O(1)\\) l\u1ea7n n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p ph\u1ea7n \\(dp\\) ch\u1ec9 l\u00e0 \\(O(n)\\). V\u00ec v\u1eady ta c\u1ea7n t\u1ed1i \u01b0u ph\u1ea7n t\u00ednh \\(prv_i\\) v\u00e0 \\(nxt_i\\).</p> <p>Gi\u1ea3 s\u1eed ta \u0111ang t\u00ednh \\(prv_i\\), ta c\u1ea7n th\u1ef1c hi\u1ec7n truy v\u1ea5n t\u00ecm \\(j\\) th\u1ecfa m\u00e3n \\(H_j &gt; H_i\\), \\(j &lt; i\\) v\u00e0 \\(j\\) l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3.  - Do \\(H_i\\) ch\u1ec9 c\u00f3 \\(O(N)\\) gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 n\u00ean ta c\u00f3 th\u1ec3 t\u1ea1m th\u1eddi n\u00e9n \\(H_i\\) l\u1ea1i \u0111\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0o \u0111\u00f3. G\u1ecdi \\(index(H_i)\\) l\u00e0 gi\u00e1 tr\u1ecb \u0111\u00e3 \u0111\u01b0\u1ee3c n\u00e9n c\u1ee7a \\(H_i\\) - \u0110i\u1ec1u ki\u1ec7n \\(j &lt; i\\) ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf n\u1ebfu ta duy\u1ec7t c\u00e1c c\u1ed9t t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i, v\u00e0 ch\u1ec9 cho c\u1ed9t \\(i\\) v\u00e0o c\u1ea5u tr\u00fac d\u1eef li\u1ec7u khi \u0111\u00e3 x\u00e9t xong c\u1ed9t \\(i\\) - Ph\u1ea7n t\u00ednh \\(j\\) l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 trong \u0111o\u1ea1n \\([H_i+1,\\infty)\\), ta c\u00f3 th\u1ec3 d\u00f9ng c\u00e2y ph\u00e2n \u0111o\u1ea1n (Segment Tree) \u0111\u1ec3 x\u1eed l\u00ed.</p> <p>Do \u0111\u00f3 ta c\u00f3 thu\u1eadt to\u00e1n t\u00ednh \\(prv_i\\) trong \\(O(N\\log{N})\\) nh\u01b0 sau: - Ch\u00e8n gi\u00e1 tr\u1ecb \\(0\\) v\u00e0o v\u1ecb tr\u00ed \\(index(\\infty)\\) trong c\u00e2y ph\u00e2n \u0111o\u1ea1n, v\u00ec \u0111\u00e2y l\u00e0 c\u1ed9t cao v\u00f4 t\u1eadn - V\u1edbi m\u1ed7i \\(i\\) t\u1eeb 1 \u0111\u1ebfn \\(N\\) (\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(N)\\))     - Truy v\u1ea5n \\(max(index(H_i)+1,\\infty)\\) tr\u00ean c\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u1ec3 t\u00ecm \\(prv_i\\)     - Ch\u00e8n gi\u00e1 tr\u1ecb \\(i\\) cho v\u1ecb tr\u00ed \\(index(H_i)\\)</p> <p>Ph\u1ea7n t\u00ednh \\(nxt_i\\), ta c\u0169ng gi\u1ea3i quy\u1ebft t\u01b0\u01a1ng t\u1ef1</p> <p>\u0110\u1ebfn \u0111\u00e2y m\u00ecnh ngh\u0129 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 suy ngh\u0129 c\u00e1ch x\u1eed l\u00ed khi \\(w_i\\) kh\u00f4ng b\u1eb1ng nhau r\u1ed3i.</p> <p>T\u1ed5ng k\u1ebft: \u0110\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n \\(O(N\\log{N} + N)\\)</p> <p>Code m\u1eabu</p> <p>Note: Code m\u1eabu h\u01a1i d\u00e0i do m\u00ecnh ch\u01b0a t\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c con tr\u1ecf d\u00e0nh cho h\u00e0m c\u1ee7a C++. N\u1ebfu b\u1ea1n t\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c, code c\u00f3 th\u1ec3 c\u00f2n ng\u1eafn h\u01a1n v\u00e0 gi\u1ea3m thi\u1ec3u r\u1ee7i ro b\u1ecb l\u1ed7i khi code.</p>"},{"location":"translate/PyTorch-la-gi/","title":"PyTorch L\u00e0 G\u00ec?","text":"<p>Xem Ngu\u1ed3n (notebook t\u01b0\u01a1ng t\u00e1c) https://github.com/duc0/vitech/blob/master/jupyter/pytorch-tutorials/ch1_tensor.ipynb</p> <p>PyTorch l\u00e0 g\u00ec? PyTorch l\u00e0 th\u01b0 vi\u1ec7n t\u00ednh to\u00e1n x\u00e2y d\u1ef1ng tr\u00ean n\u1ec1n t\u1ea3ng ng\u00f4n ng\u1eef Python. PyTorch nh\u1eafm v\u00e0o hai m\u1ee5c ti\u00eau ch\u00ednh</p> <p>H\u1ed7 tr\u1ee3 t\u00ednh to\u00e1n khoa h\u1ecdc, thay th\u1ebf cho th\u01b0 vi\u1ec7n NumPy (m\u1ed9t th\u01b0 vi\u1ec7n Python h\u1ed7 tr\u1ee3 t\u00ednh to\u00e1n khoa h\u1ecdc tr\u00ean m\u1ea3ng nhi\u1ec1u chi\u1ec1u) v\u00e0 h\u1ed7 tr\u1ee3 GPU Tr\u1edf th\u00e0nh m\u1ed9t n\u1ec1n t\u1ea3ng Deep Learning linh ho\u1ea1t v\u00e0 hi\u1ec7u qu\u1ea3 PyTorch \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Facebook (https://pytorch.org/) v\u00e0 l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n m\u00e3 ngu\u1ed3n m\u1edf (https://github.com/pytorch/pytorch)</p> <p>Gi\u1edbi thi\u1ec7u Tensor ^^^^^^^</p> <p>Trong ng\u1eef c\u1ea3nh c\u00e1c th\u01b0 vi\u1ec7n t\u00ednh to\u00e1n, Tensor c\u00f3 th\u1ec3 hi\u1ec3u nh\u01b0 l\u00e0 m\u1ea3ng nhi\u1ec1u chi\u1ec1u (gi\u1ed1ng nh\u01b0 ndarray c\u1ee7a th\u01b0 vi\u1ec7n NumPy). Tensor l\u00e0 s\u1ef1 t\u1ed5ng qu\u00e1t ho\u00e1 c\u1ee7a vector (m\u1ea3ng 1 chi\u1ec1u), ma tr\u1eadn (m\u1ea3ng 2 chi\u1ec1u). Tensor c\u1ee7a PyTorch c\u00f3 th\u00eam m\u1ed9t l\u1ee3i th\u1ebf l\u00e0 c\u00f3 h\u1ed7 tr\u1ee3 t\u00ednh to\u00e1n tr\u00ean GPU \u0111\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9.</p> <p>C\u00e0i \u0111\u1eb7t C\u00e0i \u0111\u1eb7t anaconda sau \u0111\u00f3 ch\u1ea1y l\u1ec7nh</p> <p>conda install pytorch torchvision -c pytorch</p> <p>Ch\u1ea1y jupyter notebook \u0111\u1ec3 m\u1edf notebook n\u00e0y t\u01b0\u01a1ng t\u00e1c</p> <p>C\u00e1c h\u1ed7 tr\u1ee3 c\u01a1 b\u1ea3n v\u1ec1 Tensor n\u1eb1m trong module torch</p> <p>In [10]: from future import print_function import torch \u0110\u1ecbnh ngh\u0129a m\u1ed9t ma tr\u1eadn 5x3, ch\u01b0a kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb:</p> <p>In [11]: x = torch.empty(5, 3) print(x) tensor([[ 0.0000e+00, -2.0000e+00, -1.6168e-21],         [ 2.8643e-42,  7.1801e+28,  2.5958e-06],         [ 7.3983e+31,  2.7691e+20,  1.0645e+24],         [ 5.5603e+31,  4.2964e+24,  1.5842e-10],         [ 3.9831e-11,  1.6925e-41,  2.5031e-37]]) \u0110\u1ecbnh ngh\u0129a m\u1ed9t ma tr\u1eadn 5x3 \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o ng\u1eabu nhi\u00ean:</p> <p>In [ ]: x = torch.rand(5, 3) print(x) \u0110\u1ecbnh ngh\u0129a m\u1ed9t ma tr\u1eadn 5x3 kh\u1edfi t\u1ea1o v\u1edbi gi\u00e1 tr\u1ecb 0, ki\u1ec3u d\u1eef li\u1ec7u (dtype) l\u00e0 long:</p> <p>In [ ]: x = torch.zeros(5, 3, dtype=torch.long) print(x) Kh\u1edfi t\u1ea1o tensor tr\u1ef1c ti\u1ebfp t\u1eeb s\u1ed1 li\u1ec7u:</p> <p>In [ ]: x = torch.tensor([5.5, 3]) print(x) Kh\u1edfi t\u1ea1o tensor t\u1eeb m\u1ed9t tensor s\u1eb5n c\u00f3. C\u00e1c ph\u01b0\u01a1ng th\u1ee9c kh\u1edfi t\u1ea1o n\u00e0y s\u1ebd d\u00f9ng l\u1ea1i c\u00e1c thu\u1ed9c t\u00ednh c\u1ee7a tensor \u0111\u1ea7u v\u00e0o (nh\u01b0 l\u00e0 dtype) tr\u1eeb khi ng\u01b0\u1eddi d\u00f9ng cung c\u1ea5p gi\u00e1 tr\u1ecb m\u1edbi cho c\u00e1c thu\u1ed9c t\u00ednh.</p> <p>In [18]: x = x.new_ones(5, 3, dtype=torch.double)      # new_* methods take in sizes print(x)</p> <p>x = torch.randn_like(x, dtype=torch.float)    # override dtype! print(x)                                      # result has the same size tensor([[1., 1., 1.],         [1., 1., 1.],         [1., 1., 1.],         [1., 1., 1.],         [1., 1., 1.]], dtype=torch.float64) tensor([[-1.4884,  2.4420,  0.7131],         [ 2.2873, -0.3993, -0.0366],         [-1.8804, -0.4695,  0.4877],         [ 0.1583,  0.4593,  0.1510],         [-0.1133, -1.4087,  1.6926]]) Tr\u1ea3 v\u1ec1 k\u00edch th\u01b0\u1edbc c\u1ee7a tensor (ngh\u0129a l\u00e0 t\u1ea5t c\u1ea3 k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e1c chi\u1ec1u c\u1ee7a m\u1ea3ng):</p> <p>In [13]: print(x.size()) torch.Size([5, 3]) Ghi ch\u00fa <code>torch.Size</code> l\u00e0 tuple trong Python n\u00ean s\u1ebd h\u1ed7 tr\u1ee3 t\u1ea5t c\u1ea3 c\u00e1c ph\u00e9p t\u00ednh th\u00f4ng d\u1ee5ng v\u1edbi tuple.</p> <p>Ph\u00e9p to\u00e1n ^^^^^^^^^^ C\u00f3 nhi\u1ec1u c\u00fa ph\u00e1p kh\u00e1c nhau \u0111\u1ec3 bi\u1ec3u di\u1ec5n ph\u00e9p to\u00e1n. Trong v\u00ed d\u1ee5 sau ta s\u1ebd xem x\u00e9t ph\u00e9p to\u00e1n c\u1ed9ng 2 tensor.</p> <p>Ph\u00e9p c\u1ed9ng: c\u00fa ph\u00e1p th\u1ee9 nh\u1ea5t</p> <p>In [20]: x = torch.ones(2, 3) y = 3 * torch.ones(2, 3) print(x) print(y) print(x + y) tensor([[1., 1., 1.],         [1., 1., 1.]]) tensor([[3., 3., 3.],         [3., 3., 3.]]) tensor([[4., 4., 4.],         [4., 4., 4.]]) Ph\u00e9p c\u1ed9ng: c\u00fa ph\u00e1p th\u1ee9 hai</p> <p>In [21]: print(torch.add(x, y)) tensor([[4., 4., 4.],         [4., 4., 4.]]) Ph\u00e9p c\u1ed9ng: ch\u1ec9 \u0111\u1ecbnh tr\u01b0\u1edbc tensor \u0111\u1ea7u ra</p> <p>In [22]: result = torch.empty(5, 3) torch.add(x, y, out=result) print(result) tensor([[4., 4., 4.],         [4., 4., 4.]]) Ph\u00e9p c\u1ed9ng t\u1ea1i ch\u1ed7 (l\u01b0u \u00fd vi\u1ec7c ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb l\u00e0 kh\u00e1 quan tr\u1ecdng \u0111\u1ec3 t\u0103ng hi\u1ec7u qu\u1ea3 t\u00ednh to\u00e1n)</p> <p>In [23]: y.add_(x) print(y) tensor([[4., 4., 4.],         [4., 4., 4.]]) Ghi ch\u00fa C\u00e1c ph\u00e9p to\u00e1n n\u00e0o m\u00e0 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a tensor t\u1ea1i ch\u1ed7 th\u00ec s\u1ebd c\u00f3 t\u00ean k\u1ebft th\u00fac b\u1edfi d\u1ea5u <code>_</code>. V\u00ed d\u1ee5: <code>x.copy_(y)</code>, <code>x.t_()</code>, s\u1ebd thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a <code>x</code>.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng c\u00e1c c\u00e1ch truy c\u1eadp theo ch\u1ec9 s\u1ed1 gi\u1ed1ng nh\u01b0 NumPy! V\u00ed d\u1ee5 \u0111\u1ec3 in ra c\u1ed9t #1 c\u1ee7a ma tr\u1eadn x:</p> <p>In [25]: print(x[:, 1]) tensor([1., 1.]) Thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc: n\u00e0o mu\u1ed1n thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc Tensor, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng torch.view:</p> <p>In [28]: x = torch.randn(4, 4) y = x.view(16) z = x.view(-1, 8)  # -1 ngh\u0129a l\u00e0 l\u00e0 k\u00edch th\u01b0\u1edbc s\u1ebd \u0111\u01b0\u1ee3c suy ra t\u1eeb c\u00e1c chi\u1ec1u c\u00f2n l\u1ea1i print(x.size(), y.size(), z.size()) torch.Size([4, 4]) torch.Size([16]) torch.Size([2, 8]) T\u1ea5t nhi\u00ean khi d\u00f9ng view, k\u00edch th\u01b0\u1edbc m\u1edbi ph\u1ea3i c\u00f3 s\u1ed1 ph\u1ea7n t\u1eed b\u1eb1ng s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a Tensor. V\u00ed d\u1ee5 sau s\u1ebd b\u00e1o l\u1ed7i:</p> <p>In [29]: y = x.view(14)</p> <p>RuntimeError                              Traceback (most recent call last)  in () ----&gt; 1 y = x.view(14) <p>RuntimeError: invalid argument 2: size '[14]' is invalid for input with 16 elements at /Users/soumith/miniconda2/conda-bld/pytorch_1532623076075/work/aten/src/TH/THStorage.cpp:84 N\u1ebfu tensor ch\u1ec9 c\u00f3 1 ph\u1ea7n t\u1eed th\u00ec c\u00f3 th\u1ec3 d\u00f9ng .item() \u0111\u1ec3 truy c\u1eadp gi\u00e1 tr\u1ecb duy nh\u1ea5t \u0111\u00f3</p> <p>In [30]: x = torch.randn(1) print(x) print(x.item()) tensor([-0.0990]) -0.09897159039974213 \u0110\u1ecdc th\u00eam:</p> <p>H\u01a1n 100+ ph\u00e9p to\u00e1n tr\u00ean Tensor, bao g\u1ed3m transposing, indexing, slicing, c\u00e1c ph\u00e9p t\u00ednh to\u00e1n h\u1ecdc, \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\u00ednh, s\u1ed1 ng\u1eabu nhi\u00ean, ..., \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 t\u1ea1i http://pytorch.org/docs/torch_.</p> <p>T\u01b0\u01a1ng t\u00e1c v\u1edbi NumPy Chuy\u1ec3n \u0111\u1ed5i gi\u1eefa PyTorch tensor v\u00e0 m\u1ea3ng NumPy r\u1ea5t d\u1ec5 d\u00e0ng.</p> <p>PyTorch tensor v\u00e0 m\u1ea3ng NumPy c\u00f9ng chia s\u1ebb b\u1ed9 nh\u1edb d\u1eef li\u1ec7u, thay \u0111\u1ed5i b\u00ean n\u00e0y th\u00ec b\u00ean kia c\u0169ng thay \u0111\u1ed5i theo.</p> <p>Chuy\u1ec3n t\u1eeb Tensor v\u1ec1 m\u1ea3ng NumPy ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</p> <p>In [31]: a = torch.ones(5) print(a) tensor([1., 1., 1., 1., 1.]) In [32]: b = a.numpy() print(b) [1. 1. 1. 1. 1.] Thay \u0111\u1ed5i a th\u00ec b c\u0169ng thay \u0111\u1ed5i theo</p> <p>In [33]: a.add_(1) print(a) print(b) tensor([2., 2., 2., 2., 2.]) [2. 2. 2. 2. 2.] Chuy\u1ec3n t\u1eeb m\u1ea3ng NumPy v\u1ec1 Tensor ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Thay \u0111\u1ed5i a th\u00ec b c\u0169ng thay \u0111\u1ed5i theo</p> <p>In [34]: import numpy as np a = np.ones(5) b = torch.from_numpy(a) np.add(a, 1, out=a) print(a) print(b) [2. 2. 2. 2. 2.] tensor([2., 2., 2., 2., 2.], dtype=torch.float64) T\u1ea5t c\u1ea3 c\u00e1c ki\u1ec3u Tensor (tr\u00ean CPU) ngo\u1ea1i tr\u1eeb CharTensor \u0111\u1ec1u h\u1ed7 tr\u1ee3 chuy\u1ec3n \u0111\u1ed5i v\u1edbi NumPy v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>Tensors tr\u00ean CUDA (CUDA l\u00e0 n\u1ec1n t\u1ea3ng t\u00ednh to\u00e1n GPU c\u1ee7a NVidia) Tensor c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c chuy\u1ec3n \u0111\u1ebfn thi\u1ebft b\u1ecb b\u1ea5t k\u1ef3 b\u1eb1ng c\u00e1ch g\u1ecdi h\u00e0m .to .</p> <p>In [35]:</p>"},{"location":"translate/PyTorch-la-gi/#chay-neu-nhu-may-tinh-ho-tro-cuda-co-gpu-cua-nvidia","title":"Ch\u1ea1y n\u1ebfu nh\u01b0 m\u00e1y t\u00ednh h\u1ed7 tr\u1ee3 CUDA (c\u00f3 GPU c\u1ee7a NVidia)","text":""},{"location":"translate/PyTorch-la-gi/#dung-torchdevice-e-ua-tensors-ravao-gpu","title":"D\u00f9ng <code>torch.device</code> \u0111\u1ec3 \u0111\u01b0a tensors ra/v\u00e0o GPU","text":"<p>if torch.cuda.is_available():     device = torch.device(\"cuda\")          # a CUDA device object     y = torch.ones_like(x, device=device)  # directly create a tensor on GPU     x = x.to(device)                       # or just use strings <code>.to(\"cuda\")</code>     z = x + y     print(z)     print(z.to(\"cpu\", torch.double))       # <code>.to</code> can also change dtype together!</p>"},{"location":"translate/functional-programming-part-1/","title":"Functional Programming - Ph\u1ea7n 1","text":"<p>Ngu\u1ed3n: Medium - So you want to be a functional programmer (part 1)</p> <p></p> <p>N\u1ebfu b\u1ea1n mu\u1ed1n tr\u1edf th\u00e0nh m\u1ed9t functional programmer, b\u01b0\u1edbc \u0111\u1ea7u ti\u00ean \u0111\u1ec3 hi\u1ec3u th\u1ebf n\u00e0o l\u00e0 Functional Programming l\u00e0 b\u01b0\u1edbc quan tr\u1ecdng nh\u1ea5t, v\u00e0 \u0111\u00f4i khi c\u0169ng l\u00e0 b\u01b0\u1edbc kh\u00f3 kh\u0103n nh\u1ea5t. Nh\u01b0ng m\u1ecdi chuy\u1ec7n s\u1ebd d\u1ec5 d\u00e0ng h\u01a1n n\u1ebfu b\u1ea1n c\u00f3 m\u1ed9t g\u00f3c nh\u00ecn \u0111\u00fang \u0111\u1eafn. Chu\u1ed7i b\u00e0i vi\u1ebft n\u00e0y hi v\u1ecdng c\u00f3 th\u1ec3 mang l\u1ea1i cho b\u1ea1n \u0111i\u1ec1u \u0111\u00f3.</p>"},{"location":"translate/functional-programming-part-1/#forget-everything-you-know-hoc-lai-tu-au","title":"Forget everything you know - H\u1ecdc l\u1ea1i t\u1eeb \u0111\u1ea7u","text":"<p>H\u1ecdc functional programming gi\u1ed1ng nh\u01b0 b\u1eaft \u0111\u1ea7u t\u1eeb con s\u1ed1 kh\u00f4ng. T\u1ea5t nhi\u00ean kh\u00f4ng ho\u00e0n to\u00e0n nh\u01b0 v\u1eady, s\u1ebd c\u00f3 r\u1ea5t nhi\u1ec1u kh\u00e1i ni\u1ec7m t\u01b0\u01a1ng t\u1ef1 nh\u01b0 nh\u1eefng g\u00ec b\u1ea1n \u0111\u00e3 bi\u1ebft, nh\u01b0ng b\u1ea1n ph\u1ea3i chu\u1ea9n b\u1ecb s\u1eb5n tinh th\u1ea7n \u0111\u1ec3 h\u1ecdc l\u1ea1i m\u1ecdi th\u1ee9.</p> <p>V\u1edbi m\u1ed9t quan \u0111i\u1ec3m \u0111\u00fang \u0111\u1eafn, b\u1ea1n s\u1ebd c\u00f3 m\u1ed9t k\u00ec v\u1ecdng \u0111\u00fang \u0111\u1eafn v\u00e0 v\u1edbi m\u1ed9t k\u00ec v\u1ecdng \u0111\u00fang \u0111\u1eafn, b\u1ea1n s\u1ebd kh\u00f4ng d\u1ec5 d\u00e0ng b\u1ecf cu\u1ed9c khi m\u1ecdi th\u1ee9 tr\u1edf n\u00ean kh\u00f3 kh\u0103n.</p> <p>S\u1ebd c\u00f3 r\u1ea5t nhi\u1ec1u th\u1ee9 m\u00e0 b\u1ea1n \u0111\u00e3 v\u00e0 \u0111ang s\u1eed d\u1ee5ng khi l\u1eadp tr\u00ecnh s\u1ebd kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi Functional Programming.</p> <p>Gi\u1ed1ng nh\u01b0 khi b\u1ea1n l\u00e1i xe \u00f4 t\u00f4, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng s\u1ed1 l\u00f9i trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p. Nh\u01b0ng n\u1ebfu b\u1ea1n \u0111ang \u0111i\u1ec1u khi\u1ec3n m\u00e1y bay hay t\u00e0u v\u0169 tr\u1ee5, s\u1ebd kh\u00f4ng c\u00f3 s\u1ed1 l\u00f9i n\u00e0o cho b\u1ea1n c\u1ea3. C\u00f3 th\u1ec3 b\u1ea1n s\u1ebd ngh\u0129: Tr\u1eddi! L\u00e0m th\u1ebf qu\u00e1i n\u00e0o \u0111\u1ec3 l\u00e1i n\u1ebfu nh\u01b0 kh\u00f4ng c\u00f3 s\u1ed1 l\u00f9i ch\u1ee9?. Th\u00ec ra, m\u00e1y bay hay t\u00e0u v\u0169 tr\u1ee5 kh\u00f4ng c\u1ea7n s\u1ed1 l\u00f9i v\u00ec ch\u00fang c\u00f3 th\u1ec3 di chuy\u1ec3n trong kh\u00f4ng gian ba chi\u1ec1u. M\u1ed9t khi b\u1ea1n hi\u1ec3u \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, b\u1ea1n s\u1ebd ch\u1eb3ng bao gi\u1edd nh\u1edb \u0111\u1ebfn s\u1ed1 l\u00f9i n\u1eefa. Th\u1ef1c t\u1ebf, m\u1ed9t ng\u00e0y n\u00e0o \u0111\u00f3 b\u1ea1n s\u1ebd ngh\u0129 r\u1eb1ng chi\u1ebfc \u00f4 t\u00f4 m\u00e0 b\u1ea1n v\u1eabn quen l\u00e1i h\u1ea1n ch\u1ebf \u0111\u1ebfn m\u1ee9c n\u00e0o.</p> <p>H\u1ecdc Functional Programming s\u1ebd m\u1ea5t th\u1eddi gian. V\u00ec v\u1eady, h\u00e3y ki\u00ean nh\u1eabn</p> <p>Trong chu\u1ed7i b\u00e0i vi\u1ebft n\u00e0y, t\u00e1c gi\u1ea3 s\u1ebd tr\u00ecnh b\u00e0y nh\u1eefng kh\u00e1i ni\u1ec7m, \u00fd t\u01b0\u1edfng c\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a Functional Programming \u0111\u1ec3 gi\u00fap c\u00e1c b\u1ea1n c\u00f3 m\u1ed9t n\u1ec1n t\u1ea3ng v\u1eefng ch\u1eafc tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u th\u1ef1c s\u1ef1 v\u1edbi m\u1ed9t Functional Language n\u00e0o \u0111\u00f3. N\u1ebfu b\u1ea1n \u0111\u00e3 b\u01b0\u1edbc v\u00e0o con \u0111\u01b0\u1eddng n\u00e0y, nh\u1eefng b\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n c\u1ee7ng c\u1ed1 th\u00eam hi\u1ec3u bi\u1ebft c\u1ee7a m\u00ecnh.</p> <p>B\u1ea1n kh\u00f4ng n\u00ean v\u1ed9i v\u00e0ng. H\u00e3y d\u00e0nh th\u1eddi gian \u0111\u1ecdc th\u1eadt k\u0129 t\u1eebng kh\u00e1i ni\u1ec7m v\u00e0 \u0111\u1ecdc hi\u1ec3u ph\u1ea7n m\u00e3 ngu\u1ed3n. Th\u1eadm ch\u00ed b\u1ea1n c\u00f3 th\u1ec3 d\u1eebng \u0111\u1ecdc sau m\u1ed7i ph\u1ea7n \u0111\u1ec3 hi\u1ec3u th\u1eadt k\u0129 c\u00e0ng tr\u01b0\u1edbc khi sang ph\u1ea7n m\u1edbi. \u0110i\u1ec1u quan tr\u1ecdng nh\u1ea5t l\u00e0 b\u1ea1n ph\u1ea3i hi\u1ec3u (understand).</p>"},{"location":"translate/functional-programming-part-1/#purity-tinh-thuan-khiet","title":"Purity (t\u00ednh thu\u1ea7n khi\u1ebft)","text":"<p>Khi m\u1ed9t functional programmer n\u00f3i v\u1ec1 Purity (t\u00ednh thu\u1ea7n khi\u1ebft), h\u1ecd \u0111ang n\u00f3i v\u1ec1 nh\u1eefng Pure Function (h\u00e0m thu\u1ea7n khi\u1ebft).</p> <p>Pure functions l\u00e0 nh\u1eefng h\u00e0m r\u1ea5t \u0111\u01a1n gi\u1ea3n. Ch\u00fang c\u00f3 m\u1ed9t \u0111\u1eb7c \u0111i\u1ec3m: ch\u1ec9 th\u1ef1c hi\u1ec7n thao t\u00e1c tr\u00ean nh\u1eefng tham s\u1ed1 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o: <pre><code>var z = 10;\nfunction add(x, y) {\n    return x + y;\n}\n</code></pre> H\u00e0m <code>add</code> KH\u00d4NG t\u00e1c \u0111\u1ed9ng \u0111\u1ebfn bi\u1ebfn <code>z</code>. N\u00f3 kh\u00f4ng \u0111\u1ecdc gi\u00e1 tr\u1ecb t\u1eeb <code>z</code> v\u00e0 c\u0169ng kh\u00f4ng c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb c\u1ee7a <code>z</code>. N\u00f3 ch\u1ec9 \u0111\u1ecdc gi\u00e1 tr\u1ecb c\u1ee7a <code>x</code> v\u00e0 <code>y</code>, nh\u1eefng \u0111\u1ea7u v\u00e0o c\u1ee7a n\u00f3 v\u00e0 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 ph\u00e9p c\u1ed9ng gi\u1eefa hai gi\u00e1 tr\u1ecb \u0111\u00f3.</p> <p>\u0110\u00f3 l\u00e0 m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 pure function, hay h\u00e0m thu\u1ea7n khi\u1ebft. N\u1ebfu h\u00e0m <code>add</code> t\u00e1c \u0111\u1ed9ng v\u00e0o <code>z</code>, n\u00f3 s\u1ebd kh\u00f4ng l\u00e0 pure function n\u1eefa.</p> <p>Ch\u00fang ta c\u00f9ng xem x\u00e9t m\u1ed9t h\u00e0m kh\u00e1c: <pre><code>function justTen() {\n    return 10;\n}\n</code></pre></p> <p>N\u1ebfu h\u00e0m <code>justTen</code> l\u00e0 thu\u1ea7n khi\u1ebft, n\u00f3 ch\u1ec9 c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t h\u1eb1ng s\u1ed1. T\u1ea1i sao? \u0110\u01a1n gi\u1ea3n v\u00ec n\u00f3 kh\u00f4ng c\u00f3 tham s\u1ed1 n\u00e0o c\u1ea3. V\u00ec th\u1ebf, \u0111\u1ec3 tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n c\u1ee7a h\u00e0m thu\u1ea7n khi\u1ebft, n\u00f3 kh\u00f4ng th\u1ec3 tham chi\u1ebfu \u0111\u1ebfn b\u1ea5t k\u00ec m\u1ed9t bi\u1ebfn n\u00e0o. L\u1ef1a ch\u1ecdn duy nh\u1ea5t c\u1ee7a n\u00f3 l\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t h\u1eb1ng s\u1ed1.</p> <p>M\u1ed9t h\u00e0m nh\u01b0 v\u1eady kh\u00f4ng nh\u1eadn m\u1ed9t tham s\u1ed1 n\u00e0o v\u00e0 kh\u00f4ng l\u00e0m vi\u1ec7c g\u00ec ngo\u00e0i tr\u1ea3 v\u1ec1 m\u1ed9t h\u1eb1ng s\u1ed1 ch\u1eafc ch\u1eafn s\u1ebd kh\u00f4ng c\u00f3 \u00edch. S\u1ebd t\u1ed1t h\u01a1n n\u1ebfu \u0111\u1ecbnh ngh\u0129a <code>justTen</code> l\u00e0 m\u1ed9t h\u1eb1ng s\u1ed1.</p> <p>C\u00e1c h\u00e0m thu\u1ea7n khi\u1ebft h\u1eefu \u00edch ph\u1ea3i nh\u1eadn \u00edt nh\u1ea5t m\u1ed9t tham s\u1ed1.</p> <p>Xem x\u00e9t ti\u1ebfp h\u00e0m sau \u0111\u00e2y: <pre><code>function addNoReturn(x, y) {\n    var z = x + y\n}\n</code></pre> H\u00e3y \u0111\u1ec3 \u00fd \u0111\u1ebfn c\u00e1ch h\u00e0m n\u00e0y ho\u1ea1t \u0111\u1ed9ng: N\u00f3 nh\u1eadn hai tham s\u1ed1 <code>x</code> v\u00e0 <code>y</code>, th\u1ef1c hi\u1ec7n ph\u00e9p c\u1ed9ng gi\u1eefa ch\u00fang v\u00e0 g\u00e1n gi\u00e1 tr\u1ecb c\u1ee7a k\u1ebft qu\u1ea3 v\u00e0o bi\u1ebfn <code>z</code> nh\u01b0ng kh\u00f4ng tr\u1ea3 v\u1ec1 g\u00ec c\u1ea3.</p> <p>\u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t h\u00e0m thu\u1ea7n khi\u1ebft v\u00ec n\u00f3 ch\u1ec9 t\u00e1c \u0111\u1ed9ng v\u00e0o c\u00e1c tham s\u1ed1 c\u1ee7a n\u00f3. Nh\u01b0ng v\u00ec h\u00e0m n\u00e0y kh\u00f4ng tr\u1ea3 v\u1ec1 g\u00ec c\u1ea3, n\u00ean n\u00f3 tr\u1edf n\u00ean v\u00f4 d\u1ee5ng.</p> <p>M\u1ed9t h\u00e0m thu\u1ea7n khi\u1ebft h\u1eefu \u00edch ph\u1ea3i tr\u1ea3 v\u1ec1 m\u1ed9t gi\u00e1 tr\u1ecb n\u00e0o \u0111\u00f3.</p> <p>H\u00e3y c\u00f9ng xem x\u00e9t l\u1ea1i h\u00e0m <code>add</code> \u1edf tr\u00ean: <pre><code>function add(x, y) {\n    return x + y;\n}\nconsole.log(add(1, 2)); // prints 3\nconsole.log(add(1, 2)); // still prints 3\nconsole.log(add(1, 2)); // WILL ALWAYS print 3\n</code></pre> Ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng <code>add(1, 2)</code> lu\u00f4n lu\u00f4n b\u1eb1ng 3. Kh\u00f4ng qu\u00e1 ng\u1ea1c nhi\u00ean, nh\u01b0ng th\u1ef1c ra l\u00ed do duy nh\u1ea5t l\u00e0 v\u00ec <code>add</code> l\u00e0 m\u1ed9t h\u00e0m thu\u1ea7n khi\u1ebft. N\u1ebfu h\u00e0m <code>add</code> s\u1eed d\u1ee5ng gi\u00e1 tr\u1ecb t\u1eeb b\u00ean ngo\u00e0i, ta s\u1ebd kh\u00f4ng bao gi\u1edd d\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c ch\u1eafc ch\u1eafn h\u00e0nh vi c\u1ee7a n\u00f3.</p> <p>H\u00e0m thu\u1ea7n khi\u1ebft lu\u00f4n lu\u00f4n tr\u1ea3 v\u1ec1 c\u00f9ng m\u1ed9t \u0111\u1ea7u ra v\u1edbi c\u00f9ng m\u1ed9t \u0111\u1ea7u v\u00e0o.</p> <p>V\u00ec h\u00e0m thu\u1ea7n khi\u1ebft kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn b\u00ean ngo\u00e0i, t\u1ea5t c\u1ea3 nh\u1eefng h\u00e0m sau \u0111\u01b0\u1ee3c coi l\u00e0 kh\u00f4ng thu\u1ea7n khi\u1ebft (impure) <pre><code>writeFile(fileName);\nupdateDatabaseTable(sqlCmd);\nsendAjaxRequest(ajaxRequest);\nopenSocket(ipAddress);\n</code></pre> T\u1ea5t c\u1ea3 nh\u1eefng h\u00e0m tr\u00ean \u0111\u1ec1u c\u00f3 c\u00e1i \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 t\u00e1c d\u1ee5ng ph\u1ee5 (Side Effects). Khi b\u1ea1n g\u1ecdi nh\u1eefng h\u00e0m n\u00e0y, ch\u00fang thay \u0111\u1ed5i files, b\u1ea3ng trong c\u01a1 s\u1edf d\u1eef li\u1ec7u, g\u1eedi d\u1eef li\u1ec7u \u0111\u1ebfn m\u1ed9t m\u00e1y ch\u1ee7 hay g\u1ecdi \u0111\u1ebfn h\u1ec7 \u0111i\u1ec1u h\u00e0nh \u0111\u1ec3 l\u1ea5y socket. Ch\u00fang kh\u00f4ng \u0111\u01a1n thu\u1ea7n thao t\u00e1c tr\u00ean c\u00e1c tham s\u1ed1 truy\u1ec1n v\u00e0o v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t gi\u00e1 tr\u1ecb n\u00e0o \u0111\u00f3. V\u00ec v\u1eady, b\u1ea1n kh\u00f4ng th\u1ec3 d\u1ef1 \u0111o\u00e1n ch\u1eafc ch\u1eafn r\u1eb1ng nh\u1eefng h\u00e0m n\u00e0y s\u1ebd tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb g\u00ec, k\u1ec3 c\u1ea3 v\u1edbi m\u1ed9t \u0111\u1ea7u v\u00e0o cho tr\u01b0\u1edbc.</p> <p>H\u00e0m thu\u1ea7n khi\u1ebft KH\u00d4NG c\u00f3 side effects (t\u00e1c d\u1ee5ng ph\u1ee5)</p> <p>Trong c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh th\u00f4ng d\u1ee5ng nh\u01b0 Javascript, Java hay C#, side effects c\u00f3 m\u1eb7t kh\u1eafp m\u1ecdi n\u01a1i. \u0110i\u1ec1u n\u00e0y khi\u1ebfn vi\u1ec7c debug r\u1ea5t kh\u00f3 kh\u0103n v\u00ec gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u1edf b\u1ea5t c\u1ee9 \u0111\u00e2u trong ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n. Khi b\u1ea1n g\u1eb7p m\u1ed9t l\u1ed7i g\u00e2y ra b\u1edfi vi\u1ec7c m\u1ed9t bi\u1ebfn n\u00e0o \u0111\u00f3 b\u1ecb thay \u0111\u1ed5i sai gi\u00e1 tr\u1ecb hay sai th\u1eddi \u0111i\u1ec3m, b\u1ea1n s\u1ebd t\u00ecm ki\u1ebfm \u1edf \u0111\u00e2u? M\u1ecdi n\u01a1i \u01b0? \u0110i\u1ec1u n\u00e0y ch\u1eb3ng t\u1ed1t ch\u00fat n\u00e0o.</p> <p>T\u1edbi \u0111\u00e2y, c\u00f3 th\u1ec3 b\u1ea1n s\u1ebd th\u1eafc m\u1eafc: \"L\u00e0m th\u1ebf qu\u00e1i n\u00e0o \u0111\u1ec3 l\u00e0m vi\u1ec7c g\u00ec \u0111\u00f3 v\u1edbi ch\u1ec9 nh\u1eefng h\u00e0m thu\u1ea7n khi\u1ebft?\".</p> <p>Trong Functional Programming, b\u1ea1n kh\u00f4ng ch\u1ec9 vi\u1ebft c\u00e1c h\u00e0m thu\u1ea7n khi\u1ebft. Functional Programming kh\u00f4ng th\u1ec3 lo\u1ea1i tr\u1eeb h\u1ebft c\u00e1c side effects m\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 c\u00f4 l\u1eadp ch\u00fang. V\u00ec ch\u01b0\u01a1ng tr\u00ecnh ph\u1ea3i t\u01b0\u01a1ng t\u00e1c v\u1edbi th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i, n\u00ean m\u1ed9t ph\u1ea7n n\u00e0o \u0111\u00f3 c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh ph\u1ea3i l\u00e0 kh\u00f4ng thu\u1ea7n khi\u1ebft (impure). M\u1ee5c ti\u00eau c\u1ee7a Functional Programming l\u00e0 gi\u1ea3m thi\u1ec3u t\u1ed1i \u0111a l\u01b0\u1ee3ng m\u00e3 ngu\u1ed3n kh\u00f4ng thu\u1ea7n khi\u1ebft v\u00e0 t\u00e1ch bi\u1ec7t ch\u00fang ra kh\u1ecfi ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh.</p>"},{"location":"translate/functional-programming-part-1/#immutability-tinh-bat-bien","title":"Immutability (t\u00ednh b\u1ea5t bi\u1ebfn)","text":"<p>B\u1ea1n c\u00f3 nh\u1edb khi l\u1ea7n \u0111\u1ea7u nh\u00ecn th\u1ea5y nh\u1eefng d\u00f2ng code nh\u01b0 th\u1ebf n\u00e0y: <pre><code>var x = 1;\nx = x + 1;\n</code></pre></p> <p>V\u00e0 c\u00f3 ai \u0111\u00f3 n\u00f3i v\u1edbi b\u1ea1n r\u1eb1ng b\u1ea1n ph\u1ea3i qu\u00ean t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9 b\u1ea1n h\u1ecdc \u0111\u01b0\u1ee3c trong m\u00f4n To\u00e1n? Trong To\u00e1n h\u1ecdc, <code>x</code> kh\u00f4ng bao gi\u1edd b\u1eb1ng <code>x+1</code>. </p> <p>Trong c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh th\u00f4ng d\u1ee5ng, \u0111i\u1ec1u \u0111\u00f3 l\u00e0 c\u00f3 th\u1ec3 v\u00e0 c\u00f3 ngh\u0129a l\u00e0 b\u1ea1n l\u1ea5y gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i c\u1ee7a <code>x</code>, c\u00f4ng th\u00eam <code>1</code> v\u00e0 g\u00e1n k\u1ebft qu\u1ea3 tr\u1edf l\u1ea1i bi\u1ebfn <code>x</code>. </p> <p>Nh\u01b0ng v\u1edbi functional programming, <code>x = x + 1</code> l\u00e0 sai quy t\u1eafc. N\u00ean n\u1ebfu b\u1ea1n \u0111\u00e3 tr\u00f3t qu\u00ean nh\u1eefng g\u00ec b\u1ea1n h\u1ecdc \u0111\u01b0\u1ee3c t\u1eeb m\u00f4n To\u00e1n, th\u00ec b\u00e2y gi\u1edd b\u1ea1n ph\u1ea3i nh\u1edb l\u1ea1i \u0111\u1ea5y.</p> <p>KH\u00d4NG c\u00f3 bi\u1ebfn (variables) trong Functional ProgrammingProgramming</p> <p>C\u00e1c gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c l\u01b0u v\u1eabn \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn nh\u01b0ng th\u1ef1c ra ch\u00fang l\u00e0 h\u1eb1ng s\u1ed1. \u0110i\u1ec1u \u0111\u00f3 ngh\u0129a l\u00e0 m\u1ed9t khi <code>x</code> nh\u1eadn m\u1ed9t gi\u00e1 tr\u1ecb n\u00e0o \u0111\u00f3, <code>x</code> s\u1ebd gi\u1eef gi\u00e1 tr\u1ecb \u0111\u00f3 cho \u0111\u1ebfn h\u1ebft v\u00f2ng \u0111\u1eddi c\u1ee7a n\u00f3 trong ch\u01b0\u01a1ng tr\u00ecnh. Ph\u1ea7n l\u1edbn bi\u1ebfn trong ch\u01b0\u01a1ng tr\u00ecnh l\u00e0 bi\u1ebfn \u0111\u1ecba ph\u01b0\u01a1ng (local variables), n\u00ean v\u00f2ng \u0111\u1eddi c\u1ee7a ch\u00fang t\u01b0\u01a1ng \u0111\u1ed1i ng\u1eafn. Nh\u01b0ng m\u1ed9t khi n\u00f3 t\u1ed3n t\u1ea1i, gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 kh\u00f4ng bao gi\u1edd thay \u0111\u1ed5i.</p> <p>Sau \u0111\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 m\u1ed9t h\u1eb1ng bi\u1ebfn (constant variable) trong Elm, m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh theo nguy\u00ean t\u1eafc Functional Programming \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 bi\u1ebfn trong l\u0129nh v\u1ef1c ph\u00e1t tri\u1ec3n Web:</p> <pre><code>addOneToSum y z =\n    let\n        x = 1\n    in\n        x + y + z\n</code></pre> <p>Trong v\u00ed d\u1ee5 tr\u00ean, <code>addOneToSum</code> l\u00e0 m\u1ed9t h\u00e0m nh\u1eadn 2 tham s\u1ed1 <code>y</code> v\u00e0 <code>z</code>. Trong kh\u1ed1i <code>let</code>, <code>x</code> \u0111\u01b0\u1ee3c g\u00e1n gi\u00e1 tr\u1ecb 1 v\u00e0 gi\u1eef nguy\u00ean gi\u00e1 tr\u1ecb n\u00f3 cho \u0111\u1ebfn h\u1ebft v\u00f2ng \u0111\u1eddi c\u1ee7a n\u00f3. V\u00f2ng \u0111\u1eddi c\u1ee7a n\u00f3 k\u1ebft th\u00fac khi ch\u01b0\u01a1ng tr\u00ecnh tho\u00e1t kh\u1ecfi h\u00e0m <code>addOneToSum</code> hay \u0111\u00fang h\u01a1n l\u00e0 sau khi kh\u1ed1i <code>let</code> \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n. Trong kh\u1ed1i <code>in</code>, ph\u00e9p c\u1ed9ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n bao g\u1ed3m c\u1ea3 gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong kh\u1ed1i <code>block</code> (<code>x</code>). Gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 l\u00e0 <code>x + y + z</code> hay ch\u00ednh x\u00e1c h\u01a1n l\u00e0 <code>1 + y + z</code> v\u00ec <code>x = 1</code>.</p> <p>M\u1ed9t l\u1ea7n n\u1eefa, ch\u1eafc b\u1ea1n s\u1ebd ph\u1ea3i th\u1ed1t l\u00ean: \"L\u00e0m th\u1ebf qu\u00e1i n\u00e0o \u0111\u1ec3 l\u1eadp tr\u00ecnh m\u00e0 kh\u00f4ng d\u00f9ng bi\u1ebfn c\u01a1 ch\u1ee9?\"</p> <p>H\u00e3y ngh\u0129 \u0111\u1ebfn nh\u1eefng tr\u01b0\u1eddng h\u1ee3p m\u00e0 b\u1ea1n mu\u1ed1n thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn. C\u00f3 hai tr\u01b0\u1eddng h\u1ee3p ph\u1ed5 bi\u1ebfn m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 ngh\u0129 \u0111\u1ebfn: thay \u0111\u1ed5i \u0111a bi\u1ebfn (v\u00ed d\u1ee5 g\u00e1n l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn b\u1ea5t k\u00ec) hay thay \u0111\u1ed5i \u0111\u01a1n bi\u1ebfn (v\u00ed d\u1ee5 nh\u01b0 bi\u1ebfn ch\u1ea1y trong v\u00f2ng l\u1eb7p).</p> <p>Functional Programming gi\u1ea3i quy\u1ebft tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u ti\u00ean b\u1eb1ng c\u00e1ch t\u1ea1o ra m\u1ed9t b\u1ea3n sao ch\u00e9p (copy) c\u1ee7a nh\u1eefng b\u1ea3n ghi (record) c\u00f3 gi\u00e1 tr\u1ecb thay \u0111\u1ed5i. N\u00f3 th\u1ef1c hi\u1ec7n \u0111i\u1ec1u \u0111\u00f3 m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 m\u00e0 kh\u00f4ng ph\u1ea3i sao ch\u00e9p to\u00e0n b\u1ed9 b\u1ea3n ghi, b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p \u0111i\u1ec1u \u0111\u00f3.</p> <p>Tr\u01b0\u1eddng h\u1ee3p th\u1ee9 hai c\u0169ng \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft ho\u00e0n to\u00e0n t\u01b0\u01a1ng t\u1ef1, b\u1eb1ng c\u00e1ch t\u1ea1o m\u1ed9t b\u1ea3n sao ch\u00e9p c\u1ee7a n\u00f3. V\u00e0 b\u1eb1ng c\u00e1ch kh\u00f4ng s\u1eed d\u1ee5ng v\u00f2ng l\u1eb7p</p> <p>T\u1ea5t nhi\u00ean, \u0111i\u1ec1u \u0111\u00f3 kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 ch\u00fang ta kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng v\u00f2ng l\u1eb7p, ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 Functional Programming kh\u00f4ng c\u00f3 nh\u1eefng c\u1ea5u tr\u00fac l\u1eb7p nh\u01b0 <code>for, while, do, repeat</code>,...</p> <p>Functional Programming s\u1eed d\u1ee5ng \u0111\u1ec7 quy \u0111\u1ec3 th\u1ef1c hi\u1ec7n v\u00f2ng l\u1eb7p.</p> <p>\u0110o\u1ea1n code sau minh ho\u1ea1 hai c\u00e1ch \u0111\u1ec3 th\u1ef1c hi\u1ec7n v\u00f2ng l\u1eb7p trong Javascript:</p> <pre><code>// simple loop construct\nvar acc = 0;\nfor (var i = 1; i &lt;= 10; ++i)\n    acc += i;\nconsole.log(acc); // prints 55\n// without loop construct or variables (recursion)\nfunction sumRange(start, end, acc) {\n    if (start &gt; end)\n        return acc;\n    return sumRange(start + 1, end, acc + start)\n}\nconsole.log(sumRange(1, 10, 0)); // prints 55\n</code></pre> <p>H\u00e3y \u0111\u1ec3 \u00fd c\u00e1ch ti\u1ebfp c\u1eadn th\u1ee9 hai. \u1ede \u0111\u00e2y, h\u00e0m \u0111\u1ec7 quy cho k\u1ebft qu\u1ea3 gi\u1ed1ng nh\u01b0 v\u00f2ng l\u1eb7p b\u1eb1ng c\u00e1ch g\u1ecdi \u0111\u1ebfn ch\u00ednh n\u00f3 v\u1edbi m\u1ed9t gi\u00e1 tr\u1ecb m\u1edbi c\u1ee7a <code>start</code> (<code>start + 1</code>) v\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb c\u1ed9ng d\u1ed3n m\u1edbi (<code>acc + start</code>). N\u00f3 kh\u00f4ng thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn. Thay v\u00e0o \u0111\u00f3, n\u00f3 s\u1eed d\u1ee5ng gi\u00e1 tr\u1ecb m\u1edbi \u0111\u01b0\u1ee3c t\u00ednh t\u1eeb nh\u1eefng gi\u00e1 tr\u1ecb c\u0169 c\u1ee7a bi\u1ebfn.</p> <p>Tuy nhi\u00ean, b\u1ea1n hi\u1ebfm khi nh\u00ecn th\u1ea5y \u0111o\u1ea1n code ki\u1ec3u n\u00e0y trong Javascript. M\u1ed9t ph\u1ea7n l\u00e0 b\u1edfi c\u00fa ph\u00e1p c\u1ee7a Javascript t\u01b0\u01a1ng \u0111\u1ed1i l\u1ed9n x\u1ed9n, ph\u1ea7n kh\u00e1c l\u00e0 t\u01b0 duy th\u00f4ng th\u01b0\u1eddng c\u1ee7a b\u1ea1n kh\u00f4ng ngh\u0129 \u0111\u1ebfn \u0111\u1ec7 quy.</p> <p>Trong ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Elm, \u0111i\u1ec1u d\u00f3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n m\u1ed9t c\u00e1ch d\u1ec5 \u0111\u1ecdc v\u00e0 d\u1ec5 hi\u1ec3u h\u01a1n:</p> <pre><code>sumRange start end acc =\n    if start &gt; end then\n        acc\n    else\n        sumRange (start + 1) end (acc + start) \n</code></pre> <p>H\u00e3y xem c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a h\u00e0m <code>sumRange</code>: <pre><code>sumRange 1 10 0 =      -- sumRange (1 + 1)  10 (0 + 1)\nsumRange 2 10 1 =      -- sumRange (2 + 1)  10 (1 + 2)\nsumRange 3 10 3 =      -- sumRange (3 + 1)  10 (3 + 3)\nsumRange 4 10 6 =      -- sumRange (4 + 1)  10 (6 + 4)\nsumRange 5 10 10 =     -- sumRange (5 + 1)  10 (10 + 5)\nsumRange 6 10 15 =     -- sumRange (6 + 1)  10 (15 + 6)\nsumRange 7 10 21 =     -- sumRange (7 + 1)  10 (21 + 7)\nsumRange 8 10 28 =     -- sumRange (8 + 1)  10 (28 + 8)\nsumRange 9 10 36 =     -- sumRange (9 + 1)  10 (36 + 9)\nsumRange 10 10 45 =    -- sumRange (10 + 1) 10 (45 + 10)\nsumRange 11 10 55 =    -- 11 &gt; 10 =&gt; 55\n55\n</code></pre></p> <p>C\u00f3 th\u1ec3 b\u1ea1n s\u1ebd ngh\u0129 r\u1eb1ng v\u00f2ng l\u1eb7p <code>for</code> d\u1ec5 hi\u1ec3u h\u01a1n so v\u1edbi c\u00e1ch l\u00e0m n\u00e0y. \u0110i\u1ec1u n\u00e0y tu\u1ef3 thu\u1ed9c v\u00e0o m\u1ee9c \u0111\u1ed9 quen thu\u1ed9c c\u1ee7a b\u1ea1n v\u1edbi nh\u1eefng ki\u1ec3u t\u01b0 duy kh\u00e1c nhau. Nh\u01b0ng nh\u1eefng v\u00f2ng l\u1eb7p kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy y\u00eau c\u1ea7u s\u1ef1 kh\u1ea3 bi\u1ebfn (mutability) v\u00e0 \u0111i\u1ec1u n\u00e0y kh\u00f4ng t\u1ed1t cho ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n. M\u1ed9t l\u1ee3i th\u1ebf r\u00f5 r\u00e0ng c\u1ee7a ki\u1ec3u \u0111\u1ec7 quy l\u00e0 trong ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n, b\u1ea1n ch\u1ec9 c\u00f3 quy\u1ec1n \u0111\u1ecdc c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn m\u00e0 th\u00f4i (read access only). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 kh\u00f4ng c\u00f3 b\u1ea5t k\u1ef3 ng\u01b0\u1eddi n\u00e0o, k\u1ec3 c\u1ea3 b\u1ea1n, c\u00f3 th\u1ec3 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn. V\u00e0 nh\u01b0 th\u1ebf, s\u1ebd kh\u00f4ng c\u00f3 l\u1ed7i n\u00e0o ph\u00e1t sinh t\u1eeb vi\u1ec7c thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn. </p> <p>H\u01a1n n\u1eefa, n\u1ebfu ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n ch\u1ea1y \u0111a lu\u1ed3ng, kh\u00f4ng c\u00f3 lu\u1ed3ng n\u00e0o c\u00f3 th\u1ec3 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn, d\u1eabn t\u1edbi vi\u1ec7c lu\u1ed3ng kh\u00e1c \u0111\u1ecdc sai gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn. Gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn l\u00e0 kh\u00f4ng \u0111\u1ed5i v\u00e0 n\u1ebfu m\u1ed9t lu\u1ed3ng mu\u1ed1n thay \u0111\u1ed5i gi\u00e1 tr\u1ecb \u0111\u00f3, n\u00f3 s\u1ebd ph\u1ea3i t\u1ea1o m\u1ed9t b\u1ea3n sao c\u1ee7a bi\u1ebfn.</p> <p>S\u1ef1 b\u1ea5t bi\u1ebfn (immutability) khi\u1ebfn code tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n v\u00e0 an to\u00e0n h\u01a1n.</p> <p>(C\u00f2n ti\u1ebfp)</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/","title":"Vi\u1ebft l\u1eddi gi\u1ea3i chi\u1ebfn th\u1eafng trong k\u00ec thi","text":"<p>Ngu\u1ed3n: USACO</p> <p>M\u1ed9t c\u00e1ch t\u1ed1t \u0111\u1ec3 s\u1eb5n s\u00e0ng cho thi \u0111\u1ea5u l\u00e0 vi\u1ebft m\u1ed9t chi\u1ebfn thu\u1eadt v\u1ec1 nh\u1eefng g\u00ec b\u1ea1n s\u1ebd l\u00e0m trong ph\u00f2ng thi. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea1n bi\u1ebft ph\u1ea3i l\u00e0m g\u00ec k\u1ec3 c\u1ea3 khi m\u1ecdi th\u1ee9 \u1ed5n v\u00e0 kh\u00f4ng \u1ed5n. B\u1eb1ng c\u00e1ch n\u00e0y b\u1ea1n c\u00f3 th\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian trong ph\u00f2ng thi cho vi\u1ec7c gi\u1ea3i b\u00e0i m\u00e0 thay v\u00ec ng\u1ed3i b\u1ed1i r\u1ed1i kh\u00f4ng bi\u1ebft l\u00e0m g\u00ec ti\u1ebfp theo... vi\u1ec7c n\u00e0y c\u00f3 t\u00e1c d\u1ee5ng nh\u01b0 chu\u1ea9n b\u1ecb ph\u1ea3n \u1ee9ng cho m\u1ecdi t\u00ecnh hu\u1ed1ng.</p> <p>Vi\u1ec7c chu\u1ea9n b\u1ecb t\u00e2m l\u00fd c\u0169ng kh\u00f4ng k\u00e9m ph\u1ea7n quan tr\u1ecdng.</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#ke-hoach-tac-chien-trong-phong-thi","title":"K\u1ebf ho\u1ea1ch t\u00e1c chi\u1ebfn trong ph\u00f2ng thi","text":"<p>TR\u01af\u1edaC TI\u00caN l\u00e0 \u0111\u1ecdc qua T\u1ea4T C\u1ea2 c\u00e1c b\u00e0i; vi\u1ebft nh\u00e1p thu\u1eadt to\u00e1n, \u0111\u1ed9 ph\u1ee9c t\u1ea1p, c\u00e1c s\u1ed1, c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, c\u00e1c chi ti\u1ebft hi\u1ec3m,... </p> <ul> <li>Brainstorm nhi\u1ec1u thu\u1eadt to\u00e1n nh\u1ea5t c\u00f3 th\u1ec3 - sau \u0111\u00f3 th\u00ec ch\u1ecdn c\u00e1i c\u00f3 v\u1ebb ngu nh\u1ea5t nh\u01b0ng d\u00f9ng \u0111\u01b0\u1ee3c!</li> <li>L\u00c0M TO\u00c1N! (\u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng gian v\u00e0 th\u1eddi gian, v\u00e0 th\u1ebf v\u00e0o \u0111\u00f3 nh\u1eefng tr\u01b0\u1eddng h\u1ee3p l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3)</li> <li>C\u1ed1 g\u1eafng chia nh\u1ecf thu\u1eadt to\u00e1n - s\u1eed d\u1ee5ng c\u00e1c tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t (suy bi\u1ebfn?).</li> <li>S\u1eafp x\u1ebfp c\u00e1c b\u00e0i to\u00e1n: vi\u1ec7c nh\u1eb9 tr\u01b0\u1edbc, theo \u0111\u1ed9 kh\u00f3 c\u1ee7a b\u00e0i to\u00e1n \u0111\u1ed1i v\u1edbi b\u1ea3n th\u00e2n(t\u1eeb th\u1ea5p t\u1edbi cao: \u0111\u00e3 l\u00e0m r\u1ed3i, d\u1ec5, kh\u00f4ng quen, kh\u00f3).</li> </ul> <p>Code - l\u1ea7n l\u01b0\u1ee3t t\u1eebng b\u00e0i:</p> <ul> <li>Quy\u1ebft \u0111\u1ecbnh ch\u1ecdn thu\u1eadt to\u00e1n.</li> <li>Vi\u1ebft test hi\u1ec3m.</li> <li>Vi\u1ebft c\u1ea5u tr\u00fac d\u1eef li\u1ec7u.</li> <li>Code th\u1ee7 t\u1ee5c input v\u00e0 ki\u1ec3m tra ( b\u1eb1ng c\u00e1ch vi\u1ebft th\u00eam m\u1ed9t th\u1ee7 t\u1ee5c output \u0111\u1ec3 show data?).</li> <li>Code th\u1ee7 t\u1ee5c output v\u00e0 ki\u1ec3m tra.</li> <li>L\u00e0m r\u00f5 trong t\u1eebng b\u01b0\u1edbc: Vi\u1ebft comment mi\u00eau t\u1ea3 logic c\u1ee7a thu\u1eadt to\u00e1n.</li> <li>L\u00e0m n\u00f3 ch\u1ea1y \u0111\u01b0\u1ee3c v\u00e0 ki\u1ec3m tra t\u00ednh \u0111\u00fang \u0111\u1eafn (s\u1eed d\u1ee5ng c\u00e1c test cases th\u00f4ng th\u01b0\u1eddng).</li> <li>C\u1ed1 g\u1eafng ch\u1ee9ng minh l\u1eddi gi\u1ea3i c\u1ee7a m\u00ecnh l\u00e0 sai - s\u1eed d\u1ee5ng c\u00e1c tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t.</li> <li>D\u1ea7n d\u1ea7n t\u1ed1i \u01b0u h\u00f3a - nh\u01b0ng ch\u1ec9 c\u1ea7n v\u1eeba \u0111\u1ee7, v\u00e0 gi\u1eef t\u1ea5t c\u1ea3 c\u00e1c phi\u00ean b\u1ea3n (s\u1eed d\u1ee5ng c\u00e1c test kh\u00f3 \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u1eddi gian ch\u1ea1y th\u1eadt s\u1ef1).</li> </ul>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#chien-thuat-kiem-soat-thoi-gian-va-kich-ban-khong-che-thiet-hai","title":"Chi\u1ebfn thu\u1eadt ki\u1ec3m so\u00e1t th\u1eddi gian v\u00e0 k\u1ecbch b\u1ea3n \"kh\u1ed1ng ch\u1ebf thi\u1ec7t h\u1ea1i\"","text":"<p>C\u00f3 k\u1ebf ho\u1ea1ch cho vi\u1ec7c ph\u1ea3i l\u00e0m g\u00ec cho nh\u1eefng tr\u01b0\u1eddng h\u1ee3p (c\u00f3 th\u1ec3 th\u1ea5y tr\u01b0\u1edbc \u0111\u01b0\u1ee3c) m\u00e0 m\u1ecdi th\u1ee9 \u0111i theo h\u01b0\u1edbng kh\u00f4ng \u1ed5n; t\u01b0\u1edfng t\u01b0\u1ee3ng nh\u1eefng v\u1ea5n \u0111\u1ec1 b\u1ea1n c\u00f3 th\u1ec3 g\u1eb7p ph\u1ea3i v\u00e0 t\u00ednh to\u00e1n m\u00ecnh s\u1ebd ph\u1ea3n \u1ee9ng th\u1ebf n\u00e0o. C\u00e2u h\u1ecfi ch\u00ednh l\u00e0 \"Khi n\u00e0o n\u00ean d\u00e0nh th\u00eam th\u1eddi gian debug, v\u00e0 khi n\u00e0o b\u1ecf qua \u0111\u1ec3 ti\u1ebfp t\u1ee5c?\". Xem x\u00e9t nh\u1eefng g\u1ee3i \u00fd sau:</p> <ul> <li>B\u1ea1n \u0111\u00e3 d\u00e0nh bao l\u00e2u \u0111\u1ec3 debug n\u00f3 r\u1ed3i?</li> <li>B\u1ea1n \u0111ang m\u1eafc ph\u1ea3i bug ki\u1ec3u g\u00ec?</li> <li>C\u00f3 ph\u1ea3i thu\u1eadt to\u00e1n sai kh\u00f4ng?</li> <li>C\u00f3 c\u1ea7n thay \u0111\u1ed5i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00f4ng?</li> <li>B\u1ea1n c\u00f3 manh m\u1ed1i n\u00e0o v\u1ec1 c\u00e1i sai n\u00e0y kh\u00f4ng?</li> <li>M\u1ed9t kho\u1ea3ng th\u1eddi gian ng\u1eafn (20 ph\u00fat) \u0111\u1ec3 debug c\u00f3 th\u1ec3 t\u1ed1t h\u01a1n l\u00e0 l\u00e0m vi\u1ec7c g\u00ec \u0111\u00f3 kh\u00e1c; nh\u01b0ng b\u1ea1n c\u00f3 th\u1ec3 s\u1ebd gi\u1ea3i \u0111\u01b0\u1ee3c m\u1ed9t b\u00e0i kh\u00e1c trong 45 ph\u00fat. </li> <li>Khi n\u00e0o th\u00ec quay l\u1ea1i b\u00e0i \u0111\u00e3 b\u1ecf qua tr\u01b0\u1edbc \u0111\u00f3, v\u00e0 khi n\u00e0o th\u00ec \u0111\u1ed5i b\u00e0i?</li> <li>X\u00e9t t\u1eeb th\u1eddi \u0111i\u1ec3m n\u00e0y tr\u1edf \u0111i - qu\u00ean h\u1ebft nh\u1eefng c\u1ed1 g\u1eafng tr\u01b0\u1edbc \u0111\u00f3, t\u1eadp trung v\u00e0o nh\u1eefng \u0111i\u1ec1u ph\u00eda tr\u01b0\u1edbc: L\u00e0m th\u1ebf n\u00e0o b\u1ea1n c\u00f3 th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c nhi\u1ec1u \u0111i\u1ec3m nh\u1ea5t trong m\u1ed9t gi\u1edd ti\u1ebfp theo v\u1edbi nh\u1eefng g\u00ec b\u1ea1n \u0111ang c\u00f3?</li> </ul> <p>N\u00ean c\u00f3 m\u1ed9t checklist cho nh\u1eefng g\u00ec ph\u1ea3i l\u00e0m tr\u01b0\u1edbc khi n\u1ed9p b\u00e0i:</p> <pre><code>Ng\u1eebng code 5 ph\u00fat tr\u01b0\u1edbc khi h\u1ebft gi\u1edd?\n*   T\u1eaft assert.\n*   T\u1eaft debugging output.\n</code></pre>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#tips-tricks","title":"Tips &amp; Tricks","text":"<ul> <li>Duy\u1ec7t tr\u00e2u khi n\u00e0o c\u00f2n c\u00f3 th\u1ec3.</li> <li>KISS (Keep It Simple, Stupid): \u0110\u01a1n gi\u1ea3n \u0111\u1ed3ng ngh\u0129a v\u1edbi th\u00f4ng minh!</li> <li>G\u1ee3i \u00fd: \u0111\u1ec3 \u00fd \u0111\u1ebfn gi\u1edbi h\u1ea1n d\u1eef li\u1ec7u ( \u0111\u01b0\u1ee3c vi\u1ebft trong \u0111\u1ec1).</li> <li>C\u1ee9 phung ph\u00ed \u00edt b\u1ed9 nh\u1edb n\u1ebfu \u0111i\u1ec1u \u0111\u00f3 gi\u00fap \u0111\u1eddi thanh th\u1ea3n h\u01a1n (n\u1ebfu nh\u01b0 c\u00f3 th\u1ec3 l\u00e0m v\u1eady).</li> <li>\u0110\u1eebng x\u00f3a k\u1ebft qu\u1ea3 sai khi debug, comment n\u00f3 ra.</li> <li>T\u1ed1i \u01b0u h\u00f3a d\u1ea7n d\u1ea7n, nh\u01b0ng ch\u1ec9 v\u1eeba \u0111\u1ee7 l\u00e0 \u0111\u01b0\u1ee3c.</li> <li>Gi\u1eef l\u1ea1i t\u1ea5t c\u1ea3 phi\u00ean b\u1ea3n!</li> <li>Code \u0111\u1ec3 debug:<ul> <li>c\u00e1ch kho\u1ea3ng l\u00e0 t\u1ed1t,</li> <li>\u0111\u1eb7t t\u00ean bi\u1ebfn c\u00f3 ngh\u0129a,</li> <li>l\u00e0m r\u00f5 code \u1edf t\u1eebng b\u01b0\u1edbc,</li> <li>VI\u1ebeT COMMENT TR\u01af\u1edaC KHI CODE.</li> </ul> </li> <li>Tr\u00e1nh d\u00f9ng pointer (con tr\u1ecf) n\u1ebfu c\u00f3 th\u1ec3.</li> <li>Tr\u00e1nh c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb \u0111\u1ed9ng b\u1eeba b\u00e3i: c\u1ed1 d\u00f9ng b\u1ed9 nh\u1edb t\u0129nh cho m\u1ecdi th\u1ee9.</li> <li>C\u1ed1 g\u1eafng kh\u00f4ng d\u00f9ng s\u1ed1 th\u1ef1c; n\u1ebfu nh\u01b0 ph\u1ea3i d\u00f9ng, h\u00e3y nh\u1eafm m\u1eaft cho qua (kh\u00f4ng bao gi\u1edd ki\u1ec3m tra b\u1eb1ng nhau).</li> <li>L\u1eddi khuy\u00ean v\u1ec1 comments:<ul> <li>Kh\u00f4ng d\u00e0i d\u00f2ng, ghi ch\u00fa ng\u1eafn g\u1ecdn.</li> <li>Ch\u1ec9 d\u00f9ng gi\u1ea3i th\u00edch nh\u1eefng ph\u00e9p to\u00e1n \u1edf m\u1ee9c cao: ++i; //t\u0103ng gi\u00e1 tr\u1ecb i... comment n\u00e0y c\u00f2n h\u01a1n l\u00e0 v\u00f4 d\u1ee5ng</li> <li>Gi\u1ea3i th\u00edch nh\u1eefng ch\u1ed7 ph\u1ee9c t\u1ea1p c\u1ee7a code.</li> <li>Ph\u00e2n ranh gi\u1edbi v\u00e0 gi\u1ea3i th\u00edch nh\u1eefng ph\u1ea7n c\u00f3 ch\u1ee9c n\u0103ng kh\u00e1c nhau.</li> <li>Vi\u1ebft cho m\u1ed9t ng\u01b0\u1eddi \u0111\u1ee7 th\u00f4ng minh \u0111\u1ec3 hi\u1ec3u b\u00e0i to\u00e1n nh\u01b0ng kh\u00f4ng th\u1ec3 hi\u1ec3u code.</li> <li>Vi\u1ebft t\u1ea5t c\u1ea3 nh\u1eefng \u0111i\u1ec1u khi\u1ebfn b\u1ea1n ph\u1ea3i suy ngh\u0129.</li> <li>T\u1ea5t c\u1ea3 nh\u1eefng ch\u1ed7 m\u00e0 \u00edt nh\u1ea5t m\u1ed9t l\u1ea7n khi\u1ebfn b\u1ea1n t\u1ef1 h\u1ecfi \"C\u00e1i \u0111\u00f3 \u0111\u1ec3 l\u00e0m g\u00ec th\u1ebf nh\u1ec9?\"</li> <li>Lu\u00f4n lu\u00f4n comment th\u1ee9 t\u1ef1 ch\u1ec9 s\u1ed1 c\u1ee7a m\u1ea3ng.</li> </ul> </li> <li>Gi\u1eef m\u1ed9t b\u1ea3n ghi v\u1ec1 bi\u1ec3u hi\u1ec7n c\u1ee7a b\u1ea3n th\u00e2n trong m\u1ed7i contest: nh\u1eefng th\u00e0nh c\u00f4ng, nh\u1eefng sai l\u1ea7m, v\u00e0 b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 l\u00e0m g\u00ec \u0111\u1ec3 c\u00f3 k\u1ebft qu\u1ea3 t\u1ed1t h\u01a1n; d\u00f9ng n\u00f3 \u0111\u1ec3 vi\u1ebft l\u1ea1i v\u00e0 c\u1ea3i thi\u1ec7n game plan c\u1ee7a b\u1ea1n!</li> </ul>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":""},{"location":"translate/USACO/Crafting-Winning-Solutions/#nhung-ieu-co-ban-va-cac-ki-hieu-khac","title":"Nh\u1eefng \u0111i\u1ec1u c\u01a1 b\u1ea3n v\u00e0 c\u00e1c k\u00ed hi\u1ec7u kh\u00e1c","text":"<p>Nh\u1eefng kh\u00e1i ni\u1ec7m n\u1ec1n t\u1ea3ng c\u1ee7a vi\u1ec7c \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p xoay quanh k\u00ed hi\u1ec7u \"O l\u1edbn\", v\u00ed d\u1ee5: \\(O(N)\\). K\u00ed hi\u1ec7u \\(O(N)\\) c\u00f3 ngh\u0129a th\u1eddi gian th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n hay b\u1ed9 nh\u1edb s\u1eed d\u1ee5ng s\u1ebd g\u1ea5p \u0111\u00f4i khi d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c g\u1ea5p \u0111\u00f4i. M\u1ed9t thu\u1eadt to\u00e1n \\(O(N^2)\\) s\u1ebd ch\u1ea1y ch\u1eadm h\u01a1n b\u1ed1n l\u1ea7n (ho\u1eb7c d\u00f9ng nhi\u1ec1u h\u01a1n 4x kh\u00f4ng gian l\u01b0u tr\u1eef) khi d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c g\u1ea5p \u0111\u00f4i. Thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p h\u1eb1ng s\u1ed1 v\u1ec1 th\u1eddi gian hay kh\u00f4ng gian \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(O(1)\\). Kh\u00e1i ni\u1ec7m n\u00e0y \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho c\u1ea3 b\u1ed9 nh\u1edb v\u00e0 th\u1eddi gian; \u1edf \u0111\u00e2y ch\u00fang ta s\u1ebd t\u1eadp trung b\u00e0n lu\u1eadn v\u1ec1 th\u1eddi gian.</p> <p>\u0110\u1ec3 t\u00ednh to\u00e1n th\u1eddi gian ch\u1ea1y \\(O()\\) c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh, ta \u0111\u00e1nh gi\u00e1 c\u00e1c v\u00f2ng l\u1eb7p c\u1ee7a n\u00f3. V\u00f2ng l\u1eb7p l\u1ed3ng nhau nhi\u1ec1u nh\u1ea5t (do \u0111\u00f3 ch\u1ea1y ch\u1eadm nh\u1ea5t) quy\u1ebft \u0111\u1ecbnh th\u1eddi gian ch\u1ea1y v\u00e0 s\u1ebd l\u00e0 v\u00f2ng l\u1eb7p duy nh\u1ea5t \u0111\u01b0\u1ee3c nh\u1eafc \u0111\u1ebfn khi b\u00e0n v\u1ec1 \\(O()\\). M\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 m\u1ed9t v\u00f2ng l\u1eb7p \u0111\u01a1n v\u00e0 m\u1ed9t v\u00f2ng l\u1eb7p l\u1ed3ng nhau (gi\u1ea3 s\u1eed m\u1ed7i v\u00f2ng l\u1eb7p \u0111\u01a1n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \\(N\\) l\u1ea7n) l\u00e0 \\(O(N^2)\\), m\u1eb7c d\u00f9 c\u00f2n c\u00f3 m\u1ed9t v\u00f2ng l\u1eb7p \\(O(N)\\).</p> <p>Hi\u1ec3n nhi\u00ean, \u0111\u1ec7 quy c\u0169ng \u0111\u01b0\u1ee3c xem l\u00e0 v\u00f2ng l\u1eb7p v\u00e0 ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec7 quy c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(b^N)\\), \\(O(N!)\\), hay th\u1eadm ch\u00ed l\u00e0 \\(O(N^N)\\).</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#rules-of-thumb-quy-tac-uoc-luong","title":"Rules of thumb (quy t\u1eafc \u01b0\u1edbc l\u01b0\u1ee3ng)","text":"<ul> <li>Khi ph\u00e2n t\u00edch thu\u1eadn to\u00e1n \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh n\u00f3 s\u1ebd ch\u1ea1y trong bao l\u00e2u v\u1edbi m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u cho s\u1eb5n, \u0111i\u1ec1u \u0111\u1ea7u ti\u00ean c\u1ea7n nh\u1edb l\u00e0: c\u00e1c m\u00e1y t\u00ednh hi\u1ec7n \u0111\u1ea1i (t\u1eeb 2004) c\u00f3 th\u1ec3 x\u1eed l\u00ed 100 tri\u1ec7u ph\u00e9p t\u00ednh tr\u00ean gi\u00e2y. Trong m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 gi\u1edbi h\u1ea1n th\u1eddi gian 5 gi\u00e2y, kho\u1ea3ng 500 tri\u1ec7u ph\u00e9p t\u00ednh c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n. Nh\u1eefng ch\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u t\u1ed1t c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n g\u1ea5p \u0111\u00f4i hay th\u1eadm ch\u00ed g\u1ea5p b\u1ed1n l\u1ea7n con s\u1ed1 \u0111\u00f3. Nh\u1eefng thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p c\u00f3 th\u1ec3 s\u1ebd ch\u1ec9 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c m\u1ed9t n\u1eeda s\u1ed1 \u0111\u00f3. Nh\u1eefng contest g\u1ea7n \u0111\u00e2y th\u01b0\u1eddng c\u00f3 gi\u1edbi h\u1ea1n th\u1eddi gian 1 gi\u00e2y cho nh\u1eefng b\u1ed9 d\u1eef li\u1ec7u l\u1edbn.</li> <li>T\u1ed1i \u0111a 16MB b\u1ed9 nh\u1edb</li> <li>\\(2^{10}\\) ~g\u1ea7n b\u1eb1ng~ \\(10^3\\)</li> <li>N\u1ebfu b\u1ea1n c\u00f3 \\(k\\) v\u00f2ng l\u1eb7p l\u1ed3ng nhau, m\u1ed7i v\u00f2ng l\u1eb7p th\u1ef1c hi\u1ec7n \\(N\\) l\u1ea7n th\u00ec ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N^k)\\).</li> <li>N\u1ebfu ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n \u0111\u1ec7 quy v\u1edbi \\(b\\) l\u1ea7n g\u1ecdi \u0111\u1ec7 quy \u1edf m\u1ed7i c\u1ea5p v\u00e0 c\u00f3 \\(l\\) c\u1ea5p th\u00ec ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(b^l)\\).</li> <li>Ghi nh\u1edb r\u1eb1ng c\u00f3 \\(N!\\) ho\u00e1n v\u1ecb, v\u00e0 \\(2^N\\) t\u1eadp con (hay t\u1ed5 h\u1ee3p) c\u1ee7a \\(N\\) ph\u1ea7n t\u1eed khi l\u00e0m vi\u1ec7c v\u1edbi nh\u1eefng thu\u1eadt to\u00e1n ki\u1ec3u th\u1ebf.</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian t\u1ed1t nh\u1ea5t \u0111\u1ec3 s\u1eafp x\u1ebfp \\(N\\) ph\u1ea7n t\u1eed l\u00e0 \\(O(N logN)\\)</li> <li>PH\u1ea2I L\u00c0M TO\u00c1N! Th\u1ebf s\u1ed1 v\u00e0o.</li> </ul>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>M\u1ed9t v\u00f2ng l\u1eb7p v\u1edbi \\(N\\) l\u1ea7n duy\u1ec7t l\u00e0 \\(O(N)\\): <pre><code>sum = 0\nfor i = sum to n\n    sum = sum + i\n</code></pre> M\u1ed9t v\u00f2ng l\u1eb7p k\u00e9p th\u01b0\u1eddng s\u1ebd l\u00e0 \\(O(N^2)\\): <pre><code>for i = 1 to n-1\n    for j = i + 1 to n\n        if (a[i] &gt; a[j])\n            swap(a[i],a[j])\n</code></pre> L\u01b0u \u00fd r\u1eb1ng m\u1eb7c d\u00f9 v\u00f2ng l\u1eb7p th\u1ef1c hi\u1ec7n \\({N * (N+1)/2}\\) l\u1ea7n duy\u1ec7t c\u00e2u l\u1ec7nh <code>if</code>, n\u00f3 v\u1eabn l\u00e0 \\(O(N^2)\\) v\u00ec g\u1ea5p \u0111\u00f4 i \\(N\\) v\u1eabn l\u00e0m g\u1ea5p b\u1ed1n l\u1ea7n th\u1eddi gian th\u1ef1c hi\u1ec7n.</p> <p>X\u00e9t m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n c\u00e2n b\u1eb1ng 4 levels:</p> <p></p> <p>M\u1ed9t thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm tr\u00ean m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n th\u00f4ng th\u01b0\u1eddng s\u1ebd c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(2^N)\\).</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#cac-phuong-phap-tao-lap-loi-giai","title":"C\u00e1c ph\u01b0\u01a1ng ph\u00e1p t\u1ea1o l\u1eadp l\u1eddi gi\u1ea3i","text":""},{"location":"translate/USACO/Crafting-Winning-Solutions/#tao-vs-loc","title":"T\u1ea1o vs. L\u1ecdc","text":"<p>C\u00e1c ch\u01b0\u01a1ng tr\u00ecnh t\u1ea1o ra nhi\u1ec1u k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 c\u00f3 v\u00e0 sau \u0111\u00f3 ch\u1ecdn ra nh\u1eefng k\u1ebft qu\u1ea3 \u0111\u00fang (t\u01b0\u1edfng t\u01b0\u1ee3ng 1 l\u1eddi gi\u1ea3i b\u00e0i 8 qu\u00e2n h\u1eadu) ch\u00ednh l\u00e0 l\u1ecdc. Nh\u1eefng l\u1eddi gi\u1ea3i m\u00e0 \u0111\u01b0\u1ee3c t\u1ea1o ra m\u00e0 kh\u00f4ng c\u1ea7n th\u1eed sai ch\u00ednh l\u00e0 t\u1ea1o. Nh\u00ecn chung, nh\u1eefng b\u1ed9 l\u1ecdc d\u1ec5 code h\u01a1n v\u00e0 ch\u1ea1y ch\u1eadm h\u01a1n. Th\u1eed l\u00e0m t\u00ednh \u0111\u1ec3 xem n\u1ebfu m\u1ed9t b\u1ed9 l\u1ecdc l\u00e0 \u0111\u1ee7 t\u1ed1t hay b\u1ea1n ph\u1ea3i th\u1eed t\u00ecm ra m\u1ed9t b\u1ed9 t\u1ea1o.</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#tinh-truoc","title":"T\u00ednh Tr\u01b0\u1edbc","text":"<p>\u0110\u00f4i khi s\u1ebd thu\u1eadn ti\u1ec7n n\u1ebfu t\u1ea1o m\u1ed9t b\u1ea3ng ho\u1eb7c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c cho ph\u00e9p t\u00ecm ki\u1ebfm k\u1ebft qu\u1ea3 \u0111\u00e3 t\u00ednh m\u1ed9t c\u00e1ch nhanh nh\u1ea5t. \u0110i\u1ec1u n\u00e0y g\u1ecdi l\u00e0 t\u00ednh tr\u01b0\u1edbc (v\u00e0 s\u1ebd ph\u1ea3i \u0111\u1ed5i b\u1ed9 nh\u1edb \u0111\u1ec3 l\u1ea5y th\u1eddi gian). C\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc d\u1eef li\u1ec7u r\u1ed3i \u0111\u1eb7t v\u00e0o ch\u01b0\u01a1ng tr\u00ecnh, sau \u0111\u00f3 g\u1ecdi khi ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y, ho\u1eb7c c\u00f3 th\u1ec3 l\u01b0u k\u1ebft qu\u1ea3 trong khi t\u00ednh. V\u00ed d\u1ee5:  m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh chuy\u1ec3n c\u00e1c k\u00ed t\u1ef1 t\u1eeb ch\u1eef in hoa sao ch\u1eef th\u01b0\u1eddng c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t ph\u00e9p t\u00ecm ki\u1ebfm tr\u00ean b\u1ea3ng r\u1ea5t nhanh m\u00e0 kh\u00f4ng c\u1ea7n \u0111i\u1ec1u ki\u1ec7n n\u00e0o. C\u00e1c b\u00e0i to\u00e1n trong cu\u1ed9c thi th\u01b0\u1eddng s\u1eed d\u1ee5ng s\u1ed1 nguy\u00ean t\u1ed1 - nhi\u1ec1u khi vi\u1ec7c t\u1ea1o ra m\u1ed9t danh s\u00e1ch c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u1ec3 s\u1eed d\u1ee5ng sau l\u00e0 m\u1ed9t vi\u1ec7c l\u00e0m th\u1ef1c t\u1ebf.</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#chia-nho-ieu-kho-nhat-trong-cac-ki-thi","title":"Chia Nh\u1ecf (\u0110i\u1ec1u Kh\u00f3 Nh\u1ea5t Trong C\u00e1c K\u00ec Thi)","text":"<p>D\u00f9 c\u00f3 d\u01b0\u1edbi 20 thu\u1eadt to\u00e1n c\u01a1 b\u1ea3n d\u00f9ng trong c\u00e1c k\u00ec th\u00ec l\u1eadp tr\u00ecnh, th\u1eed th\u00e1ch c\u1ee7a nh\u1eefng b\u00e0i to\u00e1n y\u00eau c\u1ea7u k\u1ebft h\u1ee3p hai thu\u1eadt to\u00e1n \u0111\u1ec3 gi\u1ea3i l\u1ea1i c\u1ef1c k\u00ec \u0111\u00e1ng s\u1ee3. Th\u1eed t\u00e1ch nh\u1eefng ch\u1ec9 d\u1eabn c\u1ee7a b\u00e0i to\u00e1n th\u00e0nh nh\u1eefng ph\u1ea7n kh\u00e1c nhau \u0111\u1ec3 c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi m\u1ed9t v\u00f2ng l\u1eb7p ho\u1eb7c v\u1edbi m\u1ed9t thu\u1eadt to\u00e1n kh\u00e1c v\u00e0 gi\u1ea3i \u0111\u1ed9c l\u1eadp nh\u1eefng ph\u1ea7n kh\u00e1c nhau c\u1ee7a b\u00e0i to\u00e1n. L\u01b0u \u00fd r\u1eb1ng \u0111\u00f4i khi b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00f9ng m\u1ed9t thu\u1eadt to\u00e1n hai l\u1ea7n \u0111\u1ec3 gi\u1ea3i nh\u1eefng ph\u1ea7n kh\u00e1c nhau c\u1ee7a d\u1eef li\u1ec7u (m\u1ed9t c\u00e1ch \u0111\u1ed9c l\u1eadp) nh\u1eb1m c\u1ea3i ti\u1ebfn th\u1eddi gian ch\u1ea1y.</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#tinh-oi-xung","title":"T\u00ednh \u0110\u1ed1i X\u1ee9ng","text":"<p>Nhi\u1ec1u b\u00e0i to\u00e1n c\u00f3 t\u00ednh \u0111\u1ed1i x\u1ee9ng (v\u00ed d\u1ee5: kho\u1ea3ng c\u00e1c gi\u1eefa hai \u0111i\u1ec3m th\u00f4ng th\u01b0\u1eddng l\u00e0 nh\u01b0 nhau theo hai chi\u1ec1u). T\u00ednh \u0111\u1ed1i x\u1ee9ng c\u00f3 th\u1ec3 l\u00e0 2 chi\u1ec1u, 4 chi\u1ec1u, 8 chi\u1ec1u, v\u00e0 h\u01a1n th\u1ebf n\u1eefa. C\u1ed1 g\u1eafng t\u1eadn d\u1ee5ng t\u00ednh \u0111\u1ed1i x\u1ee9ng \u0111\u1ec3 r\u00fat ng\u1eafn th\u1eddi gian ch\u1ea1y. M\u1ed9t v\u00ed d\u1ee5 c\u1ee5 th\u1ec3, v\u1edbi t\u00ednh \u0111\u1ed1i x\u1ee9ng 4 chi\u1ec1u, b\u1ea1n ch\u1ec9 c\u1ea7n gi\u1ea3i \\(1/4\\) b\u00e0i to\u00e1n v\u00e0 vi\u1ebft ra 4 k\u1ebft qu\u1ea3 \u0111\u1ed1i x\u1ee9ng t\u1eeb m\u1ed9t \u0111\u00e1p \u00e1n duy nh\u1ea5t (c\u1ea9n th\u1eadn v\u1edbi tr\u01b0\u1eddng h\u1ee3p t\u1ef1 \u0111\u1ed1i x\u1ee9ng, hi\u1ec3n nhi\u00ean ch\u1ec9 c\u1ea7n in ra m\u1ed9t hay hai l\u1ea7n).</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#xuoi-vs-nguoc","title":"Xu\u00f4i vs. Ng\u01b0\u1ee3c","text":"<p>\u0110i\u1ec1u b\u1ea5t ng\u1edd l\u00e0 nhi\u1ec1u b\u00e0i to\u00e1n khi \u0111\u01b0\u1ee3c gi\u1ea3i ng\u01b0\u1ee3c s\u1ebd t\u1ed1t h\u01a1n nhi\u1ec1u so v\u1edbi ki\u1ec3u ti\u1ebfp c\u1eadn xu\u00f4i. \u0110\u1ec3 \u00fd vi\u1ec7c x\u1eed l\u00fd d\u1eef li\u1ec7u theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c hay x\u00e2y d\u1ef1ng m\u1ed9t c\u00e1c ti\u1ebfp c\u1eadn m\u00e0 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c nh\u00ecn theo th\u1ee9 t\u1ef1 hay ki\u1ec3u h\u00ecnh kh\u00e1c v\u1edbi \u0111i\u1ec1u d\u1ec5 th\u1ea5y.</p>"},{"location":"translate/USACO/Crafting-Winning-Solutions/#gian-luoc-hoa","title":"Gi\u1ea3n L\u01b0\u1ee3c H\u00f3a","text":"<p>M\u1ed9t s\u1ed1 b\u00e0i to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u l\u1ea1i th\u00e0nh m\u1ed9t b\u00e0i to\u00e1n m\u1edbi m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 \u0111\u00e3 g\u1eb7p r\u1ed3i hay c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm l\u1eddi gi\u1ea3i h\u01a1n so v\u1edbi b\u00e0i to\u00e1n g\u1ed1c; \u0111\u01b0\u01a1ng nhi\u00ean b\u1ea1n ch\u1ec9 n\u00ean gi\u1ea3i b\u00e0i to\u00e1n d\u1ec5 h\u01a1n th\u00f4i. M\u1ed9t tr\u01b0\u1eddng h\u1ee3p kh\u00e1c, t\u01b0\u01a1ng t\u1ef1 ph\u00e9p quy n\u1ea1p, m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n ch\u1ec9 c\u1ea7n thay \u0111\u1ed5i m\u1ed9t ch\u00fat l\u1eddi gi\u1ea3i c\u1ee7a b\u00e0i to\u00e1n nh\u1ecf h\u01a1n \u0111\u1ec3 c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c c\u1ea3 b\u00e0i to\u00e1n l\u1edbn.</p>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/","title":"C\u00e0i \u0111\u1eb7t c\u00e2y ph\u00e2n \u0111o\u1ea1n hi\u1ec7u qu\u1ea3 (Efficient and easy segment trees)","text":"<p>Ngu\u1ed3n: Codeforces - Efficient and Easy Segment Tree</p> <p>H\u1ea7u h\u1ebft c\u00e1c b\u1ea1n tham gia v\u00e0o c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh \u0111\u1ec1u kh\u00e1 quen thu\u1ed9c v\u1edbi c\u00e2y ph\u00e2n \u0111o\u1ea1n, ch\u1eb3ng h\u1ea1n qua b\u00e0i vi\u1ebft n\u00e0y. N\u1ebfu ch\u01b0a, b\u1ea1n n\u00ean xem b\u00e0i vi\u1ebft n\u00e0y tr\u01b0\u1edbc, \u0111\u1ec3 so s\u00e1nh c\u00e1ch th\u1ef1c hi\u1ec7n v\u00e0 ch\u1ecdn \u0111\u01b0\u1ee3c c\u00e1ch t\u1ed1t nh\u1ea5t cho m\u00ecnh.</p>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#cap-nhat-tung-phan-tu-rieng-le-single-element-modifications","title":"C\u1eadp nh\u1eadt t\u1eebng ph\u1ea7n t\u1eed ri\u00eang l\u1ebb (single element modifications)","text":"<p>C\u00e2y ph\u00e2n \u0111o\u1ea1n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi ch\u00fang ta c\u00f3 m\u1ed9t m\u1ea3ng \\(A\\), th\u1ef1c hi\u1ec7n c\u00e1c ch\u1ec9nh s\u1eeda v\u00e0 truy v\u1ea5n tr\u00ean c\u00e1c \u0111o\u1ea1n li\u00ean ti\u1ebfp. V\u00ed d\u1ee5: ta c\u00f3 m\u1ed9t m\u1ea3ng \\(A\\) v\u1edbi \\(10^5\\) ph\u1ea7n t\u1eed v\u00e0 c\u1ea7n th\u1ef1c hi\u1ec7n \\(Q\\) thao t\u00e1c, m\u1ed7i thao t\u00e1c thu\u1ed9c 1 trong 2 lo\u1ea1i:</p> <ol> <li>Thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed: G\u00e1n \\(A_i = v\\).</li> <li>T\u00ednh t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed tr\u00ean \u0111o\u1ea1n b\u1ea5t k\u00ec: T\u00ednh \\(A_l + A_{l+1} + ... + A_r\\).</li> </ol>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#cay-nhi-phan-hoan-chinh-perfect-binary-tree","title":"C\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh (Perfect binary tree)","text":"<p>Ta c\u00e0i \u0111\u1eb7t Segment Tree b\u1eb1ng m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh c\u00f3 d\u1ea1ng nh\u01b0 sau:</p> <p></p> <p>Trong h\u00ecnh v\u1ebd tr\u00ean:</p> <ul> <li>Ta d\u00f9ng k\u00fd hi\u1ec7u Ch\u1ec9 s\u1ed1 n\u00fat: \u0111o\u1ea1n \\([l, r)\\) (k\u00fd hi\u1ec7u \u0111o\u1ea1n ch\u1ee9a bi\u00ean \\(l\\) v\u00e0 kh\u00f4ng ch\u1ee9a bi\u00ean \\(r\\)).</li> <li>T\u1ea1i h\u00e0ng cu\u1ed1i l\u01b0u c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng (\u0111\u00e1nh s\u1ed1 t\u1eeb 0) l\u00e0 c\u00e1c l\u00e1 c\u1ee7a c\u00e2y.</li> </ul> <p>Gi\u1ea3 s\u1eed \u0111\u1ed9 d\u00e0i c\u1ee7a m\u1ea3ng l\u00e0 l\u0169y th\u1eeba c\u1ee7a 2 (nh\u01b0 16 trong v\u00ed d\u1ee5) th\u00ec ta \u0111\u01b0\u1ee3c c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh. Khi \u0111i t\u1eeb d\u01b0\u1edbi l\u00ean ta gh\u00e9p c\u1eb7p n\u00fat c\u00f3 ch\u1ec9 s\u1ed1 \\((2 \\times i,2 \\times i+1)\\) v\u00e0 t\u1ed5ng h\u1ee3p gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang th\u00e0nh gi\u00e1 tr\u1ecb c\u1ee7a n\u00fat cha c\u00f3 ch\u1ec9 s\u1ed1 \\(i\\). B\u1eb1ng c\u00e1ch n\u00e0y, khi t\u00ednh t\u1ed5ng \u0111o\u1ea1n \\([3,11)\\), ta ch\u1ec9 c\u1ea7n c\u1ed9ng gi\u00e1 tr\u1ecb t\u1ea1i c\u00e1c n\u00fat 19,5,12 v\u00e0 26 (c\u00e1c n\u00fat \u0111\u01b0\u1ee3c in \u0111\u1eadm) m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i c\u1ed9ng c\u1ea3 8 gi\u00e1 tr\u1ecb trong \u0111o\u1ea1n. C\u00f9ng xem qua c\u00e1ch c\u00e0i \u0111\u1eb7t (C++) d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>const int N = 1e5;  // gi\u1edbi h\u1ea1n c\u1ee7a m\u1ea3ng\nint n;  // k\u00edch th\u01b0\u1edbc m\u1ea3ng\nint t[2 * N];\n\nvoid build() {  // kh\u1edfi t\u1ea1o c\u00e2y\n  for (int i = n - 1; i &gt; 0; --i)\n    t[i] = t[i&lt;&lt;1] + t[i&lt;&lt;1|1];\n}\n\nvoid modify(int p, int value) {  // g\u00e1n gi\u00e1 tr\u1ecb t\u1ea1i v\u1ecb tr\u00ed p\n  for (t[p += n] = value; p &gt; 1; p &gt;&gt;= 1)\n    t[p&gt;&gt;1] = t[p] + t[p^1];\n}\n\nint query(int l, int r) {  // t\u00ednh t\u1ed5ng \u0111o\u1ea1n [l, r)\n  int res = 0;\n  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n    if (l&amp;1) res += t[l++];\n    if (r&amp;1) res += t[--r];\n  }\n  return res;\n}\n\nint main() {\n  scanf(\"%d\", &amp;n);\n  for (int i = 0; i &lt; n; ++i) scanf(\"%d\", t + n + i);\n  build();\n  modify(0, 1);\n  printf(\"%d\\n\", query(3, 11));\n  return 0;\n}\n</code></pre> <p>\u1ede tr\u00ean l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111\u1ea7y \u0111\u1ee7 c\u00e1c thao t\u00e1c. C\u00e1c h\u00e0m ph\u1ee9c t\u1ea1p \u0111\u01b0\u1ee3c t\u00f3m t\u1eaft l\u1ea1i trong 5 m\u1ee5c d\u01b0\u1edbi \u0111\u00e2y.</p> <p>C\u00f9ng t\u00ecm hi\u1ec3u c\u00e1ch ch\u01b0\u01a1ng tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng m\u1ed9t c\u00e1ch r\u1ea5t hi\u1ec7u qu\u1ea3</p> <ol> <li>Ta c\u00f3 th\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c trong h\u00ecnh, c\u00e1c l\u00e1 \u0111\u01b0\u1ee3c l\u01b0u t\u1ea1i nh\u1eefng n\u00fat li\u00ean ti\u1ebfp v\u1edbi ch\u1ec9 s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(n\\), ph\u1ea7n t\u1eed th\u1ee9 \\(i\\) t\u01b0\u01a1ng \u1ee9ng n\u00fat c\u00f3 ch\u1ec9 s\u1ed1 l\u00e0 \\(i+n\\). Do \u0111\u00f3 ch\u00fang ta c\u00f3 th\u1ec3 l\u01b0u m\u1ea3ng ban \u0111\u1ea7u tr\u1ef1c ti\u1ebfp v\u00e0o c\u00e2y \u0111\u00fang v\u1ecb tr\u00ed c\u1ee7a t\u1eebng ph\u1ea7n t\u1eed.</li> <li>Tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n c\u00e1c truy v\u1ea5n ta c\u1ea7n kh\u1edfi t\u1ea1o c\u00e2y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n)\\). V\u00ec n\u00fat cha lu\u00f4n c\u00f3 ch\u1ec9 s\u1ed1 nh\u1ecf h\u01a1n c\u00e1c con c\u1ee7a n\u00f3 n\u00ean ta ch\u1ec9 c\u1ea7n duy\u1ec7t qua c\u00e1c n\u00fat theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n. Ph\u00e9p bi\u1ebfn \u0111\u1ed5i bit trong build() t\u01b0\u01a1ng \u1ee9ng v\u1edbi ph\u00e9p t\u00ednh <code>t[i] = t[2*i] + t[2*i+1]</code>. (Trong code tr\u00ean d\u00f9ng x\u1eed l\u00fd bit: <code>t[i] = t[i&lt;&lt;1] + t[i&lt;&lt;1|1]</code>).</li> <li>Thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed c\u0169ng kh\u00e1 \u0111\u01a1n gi\u1ea3n t\u1ed1n th\u1eddi gian t\u1ec9 l\u1ec7 v\u1edbi \u0111\u1ed9 cao c\u1ee7a c\u00e2y, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(\\log(n))\\). Ta ch\u1ec9 c\u1ea7n c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb t\u1ea1i c\u00e1c n\u00fat cha c\u1ee7a n\u00fat \u0111\u00f3. Do \u0111\u00f3 ch\u1ec9 c\u1ea7n \u0111i l\u00ean c\u00e2y bi\u1ebft r\u1eb1ng cha c\u1ee7a n\u00fat \\(p\\) l\u00e0 n\u00fat \\(p/2\\) (hay <code>p&gt;&gt;1</code>). Ph\u00e9p <code>p^1</code> bi\u1ebfn \u0111\u1ed5i \\(2 \\times i\\) th\u00e0nh \\(2 \\times i+1\\) hay ng\u01b0\u1ee3c l\u1ea1i, \u0111\u00f3 l\u00e0 n\u00fat con c\u00f2n l\u1ea1i c\u1ee7a n\u00fat \\(p\\).</li> <li>T\u00ednh t\u1ed5ng t\u1ed1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(log(n))\\). \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n t\u00ednh logic c\u1ee7a thu\u1eadt to\u00e1n b\u1ea1n c\u00f3 th\u1ec3 th\u1eed v\u1edbi v\u00ed d\u1ee5 \u0111o\u1ea1n \\(\\[3,11)\\) v\u00e0 th\u1ea5y r\u1eb1ng k\u1ebft qu\u1ea3 l\u00e0 t\u1ed5ng c\u1ee7a c\u00e1c n\u00fat 19, 26, 12 v\u00e0 5 (theo th\u1ee9 t\u1ef1). \u00dd t\u01b0\u1edfng chung l\u00e0 nh\u01b0 sau:</li> <li>N\u1ebfu \\(l\\) (bi\u00ean tr\u00e1i c\u1ee7a \u0111o\u1ea1n) l\u00e0 l\u1ebb (<code>if l&amp;1</code>) th\u00ec \\(l\\) l\u00e0 n\u00fat con ph\u1ea3i c\u1ee7a cha n\u00f3, c\u0169ng c\u00f3 ngh\u0129a l\u00e0 \u0111o\u1ea1n c\u1ea7n truy v\u1ea5n ch\u1ee9a n\u00fat \\(l\\) nh\u01b0ng kh\u00f4ng ch\u1ee9a cha n\u00f3. Do \u0111\u00f3 ta c\u1ed9ng <code>t[l]</code> v\u00e0o k\u1ebft qu\u1ea3 v\u00e0 nh\u1ea3y \u0111\u1ebfn n\u00fat b\u00ean ph\u1ea3i c\u1ee7a cha n\u00fat \\(l\\): \\(l=(l+1)/2\\).</li> <li>N\u1ebfu \\(l\\) ch\u1eb5n, n\u00f3 l\u00e0 con b\u00ean tr\u00e1i c\u1ee7a cha n\u00f3 v\u00e0 \u0111o\u1ea1n c\u1ea7n truy v\u1eabn c\u0169ng ch\u1ee9a cha n\u00f3  (tr\u1eeb khi \u0111o\u1ea1n b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi bi\u00ean ph\u1ea3i), n\u00ean ta nh\u1ea3y \u0111\u1ebfn cha c\u1ee7a n\u00fat \\(l\\): \\(l=l/2\\).</li> <li>T\u01b0\u01a1ng t\u1ef1 cho bi\u00ean ph\u1ea3i.</li> <li>Ta d\u1eebng khi 2 bi\u00ean ch\u1ea1m nhau.</li> </ol> <p>\u0110o\u1ea1n code ho\u1ea1t \u0111\u1ed9ng hi\u1ec7u qu\u1ea3 m\u00e0 kh\u00f4ng c\u1ea7n \u0111\u1ec7 quy hay c\u00e1c ph\u00e9p t\u00ednh kh\u00e1c nh\u01b0 t\u00ecm \u0111i\u1ec3m ch\u00ednh gi\u1eefa c\u1ee7a \u0111o\u1ea1n. Ta ch\u1ec9 c\u1ea7n duy\u1ec7t qua v\u00e0 t\u00ednh t\u1ed5ng c\u00e1c n\u00fat trong \u0111o\u1ea1n truy v\u1ea5n.</p>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#mang-kich-thuoc-bat-ki-arbitrary-sized-array","title":"M\u1ea3ng k\u00edch th\u01b0\u1edbc b\u1ea5t k\u00ec (Arbitrary sized array)","text":"<p>Ch\u00fang ta \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn c\u00e1c m\u1ea3ng c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 lu\u1ef9 th\u1eeba c\u1ee7a 2, n\u00ean c\u00e2y l\u00e0 c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh. Ph\u1ea7n ti\u1ebfp theo c\u00f3 th\u1ec3 s\u1ebd l\u00e0m b\u1ea1n hoang mang, chu\u1ea9n b\u1ecb s\u1eb5n s\u00e0ng nh\u00e9!</p> <p>\u0110o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y \u00e1p d\u1ee5ng cho m\u1ea3ng c\u00f3 \u0111\u1ed9 d\u00e0i b\u1ea5t k\u00ec.</p> <p>Ph\u1ea7n gi\u1ea3i th\u00edch s\u1ebd ph\u1ee9c t\u1ea1p h\u01a1n, tr\u01b0\u1edbc h\u1ebft h\u00e3y xem qua nh\u1eefng \u01b0u \u0111i\u1ec3m c\u1ee7a c\u1ee7a n\u00f3:</p> <ol> <li>C\u00e2y ph\u00e2n \u0111o\u1ea1n s\u1eed d\u1ee5ng b\u1ed9 nh\u1edb \u0111\u00fang \\(2 \\times n\\), kh\u00f4ng ph\u1ea3i \\(4 \\times n\\) nh\u01b0 m\u1ed9t s\u1ed1 c\u00e1ch c\u00e0i \u0111\u1eb7t kh\u00e1c.</li> <li>C\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng \u0111\u01b0\u1ee3c l\u01b0u tr\u00ean \u0111o\u1ea1n li\u00ean ti\u1ebfp b\u1eaft \u0111\u1ea7u t\u1eeb ch\u1ec9 s\u1ed1 \\(n\\).</li> <li>T\u1ea5t c\u1ea3 thao t\u00e1c \u0111\u1ec1u r\u1ea5t \u0111\u01a1n gi\u1ea3n v\u00e0 hi\u1ec7u qu\u1ea3.</li> </ol> <p>B\u1ea1n c\u00f3 th\u1ec3 b\u1ecf qua \u0111o\u1ea1n gi\u1ea3i th\u00edch n\u00e0y v\u00e0 xem code \u0111\u1ec3 th\u1ea5y t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a n\u00f3. N\u1ebfu h\u1ee9ng th\u00fa v\u1edbi ph\u1ea7n gi\u1ea3i th\u00edch, \u0111\u00e2y l\u00e0 h\u00ecnh \u1ea3nh c\u00e2y c\u1ee7a m\u1ea3ng c\u00f3 k\u00edch th\u01b0\u1edbc \\(n=13\\):</p> <p></p> <p>N\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t c\u00e2y \u0111\u01a1n l\u1ebb n\u1eefa, nh\u01b0ng l\u00e0 t\u1eadp c\u00e1c c\u00e2y nh\u1ecb ph\u00e2n bao g\u1ed3m:</p> <ul> <li>C\u00e2y c\u00f3 g\u1ed1c \u1edf v\u1ecb tr\u00ed 2 v\u1edbi \u0111\u1ed9 cao 4</li> <li>C\u00e2y c\u00f3 g\u1ed1c \u1edf v\u1ecb tr\u00ed 7 v\u1edbi \u0111\u1ed9 cao 2</li> <li>C\u00e2y c\u00f3 g\u1ed1c \u1edf v\u1ecb tr\u00ed 12 v\u1edbi \u0111\u1ed9 cao 2</li> <li>C\u00e2y c\u00f3 g\u1ed1c \u1edf v\u1ecb tr\u00ed 13 v\u1edbi \u0111\u1ed9 cao 1.</li> </ul> <p>C\u00e1c v\u1ecb tr\u00ed c\u00f3 d\u1ea5u g\u1ea1ch kh\u00f4ng bao gi\u1edd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 truy v\u1ea5n n\u00ean gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c l\u01b0u t\u1ea1i c\u00e1c n\u00fat \u0111\u00f3 kh\u00f4ng quan tr\u1ecdng.</p> <p>C\u00e1c l\u00e1 c\u00f3 \u0111\u1ed9 cao kh\u00e1c nhau nh\u01b0ng ta c\u00f3 th\u1ec3 s\u1eeda l\u1ea1i b\u1eb1ng c\u00e1ch c\u1eaft c\u00e2y ngay tr\u01b0\u1edbc v\u1ecb tr\u00ed \\(13\\) v\u00e0 chuy\u1ec3n ph\u1ea7n ph\u00eda b\u00ean ph\u1ea3i sang b\u00ean tr\u00e1i. Khi \u0111\u00f3, ta thu \u0111\u01b0\u1ee3c c\u1ea5u tr\u00fac m\u1edbi c\u00f3 d\u1ea1ng gi\u1ed1ng nh\u01b0 c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 (n\u1ebfu ch\u1ec9 quan t\u00e2m \u0111\u1ebfn nh\u1eefng thao t\u00e1c ta c\u1ea7n th\u1ef1c hi\u1ec7n). V\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7.</p> <p>Ch\u00fang ta th\u1eed x\u00e9t v\u1edbi \u0111o\u1ea1n \\([0,7)\\): Ta c\u00f3 \\(l=13\\), \\(r=20\\)</p> <ul> <li>\u1ede l\u1ea7n l\u1eb7p \u0111\u1ea7u:</li> <li><code>l&amp;1</code>, n\u00ean ta c\u1ed9ng <code>t[13]</code> v\u00e0o k\u1ebft qu\u1ea3</li> <li>G\u00e1n \\(l=7\\)</li> <li>G\u00e1n \\(r=10\\).</li> <li>\u1ede l\u1ea7n l\u1eb7p th\u1ee9 2:</li> <li><code>l&amp;1</code>, n\u00ean ta c\u1ed9ng <code>t[7]</code> v\u00e0o k\u1ebft qu\u1ea3</li> <li>G\u00e1n \\(l=4\\)</li> <li>G\u00e1n \\(r=5\\)</li> <li>L\u00fac n\u00e0y c\u00e1c n\u00fat \u0111\u00e3 \u1edf c\u00f9ng m\u1ed9t \u0111\u1ed9 cao.</li> <li>\u1ede l\u1ea7n l\u1eb7p th\u1ee9 3:</li> <li><code>r&amp;1</code> =&gt; c\u1ed9ng <code>t[4]</code> (<code>--r = 4</code>)</li> <li>G\u00e1n \\(l=2\\), \\(r=2\\) v\u00e0 d\u1eebng l\u1ea1i.</li> </ul>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#chinh-sua-tren-oan-truy-cap-tung-cac-phan-tu-le-modification-on-interval-single-element-access","title":"Ch\u1ec9nh s\u1eeda tr\u00ean \u0111o\u1ea1n, truy c\u1eadp t\u1eebng c\u00e1c ph\u1ea7n t\u1eed l\u1ebb (Modification on interval, single element access)","text":"<p>M\u1ed9t s\u1ed1 ng\u01b0\u1eddi g\u1eb7p kh\u00f3 kh\u0103n v\u00e0 ngh\u0129 m\u1ed9t c\u00e1ch ph\u1ee9c t\u1ea1p khi \u0111\u1ea3o c\u00e1c thao t\u00e1c, v\u00ed d\u1ee5 nh\u01b0:</p> <ol> <li>c\u1ed9ng m\u1ed9t gi\u00e1 tr\u1ecb v\u00e0o t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong \u0111o\u1ea1n</li> <li>t\u00ednh gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u00ec</li> </ol> <p>T\u1ea5t c\u1ea3 nh\u1eefng g\u00ec ch\u00fang ta ph\u1ea3i l\u00e0m trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \u0111\u1ed5i \u0111o\u1ea1n code modify  v\u00e0 query nh\u01b0 sau:</p> <pre><code>void modify(int l, int r, int value) {\n  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n    if (l&amp;1) t[l++] += value;\n    if (r&amp;1) t[--r] += value;\n  }\n}\n\nint query(int p) {\n  int res = 0;\n  for (p += n; p &gt; 0; p &gt;&gt;= 1)\n    res += t[p];\n  return res;\n}\n</code></pre> <p>N\u1ebfu sau khi th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c ch\u1ec9nh s\u1eeda, ta mu\u1ed1n t\u00ednh gi\u00e1 tr\u1ecb t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y, ta c\u00f3 th\u1ec3 \u0111\u1ea9y c\u00e1c thao t\u00e1c ch\u1ec9nh s\u1eeda xu\u1ed1ng c\u00e1c n\u00fat l\u00e1 b\u1eb1ng \u0111o\u1ea1n code d\u01b0\u1edbi \u0111\u00e2y. Sau khi th\u1ef1c hi\u1ec7n ta ch\u1ec9 c\u1ea7n duy\u1ec7t qua c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 b\u1eaft \u0111\u1ea7u t\u1eeb \\(n\\). B\u1eb1ng c\u00e1ch n\u00e0y ch\u00fang ta \u0111\u00e3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1eeb \\(\\mathcal{O}(n\\log{n})\\) c\u00f2n \\(\\mathcal{O}(n)\\) khi s\u1eed d\u1ee5ng build thay v\u00ec \\(n\\) thao t\u00e1c ch\u1ec9nh s\u1eeda.</p> <pre><code>void push() {\n  for (int i = 1; i &lt; n; ++i) {\n    t[i&lt;&lt;1] += t[i];\n    t[i&lt;&lt;1|1] += t[i];\n    t[i] = 0;\n  }\n}\n</code></pre> <p>Ch\u00fa \u00fd: \u0110o\u1ea1n code tr\u00ean kh\u00f4ng th\u1ec3 d\u00f9ng \u0111\u01b0\u1ee3c trong tr\u01b0\u1eddng h\u1ee3p th\u1ee9 t\u1ef1 c\u00e1c thao t\u00e1c ch\u1ec9nh s\u1eeda tr\u00ean 1 ph\u1ea7n t\u1eed \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn k\u1ebft qu\u1ea3. V\u00ed d\u1ee5: ph\u00e9p g\u00e1n gi\u00e1 tr\u1ecb cho 1 \u0111o\u1ea1n ph\u1ea7n t\u1eed. Ph\u1ea7n n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf ph\u1ea7n lazy propagation.</p>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#ham-ket-hop-khong-co-tinh-giao-hoan-non-commutative-combiner-functions","title":"H\u00e0m k\u1ebft h\u1ee3p kh\u00f4ng c\u00f3 t\u00ednh giao ho\u00e1n (Non-commutative combiner functions)","text":"<p>Ch\u00fang ta th\u1eed x\u00e9t ph\u00e9p k\u1ebft h\u1ee3p \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ph\u00e9p c\u1ed9ng. Ph\u00e9p c\u1ed9ng c\u00f3 t\u00ednh giao ho\u00e1n ngh\u0129a l\u00e0 th\u1ee9 t\u1ef1 th\u1ef1c hi\u1ec7n c\u00e1c ph\u00e9p t\u00ednh kh\u00f4ng quan tr\u1ecdng, ta c\u00f3 \\(a+b=b+a\\). H\u00e0m l\u1ea5y max v\u00e0 min c\u0169ng c\u00f3 t\u00ednh ch\u1ea5t t\u01b0\u01a1ng t\u1ef1, ch\u1ec9 thay th\u1ebf c\u00e1c ph\u00e9p <code>+</code> b\u1eb1ng m\u1ed9t trong hai h\u00e0m tr\u00ean v\u00e0 ta s\u1ebd c\u00f3 k\u1ebft qu\u1ea3. Nh\u01b0ng ch\u00fa \u00fd ph\u1ea3i kh\u1edfi t\u1ea1o c\u00e1c gi\u00e1 tr\u1ecb ban \u0111\u1ea7u th\u00e0nh v\u00f4 c\u1ef1c thay v\u00ec 0.</p> <p>Tuy nhi\u00ean, c\u00f3 m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p m\u00e0 ph\u00e9p k\u1ebft h\u1ee3p kh\u00f4ng c\u00f3 t\u00ednh giao ho\u00e1n, v\u00ed d\u1ee5 nh\u01b0 trong b\u00e0i 380C - Codeforces, xem ph\u00e2n t\u00edch \u1edf B\u00e0i vi\u1ebft v\u1ec1 Segment Tree. May m\u1eafn l\u00e0 c\u00e1ch l\u00e0m c\u1ee7a ta v\u1eabn c\u00f3 th\u1ec3 h\u1ed7 tr\u1ee3 ph\u00e9p k\u1ebft h\u1ee3p trong b\u00e0i tr\u00ean. Ta \u0111\u1ecbnh ngh\u0129a c\u1ea5u tr\u00fac <code>Node</code> v\u00e0 to\u00e1n t\u1eed <code>+</code> nh\u01b0 trong b\u00e0i vi\u1ebft tr\u00ean. Trong th\u1ee7 t\u1ee5c build ta d\u00f9ng to\u00e1n t\u1eed <code>+</code> m\u1edbi \u0111\u1ecbnh ngh\u0129a n\u00e0y. Trong modify, ta c\u1ea7n \u0111\u1ea3m b\u1ea3o th\u1ee9 t\u1ef1 \u0111\u00fang c\u1ee7a c\u00e1c n\u00fat con, bi\u1ebft r\u1eb1ng c\u00e1c n\u00fat con tr\u00e1i c\u00f3 ch\u1ec9 s\u1ed1 ch\u1eb5n. Khi truy v\u1ea5n k\u1ebft qu\u1ea3, ta l\u01b0u \u00fd l\u00e0 c\u00e1c n\u00fat t\u01b0\u01a1ng \u1ee9ng v\u1edbi n\u00fat bi\u00ean tr\u00e1i s\u1ebd d\u1ecbch t\u1eeb tr\u00e1i sang ph\u1ea3i, trong khi bi\u00ean ph\u1ea3i d\u1ecbch t\u1eeb ph\u1ea3i sang tr\u00e1i. \u0110o\u1ea1n code nh\u01b0 sau:</p> <pre><code>void modify(int p, const Node&amp; value) {\n  for (t[p += n] = value; p &gt;&gt;= 1;)\n    t[p] = t[p&lt;&lt;1] + t[p&lt;&lt;1|1];\n}\n\nNode query(int l, int r) {\n  Node resl, resr;\n  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n    if (l&amp;1) resl = resl + t[l++];\n    if (r&amp;1) resr = t[--r] + resr;\n  }\n  return resl + resr;\n}\n</code></pre>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#cap-nhat-oan-lazy-propagation","title":"C\u1eadp nh\u1eadt \u0111o\u1ea1n (Lazy propagation)","text":"<p>Ti\u1ebfp theo, ch\u00fang ta t\u00ecm hi\u1ec3u v\u1ec1 m\u1ed9t k\u0129 thu\u1eadt d\u00f9ng \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u1ea3 truy v\u1ea5n tr\u00ean \u0111o\u1ea1n v\u00e0 ch\u1ec9nh s\u1eeda tr\u00ean \u0111o\u1ea1n. \u0110\u1ea7u ti\u00ean ta c\u1ea7n \u0111\u1ecbnh ngh\u0129a th\u00eam bi\u1ebfn:</p> <pre><code>int h = sizeof(int) * 8 - __builtin_clz(n);\nint d[N];\n</code></pre> <p>\\(h\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a c\u00e2y v\u00e0 l\u00e0 bit cao nh\u1ea5t trong \\(n\\). <code>d[i]</code> l\u00e0 thao t\u00e1c \u0111\u01b0\u1ee3c l\u01b0u l\u1ea1i \u0111\u1ec3 truy\u1ec1n cho c\u00e1c n\u00fat con c\u1ee7a n\u00fat \\(i\\) khi c\u1ea7n thi\u1ebft (xem v\u00ed d\u1ee5 \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, ho\u1eb7c \u0111\u1ecdc th\u00eam Lazy Propagation trong b\u00e0i vi\u1ebft v\u1ec1 Segment Tree). K\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ea3ng l\u00e0 \\(N\\) v\u00ec ta kh\u00f4ng c\u1ea7n l\u01b0u th\u00f4ng tin n\u00e0y t\u1ea1i c\u00e1c n\u00fat l\u00e1 (do c\u00e1c n\u00fat l\u00e1 kh\u00f4ng c\u00f3 con). Do \u0111\u00f3 ta c\u1ea7n t\u1ea5t c\u1ea3 l\u00e0 \\(3 \\times N\\) b\u1ed9 nh\u1edb s\u1eed d\u1ee5ng.</p> <p>\u1ede tr\u00ean ta n\u00f3i <code>t[i]</code> l\u00e0 gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111o\u1ea1n c\u1ee7a n\u00f3. Nh\u01b0ng b\u00e2y gi\u1edd \u0111i\u1ec1u n\u00e0y kh\u00f4ng ho\u00e0n to\u00e0n \u0111\u00fang:</p> <ul> <li>Ta ph\u1ea3i th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c \u0111\u01b0\u1ee3c l\u01b0u l\u1ea1i v\u00e0o <code>d[i]</code> tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb n\u00fat \\(i\\) \u0111\u1ebfn g\u1ed1c c\u1ee7a c\u00e2y (t\u1ed5 ti\u00ean c\u1ee7a n\u00fat \\(i\\)).</li> <li>Khi c\u00e0i \u0111\u1eb7t, ta gi\u1ea3 s\u1eed l\u00e0 gi\u00e1 tr\u1ecb t\u1ea1i <code>t[i]</code> \u0111\u00e3 bao g\u1ed3m <code>d[i]</code>, n\u00ean \u0111\u01b0\u1eddng \u0111i b\u1eaft \u0111\u1ea7u t\u1eeb cha c\u1ee7a \\(i\\).</li> </ul> <p>Quay tr\u1edf l\u1ea1i v\u00ed d\u1ee5 \u0111\u1ea7u ti\u00ean v\u1edbi \u0111o\u1ea1n \\([3,11)\\), nh\u01b0ng b\u00e2y gi\u1edd ta s\u1ebd ch\u1ec9nh s\u1eeda t\u1ea5t gi\u00e1 tr\u1ecb c\u1ee7a t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong \u0111o\u1ea1n. \u0110\u1ec3 l\u00e0m \u0111i\u1ec1u n\u00e0y, ta s\u1ebd ch\u1ec9nh s\u1eeda <code>t[i]</code> v\u00e0 <code>d[i]</code> t\u1ea1i c\u00e1c n\u00fat: 19, 5, 12 v\u00e0 26.</p> <p>Sau \u0111\u00f3, khi c\u1ea7n t\u00ecm gi\u00e1 tr\u1ecb \u1edf m\u1ed9t n\u00fat, v\u00ed d\u1ee5 nh\u01b0 n\u00fat 22, ta c\u1ea7n ph\u1ea3i truy\u1ec1n c\u00e1c ch\u1ec9nh s\u1eeda t\u1eeb n\u00fat 5 xu\u1ed1ng. Ch\u00fa \u00fd r\u1eb1ng nh\u1eefng thay \u0111\u1ed5i c\u00f3 th\u1ec3 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn c\u00e1c gi\u00e1 tr\u1ecb <code>t[i]</code> tr\u00ean c\u00e2y nh\u01b0 sau: n\u00fat 19 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn n\u00fat 9, 4, 2 v\u00e0 1; n\u00fat 5 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn n\u00fat 2 v\u00e0 1. L\u1eadp lu\u1eadn ti\u1ebfp theo r\u1ea5t quan tr\u1ecdng \u0111\u1ebfn \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thao t\u00e1c ch\u1ec9nh s\u1eeda:</p> <p>Ch\u1ec9nh s\u1eeda tr\u00ean \u0111o\u1ea1n \\([l,r)\\) ch\u1ec9 \u1ea3nh h\u01b0\u1edfng gi\u00e1 tr\u1ecb <code>t[i]</code> c\u1ee7a c\u00e1c n\u00fat cha c\u1ee7a n\u00fat l\u00e1 \u1edf bi\u00ean: <code>l+n</code> v\u00e0 <code>r+n-1</code> (ngo\u1ea1i tr\u1eeb c\u00e1c gi\u00e1 tr\u1ecb l\u01b0u ch\u00ednh \u0111o\u1ea1n c\u1ee7a n\u00f3 - nh\u1eefng gi\u00e1 tr\u1ecb duy\u1ec7t \u0111\u1ebfn trong v\u00f2ng l\u1eb7p for).</p> <p>Ch\u1ee9ng minh</p> <ul> <li>Khi duy\u1ec7t bi\u00ean tr\u00e1i, c\u00e1c n\u00fat ta ch\u1ec9nh s\u1eeda trong v\u00f2ng l\u1eb7p lu\u00f4n l\u00e0 con ph\u1ea3i c\u1ee7a cha n\u00f3. Do \u0111\u00f3 t\u1ea5t c\u1ea3 c\u00e1c ch\u1ec9nh s\u1eeda tr\u01b0\u1edbc \u0111\u00f3 \u0111\u1ec1u l\u00e0 tr\u00ean c\u00e2y con c\u1ee7a n\u00fat tr\u00e1i c\u1ee7a n\u00fat cha. N\u00f3i c\u00e1ch kh\u00e1c ta c\u00f3 th\u1ec3 duy\u1ec7t n\u00fat cha thay v\u00ec c\u1ea3 hai con c\u1ee7a n\u00f3. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 cha tr\u1ef1c ti\u1ebfp hi\u1ec7n t\u1ea1i c\u0169ng l\u00e0 cha c\u1ee7a l\u00e1 <code>l+n</code>.</li> <li>Ch\u1ee9ng minh t\u01b0\u01a1ng t\u1ef1 cho bi\u00ean ph\u1ea3i.</li> </ul> <p>M\u1eddi c\u00e1c b\u1ea1n c\u00f9ng xem qua nh\u1eefng v\u00ed d\u1ee5 c\u1ee5 th\u1ec3.</p>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#tang-gia-tri-phan-tu-truy-van-tim-gia-tri-max-increment-modifications-queries-for-maximum","title":"T\u0103ng gi\u00e1 tr\u1ecb ph\u1ea7n t\u1eed, truy v\u1ea5n t\u00ecm gi\u00e1 tr\u1ecb max (Increment modifications, queries for maximum)","text":"<p>\u0110\u00e2y c\u00f3 l\u1ebd l\u00e0 tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n nh\u1ea5t. Code d\u01b0\u1edbi \u0111\u00e2y kh\u00f4ng ph\u1ed5 bi\u1ebfn v\u00e0 kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e1ch t\u1ed1i \u01b0u nh\u1ea5t, nh\u01b0ng l\u00e0 m\u1ed9t c\u00e1ch t\u1ed1t \u0111\u1ec3 b\u1eaft \u0111\u1ea7u.</p> <pre><code>void apply(int p, int value) {\n  t[p] += value;\n  if (p &lt; n)\n    d[p] += value;\n}\n\nvoid build(int p) {\n  while (p &gt; 1) {\n    p &gt;&gt;= 1;\n    t[p] = max(t[p&lt;&lt;1], t[p&lt;&lt;1|1]) + d[p];\n  }\n}\n\nvoid push(int p) {\n  for (int s = h; s &gt; 0; --s) {\n    int i = p &gt;&gt; s;\n    if (d[i] != 0) {\n      apply(i&lt;&lt;1, d[i]);\n      apply(i&lt;&lt;1|1, d[i]);\n      d[i] = 0;\n    }\n  }\n}\n\nvoid inc(int l, int r, int value) {\n  l += n, r += n;\n  int l0 = l, r0 = r;\n  for (; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n    if (l&amp;1) apply(l++, value);\n    if (r&amp;1) apply(--r, value);\n  }\n  build(l0);\n  build(r0 - 1);\n}\n\nint query(int l, int r) {\n  l += n, r += n;\n  push(l);\n  push(r - 1);\n  int res = -2e9;\n  for (; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n    if (l&amp;1) res = max(res, t[l++]);\n    if (r&amp;1) res = max(t[--r], res);\n  }\n  return res;\n}\n</code></pre> <p>T\u00ecm hi\u1ec3u l\u1ea7n l\u01b0\u1ee3t t\u1eebng th\u1ee7 t\u1ee5c m\u1ed9t. Ba th\u1ee7 t\u1ee5c \u0111\u1ea7u ti\u00ean kh\u00f4ng th\u1ef1c s\u1ef1 c\u1ea7n ph\u1ea3i bi\u1ebft:</p> <ol> <li>M\u1ed7i n\u00fat ch\u1ee9a 2 bi\u1ebfn, r\u1ea5t h\u1eefu \u00edch khi vi\u1ebft m\u1ed9t th\u1ee7 t\u1ee5c apply nh\u1eefng thay \u0111\u1ed5i cho c\u1ea3 hai. \\(p&lt;n\\) \u0111\u1ec3 ki\u1ec3m tra \\(p\\) kh\u00f4ng ph\u1ea3i l\u00e0 l\u00e1. M\u1ed9t t\u00ednh ch\u1ea5t quan tr\u1ecdng l\u00e0 c\u00e1c thao t\u00e1c khi ch\u00fang ta c\u00f9ng t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong m\u1ed9t \u0111o\u1ea1n th\u00ec gi\u00e1 tr\u1ecb max c\u0169ng t\u0103ng t\u01b0\u01a1ng \u1ee9ng.</li> <li>build c\u1eadp nh\u1eadt t\u1ea5t c\u1ea3 c\u00e1c cha c\u1ee7a n\u00fat cho tr\u01b0\u1edbc.</li> <li>push truy\u1ec1n t\u1ea5t c\u1ea3 c\u00e1c thay \u0111\u1ed5i t\u1eeb  t\u1ea5t c\u1ea3 n\u00fat cha c\u1ee7a n\u00fat hi\u1ec7n t\u1ea1i xu\u1ed1ng  b\u1eaft \u0111\u1ea7u t\u1eeb g\u1ed1c. Nh\u1eefng n\u00fat cha l\u00e0 ti\u1ec1n t\u1ed1 trong bi\u1ec3u di\u1ec5n nh\u1ecb ph\u00e2n c\u1ee7a c\u1ee7a \\(p\\), do \u0111\u00f3 ta d\u00f9ng ph\u00e9p d\u1ecbch bit \u0111\u1ec3 t\u00ednh to\u00e1n.</li> </ol> <p>Ti\u1ebfp theo l\u00e0 nh\u1eefng th\u1ee7 t\u1ee5c ch\u00ednh:</p> <ol> <li>Nh\u01b0 \u0111\u00e3 gi\u1ea3i th\u00edch \u1edf tr\u00ean, ta th\u1ef1c hi\u1ec7n c\u00e1c thay \u0111\u1ed5i v\u00f2ng l\u1eb7p quen thu\u1ed9c \u0111\u1ec3 c\u1eadp nh\u1eadt t\u1ea5t c\u1ea3 v\u00e0 th\u00eam m\u1ed9t vi\u1ec7c l\u00e0 g\u1ecdi h\u00e0m build.</li> <li>\u0110\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n, ta c\u0169ng s\u1eed d\u1ee5ng v\u00f2ng l\u1eb7p nh\u01b0 c\u0169, tuy nhi\u00ean tr\u01b0\u1edbc \u0111\u00f3 c\u1ea7n ph\u1ea3i \u0111\u1ea9y c\u00e1c thay \u0111\u1ed5i \u0111\u1ebfn nh\u1eefng n\u00fat s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 build, nh\u01b0 v\u1eady l\u00e0 \u0111\u1ee7 \u0111\u1ec3 \u0111\u1ea9y c\u00e1c thay \u0111\u1ed5i t\u1eeb c\u00e1c n\u00fat cha c\u1ee7a nh\u1eefng n\u00fat l\u00e1 \u1edf bi\u00ean.</li> </ol> <p>D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c tr\u00ean t\u1ed1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(log(n))\\).</p> <p>\u0110\u00e2y l\u00e0 tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n nh\u1ea5t v\u00ec 2 l\u00fd do:</p> <ol> <li>th\u1ee9 t\u1ef1 c\u00e1c thay \u0111\u1ed5i kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng k\u1ebft qu\u1ea3.</li> <li>khi c\u1eadp nh\u1eadt m\u1ed9t n\u00fat, ta kh\u00f4ng c\u1ea7n bi\u1ebft \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111o\u1ea1n n\u00f3 \u0111\u1ea1i di\u1ec7n.</li> </ol> <p>Ti\u1ebfp theo ta s\u1ebd \u1ee9ng d\u1ee5ng c\u00e1c ph\u01b0\u01a1ng ph\u00e1p trong m\u1ed9t v\u00ed d\u1ee5 ti\u1ebfp theo.</p>"},{"location":"translate/codeforces/Efficient-and-easy-segment-trees/#gan-gia-tri-moi-cho-phan-tu-truy-van-tong-assignment-modifications-sum-queries","title":"G\u00e1n gi\u00e1 tr\u1ecb m\u1edbi cho ph\u1ea7n t\u1eed, truy v\u1ea5n t\u1ed5ng (Assignment modifications, sum queries)","text":"<p>V\u00ed d\u1ee5 n\u00e0y d\u1ef1a tr\u00ean Timus 2042</p> <p>Ch\u00fang ta l\u1ea1i b\u1eaft \u0111\u1ea7u t\u1eeb c\u00e1c h\u00e0m tr\u1ee3 gi\u00fap. \u1ede \u0111\u00e2y ta c\u00f3 nhi\u1ec1u h\u00e0m h\u01a1n:</p> <pre><code>void calc(int p, int k) {\n  if (d[p] == 0) t[p] = t[p&lt;&lt;1] + t[p&lt;&lt;1|1];\n  else t[p] = d[p] * k;\n}\n\nvoid apply(int p, int value, int k) {\n  t[p] = value * k;\n  if (p &lt; n) d[p] = value;\n}\n</code></pre> <p>\u0110\u00e2y l\u00e0 nh\u1eefng h\u00e0m \u0111\u01a1n gi\u1ea3n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(1)\\) d\u00f9ng \u0111\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb t\u1ea1i n\u00fat \\(p\\) v\u00e0 th\u1ef1c hi\u1ec7n m\u1ed9t thay \u0111\u1ed5i cho n\u00fat. C\u00f3 2 \u0111i\u1ec1u c\u1ea7n gi\u1ea3i th\u00edch:</p> <ol> <li>Ta ki\u1ec3m tra <code>d[p] == 0</code> v\u00ec 0 l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb m\u00e0 kh\u00f4ng bao gi\u1edd \u0111\u01b0\u1ee3c d\u00f9ng trong c\u00e1c thay \u0111\u1ed5i. Trong tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb n\u00e0o nh\u01b0 v\u1eady, ta bu\u1ed9c ph\u1ea3i d\u00f9ng th\u00eam m\u1ea3ng \u0111\u00e1nh d\u1ea5u.</li> <li>Ta c\u00f3 th\u00eam m\u1ed9t tham s\u1ed1 \\(k\\), ch\u1ee9a \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111o\u1ea1n thu\u1ed9c n\u00fat \\(p\\). Tham s\u1ed1 \\(k\\) s\u1ebd \u0111\u01b0\u1ee3c gi\u1eef nguy\u00ean \u00fd ngh\u0129a trong c\u1ea3 \u0111o\u1ea1n code. C\u00f3 th\u1ec3 nh\u1eadn th\u1ea5y ta kh\u00f4ng th\u1ec3 t\u00ednh t\u1ed5ng n\u1ebfu kh\u00f4ng c\u00f3 tham s\u1ed1 n\u00e0y. Ta c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc gi\u00e1 tr\u1ecb \\(k\\) cho t\u1ea5t c\u1ea3 c\u00e1c n\u00fat hay suy ra t\u1eeb ch\u1ec9 s\u1ed1 c\u1ee7a n\u00fat tr\u00ean \u0111\u01b0\u1eddng \u0111i, nh\u01b0ng ta s\u1ebd t\u00ecm hi\u1ec3u m\u1ed9t c\u00e1ch kh\u00e1c kh\u00f4ng c\u1ea7n ph\u1ea3i s\u1eed d\u1ee5ng th\u00eam b\u1ed9 nh\u1edb hay t\u00ednh to\u00e1n.</li> </ol> <p>Ti\u1ebfp theo ta c\u1ea7n ch\u1ec9nh s\u1eed l\u1ea1i build v\u00e0 push. L\u01b0u \u00fd r\u1eb1ng ta \u0111ang c\u00f3 2 phi\u00ean b\u1ea3n: m\u1ed9t \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u tr\u01b0\u1edbc duy\u1ec7t qua to\u00e0n b\u1ed9 c\u00e2y trong \\(O(n)\\), m\u1ed9t \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong v\u00ed d\u1ee5 tr\u01b0\u1edbc m\u00e0 ch\u1ec9 duy\u1ec7t c\u00e1c n\u00fat cha c\u1ee7a m\u1ed9t n\u00fat l\u00e0 trong \\(O(log(n))\\). Ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00edch h\u1ee3p th\u00eam c\u00e1c ch\u1ee9c n\u0103ng m\u1edbi v\u00e0o c\u00f9ng m\u1ed9t th\u1ee7 t\u1ee5c.</p> <pre><code>void build(int l, int r) {\n  int k = 2;\n  for (l += n, r += n-1; l &gt; 1; k &lt;&lt;= 1) {\n    l &gt;&gt;= 1, r &gt;&gt;= 1;\n    for (int i = r; i &gt;= l; --i) calc(i, k);\n  }\n}\n\nvoid push(int l, int r) {\n  int s = h, k = 1 &lt;&lt; (h-1);\n  for (l += n, r += n-1; s &gt; 0; --s, k &gt;&gt;= 1)\n    for (int i = l &gt;&gt; s; i &lt;= r &gt;&gt; s; ++i) if (d[i] != 0) {\n      apply(i&lt;&lt;1, d[i], k);\n      apply(i&lt;&lt;1|1, d[i], k);\n      d[i] = 0;\n    }\n}\n</code></pre> <p>C\u1ea3 hai th\u1ee7 t\u1ee5c n\u00e0y th\u1ef1c hi\u1ec7n tr\u00ean \u0111o\u1ea1n b\u1ea5t k\u1ef3 v\u1edbi \u0111\u00f4 ph\u1ee9c t\u1ea1p \\(O(log(n)+\\|r-l\\|)\\). N\u1ebfu mu\u1ed1n bi\u1ebfn \u0111\u1ed5i m\u1ed9t \u0111o\u1ea1n tr\u00ean c\u00e2y, ta c\u00f3 th\u1ec3 vi\u1ebft nh\u01b0 sau:</p> <pre><code>push(l, r);\n...  // th\u1ee9c hi\u1ec7n b\u1ea5t k\u00ec th\u1ee9 g\u00ec l\u00ean c\u00e1c ph\u1ea7n t\u1eed trong \u0111o\u1ea1n [l, r)\nbuild(l, r);\n</code></pre> <p>C\u00f9ng t\u00ecm hi\u1ec3u c\u00e1ch  ho\u1ea1t \u0111\u1ed9ng. Tr\u01b0\u1edbc ti\u00ean, ch\u00fa \u00fd l\u00e0 ta \u0111\u00e3 thay \u0111\u1ed5i th\u00e0nh \u0111o\u1ea1n \\([l,r)\\) th\u00e0nh \\([l,r]\\) khi th\u1ef1c hi\u1ec7n <code>r+=n-1</code> \u0111\u1ec3 t\u00ednh ch\u00ednh x\u00e1c c\u00e1c n\u00fat cha. Do ta duy\u1ec7t c\u00e2y theo t\u1eebng t\u1ea7ng, n\u00ean c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng duy tr\u00ec \u0111\u1ed9 d\u00e0i c\u1ee7a \u0111o\u1ea1n hi\u1ec7n t\u1ea1i, lu\u00f4n lu\u00f4n l\u00e0 l\u0169y th\u1eeba c\u1ee7a \\(2\\). build \u0111i t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean, do \u0111\u00f3 ban \u0111\u1ea7u kh\u1edfi t\u1ea1o \\(k=2\\) (kh\u00f4ng ph\u1ea3i 1 v\u00ec ta kh\u00f4ng t\u00ednh t\u1ea1i n\u00fat l\u00e1 nh\u01b0ng b\u1eaft \u0111\u1ea7u t\u1eeb cha tr\u1ef1c ti\u1ebfp c\u1ee7a n\u00f3) v\u00e0 nh\u00e2n \u0111\u00f4i \\(k\\) t\u1ea1i m\u1ed7i t\u1ea7ng. push \u0111i t\u1eeb tr\u00ean xu\u1ed1ng d\u01b0\u1edbi, do \u0111\u00f3 gi\u00e1 tr\u1ecb ban \u0111\u1ea7u c\u1ee7a \\(k\\) ph\u1ee5 thu\u1ed9c v\u00e0o \u0111\u1ed9 cao c\u1ee7a c\u00e2y v\u00e0 b\u1ecb chia \\(2\\) sau m\u1ed7i t\u1ea7ng.</p> <p>C\u00e1c th\u1ee7 t\u1ee5c ch\u00ednh kh\u00f4ng thay \u0111\u1ed5i nhi\u1ec1u so v\u1edbi v\u00ed d\u1ee5 tr\u01b0\u1edbc, nh\u01b0ng modify c\u00f3 2 \u0111i\u1ec1u \u0111\u00e1ng ch\u00fa \u00fd:</p> <ol> <li>Do th\u1ee9 t\u1ef1 c\u1ee7a c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i l\u00e0 quan tr\u1ecdng, ta c\u1ea7n ph\u1ea3i \u0111\u1ea3m b\u1ea3o kh\u00f4ng c\u00f3 nh\u1eefng thay bi\u1ebfn \u0111\u1ed5i c\u0169 tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c n\u00fat m\u00e0 ta s\u1ebd c\u1eadp nh\u1eadt. \u0110i\u1ec1u n\u00e0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n khi g\u1ecdi push \u0111\u1ea7u ti\u00ean trong query.</li> <li>Ta c\u1ea7n ph\u1ea3i duy tr\u00ec gi\u00e1 tr\u1ecb c\u1ee7a \\(k\\).</li> </ol> <pre><code>void modify(int l, int r, int value) {\n  if (value == 0) return;\n  push(l, l + 1);\n  push(r - 1, r);\n  int l0 = l, r0 = r, k = 1;\n  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1, k &lt;&lt;= 1) {\n    if (l&amp;1) apply(l++, value, k);\n    if (r&amp;1) apply(--r, value, k);\n  }\n  build(l0, l0 + 1);\n  build(r0 - 1, r0);\n}\n\nint query(int l, int r) {\n  push(l, l + 1);\n  push(r - 1, r);\n  int res = 0;\n  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n    if (l&amp;1) res += t[l++];\n    if (r&amp;1) res += t[--r];\n  }\n  return res;\n}\n</code></pre> <p>\u0110\u1ec3 \u00fd ta th\u1ea5y ta th\u1ef1c hi\u1ec7n 3 l\u1ea7n \u0111i trong modify g\u1ea7n nh\u01b0 tr\u00ean c\u00f9ng c\u00e1c n\u00fat: 1 \u0111i xu\u1ed1ng d\u01b0\u1edbi c\u00e2y trong push, r\u1ed3i 2 \u0111i l\u00ean c\u00e2y. Ta c\u00f3 th\u1ec3 b\u1ecf l\u1ea7n cu\u1ed1i c\u00f9ng ch\u1ec9 v\u00e0 t\u00ednh c\u00e1c gi\u00e1 tr\u1ecb m\u1edbi khi c\u1ea7n thi\u1ebft, nh\u01b0ng code s\u1ebd tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p h\u01a1n:</p> <pre><code>void modify(int l, int r, int value) {\n  if (value == 0) return;\n  push(l, l + 1);\n  push(r - 1, r);\n  bool cl = false, cr = false;\n  int k = 1;\n  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1, k &lt;&lt;= 1) {\n    if (cl) calc(l - 1, k);\n    if (cr) calc(r, k);\n    if (l&amp;1) apply(l++, value, k), cl = true;\n    if (r&amp;1) apply(--r, value, k), cr = true;\n  }\n  for (--l; r &gt; 0; l &gt;&gt;= 1, r &gt;&gt;= 1, k &lt;&lt;= 1) {\n    if (cl) calc(l, k);\n    if (cr &amp;&amp; (!cl || l != r)) calc(r, k);\n  }\n}\n</code></pre> <p>Bi\u1ebfn boolean d\u00f9ng \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u xem ta \u0111\u00e3 th\u1ef1c hi\u1ec7n bi\u1ebfn \u0111\u1ed5i n\u00e0o \u1edf b\u00ean tr\u00e1i v\u00e0 \u1edf b\u00ean ph\u1ea3i. Xem m\u1ed9t v\u00ed d\u1ee5:</p> <p></p> <p>G\u1ecdi modify tr\u00ean \\([4,13)\\):</p> <ol> <li>\\(l=20, r=29\\), g\u1ecdi apply(28);</li> <li>\\(l=10, r=14\\), g\u1ecdi calc(14) - n\u00fat \u0111\u1ea7u ti\u00ean v\u1ec1 b\u00ean ph\u1ea3i c\u1ee7a \u0111o\u1ea1n hi\u1ec7n t\u1ea1i ch\u00ednh l\u00e0 cha c\u1ee7a n\u00fat \u0111\u01b0\u1ee3c bi\u1ebfn \u0111\u1ed5i cu\u1ed1i c\u00f9ng;</li> <li>\\(l=5, r=7\\), g\u1ecdi calc(7) v\u00e0 ti\u1ebfp \u0111\u00f3 l\u00e0 apply(5) v\u00e0 apply(6);</li> <li>\\(l=3, r=3\\), v\u00f2ng l\u1eb7p \u0111\u1ea7u ti\u00ean k\u1ebft th\u00fac.</li> </ol> <p>B\u00e2y gi\u1edd b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u l\u00fd do th\u1ef1c hi\u1ec7n <code>--l</code>, v\u00ec ta v\u1eabn c\u1ea7n ph\u1ea3i t\u00ednh gi\u00e1 tr\u1ecb m\u1edbi t\u1ea1i c\u00e1c n\u00fat 2, 3 v\u00e0 1. \u0110i\u1ec1u ki\u1ec7n k\u1ebft th\u00fac l\u00e0 <code>r&gt;0</code> b\u1edfi v\u00ec c\u00f3 th\u1ec3 \\(l=1, r=1\\) sau v\u00f2ng l\u1eb7p \u0111\u1ea7u ti\u00ean, do \u0111\u00f3 ta c\u1ea7n ph\u1ea3i c\u1eadp nh\u1eadt cho g\u1ed1c, nh\u01b0ng <code>--l</code> d\u1eabn \u0111\u1ebfn \\(l=0\\).</p> <p>So s\u00e1nh v\u1edbi c\u00e1ch th\u1ef1c hi\u1ec7n c\u0169, ta \u0111\u00e3 gi\u1ea3m \u0111\u01b0\u1ee3c nh\u1eefng l\u1ea7n g\u1ecdi kh\u00f4ng c\u1ea7n thi\u1ebft calc(10), calc(5) v\u00e0 l\u1eb7p calc(1).</p>"},{"location":"translate/codeforces/hash-table/","title":"B\u1ea3ng b\u0103m (Hash Tables)","text":"<p>B\u1ea3ng b\u0103m l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 m\u1ed9t t\u1eeb \u0111i\u1ec3n. Trong \u0111\u00f3, m\u1ed7i kh\u00f3a mang theo m\u1ed9t gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng. Kh\u00f3a \u0111\u01b0\u1ee3c xem nh\u01b0 ch\u1ec9 s\u1ed1 c\u1ee7a gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng. B\u1ea3ng b\u0103m kh\u00f4ng nh\u01b0 c\u00e1c lo\u1ea1i t\u1eeb \u0111i\u1ec3n c\u1ed5 \u0111i\u1ec3n \u2013 m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c kh\u00f3a th\u00f4ng qua gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3.</p> <p>Kh\u00f4ng may, kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp v\u00e0o m\u1ed9t t\u1eeb \u0111i\u1ec3n \u0111\u01a1n gi\u1ea3n. \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac m\u00e0 qu\u00e1 tr\u00ecnh b\u0103m (hash) ra \u0111\u1eddi. Hash l\u00e0 qu\u00e1 tr\u00ecnh kh\u1edfi t\u1ea1o m\u1ed9t gi\u00e1 tr\u1ecb kh\u00f3a (th\u01b0\u1eddng l\u00e0 32 bit ho\u1eb7c 64 bit) t\u1eeb m\u1ed9t m\u1ea3nh d\u1eef li\u1ec7u. Gi\u00e1 tr\u1ecb hash n\u00e0y s\u1ebd gi\u00fap vi\u1ec7c s\u1eafp x\u1ebfp tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n. Gi\u00e1 tr\u1ecb hash c\u00f3 th\u1ec3 l\u00e0 n bit \u0111\u1ea7u ti\u00ean c\u1ee7a d\u1eef li\u1ec7u, n bit cu\u1ed1i c\u00f9ng, gi\u00e1 tr\u1ecb mod ho\u1eb7c l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t h\u00e0m ph\u1ee9c t\u1ea1p. S\u1eed d\u1ee5ng c\u00e1c gi\u00e1 tr\u1ecb hash, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t c\u00e1c hash buckets \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u. N\u1ebfu c\u00e1c gi\u00e1 tr\u1ecb hash \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 \u0111\u1ec1u, c\u00e1c buckets s\u1ebd \u0111\u01b0\u1ee3c \u0111i\u1ec1n v\u00e0o m\u1ed9t c\u00e1ch \u0111\u1ed3ng \u0111\u1ec1u. Trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p, c\u00e1c buckets kh\u00f4ng c\u00f3 ho\u1eb7c ch\u1ec9 c\u00f3 m\u1ed9t v\u00e0i \u0111\u1ed1i t\u01b0\u1ee3ng trong ch\u00fang. \u0110i\u1ec1u n\u00e0y l\u00e0m cho vi\u1ec7c t\u00ecm ki\u1ebfm c\u00f2n nhanh h\u01a1n n\u1eefa.</p> <p>Tr\u01b0\u1eddng h\u1ee3p m\u1ed9t hash bucket ch\u1ee9a nhi\u1ec1u h\u01a1n m\u1ed9t gi\u00e1 tr\u1ecb ta g\u1ecdi \u0111\u00f3 l\u00e0 va ch\u1ea1m. Vi\u1ec7c x\u1eed l\u00fd  va ch\u1ea1m r\u1ea5t quan tr\u1ecdng \u0111\u1ed1i v\u1edbi hi\u1ec7u n\u0103ng c\u1ee7a b\u1ea3ng b\u0103m. M\u1ed9t trong nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 c\u00e0i \u0111\u1eb7t c\u00e1c danh s\u00e1ch li\u00ean k\u1ebft \u1edf hash bucket. Khi \u0111\u00f3, m\u1ed7i ph\u1ea7n t\u1eed c\u00f9ng gi\u00e1 tr\u1ecb hash c\u00f3 th\u1ec3 k\u1ebft l\u1ea1i v\u1edbi nhau t\u1ea1i m\u1ed9t \u0111i\u1ec3m.M\u1ed9t s\u1ed1 c\u00e1ch l\u00e0m ph\u1ee9c t\u1ea1p h\u01a1n nh\u01b0: s\u1eed d\u1ee5ng li\u1ec1n k\u1ec1, hash m\u1ed9t l\u1ea7n n\u1eefa \u0111\u1ec3 c\u00f3 gi\u00e1 tr\u1ecb hash m\u1edbi,\u2026 Nh\u01b0 th\u01b0\u1eddng l\u1ec7, m\u1ed7i c\u00e1ch l\u00e0m \u0111\u1ec1u c\u00f3 nh\u1eefng \u0111i\u1ec3m t\u1ed1t, x\u1ea5u v\u1ec1 m\u1eb7t hi\u1ec7u su\u1ea5t.</p> <p>M\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n kh\u00e1c c\u1ee7a hash table ch\u00ednh l\u00e0 h\u1ec7 th\u1ed1ng s\u1ed1 th\u1eadp ph\u00e2n Dewey \u2013 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong r\u1ea5t nhi\u1ec1u th\u01b0 vi\u1ec7n. T\u1ea5t c\u1ea3 c\u00e1c s\u00e1ch \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111\u0103ng k\u00fd m\u1ed9t s\u1ed1 t\u01b0\u01a1ng \u1ee9ng d\u1ef1a v\u00e0o ch\u1ee7 \u0111\u1ec1 c\u1ee7a n\u00f3 ch\u1eb3ng h\u1ea1n nh\u01b0 nh\u1eefng s\u1ed1 g\u1ea7n 500 l\u00e0 c\u00e1c s\u00e1ch khoa h\u1ecdc, g\u1ea7n 700 l\u00e0 s\u00e1ch ngh\u1ec7 thu\u1eadt. Nh\u01b0 m\u1ed9t b\u1ea3ng hash th\u1eadt s\u1ef1, t\u1ed1c \u0111\u1ed9 c\u1ee7a \u0111\u1ec3 ng\u01b0\u1eddi \u0111\u1ecdc t\u00ecm ra quy\u1ec3n s\u00e1ch s\u1ebd d\u1ef1a v\u00e0o c\u00e1c hash bucket c\u00f3 th\u1eadt s\u1ef1 \u0111\u01b0\u1ee3c ph\u00e2n chia t\u1ed1t. Ch\u00fang ta s\u1ebd ph\u1ea3i m\u1ea5t nhi\u1ec1u th\u1eddi gian h\u01a1n \u0111\u1ec3 t\u00ecm m\u1ed9t quy\u1ec3n s\u00e1ch v\u1ec1 s\u01b0\u01a1ng m\u00f9 trong m\u1ed9t th\u01b0 vi\u1ec7n s\u00e1ch khoa h\u1ecdc so v\u1edbi m\u1ed9t th\u01b0 vi\u1ec7n s\u00e1ch v\u0103n h\u1ecdc c\u1ed5 \u0111i\u1ec3n.</p> <p>Trong ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng, b\u1ea3ng hash thu\u1eadn ti\u1ec7n \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u tham kh\u1ea3o, ch\u1eb3ng h\u1ea1n nh\u01b0 ch\u1eef vi\u1ebft t\u1eaft t\u00ean \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a c\u00e1c t\u1ed5 ch\u1ee9c. Trong gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n, b\u1ea3ng hash th\u1eadt s\u1ef1 h\u1eefu \u00edch \u0111\u1ec3 ti\u1ebfp c\u1eadn h\u01b0\u1edbng gi\u1ea3i quy\u1ebft chia \u0111\u1ec3 tr\u1ecb cho b\u00e0i to\u00e1n c\u00e1i t\u00fai (knapsack-type).</p> <p>Gi\u1ea3 s\u1eed, ch\u00fang ta \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u t\u00ecm m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng \u1ed1ng nh\u1ecf nh\u1ea5t \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi chi\u1ec1u d\u00e0i c\u1ed1 \u0111\u1ecbnh v\u00e0 ch\u00fang ta c\u00f3 38 \u1ed1ng. B\u1eb1ng c\u00e1ch chia th\u00e0nh hai t\u1eadp \u2013 19 v\u00e0 t\u00ednh to\u00e1n t\u1ea5t c\u1ea3 tr\u01b0\u1eddng h\u1ee3p gh\u00e9p \u1ed1ng c\u00f3 th\u1ec3 \u1edf m\u1ed7i t\u1eadp, ch\u00fang ta t\u1ea1o ra m\u1ed9t b\u1ea3ng hash k\u1ebft n\u1ed1i gi\u1eefa \u0111\u1ed9 d\u00e0i m\u00e0 c\u00e1c t\u1ed5 h\u1ee3p \u1ed1ng t\u1ea1o th\u00e0nh v\u1edbi s\u1ed1 l\u01b0\u1ee3ng \u1ed1ng \u00edt nh\u1ea5t c\u1ea7n d\u00f9ng. Sau \u0111\u00f3, v\u1edbi m\u1ed7i t\u1ed5 h\u1ee3p \u1ed1ng \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng trong m\u1ed9t t\u1eadp, ch\u00fang ta c\u00f3 th\u1ec3 tra c\u1ee9u li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi \u0111\u1ed9 d\u00e0i ph\u00f9 h\u1ee3p \u1edf t\u1eadp b\u00ean kia \u0111\u1ec3 c\u1ea3 hai \u1ed1ng t\u1ea1o n\u00ean m\u1ed9t \u0111\u01b0\u1eddng \u1ed1ng v\u1edbi \u0111\u1ed9 d\u00e0i y\u00eau c\u1ea7u v\u1edbi s\u1ed1 \u1ed1ng l\u00e0 \u00edt nh\u1ea5t.</p>"},{"location":"translate/codeforces/hash-table/#cac-tai-lieu-tham-khao","title":"C\u00e1c t\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>Topcoder</li> </ul>"},{"location":"translate/codeforces/palindrome-tree/","title":"Palindrome tree","text":"<p>Ngu\u1ed3n: http://adilet.org/blog/25-09-14/</p> <p>C\u00e2y Palindrome (hay c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Eertree), \u0111\u01b0\u1ee3c ph\u00e1t minh b\u1edfi Mikhail Rubinchik, l\u00e0 m\u1ed9t lo\u1ea1i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 gi\u1ea3i m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn Palindrome.</p>"},{"location":"translate/codeforces/palindrome-tree/#cau-truc-cua-cay-palindrome","title":"C\u1ea5u tr\u00fac c\u1ee7a c\u00e2y Palindrome","text":"<p>Nh\u01b0 m\u1ecdi lo\u1ea1i c\u00e2y kh\u00e1c, c\u00e2y Palindrome c\u0169ng c\u00f3 n\u00fat.</p> <p></p> <p>Ngo\u00e0i n\u00fat ra c\u00e2y c\u00f2n c\u00f3 c\u00e1c cung \u0111\u1ec3 n\u1ed1i c\u00e1c n\u00fat. Cung n\u1ed1i gi\u1eefa hai n\u00fat \\(u\\) v\u00e0 \\(v\\) \u0111\u01b0\u1ee3c g\u00e1n m\u1ed9t ch\u1eef c\u00e1i - v\u00ed d\u1ee5 ch\u1eef X - ngh\u0129a l\u00e0 ta c\u00f3 \u0111\u01b0\u1ee3c palindrome ch\u1ee9a \u1edf n\u00fat \\(v\\) b\u1eb1ng c\u00e1ch th\u00eam ch\u1eef X v\u00e0o hai b\u00ean c\u1ee7a palindrome ch\u1ee9a \u1edf n\u00fat \\(u\\).</p> <p></p> <p>Trong v\u00ed d\u1ee5 tr\u00ean, ta c\u00f3 \u0111\u01b0\u1ee3c x\u00e2u palindrome aba b\u1eb1ng c\u00e1ch th\u00eam ch\u1eef a v\u00e0o hai b\u00ean ch\u1eef b</p> <p>Cu\u1ed1i c\u00f9ng, ta c\u00f3 th\u00eam c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1. N\u00fat \\(u\\) c\u00f3 li\u00ean k\u1ebft h\u1eadu t\u1ed1 \u0111\u1ebfn n\u00fat \\(w\\), n\u1ebfu palindrome ch\u1ee9a \u1edf n\u00fat \\(w\\) l\u00e0 h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng l\u1edbn nh\u1ea5t c\u1ee7a palindrome ch\u1ee9a \u1edf n\u00fat \\(u\\). (h\u1eadu t\u1ed1 l\u00e0 m\u1ed9t x\u00e2u con ch\u1ee9a c\u00e1c ch\u1eef c\u00e1i cu\u1ed1i c\u00f9ng c\u1ee7a x\u00e2u, h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng (proper suffix) l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a m\u1ed9t x\u00e2u v\u00e0 ng\u1eafn h\u01a1n x\u00e2u \u0111\u00f3). T\u1eeb b\u00e2y gi\u1edd ta s\u1ebd g\u1ecdi palindrome l\u1edbn nh\u1ea5t m\u00e0 l\u00e0 h\u1eadu t\u1ed1 kh\u00f4ng t\u1ea7m th\u01b0\u1eddng c\u1ee7a m\u1ed9t x\u00e2u l\u00e0 palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a m\u1ed9t x\u00e2u.</p> <p></p> <p>Trong v\u00ed d\u1ee5 tr\u00ean, v\u00ec a l\u00e0 palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a aba n\u00ean c\u00f3 m\u1ed9t li\u00ean k\u1ebft h\u1eadu t\u1ed1 t\u1eeb n\u00fat ch\u1ee9a x\u00e2u aba \u0111\u1ebfn n\u00fat ch\u1ee9a x\u00e2u a.</p> <p>\u0110\u1eb7t t\u00ean c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0y l\u00e0 c\u00e2y Palindrome c\u00f3 v\u1ebb kh\u00f4ng h\u1ee3p l\u00ed l\u1eafm, v\u00ec n\u00f3 c\u00f3 t\u1eadn 2 g\u1ed1c. M\u1ed9t s\u1ebd ch\u1ee9a x\u00e2u palindrome gi\u1ea3 \u0111\u1ed9 d\u00e0i -1. G\u1ed1c n\u00e0y gi\u00fap ta c\u00e0i \u0111\u1eb7t c\u00e2y d\u1ec5 d\u00e0ng h\u01a1n, v\u00ec khi ta th\u00eam hai ch\u1eef c\u00e1i b\u1ea5t k\u00ec v\u00e0o hai b\u00ean x\u00e2u \u0111\u1ed9 d\u00e0i -1 th\u00ec ta s\u1ebd \u0111\u01b0\u1ee3c x\u00e2u \u0111\u1ed9 d\u00e0i 1 v\u00e0 n\u00f3 lu\u00f4n l\u00e0 palindrome. G\u1ed1c th\u1ee9 hai ch\u1ee9a m\u1ed9t x\u00e2u r\u1ed7ng (x\u00e2u c\u00f3 \u0111\u1ed9 d\u00e0i 0), v\u00e0 x\u00e2u n\u00e0y c\u0169ng l\u00e0 palindrome. Ta cho th\u00eam m\u1ed9t li\u00ean k\u1ebft h\u1eadu t\u1ed1 t\u1eeb hai g\u1ed1c n\u1ed1i \u0111\u1ebfn g\u1ed1c ch\u1ee9a palindrome \u0111\u1ed9 d\u00e0i -1.</p> <p>L\u01b0u \u00fd r\u1eb1ng ta kh\u00f4ng ch\u1ee9a x\u00e2u palindrome v\u00e0o n\u00fat khi c\u00e0i \u0111\u1eb7t th\u1ef1c t\u1ebf, n\u1ebfu l\u00e0m v\u1eady ta s\u1ebd ti\u00eau t\u1ed1n qu\u00e1 nhi\u1ec1u b\u1ed9 nh\u1edb. N\u00fat th\u1ef1c t\u1ebf s\u1ebd ch\u1ee9a \u0111\u1ed9 d\u00e0i x\u00e2u palindrome, ch\u1eef c\u00e1i \u0111\u01b0\u1ee3c g\u00e1n v\u00e0o c\u00e1c cung, v\u00e0 c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1.</p>"},{"location":"translate/codeforces/palindrome-tree/#xay-dung-cay-palindrome","title":"X\u00e2y d\u1ef1ng c\u00e2y Palindrome","text":"<p>\u1ede \u0111\u00e2y m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn t\u1ea1o c\u00e2y Palindrome ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c palindrome con c\u1ee7a m\u1ed9t x\u00e2u s. Ta th\u1ea5y: M\u1ed9t x\u00e2u \u0111\u1ed9 d\u00e0i \\(n\\) s\u1ebd kh\u00f4ng c\u00f3 qu\u00e1 \\(n\\) x\u00e2u palindrome con, v\u00ec v\u1eady c\u00e2y Palindrome s\u1ebd kh\u00f4ng c\u00f3 qu\u00e1 \\(n\\) + 2 n\u00fat (do ph\u1ea3i th\u00eam 2 g\u1ed1c n\u1eefa).</p> <p>Ta s\u1ebd x\u1eed l\u00ed t\u1eebng ch\u1eef c\u00e1i m\u1ed9t trong x\u00e2u. Gi\u1ea3 s\u1eed ta \u0111\u00e3 x\u1eed l\u00ed \u0111\u01b0\u1ee3c ti\u1ec1n t\u1ed1 \\(p\\) c\u1ee7a x\u00e2u, v\u00e0 gi\u1edd ta ph\u1ea3i x\u00e9t \u0111\u1ebfn ch\u1eef c\u00e1i \\(x\\) ti\u1ebfp theo.</p> <p></p> <p>Ta l\u01b0u l\u1ea1i \\(t\\) l\u00e0 palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a ti\u1ec1n t\u1ed1 \\(p\\).</p> <p></p> <p>V\u00ec \\(t\\) \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00ed, n\u00ean n\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9a trong m\u1ed9t n\u00fat n\u00e0o \u0111\u00f3 c\u1ee7a c\u00e2y Palindrome. N\u00fat n\u00e0y s\u1ebd c\u00f3 li\u00ean k\u1ebft h\u1eadu t\u1ed1 \u0111\u1ebfn m\u1ed9t n\u00fat n\u00e0o \u0111\u00f3, n\u00fat n\u00e0o \u0111\u00f3 l\u1ea1i c\u00f3 m\u1ed9t li\u00ean k\u1ebft h\u1eadu t\u1ed1 \u0111\u1ebfn m\u1ed9t n\u00fat kh\u00e1c v\u00e0 c\u1ee9 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady.</p> <p></p> <p>B\u00e2y gi\u1edd ta h\u00e3y t\u00ecm h\u1eadu t\u1ed1 palindrome c\u1ee7a ti\u1ec1n t\u1ed1 m\u1edbi \\(p+x\\). H\u1eadu t\u1ed1 \u0111\u00f3 s\u1ebd c\u00f3 d\u1ea1ng \\(xAx\\), v\u1edbi \\(A\\) l\u00e0 m\u1ed9t x\u00e2u n\u00e0o \u0111\u00f3, c\u00f3 th\u1ec3 r\u1ed7ng ho\u1eb7c c\u00f3 \u0111\u1ed9 d\u00e0i -1. V\u00ec \\(xAx\\) l\u00e0 palindrome, n\u00ean \\(A\\) c\u0169ng l\u00e0 palindrome, v\u00e0 n\u00f3 l\u00e0 m\u1ed9t h\u1eadu t\u1ed1 c\u1ee7a \\(p\\), v\u00ec v\u1eady ta c\u00f3 th\u1ec3 t\u00ecm \\(A\\) t\u1eeb \\(t\\) b\u1eb1ng c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1.</p> <p></p> <p>X\u00e2u \\(xAx\\) s\u1ebd l\u00e0 x\u00e2u palindrome con duy nh\u1ea5t c\u1ee7a x\u00e2u \\(p + x\\) m\u00e0 kh\u00f4ng xu\u1ea5t hi\u1ec7n \u1edf x\u00e2u \\(p\\). Th\u1eadt v\u1eady, ta th\u1ea5y t\u1ea5t c\u1ea3 x\u00e2u palindrome con m\u1edbi m\u00e0 ta ch\u01b0a th\u1ea5y trong x\u00e2u \\(p\\) ph\u1ea3i k\u1ebft th\u00fac b\u1eb1ng ch\u1eef \\(x\\), v\u00e0 do \u0111\u00f3 tr\u1edf th\u00e0nh h\u00e2u t\u1ed1 c\u1ee7a x\u00e2u \\(p + x\\). V\u00ec \\(xAx\\) l\u00e0 h\u1eadu t\u1ed1 palindrome l\u1edbn nh\u1ea5t c\u1ee7a \\(p + x\\), t\u1ea5t c\u1ea3 c\u00e1c h\u1eadu t\u1ed1 palindrome nh\u1ecf h\u01a1n n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y trong m\u1ed9t s\u1ed1 ti\u1ec1n t\u1ed1 c\u1ee7a \\(xAx\\) (v\u00ec \u0111\u1ed1i v\u1edbi b\u1ea5t k\u00ec h\u1eadu t\u1ed1 c\u1ee7a palindrome c\u00f3 m\u1ed9t ti\u1ec1n t\u1ed1 t\u01b0\u01a1ng t\u1ef1 t\u01b0\u01a1ng \u1ee9ng), v\u00e0 v\u00ec th\u1ebf ta \u0111\u00e3 th\u1ea5y ch\u00fang trong \\(p\\).</p> <p>V\u00ec v\u1eady, \u0111\u1ec3 x\u1eed l\u00ed ch\u1eef c\u00e1i \\(x\\) th\u00eam v\u00e0o, ta ph\u1ea3i \u0111i theo c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 c\u1ee7a \\(t\\) cho \u0111\u1ebfn khi ta t\u00ecm th\u1ea5y \\(A\\) th\u00edch h\u1ee3p (x\u00e2u \\(A\\) th\u00edch h\u1ee3p c\u00f3 th\u1ec3 c\u00f3 \u0111\u1ed9 d\u00e0i -1 n\u1ebfu ta ph\u1ea3i \u0111i \u0111\u1ebfn g\u1ed1c). Sau \u0111\u00f3 ta ki\u1ec3m tra xem c\u00f3 cung n\u00e0o \u0111\u01b0\u1ee3c g\u00e1n ch\u1eef \\(x\\) m\u00e0 t\u01b0\u01a1ng \u1ee9ng v\u1edbi n\u00fat ch\u1ee9a x\u00e2u \\(A\\), n\u1ebfu kh\u00f4ng, th\u00eam m\u1ed9t cung \u0111\u01b0\u1ee3c g\u00e1n ch\u1eef \\(x\\) n\u1ed1i t\u1eeb n\u00fat ch\u1ee9a x\u00e2u \\(A\\) \u0111\u1ebfn n\u00fat m\u1edbi ch\u1ee9a x\u00e2u \\(xAx\\).</p> <p>B\u00e2y gi\u1edd ta x\u00e9t \u0111\u1ebfn c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 n\u1ed1i t\u1eeb n\u00fat \\(xAx\\). N\u1ebfu n\u00fat n\u00e0y \u0111\u00e3 c\u00f3 t\u1eeb tr\u01b0\u1edbc, n\u00fat n\u00e0y \u0111\u00e3 c\u00f3 c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 v\u00e0 ta kh\u00f4ng ph\u1ea3i l\u00e0m g\u00ec c\u1ea3. N\u1ebfu kh\u00f4ng, ta c\u1ea7n ph\u1ea3i t\u00ecm palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a \\(xAx\\), c\u00f3 d\u1ea1ng \\(xBx\\), m\u00e0 \\(B\\) l\u00e0 m\u1ed9t x\u00e2u c\u00f3 th\u1ec3 r\u1ed7ng. B\u1eb1ng l\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean, \\(B\\) l\u00e0 palindrome h\u1eadu t\u1ed1 c\u1ee7a \\(p\\) v\u00e0 c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb \\(t\\) b\u1eb1ng c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1.</p> <p></p> <p>V\u1eady ta \u0111\u00e3 c\u00f3 \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n x\u00e2y d\u1ef1ng c\u00e2y Palindrome. X\u1eed l\u00ed t\u1eebng ch\u1eef c\u00e1i m\u1ed9t, l\u01b0u tr\u1eef palindrome h\u1eadu t\u1ed1 l\u1edbn nh\u1ea5t \\(t\\) c\u1ee7a ti\u1ec1n t\u1ed1 \u0111\u00e3 x\u1eed l\u00ed (kh\u1edfi t\u1ea1o \\(t\\) l\u00e0 x\u00e2u r\u1ed7ng). Khi x\u1eed l\u00ed th\u00eam ch\u1eef \\(x\\), ta ph\u1ea3i \u0111i qua c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 xu\u1ea5t ph\u00e1t t\u1eeb \\(t\\), cho \u0111\u1ebfn khi ta t\u00ecm \u0111\u01b0\u1ee3c palindrome \\(A\\) th\u00edch h\u1ee3p. X\u00e2u \\(xAx\\) s\u1ebd tr\u1edf th\u00e0nh s\u1ebd tr\u1edf th\u00e0nh h\u1eadu t\u1ed1 palindrome l\u1edbn nh\u1ea5t v\u00e0 tr\u1edf th\u00e0nh n\u00fat duy nh\u1ea5t c\u00f3 th\u1ec3 ch\u00e8n v\u00e0o c\u00e2y. \u0110\u1ec3 t\u1ea1o th\u00eam c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 ta ph\u1ea3i \u0111i theo c\u00e1c li\u00ean k\u1ebft h\u1eadu t\u1ed1 cho \u0111\u1ebfn khi t\u00ecm th\u1ea5y x\u00e2u palindrome \\(B\\), c\u00f3 th\u1ec3 th\u00eam \u0111\u01b0\u1ee3c hai ch\u1eef \\(x\\) \u1edf hai b\u00ean, r\u1ed3i ta th\u00eam li\u00ean k\u1ebft h\u1eadu t\u1ed1 t\u1eeb n\u00fat ch\u1ee9a x\u00e2u \\(xAx\\) \u0111\u1ebfn x\u00e2u \\(xBx\\).</p> <p>\u0110\u1ec3 bi\u1ebft th\u00eam th\u00f4ng tin chi ti\u1ebft, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o code. (b\u1ea1n kh\u00f4ng c\u1ea7n ch\u00fa \u00fd \u0111\u1ebfn bi\u1ebfn \\(num\\) v\u00ec n\u00f3 \u0111\u01b0\u1ee3c cho th\u00eam v\u00e0o \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n c\u1ee5 th\u1ec3). B\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y code kh\u00f4ng qu\u00e1 d\u00e0i c\u0169ng nh\u01b0 vi\u1ec7c c\u00e0i \u0111\u1eb7t r\u1ea5t \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"translate/codeforces/palindrome-tree/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>X\u00e9t qu\u00e1 tr\u00ecnh x\u00e2y d\u1ef1ng c\u00e2y Palindrome cho m\u1ed9t x\u00e2u \u0111\u1ed9 d\u00e0i \\(n\\). Ta th\u1ea5y r\u1eb1ng khi ta x\u1eed l\u00ed t\u1eebng ch\u1eef c\u00e1i m\u1ed9t, \u0111\u1ea7u c\u1ee7a li\u00ean k\u1ebft h\u1eadu t\u1ed1 palindrome l\u1edbn nh\u1ea5t c\u1ee7a ti\u1ec1n t\u1ed1 \u0111\u01b0\u1ee3c x\u1eed l\u00ed lu\u00f4n di chuy\u1ec3n sang b\u00ean ph\u1ea3i. Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a vi\u1ec7c x\u00e2y d\u1ef1ng c\u00e2y Palindrome l\u00e0 \\(O(n)\\).</p>"},{"location":"translate/codeforces/palindrome-tree/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"translate/codeforces/palindrome-tree/#em-so-luong-palindrome-xuat-hien-them","title":"\u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng palindrome xu\u1ea5t hi\u1ec7n th\u00eam","text":"<p>B\u00e0i to\u00e1n: Cho th\u00eam ch\u1eef c\u00e1i \\(x\\) v\u00e0o cu\u1ed1i x\u00e2u \\(S\\), \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng palindrome xu\u1ea5t hi\u1ec7n th\u00eam trong x\u00e2u \\(S\\). V\u00ed d\u1ee5 khi ta cho th\u00eam ch\u1eef c\u00e1i a v\u00e0o cu\u1ed1i x\u00e2u aba, ta c\u00f3 th\u00eam m\u1ed9t palindrome n\u1eefa l\u00e0 aa.</p> <p>L\u1eddi gi\u1ea3i kh\u00e1 l\u00e0 r\u00f5 r\u00e0ng: Ta x\u00e2y d\u1ef1ng c\u00e2y Palindrome cho x\u00e2u \\(S\\) ban \u0111\u1ea7u, v\u00e0 v\u1edbi m\u1ed7i ch\u1eef c\u00e1i m\u1edbi th\u00eam v\u00e0o, ta bi\u1ebft \u0111\u01b0\u1ee3c s\u1ed1 palindrome m\u1edbi xu\u1ea5t hi\u1ec7n th\u00eam b\u1eb1ng c\u00e1ch \u0111\u1ebfm s\u1ed1 n\u00fat v\u1eeba \u0111\u01b0\u1ee3c t\u1ea1o ra tr\u00ean c\u00e2y Palindrome. L\u01b0u \u00fd: s\u1ed1 palindrome xu\u1ea5t hi\u1ec7n th\u00eam sau khi th\u00eam m\u1ed9t ch\u1eef c\u00e1i v\u00e0o m\u1ed9t x\u00e2u b\u1eb1ng 1 ho\u1eb7c b\u1eb1ng 0.</p>"},{"location":"translate/codeforces/palindrome-tree/#em-so-luong-xau-con-lien-tiep-la-palindrome","title":"\u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng x\u00e2u con li\u00ean ti\u1ebfp l\u00e0 palindrome","text":"<p>Code gi\u1ea3i b\u00e0i n\u00e0y b\u1eb1ng c\u00e2y Palindrome \u0111\u00e3 c\u00f3 \u1edf tr\u00ean. B\u00e0i to\u00e1n n\u00e0y c\u00f2n c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng thu\u1eadt to\u00e1n Manachar, tuy v\u1eady ta n\u00ean gi\u1ea3i b\u1eb1ng c\u00e2y Palindrome v\u00ec c\u00e2y Palindrome c\u00f2n c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng cho nhi\u1ec1u b\u00e0i to\u00e1n kh\u00e1c.</p>"},{"location":"translate/codeforces/palindrome-tree/#so-lan-xuat-hien-cua-palindrome-trong-xau","title":"S\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a palindrome trong x\u00e2u","text":"<p>Ngo\u00e0i s\u1eed d\u1ee5ng c\u00e2y Palindrome b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Hash \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y.</p>"},{"location":"translate/codeforces/palindrome-tree/#bai-tap","title":"B\u00e0i t\u1eadp","text":""},{"location":"translate/codeforces/palindrome-tree/#cac-bai-tren-timus","title":"C\u00e1c b\u00e0i tr\u00ean Timus","text":"<p>Timus - Palindromes and Super Abilities</p> <p>Timus - 31 Palindromes</p> <p>Timus - Richness of words</p> <p>Timus - Richness of binary words</p>"},{"location":"translate/codeforces/palindrome-tree/#cac-bai-tren-codeforces","title":"C\u00e1c b\u00e0i tr\u00ean Codeforces","text":"<p>CERC 14 - B\u00e0i G - Virus synthesis</p> <p>Codeforces Beta Round #17 - B\u00e0i E - Palisection</p>"},{"location":"translate/codeforces/palindrome-tree/#cac-bai-tren-spoj","title":"C\u00e1c b\u00e0i tr\u00ean SPOJ","text":"<p>SPOJ - Number of Palindromes</p>"},{"location":"translate/codeforces/palindrome-tree/#cac-bai-tren-cac-trang-khac","title":"C\u00e1c b\u00e0i tr\u00ean c\u00e1c trang kh\u00e1c","text":"<p>\u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng x\u00e2u con li\u00ean ti\u1ebfp l\u00e0 palindrome</p> <p>e-olimp - Palindromic factory</p> <p>Codechef - Palindromeness</p>"},{"location":"translate/codeforces/stack-queue/","title":"Queue & Stack","text":""},{"location":"translate/codeforces/stack-queue/#hang-oi-queues","title":"H\u00e0ng \u0111\u1ee3i (Queues)","text":"<p>H\u00e0ng \u0111\u1ee3i l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u di\u1ec5n t\u1ea3 t\u1ed1t nh\u1ea5t cho c\u00e2u \u201cv\u00e0o tr\u01b0\u1edbc, ra tr\u01b0\u1edbc\u201d. M\u1ed9t v\u00ed d\u1ee5 th\u1ef1c t\u1ebf c\u1ee7a h\u00e0ng \u0111\u1ee3i l\u00e0 \u0111o\u00e0n ng\u01b0\u1eddi x\u1ebfp h\u00e0ng \u1edf ng\u00e2n h\u00e0ng. M\u1ed7i ng\u01b0\u1eddi khi x\u1ebfp h\u00e0ng s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o h\u00e0ng \u0111\u1ee3i \u1edf v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng. Sau khi ng\u01b0\u1eddi \u1edf \u0111\u1ea7u h\u00e0ng ho\u00e0n th\u00e0nh th\u1ee7 t\u1ee5c v\u00e0 r\u1eddi \u0111i, nh\u1eefng ng\u01b0\u1eddi \u0111ang x\u1ebfp \u1edf sau s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u1ec1 \u0111\u1ea7u h\u00e0ng. M\u1ed9t trong nh\u1eefng gi\u1ea3i thu\u1eadt ph\u1ed5 bi\u1ebfn nh\u1ea5t th\u01b0\u1eddng s\u1eed d\u1ee5ng h\u00e0ng \u0111\u1ee3i \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i t\u1eadp \u1edf topcoder ch\u00ednh l\u00e0 t\u00ecm ki\u1ebfm theo chi\u1ec1u r\u1ed9ng (BFS). BFS duy\u1ec7t t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 t\u1edbi \u0111\u01b0\u1ee3c sau m\u1ed9t b\u01b0\u1edbc. Sau \u0111\u00f3 l\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c sau hai b\u01b0\u1edbc,\u2026H\u00e0ng \u0111\u1ee3i h\u1ed7 tr\u1ee3 \u0111\u1ec3 th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y b\u1edfi ch\u00fang l\u01b0u tr\u1eef m\u1ed9t danh s\u00e1ch t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m.</p> <p>M\u1ed9t b\u00e0i to\u00e1n ph\u1ed5 bi\u1ebfn c\u1ee7a d\u1ea1ng b\u00e0i t\u1eadp n\u00e0y ch\u00ednh l\u00e0 t\u00ecm \u0111\u01b0\u1eddng \u0111i qua m\u00ea cung. T\u1ea1i \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u, duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c trong m\u1ed9t b\u01b0\u1edbc duy nh\u1ea5t v\u00e0 th\u00eam ch\u00fang v\u00e0o h\u00e0ng \u0111\u1ee3i. Sau \u0111\u00f3 l\u1ea5y ra m\u1ed9t v\u1ecb tr\u00ed, t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb v\u1ecb tr\u00ed n\u00e0y v\u00e0 l\u1ea1i th\u00eam ch\u00fang v\u00e0o h\u00e0ng \u0111\u1ee3i. Ti\u1ebfp t\u1ee5c qu\u00e1 tr\u00ecnh n\u00e0y cho t\u1edbi khi m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y ho\u1eb7c h\u00e0ng \u0111\u1ee3i r\u1ed7ng (kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i qua m\u00ea cung). Khi y\u00eau c\u1ea7u t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111i v\u1edbi s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t, BFS k\u1ebft h\u1ee3p v\u1edbi h\u00e0ng \u0111\u1ee3i l\u00e0 gi\u1ea3i ph\u00e1p c\u1ef1c k\u1ef3 hi\u1ec7u qu\u1ea3.</p> <p>H\u1ea7u h\u1ebft c\u00e1c th\u01b0 vi\u1ec7n chu\u1ea9n, nh\u01b0 JAVA v\u00e0 .NET framework \u0111\u1ec1u cung c\u1ea5p l\u1edbp h\u00e0ng \u0111\u1ee3i v\u00e0 c\u00e1c thao t\u00e1c \u0111\u01a1n gi\u1ea3n nh\u01b0 th\u00eam, l\u1ea5y m\u1ed9t ph\u1ea7n t\u1eed ra kh\u1ecfi h\u00e0ng \u0111\u1ee3i. C\u00e1c b\u00e0i t\u1eadp d\u1ea1ng BFS xu\u1ea5t hi\u1ec7n th\u01b0\u1eddng xuy\u00ean trong c\u00e1c cu\u1ed9c thi. Trong m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p, x\u00e1c \u0111\u1ecbnh th\u00e0nh c\u00f4ng h\u01b0\u1edbng gi\u1ea3i b\u1eb1ng BFS c\u00f3 th\u1ec3 r\u1ea5t \u0111\u01a1n gi\u1ea3n v\u00e0 nhanh ch\u00f3ng. Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p kh\u00e1c th\u00ec kh\u00f4ng.</p> <p>Duy\u1ec7t m\u1ed9t h\u00e0ng \u0111\u1ee3i kh\u00e1 \u0111\u01a1n gi\u1ea3n. V\u00ed d\u1ee5 nh\u01b0, n\u1ebfu b\u1ea1n bi\u1ebft m\u00ecnh \u0111ang c\u1ed1 g\u1eafng \u0111i t\u1eeb \u0111i\u1ec3m A \u0111\u1ebfn \u0111i\u1ec3m B tr\u00ean m\u1ed9t l\u01b0\u1edbi \u00f4 vu\u00f4ng 50*50 (h\u01b0\u1edbng \u0111i, c\u00e1c chi ti\u1ebft kh\u00e1c \u0111\u1ec1u kh\u00f4ng li\u00ean quan) khi \u0111\u00f3, s\u1ebd c\u00f3 h\u01a1n 2500 tr\u1ea1ng th\u00e1i \u0111\u1ec3 th\u0103m. Ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n s\u1ebd nh\u01b0 sau:</p> <pre><code>class StateNode {\n   int xPos;\n   int yPos;\n   int moveCount;\n}\n\nclass MyQueue {\n   StateNode[] queueData = new StateNode[2500];\n   int queueFront = 0;\n   int queueBack = 0;\n\n   void Enqueue(StateNode node) {\n      queueData[queueBack] = node;\n      queueBack++;\n   }\n\n   StateNode Dequeue() {\n      StateNode returnValue = null;\n      if (queueBack &gt; queueFront) {\n      returnValue = queueData[queueFront];\n      QueueFront++;\n   }\n   return returnValue;\n   }\n\n   boolean isNotEmpty() {\n      return (queueBack &gt; queueFront);\n   }\n}\n</code></pre> <p>Khi \u0111\u00f3 \u0111o\u1ea1n code ch\u00ednh c\u1ee7a b\u1ea1n s\u1ebd nh\u01b0 b\u00ean d\u01b0\u1edbi. (N\u1ebfu h\u00e0ng \u0111\u1ee3i c\u1ee7a ch\u00fang ta kh\u00f4ng \u0111\u1ebfn \u0111\u01b0\u1ee3c th\u00eam m\u1ed9t tr\u1ea1ng th\u00e1i n\u00e0o n\u1eefa v\u00e0 ch\u00fang ta v\u1eabn ch\u01b0a \u0111\u1ebfn \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed \u0111\u00edch khi \u0111\u00f3 kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng \u0111i t\u1eeb A \u0111\u1ebfn B. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ch\u00fang ta tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb -1).</p> <pre><code>MyQueue queue = new MyQueue();\nqueue.Enqueue(initialState);\nwhile (queue.isNotEmpty()) {\n   StateNode curState = queue.Dequeue();\n   if (curState == destState)\nreturn curState.moveCount;\n   for (int dir = 0; dir &lt; 3; dir++) {\n      if (CanMove(curState, dir))\n         queue.Enqueue(MoveState(curState, dir));\n   }\n}\n</code></pre>"},{"location":"translate/codeforces/stack-queue/#ngan-xep-stack","title":"Ng\u0103n x\u1ebfp (Stack)","text":"<p>Ng\u0103n x\u1ebfp c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t \u0111\u1ecbnh ngh\u0129a \u0111\u1ed1i ngh\u1ecbch v\u1edbi h\u00e0ng \u0111\u1ee3i. \u0110\u1ed1i v\u1edbi ng\u0103n x\u1ebfp, \u201cv\u00e0o tr\u01b0\u1edbc, ra tr\u01b0\u1edbc\u201d. M\u1ed9t v\u00ed d\u1ee5 th\u1ef1c t\u1ebf \u0111\u1ed1i v\u1edbi ng\u0103n x\u1ebfp l\u00e0 ch\u1ed3ng \u0111\u0129a. Ng\u01b0\u1eddi r\u1eeda d\u1ecdn s\u1ebd lu\u00f4n ch\u1ecdn \u0111\u0129a tr\u00ean c\u00f9ng  \u2013 \u0111\u00e2y ch\u00ednh l\u00e0 \u0111\u0129a \u0111\u01b0\u1ee3c th\u00eam v\u00e0o sau c\u00f9ng, sau \u0111\u00f3 \u0111\u1ebfn \u0111\u0129a ti\u1ebfp theo.</p> <p>Tr\u00f4ng c\u00f3 v\u1ebb nh\u01b0 ng\u0103n x\u1ebfp hi\u1ebfm khi \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng. Tuy v\u1eady, hi\u1ec3u bi\u1ebft v\u1ec1 ng\u0103n x\u1ebfp v\u00e0 c\u00e1ch th\u1ee9c ch\u00fang \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ng\u1ea7m hi\u1ec7n nay l\u00e0 v\u00f4 c\u00f9ng quan tr\u1ecdng. Nh\u1eefng ai \u0111\u00e3 l\u1eadp tr\u00ecnh \u0111\u01b0\u1ee3c m\u1ed9t th\u1eddi gian s\u1ebd r\u1ea5t quen v\u1edbi vi\u1ec7c ng\u0103n x\u1ebfp \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng m\u1ed7i khi m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh con \u0111\u01b0\u1ee3c g\u1ecdi l\u00ean t\u1eeb b\u00ean trong m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh. T\u1ea5t c\u1ea3 c\u00e1c tham bi\u1ebfn, bi\u1ebfn \u0111\u1ecba ph\u01b0\u01a1ng \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111\u1eb7t tr\u00ean ng\u0103n x\u1ebfp. Khi qu\u00e1 tr\u00ecnh k\u1ebft th\u00fac, c\u00e1c bi\u1ebfn n\u00e0y \u0111\u01b0\u1ee3c gi\u1ea3i ph\u00f3ng, \u0111\u1ecba ch\u1ec9 \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 v\u00e0 l\u1ea5y ra kh\u1ecfi ng\u0103n x\u1ebfp. Nh\u01b0 v\u1eady, ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 th\u1ec3 ti\u1ebfp t\u1ee5c th\u1ef1c thi ti\u1ebfp t\u1ee5c \u1edf \u0111\u00fang n\u01a1i m\u00e0 n\u00f3 \u0111ang d\u1eebng \u0111\u1ec3 g\u1ecdi ch\u01b0\u01a1ng tr\u00ecnh con.</p> <p>M\u1ed9t trong nh\u1eefng hi\u1ec3u bi\u1ebft quan tr\u1ecdng h\u01a1n v\u1edbi k\u1ef9 thu\u1eadt n\u00e0y l\u00e0 m\u1ed9t h\u00e0m g\u1ecdi m\u1ed9t h\u00e0m kh\u00e1c. V\u00e0 h\u00e0m n\u00e0y l\u1ea1i ti\u1ebfp t\u1ee5c g\u1ecdi m\u1ed9t h\u00e0m kh\u00e1c n\u1eefa. V\u1edbi m\u1ed7i l\u1ea7n g\u1ecdi h\u00e0m, m\u1ee9c \u0111\u1ed9 l\u1ed3ng c\u1ee7a c\u00e1c th\u1ef1c thi c\u00e0ng l\u00fac c\u00e0ng t\u0103ng. \u0110i\u1ec1u n\u00e0y l\u00e0m k\u00edch th\u01b0\u1edbc c\u1ee7a ng\u0103n x\u1ebfp c\u00e0ng ng\u00e0y c\u00e0ng l\u1edbn. M\u1ed9t v\u00ed d\u1ee5 quan tr\u1ecdng nh\u1ea5t ch\u00ednh l\u00e0 \u0111\u1ec7 quy. Khi m\u1ed9t h\u00e0m \u0111\u1ec7 quy li\u00ean t\u1ee5c g\u1ecdi ch\u00ednh n\u00f3, k\u00edch th\u01b0\u1edbc ng\u0103n x\u1ebfp t\u0103ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i l\u1ea7n g\u1ecdi \u0111\u1ec7 quy. H\u1ea7u nh\u01b0 t\u1ea5t c\u1ea3 c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean d\u00e0y d\u1eb7n \u0111\u1ec1u \u0111\u00e3 t\u1eebng m\u1eafc l\u1ed7i vi\u1ebft h\u00e0m \u0111\u1ec7 quy m\u00e0 kh\u00f4ng g\u1ecdi gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1. Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, h\u00e0m \u0111\u1ec7 quy t\u1ef1 g\u1ecdi ch\u00ednh m\u00ecnh cho \u0111\u1ebfn khi ng\u0103n x\u1ebfp tr\u00e0n v\u00e0 b\u1ecb l\u1ed7i.</p> <p>Ng\u0103n x\u1ebfp khi kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng th\u00ec \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3 v\u1eabn c\u1ef1c k\u1ef3 l\u1edbn. Ng\u0103n x\u1ebfp ch\u00ednh l\u00e0 tr\u00e1i tim c\u1ee7a thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (DFS). \u0110i\u1ec3n h\u00ecnh c\u1ee7a duy\u1ec7t c\u00e2y c\u1ee7a t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (v\u00ed d\u1ee5 nh\u01b0: t\u00ecm ki\u1ebfm m\u1ed9t n\u00fat c\u1ee5 th\u1ec3 trong t\u00e0i li\u1ec7u XML). Ng\u0103n x\u1ebfp trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u00f3 tr\u00e1ch nhi\u1ec7m duy tr\u00ec c\u00e1c con \u0111\u01b0\u1eddng \u0111\u00e3 \u0111i \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 th\u1ec3 quay l\u1ea1i khi c\u1ea7n (v\u00ed d\u1ee5 nh\u01b0: tr\u1edf v\u1ec1 t\u1eeb m\u1ed9t h\u00e0m \u0111\u1ec7 quy sau khi kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c n\u00fat mong mu\u1ed1n) v\u00e0 ti\u1ebfp t\u1ee5c t\u00ecm ki\u1ebfm c\u00e1c n\u00fat l\u00e2n c\u1eadn ti\u1ebfp theo.</p> <p>Soma (SRM 198) l\u00e0 m\u1ed9t v\u00ed d\u1ee5 tuy\u1ec7t v\u1eddi \u0111\u1ec3 ti\u1ebfp c\u1eadn h\u01b0\u1edbng gi\u1ea3i n\u00e0y.</p>"},{"location":"translate/codeforces/stack-queue/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>Topcoder</li> </ul>"},{"location":"translate/codeforces/z-algo/","title":"Z Algorithm","text":"<p>Ngu\u1ed3n b\u00e0i: Codeforces</p> <p>Tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i n\u00e0y, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc b\u00e0i X\u1eed l\u00fd x\u00e2u \u0111\u1ec3 n\u1eafm \u0111\u01b0\u1ee3c c\u00e1c thu\u1eadt ng\u1eef c\u01a1 b\u1ea3n.</p> <p>Z Algorithm hay c\u00f2n g\u1ecdi l\u00e0 Z Function l\u00e0 thu\u1eadt to\u00e1n \u00e1p d\u1ee5ng cho c\u00e1c b\u00e0i so kh\u1edbp chu\u1ed7i.</p>"},{"location":"translate/codeforces/z-algo/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t chu\u1ed7i \\(S\\) c\u00f3 \u0111\u1ed9 d\u00e0i \\(n\\), thu\u1eadt to\u00e1n Z Function t\u1ea1o ra m\u1ed9t m\u1ea3ng \\(Z\\) m\u00e0 t\u1ea1i m\u1ed7i v\u1ecb tr\u00ed \\(i\\), ta c\u00f3 \\(Z_i\\) l\u00e0 \u0111\u1ed9 d\u00e0i chu\u1ed7i con d\u00e0i nh\u1ea5t l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\) b\u1eaft \u0111\u1ea7u t\u1ea1i v\u1ecb tr\u00ed \\(S_i\\), hay n\u00f3i m\u1ed9t c\u00e1ch kh\u00e1c \\(Z_i\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean \\(k\\) l\u1edbn nh\u1ea5t m\u00e0 \\(S_j=S_{i + j}\\) v\u1edbi m\u1ecdi \\(0 \\le j &lt; k\\). Tr\u01b0\u1eddng h\u1ee3p \\(S_i \\ne S_0\\) th\u00ec \\(Z_i = 0\\).</p>"},{"location":"translate/codeforces/z-algo/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>Ta duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c k\u00fd t\u1ef1 c\u1ee7a \\(S\\) (ch\u1ec9 s\u1ed1 \\(i\\) t\u1eeb 1 \u0111\u1ebfn \\(n - 1\\)). Trong qu\u00e1 tr\u00ecnh duy\u1ec7t, ta duy tr\u00ec m\u1ed9t \u0111o\u1ea1n \\([L, R]\\) v\u1edbi \\(R\\) l\u00e0 m\u1ed9t s\u1ed1 l\u1edbn nh\u1ea5t th\u1ecfa \\(1 \\le L \\le i \\le R\\) v\u00e0 \\([L, R]\\) l\u00e0 m\u1ed9t ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\) (N\u1ebfu kh\u00f4ng xu\u1ea5t hi\u1ec7n c\u00e1c \u0111o\u1ea1n nh\u01b0 v\u1eady th\u00ec \u0111\u1eb7t \\(L = R = -1\\)).</p> <p>V\u1edbi \\(i = 1\\) ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh \\(L\\) v\u00e0 \\(R\\) b\u1eb1ng ph\u00e9p so s\u00e1nh \\(S[0..]\\) v\u1edbi \\(S[1..]\\). \u0110\u1ed3ng th\u1eddi, ta c\u00f3 th\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb \\(Z_1\\).</p> <p>Gi\u1ea3 s\u1eed ta \u0111\u00e3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c \u0111o\u1ea1n \\([L, R]\\) v\u00e0 c\u00e1c gi\u00e1 tr\u1ecb \\(Z[1..i - 1]\\), ta s\u1ebd t\u00ednh \\(Z_i\\) v\u00e0 c\u1eadp nh\u1eadt \u0111o\u1ea1n \\([L,R]\\) m\u1edbi nh\u01b0 sau:</p> <ul> <li> <p>N\u1ebfu \\(i &gt; R\\), khi \u0111\u1ea5y kh\u00f4ng t\u1ed3n t\u1ea1i m\u1ed9t chu\u1ed7i con l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\) b\u1eaft \u0111\u1ea7u t\u1ea1i m\u1ed9t v\u1ecb tr\u00ed tr\u01b0\u1edbc \\(i\\) v\u00e0 k\u1ebft th\u00fac t\u1ea1i v\u00ed tr\u00ed \\(i\\) ho\u1eb7c sau \\(i\\). B\u1edfi n\u1ebfu nh\u01b0 c\u00f3 m\u1ed9t ti\u1ec1n t\u1ed1 nh\u01b0 v\u1eady, th\u00ec \u0111o\u1ea1n \\([L, i]\\) s\u1ebd l\u00e0 chu\u1ed7i ti\u1ec1n t\u1ed1 t\u1ed1i \u01b0u ch\u1ee9 kh\u00f4ng ph\u1ea3i \\([L, R]\\). Do \u0111\u00f3, ta s\u1ebd c\u1eadp nh\u1eadt l\u1ea1i \u0111o\u1ea1n \\([L, R]\\) b\u1eb1ng c\u00e1ch so s\u00e1nh \\(S[0..]\\) v\u1edbi \\(S[i..]\\) v\u00e0 l\u1ea5y gi\u00e1 tr\u1ecb \\(Z_i\\) hi\u1ec7n t\u1ea1i (\\(Z_i = R - L + 1\\)).</p> </li> <li> <p>Ng\u01b0\u1ee3c l\u1ea1i, \\(i \\le R\\) th\u00ec \u0111o\u1ea1n \\([L, R]\\) hi\u1ec7n t\u1ea1i k\u00e9o d\u00e0i \u00edt nh\u1ea5t \u0111\u1ebfn \\(i\\). \u0110\u1eb7t \\(k = i - L\\). Ta bi\u1ebft r\u1eb1ng \\(Z_i \\ge min(Z_k, R - i + 1)\\) b\u1edfi v\u00ec \\(S[i..]\\) b\u1eb1ng v\u1edbi \\(S[k..]\\) \u00edt nh\u1ea5t l\u00e0 \\(R - i + 1\\) k\u00fd t\u1ef1. X\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p sau:</p> <ul> <li>N\u1ebfu \\(Z_k &lt; R - i + 1\\) th\u00ec s\u1ebd kh\u00f4ng c\u00f3 chu\u1ed7i con n\u00e0o l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\) d\u00e0i h\u01a1n \\(Z_k\\) b\u1eaft \u0111\u1ea7u t\u1ea1i \\(S_i\\). Ngh\u0129a l\u00e0 \\(Z_i = Z_k\\) v\u00e0 \u0111o\u1ea1n \\([L, R]\\) v\u1eabn gi\u1eef nguy\u00ean (do \u0111o\u1ea1n \\([L, R]\\) ch\u1ec9 thay \u0111\u1ed5i n\u1ebfu chu\u1ed7i ti\u1ec1n t\u1ed1 b\u1eaft \u0111\u1ea7u t\u1ea1i \\(S_i\\) v\u01b0\u1ee3t ra kh\u1ecfi \u0111o\u1ea1n \\([L, R]\\)).</li> <li>N\u1ebfu \\(Z_k \\ge R - i + 1\\) th\u00ec chu\u1ed7i \\(S[i..]\\) l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\) v\u00e0 c\u00f3 nhi\u1ec1u h\u01a1n \\(R - i + 1\\) k\u00fd t\u1ef1 (t\u1ee9c l\u00e0 k\u1ebft th\u00fac sau v\u1ecb tr\u00ed \\(R\\)). Nh\u01b0 v\u1eady ta c\u1ea7n c\u1eadp nh\u1eadt \u0111o\u1ea1n \\([L, R]\\) b\u1eb1ng c\u00e1ch \u0111\u1eb7t l\u1ea1i \\(L = i\\) v\u00e0 so s\u00e1nh t\u1eeb v\u1ecb tr\u00ed \\(S[R + 1]\\) tr\u1edf \u0111i \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ed9t v\u1ecb tr\u00ed \\(R\\) m\u1edbi. \u0110\u1ed3ng th\u1eddi, ta t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a \\(Z_i\\).</li> </ul> </li> </ul>"},{"location":"translate/codeforces/z-algo/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p:","text":"<p>T\u1ea1i m\u1ed7i b\u01b0\u1edbc trong v\u00f2ng l\u1eb7p, ch\u00fang ta kh\u00f4ng c\u1ea7n so s\u00e1nh k\u00fd t\u1ef1 t\u1ea1i c\u00e1c v\u1ecb tr\u00ed nh\u1ecf h\u01a1n \\(R\\), v\u00e0 m\u1ed7i l\u1ea7n k\u00fd t\u1ef1 \\(R\\) ph\u00f9 h\u1ee3p th\u00ec ta t\u0103ng \\(R\\) l\u00ean m\u1ed9t, v\u00ec th\u1ebf ta s\u1ebd t\u1ed1n nhi\u1ec1u nh\u1ea5t \\(n\\) ph\u00e9p so s\u00e1nh. Ngo\u00e0i ra, v\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb \\(i\\), ta ch\u1ec9 t\u00ecm th\u1ea5y m\u1ed9t k\u00fd t\u1ef1 kh\u00f4ng ph\u00f9 h\u1ee3p (\u0111i\u1ec1u ki\u1ec7n t\u0103ng \\(R\\)). V\u00ec th\u1ebf kh\u00f4ng th\u1ec3 c\u00f3 nhi\u1ec1u h\u01a1n \\(n\\) ph\u00e9p so s\u00e1nh cho k\u1ebft qu\u1ea3 sai. \u0110\u01b0a \u0111\u1ebfn \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(n)\\).</p>"},{"location":"translate/codeforces/z-algo/#cai-at","title":"C\u00e0i \u0111\u1eb7t:","text":"<p>C\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t. Ch\u00fa \u00fd vi\u1ec7c t\u1ed1i \u01b0u h\u00f3a \\(L = R = i\\) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi \\(S_0 \\ne S_i\\) (\u0110i\u1ec1u \u0111\u00f3 kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn thu\u1eadt to\u00e1n k\u1ec3 t\u1eeb gi\u00e1 tr\u1ecb k\u1ebf ti\u1ebfp \\(i &gt; R\\) kh\u00f4ng ph\u00e2n bi\u1ec7t).</p> <pre><code>int L = 0, R = 0;\nZ[0] = n;\nfor (int i = 1; i &lt; n; i++)\n   if (i &gt; R)\n   {\n      L = R = i;\n      while (R &lt; n &amp;&amp; S[R] == S[R - L]) R++;\n      Z[i] = R - L; R--;\n   }\n   else\n   {\n      int k = i - L;\n      if (Z[k] &lt; R - i + 1) Z[i] = Z[k];\n      else\n      {\n          L = i;\n          while (R &lt; n &amp;&amp; S[R] == S[R - L]) R++;\n          Z[i] = R - L; R--;\n      }\n   }\n</code></pre>"},{"location":"translate/codeforces/z-algo/#ap-dung","title":"\u00c1p d\u1ee5ng","text":"<p>VNOJ - SUBSTR</p> <p>C\u00f3 th\u1ec3 d\u00f9ng ZFuntion \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y. Ta t\u1ea1o ra m\u1ed9t chu\u1ed7i \\(S=B+A\\), sao \u0111\u00f3 x\u00e2y d\u1ef1ng m\u1ea3ng \\(Z\\). Nh\u1eefng v\u1ecb tr\u00ed c\u00f3 \\(Z_i \\ge Length(B)\\) (V\u1edbi \\(Length(B) \\le i &lt; Length(A)+Length(B)\\)) l\u00e0 v\u1ecb tr\u00ed t\u01b0\u01a1ng \u1ee9ng c\u1ee7a \\(B\\) trong \\(A\\).</p>"},{"location":"translate/emaxx/Aho-Corasick/","title":"Aho Corasick","text":"<p>Ngu\u1ed3n: emaxx</p>"},{"location":"translate/emaxx/Aho-Corasick/#luu-y","title":"L\u01b0u \u00fd","text":"<p>Tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i vi\u1ebft n\u00e0y b\u1ea1n c\u1ea7n n\u1eafm \u0111\u01b0\u1ee3c c\u00e1c ki\u1ebfn th\u1ee9c sau:</p> <ul> <li>X\u1eed l\u00fd x\u00e2u</li> <li>KMP</li> <li>Trie</li> </ul>"},{"location":"translate/emaxx/Aho-Corasick/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Nh\u01b0 c\u00e1c b\u1ea1n \u0111\u00e3 bi\u1ebft:</p> <ul> <li>Thu\u1eadt to\u00e1n KMP gi\u00fap t\u00ecm ki\u1ebfm 1 x\u00e2u con (pattern) trong 1 x\u00e2u l\u1edbn v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(M + N)\\) v\u1edbi \\(M\\) v\u00e0 \\(N\\) l\u00e0 \u0111\u1ed9 d\u00e0i 2 x\u00e2u.</li> <li>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u Trie gi\u00fap ch\u00fang ta l\u01b0u tr\u1eef v\u00e0 t\u00ecm ki\u1ebfm \\(N\\).</li> </ul> <p>C\u1ea5u tr\u00fac d\u1eef li\u1ec7u Aho-Corasick c\u00f3 th\u1ec3 h\u00ecnh dung nh\u01b0 1 s\u1ef1 k\u1ebft h\u1ee3p gi\u1eefa trie v\u00e0 KMP:</p> <p>// IN PROGRESS</p>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/","title":"T\u00ecm ki\u1ebfm tam ph\u00e2n - Ternary Search","text":""},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#tim-kiem-tam-phan-ternary-search","title":"T\u00ecm ki\u1ebfm tam ph\u00e2n - Ternary Search","text":"<p>Ngu\u1ed3n: e-maxx </p> <p>Ng\u01b0\u1eddi d\u1ecbch: \u0110\u1ed7 Thanh Lam</p>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"<p>Cho m\u1ed9t h\u00e0m F(x) ch\u1ec9 c\u00f3 m\u1ed9t c\u1ef1c tr\u1ecb duy nh\u1ea5t (unimodal). C\u00f3 hai d\u1ea1ng h\u00e0m F(x) c\u01a1 b\u1ea3n:</p> <ul> <li>Ph\u1ea7n \u0111\u1ea7u t\u0103ng ch\u1eb7t, \u0111\u1ea1t \u0111\u1ebfn gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t, sau \u0111\u00f3 gi\u1ea3m ch\u1eb7t. (concave)</li> </ul> <p></p> <p>M\u1ed9t h\u00e0m s\u1ed1 tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t n\u00e0y n\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c \u0111o\u1ea1n th\u1eb3ng n\u1ed1i 2 \u0111i\u1ec3m c\u1ee7a \u0111\u1ed3 th\u1ecb h\u00e0m s\u1ed1, n\u1eb1m \"b\u00ean d\u01b0\u1edbi\" c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <ul> <li>Ph\u1ea7n \u0111\u1ea7u gi\u1ea3m ch\u1eb7t, \u0111\u1ea1t \u0111\u1ebfn gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t, sau \u0111\u00f3 t\u0103ng ch\u1eb7t. (convex)</li> </ul> <p></p> <p>M\u1ed9t h\u00e0m s\u1ed1 tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t n\u00e0y n\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c \u0111o\u1ea1n th\u1eb3ng n\u1ed1i 2 \u0111i\u1ec3m c\u1ee7a \u0111\u1ed3 th\u1ecb h\u00e0m s\u1ed1, \u0111\u1ec1u n\u1eb1m \"b\u00ean tr\u00ean\" c\u1ee7a \u0111\u1ed3 th\u1ecb.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang t\u00f4i s\u1ebd gi\u1ea3i quy\u1ebft tr\u01b0\u1eddng h\u1ee3p 1, tr\u01b0\u1eddng h\u1ee3p 2 s\u1ebd l\u00e0m t\u01b0\u01a1ng t\u1ef1 nh\u01b0ng ng\u01b0\u1ee3c l\u1ea1i. </p>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t h\u00e0m \\(F(x)\\) trong \u0111o\u1ea1n \\([l, r]\\) tho\u1ea3 m\u00e3n: \\(F\\) t\u0103ng ch\u1eb7t t\u1edbi m\u1ed9t c\u1ef1c \u0111\u1ea1i (\u0111i\u1ec3m H) r\u1ed3i gi\u1ea3m ch\u1eb7t. Y\u00eau c\u1ea7u t\u00ecm \u0111i\u1ec3m \u0111\u1ea1t gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t (\u0111i\u1ec3m H).</p>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>X\u00e9t hai v\u1ecb tr\u00ed \\(m_1\\) v\u00e0 \\(m_2\\) trong \u0111o\u1ea1n \\([l, r]\\) sao cho \\(l &lt; m_1 &lt; m_2 &lt; r\\). R\u00f5 r\u00e0ng c\u1ef1c tr\u1ecb c\u00f3 th\u1ec3 n\u1eb1m \u1edf 1 trong 3 ph\u1ea7n:</p> <ul> <li>\\([l, m_1]\\). Khi \u0111\u00f3, ta bi\u1ebft ch\u1eafc ch\u1eafn \\(F(m_1) &gt; F(m_2)\\).</li> </ul> <p></p> <ul> <li>\\([m_1, m_2]\\). Ta kh\u00f4ng th\u1ec3 r\u00fat ra k\u1ebft lu\u1eadn g\u00ec v\u1ec1 \\(F(m_1)\\) v\u00e0 \\(F(m_2)\\).</li> </ul> <p></p> <ul> <li>\\([m_2, R]\\). T\u01b0\u01a1ng t\u1ef1 tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u, ta bi\u1ebft ch\u1eafc ch\u1eafn \\(F(m_1) &lt; F(m_2)\\).</li> </ul> <p></p> <p>Ng\u01b0\u1ee3c l\u1ea1i, b\u1eb1ng vi\u1ec7c so s\u00e1nh \\(F(m_1)\\) v\u00e0 \\(F(m_2)\\), ta c\u00f3 th\u1ec3 r\u00fat ra k\u1ebft lu\u1eadn nh\u01b0 sau:</p> <ul> <li>N\u1ebfu \\(F(m_1) &lt; F(m_2)\\): Ta bi\u1ebft ch\u1eafc ch\u1eafn H n\u1eb1m trong \\([m_1, r]\\).</li> <li>\\(F(m_1) &gt; F(m_2)\\): Ta bi\u1ebft ch\u1eafc ch\u1eafn H n\u1eb1m trong \\([l, m_2]\\).</li> <li>\\(F(m_1) = F(m_2)\\): H n\u1eb1m trong \\([m_1, m_2]\\). (Ch\u00fa \u00fd: khi c\u00e0i \u0111\u1eb7t ch\u1eb7t tam ph\u00e2n v\u1edbi h\u00e0m s\u1ed1 th\u1ef1c, ta th\u01b0\u1eddng b\u1ecf qua tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u0111\u1ec3 tr\u00e1nh sai s\u1ed1, v\u00e0 do tr\u00ean th\u1ef1c t\u1ebf 2 s\u1ed1 th\u1ef1c h\u1ea7u nh\u01b0 kh\u00f4ng bao gi\u1edd b\u1eb1ng nhau).</li> </ul> <p>Do \u0111\u00f3, d\u1ef1a v\u00e0o vi\u1ec7c so s\u00e1nh \\(F\\) \u1edf hai \u0111i\u1ec3m m1, m2 ta c\u00f3 th\u1ec3 thay \u0111\u1ed5i v\u00e0 gi\u1ea3m kh\u00f4ng gian t\u00ecm ki\u1ebfm \\([l, r]\\) xu\u1ed1ng m\u1ed9t kho\u1ea3n kh\u00f4ng gian nh\u1ecf h\u01a1n \\([l', r']\\). N\u1ebfu ta ch\u1ecdn:</p> <ul> <li>\\(m_1 = l + (r - l) / 3\\)</li> <li>\\(m_2 = r - (r - l) / 3\\)</li> </ul> <p>Th\u00ec sau m\u1ed7i l\u1ea7n, \u0111\u1ed9 l\u1edbn c\u1ee7a \u0111o\u1ea1n \\([l, r]\\) gi\u1ea3m xu\u1ed1ng c\u00f2n \\(2/3\\) l\u1ea7n.</p> <p>N\u1ebfu ta l\u1eb7p \u0111i l\u1eb7p l\u1ea1i K l\u1ea7n, th\u00ec \u0111\u1ed9 l\u1edbn c\u1ee7a [l, r] s\u1ebd ch\u1ec9 c\u00f2n \\((2 / 3) ^ K\\). V\u00ed d\u1ee5 v\u1edbi \\(l = -10^9, r = 10^9\\), ta l\u1eb7p l\u1ea1i \\(K = 100\\) l\u1ea7n, th\u00ec \u0111o\u1ea1n [l, r] thu v\u1ec1 ch\u1ec9 c\u00f2n \u0111\u1ed9 d\u00e0i l\u00e0 \\((2 / 3.0) ^ {100} * (2*10^9) &lt; 5 * 10^{-9}\\), \u0111\u1ee7 ch\u00ednh x\u00e1c v\u1edbi h\u1ea7u h\u1ebft m\u1ecdi b\u00e0i to\u00e1n.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(logT)\\) v\u1edbi T l\u00e0 \u0111\u1ed9 ch\u00ednh x\u00e1c m\u00e0 ta c\u1ea7n th\u1ef1c hi\u1ec7n.</p>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>double max_f(double left, double right) {\n\n    int N_ITER = 100;\n\n    for (int i = 0; i &lt; N_ITER; i++) {\n\n        double x1 = left + (right - left) / 3.0;\n        double x2 = right - (right - left) / 3.0;\n\n        if (f(x1) &gt; f(x2)) right = x2;\n        else left = x1;\n    }\n    return f(left);\n}\n</code></pre>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#mo-rong","title":"M\u1edf r\u1ed9ng","text":"<p>T\u00ecm ki\u1ebfm tam ph\u00e2n c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n tr\u00ean 2D v\u1edbi h\u00e0m d\u1ea1ng \\(f(x, y)\\) n\u1ebfu h\u00e0m f l\u00e0 h\u00e0m l\u1ed3i. V\u00ed d\u1ee5 b\u00e0i E trong \u0111\u1ec1 ACM ICPC Vietnam National Round 2017, l\u1eddi gi\u1ea3i chi ti\u1ebft \u1edf \u0111\u00e2y.</p>"},{"location":"translate/emaxx/Tim-kiem-tam-phan-Ternary-Search/#bai-tap-tu-luyen","title":"B\u00e0i t\u1eadp t\u1ef1 luy\u1ec7n","text":"<ul> <li>Codechef - Race time</li> <li>Hackerearth - Rescuer</li> <li>Spoj - Building Construction</li> <li>Codeforces - Weakness and Poorness</li> </ul>"},{"location":"translate/he/Lucas-theorem/","title":"\u0110\u1ecbnh l\u00fd Lucas","text":""},{"location":"translate/he/Lucas-theorem/#inh-ly","title":"\u0110\u1ecbnh l\u00fd","text":"<p>N\u1ebfu \\(M\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec \\(C_{N}^{K} \\equiv C_{n_0}^{k_0}.C_{n_1}^{k_1}...C_{n_{p}}^{k_{p}} \\ (mod \\ M)\\)</p> <p>Trong \u0111\u00f3:</p> <p>\\(\\overline{n_{p}n_{p-1}...n_0}\\) l\u00e0 d\u1ea1ng bi\u1ec3u di\u1ec5n c\u1ee7a \\(N\\) tr\u00ean h\u1ec7 c\u01a1 s\u1ed1 \\(M\\)</p> <p>\\(\\overline{k_{p}k_{p-1}...k_0}\\) l\u00e0 d\u1ea1ng bi\u1ec3u di\u1ec5n c\u1ee7a \\(K\\) tr\u00ean h\u1ec7 c\u01a1 s\u1ed1 \\(M\\)</p> <p>N\u00f3i c\u00e1ch kh\u00e1c:</p> <p>\\(N=n_0.M^0+n_1.M^1+...+n_{p}.M^{p}\\)</p> <p>\\(K=k_0.M^0+k_1.M^1+...+k_{p}.M^{p}\\)</p>"},{"location":"translate/he/Lucas-theorem/#chung-minh","title":"Ch\u1ee9ng minh","text":"<p>V\u1edbi \\(M\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 \\(i\\) l\u00e0 s\u1ed1 nguy\u00ean v\u1edbi \\(1 \\leq i &lt; M\\)</p> <p>\\(\\Rightarrow C_{M}^{i}=\\frac{M.(M-1)...(M-i+1)}{i.(i-1)...1} \\equiv 0 \\ (mod \\ M)\\) do \\(gcd(M,i!)=1\\)</p> <p>\\(\\Rightarrow(1+X)^M=\\sum_{i=0}^{M}C_{M}^{i}.X^i \\equiv 1+X^M \\ (mod \\ M)\\) v\u1edbi m\u1ecdi \\(X \\in \\mathbb{Z}\\)</p> <p>L\u1ea1i c\u00f3:</p> <p>\\((1+X^M)^M \\equiv ((1+X)^M)^M \\equiv (1+X)^{M^2}\\ (mod \\ M)\\)</p> <p>v\u00e0</p> <p>\\((1+X^M)^M \\equiv 1+(X^M)^M \\equiv 1+X^{M^2} \\ (mod \\ M)\\)</p> <p>\\(\\Rightarrow (1+X)^{M^2} \\equiv 1+X^{M^2} \\ (mod \\ M)\\)</p> <p>C\u1ee9 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady, v\u1edbi m\u1ecdi \\(i \\in N\\) ta \u0111\u01b0\u1ee3c:</p> <p>\\((1+X)^{M^i} \\equiv 1+X^{M^i} \\ (mod \\ M)\\)</p> <p>Ta c\u00f3:</p> <p>\\(\\sum_{K=0}^{N}C_{N}^{K}.X^K\\)</p> <p>\\(=(1+X)^N\\) (nh\u1ecb th\u1ee9c Newton) (1)</p> <p>T\u00e1ch \\(N\\) v\u1ec1 d\u1ea1ng c\u01a1 s\u1ed1 \\(M\\) ta \u0111\u01b0\u1ee3c:</p> <p>\\((1)=(1+X)^{n_0.M^0+n_1.M^1+...+n_{p}.M^{p}}\\)</p> <p>\\(=\\prod_{i=0}^{p}((1+X)^{M^i})^{n_i}\\)</p> <p>\\(\\equiv \\prod_{i=0}^{p}(1+X^{M^i})^{n_i} \\ (mod \\ M)\\)</p> <p>\\(=\\prod_{i=0}^{p}\\sum_{k_i=0}^{n_i}C_{n_i}^{k_i}X^{k_i.M^i}\\) (nh\u1ecb th\u1ee9c Newton)</p> <p>\\(=\\prod_{i=0}^{p}\\sum_{k_i=0}^{M-1}C_{n_i}^{k_i}X^{k_i.M^i}\\) (\\(n_i \\leq M-1\\) v\u1edbi m\u1ecdi \\(i\\) v\u00e0 \\(C_j^i=0\\) v\u1edbi \\(i&gt;j\\)) (2)</p> <p>Nh\u00f3m c\u00e1c \\(C_{n_i}^{k_i}X^{k_i.M^i}\\) l\u1ea1i ta c\u00f3</p> <p>\\(C_{n_0}^{k_0}.C_{n_1}^{k_1}...C_{n_p}^{k_p}.X^{k_0.M^0+k_1.M^1+...k_p.M^p}\\)</p> <p>Do \u0111\u00f3 v\u1edbi m\u1ed9t b\u1ed9 \\((k_0,k_1,...k_p)\\) b\u1ea5t k\u00ec ta \u0111\u01b0\u1ee3c m\u1ed9t h\u1ea1ng t\u1eed</p> <p>\\(C_{n_0}^{k_0}.C_{n_1}^{k_1}...C_{n_p}^{k_p}.X^{K}\\)</p> <p>(\\(C_{n_0}^{k_0}.C_{n_1}^{k_1}...C_{n_p}^{k_p}\\) l\u00e0 h\u1ec7 s\u1ed1 c\u1ee7a \\(X^K\\))</p> <p>V\u1eady \\((2)=\\sum_{K=0}^{N}\\prod_{i=0}^{p}C_{n_i}^{k_i}X^K\\)</p> <p>T\u1eeb \u0111\u00f3 suy ra: \\(\\sum_{K=0}^{N}C_{N}^{K}.X^K \\equiv \\sum_{K=0}^{N}\\prod_{i=0}^{p}C_{n_i}^{k_i}X^K \\ (mod \\ M)\\) v\u1edbi m\u1ecdi \\(X \\in \\mathbb{Z}\\)</p> <p>\\(\\Leftrightarrow C_N^K \\equiv \\prod_{i=0}^{p}C_{n_i}^{k_i} \\ (mod \\ M)\\)</p>"},{"location":"translate/he/Lucas-theorem/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":""},{"location":"translate/he/Lucas-theorem/#bieu-dien-mot-so-n-o-dang-co-so-m","title":"Bi\u1ec3u di\u1ec5n m\u1ed9t s\u1ed1 \\(N\\) \u1edf d\u1ea1ng c\u01a1 s\u1ed1 \\(M\\)","text":"<pre><code>vector&lt;int&gt; getRepresentation(int N) {\n    vector&lt;int&gt; res;\n    while (N &gt; 0) {\n        res.push_back(N % M);\n        N /= M;\n    }\n    return res;\n}\n</code></pre> <p>\u0110o\u1ea1n code tr\u00ean ch\u1ea1y trong th\u1eddi gian \\(O(log_M N)\\)</p>"},{"location":"translate/he/Lucas-theorem/#tinh-c_n_ik_i","title":"T\u00ednh \\(C_{n_i}^{k_i}\\)","text":""},{"location":"translate/he/Lucas-theorem/#thuat-toan-on2o1","title":"Thu\u1eadt to\u00e1n \\(&lt; O(n^2),O(1) &gt;\\)","text":"<p>V\u1edbi \\(N\\) nh\u1ecf ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c tam gi\u00e1c Pascal \u0111\u1ec3 t\u00ednh tr\u01b0\u1edbc trong \\(O(n^2)\\) v\u00e0 truy v\u1ea5n trong \\(O(1)\\):</p> <pre><code>int C[M][M];\nfor (int i = 0; i &lt; M; ++i) {\n    for (int j = 0; j &lt;= i; ++j) {\n        if (i == 0 || j == 0) {\n            C[i][j] = 1;\n        } else {\n            C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % M;\n        }\n    }\n}\n</code></pre>"},{"location":"translate/he/Lucas-theorem/#thuat-toan-omologm","title":"Thu\u1eadt to\u00e1n \\(&lt; O(M),O(logM) &gt;\\)","text":"<p>V\u1edbi \\(M\\) nh\u1ecf c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 ti\u1ec1n x\u1eed l\u00fd trong \\(O(M)\\) v\u00e0 truy v\u1ea5n trong \\(O(logM)\\) b\u1eb1ng trick #3 \u1edf \u0111\u00e2y.</p>"},{"location":"translate/he/Lucas-theorem/#tien-xu-ly","title":"Ti\u1ec1n x\u1eed l\u00fd","text":"<pre><code>long long fact[M];\nfact[0] = 1;\nfor (int i = 1; i &lt; M; ++i) {\n    fact[i] = (fact[i - 1] * i) % M;\n}\n</code></pre>"},{"location":"translate/he/Lucas-theorem/#truy-van","title":"Truy v\u1ea5n","text":"<pre><code>int C(int N, int K) {\n    if (K &gt; N) {\n        return 0;\n    }\n    return (((fact[N] * binpow(fact[N - K], M - 2)) % M) * binpow(fact[K], M - 2)) % M;\n}\n</code></pre> <p>Trong \u0111\u00f3 h\u00e0m <code>binpow(a,n)</code> d\u00f9ng \u0111\u1ec3 t\u00ednh nhanh \\(a^n\\) trong \\(O(logn)\\) b\u1eb1ng chia \u0111\u1ec3 tr\u1ecb:</p> <p>\\(a^n=(a^{n/2})^2\\) n\u1ebfu \\(n\\) ch\u1eb5n</p> <p>\\(a^n=(a^{n/2})^2*a\\) n\u1ebfu \\(n\\) l\u1ebb</p> <p>C\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t b\u1eb1ng \u0111\u1ec7 quy theo c\u00f4ng th\u1ee9c tr\u00ean ho\u1eb7c c\u00e0i kh\u1eed \u0111\u1ec7 quy nh\u01b0 sau:</p> <pre><code>int binpow(int a, int n) {\n    long long res = 1;\n    while (n &gt; 0) {\n        if (n % 2 != 0) {\n            res = (res * a) % M;\n        }\n        a = ((long long)a * a) % M;\n        n /= 2;\n    }\n    return (int)res;\n}\n</code></pre>"},{"location":"translate/he/Lucas-theorem/#tinh-c_nk","title":"T\u00ednh \\(C_N^K\\)","text":"<pre><code>vector&lt;int&gt; n = getRepresentation(N);\nvector&lt;int&gt; k = getRepresentation(K);\nlong long res = 1;\nfor (int i = 0; i &lt; k.size(); ++i) {\n    res = (res * C(n[i], k[i])) % M;\n}\n</code></pre>"},{"location":"translate/he/Lucas-theorem/#truong-hop-m-khong-la-so-nguyen-to","title":"Tr\u01b0\u1eddng h\u1ee3p \\(M\\) kh\u00f4ng l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1","text":"<p>Ch\u00fang ta th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc nh\u01b0 sau:</p> <ul> <li> <p>Ph\u00e2n t\u00edch th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 \\(M={m_1}^{a_1}.{m_2}^{a_2}...{m_r}^{a_r}\\)</p> </li> <li> <p>T\u00ednh \\(C_N^K \\ mod \\ m_1\\), \\(C_N^K \\ mod \\ m_2\\),...\\(C_N^K \\ mod \\ m_r\\)</p> </li> <li> <p>S\u1eed d\u1ee5ng \u0110\u1ecbnh l\u00fd Th\u1eb7ng d\u01b0 Trung Hoa \u0111\u1ec3 kh\u00f4i ph\u1ee5c \\(C_N^K \\ mod \\ M\\)</p> </li> </ul>"},{"location":"translate/he/Lucas-theorem/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<ul> <li>X\u00f4ng \u0111\u1ea5t ng\u00e0y t\u1ebft - SPOJ</li> </ul>"},{"location":"translate/he/Number-Theory-2/","title":"S\u1ed1 h\u1ecdc 2 - S\u1ed1 nguy\u00ean t\u1ed1, S\u00e0ng Eratosthenes","text":"<p>Ngu\u1ed3n: HackerEarth v\u00e0 1 s\u1ed1 b\u00e0i vi\u1ebft tr\u00ean Wikipedia</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p> <p>B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc ph\u1ea7n 1 v\u1ec1 Modulo &amp; GCD \u1edf \u0111\u00e2y.</p>"},{"location":"translate/he/Number-Theory-2/#so-nguyen-to-prime-numbers","title":"S\u1ed1 nguy\u00ean t\u1ed1 (Prime Numbers)","text":"<p>S\u1ed1 nguy\u00ean t\u1ed1 l\u00e0 s\u1ed1 nguy\u00ean l\u1edbn h\u01a1n 1 v\u00e0 c\u00f3 \u0111\u00fang 2 \u01b0\u1edbc l\u00e0 1 v\u00e0 ch\u00ednh n\u00f3.</p> <p>H\u1ee3p s\u1ed1 (Composite numbers) l\u00e0 s\u1ed1 nguy\u00ean l\u1edbn h\u01a1n 1 v\u00e0 c\u00f3 nhi\u1ec1u h\u01a1n 2 \u01b0\u1edbc.</p> <p>V\u00ed d\u1ee5, 5 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 v\u00ec 5 ch\u1ec9 chia h\u1ebft cho 1 v\u00e0 5. Tuy nhi\u00ean, 6 l\u00e0 h\u1ee3p s\u1ed1 v\u00ec 6 chia h\u1ebft cho 1, 2, 3 v\u00e0 6.</p> <p>C\u00f3 r\u1ea5t nhi\u1ec1u ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 ki\u1ec3m tra m\u1ed9t s\u1ed1 nguy\u00ean c\u00f3 ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 hay kh\u00f4ng.</p>"},{"location":"translate/he/Number-Theory-2/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n \"ng\u00e2y th\u01a1\"","text":"<p>Ta s\u1ebd duy\u1ec7t h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(N\\) v\u00e0 \u0111\u1ebfm s\u1ed1 \u01b0\u1edbc c\u1ee7a \\(N\\). N\u1ebfu s\u1ed1 \u01b0\u1edbc c\u1ee7a \\(N\\) l\u00e0 2 th\u00ec \\(N\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1, n\u1ebfu kh\u00f4ng th\u00ec \\(N\\) kh\u00f4ng l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> <pre><code>bool isPrime(int n) {\n    for (int i = 2; i &lt; n; i++)\n        if (n % i == 0) {\n            // n chia h\u1ebft cho s\u1ed1 kh\u00e1c 1 v\u00e0 ch\u00ednh n\u00f3.\n            return false;\n        }\n    return n &gt; 1;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(N)\\) do ta ph\u1ea3i duy\u1ec7t h\u1ebft c\u00e1c s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(N\\).</p>"},{"location":"translate/he/Number-Theory-2/#mot-thuat-toan-tot-hon","title":"M\u1ed9t thu\u1eadt to\u00e1n t\u1ed1t h\u01a1n","text":"<p>X\u00e9t hai s\u1ed1 nguy\u00ean d\u01b0\u01a1ng \\(N\\) v\u00e0 \\(D\\) th\u1ecfa m\u00e3n \\(N\\) chia h\u1ebft cho \\(D\\) v\u00e0 \\(D\\) nh\u1ecf h\u01a1n \\(\\sqrt{N}\\). Khi \u0111\u00f3 \\(\\frac{N}{D}\\) ph\u1ea3i l\u1edbn h\u01a1n \\(\\sqrt{N}\\). \\(N\\) c\u0169ng chia h\u1ebft cho \\(\\frac{N}{D}\\). V\u00ec th\u1ebf, n\u1ebfu \\(N\\) c\u00f3 \u01b0\u1edbc nh\u1ecf h\u01a1n \\(\\sqrt{N}\\) th\u00ec \\(N\\) c\u0169ng c\u00f3 \u01b0\u1edbc l\u1edbn h\u01a1n \\(\\sqrt{N}\\). Do \u0111\u00f3, ta ch\u1ec9 c\u1ea7n duy\u1ec7t \u0111\u1ebfn \\(\\sqrt{N}\\).</p> <pre><code>bool isPrime(int n) {\n    for (int i = 2; i*i &lt;= n; i++)\n        if (n % i == 0) return false;\n    return n &gt; 1;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(\\sqrt{N})\\) do ta ph\u1ea3i duy\u1ec7t t\u1eeb 1 \u0111\u1ebfn \\(\\sqrt{N}\\).</p>"},{"location":"translate/he/Number-Theory-2/#sang-eratosthenes-sieve-of-eratosthenes","title":"S\u00e0ng Eratosthenes (Sieve of Eratosthenes)","text":"<p>S\u00e0ng Eratosthenes d\u00f9ng \u0111\u1ec3 t\u00ecm c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng s\u1ed1 nguy\u00ean \\(N\\) n\u00e0o \u0111\u00f3. N\u00f3 c\u00f2n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ki\u1ec3m tra m\u1ed9t s\u1ed1 nguy\u00ean nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(N\\) hay kh\u00f4ng.</p> <p>https://upload.wikimedia.org/wikipedia/commons/b/b8/Animation_Sieb_des_Eratosthenes_%28vi%29.gif</p> <p>Nguy\u00ean l\u00ed ho\u1ea1t \u0111\u1ed9ng c\u1ee7a s\u00e0ng l\u00e0 v\u00e0o m\u1ed7i l\u1ea7n duy\u1ec7t, ta ch\u1ecdn m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 lo\u1ea1i ra kh\u1ecfi s\u00e0ng t\u1ea5t c\u1ea3 c\u00e1c b\u1ed9i c\u1ee7a s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u00f3 m\u00e0 l\u1edbn h\u01a1n s\u1ed1 \u0111\u00f3. Sau khi duy\u1ec7t xong, c\u00e1c s\u1ed1 c\u00f2n l\u1ea1i trong s\u00e0ng \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> <p>M\u00e3 gi\u1ea3 (Pseudo Code):</p> <ul> <li> <p>\u0110\u00e1nh d\u1ea5u t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> </li> <li> <p>V\u1edbi m\u1ed7i s\u1ed1 nguy\u00ean t\u1ed1 nh\u1ecf h\u01a1n \\(\\sqrt{N}\\)</p> </li> <li> <p>\u0110\u00e1nh d\u1ea5u c\u00e1c b\u1ed9i l\u1edbn h\u01a1n n\u00f3 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> </li> </ul> <pre><code>void sieve(int N) {\n    bool isPrime[N+1];\n    for(int i = 0; i &lt;= N;++i) {\n        isPrime[i] = true;\n    }\n    isPrime[0] = false;\n    isPrime[1] = false;\n    for(int i = 2; i * i &lt;= N; ++i) {\n         if(isPrime[i] == true) {\n             // Mark all the multiples of i as composite numbers\n             for(int j = i * i; j &lt;= N; j += i)\n                 isPrime[j] = false;\n        }\n    }\n}\n</code></pre> <p>Code tr\u00ean \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 t\u00ecm c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(N\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n:</p> <p>S\u1ed1 l\u1ea7n l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p trong l\u00e0:</p> <ul> <li>Khi \\(i=2\\), v\u00f2ng l\u1eb7p trong l\u1eb7p \\(\\frac{N}{2}\\) l\u1ea7n.</li> <li>Khi \\(i=3\\), v\u00f2ng l\u1eb7p trong l\u1eb7p \\(\\frac{N}{3}\\) l\u1ea7n.</li> <li>Khi \\(i=5\\), v\u00f2ng l\u1eb7p trong l\u1eb7p \\(\\frac{N}{5}\\) l\u1ea7n.</li> <li>...</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng: \\(N.(\\frac{1}{2}+\\frac{1}{3}+\\frac{1}{5}+...)=O(N\\log{N})\\).</p>"},{"location":"translate/he/Number-Theory-2/#phan-tich-thua-so-nguyen-to-voi-sang-eratosthenes","title":"Ph\u00e2n t\u00edch th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 v\u1edbi s\u00e0ng Eratosthenes","text":"<p>C\u00e1ch c\u00e0i \u0111\u1eb7t:</p> <p>\u0110\u1ea7u ti\u00ean h\u00e3y xem x\u00e9t thu\u1eadt to\u00e1n ph\u00e2n t\u00edch ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 trong \\(O(\\sqrt{N})\\).</p> <pre><code>vector&lt;int&gt; factorize(int n) {\n    vector&lt;int&gt; res;\n    for (int i = 2; i * i &lt;= n; ++i) {\n        while (n % i == 0) {\n            res.push_back(i);\n            n /= i;\n        }\n    }\n    if (n != 1) {\n        res.push_back(n);\n    }\n    return res;\n}\n</code></pre> <p>T\u1ea1i m\u1ed7i b\u01b0\u1edbc ta ph\u1ea3i t\u00ecm s\u1ed1 nguy\u00ean t\u1ed1 nh\u1ecf nh\u1ea5t m\u00e0 \\(N\\) chia h\u1ebft cho s\u1ed1 \u0111\u00f3. Do \u0111\u00f3, ta ph\u1ea3i bi\u1ebfn \u0111\u1ed5i s\u00e0ng Eratosthenes \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c s\u1ed1 m\u00ecnh mong mu\u1ed1n trong \\(O(1)\\).</p> <pre><code>int minPrime[n + 1];\nfor (int i = 2; i * i &lt;= n; ++i) {\n    if (minPrime[i] == 0) { //if i is prime\n        for (int j = i * i; j &lt;= n; j += i) {\n            if (minPrime[j] == 0) {\n                minPrime[j] = i;\n            }\n        }\n    }\n}\nfor (int i = 2; i &lt;= n; ++i) {\n    if (minPrime[i] == 0) {\n        minPrime[i] = i;\n    }\n}\n</code></pre> <p>B\u00e2y gi\u1edd ta c\u00f3 th\u1ec3 ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 trong \\(O(\\log{N})\\).</p> <pre><code>vector&lt;int&gt; factorize(int n) {\n    vector&lt;int&gt; res;\n    while (n != 1) {\n        res.push_back(minPrime[n]);\n        n /= minPrime[n];\n    }\n    return res;\n}\n</code></pre> <p>\u0110i\u1ec1u ki\u1ec7n s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 ta ph\u1ea3i t\u1ea1o \u0111\u01b0\u1ee3c m\u1ea3ng c\u00f3 \u0111\u1ed9 d\u00e0i \\(N\\) ph\u1ea7n t\u1eed.</p> <p>Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y r\u1ea5t h\u1eefu \u00edch khi ta ph\u1ea3i ph\u00e2n tich nhi\u1ec1u s\u1ed1 nh\u1ecf ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1. Ta kh\u00f4ng c\u1ea7n thi\u1ebft ph\u1ea3i s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y trong m\u1ecdi b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1. Ngo\u00e0i ra, ta kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y n\u1ebfu \\(N\\) b\u1eb1ng \\(10^9\\) hay \\(10^12\\). Khi \u0111\u00f3, ta ch\u1ec9 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n \\(O(\\sqrt{N})\\).</p> <p>T\u00ednh ch\u1ea5t th\u00fa v\u1ecb: N\u1ebfu \\(N=p_1^{q_1}.p_2^{q_2}...p_k^{q_k}\\) v\u1edbi \\(p_1,p_2,...,p_k\\) l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec \\(N\\) c\u00f3 \\((q_1+1).(q_2+1)...(q_k+1)\\) \u01b0\u1edbc ph\u00e2n bi\u1ec7t.</p>"},{"location":"translate/he/Number-Theory-2/#sang-eratosthenes-tren-oan","title":"S\u00e0ng Eratosthenes tr\u00ean \u0111o\u1ea1n","text":"<p>\u0110\u00f4i khi b\u1ea1n ph\u1ea3i t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 kh\u00f4ng ph\u1ea3i tr\u00ean \u0111o\u1ea1n \\([1;N]\\) m\u00e0 l\u00e0 tr\u00ean \u0111o\u1ea1n \\([L;R]\\) v\u1edbi \\(R\\) l\u1edbn.</p> <p>\u0110i\u1ec1u ki\u1ec7n s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o m\u1ea3ng \u0111\u1ed9 d\u00e0i \\(R-L+1\\) ph\u1ea7n t\u1eed.</p> <p>C\u00e0i \u0111\u1eb7t:</p> <pre><code>vector&lt;bool&gt; isPrime(R - L + 1, true);  // x l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 khi v\u00e0 ch\u1ec9 khi isPrime[x - l] == true\n\nfor (long long i = 2; i * i &lt;= R; ++i) {\n    for (long long j = max(i * i, (L + i - 1) / i * i); j &lt;= R; j += i) {\n        isPrime[j - L] = false;\n    }\n}\n\nif (1 &gt;= L) {  // X\u00e9t ri\u00eang tr\u01b0\u1eddng h\u1ee3p s\u1ed1 1\n    isPrime[1 - L] = false;\n}\n\nfor (long long x = L; x &lt;= R; ++x) {\n    if (isPrime[x - L]) {\n        // i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1\n    }\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(\\sqrt{R}*k)\\) v\u1edbi \\(k\\) l\u00e0 h\u1eb1ng s\u1ed1.</p> <p>L\u01b0u \u00fd: N\u1ebfu b\u1ea1n ch\u1ec9 c\u1ea7n ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a m\u1ed9t hay m\u1ed9t v\u00e0i s\u1ed1 th\u00ec ta kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i x\u00e2y d\u1ef1ng s\u00e0ng. Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng h\u00e0m sau \u0111\u1ec3 ki\u1ec3m tra t\u00ednh nguy\u00ean t\u1ed1 c\u1ee7a m\u1ed9t s\u1ed1.</p> <pre><code>bool isPrime(int n) {\n    for (int i = 2; i * i &lt;= n; ++i) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre>"},{"location":"translate/he/Number-Theory-2/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:","text":"<ul> <li>SPOJ - PRIME1</li> <li>VNOJ - NKABD</li> </ul>"},{"location":"translate/he/Number-Theory-3/","title":"S\u1ed1 h\u1ecdc 3 - T\u00ednh (a^b) % c","text":"<p>Ngu\u1ed3n: HackerEarth v\u00e0 1 s\u1ed1 b\u00e0i vi\u1ebft tr\u00ean Wikipedia</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p> <p>X\u00e9t b\u00e0i to\u00e1n t\u00ednh \\(a^b\\%c\\), v\u1edbi \\(\\%\\) l\u00e0 d\u1ea5u \u0111\u1ed3ng d\u01b0 th\u1ee9c v\u00e0 \\(b\\) c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn (v\u00ed d\u1ee5 \\(b \\leq 10^{18}\\)).</p>"},{"location":"translate/he/Number-Theory-3/#thuat-toan-ngay-tho","title":"Thu\u1eadt to\u00e1n \"ng\u00e2y th\u01a1\"","text":"<p>\\(a^b\\) c\u00f3 th\u1ec3 vi\u1ebft l\u00e0 \\(a.a.a.a...\\) v\u1edbi \\(b\\) ch\u1eef \\(a\\). Do \u0111\u00f3 ta c\u00f3 th\u1ec3 nh\u00e2n \\(b\\) l\u1ea7n \\(a\\) \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3.</p> <p><pre><code>long long power(long long a, long long b, long long c) {\n    long long ans = 1;\n    for(int i = 1; i &lt;= b; i++) {\n        ans *= a;\n        ans %= c;\n    }\n    return ans;\n }\n</code></pre> Trong m\u1ed7i l\u1ea7n l\u1eb7p, bi\u1ebfn \\(ans\\) ch\u1ee9a k\u1ebft qu\u1ea3 \u0111\u01b0\u1ee3c nh\u00e2n v\u1edbi \\(a\\). Ngo\u00e0i ra, ta c\u1ea7n \u0111\u1ea3m b\u1ea3o \\(a\\) s\u1ebd kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(c\\) trong c\u00e1c l\u1ea7n l\u1eb7p, v\u00ec th\u1ebf ta l\u1ea5y ph\u1ea7n d\u01b0 khi chia \\(ans\\) cho \\(c\\) (<code>ans = ans % c</code>). Ta l\u00e0m \u0111\u01b0\u1ee3c v\u1eady l\u00e0 nh\u1edd t\u00ednh ch\u1ea5t \\((x.y) \\% n = ((x \\% n).(y \\% n)) \\% n\\).</p> <p>V\u00ec v\u1eady trong code tr\u00ean ta t\u00ednh \\((ans.a)\\%c\\) b\u1eb1ng c\u00e1ch t\u00ednh \\(((ans\\%c).(a\\%c))\\%c\\).</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \\(O(b)\\).</p>"},{"location":"translate/he/Number-Theory-3/#thuat-toan-chia-e-tri","title":"Thu\u1eadt to\u00e1n \"chia \u0111\u1ec3 tr\u1ecb\"","text":"<p>D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y thu\u1eadt to\u00e1n tr\u00ean kh\u00f4ng hi\u1ec7u qu\u1ea3, v\u00ec th\u1ebf ta c\u1ea7n t\u00ecm thu\u1eadt to\u00e1n hi\u1ec7u qu\u1ea3 h\u01a1n. Ta c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\log_{2}{b})\\) b\u1eb1ng k\u0129 thu\u1eadt l\u0169y th\u1eeba b\u1eb1ng c\u00e1ch b\u00ecnh ph\u01b0\u01a1ng (exponentiation by squaring). K\u0129 thu\u1eadt n\u00e0y ch\u1ec9 c\u1ea7n \\(O(\\log_{2}{b})\\) l\u1ea7n b\u00ecnh ph\u01b0\u01a1ng v\u00e0 \\(O(\\log_{2}{b})\\) ph\u00e9p nh\u00e2n \u0111\u1ec3 ra k\u1ebft qu\u1ea3. R\u00f5 r\u00e0ng c\u00e1ch gi\u1ea3i n\u00e0y hi\u1ec7u qu\u1ea3 h\u01a1n nhi\u1ec1u l\u1ea7n so v\u1edbi thu\u1eadt to\u00e1n \"ng\u00e2y th\u01a1\".</p> <p>Ta bi\u1ebft r\u1eb1ng \\(a^b\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi d\u1ea1ng:</p> <p>\\(a^b=(a^{\\frac{b}{2}})^2\\) n\u1ebfu \\(b\\) chia h\u1ebft cho 2.</p> <p>\\(a^b=a.(a^{[\\frac{b}{2}]})^2\\) n\u1ebfu \\(b\\) kh\u00f4ng chia h\u1ebft cho 2.</p> <p>\\(a^b=1\\) n\u1ebfu \\(b=0\\).</p> <pre><code>int sqr(int x) {\n    return x*x;\n}\n\nint pow(int a, int b, int MOD) {\n    if (b == 0) return 1 % MOD;\n    else\n        if (b % 2 == 0)\n            return sqr(pow(a, b/2)) % MOD;\n        else\n            return a * (sqr(pow(a, b/2)) % MOD) % MOD;\n}\n</code></pre> <p>Gi\u1ea3 s\u1eed ta c\u00f3 \\(a=2,b=5,c=5\\), khi \u0111\u00f3 k\u1ebft qu\u1ea3 l\u00e0 \\(pow(2,5,5)\\)</p> <ol> <li> <p>Do \\(b\\) l\u1ebb, n\u00ean h\u00e0m \\(pow(2,5,5)\\) g\u1ecdi h\u00e0m \\(pow(2,2,5)\\) \u0111\u1ec3 t\u00ednh \\(2.pow(2,2,5)\\)</p> </li> <li> <p>Trong h\u00e0m \\(pow(2,2,5)\\), do \\(b=2\\) ch\u1eb5n n\u00ean \\(pow(2,2,5)=pow(2,1,5)^2\\)</p> </li> <li> <p>Trong h\u00e0m \\(pow(2,1,5)\\), do \\(b=1\\) l\u1ebb n\u00ean \\(pow(2,1,5)=2*pow(2,0,5)\\).</p> </li> <li> <p>Trong h\u00e0m \\(pow(2,0,5)\\), do \\(b=0\\) n\u00ean ta tr\u1ea3 v\u1ec1 1.</p> </li> <li> <p>Quay l\u1ea1i h\u00e0m \\(pow(2,1,5)\\): h\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb 2.</p> </li> <li> <p>Quay l\u1ea1i h\u00e0m \\(pow(2,2,5)\\): h\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb 4.</p> </li> <li> <p>Quay l\u1ea1i h\u00e0m \\(pow(2,5,5)\\): h\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb \\((2.4^2)\\%5=32\\%5=2\\).</p> </li> </ol> <p>V\u1eady ta c\u00f3 \\(2^5\\%5=2\\). </p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \\(O(\\log_{2}{b})\\)</p>"},{"location":"translate/he/Number-Theory-4/","title":"S\u1ed1 h\u1ecdc 4 - Phi h\u00e0m Euler","text":"<p>Ngu\u1ed3n: HackerEarth v\u00e0 1 s\u1ed1 b\u00e0i vi\u1ebft tr\u00ean Wikipedia</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p>"},{"location":"translate/he/Number-Theory-4/#phi-ham-euler-eulers-totient-function","title":"Phi h\u00e0m Euler (Euler's totient function)","text":"<p>\u0110\u1ecbnh ngh\u0129a: \\(\\phi(N)\\) l\u00e0 s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(N\\) trong \u0111o\u1ea1n t\u1eeb 1 \u0111\u1ebfn \\(N\\).</p> <p>C\u00e1ch t\u00ednh:</p> <p>Ta \u0111\u00e3 bi\u1ebft ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 (factorization) l\u00e0 bi\u1ec3u di\u1ec5n s\u1ed1 \u0111\u00f3 d\u01b0\u1edbi d\u1ea1ng t\u00edch c\u1ee7a c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1. D\u1ec5 d\u00e0ng ch\u1ee9ng minh r\u1eb1ng c\u00e1ch bi\u1ec3u di\u1ec5n l\u00e0 duy nh\u1ea5t. V\u00ed d\u1ee5:</p> <ul> <li> <p>\\(8 = 2^3\\).</p> </li> <li> <p>\\(11 = 11\\).</p> </li> <li> <p>\\(36 = 2^2.3^3\\).</p> </li> <li> <p>\\(935 = 5.11.17\\).</p> </li> <li> <p>\\(5136 = 2^4.3.107\\).</p> </li> </ul> <p>T\u1eeb c\u00e1ch ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1, ta t\u00ednh \u0111\u01b0\u1ee3c phi h\u00e0m Euler c\u1ee7a s\u1ed1 \u0111\u00f3.</p> <pre><code>int phi(int n) {\n    int res = n;\n    for (int i = 2; i * i &lt;= n; ++i) {\n        if (n % i == 0) {\n            while (n % i == 0) {\n                n /= i;\n            }\n            res -= res / i;\n        }\n    }\n    if (n != 1) {\n        res -= res / n;\n    }\n    return res;\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \\(O(\\sqrt{N})\\).</p>"},{"location":"translate/he/Number-Theory-4/#cong-thuc","title":"C\u00f4ng th\u1ee9c","text":"<p>M\u1ed9t c\u00f4ng th\u1ee9c th\u01b0\u1eddng g\u1eb7p \u0111\u1ec3 t\u00ednh phi:</p> <p>$\\phi(N) = n * \\prod_{p|n}(1 - 1/p) $</p> <p>(p l\u00e0 c\u00e1c \u01b0\u1edbc nguy\u00ean t\u1ed1 c\u1ee7a n).</p> <p>V\u00ed d\u1ee5:</p> <p>\\(\\phi(6) = 6 \\* (1 - 1/2) \\* (1 - 1/3) = 2\\)</p> <p>C\u00e0i \u0111\u1eb7t:</p> <pre><code>int eulerPhi(int n) { // = n (1-1/p1) ... (1-1/pn)\n    if (n == 0) return 0;\n    int ans = n;\n    for (int x = 2; x*x &lt;= n; ++x) {\n        if (n % x == 0) {\n            ans -= ans / x;\n            while (n % x == 0) n /= x;\n        }\n    }\n    if (n &gt; 1) ans -= ans / n;\n    return ans;\n}\n</code></pre> <p>Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t, \\(N = p^{k}, \\phi(N) = p^{k-1} \\* (p-1)\\).</p>"},{"location":"translate/he/Number-Theory-4/#ham-nhan-tinh","title":"H\u00e0m Nh\u00e2n t\u00ednh","text":"<p>\u0110\u1ec3 t\u00ednh Phi h\u00e0m Euler nhanh h\u01a1n, c\u00e1c b\u1ea1n c\u1ea7n bi\u1ebft v\u1ec1 H\u00e0m Nh\u00e2n T\u00ednh.</p>"},{"location":"translate/he/Number-Theory-4/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:","text":"<ul> <li>VNOJ - VOSPOW</li> <li>VNOJ - GCDSUM</li> </ul>"},{"location":"translate/he/Number-Theory-5/","title":"S\u1ed1 h\u1ecdc 5 - C\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 T\u1ed5 h\u1ee3p (Combinatorics)","text":"<p>Ngu\u1ed3n: HackerEarth</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p>"},{"location":"translate/he/Number-Theory-5/#tap-hop-set","title":"T\u1eadp h\u1ee3p (Set)","text":""},{"location":"translate/he/Number-Theory-5/#tap-hop-set-la-gi","title":"T\u1eadp h\u1ee3p (Set) l\u00e0 g\u00ec?","text":"<p>Trong to\u00e1n h\u1ecdc, t\u1eadp h\u1ee3p l\u00e0 m\u1ed9t nh\u00f3m c\u00e1c ph\u1ea7n t\u1eed, m\u1ed7i ph\u1ea7n t\u1eed ph\u00e2n bi\u1ec7t v\u1edbi nhau.</p> <p>V\u00ed d\u1ee5, 2, 4, 6 \u0111\u01b0\u1ee3c coi l\u00e0 c\u00e1c ph\u1ea7n t\u1eed ph\u00e2n bi\u1ec7t khi ta x\u00e9t t\u1eebng s\u1ed1 m\u1ed9t, nh\u01b0ng khi ch\u00fang ta nh\u00f3m ba s\u1ed1 \u1ea5y th\u00ec ta \u0111\u01b0\u1ee3c m\u1ed9t t\u1eadp h\u1ee3p g\u1ed3m ba ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 {2,4,6}.</p> <p>T\u1eadp h\u1ee3p l\u00e0 m\u1ed9t trong nh\u1eefng kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n trong To\u00e1n h\u1ecdc.</p> <p></p> <p>T\u1eadp h\u1ee3p c\u00e1c h\u00ecnh \u0111a gi\u00e1c \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n trong bi\u1ec3u \u0111\u1ed3 Venn.</p>"},{"location":"translate/he/Number-Theory-5/#tap-con-subset","title":"T\u1eadp con (Subset)","text":"<p>N\u1ebfu m\u1ecdi ph\u1ea7n t\u1eed thu\u1ed9c t\u1eadp \\(A\\) c\u0169ng thu\u1ed9c t\u1eadp h\u1ee3p \\(B\\), th\u00ec t\u1eadp \\(A\\) l\u00e0 t\u1eadp con c\u1ee7a t\u1eadp \\(B\\), k\u00ed hi\u1ec7u l\u00e0 \\(A \\subset B\\).</p> <p>T\u01b0\u01a1ng t\u1ef1, ta c\u00f3 th\u1ec3 vi\u1ebft \\(B \\supset A\\), \u0111\u1ecdc l\u00e0 \\(B\\) l\u00e0 t\u1eadp cha (superset) c\u1ee7a t\u1eadp \\(A\\).</p> <p>Quan h\u1ec7 cha-con gi\u1eefa c\u00e1c t\u1eadp h\u1ee3p c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 quan h\u1ec7 ch\u1ee9a nhau (containment) hay quan h\u1ec7 bao h\u00e0m (inclusion).</p> <p>N\u1ebfu \\(A\\) l\u00e0 t\u1eadp con c\u1ee7a t\u1eadp \\(B\\) nh\u01b0ng kh\u00f4ng b\u1eb1ng t\u1eadp \\(B\\), th\u00ec \\(A\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 t\u1eadp con kh\u00f4ng t\u1ea7m th\u01b0\u1eddng (proper subset) c\u1ee7a t\u1eadp \\(B\\), k\u00ed hi\u1ec7u l\u00e0 \\(A \\subsetneq B\\), hay \\(B \\supsetneq A\\) (\u0111\u1ecdc l\u00e0 \\(B\\) l\u00e0 t\u1eadp cha kh\u00f4ng t\u1ea7m th\u01b0\u1eddng (proper superset) c\u1ee7a t\u1eadp \\(A\\)).</p> <p>V\u00ed d\u1ee5:</p> <ul> <li> <p>{1,3} \\(\\subset\\) {1,2,3,4}</p> </li> <li> <p>{1,2,3,4} \\(\\subset\\) {1,2,3,4}</p> </li> </ul> <p>T\u1eadp r\u1ed7ng (empty set, k\u00ed hi\u1ec7u \\(\\varnothing\\)) l\u00e0 t\u1eadp con c\u1ee7a t\u1ea5t c\u0103 c\u00e1c t\u1eadp v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp l\u00e0 t\u1eadp con c\u1ee7a ch\u00ednh n\u00f3:</p> <ul> <li> <p>\\(\\varnothing \\subset A\\).</p> </li> <li> <p>\\(A \\subset A\\).</p> </li> </ul> <p></p> <p>\\(A\\) l\u00e0 t\u1eadp con c\u1ee7a t\u1eadp \\(B\\).</p>"},{"location":"translate/he/Number-Theory-5/#cac-phep-toan-voi-tap-hop","title":"C\u00e1c ph\u00e9p to\u00e1n v\u1edbi t\u1eadp h\u1ee3p","text":"<p>C\u00f3 nhi\u1ec1u ph\u00e9p to\u00e1n c\u00f3 kh\u1ea3 n\u0103ng x\u00e2y d\u1ef1ng m\u1ed9t t\u1eadp h\u1ee3p m\u1edbi d\u1ef1a tr\u00ean c\u00e1c t\u1eadp h\u1ee3p \u0111\u00e3 cho.</p>"},{"location":"translate/he/Number-Theory-5/#phep-hop-union","title":"Ph\u00e9p h\u1ee3p (Union)","text":"<p>Hai t\u1eadp h\u1ee3p c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gh\u00e9p v\u00e0o nhau. H\u1ee3p c\u1ee7a hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\), k\u00ed hi\u1ec7u l\u00e0 \\(A \\cup B\\), l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c t\u1eadp \\(A\\) ho\u1eb7c thu\u1ed9c t\u1eadp \\(B\\).</p> <p>V\u00ed d\u1ee5:</p> <ul> <li>{1,2} \\(\\cup\\) {1,2} = {1,2}</li> <li>{1,2} \\(\\cup\\) {2,3} = {1,2,3}</li> <li>{1,2,3} \\(\\cup\\) {3,4,5} = {1,2,3,4,5}</li> </ul> <p></p> <p>H\u1ee3p c\u1ee7a hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\), k\u00ed hi\u1ec7u l\u00e0 \\(A \\cup B\\).</p> <p>M\u1ed9t v\u00e0i t\u00ednh ch\u1ea5t c\u01a1 b\u1ea3n c\u1ee7a ph\u00e9p h\u1ee3p:</p> <ul> <li> <p>\\(A \\cup B = B \\cup A\\).</p> </li> <li> <p>\\((A \\cup B) \\cup C = A \\cup (B \\cup C)\\).</p> </li> <li> <p>\\(A \\subset (A \\cup B)\\).</p> </li> <li> <p>\\(A \\cup A = A\\).</p> </li> <li> <p>\\(A \\subset B\\) khi v\u00e0 ch\u1ec9 khi \\(A \\cup B = B\\).</p> </li> </ul>"},{"location":"translate/he/Number-Theory-5/#phep-giao-intersection","title":"Ph\u00e9p giao (Intersection)","text":"<p>M\u1ed9t t\u1eadp h\u1ee3p m\u1edbi c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng t\u1eeb c\u00e1c ph\u1ea9n t\u1eed m\u00e0 c\u1ea3 hai t\u1eadp \u0111\u1ec1u c\u00f3. Giao cu\u1ea3 hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\), k\u00ed hi\u1ec7u \\(A \\cap B\\), l\u00e0 t\u1eadp h\u1ee3p c\u00e1c ph\u1ea7n t\u1eed c\u00f9ng thu\u1ed9c t\u1eadp \\(A\\) v\u00e0 t\u1eadp \\(B\\). N\u1ebfu \\(A \\cap B = \\varnothing\\), t\u1eadp \\(A\\) v\u00e0 t\u1eadp \\(B\\) l\u00e0 hai t\u1eadp r\u1eddi nhau (disjoint).</p> <p>V\u00ed d\u1ee5:</p> <ul> <li>{1,2} \\(\\cap\\) {1,2} = {1,2}.</li> <li>{1,2} \\(\\cap\\) {2,3} = {2}.</li> </ul> <p></p> <p>Giao c\u1ee7a hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\), k\u00ed hi\u1ec7u l\u00e0 \\(A \\cap B\\).</p> <p>M\u1ed9t v\u00e0i t\u00ednh ch\u1ea5t c\u01a1 b\u1ea3n c\u1ee7a ph\u00e9p h\u1ee3p:</p> <ul> <li> <p>\\(A \\cap B = B \\cap A\\).</p> </li> <li> <p>\\((A \\cap B) \\cap C = A \\cap (B \\cap C)\\).</p> </li> <li> <p>\\(A \\cap B \\subset A\\).</p> </li> <li> <p>\\(A \\cap A = A\\).</p> </li> <li> <p>\\(A \\cap \\varnothing = \\varnothing\\).</p> </li> <li> <p>\\(A \\subset B\\) khi v\u00e0 ch\u1ec9 khi \\(A \\cap B = A\\).</p> </li> </ul>"},{"location":"translate/he/Number-Theory-5/#phep-lay-hieu-relative-complement","title":"Ph\u00e9p l\u1ea5y hi\u1ec7u (Relative complement)","text":"<p>Ta c\u00f3 th\u1ec3 th\u1ef1c hi\u00ean ph\u00e9p tr\u1eeb v\u1edbi hai t\u1eadp h\u1ee3p. Hi\u1ec7u c\u1ee7a hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\), k\u00ed hi\u1ec7u l\u00e0 \\(A \\backslash B\\), l\u00e0 t\u1eadp h\u1ee3p bao g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c \\(A\\) nh\u01b0ng kh\u00f4ng thu\u1ed9c \\(B\\). L\u01b0u \u00fd r\u1eb1ng ta c\u00f3 th\u1ec3 tr\u1eeb ph\u1ea7n t\u1eed m\u00e0 kh\u00f4ng thu\u1ed9c t\u1eadp h\u1ee3p, v\u00ed d\u1ee5 nh\u01b0 b\u1ecf ph\u1ea7n t\u1eed 'xanh' kh\u1ecfi t\u1eadp h\u1ee3p {1,2,3}, khi \u0111\u00f3 t\u1eadp h\u1ee3p {1,2,3} kh\u00f4ng b\u1ecb thay \u0111\u1ed5i.</p> <p>Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p t\u1eadp \\(A\\) \u0111\u01b0\u1ee3c coi l\u00e0 t\u1eadp con c\u1ee7a m\u1ed9t t\u1eadp \\(U\\) l\u1edbn h\u01a1n. Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, \\(U \\backslash A\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ph\u1ea7n b\u00f9 ho\u00e0n to\u00e0n (absolute complement) c\u1ee7a t\u1eadp \\(A\\), v\u00e0 \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(A'\\).</p> <p>V\u00ed d\u1ee5:</p> <ul> <li> <p>{1,2} \\(\\backslash\\) {1,2} = \\(\\varnothing\\).</p> </li> <li> <p>{1,2,3,4} \\(\\backslash\\) {1,3} = {2,4}.</p> </li> <li> <p>N\u1ebfu \\(U\\) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c s\u1ed1 nguy\u00ean, \\(E\\) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c s\u1ed1 nguy\u00ean ch\u1eb5n, \\(O\\) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c s\u1ed1 nguy\u00ean l\u1ebb, khi \u0111\u00f3 \\(U \\backslash E = E' = O\\).</p> </li> </ul> <p></p> <p>Hi\u1ec7u c\u1ee7a hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\).</p> <p></p> <p>Ph\u1ea7n b\u00f9 c\u1ee7a \\(A\\) trong \\(U\\).</p> <p>M\u1ed9t v\u00e0i t\u00ednh ch\u1ea5t c\u01a1 b\u1ea3n c\u1ee7a ph\u00e9p l\u1ea5y hi\u1ec7u</p> <ul> <li> <p>\\(A \\backslash B \\ne B \\backslash A\\) v\u1edbi \\(A \\ne B\\).</p> </li> <li> <p>\\(A \\cup A' = U\\).</p> </li> <li> <p>\\(A \\cap A' = \\varnothing\\).</p> </li> <li> <p>\\((A')' = A\\).</p> </li> <li> <p>\\(A \\backslash A = \\varnothing\\).</p> </li> <li> <p>\\(A \\backslash B = A \\cap B'\\).</p> </li> <li> <p>\\(U' = \\varnothing\\) v\u00e0 \\(\\varnothing' = U\\).</p> </li> </ul>"},{"location":"translate/he/Number-Theory-5/#cac-quy-tac-co-ban","title":"C\u00e1c quy t\u1eafc c\u01a1 b\u1ea3n","text":"<p>K\u00ed hi\u1ec7u \\(\\|A\\|\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a t\u1eadp \\(A\\) (hay c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a t\u1eadp \\(A\\)).</p> <p>M\u1ed9t v\u00e0i quy t\u1eafc v\u1ec1 t\u1ed5 h\u1ee3p c\u1ea7n nh\u1edb:</p> <ol> <li> <p>Quy t\u1eafc nh\u00e2n (The Rule of Product): Gi\u1ea3 s\u1eed c\u00f3 hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\). Khi \u0111\u00f3 s\u1ed1 c\u00e1ch ch\u1ecdn c\u1eb7p g\u1ed3m m\u1ed9t ph\u1ea7n t\u1eed thu\u1ed9c t\u1eadp \\(A\\) v\u00e0 m\u1ed9t ph\u1ea7n t\u1eed thu\u1ed9c t\u1eadp \\(B\\) l\u00e0 \\(\\|A\\|.\\|B\\|\\)</p> </li> <li> <p>Quy t\u1eafc c\u1ed9ng (The Rule of Sum): Gi\u1ea3 s\u1eed c\u00f3 hai t\u1eadp h\u1ee3p \\(A\\) v\u00e0 \\(B\\). Khi \u0111\u00f3 s\u1ed1 c\u00e1ch ch\u1ecdn m\u1ed9t ph\u1ea7n t\u1eed thu\u1ed9c t\u1eadp \\(A\\) ho\u1eb7c thu\u1ed9c t\u1eadp \\(B\\) l\u00e0 \\(\\|A\\|+\\|B\\|\\) n\u1ebfu hai t\u1eadp \\(A\\) v\u00e0 \\(B\\) r\u1eddi nhau.</p> </li> <li> <p>Quy t\u1eafc c\u1ed9ng m\u1edf r\u1ed9ng (sieve principle) (c\u00f2n g\u1ecdi l\u00e0 c\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb (Inclusion-Exclusion Formula)): \\(\\|A \\cup B\\| = \\|A\\| + \\|B\\| - \\|A \\cap B\\|\\).</p> </li> </ol> <p>Trong tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t, ta c\u00f3:</p> <p>\\(\\|\\bigcup_{i=1}^n A_i\\| = \\sum_{i=1}^n \\|A_i\\| - \\sum_{i \\ne j} \\|A_i \\cap A_j\\| + \\|A_1 \\cap A_2 \\cap A_3\\| + \\|A_1 \\cap A_2 \\cap A_4\\| + ... + \\|A_{n-2} \\cap A_{n-1} \\cap A_n\\| - ... -\\) $ (-1)^n|A_1 \\cap A_2 \\cap ... \\cap A_n|$</p> <p>L\u00ed do ta ph\u1ea3i c\u1ed9ng tr\u1eeb giao c\u1ee7a m\u1ed9t s\u1ed1 t\u1eadp h\u1ee3p v\u00ec n\u1ebfu ta kh\u00f4ng l\u00e0m nh\u01b0 v\u1eady, ta c\u00f3 th\u1ec3 \u0111\u1ebfm nhi\u1ec1u l\u1ea7n c\u00e1c ph\u1ea7n t\u1eed xu\u1ea5t hi\u1ec7n t\u1ea1i nhi\u1ec1u t\u1eadp h\u1ee3p kh\u00e1c nhau.</p> <p>C\u00e1c quy t\u1eafc tr\u00ean c\u0169ng \u0111\u00fang khi ta c\u00f3 ba hay nhi\u1ec1u t\u1eadp h\u1ee3p.</p>"},{"location":"translate/he/Number-Theory-5/#cac-kien-thuc-co-ban-ve-chinh-hop-va-hoan-vi-permutation","title":"C\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 Ch\u1ec9nh h\u1ee3p v\u00e0 Ho\u00e1n v\u1ecb (Permutation)","text":""},{"location":"translate/he/Number-Theory-5/#chinh-hop-khong-lap-permutation-of-distinct-objects","title":"Ch\u1ec9nh h\u1ee3p kh\u00f4ng l\u1eb7p (Permutation of Distinct Objects)","text":"<p>Cho t\u1eadp h\u1ee3p \\(A\\) g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed. M\u1ed7i b\u1ed9 g\u1ed3m \\(k\\) (\\(0 \\leq k \\leq n\\)) ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c s\u1eafp th\u1ee9 t\u1ef1 c\u1ee7a t\u1eadp h\u1ee3p \\(A\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t ch\u1ec9nh h\u1ee3p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed thu\u1ed9c \\(A\\).</p> <p>V\u00ed d\u1ee5: Trong tr\u1eadn chung k\u1ebft b\u00f3ng \u0111\u00e1 ph\u1ea3i ph\u00e2n \u0111\u1ecbnh th\u1eafng thua b\u1eb1ng \u0111\u00e1 lu\u00e2n l\u01b0u 11 m\u00e9t. Hu\u1ea5n luy\u1ec7n vi\u00ean c\u1ee7a m\u1ed7i \u0111\u1ed9i c\u1ea7n tr\u00ecnh v\u1edbi tr\u1ecdng t\u00e0i m\u1ed9t danh s\u00e1ch s\u1eafp th\u1ee9 t\u1ef1 5 c\u1ea7u th\u1ee7 trong s\u1ed1 11 c\u1ea7u th\u1ee7 \u0111\u1ec3 \u0111\u00e1 lu\u00e2n l\u01b0u 5 qu\u1ea3 11 m\u00e9t.</p> <p>M\u1ed7i danh s\u00e1ch c\u00f3 x\u1ebfp th\u1ee9 t\u1ef1 5 c\u1ea7u th\u1ee7 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t ch\u1ec9nh h\u1ee3p ch\u1eadp 5 c\u1ee7a 11 c\u1ea7u th\u1ee7.</p> <p>K\u00ed hi\u1ec7u s\u1ed1 ch\u1ec9nh h\u1ee3p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed l\u00e0 \\(A_n^k\\).</p> <p>S\u1ed1 ch\u1ec9nh h\u1ee3p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c t\u00ednh b\u1edfi c\u00f4ng th\u1ee9c</p> <p>\\(A_n^k = n(n-1)...(n-k+1) = \\frac{n!}{(n-k)!}\\).</p> <p>v\u1edbi \\(n!=1.2.3...n\\) v\u00e0 \\(0! = 1\\).</p>"},{"location":"translate/he/Number-Theory-5/#hoan-vi-khong-lap","title":"Ho\u00e1n v\u1ecb kh\u00f4ng l\u1eb7p","text":"<p>M\u1ed7i m\u1ed9t ch\u1ec9nh h\u1ee3p ch\u1eadp \\(n\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t ho\u00e1n v\u1ecb c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed \u0111\u00f3.</p> <p>K\u00ed hi\u1ec7u s\u1ed1 ho\u00e1n v\u1ecb c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed l\u00e0 \\(P_n\\).</p> <p>S\u1ed1 ho\u00e1n v\u1ecb c\u1ee7a \\(n\\) \u0111\u01b0\u1ee3c t\u00ednh b\u1edfi c\u00f4ng th\u1ee9c:</p> <p>\\(P_n = n!\\).</p>"},{"location":"translate/he/Number-Theory-5/#hoan-vi-lap-permutation-with-repetition","title":"Ho\u00e1n v\u1ecb l\u1eb7p (Permutation with Repetition)","text":"<p>Ho\u00e1n v\u1ecb trong \u0111\u00f3 m\u1ed7i ph\u1ea7n t\u1eed xu\u1ea5t hi\u1ec7n \u00edt nh\u1ea5t m\u1ed9t l\u1ea7n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ho\u00e1n v\u1ecb l\u1eb7p.</p> <p>S\u1ed1 ho\u00e1n v\u1ecb l\u1eb7p c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed thu\u1ed9c \\(k\\) lo\u1ea1i, m\u00e0 c\u00e1c ph\u1ea7n t\u1eed lo\u1ea1i \\(i\\) (\\(1 \\leq i \\leq k\\)) xu\u1ea5t hi\u1ec7n \\(n_i\\) l\u1ea7n \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(P(n_1,n_2,...,n_k)\\) v\u00e0 \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c</p> <p>\\(P(n_1,n_2,...,n_k) = \\frac{n!}{n_1!n_2!...n_k!}\\)</p>"},{"location":"translate/he/Number-Theory-5/#cac-oi-tuong-to-hop-combinatorial-objects","title":"C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng t\u1ed5 h\u1ee3p (Combinatorial Objects)","text":"<p>M\u1ed9t song \u00e1nh (bijection) l\u00e0 t\u01b0\u01a1ng \u1ee9ng m\u1ed9t-m\u1ed9t gi\u1eefa hai t\u1eadp h\u1ee3p, v\u00ed d\u1ee5 t\u1eadp h\u1ee3p nh\u1eefng ng\u01b0\u1eddi ch\u1ed3ng v\u00e0 t\u1eadp h\u1ee3p nh\u1eefng ng\u01b0\u1eddi v\u1ee3 (m\u1ed9t ch\u1ed3ng ch\u1ec9 c\u00f3 m\u1ed9t v\u1ee3, v\u00e0 m\u1ed9t v\u1ee3 ch\u1ec9 c\u00f3 \u0111\u00fang m\u1ed9t ch\u1ed3ng). Do \u0111\u00f3, n\u1ebfu b\u1ea1n bi\u1ebft \u0111\u01b0\u1ee3c l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a m\u1ed9t t\u1eadp h\u1ee3p, b\u1ea1n c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a t\u1eadp kia. Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u00ednh ch\u1ea5t n\u00e0y trong nhi\u1ec1u b\u00e0i to\u00e1n T\u1ed5 h\u1ee3p, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c b\u00e0i to\u00e1n \u0111\u1ebfm, nh\u01b0ng tr\u01b0\u1edbc ti\u00ean, ta ph\u1ea3i bi\u1ebft t\u00ednh l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a m\u1ed9t t\u1eadp c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng t\u1ed5 h\u1ee3p.</p>"},{"location":"translate/he/Number-Theory-5/#to-hop-khong-lap-combinations-without-repetition","title":"T\u1ed5 h\u1ee3p kh\u00f4ng l\u1eb7p (Combinations without repetition)","text":"<p>Trong t\u1ed5 h\u1ee3p, ta th\u01b0\u1eddng ph\u1ea3i ch\u1ecdn m\u1ed9t t\u1eadp c\u00e1c ph\u1ea7n t\u1eed n\u00e0o \u0111\u00f3 v\u00e0 kh\u00f4ng quan t\u00e2m \u0111\u1ebfn th\u1ee9 t\u1ef1 c\u1ee7a ch\u00fang. S\u1ed1 l\u01b0\u1ee3ng t\u1eadp con \\(k\\) ph\u1ea7n t\u1eed c\u1ee7a m\u1ed9t t\u1eadp \\(n\\) ph\u1ea7n t\u1eed (c\u00f2n g\u1ecdi l\u00e0 s\u1ed1 t\u1ed5 h\u1ee3p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed) l\u00e0:</p> <p>\\(\\binom{n}{k} = C^k_n = \\frac{n!}{k!(n-k)!}\\)</p>"},{"location":"translate/he/Number-Theory-5/#to-hop-co-lap-combinations-with-repetition","title":"T\u1ed5 h\u1ee3p c\u00f3 l\u1eb7p (Combinations with repetition)","text":"<p>Gi\u1ea3 s\u1eed ta c\u1ea7n ch\u1ecdn \\(k\\) ph\u1ea7n t\u1eed t\u1eeb m\u1ed9t t\u1eadp \\(n\\) ph\u1ea7n t\u1eed, kh\u00f4ng quan tr\u1ecdng th\u1ee9 t\u1ef1 v\u00e0 m\u1ed9t ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ecdn nhi\u1ec1u l\u1ea7n. Khi \u0111\u00f3, s\u1ed1 c\u00e1ch ch\u1ecdn l\u00e0 s\u1ed1 t\u1ed5 h\u1ee3p l\u1eb7p ch\u1eadp \\(k\\) c\u1ee7a \\(n\\) ph\u1ea7n t\u1eed v\u00e0 c\u00f3 gi\u00e1 tr\u1ecb l\u00e0:</p> <p>\\(\\overline{C^k_n} = \\binom{n+k-1}{k} = \\frac{(n+k-1)!}{k!(n-1)!}\\)</p> <p>M\u1ed9t t\u00ednh ch\u1ea5t th\u00fa v\u1ecb v\u1ec1 s\u1ed1 t\u1ed5 h\u1ee3p c\u00f3 l\u1eb7p: \\(\\overline{C^k_n}\\) l\u00e0 s\u1ed1 nghi\u1ec7m nguy\u00ean kh\u00f4ng \u00e2m c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh: \\(x_1+x_2+...+x_n = k\\) v\u1edbi \\(k\\) l\u00e0 h\u1eb1ng s\u1ed1 nguy\u00ean d\u01b0\u01a1ng.</p>"},{"location":"translate/he/Number-Theory-5/#vector-nhi-phan-binary-vectors","title":"Vector nh\u1ecb ph\u00e2n (Binary Vectors)","text":"<p>Vector nh\u1ecb ph\u00e2n l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u <code>&lt;bitset&gt;</code> trong C++ STL.</p> <p>Ngo\u00e0i ra, c\u00e1c t\u00ednh ch\u1ea5t v\u1ec1 t\u1ed5 h\u1ee3p c\u1ee7a vector nh\u1ecb ph\u00e2n c\u0169ng r\u1ea5t quan tr\u1ecdng. Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t hay \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng c\u1ee7a vector nh\u1ecb ph\u00e2n.</p> <ol> <li> <p>S\u1ed1 l\u01b0\u1ee3ng vector nh\u1ecb ph\u00e2n \u0111\u1ed9 d\u00e0i \\(n\\) l\u00e0 \\(2^n\\).</p> </li> <li> <p>S\u1ed1 l\u01b0\u1ee3ng vector nh\u1ecb ph\u00e2n \u0111\u1ed9 d\u00e0i \\(n\\) c\u00f3 \\(k\\) s\u1ed1 1 l\u00e0 \\(\\binom{n}{k}\\), v\u00ec ta ch\u1ecdn \\(k\\) v\u1ecb tr\u00ed c\u00f3 s\u1ed1 1 trong \\(n\\) v\u1ecb tr\u00ed.</p> </li> <li> <p>S\u1ed1 l\u01b0\u1ee3ng c\u1eb7p vector nh\u1ecb ph\u00e2n \\((a;b)\\) (c\u00f3 quan t\u00e2m \u0111\u1ebfn th\u1ee9 t\u1ef1) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n kho\u1ea3ng c\u00e1ch gi\u1eefa \\(a\\) v\u00e0 \\(b\\) l\u00e0 \\(k\\) l\u00e0 \\(\\binom{n}{k}.2^n\\).</p> </li> </ol> <p>Kho\u1ea3ng c\u00e1ch gi\u1eefa hai vector nh\u1ecb ph\u00e2n \\(a\\) v\u00e0 \\(b\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng gi\u00e1 tr\u1ecb \\(i\\) nguy\u00ean kh\u00f4ng \u00e2m th\u1ecfa m\u00e3n \\(a_i \\ne b_i\\)</p>"},{"location":"translate/he/Number-Theory-5/#he-thuc-truy-hoi-recurrence-relations","title":"H\u1ec7 th\u1ee9c truy h\u1ed3i (Recurrence Relations)","text":"<p>H\u1ec7 th\u1ee9c truy h\u1ed3i l\u00e0 c\u00f4ng c\u1ee5 h\u1ed7 tr\u1ee3 \u0111\u1eafc l\u1ef1c trong c\u00e1c b\u00e0i to\u00e1n \u0111\u1ebfm. Truy h\u1ed3i c\u00f2n gi\u00fap ta \u0111\u1ecbnh ngh\u0129a \u0111\u01b0\u1ee3c nhi\u1ec1u c\u1ea5u tr\u00fac nh\u01b0 c\u00e2y, danh s\u00e1ch, c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng hay c\u00e1c thu\u1eadt to\u00e1n \"chia \u0111\u1ec3 tr\u1ecb\", n\u00ean truy h\u1ed3i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t nhi\u1ec1u trong tin h\u1ecdc.</p> <p>H\u1ec7 th\u1ee9c truy h\u1ed3i l\u00e0 m\u1ed9t ph\u01b0\u01a1ng tr\u00ecnh d\u00f9ng \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh d\u00e3y s\u1ed1 ho\u1eb7c h\u00e0m s\u1ed1 b\u1eb1ng c\u00e1ch d\u00f9ng c\u00e1c s\u1ed1 h\u1ea1ng tr\u01b0\u1edbc \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a s\u1ed1 h\u1ea1ng sau. N\u00f3 r\u1ea5t h\u1eefu d\u1ee5ng v\u00ec nhi\u1ec1u d\u00e3y s\u1ed1 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng h\u1ec7 th\u1ee9c truy h\u1ed3i:</p> <ul> <li> <p>H\u00e0m \u0111a th\u1ee9c (Polynomials): \\(a_n=a_{n-1}+1, a_1=1 \\rightarrow a_n=n\\).</p> </li> <li> <p>H\u00e0m m\u0169 (Exponentials): \\(a_n=2a_{n-1}, a_1=2 \\rightarrow a_n=2^n\\).</p> </li> <li> <p>Giai th\u1eeba: \\(a_n=n.a_{n-1}, a_1 = 1 \\rightarrow a_n=n!\\).</p> </li> </ul> <p>Ta th\u01b0\u1eddng d\u1ec5 d\u00e0ng t\u00ecm \u0111\u01b0\u1ee3c h\u1ec7 th\u1ee9c truy h\u1ed3i \u0111\u1ec3 gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n \u0111\u1ebfm. Gi\u1ea3i h\u1ec7 th\u1ee9c truy h\u1ed3i \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c d\u1ea1ng c\u00f4ng th\u1ee9c c\u1ea7n t\u00ecm l\u00e0 c\u1ea3 m\u1ed9t ngh\u1ec7 thu\u1eadt, tuy v\u1eady ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng tr\u1ef1c ti\u1ebfp h\u1ec7 th\u1ee9c truy h\u1ed3i \u0111\u1ec3 gi\u1ea3i m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"translate/he/Number-Theory-5/#he-so-nhi-thuc-binomial-coefficients","title":"H\u1ec7 s\u1ed1 nh\u1ecb th\u1ee9c (Binomial Coefficients)","text":"<p>H\u1ec7 s\u1ed1 nh\u1ecb th\u1ee9c \\(\\binom{n}{k}\\) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 c\u00e1ch ch\u1ecdn \\(k\\) v\u1eadt trong s\u1ed1 \\(n\\) v\u1eadt.</p>"},{"location":"translate/he/Number-Theory-5/#em-so-uong-i-tren-luoi-paths-across-a-grid","title":"\u0110\u1ebfm s\u1ed1 \u0111\u01b0\u1eddng \u0111i tr\u00ean l\u01b0\u1edbi (Paths Across a Grid)","text":"<p>C\u00f3 bao nhi\u00eau c\u00e1ch \u0111\u1ec3 \u0111i t\u1eeb g\u00f3c tr\u00e1i tr\u00ean c\u1ee7a m\u1ed9t b\u1ea3ng \\(n * m\\) \u00f4 \u0111\u1ebfn g\u00f3c ph\u1ea3i d\u01b0\u1edbi c\u1ee7a \u00f4 \u0111\u00f3, n\u1ebfu ta ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e9p \u0111i v\u1ec1 b\u00ean ph\u1ea3i ho\u1eb7c \u0111i xu\u1ed1ng d\u01b0\u1edbi. Ta th\u1ea5y m\u1ecdi \u0111\u01b0\u1eddng \u0111i h\u1ee3p l\u1ec7 c\u00f3 \\(n+m\\) b\u01b0\u1edbc, v\u00e0 hai \u0111\u01b0\u1eddng \u0111i kh\u00e1c nhau n\u1ebfu v\u00e0 ch\u1ec9 n\u1ebfu ch\u00fang c\u00f3 m\u1ed9t b\u01b0\u1edbc \u0111i xu\u1ed1ng d\u01b0\u1edbi kh\u00e1c nhau, v\u1eady ta c\u00f3 \\(\\binom{n+m}{n}\\) c\u00e1ch \u0111i.</p> <p>T\u00ednh h\u1ec7 s\u1ed1 nh\u1ecb th\u1ee9c c\u00f3 th\u1ec3 g\u00e2y tr\u00e0n s\u1ed1 \u1edf c\u00e1c b\u01b0\u1edbc trung gian, v\u00ec v\u1eady ta n\u00ean t\u00ednh h\u1ec7 s\u1ed1 nh\u1ecb th\u1ee9c b\u1eb1ng c\u00f4ng th\u1ee9c: \\(\\binom{n}{k}=\\binom{n-1}{k-1}+\\binom{n-1}{k}\\)</p> <pre><code>/*\nS\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c truy h\u1ed3i:\n    nCr = (n-1)Cr + (n-1)C(r-1)\n\nta d\u1ec5 d\u00e0ng kh\u1edfi t\u1ea1o t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb nCr trong O(N^2).\n\nCode c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c v\u1edbi n &lt;= 5000 v\u00e0 mod b\u1ea5t k\u1ef3 (kh\u00f4ng c\u1ea7n nguy\u00ean t\u1ed1).\n*/\n//by Tanmay Chaudhari\n## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int MOD = 1e9 + 7;\nlong long ncr[5005][5005];\n\nvoid precompute()\n{\n    int k;\n    for (int i = 0; i &lt; 5001; i++)\n    {\n        ncr[i][0] = ncr[i][i] = 1;\n        k = i &gt;&gt; 1;\n        for (int j = 1; j &lt; k + 1; j++)\n            ncr[i][j] = ncr[i][i - j] = (ncr[i - 1][j] + ncr[i - 1][j - 1]) % MOD;\n    }\n}\n\nint main()\n{\n    precompute();\n    cout &lt;&lt; ncr[4892][231] &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>Ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean ch\u1ec9 t\u00ednh \u0111\u01b0\u1ee3c \\(\\binom{n}{k}\\) v\u1edbi \\(n\\) nh\u1ecf. B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o ch\u01b0\u01a1ng tr\u00ecnh sau \u0111\u1ec3 t\u00ednh \\(\\binom{n}{k} \\% p\\) v\u1edbi \\(p\\) l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 \\(n\\) l\u1edbn.</p> <p>Ch\u00fa \u00fd: Code sau s\u1eed d\u1ee5ng ngh\u1ecbch \u0111\u1ea3o modulo, \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u \u1edf b\u00e0i vi\u1ebft S\u1ed1 h\u1ecdc 4.5</p> <pre><code>/*\nT\u00ednh nCr trong O(N) v\u1edbi mod P nguy\u00ean t\u1ed1.\n\nTa s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c nCr = n! / r! / (n-r)!\n\nKh\u1edfi t\u1ea1o tr\u01b0\u1edbc fac[i] = i! mod P\nKh\u1edfi t\u1ea1o tr\u01b0\u1edbc ifac[i] = i!^-1 mod P (ngh\u1ecbch \u0111\u1ea3o modulo P c\u1ee7a i!). \n\nT\u1eeb \u0111\u00f3 d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c nCr trong O(1).\n*/\n//by Tanmay Chaudhari\n## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int MOD = 1e9 + 7;\n## define N 2123456\n## define LL long long\n\nLL fac[N], ifac[N];\n\nLL PowerMod(LL a, LL n){\n    LL ret = 1;\n    while (n){\n        if (n &amp; 1){\n            ret *= a;\n            ret %= MOD;\n        }\n        a *= a;\n        a %= MOD;\n        n /= 2;\n    }\n    return ret;\n}\n\ninline void precompute(){\n    int i;\n    fac[0] = 1;\n    for (i = 1; i &lt; N; i++){\n        fac[i] = (i * fac[i - 1]) % MOD;\n    }\n    ifac[N - 1] = PowerMod(fac[N - 1], MOD - 2);\n    for (i = N - 2; i &gt;= 0; i--){\n        ifac[i] = ((i + 1) * ifac[i + 1]) % MOD;\n    }\n}\n\nLL com(int n, int r){\n    LL ret = fac[n];\n    ret *= ifac[r];\n    ret %= MOD;\n    ret *= ifac[n - r];\n    ret %= MOD;\n    return ret;\n}\n\nint main()\n{\n    precompute();\n    cout &lt;&lt; com(4892,231) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"translate/he/Number-Theory-5/#mot-vai-day-so-co-ban-counting-sequences","title":"M\u1ed9t v\u00e0i d\u00e3y s\u1ed1 c\u01a1 b\u1ea3n (Counting Sequences)","text":""},{"location":"translate/he/Number-Theory-5/#day-so-catalan","title":"D\u00e3y s\u1ed1 Catalan","text":"<p>\u0110\u1ecbnh ngh\u0129a: \\(C_n=\\sum_{k=0}^{n-1} C_kC_{n-1-k}=\\frac{1}{n+1}\\binom{2n}{n}\\)</p> <p>C\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a d\u00e3y s\u1ed1 Catalan:</p> <ul> <li> <p>Cho m\u1ed9t \u0111a gi\u00e1c l\u1ed3i \\(n+2\\) \u0111\u1ec9nh, ta chia \u0111a gi\u00e1c th\u00e0nh c\u00e1c tam gi\u00e1c b\u1eb1ng c\u00e1ch v\u1ebd c\u00e1c \u0111\u01b0\u1eddng ch\u00e9o kh\u00f4ng c\u1eaft nhau trong \u0111a gi\u00e1c. \\(C_n\\) l\u00e0 s\u1ed1 c\u00e1ch chia nh\u01b0 v\u1eady.</p> </li> <li> <p>\\(C_n\\) l\u00e0 s\u1ed1 c\u00e1c t\u1eeb Dyck c\u00f3 \u0111\u1ed9 d\u00e0i \\(2n\\). T\u1eeb Dyck l\u00e0 t\u1eeb g\u1ed3m \\(n\\) ch\u1eef X v\u00e0 \\(n\\) ch\u1eef Y sao cho v\u1edbi m\u1ecdi ti\u1ec1n t\u1ed1 c\u1ee7a t\u1eeb \u0111\u00f3, s\u1ed1 l\u01b0\u1ee3ng ch\u1eef X kh\u00f4ng \u00edt h\u01a1n s\u1ed1 l\u01b0\u1ee3ng ch\u1eef Y. V\u00ed d\u1ee5, \\(C_3 = 5\\) t\u1eeb sau \u0111\u00e2y l\u00e0 t\u1eeb Dyck \u0111\u1ed9 d\u00e0i 6: XXXYYY, XYXXYY, XYXYXY, XXYYXY, XXYXYY.</p> </li> <li> <p>Thay m\u1ed7i ch\u1eef X trong t\u1eeb Dyck th\u00e0nh d\u1ea5u m\u1edf ngo\u1eb7c \u0111\u01a1n, m\u1ed7i ch\u1eef Y th\u00e0nh d\u1ea5u \u0111\u00f3ng ngo\u1eb7c \u0111\u01a1n, khi \u0111\u00f3 m\u1ed7i t\u1eeb Dyck tr\u1edf th\u00e0nh m\u1ed9t d\u00e3y ngo\u1eb7c h\u1ee3p l\u1ec7. V\u1eady \\(C_n\\) c\u00f2n \u0111\u1ebfm s\u1ed1 d\u00e3y ngo\u1eb7c h\u1ee3p l\u1ec7 g\u1ed3m \\(n\\) c\u1eb7p ngo\u1eb7c: ((())), ()(()), ()()(), (())(), (()()).</p> </li> <li> <p>\\(C_n\\) c\u00f2n l\u00e0 s\u1ed1 c\u00e1ch \u0111\u1eb7t ngo\u1eb7c cho m\u1ed9t bi\u1ec3u th\u1ee9c g\u1ed3m \\(n+1\\) th\u1eeba s\u1ed1. V\u00ed d\u1ee5 v\u1edbi \\(n=3\\), ta c\u00f3 5 c\u00e1ch \u0111\u1eb7t ngo\u1eb7c cho 4 th\u1eeba s\u1ed1: \\(((ab)c)d, (a(bc))d, (ab)(cd), a((bc)d), a(b(cd))\\).</p> </li> <li> <p>\\(C_n\\) c\u00f2n l\u00e0 s\u1ed1 c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 c\u00f3 \\(n\\) l\u00e0 (m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ea7y \u0111\u1ee7 n\u1ebfu m\u1ecdi n\u00fat c\u1ee7a n\u00f3 c\u00f3 hai n\u00fat con ho\u1eb7c kh\u00f4ng c\u00f3 n\u00fat con n\u00e0o). </p> </li> </ul> <p></p> <p>V\u00e0 c\u00f2n nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c...</p>"},{"location":"translate/he/Number-Theory-5/#so-euler","title":"S\u1ed1 Euler","text":"<p>S\u1ed1 Euler \\(\\big \\langle^n_k \\big \\rangle\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng ho\u00e1n v\u1ecb c\u00e1c s\u1ed1 t\u1eeb 1 \u0111\u1ebfn \\(n\\) m\u00e0 c\u00f3 \u0111\u00fang \\(k\\) ph\u1ea7n t\u1eed l\u1edbn h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc n\u00f3. H\u1ec7 th\u1ee9c truy h\u1ed3i t\u00ednh s\u1ed1 Euler \u0111\u01b0\u1ee3c l\u1eadp b\u1eb1ng c\u00e1ch x\u00e9t m\u1ed7i ho\u00e1n v\u1ecb \\(p\\) c\u1ee7a 1,2,...,\\(n-1\\). C\u00f3 \\(n\\) v\u1ecb tr\u00ed \u0111\u1ec3 th\u00eam s\u1ed1 \\(n\\) v\u00e0o ho\u00e1n v\u1ecb, v\u00e0 m\u1ed9t c\u00e1ch th\u00eam s\u1ed1 \\(n\\) c\u00f3 th\u1ec3 l\u00e0m t\u0103ng s\u1ed1 ph\u1ea7n t\u1eed l\u1edbn h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc n\u00f3 c\u1ee7a \\(p\\), ho\u1eb7c b\u1ea3o to\u00e0n s\u1ed1 ph\u1ea7n t\u1eed l\u1edbn h\u01a1n ph\u1ea7n t\u1eed \u0111\u1ee9ng tr\u01b0\u1edbc n\u00f3. V\u00ec v\u1eady, </p> <p>/uploads/number-theory-euler-number.gif</p>"},{"location":"translate/he/Number-Theory-5/#bai-toan-phan-tich-mot-so-nguyen-integer-partitions","title":"B\u00e0i to\u00e1n ph\u00e2n t\u00edch m\u1ed9t s\u1ed1 nguy\u00ean (Integer Partitions)","text":"<p>Ta x\u00e9t b\u00e0i to\u00e1n sau:</p> <p>Cho m\u1ed9t s\u1ed1 nguy\u00ean \\(n\\). H\u00e3y cho bi\u1ebft c\u00f3 bao nhi\u00eau c\u00e1ch ph\u00e2n t\u00edch s\u1ed1 \\(n\\) th\u00e0nh t\u1ed5ng c\u1ee7a d\u00e3y c\u00e1c s\u1ed1 nguy\u00ean d\u01b0\u01a1ng, c\u00e1c c\u00e1ch ph\u00e2n t\u00edch l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a nhau ch\u1ec9 t\u00ednh l\u00e0 m\u1ed9t c\u00e1ch.</p> <p>V\u00ed d\u1ee5: \\(n=5\\) c\u00f3 7 c\u00e1ch ph\u00e2n t\u00edch:</p> <ol> <li> <p>\\(5 = 1+1+1+1+1\\)</p> </li> <li> <p>\\(5 = 1+1+1+2\\)</p> </li> <li> <p>\\(5=1+1+3\\)</p> </li> <li> <p>\\(5=1+2+2\\)</p> </li> <li> <p>\\(5=1+4\\)</p> </li> <li> <p>\\(5=2+3\\)</p> </li> <li> <p>\\(5=5\\)</p> </li> </ol> <p>C\u00e1ch d\u1ec5 nh\u1ea5t \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 c\u00e1ch ph\u00e2n t\u00edch s\u1ed1 \\(n\\) l\u00e0 \u0111\u1ecbnh ngh\u0129a h\u00e0m \\(f(n,k)\\) l\u00e0 s\u1ed1 c\u00e1ch ph\u00e2n t\u00edch s\u1ed1 \\(n\\) th\u00e0nh t\u1ed5ng c\u1ee7a c\u00e1c s\u1ed1 nguy\u00ean d\u01b0\u01a1ng nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(k\\). C\u00e1c c\u00e1ch ph\u00e2n t\u00edch s\u1ed1 \\(n\\) th\u00e0nh t\u1ed5ng c\u00e1ch s\u1ed1 nguy\u00ean d\u01b0\u01a1ng nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(k\\) c\u00f3 th\u1ec3 chia l\u00e0m hai lo\u1ea1i: ch\u1ee9a s\u1ed1 \\(k\\) trong ph\u00e9p ph\u00e2n t\u00edch v\u00e0 kh\u00f4ng ch\u1ee9a s\u1ed1 \\(k\\) trong ph\u00e9p ph\u00e2n t\u00edch, v\u00ec th\u1ebf ta c\u00f3 \\(f(n,k)=f(n-k,k)+f(n,k-1)\\). Ngo\u00e0i ra, ta c\u00f2n d\u1ec5 d\u00e0ng c\u00f3 \u0111\u01b0\u1ee3c \\(f(1,1)=1\\) v\u00e0 \\(f(n,k)=0\\) v\u1edbi \\(k&gt;n\\). </p>"},{"location":"translate/he/Number-Theory-5/#bai-tap","title":"B\u00e0i t\u1eadp","text":"<ul> <li>Hackerearth - Ankit and Race Team</li> <li>Hackerearth - Tic Tac Toe</li> <li>Hackerearth - Roy and Little Mario</li> <li>VNOJ - TREELINE</li> </ul>"},{"location":"translate/he/Number-Theory-6/","title":"S\u1ed1 h\u1ecdc 6 - X\u00e1c su\u1ea5t (Probabilities)","text":"<p>Ngu\u1ed3n: HackerEarth</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p>"},{"location":"translate/he/Number-Theory-6/#cac-kien-thuc-co-ban-ve-xac-suat-probabilities","title":"C\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 X\u00e1c su\u1ea5t (Probabilities)","text":"<p>L\u00e0m vi\u1ec7c v\u1edbi x\u00e1c su\u1ea5t gi\u1ed1ng nh\u01b0 l\u00e0m m\u1ed9t th\u00ed nghi\u1ec7m. M\u1ed9t k\u1ebft qu\u1ea3 (outcome) l\u00e0 m\u1ed9t k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t ph\u00e9p th\u1eed hay s\u1ef1 x\u1ea3y ra hay kh\u00f4ng x\u1ea3y ra c\u1ee7a m\u1ed9t hi\u1ec7n t\u01b0\u1ee3ng n\u00e0o \u0111\u00f3. T\u1eadp h\u1ee3p t\u1ea5t c\u1ea3 c\u00e1c k\u1ebft q\u1ee7a c\u00f3 th\u1ec3 x\u1ea3y ra c\u1ee7a m\u1ed9t ph\u00e9p th\u1eed \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 kh\u00f4ng gian m\u1eabu (sample space), th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(\\Omega\\). M\u1ed7i k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 c\u1ee7a m\u1ed9t ph\u00e9p th\u1eed \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t \u0111i\u1ec3m trong kh\u00f4ng gian m\u1eabu.</p> <p>M\u1ed9t s\u1ed1 ph\u00e9p th\u1eed v\u00ed d\u1ee5:</p> <ul> <li> <p>Gieo m\u1ed9t con s\u00fac s\u1eafc m\u1ed9t l\u1ea7n: Kh\u00f4ng gian m\u1eabu l\u00e0 \\(\\Omega\\) = {1; 2; 3; 4; 5; 6}.</p> </li> <li> <p>Gieo hai \u0111\u1ed3ng xu ph\u00e2n bi\u1ec7t: Kh\u00f4ng gian m\u1eabu l\u00e0 \\(\\Omega\\) = {(Ng\u1eeda, Ng\u1eeda), (Ng\u1eeda, S\u1ea5p), (S\u1ea5p, Ng\u1eeda), (S\u1ea5p, S\u1ea5p)}.</p> </li> </ul> <p>Ta \u0111\u1ecbnh ngh\u0129a bi\u1ebfn c\u1ed1 (event) l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t ph\u00e9p th\u1eed. Do \u0111\u00f3, m\u1ed9t bi\u1ebfn c\u1ed1 l\u00e0 m\u1ed9t t\u1eadp con c\u1ee7a kh\u00f4ng gian m\u1eabu. N\u1ebfu ta k\u00ed hi\u1ec7u m\u1ed9t bi\u1ebfn c\u1ed1 l\u00e0 \\(\\Omega_A\\), th\u00ec \\(\\Omega_A \\subset \\Omega\\). N\u1ebfu m\u1ed9t bi\u1ebfn c\u1ed1 ch\u1ec9 g\u1ed3m m\u1ed9t k\u1ebft qu\u1ea3 trong kh\u00f4ng gian m\u1eabu, th\u00ec n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn c\u1ed1 \u0111\u01a1n. N\u1ebfu m\u1ed9t bi\u1ebfn c\u1ed1 g\u1ed3m nhi\u1ec1u k\u1ebft qu\u1ea3 trong kh\u00f4ng gian m\u1eabu th\u00ec n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn c\u1ed1 ph\u1ee9c.</p> <p>Th\u1ee9 m\u00e0 ta quan t\u00e2m nh\u1ea5t l\u00e0 x\u00e1c su\u1ea5t x\u1ea3y ra c\u1ee7a m\u1ed9t bi\u1ebfn c\u1ed1, k\u00ed hi\u1ec7u l\u00e0 \\(P(A)\\). Theo \u0111\u1ecbnh ngh\u0129a, \\(P(A)\\) l\u00e0 m\u1ed9t s\u1ed1 th\u1ef1c n\u1eb1m trong \u0111o\u1ea1n t\u1eeb 0 \u0111\u1ebfn 1, v\u1edbi 0 ngh\u0129a l\u00e0 bi\u1ebfn c\u1ed1 kh\u00f4ng th\u1ec3 x\u1ea3y ra v\u00e0 1 ngh\u0129a l\u00e0 bi\u1ebfn c\u1ed1 ch\u1eafc ch\u1eafn x\u1ea3y ra (ngh\u0129a l\u00e0 bi\u1ebfn c\u1ed1 b\u1eb1ng kh\u00f4ng gian m\u1eabu).</p> <p>Nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u01b0\u1edbc, m\u1ed7i k\u1ebft q\u1ee7a \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng \u0111\u00fang m\u1ed9t \u0111i\u1ec3m trong kh\u00f4ng gian m\u1eabu. V\u00ec th\u1ebf ta c\u00f3 c\u00f4ng th\u1ee9c: \\(P(A) = \\frac{\\|\\Omega_A\\|}{\\|\\Omega\\|}\\).</p>"},{"location":"translate/he/Number-Theory-6/#bien-co-oc-lap-independent-events","title":"Bi\u1ebfn c\u1ed1 \u0111\u1ed9c l\u1eadp (Independent Events)","text":"<p>Hai bi\u1ebfn c\u1ed1 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ed9c l\u1eadp v\u1edbi nhau n\u1ebfu vi\u1ec7c x\u1ea3y ra hay kh\u00f4ng x\u1ea3y ra c\u1ee7a bi\u1ebfn c\u1ed1 n\u00e0y kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng t\u1edbi x\u00e1c su\u1ea5t x\u1ea3y ra c\u1ee7a bi\u1ebfn c\u1ed1 kia.</p> <p>V\u00ed d\u1ee5 b\u1ea1n gieo m\u1ed9t con s\u00fac s\u1eafc v\u00e0 m\u1ed9t \u0111\u1ed3ng xu. X\u00e1c su\u1ea5t nh\u1eadn \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 n\u00e0o \u0111\u00f3 t\u1eeb con s\u00fac s\u1eafc kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn x\u00e1c su\u1ea5t \u0111\u1ed3ng xu l\u1eadt s\u1ea5p hay l\u1eadt ng\u1eeda. Do \u0111\u00f3 bi\u1ebfn c\u1ed1 gieo con s\u00fac s\u1eafc \u0111\u01b0\u1ee3c 6 \u0111i\u1ec3m v\u00e0 bi\u1ebfn c\u1ed1 \u0111\u1ed3ng xu l\u1eadt ng\u1eeda l\u00e0 hai bi\u1ebfn c\u1ed1 \u0111\u1ed9c l\u1eadp v\u1edbi nhau.</p> <p>/uploads/number-theory-prob-1.gif</p> <p>N\u1ebfu hai bi\u1ebfn c\u1ed1 \\(A\\) v\u00e0 \\(B\\) \u0111\u1ed9c l\u1eadp v\u1edbi nhau, kh\u00f4ng bi\u1ebfn c\u1ed1 n\u00e0o \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn bi\u1ebfn c\u1ed1 n\u00e0o, khi \u0111\u00f3 ta c\u00f3 th\u1ec3 vi\u1ebft: \\(P(AB) = P(A).P(B)\\).</p>"},{"location":"translate/he/Number-Theory-6/#xac-suat-co-ieu-kien-conditional-probability","title":"X\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n (Conditional Probability)","text":"<p>X\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n l\u00e0 x\u00e1c su\u1ea5t c\u1ee7a m\u1ed9t bi\u1ebfn c\u1ed1 \\(B\\) n\u00e0o \u0111\u00f3, bi\u1ebft r\u1eb1ng m\u1ed9t bi\u1ebfn c\u1ed1 \\(A\\) kh\u00e1c x\u1ea3y ra. K\u00ed hi\u1ec7u l\u00e0 \\(P(B\\|A)\\), \u0111\u1ecdc l\u00e0 x\u00e1c su\u1ea5t c\u1ee7a \\(B\\), bi\u1ebft \\(A\\).</p> <p>S\u1eed d\u1ee5ng to\u00e1n h\u1ecdc, ta \u0111\u1ecbnh ngh\u0129a \\(P(B\\|A) = \\frac{P(AB)}{P(A)}\\).</p>"},{"location":"translate/he/Number-Theory-6/#cac-quy-tac-tinh-xac-suat-rules-of-probability","title":"C\u00e1c quy t\u1eafc t\u00ednh x\u00e1c su\u1ea5t (Rules of Probability)","text":"<p>Khi ta ph\u1ea3i l\u00e0m vi\u1ec7c v\u1edbi nhi\u1ec1u bi\u1ebfn c\u1ed1, c\u00f3 m\u1ed9t v\u00e0i quy t\u1eafc ta ph\u1ea3i tu\u00e2n theo khi t\u00ednh x\u00e1c su\u1ea5t c\u1ee7a c\u00e1c bi\u1ebfn c\u1ed1 n\u00e0y. C\u00e1c quy t\u1eafc n\u00e0y \u0111\u1ec1u ph\u1ee5 thu\u1ed9c r\u1ea5t l\u1edbn v\u00e0o vi\u1ec7c c\u00e1c bi\u1ebfn c\u1ed1 n\u00e0y c\u00f3 \u0111\u1ed9c l\u1eadp v\u1edbi nhau hay kh\u00f4ng. \u0110\u1ea7u ti\u00ean, cho ba bi\u1ebfn c\u1ed1 \\(A, B, C\\), bi\u1ebfn c\u1ed1 \\(S :\\) \"\\(A\\) ho\u1eb7c \\(B\\) ho\u1eb7c \\(C\\) x\u1ea3y ra\" \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(A \\cup B \\cup C\\), c\u00f3 x\u00e1c su\u1ea5t \\(P(S) = P(A \\cup B \\cup C)\\).</p>"},{"location":"translate/he/Number-Theory-6/#quy-tac-nhan-xac-suat-multiplication-rule-ab","title":"Quy t\u1eafc nh\u00e2n x\u00e1c su\u1ea5t (Multiplication Rule) (\\(AB\\))","text":"<p>\\(AB\\) c\u00f3 ngh\u0129a l\u00e0 giao c\u1ee7a hai bi\u1ebfn c\u1ed1 \\(A\\) v\u00e0 \\(B\\), v\u00e0 trong x\u00e1c su\u1ea5t, \\(AB\\) l\u00e0 bi\u1ebfn c\u1ed1 \"C\u1ea3 \\(A\\) v\u00e0 \\(B\\) c\u00f9ng x\u1ea3y ra\". Khi ta s\u1eed d\u1ee5ng t\u1eeb \"v\u00e0\", ta ngh\u0129 \u0111\u1ebfn ph\u00e9p nh\u00e2n, v\u00ec v\u1eady \"\\(A\\) v\u00e0 \\(B\\)\" c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi d\u1ea1ng \\(A \\times B\\) v\u00e0 \\(A.B\\).</p> <p>N\u1ebfu \\(A\\) v\u00e0 \\(B\\) l\u00e0 hai bi\u1ebfn c\u1ed1 ph\u1ee5 thu\u1ed9c, x\u00e1c su\u1ea5t c\u1ee7a bi\u1ebfn c\u1ed1 \\(AB\\) \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c: \\(P(AB) = P(A \\cup B) - (P(\\text{ch\u1ec9 } A) + P(\\text{ch\u1ec9 } B))\\) </p> <p>N\u1ebfu \\(A\\) v\u00e0 \\(B\\) l\u00e0 hai bi\u1ebfn c\u1ed1 \u0111\u1ed9c l\u1eadp, x\u00e1c su\u1ea5t c\u1ee7a bi\u1ebfn c\u1ed1 \\(AB\\) \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c: \\(P(AB) = P(A).P(B)\\).</p> <p>Do \u0111\u00f3, x\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n c\u1ee7a hai bi\u1ebfn c\u1ed1 \u0111\u1ed9c l\u1eadp c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c: \\(P(B\\|A) = \\frac{P(AB)}{P(A)} \\Leftrightarrow P(B\\|A) = \\frac{P(A).P(B)}{P(A)} \\Leftrightarrow P(B\\|A) = P(B)\\).</p> <p>C\u00f4ng th\u1ee9c tr\u00ean ph\u00f9 h\u1ee3p v\u1edbi \u0111\u1ecbnh ngh\u0129a x\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n, bi\u1ebfn c\u1ed1 \\(A\\) c\u00f3 x\u1ea3y ra hay kh\u00f4ng kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn x\u00e1c su\u1ea5t x\u1ea3y ra bi\u1ebfn c\u1ed1 \\(B\\), do \u0111\u00f3 x\u00e1c su\u1ea5t bi\u1ebfn c\u1ed1 \\(B\\) x\u1ea3y ra bi\u1ebft bi\u1ebfn c\u1ed1 \\(A\\) x\u1ea3y ra b\u1eb1ng x\u00e1c su\u1ea5t x\u1ea3y ra bi\u1ebfn c\u1ed1 \\(B\\).</p>"},{"location":"translate/he/Number-Theory-6/#quy-tac-cong-xac-suat-additive-rule-a-cup-b","title":"Quy t\u1eafc c\u1ed9ng x\u00e1c su\u1ea5t (Additive Rule) (\\(A \\cup B\\))","text":"<p>Trong x\u00e1c su\u1ea5t, ta li\u00ean t\u01b0\u1edfng ph\u00e9p c\u1ed9ng nh\u01b0 t\u1eeb \"ho\u1eb7c\". G\u1ecdi bi\u1ebfn c\u1ed1 \\(A \\cup B\\) l\u00e0 bi\u1ebfn c\u1ed1 \"\\(A\\) ho\u1eb7c \\(B\\) x\u1ea3y ra\", x\u00e1c su\u1ea5t c\u1ee7a bi\u1ebfn c\u1ed1 \\(A \\cup B\\) \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00f4ng th\u1ee9c: \\(P(A \\cup B) = P(A) + P(B) - P(AB)\\) do \\(\\|A \\cup B\\| = \\|A\\| + \\|B\\| - \\|A \\cap B\\|\\).</p> <p>Nh\u01b0ng h\u00e3y nh\u1edb l\u1ea1i ph\u1ea7n l\u00ed thuy\u1ebft t\u1eadp h\u1ee3p v\u00e0 c\u00e1ch ch\u00fang ta \u0111\u1ecbnh ngh\u0129a kh\u00f4ng gian m\u1eabu \u1edf tr\u00ean, g\u1ecdi \\(C = (A \\cap B)'\\), khi \u0111\u00f3 ta c\u00f3 \\(P(A \\cup B) = 1 - P(C)\\).</p>"},{"location":"translate/he/Number-Theory-6/#bien-co-xung-khac-mutually-exclusive-events","title":"Bi\u1ebfn c\u1ed1 xung kh\u1eafc (Mutually Exclusive Events)","text":"<p>Hai bi\u1ebfn c\u1ed1 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 xung kh\u1eafc ho\u1eb7c r\u1eddi nhau n\u1ebfu kh\u00f4ng c\u00f3 m\u1ed9t k\u1ebft qu\u1ea3 n\u00e0o c\u1ee7a ph\u00e9p th\u1eed l\u00e0m ch\u00fang c\u00f9ng l\u00fac x\u1ea3y ra. N\u1ebfu \\(A\\) v\u00e0 \\(B\\) l\u00e0 hai bi\u1ebfn c\u1ed1 xung kh\u1eafc, th\u00ec $A \\cap B = \\varnothing $</p> <p>N\u1ebfu ba bi\u1ebfn c\u1ed1 \\(A\\), \\(B\\), \\(C\\) xung kh\u1eafc v\u1edbi nhau, ta c\u0169ng c\u00f3 \\(A \\cap B \\cap C = \\varnothing\\).</p> <p></p>"},{"location":"translate/he/Number-Theory-6/#quy-tac-tinh-xac-suat-cua-cac-bien-co-xung-khac","title":"Quy t\u1eafc t\u00ednh x\u00e1c su\u1ea5t c\u1ee7a c\u00e1c bi\u1ebfn c\u1ed1 xung kh\u1eafc","text":""},{"location":"translate/he/Number-Theory-6/#quy-tac-nhan-xac-suat","title":"Quy t\u1eafc nh\u00e2n x\u00e1c su\u1ea5t","text":"<p>T\u1eeb \u0111\u1ecbnh ngh\u0129a c\u00e1c bi\u1ebfn c\u1ed1 xung kh\u1eafc, d\u1ec5 d\u00e0ng c\u00f3 \u0111\u01b0\u1ee3c \\(P(AB) = 0\\).</p>"},{"location":"translate/he/Number-Theory-6/#quy-tac-cong-xac-suat","title":"Quy t\u1eafc c\u1ed9ng x\u00e1c su\u1ea5t","text":"<p>Nh\u01b0 ch\u00fang ta \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean, c\u00f4ng th\u1ee9c c\u1ed9ng x\u00e1c su\u1ea5t hai bi\u1ebfn c\u1ed1 xung kh\u1eafc c\u00f3 d\u1ea1ng: \\(P(A \\cup B) = P(A) + P(B)\\).</p>"},{"location":"translate/he/Number-Theory-6/#quy-tac-tru-xac-suat-subtraction-rule","title":"Quy t\u1eafc tr\u1eeb x\u00e1c su\u1ea5t (Subtraction Rule)","text":"<p>T\u1eeb quy t\u1eafc c\u1ed9ng, ta suy ra \u0111\u01b0\u1ee3c quy t\u1eafc tr\u1eeb hai bi\u1ebfn c\u1ed1 xung kh\u1eafc: \\(P(A \\cup B)' = 1 - P(A) - P(B)\\).</p>"},{"location":"translate/he/Number-Theory-6/#xac-suat-co-ieu-kien-cua-hai-bien-co-xung-khac","title":"X\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n c\u1ee7a hai bi\u1ebfn c\u1ed1 xung kh\u1eafc","text":"<p>Ta \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a x\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n b\u1eb1ng c\u00f4ng th\u1ee9c sau: \\(P(B\\|A) = \\frac{P(AB)}{P(A)}\\)</p> <p>M\u00e0 v\u1edbi hai bi\u1ebfn c\u1ed1 xung kh\u1eafc \\(A\\) v\u00e0 \\(B\\), ta l\u1ea1i c\u00f3: \\(P(AB) = 0\\)</p> <p>Do \u0111\u00f3 \\(P(B\\|A) = \\frac{0}{P(A)} = 0\\).</p>"},{"location":"translate/he/Number-Theory-6/#inh-li-bayes-bayes-theorem","title":"\u0110\u1ecbnh l\u00ed Bayes (Bayes\u2019 Theorem)","text":"<p>Trong x\u00e1c su\u1ea5t v\u00e0 th\u1ed1ng k\u00ea, \u0111\u1ecbnh l\u00ed Bayes m\u00f4 t\u1ea3 x\u00e1c su\u1ea5t c\u1ee7a m\u1ed9t bi\u1ebfn c\u1ed1 d\u1ef1a tr\u00ean c\u00e1c bi\u1ebfn c\u1ed1 c\u00f3 li\u00ean quan \u0111\u1ebfn bi\u1ebfn c\u1ed1 \u0111\u00f3.</p> <p>C\u00f4ng th\u1ee9c c\u1ee7a \u0111\u1ecbnh l\u00ed Bayes nh\u01b0 sau: \\(P(A\\|B) = \\frac{P(A).P(B\\|A)}{P(B)}\\), v\u1edbi \\(A\\), \\(B\\) l\u00e0 hai bi\u1ebfn c\u1ed1, \\(P(A)\\), \\(P(B)\\) l\u00e0 x\u00e1c su\u1ea5t c\u1ee7a hai bi\u1ebfn c\u1ed1, \\(P(A\\|B)\\) l\u00e0 x\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n: x\u00e1c su\u1ea5t c\u1ee7a \\(A\\) bi\u1ebft \\(B\\) x\u1ea3y ra, \\(P(B\\|A)\\) l\u00e0 x\u00e1c su\u1ea5t c\u1ee7a \\(B\\) bi\u1ebft \\(A\\) x\u1ea3y ra.</p>"},{"location":"translate/he/Number-Theory-6/#dang-mo-rong-extended-form","title":"D\u1ea1ng m\u1edf r\u1ed9ng (Extended Form)","text":"<p>Cho \\(n\\) bi\u1ebfn c\u1ed1 \\(A_1, A_2, ..., A_n\\), khi \u0111\u00f3 n\u1ebfu \\(P(B) = \\sum_{i=1}^n P(B\\|A_i)P(A_i)\\) th\u00ec \\(P(A_i\\|B) = \\frac{P(B\\|A_i)P(A_i)}{\\sum_{j=1}^n P(B\\|A_j)P(A_j)}\\).</p>"},{"location":"translate/he/Number-Theory-6/#thuat-toan-ngau-nhien-randomized-algorithms","title":"Thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean (Randomized Algorithms)","text":"<p>Ta g\u1ecdi thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean l\u00e0 thu\u1eadt to\u00e1n s\u1eed d\u1ee5ng c\u00e1c s\u1ed1 ng\u1eabu nhi\u00ean \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh trong l\u00fac ch\u1ea1y. Kh\u00f4ng gi\u1ed1ng thu\u1eadt to\u00e1n t\u1ea5t \u0111\u1ecbnh (deterministic algorithms) m\u00e0 v\u1edbi m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u nh\u1ea5t \u0111\u1ecbnh, thu\u1eadt to\u00e1n lu\u00f4n ra m\u1ed9t k\u1ebft qu\u1ea3 v\u00e0 ch\u1ea1y trong c\u00f9ng m\u1ed9t l\u01b0\u1ee3ng th\u1eddi gian, thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean ch\u1ea1y ra k\u1ebft qu\u1ea3 kh\u00e1c nhau \u1edf nh\u1eefng l\u1ea7n ch\u1ea1y kh\u00e1c nhau. Ta th\u01b0\u1eddng chia thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean ra l\u00e0m hai lo\u1ea1i:</p> <ul> <li> <p>Thu\u1eadt to\u00e1n Monte Carlo (Monte Carlo algorithms): C\u00f3 th\u1ec3 ra k\u1ebft qu\u1ea3 sai - ch\u00fang ta s\u1ebd t\u00ednh x\u00e1c su\u1ea5t ra k\u1ebft qu\u1ea3 sai \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh c\u00f3 d\u00f9ng n\u00f3 hay kh\u00f4ng.</p> </li> <li> <p>Thu\u1eadt to\u00e1n Las Vegas (Las Vegas algorithms): Lu\u00f4n ch\u1ea1y ra k\u1ebft qu\u1ea3 \u0111\u00fang, nh\u01b0ng th\u1eddi gian ch\u1ea1y s\u1ebd kh\u00e1c nhau v\u1edbi c\u00f9ng m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u.</p> </li> </ul> <p>M\u1ee5c ti\u00eau c\u1ee7a vi\u1ec7c x\u00e2y d\u1ef1ng c\u00e1c thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean l\u00e0 gi\u1ea3m th\u1eddi gian c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n v\u00e0 \u0111\u00f4i khi t\u1ea1o ra nh\u1eefng l\u1eddi gi\u1ea3i ng\u1eafn g\u1ecdn h\u01a1n trong b\u00e0i to\u00e1n. Thu\u00e2t to\u00e1n ng\u1eabu nhi\u00ean c\u00f2n c\u00f3 kh\u1ea3 n\u0103ng gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n c\u1ef1c kh\u00f3. V\u00ec v\u1eady, c\u00e1c thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean \u0111\u00e3 tr\u1edf th\u00e0nh m\u1ed9t v\u1ea5n \u0111\u1ec1 \u0111\u01b0\u1ee3c nhi\u1ec1u nh\u00e0 khoa h\u1ecdc nghi\u00ean c\u1ee9u v\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng \u0111\u1ec3 gi\u1ea3i nhi\u1ec1u b\u00e0i to\u00e1n kh\u00e1c nhau.</p> <p>M\u1ed9t b\u00e0i to\u00e1n c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u l\u1eddi gi\u1ea3i, m\u1ed9t s\u1ed1 l\u1eddi gi\u1ea3i trong s\u1ed1 \u0111\u00f3 l\u00e0 t\u1ed1i \u01b0u. Ph\u01b0\u01a1ng ph\u00e1p l\u00e0m c\u1ed5 \u0111i\u1ec3n l\u00e0 x\u00e9t t\u1eebng ph\u1ea7n t\u1eed m\u1ed9t, theo th\u1ee9 t\u1ef1 trong d\u1eef li\u1ec7u v\u00e0o. Tuy nhi\u00ean, ta kh\u00f4ng th\u1ec3 ch\u1eafc ch\u1eafn c\u00e1c ph\u1ea7n t\u1eed thu\u1eadn l\u1ee3i \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed1 \u0111\u1ec1u trong d\u1eef li\u1ec7u v\u00e0o. V\u00ec v\u1eady, thu\u1eadt to\u00e1n \u0111\u1ecbnh t\u1ea5t c\u00f3 th\u1ec3 kh\u00f4ng t\u00ecm ra l\u1eddi gi\u1ea3i trong th\u1eddi gian \u0111\u1ee7 nhanh. L\u1ee3i th\u1ebf c\u1ee7a thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean l\u00e0 kh\u00f4ng c\u00f3 th\u1ee9 t\u1ef1 duy\u1ec7t c\u00e1c ph\u1ea7n t\u1eed c\u1ed1 \u0111\u1ecbnh v\u00e0 trong m\u1ecdi tr\u01b0\u1eddng h\u1ee3p, thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng t\u1ed1t h\u01a1n.</p>"},{"location":"translate/he/Number-Theory-6/#oc-them","title":"\u0110\u1ecdc th\u00eam","text":"<p>C\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam b\u00e0i n\u00e0y - c\u00f3 th\u00eam 1 s\u1ed1 ki\u1ebfn th\u1ee9c n\u00e2ng cao v\u00e0 1 s\u1ed1 v\u00ed d\u1ee5 v\u1ec1 gi\u1ea3i b\u00e0i.</p>"},{"location":"translate/he/Number-Theory-6/#bai-tap","title":"B\u00e0i t\u1eadp","text":"<ul> <li>Hackerearth - Utkarsh and Jumps</li> <li>Hackerearth - So Random</li> </ul>"},{"location":"translate/he/Number-Theory-7/","title":"S\u1ed1 h\u1ecdc 7 - Bao h\u00e0m - Lo\u1ea1i tr\u1eeb (Inclusion-Exclusion)","text":"<p>Ngu\u1ed3n: HackerEarth</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p>"},{"location":"translate/he/Number-Theory-7/#bao-ham-loai-tru-inclusion-exclusion","title":"Bao h\u00e0m - lo\u1ea1i tr\u1eeb (Inclusion-Exclusion)","text":""},{"location":"translate/he/Number-Theory-7/#phat-bieu-cong-thuc","title":"Ph\u00e1t bi\u1ec3u c\u00f4ng th\u1ee9c","text":"<p>C\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u nh\u01b0 sau: </p> <p>\u0110\u1ec3 t\u00ednh l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a h\u1ee3p c\u1ee7a nhi\u1ec1u t\u1eadp h\u1ee3p, ta t\u00ednh t\u1ed5ng l\u1ef1c l\u01b0\u1ee3ng c\u00e1c t\u1eadp h\u1ee3p \u0111\u00f3, r\u1ed3i tr\u1eeb \u0111i l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a giao c\u1ee7a c\u00e1c c\u1eb7p hai t\u1eadp h\u1ee3p kh\u00e1c nhau, r\u1ed3i c\u1ed9ng l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a giao c\u00e1c b\u1ed9 ba t\u1eadp h\u1ee3p kh\u00e1c nhau, r\u1ed3i tr\u1eeb \u0111i l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a c\u00e1c b\u1ed9 b\u1ed1n t\u1eadp h\u1ee3p, v\u00e0 c\u1ee9 th\u1ebf cho \u0111\u1ebfn khi ta x\u00e9t \u0111\u1ebfn giao c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp h\u1ee3p.</p>"},{"location":"translate/he/Number-Theory-7/#cong-thuc-danh-cho-tap-hop","title":"C\u00f4ng th\u1ee9c d\u00e0nh cho t\u1eadp h\u1ee3p","text":"<p>C\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb c\u00f3 d\u1ea1ng nh\u01b0 sau:</p> <p>\\(\\|\\bigcup_{i=1}^n A_i\\| = \\sum_{i=1}^n \\|A_i\\| - \\sum_{i \\ne j} \\|A_i \\cap A_j\\| + \\|A_1 \\cap A_2 \\cap A_3\\| + \\|A_1 \\cap A_2 \\cap A_4\\| + ... + \\|A_{n-2} \\cap A_{n-1} \\cap A_n\\| - ... -\\) $ (-1)^n|A_1 \\cap A_2 \\cap ... \\cap A_n|$</p> <p>Ta c\u00f3 th\u1ec3 vi\u1ebft c\u00f4ng th\u1ee9c n\u00e0y m\u1ed9t c\u00e1ch g\u1ecdn h\u01a1n b\u1eb1ng c\u00e1ch t\u00ednh t\u1ed5ng c\u1ee7a c\u00e1c t\u1eadp con. G\u1ecdi \\(B\\) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c t\u1eadp h\u1ee3p \\(A_i\\). Khi \u0111\u00f3 c\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb c\u00f3 d\u1ea1ng:</p> <p>\\(\\|\\bigcup_{i=1}^n A_i\\| = \\sum_{C \\subset B} (-1)^{\\|C\\|-1} \\| \\bigcap_{e \\in C} e \\|\\)</p>"},{"location":"translate/he/Number-Theory-7/#lap-cong-thuc-bang-bieu-o-venn-venn-diagrams","title":"L\u1eadp c\u00f4ng th\u1ee9c b\u1eb1ng bi\u1ec3u \u0111\u1ed3 Venn (Venn diagrams)","text":"<p>Ta c\u00f3 bi\u1ec3u \u0111\u1ed3 sau bi\u1ec3u di\u1ec5n ba t\u1eadp h\u1ee3p \\(A\\), \\(B\\) v\u00e0 \\(C\\).</p> <p></p> <p>Khi \u0111\u00f3 ta th\u1ea5y l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a \\(A \\cup B \\cup C\\) b\u1eb1ng l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a \\(A\\), \\(B\\), \\(C\\) tr\u1eeb \u0111i l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a \\(A \\cap B\\), \\(B \\cap C\\), \\(C \\cap A\\) r\u1ed3i c\u1ed9ng th\u00eam l\u1ef1c l\u01b0\u1ee3ng c\u1ee7a \\(A \\cap B \\cap C\\).</p> <p>\\(\\| A \\cup B \\cup C \\| = \\|A\\| + \\|B\\| + \\|C\\| - \\|A \\cap B\\| - \\|B \\cap C\\| - \\|C \\cap A\\| + \\|A \\cap B \\cap C\\|\\)</p> <p>T\u01b0\u01a1ng t\u1ef1, ta c\u00f3 th\u1ec3 l\u1eadp c\u00f4ng th\u1ee9c v\u1edbi \\(n\\) t\u1eadp h\u1ee3p.</p>"},{"location":"translate/he/Number-Theory-7/#cong-thuc-danh-cho-xac-suat","title":"C\u00f4ng th\u1ee9c d\u00e0nh cho x\u00e1c su\u1ea5t","text":"<p>N\u1ebfu ta c\u00f3 \\(n\\) bi\u1ebfn c\u1ed1 \\(A_1, A_2,...,A_n\\), \\(P(A_i)\\) l\u00e0 x\u00e1c su\u1ea5t c\u1ee7a bi\u1ebfn c\u1ed1 \\(A_i\\), x\u00e1c su\u1ea5t c\u1ee7a bi\u1ebfn c\u1ed1 h\u1ee3p c\u1ee7a ch\u00fang (ngh\u0129a l\u00e0 bi\u1ebfn c\u1ed1 \"c\u00f3 \u00edt nh\u1ea5t m\u1ed9t trong s\u1ed1 \\(n\\) bi\u1ebfn c\u1ed1 \\(A_1, A_2, ..., A_n\\) x\u1ea3y ra\") l\u00e0</p> <p>\\(P(\\bigcup_{i=1}^n A_i) = \\sum_{i=1}^n  P(A_i)\\) \\(- \\sum_{i \\ne j} P(A_i A_j)\\) \\(+ P(A_1 A_2 A_3)\\) \\(+ P(A_1 A_2 A_4)\\) \\(+...+ P(A_{n-2} A_{n-1} A_n)\\) \\(- ... -\\) \\((-1)^n.P(A_1 A_2 ... A_n)\\)</p> <p>N\u1ebfu g\u1ecdi \\(B\\) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c t\u1eadp h\u1ee3p \\(A_i\\), c\u00f4ng th\u1ee9c n\u00e0y c\u0169ng c\u00f3 th\u1ec3 vi\u1ebft g\u1ecdn nh\u01b0 sau:</p> <p>\\(P(\\bigcup_{i=1}^n A_i) = \\sum_{C \\subset B} (-1)^{\\|C\\|-1}. P(\\bigcap_{e \\in C} e)\\)</p>"},{"location":"translate/he/Number-Theory-7/#chung-minh-cong-thuc-bao-ham-loai-tru","title":"Ch\u1ee9ng minh c\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb","text":"<p>\u0110\u1ec3 thu\u1eadt ti\u1ec7n trong ch\u1ee9ng minh, ta s\u1eed d\u1ee5ng c\u00f4ng th\u1ee9c vi\u1ebft g\u1ecdn sau:</p> <p>\\(\\|\\bigcup_{i=1}^n A_i\\| = \\sum_{C \\subset B} (-1)^{\\|C\\|-1} \\| \\bigcap_{e \\in C} e \\|\\)</p> <p>v\u1edbi \\(B\\) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c t\u1eadp h\u1ee3p \\(A_i\\).</p> <p>Ta c\u1ea7n ch\u1ee9ng minh m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u00ec thu\u1ed9c \u00edt nh\u1ea5t m\u1ed9t t\u1eadp \\(A_i\\), s\u1ebd ch\u1ec9 \u0111\u01b0\u1ee3c \u0111\u1ebfm m\u1ed9t l\u1ea7n trong c\u00f4ng th\u1ee9c.</p> <p>X\u00e9t m\u1ed9t ph\u1ea7n t\u1eed \\(x\\) b\u1ea5t k\u00ec thu\u1ed9c \\(k \\geq 1\\) t\u1eadp h\u1ee3p \\(A_i\\). Ta th\u1ea5y</p> <ul> <li> <p>Trong c\u00f4ng th\u1ee9c, khi \\(\\|C\\| = 1\\), \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm th\u00eam \\(k\\) l\u1ea7n.</p> </li> <li> <p>Trong c\u00f4ng th\u1ee9c, khi \\(\\|C\\| = 2\\), \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm b\u1edbt \u0111i \\(\\binom{k}{2}\\) l\u1ea7n b\u1edfi \\(x\\) b\u1ecb \u0111\u1ebfm b\u1edbt \u0111i khi ta x\u00e9t m\u1ed9t c\u1eb7p 2 t\u1eadp h\u1ee3p kh\u00e1c nhau trong s\u1ed1 \\(k\\) t\u1eadp h\u1ee3p ch\u1ee9a ph\u1ea7n t\u1eed \\(x\\).</p> </li> <li> <p>Trong c\u00f4ng th\u1ee9c, khi \\(\\|C\\| = 3\\), \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm th\u00eam \\(\\binom{k}{3}\\) l\u1ea7n.</p> </li> <li> <p>...</p> </li> <li> <p>Trong c\u00f4ng th\u1ee9c, khi \\(\\|C\\| = k\\), \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm \\(\\binom{k}{k}\\) l\u1ea7n. N\u1ebfu \\(k\\) l\u1ebb th\u00ec \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm th\u00eam, n\u1ebfu \\(k\\) ch\u1eb5n th\u00ec \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm b\u1edbt.</p> </li> <li> <p>Trong c\u00f4ng th\u1ee9c, khi \\(\\|C\\| &gt; k\\), \\(x\\) kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ebfm.</p> </li> </ul> <p>V\u00ec v\u1eady, s\u1ed1 l\u1ea7n \\(x\\) \u0111\u01b0\u1ee3c \u0111\u1ebfm l\u00e0 \\(T = \\binom{k}{1} - \\binom{k}{2} + \\binom{k}{3} - ... + (-1)^{i-1}.\\binom{k}{i} + ... + (-1)^{k-1}.\\binom{k}{k}\\).</p> <p>\u0110\u1ec3 t\u00ednh \\(T\\), ta khai tri\u1ec3n \\((1-x)^k\\) b\u1eb1ng nh\u1ecb th\u1ee9c Niu-t\u01a1n (Newton binomial):</p> <p>\\((1-x)^k = \\binom{k}{0} - \\binom{k}{1}.x + \\binom{k}{2}.x^2 - \\binom{k}{3}.x^3 + ... + (-1)^k.\\binom{k}{k}.x^k\\).</p> <p>Ta th\u1ea5y v\u1edbi \\(x=1\\), \\((1-x)^k = T-1\\), do \u0111\u00f3 \\(T = (1-1)^k+1 = 1\\) hay \u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh. </p>"},{"location":"translate/he/Number-Theory-7/#ung-dung-em-so-so-nguyen-to-cung-nhau-voi-mot-so-cho-truoc-trong-mot-oan","title":"\u1ee8ng d\u1ee5ng: \u0110\u1ebfm s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi m\u1ed9t s\u1ed1 cho tr\u01b0\u1edbc trong m\u1ed9t \u0111o\u1ea1n","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n d\u1ec5 d\u1ef1a tr\u00ean c\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb.</p> <p>Cho hai s\u1ed1 nguy\u00ean \\(n\\) v\u00e0 \\(r\\), \u0111\u1ebfm s\u1ed1 s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(n\\) trong \u0111o\u1ea1n \\([1;r]\\).</p> <p>Thu\u1eadt to\u00e1n: T\u00ecm ph\u1ea7n b\u00f9 (the inverse): \u0110\u1ebfm s\u1ed1 s\u1ed1 kh\u00f4ng nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(n\\).</p> <p>X\u00e9t c\u00e1c \u01b0\u1edbc nguy\u00ean t\u1ed1 c\u1ee7a \\(n\\), \u0111\u00e1nh s\u1ed1 ch\u00fang t\u1eeb 1 \u0111\u1ebfn \\(k\\).</p> <p>Ta c\u00f3 th\u1ec3 t\u00ednh s\u1ed1 s\u1ed1 trong \u0111o\u1ea1n \\([1;r]\\) chia h\u1ebft cho \\(p_i\\) b\u1eb1ng c\u00f4ng th\u1ee9c \\([\\frac{r}{p_i}]\\).</p> <p>Tuy v\u1eady, n\u1ebfu ta ch\u1ec9 t\u00ednh t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 n\u00e0y, ta s\u1ebd ra k\u1ebft q\u1ee7a sai. \u0110\u00f3 l\u00e0 do m\u1ed9t s\u1ed1 s\u1ed1 c\u00f3 th\u1ec3 chia h\u1ebft cho nhi\u1ec1u \\(p_i\\). V\u00ec v\u1eady ta c\u1ea7n s\u1eed d\u1ee5ng \u0111\u1ebfn c\u00f4ng th\u1ee9c bao h\u00e0m - lo\u1ea1i tr\u1eeb.</p> <pre><code>int solve (int n, int r) {\n    int sum = 0;\n    vector&lt;int&gt; p;\n    for (int i=2; i*i&lt;=n; ++i)\n        if (n % i == 0) {\n            p.push_back (i);\n            while (n % i == 0) n /= i;\n        }\n    if (n &gt; 1) p.push_back (n);\n    for (int msk=1; msk&lt;(1&lt;&lt;p.size()); ++msk) {\n        int mult = 1, bits = 0;\n        for (int i=0; i&lt;(int)p.size(); ++i)\n        if (msk &amp; (1&lt;&lt;i)) {\n            ++bits;\n            mult *= p[i];\n        }\n\n        int cur = r / mult;\n        if (bits % 2 == 1) sum += cur;\n        else sum -= cur;\n    }\n    return r - sum;\n}\n</code></pre>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/","title":"S\u1ed1 h\u1ecdc 1 - Modulo & gcd","text":"<p>Ngu\u1ed3n: HackerEarth v\u00e0 1 s\u1ed1 b\u00e0i vi\u1ebft tr\u00ean Wikipedia</p> <p>Ng\u01b0\u1eddi d\u1ecbch: B\u00f9i Vi\u1ec7t D\u0169ng</p>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e1c b\u00e0i to\u00e1n trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u (competitive programming) m\u00e0 li\u00ean quan \u0111\u1ebfn To\u00e1n h\u1ecdc th\u01b0\u1eddng s\u1ebd r\u01a1i v\u00e0o hai m\u1ea3ng l\u00e0 s\u1ed1 h\u1ecdc (number theory) v\u00e0 h\u00ecnh h\u1ecdc. N\u1ebfu b\u1ea1n bi\u1ebft nhi\u1ec1u v\u1ec1 s\u1ed1 h\u1ecdc, b\u1ea1n s\u1ebd c\u00f3 kh\u1ea3 n\u0103ng gi\u1ea3i quy\u1ebft nhi\u1ec1u b\u00e0i to\u00e1n kh\u00f3 v\u00e0 m\u1ed9t n\u1ec1n t\u1ea3ng t\u1ed1t \u0111\u1ec3 gi\u1ea3i quy\u1ebft nhi\u1ec1u b\u00e0i to\u00e1n kh\u00e1c.</p> <p>C\u00e1c b\u00e0i to\u00e1n trong l\u1eadp tr\u00ecnh thi \u0111\u1ea5u th\u01b0\u1eddng \u0111\u00f2i h\u1ecfi b\u1ea1n m\u1ed9t c\u00e1i nh\u00ecn s\u00e2u s\u1eafc, v\u00ec v\u1eady ch\u1ec9 bi\u1ebft m\u1ed9t s\u1ed1 v\u1ea5n \u0111\u1ec1 v\u1ec1 s\u1ed1 h\u1ecdc l\u00e0 kh\u00f4ng \u0111\u1ee7. M\u1ecdi b\u00e0i to\u00e1n \u0111\u1ec1u \u0111\u1ec1u y\u00eau c\u1ea7u b\u1ea1n ph\u1ea3i bi\u1ebft m\u1ed9t l\u01b0\u1ee3ng ki\u1ebfn th\u1ee9c to\u00e1n nh\u1ea5t \u0111\u1ecbnh. V\u00ed d\u1ee5, m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n y\u00eau c\u1ea7u b\u1ea1n ph\u1ea3i gi\u1ea3i m\u1ed9t h\u1ec7 nhi\u1ec1u ph\u01b0\u01a1ng tr\u00ecnh hay t\u00ednh x\u1ea5p x\u1ec9 nghi\u1ec7m c\u1ee7a nhi\u1ec1u ph\u01b0\u01a1ng tr\u00ecnh kh\u00e1c nhau.</p>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/#ong-du-thuc-modulo","title":"\u0110\u1ed3ng d\u01b0 th\u1ee9c (Modulo)","text":"<p>Ph\u00e9p \u0111\u1ed3ng d\u01b0 th\u1ee9c cho b\u1ea1n s\u1ed1 d\u01b0 c\u1ee7a ph\u00e9p chia s\u1ed1 n\u00e0y cho s\u1ed1 kh\u00e1c. D\u1ea5u c\u1ee7a ph\u00e9p \u0111\u1ed3ng d\u01b0 l\u00e0 \\(\\%\\).</p> <p>V\u00ed d\u1ee5:</p> <p>Ta c\u00f3 hai s\u1ed1 5 v\u00e0 2, khi \u0111\u00f3 \\(5\\%2\\) b\u1eb1ng 1 do khi chia 5 cho 2, ta \u0111\u01b0\u1ee3c s\u1ed1 d\u01b0 l\u00e0 1.</p> <p>T\u00ednh ch\u1ea5t: \u0110\u1ed3ng d\u01b0 th\u1ee9c c\u00f3 m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t sau:</p> <p>\\((a+b)\\%c = (a\\%c + b\\%c) \\% c\\)</p> <p>\\((a.b)\\%c = ((a\\%c).(b\\%c))\\%c\\)</p> <p>V\u00ed d\u1ee5:</p> <p>Gi\u1ea3 s\u1eed \\(a=5,b=3,c=2\\)</p> <p>Khi \u0111\u00f3:</p> <ul> <li>\\((5+3)\\%2=8\\%2=0\\)</li> </ul> <p>v\u00e0 c\u0169ng b\u1eb1ng \\((5\\%2+3\\%2)\\%2=(1+1)\\%2=0\\).</p> <ul> <li>\\((5.3)\\%2=15\\%2=1\\)</li> </ul> <p>v\u00e0 c\u0169ng b\u1eb1ng \\(((5\\%2).(3\\%2))\\%2=(1.1)\\%2=1\\).</p>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/#uoc-chung-lon-nhat","title":"\u01af\u1edbc chung l\u1edbn nh\u1ea5t","text":"<p>\u01af\u1edbc chung l\u1edbn nh\u1ea5t (GCD, vi\u1ebft t\u1eaft c\u1ee7a t\u1eeb Greatest Common Divisor) c\u1ee7a hai hay nhi\u1ec1u s\u1ed1 l\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng l\u1edbn nh\u1ea5t m\u00e0 l\u00e0 \u01b0\u1edbc chung (common divisor) c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 \u0111\u00f3.</p> <p>V\u00ed d\u1ee5: GCD c\u1ee7a 6 v\u00e0 10 l\u00e0 2 v\u00ec 2 l\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng l\u1edbn nh\u1ea5t m\u00e0 l\u00e0 \u01b0\u1edbc chung c\u1ee7a 6 v\u00e0 10.</p>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/#thuat-toan-ngay-tho-naive-approach","title":"Thu\u1eadt to\u00e1n \"ng\u00e2y th\u01a1\" (Naive Approach)","text":"<p>Ta c\u00f3 th\u1ec3 duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 t\u1eeb \\(min(A,B)\\) \u0111\u1ebfn 1 v\u00e0 ki\u1ec3m tra xem s\u1ed1 \u0111ang x\u00e9t c\u00f3 ph\u1ea3i l\u00e0 \u01b0\u1edbc c\u1ee7a c\u1ee7a \\(A\\) v\u00e0 \\(B\\) hay kh\u00f4ng. N\u1ebfu \u0111\u00fang nh\u01b0 v\u1eady th\u00ec s\u1ed1 \u0111ang x\u00e9t s\u1ebd l\u00e0 GCD c\u1ee7a \\(A\\) v\u00e0 \\(B\\).</p> <pre><code>int gcd(int A, int B) {\n    for (int i = min(A, B); i &gt; 0; --i)\n        if (A % i == 0 &amp;&amp; B % i == 0) {\n            return i;\n        }\n    // kh\u00f4ng bao gi\u1edd ch\u1ea1y \u0111\u1ebfn \u0111\u00e2y v\u00ec khi i = 1 th\u00ec c\u1ea3 A v\u00e0 B lu\u00f4n chia h\u1ebft cho i\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \\(O(min(A,B))\\).</p>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/#thuat-toan-euclid","title":"Thu\u1eadt to\u00e1n Euclid","text":"<p>Thu\u1eadt to\u00e1n Euclid d\u1ef1a tr\u00ean t\u00ednh ch\u1ea5t sau c\u1ee7a \u01b0\u1edbc chung l\u1edbn nh\u1ea5t \\(GCD(A,B)=GCD(B,A\\%B)\\). Thu\u1eadt to\u00e1n s\u1ebd quy n\u1ea1p cho \u0111\u1ebfn khi \\(A\\%B=0\\).</p> <pre><code>int gcd(int A, int B) {\n    if (B == 0) return A;\n    else return gcd(B, A % B);\n}\n</code></pre> <p>V\u00ed d\u1ee5:</p> <p>Gi\u1ea3 s\u1eed \\(A=16, B=10\\).</p> <p>\\(GCD(16,10)=GCD(10,16\\%10)=GCD(10,6)\\)</p> <p>\\(GCD(10,6)=GCD(6,10\\%6)=GCD(6,4)\\)</p> <p>\\(GCD(6, 4) = GCD(4, 6 \\% 4) = GCD(4, 2)\\)</p> <p>\\(GCD(4, 2) = GCD(2, 4 \\% 2) = GCD(2, 0)\\)</p> <p>V\u00ec \\(B=0\\) n\u00ean \\(GCD(2,0)\\) s\u1ebd tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb 2.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \\(O(\\log{max(A,B)})\\).</p>"},{"location":"translate/he/So-hoc-Phan-1-Modulo-gcd/#thuat-toan-euclid-mo-rong-extended-euclid-algorithm","title":"Thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng (Extended Euclid Algorithm)","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n m\u1edf r\u1ed9ng c\u1ee7a thu\u1eadt to\u00e1n Euclid \u1edf tr\u00ean. \\(GCD(A,B)\\) c\u00f3 m\u1ed9t t\u00ednh ch\u1ea5t r\u1ea5t \u0111\u1eb7c bi\u1ec7t: N\u00f3 lu\u00f4n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng ph\u01b0\u01a1ng tr\u00ecnh \\(Ax+By=GCD(A,B)\\).</p> <p>Thu\u1eadt to\u00e1n s\u1ebd cho ta bi\u1ebft m\u1ed9t c\u1eb7p gi\u00e1 tr\u1ecb \\((x;y)\\) th\u1ecfa m\u00e3n ph\u01b0\u01a1ng tr\u00ecnh n\u00e0y v\u00e0 nh\u1edd \u0111\u00f3 gi\u00fap ta t\u00ednh Modular Multiplicative Inverse. \\(x\\) v\u00e0 \\(y\\) c\u00f3 th\u1ec3 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng kh\u00f4ng ho\u1eb7c \u00e2m. Ch\u01b0\u01a1ng tr\u00ecnh sau \u0111\u1ecdc hai s\u1ed1 \\(A\\) v\u00e0 \\(B\\) v\u00e0 in ra \\(GCD(A,B)\\) c\u0169ng nh\u01b0 m\u1ed9t c\u1eb7p s\u1ed1 \\((x;y)\\) th\u1ecfa m\u00e3n ph\u01b0\u01a1ng tr\u00ecnh.</p> <pre><code>int d, x, y;\nvoid extendedEuclid(int A, int B) {\n    if (B == 0) {\n        d = A;\n        x = 1;\n        y = 0;\n    }\n    else {\n        extendedEuclid(B, A%B);\n        int temp = x;\n        x = y;\n        y = temp - (A/B)*y;\n    }\n}\n\nint main() {\n    extendedEuclid(16, 10);\n    cout &lt;&lt; \"gcd(16, 10) = \" &lt;&lt; d &lt;&lt; endl;\n    cout &lt;&lt; \"x, y: \" &lt;&lt; x &lt;&lt;  \", \" &lt;&lt; y &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>K\u1ebft qu\u1ea3</p> <pre><code>gcd(16, 10) = 2\nx, y: 2, -3\n</code></pre> <p>Ban \u0111\u1ea7u, thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng s\u1ebd ch\u1ea1y nh\u01b0 thu\u1eadt to\u00e1n Euclid cho \u0111\u1ebfn khi ta c\u00f3 \\(GCD(A,B)\\) ho\u1eb7c cho \u0111\u1ebfn khi \\(B\\) b\u1eb1ng 0 v\u00e0 khi \u0111\u00f3 thu\u1eadt to\u00e1n s\u1ebd \u0111\u1eb7t \\(x=1\\) v\u00e0 \\(y=0\\). V\u00ec \\(B=0\\) v\u00e0 \\(GCD(A,B)\\) l\u00e0 \\(A\\) trong th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i n\u00ean ph\u01b0\u01a1ng tr\u00ecnh \\(Ax+By=0\\) tr\u1edf th\u00e0nh \\(A.1+0.0=A\\).</p> <p>Gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c bi\u1ebfn \\(d,x,y\\) trong h\u00e0m <code>extendedEuclid()</code> s\u1ebd l\u1ea7n l\u01b0\u1ee3t tr\u1edf th\u00e0nh:</p> <ol> <li> <p>\\(d=2, x = 1, y = 0\\).</p> </li> <li> <p>\\(d=2, x = 0 , y = 1 - (4/2).0 = 1\\).</p> </li> <li> <p>\\(d=2, x = 1 , y = 0 - (6/4).1 = -1\\).</p> </li> <li> <p>\\(d=2, x = -1 , y = 1 - (10/6).(-1) = 2\\).</p> </li> <li> <p>\\(d=2 , x= 2, y = -1 - (16/10).2 = -3\\)</p> </li> </ol> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n: \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng l\u00e0 \\(O(\\log{max(A,B)})\\).</p>"},{"location":"translate/he/Wilsons-theorem/","title":"\u0110\u1ecbnh l\u00fd Wilson","text":"<p>Ngu\u1ed3n: hackerearth</p>"},{"location":"translate/he/Wilsons-theorem/#inh-ly","title":"\u0110\u1ecbnh l\u00fd","text":"<p>S\u1ed1 t\u1ef1 nhi\u00ean \\(n&gt;1\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 khi v\u00e0 ch\u1ec9 khi \\((n-1)!\\equiv n-1\\ (mod \\ n)\\).</p>"},{"location":"translate/he/Wilsons-theorem/#vi-du","title":"V\u00ed d\u1ee5","text":"<ul> <li> <p>V\u1edbi \\(n=4\\):</p> <p>\\((n-1)!\\ =6\\)</p> <p>\\((n-1)!\\ mod\\ n\\ =2\\)</p> </li> <li> <p>V\u1edbi \\(n=5\\):</p> <p>\\((n-1)!\\ =24\\)</p> <p>\\((n-1)!\\ mod\\ n\\ =4 = n-1\\), do \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> </li> <li> <p>V\u1edbi \\(n=6\\):</p> <p>\\((n-1)!\\ =120\\)</p> <p>\\((n-1)!\\ mod\\ n\\ =0\\)</p> </li> <li> <p>V\u1edbi \\(n=11\\):</p> <p>\\((n-1)!\\ =3628800\\)</p> <p>\\((n-1)!\\ mod\\ n\\ =10 = n-1\\), do \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> </li> <li> <p>V\u1edbi \\(n=12\\):</p> <p>\\((n-1)!\\ =39916800\\)</p> <p>\\((n-1)!\\ mod\\ n\\ =0\\)</p> </li> </ul>"},{"location":"translate/he/Wilsons-theorem/#chung-minh","title":"Ch\u1ee9ng minh","text":"<p>M\u1ec7nh \u0111\u1ec1 \u0111\u00fang v\u1edbi \\(n=2\\) v\u00e0 \\(n=3\\). Ta gi\u1ea3 s\u1eed \\(n&gt;3\\).</p> <ul> <li>Chi\u1ec1u thu\u1eadn: n\u1ebfu \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec \\((n-1)!\\equiv n-1 \\ (mod \\ n)\\)</li> </ul> <p>Khi \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 th\u00ec \\(gcd(a,n)=1\\) v\u1edbi m\u1ecdi \\(a &lt; n\\). Theo \u0111\u1ecbnh l\u00fd Euler ta c\u00f3: $$ a * a^{n-2} = a^{n-1} \\equiv 1 \\ mod\\ n $$ \u0110\u1eb7t \\(b = a^{n-2} \\bmod n\\). V\u1edbi m\u1ed7i \\(a\\) th\u00ec \\(b\\) l\u00e0 duy nh\u1ea5t v\u00e0 \\(b &lt; n\\) \u0111\u1ec3 \\(a*b\\ (mod \\ n) \\ =1\\), m\u1eb7t kh\u00e1c \\(a=b\\) khi v\u00e0 ch\u1ec9 khi \\(a=1\\) ho\u1eb7c \\(a=n-1\\) n\u00ean ta c\u00f3 th\u1ec3 t\u1ea1o ra \\((n-2) \\over 2\\) c\u1eb7p s\u1ed1 \\(a, b\\) ph\u00e2n bi\u1ec7t nh\u01b0 v\u1eady. Nh\u00e2n t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p v\u1edbi nhau ta \u0111\u01b0\u1ee3c</p> <p>\\(2.3.4...(n-2) \\ mod \\ n = 1\\) </p> <p>\\(\\Rightarrow \\ 1.2.3..(n-1)\\ mod \\ n = n-1\\)</p> <p>\\(\\Rightarrow (n-1)!\\equiv n-1\\ (mod \\ n)\\)</p> <ul> <li>Chi\u1ec1u ng\u01b0\u1ee3c: n\u1ebfu \\((n-1)!\\equiv n-1 \\ (mod \\ n)\\) th\u00ec \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1</li> </ul> <p>N\u1ebfu \\(n\\) l\u00e0 h\u1ee3p s\u1ed1</p> <p>\\(\\Rightarrow\\) t\u1ed3n t\u1ea1i \u01b0\u1edbc c\u1ee7a \\(n\\) trong kho\u1ea3ng \\((2;n)\\)</p> <p>\\(\\Rightarrow \\ gcd((n-1)!,n)&gt;1\\) do \\((n-1)!=1.2.3...(n-1)\\)</p> <p>\\(\\Rightarrow \\ gcd((n-1)! \\bmod n,n) &gt; 1\\)</p> <p>\\(\\Rightarrow \\ gcd(n-1,n) &gt; 1\\) (v\u00f4 l\u00fd).</p> <p>V\u1eady \\(n\\) ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p> <ul> <li>\u00c1p d\u1ee5ng</li> </ul> <p>\u0110\u1ecbnh l\u00fd Wilson cho ta c\u00e1ch t\u00ednh nhanh \\((n-1)!\\ mod \\ n\\) khi \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1.</p>"},{"location":"translate/he/Wilsons-theorem/#luyen-tap","title":"Luy\u1ec7n t\u1eadp","text":"<ul> <li>Factorial Again - HackerEarth</li> </ul>"},{"location":"translate/ml/Machine-Learning-Classification-phan-1/","title":"Machine Learning - Classification - ph\u1ea7n 1","text":"<p>Ngu\u1ed3n: Achoum's blog</p> <p>C\u00f3 th\u1ec3 b\u1ea1n \u0111\u00e3 nghe \u0111\u1ebfn c\u1ee5m t\u1eeb Machine Learning (hay Data Mining, Big Data, Data Science,...) nh\u01b0ng b\u1ea1n ch\u01b0a bao gi\u1edd hi\u1ec3u \u00fd ngh\u0129a th\u1ef1c s\u1ef1 c\u1ee7a ch\u00fang l\u00e0 g\u00ec. C\u00f3 th\u1ec3 t\u1ea5t c\u1ea3 nh\u1eefng g\u00ec b\u1ea1n bi\u1ebft l\u00e0 \"\u00c0! \u0110\u00f3 l\u00e0 nh\u1eefng thu\u1eadt ng\u1eef trong To\u00e1n h\u1ecdc v\u00e0 Tin h\u1ecdc\", v\u00e0 ...th\u1ebf l\u00e0 h\u1ebft. C\u00f3 th\u1ec3 b\u1ea1n ph\u1ea3i s\u1eed d\u1ee5ng nh\u1eefng ph\u1ea7n m\u1ec1m d\u1ef1a tr\u00ean Machine Learning trong c\u00f4ng vi\u1ec7c nh\u01b0ng v\u1edbi b\u1ea1n, ch\u00fang ho\u1ea1t \u0111\u1ed9ng nh\u01b0 l\u00e0 ma thu\u1eadt v\u1eady.</p> <p>N\u1ebfu b\u1ea1n v\u1eabn \u0111ang c\u00f2n t\u00f2 m\u00f2, th\u00ec Machine Learning \u0111\u01b0\u1ee3c d\u00f9ng trong h\u1ea7u h\u1ebft m\u1ecdi l\u0129nh v\u1ef1c. V\u00ed d\u1ee5, Machine Learning \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng b\u1edfi c\u00e1c ng\u00e2n h\u00e0ng \u0111\u1ec3 ph\u00e1t hi\u1ec7n gian l\u1eadn v\u00e0 d\u1ef1 \u0111o\u00e1n r\u1ee7i ro, \u0111\u01b0\u1ee3c d\u00f9ng b\u1edfi nh\u00e0 qu\u1ea3n l\u00ed email \u0111\u1ec3 ph\u00e1t hi\u1ec7n th\u01b0 r\u00e1c. C\u00e1c b\u00e1c s\u0129 d\u00f9ng Machine Learning \u0111\u1ec3 h\u1ed7 tr\u1ee3 ch\u1ea9n \u0111o\u00e1n, c\u00e1c nh\u00e0 sinh h\u1ecdc \u1ee9ng d\u1ee5ng Machine Learning trong vi\u1ec7c ph\u00e2n t\u00edch DNA. Ch\u00fang ta c\u0169ng \u0111ang ti\u1ebfp x\u00fac v\u1edbi n\u00f3 h\u00e0ng ng\u00e0y khi Google/Bing/Yahoo \u0111\u1ec1u s\u1eed d\u1ee5ng Machine Learning \u0111\u1ec3 x\u1eed l\u00fd m\u1ed7i khi b\u1ea1n g\u00f5 l\u1ec7nh t\u00ecm ki\u1ebfm.</p> <p>M\u1ee5c ti\u00eau c\u1ee7a t\u00e1c gi\u1ea3 v\u1edbi chu\u1ed7i b\u00e0i vi\u1ebft n\u00e0y l\u00e0 gi\u00fap c\u00e1c b\u1ea1n c\u00f3 m\u1ed9t hi\u1ec3u bi\u1ebft s\u01a1 l\u01b0\u1ee3c v\u1ec1 Machine Learning v\u00e0 m\u1ed9t c\u00e1i nh\u00ecn tr\u1ef1c quan v\u1ec1 c\u00e1ch m\u00e0 k\u1ef9 thu\u1eadt n\u00e0y ho\u1ea1t \u0111\u1ed9ng. Thay v\u00ec n\u00eau ra m\u1ed9t \u0111\u1ed1ng l\u00fd thuy\u1ebft, b\u00e0i vi\u1ebft n\u00e0y s\u1ebd ch\u1ee7 y\u1ebfu d\u1ef1a tr\u00ean c\u00e1c v\u00ed d\u1ee5. \u0110\u1ec3 \u0111\u1ecdc hi\u1ec3u b\u00e0i vi\u1ebft n\u00e0y, b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i l\u00e0 m\u1ed9t nh\u00e0 khoa h\u1ecdc m\u00e1y t\u00ednh; th\u1eadm ch\u00ed, b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i bi\u1ebft b\u1ea5t c\u1ee9 \u0111i\u1ec1u g\u00ec li\u00ean quan \u0111\u1ebfn m\u00e1y t\u00ednh v\u00e0 to\u00e1n h\u1ecdc.</p> <p>Chu\u1ed7i b\u00e0i vi\u1ebft trong ch\u1ee7 \u0111\u1ec1 n\u00e0y g\u1ed3m c\u00f3 3 b\u00e0i. B\u00e0i vi\u1ebft \u0111\u1ea7u ti\u00ean s\u1ebd gi\u1edbi thi\u1ec7u v\u1ec1 m\u1ed9t trong nh\u1eefng nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a Machine Learning: Ph\u00e2n lo\u1ea1i (Classification). B\u00e0i vi\u1ebft th\u1ee9 hai tr\u00ecnh b\u00e0y v\u00e0 minh ho\u1ea1 hai k\u1ef9 thu\u1eadt quan tr\u1ecdng c\u1ee7a Machine Learning \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i: m\u1ed9t trong s\u1ed1 \u0111\u00f3 tuy r\u1ea5t \u0111\u01a1n gi\u1ea3n nh\u01b0ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i, c\u00e1i c\u00f2n l\u1ea1i l\u00e0 m\u1ed9t k\u1ef9 thu\u1eadt r\u1ea5t m\u1edbi. Cu\u1ed1i c\u00f9ng, b\u00e0i vi\u1ebft th\u1ee9 ba s\u1ebd n\u00f3i v\u1ec1 c\u00e1ch c\u00e1c nh\u00e0 khoa h\u1ecdc m\u00e1y t\u00ednh \u0111\u00e1nh gi\u00e1 ch\u1ea5t l\u01b0\u1ee3ng c\u1ee7a m\u1ed9t k\u1ef9 thu\u1eadt trong Machine Learning.</p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-1/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Th\u1eadt s\u1ef1 kh\u00f4ng d\u1ec5 \u0111\u1ec3 c\u00f3 th\u1ec3 \u0111\u01b0a ra m\u1ed9t \u0111\u1ecbnh ngh\u0129a ch\u00ednh x\u00e1c c\u1ee7a Machine Learning. N\u00f3i m\u1ed9t c\u00e1ch n\u00f4m na, Machine Learning l\u00e0 c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh gi\u00fap \u0111\u01b0a ra d\u1ef1 \u0111o\u00e1n ho\u1eb7c gi\u00fap ng\u01b0\u1eddi d\u00f9ng hi\u1ec3u v\u1ec1 c\u00e1c hi\u1ec7n t\u01b0\u1ee3ng ph\u1ee9c t\u1ea1p.</p> <p>Machine Learning l\u00e0 m\u1ed9t ch\u1ee7 \u0111\u1ec1 r\u1ed9ng l\u1edbn v\u1edbi r\u1ea5t nhi\u1ec1u ch\u1ee7 \u0111\u1ec1 con. Thay v\u00ec c\u1ed1 g\u1eafng \u0111\u01b0a ra nh\u1eefng \u0111\u1ecbnh ngh\u0129a chung chung, b\u00e0i vi\u1ebft s\u1ebd ch\u1ec9 t\u1eadp trung v\u00e0o m\u1ed9t ch\u1ee7 \u0111\u1ec1 duy nh\u1ea5t: Ph\u00e2n lo\u1ea1i (Classification). B\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i ch\u1ec9 l\u00e0 m\u1ed9t trong r\u1ea5t nhi\u1ec1u ch\u1ee7 \u0111\u1ec1 c\u1ee7a Machine Learning, nh\u01b0ng l\u00e0 m\u1ed9t trong nh\u1eefng ch\u1ee7 \u0111\u1ec1 quan tr\u1ecdng nh\u1ea5t. Khi ng\u01b0\u1eddi ta n\u00f3i \u0111\u1ebfn Machine Learning, th\u00f4ng th\u01b0\u1eddng h\u1ecd n\u00f3i \u0111\u1ebfn b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i (n\u1ebfu h\u1ecd kh\u00f4ng ch\u1ec9 r\u00f5 ch\u1ee7 \u0111\u1ec1 kh\u00e1c).</p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-1/#phan-loai-classification","title":"Ph\u00e2n lo\u1ea1i (Classification)","text":"<p>\u00dd t\u01b0\u1edfng c\u1ee7a b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i b\u1eaft \u0111\u1ea7u nh\u01b0 sau: Ch\u00fang ta c\u00f3 m\u1ed9t danh s\u00e1ch c\u00e1c quan s\u00e1t (observation). M\u1ed9t quan s\u00e1t l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m chung chung. V\u1edbi Machine Learning, m\u1ed9t quan s\u00e1t th\u01b0\u1eddng l\u00e0 s\u1ef1 m\u00f4 t\u1ea3 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng trong m\u1ed9t tr\u1ea1ng th\u00e1i n\u00e0o \u0111\u00f3. \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n, h\u00e3y x\u00e9t m\u1ed9t v\u00ed d\u1ee5 r\u1ea5t ph\u1ed5 bi\u1ebfn trong Machine Learning: hoa di\u00ean v\u0129 (Iris flowers). Gi\u1ea3 s\u1eed m\u1ed9t quan s\u00e1t l\u00e0 s\u1ef1 m\u00f4 t\u1ea3 m\u1ed9t b\u00f4ng hoa. V\u1edbi m\u1ed7i b\u00f4ng hoa, ch\u00fang ta c\u00f3 b\u1ed1n th\u00f4ng s\u1ed1: \u0111\u1ed9 d\u00e0y v\u00e0 chi\u1ec1u d\u00e0i c\u1ee7a \u0111\u00e0i hoa (sepal) v\u00e0 c\u00e1nh hoa (petal). Tr\u00ean th\u1ef1c t\u1ebf, v\u00ed d\u1ee5 v\u1ec1 hoa di\u00ean v\u0129 n\u1ed5i ti\u1ebfng v\u1edbi c\u00e1i t\u00ean the Iris dataset v\u00e0 \u0111\u00e2y l\u00e0 b\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t r\u1ed9ng r\u00e3i trong gi\u1edbi nghi\u00ean c\u1ee9u Machine Learning \u0111\u1ec3 t\u00ecm hi\u1ec3u v\u1ec1 c\u00e1c thu\u1eadt to\u00e1n ph\u00e2n lo\u1ea1i.</p> <p></p> <p>B\u1ed1n th\u00f4ng s\u1ed1 c\u1ee7a m\u1ed7i b\u00f4ng hoa \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c thu\u1ed9c t\u00ednh (attributes). Trong Machine Learning, m\u1ed9t quan s\u00e1t \u0111\u01a1n thu\u1ea7n ch\u1ec9 l\u00e0 m\u1ed9t danh s\u00e1ch c\u00e1c thu\u1ed9c t\u00ednh. Khi so s\u00e1nh c\u00e1c quan s\u00e1t, th\u1ef1c ra ch\u00fang ta so s\u00e1nh c\u00e1c thu\u1ed9c t\u00ednh. V\u00ed d\u1ee5: \"B\u00f4ng hoa n\u00e0y c\u00f3 c\u00e1nh hoa d\u00e0i h\u01a1n b\u00f4ng hoa kia\". C\u00e1c thu\u1ed9c t\u00ednh c\u00f3 th\u1ec3 \u0111\u1ea1i di\u1ec7n cho nh\u1eefng th\u1ee9 r\u1ea5t kh\u00e1c nhau. V\u00ed d\u1ee5: \u0111\u1ed9 d\u00e0i c\u1ee7a m\u00e1y bay, th\u1eddi gian c\u1ee7a c\u01a1n b\u00e3o, nhi\u1ec7t \u0111\u1ed9 c\u1ee7a c\u0103n ph\u00f2ng, m\u00e0u s\u1eafc c\u1ee7a b\u1ee9c t\u01b0\u1eddng,... N\u00f3i chung, c\u00e1c thu\u1ed9c t\u00ednh th\u01b0\u1eddng \u0111\u01b0\u1ee3c chia th\u00e0nh hai lo\u1ea1i: thu\u1ed9c t\u00ednh d\u1ea1ng s\u1ed1 (numbers) v\u00e0 thu\u1ed9c t\u00ednh d\u1ea1ng th\u1ec3 lo\u1ea1i (categories). S\u1ef1 kh\u00e1c bi\u1ec7t c\u1ee7a hai lo\u1ea1i thu\u1ed9c t\u00ednh n\u00e0y kh\u00f4ng qu\u00e1 nghi\u00eam ng\u1eb7t, nh\u01b0ng th\u00f4ng th\u01b0\u1eddng, khi thu\u1ed9c t\u00ednh c\u00f3 th\u1ec3 so s\u00e1nh \u0111\u01b0\u1ee3c (<code>&gt;</code> ho\u1eb7c <code>&lt;</code>), ta coi n\u00f3 l\u00e0 thu\u1ed9c t\u00ednh d\u1ea1ng s\u1ed1 (v\u00ed d\u1ee5 nh\u01b0 \u0111\u1ed9 d\u00e0i c\u1ee7a c\u00e1nh hoa di\u00ean v\u0129), ng\u01b0\u1ee3c l\u1ea1i ch\u00fang ta coi n\u00f3 l\u00e0 thu\u1ed9c t\u00ednh d\u1ea1ng th\u1ec3 lo\u1ea1i (v\u00ed d\u1ee5 nh\u01b0 m\u00e0u s\u1eafc c\u1ee7a m\u1ed9t b\u00f4ng hoa hay ch\u1ee7ng lo\u1ea1i c\u1ee7a m\u1ed9t ch\u00fa ch\u00f3). </p> <p>Ngo\u00e0i ra, v\u1edbi m\u1ed7i quan s\u00e1t (hay v\u1edbi m\u1ed7i b\u00f4ng hoa di\u00ean v\u0129), ch\u00fang ta c\u00f3 m\u1ed9t l\u1edbp (class). M\u1ed9t l\u1edbp l\u00e0 m\u1ed9t th\u00f4ng tin b\u1ed5 sung v\u1ec1 m\u1ed9t quan s\u00e1t. Trong v\u00ed d\u1ee5 v\u1ec1 hoa di\u00ean v\u0129, ta gi\u1ea3 s\u1eed r\u1eb1ng l\u1edbp c\u1ee7a m\u1ed9t b\u00f4ng hoa di\u00ean v\u0129 ch\u00ednh l\u00e0 lo\u00e0i c\u1ee7a n\u00f3. Trong v\u00ed d\u1ee5 n\u00e0y, ch\u00fang ta ch\u1ec9 quan t\u00e2m ba lo\u00e0i hoa di\u00ean v\u0129: Setosa, Versicolour v\u00e0 Viginica.</p> <p>T\u00f3m l\u1ea1i, ch\u00fang ta c\u00f3 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c quan s\u00e1t (c\u00e1c b\u00f4ng hoa di\u00ean v\u0129). V\u1edbi m\u1ed7i quan s\u00e1t, ch\u00fang ta c\u00f3 m\u1ed9t s\u1ed1 c\u00e1c thu\u1ed9c t\u00ednh v\u00e0 m\u1ed9t l\u1edbp. B\u1ea3ng d\u01b0\u1edbi \u0111\u00e2y minh ho\u1ea1 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c quan s\u00e1t trong v\u00ed d\u1ee5 v\u1ec1 hoa di\u00ean v\u0129. M\u1ed9t b\u1ea3ng ki\u1ec3u n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t dataset hay b\u1ed9 d\u1eef li\u1ec7u.</p> <p></p> <p>Gi\u1ea3 s\u1eed r\u1eb1ng ch\u00fang ta c\u00f3 150 quan s\u00e1t nh\u01b0 v\u1eady (t\u01b0\u01a1ng \u1ee9ng v\u1edbi 150 b\u00f4ng hoa di\u00ean v\u0129). Tuy nhi\u00ean, v\u1edbi quan s\u00e1t cu\u1ed1i c\u00f9ng (hay b\u00f4ng hoa di\u00ean v\u0129 cu\u1ed1i c\u00f9ng), ch\u00fang ta kh\u00f4ng bi\u1ebft l\u1edbp c\u1ee7a n\u00f3 l\u00e0 g\u00ec (hay kh\u00f4ng bi\u1ebft b\u00f4ng hoa thu\u1ed9c lo\u00e0i g\u00ec). Ch\u00fang ta c\u00f3 th\u1ec3 t\u1ef1 h\u1ecfi: Li\u1ec7u lo\u00e0i hoa c\u00f3 li\u00ean quan \u0111\u1ebfn k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e1nh hoa v\u00e0 \u0111\u00e0i hoa kh\u00f4ng? C\u00f3 ch\u0103ng m\u1ed9t lo\u00e0i hoa c\u00f3 c\u00e1nh hoa d\u00e0i h\u01a1n so v\u1edbi c\u00e1c lo\u00e0i di\u00ean v\u0129 kh\u00e1c? N\u00f3i c\u00e1ch kh\u00e1c, li\u1ec7u ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng 149 b\u00f4ng hoa di\u00ean v\u0129 m\u00e0 ch\u00fang ta \u0111\u00e3 bi\u1ebft l\u1edbp c\u1ee7a n\u00f3, v\u00e0 t\u00ecm ra l\u1edbp c\u1ee7a b\u00f4ng hoa cu\u1ed1i c\u00f9ng kh\u00f4ng? \u0110\u00f3 ch\u00ednh x\u00e1c l\u00e0 b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i. Di\u1ec5n \u0111\u1ea1t theo c\u00e1ch kh\u00e1c, b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i c\u00f3 th\u1ec3 m\u00f4 t\u1ea3 nh\u01b0 sau:</p> <p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c quan s\u00e1t \u0111\u01b0\u1ee3c \u0111\u00e1nh nh\u00e3n (hay c\u00e1c quan s\u00e1t m\u00e0 ch\u00fang ta \u0111\u00e3 bi\u1ebft l\u1edbp c\u1ee7a n\u00f3) v\u00e0 m\u1ed9t quan s\u00e1t ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh nh\u00e3n. L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm ra l\u1edbp c\u1ee7a quan s\u00e1t \u0111\u00f3?</p> <p>Trong th\u1ef1c t\u1ebf, d\u0129 nhi\u00ean c\u00e1c k\u1ef9 thu\u1eadt ph\u00e2n lo\u1ea1i kh\u00f4ng ch\u1ec9 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 ph\u00e2n lo\u1ea1i hoa. C\u00e1c ng\u00e2n h\u00e0ng s\u1eed d\u1ee5ng n\u00f3 \u0111\u1ec3 ph\u00e2n lo\u1ea1i kh\u00e1ch h\u00e0ng (v\u00ed d\u1ee5: li\u1ec7u kh\u00e1ch h\u00e0ng c\u00f3 ho\u00e0n l\u1ea1i n\u1ee3 t\u00edn d\u1ee5ng hay kh\u00f4ng?). C\u00e1c b\u1ec7nh vi\u1ec7n \u1ee9ng d\u1ee5ng n\u00f3 \u0111\u1ec3 ph\u00e2n lo\u1ea1i b\u1ec7nh nh\u00e2n, c\u00e1c c\u00f4ng ty b\u1ea3o hi\u1ec3m d\u00f9ng trong vi\u1ec7c ph\u00e2n lo\u1ea1i c\u00e1c th\u00e2n ch\u1ee7 c\u1ee7a m\u00ecnh... Ph\u00e2n lo\u1ea1i c\u00f2n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf m\u1ed9t m\u1ee9c \u0111\u1ed9 s\u00e2u s\u1eafc h\u01a1n. V\u00ed d\u1ee5, c\u00e1c lo\u1ea1i camera hi\u1ec7n \u0111\u1ea1i d\u00f9ng classification \u0111\u1ec3 nh\u1eadn di\u1ec7n khu\u00f4n m\u1eb7t, d\u1ecbch v\u1ee5 b\u01b0u \u0111i\u1ec7n s\u1eed d\u1ee5ng n\u00f3 trong vi\u1ec7c nh\u1eadn d\u1ea1ng \u0111\u1ecba ch\u1ec9 vi\u1ebft tay. C\u00e1c th\u01b0\u01a1ng gia d\u1ef1 \u0111o\u00e1n th\u1ecb tr\u01b0\u1eddng b\u1eb1ng c\u00e1c thu\u1eadt to\u00e1n ph\u00e2n lo\u1ea1i, trong khi nh\u1eefng nh\u00e0 kh\u00ed t\u01b0\u1ee3ng s\u1eed d\u1ee5ng n\u00f3 \u0111\u1ec3 d\u1ef1 b\u00e1o th\u1eddi ti\u1ebft.</p> <p>\u0110i\u1ec3m kh\u00e1c bi\u1ec7t ch\u00ednh gi\u1eefa nh\u1eefng v\u00ed d\u1ee5 tr\u00ean ch\u00ednh l\u00e0 c\u00e1c thu\u1ed9c t\u00ednh. V\u1edbi kh\u00e1ch h\u00e0ng c\u1ee7a c\u00e1c ng\u00e2n h\u00e0ng, thu\u1ed9c t\u00ednh l\u00e0 thu nh\u1eadp h\u00e0ng th\u00e1ng, \u0111i\u1ec3m t\u00edn d\u1ee5ng, s\u1ed1 l\u1ea7n s\u1eed d\u1ee5ng th\u1ebb g\u1ea7n \u0111\u00e2y,... V\u1edbi b\u1ec7nh nh\u00e2n th\u00ec thu\u1ed9c t\u00ednh l\u00e0 gi\u1edbi t\u00ednh, nh\u1ecbp tim, huy\u1ebft \u00e1p,... V\u1edbi c\u00e1c b\u1ee9c \u1ea3nh, thu\u1ed9c t\u00ednh ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb m\u00e0u c\u1ee7a t\u1eebng \u0111i\u1ec3m \u1ea3nh.</p> <p>Trong b\u00e0i vi\u1ebft ti\u1ebfp theo, t\u00e1c gi\u1ea3 s\u1ebd tr\u00ecnh b\u00e0y c\u00e1ch gi\u1ea3i b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i. Ch\u00ednh x\u00e1c h\u01a1n, t\u00e1c gi\u1ea3 s\u1ebd tr\u00ecnh b\u00e0y hai thu\u1eadt to\u00e1n ph\u00e2n lo\u1ea1i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i m\u00e0 b\u1ea5t c\u1ee9 nh\u00e0 nghi\u00ean c\u1ee9u v\u1ec1 Machine Learning n\u00e0o c\u0169ng bi\u1ebft.</p> <p>H\u1eb9n g\u1eb7p l\u1ea1i c\u00e1c b\u1ea1n trong b\u00e0i vi\u1ebft ti\u1ebfp theo.</p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-2/","title":"Machine Learning - Classification - ph\u1ea7n 2","text":"<p>Ngu\u1ed3n: Achoum's blog</p> <p>Trong b\u00e0i vi\u1ebft tr\u01b0\u1edbc (link), ch\u00fang ta \u0111\u00e3 c\u00f9ng t\u00ecm hi\u1ec3u v\u1ec1 Classification. Ch\u00fang ta c\u0169ng \u0111\u00e3 \u0111\u01b0a ra v\u00e0i v\u00ed d\u1ee5 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3 v\u00e0 c\u0169ng \u0111\u00e3 l\u00e0m quen v\u1edbi the Iris dataset. N\u1ebfu c\u00f3 th\u1eddi gian, b\u1ea1n n\u00ean \u0111\u1ecdc b\u00e0i vi\u1ebft \u0111\u00f3 \u0111\u1ec3 c\u00f3 th\u1ec3 hi\u1ec3u c\u1eb7n k\u1ebd nh\u1eefng n\u1ed9i dung trong b\u00e0i vi\u1ebft n\u00e0y.</p> <p>Tr\u1edf l\u1ea1i c\u00e2u chuy\u1ec7n v\u1ec1 hoa di\u00ean v\u0129 (Iris flower): Ch\u00fang ta c\u00f3 m\u1ed9t danh s\u00e1ch c\u00e1c b\u00f4ng hoa di\u00ean v\u0129 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 b\u1eb1ng \u0111\u1ed9 d\u00e0i v\u00e0 \u0111\u1ed9 d\u00e0y c\u1ee7a \u0111\u00e0i hoa v\u00e0 c\u00e1nh hoa (attributes). Ch\u00fang ta c\u0169ng \u0111\u00e3 bi\u1ebft ch\u1ee7ng lo\u1ea1i c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c b\u00f4ng hoa tr\u1eeb m\u1ed9t c\u00e1i duy nh\u1ea5t (ch\u00fang ta s\u1ebd g\u1ecdi n\u00f3 l\u00e0 \"b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n\") v\u00e0 m\u1ee5c ti\u00eau cu\u1ed1i c\u00f9ng l\u00e0 t\u00ecm ra ch\u1ee7ng lo\u1ea1i c\u1ee7a b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n n\u00e0y. V\u1edbi b\u00e0i to\u00e1n n\u00e0y, ch\u00fang ta gi\u1ea3 s\u1eed r\u1eb1ng nh\u1eefng thu\u1ed9c t\u00ednh tr\u00ean l\u00e0 \u0111\u1eb7c tr\u01b0ng c\u1ee7a ch\u1ee7ng lo\u1ea1i.</p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-2/#giai-phap-1-quan-sat-tuong-ong-the-same-observation-solution","title":"Gi\u1ea3i ph\u00e1p 1: Quan s\u00e1t t\u01b0\u01a1ng \u0111\u1ed3ng (The same observation solution)","text":"<p>Gi\u1ea3i ph\u00e1p \u0111\u1ea7u ti\u00ean m\u00e0 ta th\u01b0\u1eddng ngh\u0129 \u0111\u1ebfn trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 t\u00ecm ki\u1ebfm m\u1ed9t b\u00f4ng di\u00ean v\u0129 kh\u00e1c v\u1edbi \u0111\u1ed9 d\u00e0i v\u00e0 \u0111\u1ed9 d\u00e0y c\u1ee7a \u0111\u00e0i hoa v\u00e0 c\u00e1nh hoa gi\u1ed1ng v\u1edbi b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n. N\u1ebfu c\u00f3, nhi\u1ec1u kh\u1ea3 n\u0103ng ch\u1ee7ng lo\u1ea1i c\u1ee7a b\u00f4ng hoa n\u00e0y c\u0169ng t\u01b0\u01a1ng \u0111\u1ed3ng v\u1edbi b\u00f4ng hoa b\u00ed \u1ea9n. Kh\u00f4ng may m\u1eafn thay, r\u1ea5t hi\u1ebfm khi ch\u00fang ta t\u00ecm \u0111\u01b0\u1ee3c hai b\u00f4ng di\u00ean v\u0129 v\u1edbi nh\u1eefng th\u00f4ng s\u1ed1 gi\u1ed1ng h\u1ec7t nhau. Tr\u00ean th\u1ef1c t\u1ebf, t\u00ecm ki\u1ebfm m\u1ed9t quan s\u00e1t v\u1edbi c\u00e1c thu\u1ed9c t\u00ednh gi\u1ed1ng h\u1ec7t hi\u1ebfm khi l\u00e0 m\u1ed9t gi\u1ea3i ph\u00e1p t\u1ed1t, s\u1ebd lu\u00f4n c\u00f3 nh\u1eefng s\u1ef1 kh\u00e1c bi\u1ec7t d\u00f9 l\u00e0 r\u1ea5t nh\u1ecf.</p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-2/#giai-phap-2-hang-xom-gan-nhat-the-1-nearest-neighbors-solution","title":"Gi\u1ea3i ph\u00e1p 2: H\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t (The 1-nearest neighbors solution)","text":"<p>Thay v\u00ec t\u00ecm ki\u1ebfm m\u1ed9t b\u00f4ng di\u00ean v\u0129 v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb thu\u1ed9c t\u00ednh t\u01b0\u01a1ng \u0111\u1ed3ng, ch\u00fang ta s\u1ebd t\u00ecm ki\u1ebfm nh\u1eefng b\u00f4ng hoa g\u1ea7n gi\u1ed1ng v\u1edbi b\u00f4ng hoa b\u00ed \u1ea9n. N\u1ebfu hai b\u00f4ng di\u00ean v\u0129 c\u00f3 k\u00edch th\u01b0\u1edbc r\u1ea5t g\u1ea7n gi\u1ed1ng nhau, ch\u00fang tr\u00f4ng s\u1ebd r\u1ea5t gi\u1ed1ng nhau v\u00e0 v\u00ec v\u1eady, c\u00f3 th\u1ec3 ch\u00fang thu\u1ed9c c\u00f9ng m\u1ed9t ch\u1ee7ng lo\u1ea1i.</p> <p>Tuy nhi\u00ean, c\u00e1ch n\u00e0y s\u1ebd kh\u00f4ng hi\u1ec7u qu\u1ea3 n\u1ebfu nh\u01b0 c\u00f3 m\u1ed9t v\u00e0i b\u00f4ng di\u00ean v\u0129 thu\u1ed9c c\u00e1c ch\u1ee7ng lo\u1ea1i kh\u00e1c nhau nh\u01b0ng \u0111\u1ec1u c\u00f3 gi\u00e1 tr\u1ecb thu\u1ed9c t\u00ednh g\u1ea7n gi\u1ed1ng v\u1edbi b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n. V\u00ec v\u1eady, ch\u00fang ta ch\u1ec9 t\u00ecm ra b\u00f4ng di\u00ean v\u0129 gi\u1ed1ng nh\u1ea5t v\u1edbi b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n. \u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0 ch\u00fang ta ph\u1ea3i \u0111\u1ecbnh ngh\u0129a ch\u00ednh x\u00e1c th\u1ebf n\u00e0o l\u00e0 hai b\u00f4ng di\u00ean v\u0129 gi\u1ed1ng nhau. Ch\u00fang ta c\u0169ng ph\u1ea3i \u0111\u1ecbnh ngh\u0129a th\u1ebf n\u00e0o l\u00e0 m\u1ed9t b\u00f4ng di\u00ean v\u0129 gi\u1ed1ng b\u00f4ng di\u00ean v\u0129 n\u00e0y h\u01a1n so v\u1edbi m\u1ed9t b\u00f4ng kh\u00e1c.</p> <p>Gi\u1ea3i ph\u00e1p \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng b\u1edfi c\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u l\u00e0 \u0111\u1ecbnh ngh\u0129a kho\u1ea3ng c\u00e1ch gi\u1eefa hai b\u00f4ng di\u00ean v\u0129.  Kho\u1ea3ng c\u00e1ch gi\u1eefa hai b\u00f4ng di\u00ean v\u0129 c\u00e0ng nh\u1ecf, ch\u00fang c\u00e0ng gi\u1ed1ng nhau. C\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a kho\u1ea3ng c\u00e1ch. M\u1ed9t trong nh\u1eefng kho\u1ea3ng c\u00e1ch th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u1ea5t trong Khoa h\u1ecdc M\u00e1y t\u00ednh l\u00e0 kho\u1ea3ng c\u00e1ch Euclide (the Euclidean distance). Nghe c\u00f3 v\u1ebb nguy hi\u1ec3m, nh\u01b0ng th\u1ef1c ra kho\u1ea3ng c\u00e1ch Euclide ch\u00ednh l\u00e0 nh\u1eefng g\u00ec b\u1ea1n v\u1eabn th\u01b0\u1eddng hi\u1ec3u v\u1ec1 kho\u1ea3ng c\u00e1ch hay \u0111\u01b0\u1eddng chim bay.</p> <p>Tuy nhi\u00ean, m\u1eb7c d\u00f9 kho\u1ea3ng c\u00e1ch Euclide gi\u1eefa hai \u0111i\u1ec3m tr\u00ean b\u1ea3n \u0111\u1ed3 r\u1ea5t d\u1ec5 hi\u1ec3u, s\u1ebd kh\u00f3 t\u01b0\u1edfng t\u01b0\u1ee3ng h\u01a1n m\u1ed9t ch\u00fat khi b\u1ea1n n\u00f3i \u0111\u1ebfn kho\u1ea3ng c\u00e1ch gi\u1eefa hai b\u00f4ng di\u00ean v\u0129.</p> <p>\u0110\u1ec3 t\u00ednh kho\u1ea3ng c\u00e1ch Euclide, b\u1ea1n ph\u1ea3i t\u00ednh t\u1ed5ng b\u00ecnh ph\u01b0\u01a1ng c\u1ee7a hi\u1ec7u c\u00e1c thu\u1ed9c t\u00ednh t\u01b0\u01a1ng \u0111\u01b0\u01a1ng, r\u1ed3i l\u1ea5y c\u0103n b\u1eadc hai c\u1ee7a t\u1ed5ng \u0111\u00f3. H\u00e3y \u00e1p d\u1ee5ng c\u00f4ng th\u1ee9c \u0111\u00f3 cho hai b\u00f4ng hoa \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n trong b\u1ea3ng sau:</p> <p></p> <p>Kho\u1ea3ng c\u00e1ch gi\u1eefa hai b\u00f4ng di\u00ean v\u0129 \u0111\u1ea7u ti\u00ean l\u00e0:</p> <p>\\(\\sqrt{(6.3 - 6.2)^2 + (2.3 - 3.4)^2 + (4.4 - 5.4)^2 + (1.3 - 2.3)^2} = 1.79\\)</p> <p>Kho\u1ea3ng c\u00e1ch gi\u1eefa b\u00f4ng hoa \u0111\u1ea7u ti\u00ean v\u00e0 b\u00f4ng hoa th\u1ee9 ba l\u00e0:</p> <p>\\(\\sqrt{(6.3 - 5.2)^2 + (2.3 - 3.4)^2 + (4.4 - 1.4)^2 + (1.3 - 0.2)^2} = 3.55\\)</p> <p>Gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean nh\u1ecf h\u01a1n (\\(1.79 &lt; 3.55\\)), \u0111i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 b\u00f4ng di\u00ean v\u0129 \u0111\u1ea7u ti\u00ean gi\u1ed1ng b\u00f4ng hoa th\u1ee9 hai h\u01a1n so v\u1edbi b\u00f4ng hoa th\u1ee9 ba.</p> <p>Nh\u1edd nh\u1eefng b\u01b0\u1edbc t\u00ednh to\u00e1n v\u00e0 so s\u00e1nh nh\u01b0 tr\u00ean, b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm ra b\u00f4ng hoa gi\u1ed1ng b\u00f4ng hoa b\u00ed \u1ea9n nh\u1ea5t. \u0110\u01a1n gi\u1ea3n l\u00e0 ch\u00fang ta ch\u1ec9 c\u1ea7n t\u00ednh kho\u1ea3ng c\u00e1ch gi\u1eefa b\u00f4ng hoa b\u00ed \u1ea9n v\u1edbi m\u1ed7i b\u00f4ng hoa kh\u00e1c, v\u00e0 t\u00ecm b\u00f4ng hoa c\u00f3 kho\u1ea3ng c\u00e1ch nh\u1ecf nh\u1ea5t. Ph\u01b0\u01a1ng ph\u00e1p t\u01b0\u1edfng ch\u1eebng nh\u01b0 \u0111\u01a1n gi\u1ea3n n\u00e0y th\u1ef1c ra l\u1ea1i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng b\u1edfi r\u1ea5t nhi\u1ec1u nh\u00e0 nghi\u00ean c\u1ee9u. N\u00f3 c\u00f3 t\u00ean l\u00e0 H\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t (The 1-nearest neighbors solution)</p> <p></p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-2/#giai-phap-3-k-hang-xom-gan-nhat-the-k-nearest-neighbors-solution","title":"Gi\u1ea3i ph\u00e1p 3: k-h\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t (The k-nearest neighbors solution)","text":"<p>Th\u00f4ng th\u01b0\u1eddng, gi\u1ea3i ph\u00e1p h\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t (The 1-nearest neighbors solution) cho k\u1ebft qu\u1ea3 t\u1ed1t, nh\u01b0ng trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p, v\u00ec nhi\u1ec1u nguy\u00ean nh\u00e2n kh\u00e1c nhau m\u00e0 gi\u1ea3i ph\u00e1p n\u00e0y cho k\u1ebft qu\u1ea3 thi\u1ebfu ch\u00ednh x\u00e1c. M\u1ed9t trong nh\u1eefng nguy\u00ean nh\u00e2n c\u00f3 th\u1ec3 l\u00e0 s\u1ef1 thi\u1ebfu ch\u00ednh x\u00e1c trong ph\u00e9p \u0111o c\u00e1c thu\u1ed9c t\u00ednh. \u0110i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn vi\u1ec7c t\u00ednh kho\u1ea3ng c\u00e1ch kh\u00f4ng \u0111\u00fang, v\u00e0 nh\u01b0 v\u1eady thu\u1eadt to\u00e1n kh\u00f4ng th\u1ec3 t\u00ecm ra l\u1edbp (class) \u0111\u00fang nh\u1ea5t.</p> <p>C\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u \u0111\u00e3 t\u00ecm ra m\u1ed9t gi\u1ea3i ph\u00e1p \u0111\u01a1n gi\u1ea3n cho v\u1ea5n \u0111\u1ec1 n\u00e0y: Thay v\u00ec t\u00ecm ra b\u00f4ng di\u00ean v\u0129 gi\u1ed1ng nh\u1ea5t, ch\u00fang ta s\u1ebd t\u00ecm 5. N\u00f3i c\u00e1ch kh\u00e1c, ch\u00fang ta t\u00ecm 5 b\u00f4ng di\u00ean v\u0129 c\u00f3 kho\u1ea3ng c\u00e1ch nh\u1ecf nh\u1ea5t so v\u1edbi b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n. N\u1ebfu c\u1ea3 5 b\u00f4ng di\u00ean v\u0129 thu\u1ed9c c\u00f9ng m\u1ed9t ch\u1ee7ng lo\u1ea1i, v\u1ea5n \u0111\u1ec1 tr\u1edf n\u00ean r\u1ea5t \u0111\u01a1n gi\u1ea3n: ch\u1ee7ng lo\u1ea1i (hay l\u1edbp) c\u1ee7a b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n ch\u00ednh l\u00e0 ch\u1ee7ng lo\u1ea1i c\u1ee7a 5 b\u00f4ng di\u00ean v\u0129 \u0111\u00f3.</p> <p>Tuy nhi\u00ean, s\u1ebd th\u1ebf n\u00e0o n\u1ebfu 5 b\u00f4ng di\u00ean v\u0129 tr\u00ean thu\u1ed9c v\u1ec1 c\u00e1c ch\u1ee7ng lo\u1ea1i kh\u00e1c nhau? Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ch\u00fang ta s\u1ebd \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng c\u00e1c b\u00f4ng di\u00ean v\u0129 trong m\u1ed9t ch\u1ee7ng lo\u1ea1i, v\u00e0 ch\u1ee7ng lo\u1ea1i v\u1edbi s\u1ed1 b\u00f4ng di\u00ean v\u0129 l\u1edbn nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c coi l\u00e0 ch\u1ee7ng lo\u1ea1i c\u1ee7a b\u00f4ng di\u00ean v\u0129 b\u00ed \u1ea9n. V\u00ed d\u1ee5, n\u1ebfu trong 5 b\u00f4ng di\u00ean v\u0129 gi\u1ed1ng nh\u1ea5t, c\u00f3 1 b\u00f4ng thu\u1ed9c lo\u1ea1i Setosa, 1 thu\u1ed9c Versicolour v\u00e0 3 b\u00f4ng c\u00f2n l\u1ea1i thu\u1ed9c lo\u1ea1i Viginica, ch\u00fang ta c\u00f3 th\u1ec3 kh\u00e1 ch\u1eafc ch\u1eafn khi k\u1ebft lu\u1eadn r\u1eb1ng b\u00f4ng hoa b\u00ed \u1ea9n thu\u1ed9c lo\u1ea1i Viginica (xem h\u00ecnh minh ho\u1ea1 ph\u00eda d\u01b0\u1edbi).</p> <p></p> <p>Gi\u1ea3i thu\u1eadt tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 5-h\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t (5-nearest neighbors)</p> <p>C\u00f3 th\u1ec3 b\u1ea1n th\u1eafc m\u1eafc t\u1ea1i sao ch\u00fang ta l\u1ea1i t\u00ecm 5 h\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t thay v\u00ec 2, 10 hay 50. Ch\u1ecdn ra k t\u1ed1t nh\u1ea5t trong gi\u1ea3i thu\u1eadt k-h\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t l\u00e0 m\u1ed9t c\u00e2u h\u1ecfi r\u1ea5t kh\u00f3 tr\u1ea3 l\u1eddi v\u00ec n\u00f3 ph\u1ee5 thu\u1ed9c v\u00e0o r\u1ea5t nhi\u1ec1u v\u1ea5n \u0111\u1ec1. Ch\u00fang ta s\u1ebd kh\u00f4ng gi\u1ea3i th\u00edch chi ti\u1ebft \u1edf \u0111\u00e2y, nh\u01b0ng b\u1ea1n n\u00ean bi\u1ebft r\u1eb1ng, trong th\u1ef1c t\u1ebf, c\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u th\u01b0\u1eddng th\u1eed r\u1ea5t nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p \u0111\u1ec3 t\u00ecm ra ph\u01b0\u01a1ng \u00e1n t\u1ed1t nh\u1ea5t.</p> <p>B\u00e0i vi\u1ebft \u0111\u1ebfn \u0111\u00e2y l\u00e0 h\u1ebft. Hi v\u1ecdng b\u1ea1n \u0111\u00e3 c\u00f3 m\u1ed9t hi\u1ec3u bi\u1ebft s\u01a1 l\u01b0\u1ee3c v\u1ec1 thu\u1eadt to\u00e1n n\u1ed5i ti\u1ebfng k-h\u00e0ng x\u00f3m g\u1ea7n nh\u1ea5t (hay k-nearest neighbors). Trong b\u00e0i vi\u1ebft ti\u1ebfp theo, t\u00e1c gi\u1ea3 s\u1ebd gi\u1edbi thi\u1ec7u m\u1ed9t thu\u1eadt to\u00e1n m\u1edbi h\u01a1n, ph\u1ee9c t\u1ea1p v\u00e0 r\u1ea5t m\u1ea1nh g\u1ecdi l\u00e0 Random Forest.</p> <p>H\u1eb9n g\u1eb7p l\u1ea1i c\u00e1c b\u1ea1n trong b\u00e0i vi\u1ebft t\u1edbi!</p>"},{"location":"translate/ml/Machine-Learning-Classification-phan-3/","title":"Machine Learning - Classification - ph\u1ea7n 3","text":"<p>Ngu\u1ed3n: Achoum's blog</p> <p>Trong hai b\u00e0i vi\u1ebft tr\u01b0\u1edbc (ph\u1ea7n 1) v\u00e0 (ph\u1ea7n 2), ch\u00fang ta \u0111\u00e3 c\u00f9ng t\u00ecm hi\u1ec3u v\u1ec1 Classification. Ch\u00fang ta c\u0169ng \u0111\u00e3 l\u00e0m quen v\u1edbi m\u1ed9t thu\u1eadt to\u00e1n r\u1ea5t n\u1ed5i ti\u1ebfng g\u1ecdi l\u00e0 k-nearest neighbors. N\u1ebfu c\u00f3 th\u1eddi gian, b\u1ea1n n\u00ean \u0111\u1ecdc c\u00e1c b\u00e0i vi\u1ebft \u0111\u00f3 \u0111\u1ec3 c\u00f3 th\u1ec3 hi\u1ec3u c\u1eb7n k\u1ebd nh\u1eefng n\u1ed9i dung trong b\u00e0i vi\u1ebft n\u00e0y, b\u00e0i vi\u1ebft cu\u1ed1i c\u00f9ng trong chu\u1ed7i b\u00e0i gi\u1edbi thi\u1ec7u v\u1ec1 Classification.</p> <p>Thu\u1eadt to\u00e1n k-nearest neighbors m\u00e0 ch\u00fang ta t\u00ecm hi\u1ec3u \u1edf b\u00e0i vi\u1ebft tr\u01b0\u1edbc l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t r\u1ed9ng r\u00e3i. Tuy nhi\u00ean, n\u00f3 c\u0169ng l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n r\u1ea5t c\u0169. Cho \u0111\u1ebfn th\u1eddi \u0111i\u1ec3m n\u00e0y, c\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u \u0111\u00e3 v\u00e0 \u0111ang ph\u00e1t tri\u1ec3n nh\u1eefng thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p v\u00e0 m\u1ea1nh m\u1ebd h\u01a1n nhi\u1ec1u. Thu\u1eadt to\u00e1n ti\u1ebfp theo m\u00e0 t\u00e1c gi\u1ea3 mu\u1ed1n gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Random Forest. \u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n m\u1edbi xu\u1ea5t hi\u1ec7n t\u1ea7m 10 n\u0103m tr\u01b0\u1edbc, v\u00e0 \u0111\u01b0\u1ee3c coi l\u00e0 m\u1ed9t cu\u1ed9c c\u00e1ch m\u1ea1ng trong Machine Learning. Random Forest ch\u1ec9 ph\u1ee9c t\u1ea1p h\u01a1n m\u1ed9t ch\u00fat so v\u1edbi k-nearest neighbors, nh\u01b0ng n\u00f3 hi\u1ec7u qu\u1ea3 h\u01a1n nhi\u1ec1u n\u1ebfu x\u00e9t tr\u00ean hi\u1ec7u n\u0103ng t\u00ednh to\u00e1n c\u1ee7a m\u00e1y t\u00ednh. B\u00ean c\u1ea1nh \u0111\u00f3, Random Forest c\u00f2n cho k\u1ebft qu\u1ea3 ch\u00ednh x\u00e1c h\u01a1n nhi\u1ec1u so v\u1edbi k-nearest neighbors. Ngh\u0129a l\u00e0, khi c\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u ki\u1ec3m th\u1eed k\u1ebft qu\u1ea3 c\u1ee7a hai thu\u1eadt to\u00e1n n\u00e0y tr\u00ean c\u00e1c b\u1ed9 d\u1eef li\u1ec7u kh\u00e1c nhau (bao g\u1ed3m c\u1ea3 the Iris dataset), Random Forest th\u01b0\u1eddng cho k\u1ebft qu\u1ea3 \u0111\u00fang h\u01a1n so v\u1edbi k-nearest neighbors</p> <p>M\u1ed9t trong nh\u1eefng l\u00ed do khi\u1ebfn Random Forest hi\u1ec7u qu\u1ea3 h\u01a1n so v\u1edbi k-nearest neigbors l\u00e0 b\u1edfi v\u00ec, v\u1edbi k-nearest neighbors, t\u1ea5t c\u1ea3 c\u00e1c thu\u1ed9c t\u00ednh \u0111\u1ec1u c\u00f3 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng nh\u01b0 nhau. M\u1eb7t kh\u00e1c, Random Forest c\u00f3 kh\u1ea3 n\u0103ng t\u00ecm ra thu\u1ed9c t\u00ednh n\u00e0o quan tr\u1ecdng h\u01a1n so v\u1edbi nh\u1eefng thu\u1ed9c t\u00ednh kh\u00e1c. Tr\u00ean th\u1ef1c t\u1ebf, n\u00f3 c\u00f2n c\u00f3 th\u1ec3 ch\u1ec9 ra r\u1eb1ng m\u1ed9t s\u1ed1 thu\u1ed9c t\u00ednh l\u00e0 ho\u00e0n to\u00e0n v\u00f4 d\u1ee5ng.</p> <p>Random Forest l\u00e0 m\u1ed9t th\u00e0nh vi\u00ean trong h\u1ecd thu\u1eadt to\u00e1n decision tree (c\u00e2y quy\u1ebft \u0111\u1ecbnh). V\u1eady c\u00e2y quy\u1ebft \u0111\u1ecbnh l\u00e0 g\u00ec? M\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh l\u00e0 m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed9t giao th\u1ee9c (protocol). N\u00f3i c\u00e1ch kh\u00e1c, c\u00e2y quy\u1ebft \u0111\u1ecbnh bi\u1ec3u di\u1ec5n m\u1ed9t k\u1ebf ho\u1ea1ch, tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi ph\u1ea3i l\u00e0m g\u00ec trong m\u1ed9t ho\u00e0n c\u1ea3nh nh\u1ea5t \u0111\u1ecbnh. V\u00ed d\u1ee5, c\u00e2y quy\u1ebft \u0111\u1ecbnh \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong t\u1ed5ng \u0111\u00e0i \u0111i\u1ec7n tho\u1ea1i \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh xem t\u1ed5ng \u0111\u00e0i vi\u00ean s\u1ebd tr\u1ea3 l\u1eddi nh\u01b0 th\u1ebf n\u00e0o d\u1ef1a tr\u00ean ph\u1ea3n h\u1ed3i c\u1ee7a kh\u00e1ch h\u00e0ng. N\u00f3 c\u0169ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee7a b\u1ea5t k\u00ec c\u1ed7 m\u00e1y n\u00e0o m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng (t\u00e0u ng\u1ea7m, bom nguy\u00ean t\u1eed,...) hay \u0111\u01a1n gi\u1ea3n, c\u00e2y quy\u1ebft \u0111\u1ecbnh \u0111\u01b0\u1ee3c c\u00e1c b\u00e1c s\u0129 s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ea9n \u0111o\u00e1n b\u1ec7nh.</p> <p>H\u00e3y tr\u1edf l\u1ea1i c\u00e2u chuy\u1ec7n c\u1ee7a ch\u00fang ta v\u1edbi m\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n. H\u00ecnh \u1ea3nh ph\u00eda d\u01b0\u1edbi minh ho\u1ea1 m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh ch\u1ee7ng lo\u1ea1i c\u1ee7a m\u1ed9t con v\u1eadt. \u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, ch\u00fang ta s\u1ebd ch\u1ec9 x\u00e9t m\u1ed9t v\u00e0i ch\u1ee7ng lo\u1ea1i \u0111\u1ed9ng v\u1eadt m\u00e0 th\u00f4i. Gi\u1ea3 s\u1eed ta c\u00f3 m\u1ed9t con v\u1eadt, h\u00e3y th\u1eed d\u00f9ng c\u00e2y quy\u1ebft \u0111\u1ecbnh n\u00e0y \u0111\u1ec3 t\u00ecm ra ch\u1ee7ng lo\u1ea1i c\u1ee7a n\u00f3.</p> <p>\u0110\u01b0\u1eddng \u0111i b\u1eaft \u0111\u1ea7u t\u1eeb c\u00e2u h\u1ecfi \u0111\u1ea7u ti\u00ean \u1edf ph\u00eda tr\u00ean c\u1ee7a c\u00e2y (b\u00ean d\u01b0\u1edbi v\u00f2ng tr\u00f2n \u0111\u1ecf). Tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi \u0111\u00f3, v\u00e0 \u0111i ti\u1ebfp xu\u1ed1ng c\u00e1c n\u00fat ph\u00eda d\u01b0\u1edbi c\u1ee7a c\u00e2y tu\u1ef3 thu\u1ed9c v\u00e0o c\u00e2u tr\u1ea3 l\u1eddi (c\u00f3/kh\u00f4ng v\u1edbi c\u00e2u h\u1ecfi \u0111\u1ea7u ti\u00ean). L\u1eb7p l\u1ea1i h\u00e0nh \u0111\u1ed9ng \u0111\u00f3 cho \u0111\u1ebfn khi \u0111i t\u1edbi n\u00fat l\u00e1 (c\u00e1c \u00fat m\u00e0u xanh l\u00e1 c\u00e2y). Khi \u0111\u00f3, b\u1ea1n s\u1ebd c\u00f3 c\u00e2u tr\u1ea3 l\u1eddi.</p> <p></p> <p>(ch\u00fa th\u00edch tr\u00ean h\u00ecnh b\u1ecb sai: 50cm thay v\u00ec 50kg)</p> <p>V\u00ed d\u1ee5, b\u1ea1n b\u1eaft g\u1eb7p m\u1ed9t con v\u1eadt m\u00e0 b\u1ea1n kh\u00f4ng bi\u1ebft n\u00f3 thu\u1ed9c ch\u1ee7ng lo\u1ea1i g\u00ec. C\u00e2u h\u1ecfi \u0111\u1ea7u ti\u00ean l\u00e0: \"N\u00f3 c\u00f3 l\u00f4ng kh\u00f4ng?\". Gi\u1ea3 s\u1eed n\u00f3 c\u00f3 l\u00f4ng, ch\u00fang ta \u0111i ti\u1ebfp sang nh\u00e1nh b\u00ean ph\u1ea3i. C\u00e2u h\u1ecfi ti\u1ebfp theo l\u00e0: \"N\u00f3 cao bao nhi\u00eau?\". Gi\u1ea3 s\u1eed con v\u1eadt c\u1ee7a ch\u00fang ta ch\u1ec9 cao 30cm. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ch\u00fang ta s\u1ebd \u0111i theo nh\u00e1nh b\u00ean tr\u00e1i. Khi \u0111\u00f3, v\u00ec ch\u00fang ta \u0111\u00e3 \u0111i \u0111\u1ebfn n\u00fat l\u00e1, ch\u00fang ta bi\u1ebft r\u1eb1ng con v\u1eadt m\u00e0 m\u00ecnh \u0111ang x\u00e9t ch\u00ednh l\u00e0 con g\u00e0.</p> <p>B\u00e2y gi\u1edd ch\u1eafc b\u1ea1n \u0111\u00e3 hi\u1ec3u ph\u1ea7n n\u00e0o v\u1ec1 c\u00e2y quy\u1ebft \u0111\u1ecbnh, h\u00e3y tr\u1edf l\u1ea1i v\u1edbi thu\u1eadt to\u00e1n Random Forest: \u00dd t\u01b0\u1edfng ph\u00eda sau Random Forest kh\u00e1 \u0111\u01a1n gi\u1ea3n. Thu\u1eadt to\u00e1n n\u00e0y sinh m\u1ed9t s\u1ed1 c\u00e2y quy\u1ebft \u0111\u1ecbnh (th\u01b0\u1eddng l\u00e0 v\u00e0i tr\u0103m) v\u00e0 s\u1eed d\u1ee5ng ch\u00fang. C\u00e1c c\u00e2u h\u1ecfi c\u1ee7a c\u00e2y quy\u1ebft \u0111\u1ecbnh s\u1ebd l\u00e0 c\u00e2u h\u1ecfi v\u1ec1 c\u00e1c thu\u1ed9c t\u00ednh. V\u00ed d\u1ee5: \"C\u00e1nh hoa c\u00f3 d\u00e0i h\u01a1n 1.7cm hay kh\u00f4ng?\". C\u00e2u gi\u00e1 tr\u1ecb \u1edf n\u00fat l\u00e1 s\u1ebd l\u00e0 c\u00e1c l\u1edbp (class). S\u1eed d\u1ee5ng h\u00e0ng tr\u0103m c\u00e2y quy\u1ebft \u0111\u1ecbnh l\u00e0 b\u1ea5t kh\u1ea3 thi v\u1edbi con ng\u01b0\u1eddi, nh\u01b0ng m\u00e1y t\u00ednh c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y t\u01b0\u01a1ng \u0111\u1ed1i d\u1ec5 d\u00e0ng.</p> <p>\u0110\u1ebfn l\u00fac n\u00e0y ch\u00fang ta \u0111\u00e3 t\u00ecm hi\u1ec3u c\u00e1ch s\u1eed d\u1ee5ng m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh, nh\u01b0ng v\u1ea5n \u0111\u1ec1 l\u00e0 l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u1ea1o ra n\u00f3.</p> <p>C\u00f3 hai gi\u1ea3i ph\u00e1p. C\u00e1ch th\u1ee9 nh\u1ea5t l\u00e0 h\u1ecfi chuy\u00ean gia (v\u00ed d\u1ee5 nh\u01b0 m\u1ed9t nh\u00e0 nh\u00e2n ch\u1ee7ng h\u1ecdc v\u1edbi b\u00e0i to\u00e1n ph\u00e2n bi\u1ec7t ch\u1ee7ng lo\u1ea1i c\u1ee7a con v\u1eadt). Nghe c\u00f3 v\u1ebb h\u1ea5p d\u1eabn, nh\u01b0ng kh\u00f4ng ph\u1ea3i khi n\u00e0o b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 ti\u1ebfp c\u1eadn \u0111\u01b0\u1ee3c v\u1edbi chuy\u00ean gia trong b\u00e0i to\u00e1n c\u1ee7a m\u00ecnh. H\u01a1n n\u1eefa, b\u1ea1n c\u00f3 th\u1ec3 s\u1ebd ng\u1ea1c nhi\u00ean r\u1eb1ng ngay c\u1ea3 nh\u1eefng chuy\u00ean gia gi\u1ecfi nh\u1ea5t c\u0169ng g\u1eb7p kh\u00f3 kh\u0103n trong vi\u1ec7c vi\u1ebft ra nh\u1eefng ki\u1ebfn th\u1ee9c c\u1ee7a m\u00ecnh. Ngay c\u1ea3 khi b\u1ea1n t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t chuy\u00ean gia c\u00f3 kh\u1ea3 n\u0103ng \u0111\u00f3 th\u00ec ch\u1eafc ch\u1eafn s\u1ebd c\u00f3 nh\u1eefng th\u1ee9 m\u00e0 h\u1ecd kh\u00f4ng bi\u1ebft t\u1edbi. V\u00ed d\u1ee5, nh\u00e0 nh\u00e2n ch\u1ee7ng h\u1ecdc c\u1ee7a ch\u00fang ta c\u00f3 th\u1ec3 qu\u00ean m\u1ea5t r\u1eb1ng con \u0111\u00e0 \u0111i\u1ec3u c\u00f3 th\u1ec3 nh\u1ecf h\u01a1n 50kg.</p> <p>Thay v\u00ec s\u1eed d\u1ee5ng chuy\u00ean gia, c\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u s\u1eed d\u1ee5ng ph\u01b0\u01a1ng \u00e1n th\u1ee9 hai: t\u1ea1o ra m\u1ed9t thu\u1eadt to\u00e1n t\u1ef1 sinh c\u00e2y quy\u1ebft \u0111\u1ecbnh. \u0110i\u1ec1u ki\u1ec7n duy nh\u1ea5t l\u00e0 ph\u1ea3i c\u00f3 v\u00e0i v\u00ed d\u1ee5 \u0111\u1ec3 m\u00e1y t\u00ednh c\u00f3 th\u1ec3 tham chi\u1ebfu. Trong Iris dataset, nh\u1eefng v\u00ed d\u1ee5 n\u00e0y ch\u00ednh l\u00e0 nh\u1eefng b\u00f4ng hoa m\u00e0 ch\u00fang ta \u0111\u00e3 bi\u1ebft ch\u1ee7ng lo\u1ea1i.</p> <p>\u0110\u1ec3 t\u1ea1o ra m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh, thu\u1eadt to\u00e1n Random Forest lu\u00f4n b\u1eaft \u0111\u1ea7u b\u1eb1ng m\u1ed9t c\u00e2y r\u1ed7ng. M\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh r\u1ed7ng ch\u1ec9 c\u00f3 m\u1ed9t \u00f4 Start ch\u1ec9 th\u1eb3ng \u0111\u1ebfn c\u00e2u tr\u1ea3 l\u1eddi (\u00f4 xanh l\u00e1). Ti\u1ebfp theo, thu\u1eadt to\u00e1n s\u1ebd t\u00ecm c\u00e2u h\u1ecfi \u0111\u1ea7u ti\u00ean v\u00e0 b\u1eaft \u0111\u1ea7u x\u00e2y d\u1ef1ng c\u00e2y quy\u1ebft \u0111\u1ecbnh (trong v\u00ed d\u1ee5 tr\u01b0\u1edbc, c\u00e2u h\u1ecfi \u0111\u00f3 l\u00e0 \"N\u00f3 c\u00f3 l\u00f4ng kh\u00f4ng?\"). M\u1ed7i l\u1ea7n thu\u1eadt to\u00e1n t\u00ecm \u0111\u01b0\u1ee3c th\u00eam m\u1ed9t c\u00e2u h\u1ecfi, n\u00f3 t\u1ea1o hai nh\u00e1nh tr\u00ean c\u00e2y quy\u1ebft \u0111\u1ecbnh. Khi kh\u00f4ng c\u00f2n c\u00e2u h\u1ecfi n\u00e0o n\u1eefa, thu\u1eadt to\u00e1n d\u1eebng l\u1ea1i v\u00e0 ch\u00fang ta c\u00f3 m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh ho\u00e0n ch\u1ec9nh.</p> <p>L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm ra nh\u1eefng c\u00e2u h\u1ecfi t\u1ed1t nh\u1ea5t cho c\u00e2y quy\u1ebft \u0111\u1ecbnh? \u0110\u00e2y l\u00e0 m\u1ed9t b\u01b0\u1edbc kh\u00e1 ph\u1ee9c t\u1ea1p nh\u01b0ng \u00fd t\u01b0\u1edfng \u0111\u1eb1ng sau n\u00f3 t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u01a1n gi\u1ea3n: \u1ede th\u1eddi \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u, thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta ch\u01b0a bi\u1ebft ph\u00e2n bi\u1ec7t c\u00e1c ch\u1ee7ng lo\u1ea1i c\u1ee7a c\u00e1c con v\u1eadt. N\u00f3i c\u00e1ch kh\u00e1c, t\u1ea5t c\u1ea3 c\u00e1c con v\u1eadt \u0111\u01b0\u1ee3c cho chung v\u00e0o m\u1ed9t \"c\u00e1i t\u00fai\". \u0110\u1ec3 t\u00ecm ra c\u00e2u h\u1ecfi t\u1ed1t nh\u1ea5t, thu\u1eadt to\u00e1n th\u1eed \u0111\u01b0a ra t\u1ea5t c\u1ea3 c\u00e1c c\u00e2u h\u1ecfi c\u00f3 th\u1ec3 (c\u00f3 khi l\u00e0 h\u00e0ng tri\u1ec7u c\u00e2u h\u1ecfi). V\u00ed d\u1ee5: \"N\u00f3 c\u00f3 bao nhi\u00eau ch\u00e2n?\", \"N\u00f3 c\u00f3 \u0111u\u00f4i kh\u00f4ng?\",... Sau \u0111\u00f3, v\u1edbi m\u1ed7i c\u00e2u h\u1ecfi, thu\u1eadt to\u00e1n s\u1ebd \u0111\u00e1nh gi\u00e1 m\u1ee9c \u0111\u1ed9 hi\u1ec7u qu\u1ea3 m\u00e0 c\u00e2u h\u1ecfi n\u00e0y gi\u00fap ph\u00e2n bi\u1ec7t c\u00e1c ch\u1ee7ng lo\u1ea1i, hay c\u00e1c class. C\u00e2u h\u1ecfi \u0111\u01b0\u1ee3c ch\u1ecdn kh\u00f4ng c\u1ea7n thi\u1ebft ph\u1ea3i ho\u00e0n h\u1ea3o, nh\u01b0ng n\u00f3 ph\u1ea3i t\u1ed1t h\u01a1n nh\u1eefng c\u00e2u h\u1ecfi kh\u00e1c. \u0110\u1ec3 t\u00ednh to\u00e1n m\u1ee9c \u0111\u1ed9 hi\u1ec7u qu\u1ea3 c\u1ee7a c\u00e2u h\u1ecfi, ch\u00fang ta s\u1eed d\u1ee5ng m\u1ed9t \u0111\u1ed9 \u0111o c\u00f3 t\u00ean l\u00e0 information gain. Ch\u00fang ta s\u1ebd kh\u00f4ng b\u00e0n chi ti\u1ebft v\u1ec1 \u0111\u1ed9 \u0111o n\u00e0y, c\u00f3 th\u1ec3 hi\u1ec3u n\u00f4m na n\u00f3 nh\u01b0 m\u1ed9t c\u00e1ch \u0111\u1ec3 \"cho \u0111i\u1ec3m\" c\u00e1c c\u00e2u h\u1ecfi. C\u00e2u h\u1ecfi v\u1edbi information gain l\u1edbn nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c ch\u1ecdn nh\u01b0 l\u00e0 c\u00e2u h\u1ecfi t\u1ed1t nh\u1ea5t \u0111\u1ec3 x\u00e2y d\u1ef1ng c\u00e2y quy\u1ebft \u0111\u1ecbnh.</p> <p>H\u00ecnh \u1ea3nh ph\u00eda d\u01b0\u1edbi minh ho\u1ea1 4 b\u01b0\u1edbc \u0111\u1ec3 t\u1ea1o m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh \u0111\u01a1n gi\u1ea3n. Qu\u00e1 tr\u00ecnh n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i cho t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y.</p> <p></p> <p>Sau khi thu\u1eadt to\u00e1n x\u00e2y d\u1ef1ng xong c\u00e1c c\u00e2y quy\u1ebft \u0111\u1ecbnh, nh\u1eefng c\u00e2y n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi (hay ph\u00e2n lo\u1ea1i). Trong b\u00e0i to\u00e1n v\u1ec1 hoa di\u00ean v\u0129, thu\u1eadt to\u00e1n s\u1ebd tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi: \"Ch\u1ee7ng lo\u1ea1i c\u1ee7a b\u00f4ng hoa b\u00ed \u1ea9n l\u00e0 g\u00ec?\".</p> <p>N\u1ebfu b\u1ea1n theo d\u00f5i s\u00e1t sao b\u00e0i vi\u1ebft n\u00e0y, c\u00f3 th\u1ec3 b\u1ea1n s\u1ebd th\u1ea5y m\u1ed9t ch\u00fat m\u00e2u thu\u1eabn: ch\u00fang t\u00f4i n\u00f3i v\u1edbi b\u1ea1n r\u1eb1ng thu\u1eadt to\u00e1n Random Forest x\u00e2y d\u1ef1ng nhi\u1ec1u c\u00e2y quy\u1ebft \u0111\u1ecbnh. Tuy nhi\u00ean, ch\u00fang t\u00f4i m\u1edbi ch\u1ec9 gi\u1ea3i th\u00edch c\u00e1ch d\u1ef1ng m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh m\u00e0 th\u00f4i.</p> <p>Random Forest coi m\u1ed7i c\u00e2y quy\u1ebft \u0111\u1ecbnh nh\u01b0 m\u1ed9t c\u1eed tri b\u1ecf phi\u1ebfu \u0111\u1ed9c l\u1eadp (nh\u01b0 m\u1ed9t cu\u1ed9c b\u1ea7u c\u1eed th\u1ef1c s\u1ef1). \u1ede cu\u1ed1i cu\u1ed9c b\u1ea7u c\u1eed, c\u00e2u tr\u1ea3 l\u1eddi nh\u1eadn \u0111\u01b0\u1ee3c nhi\u1ec1u b\u1ea7u ch\u1ecdn nh\u1ea5t t\u1eeb c\u00e1c c\u00e2y quy\u1ebft \u0111\u1ecbnh s\u1ebd \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn.</p> <p>Tuy nhi\u00ean, v\u1eabn c\u00f2n m\u1ed9t v\u1ea5n \u0111\u1ec1: N\u1ebfu nh\u01b0 t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y \u0111\u01b0\u1ee3c d\u1ef1ng theo c\u00f9ng m\u1ed9t c\u00e1ch, ch\u00fang s\u1ebd cho nh\u1eefng c\u00e2u tr\u1ea3 l\u1eddi gi\u1ed1ng nhau. Nh\u01b0 v\u1eady ch\u1eb3ng kh\u00e1c g\u00ec ch\u00fang ta ch\u1ec9 s\u1eed d\u1ee5ng m\u1ed9t c\u00e2y quy\u1ebft \u0111\u1ecbnh duy nh\u1ea5t c\u1ea3. \u1ede \u0111\u00e2y, Random Forest c\u00f3 m\u1ed9t c\u00e1ch l\u00e0m r\u1ea5t hay: \u0110\u1ec3 ch\u1eafc ch\u1eafn r\u1eb1ng kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y quy\u1ebft \u0111\u1ecbnh cho c\u00f9ng c\u00e2u tr\u1ea3 l\u1eddi, thu\u1eadt to\u00e1n Random Forest ch\u1ecdn ng\u1eabu nhi\u00ean c\u00e1c quan s\u00e1t (observations). Ch\u00ednh x\u00e1c h\u01a1n, Random Forest s\u1ebd xo\u00e1 m\u1ed9t s\u1ed1 quan s\u00e1t v\u00e0 l\u1eb7p l\u1ea1i m\u1ed9t s\u1ed1 kh\u00e1c m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean. X\u00e9t to\u00e0n c\u1ee5c, nh\u1eefng quan s\u00e1t n\u00e0y v\u1eabn r\u1ea5t g\u1ea7n v\u1edbi t\u1eadp c\u00e1c quan s\u00e1t ban \u0111\u1ea7u, nh\u01b0ng nh\u1eefng thay \u0111\u1ed5i nh\u1ecf s\u1ebd \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i c\u00e2y quy\u1ebft \u0111\u1ecbnh s\u1ebd c\u00f3 m\u1ed9t ch\u00fat kh\u00e1c bi\u1ec7t. Qu\u00e1 tr\u00ecnh n\u00e0y g\u1ecdi l\u00e0 bootstrapping</p> <p>Th\u00eam v\u00e0o \u0111\u00f3, \u0111\u1ec3 th\u1ef1c s\u1ef1 ch\u1eafc ch\u1eafn c\u00e1c c\u00e2y quy\u1ebft \u0111\u1ecbnh l\u00e0 kh\u00e1c nhau, thu\u1eadt to\u00e1n Random Forest s\u1ebd ng\u1eabu nhi\u00ean b\u1ecf qua m\u1ed9t s\u1ed1 c\u00e2u h\u1ecfi khi x\u00e2y d\u1ef1ng c\u00e2y quy\u1ebft \u0111\u1ecbnh. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, n\u1ebfu c\u00e2u h\u1ecfi t\u1ed1t nh\u1ea5t kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ecdn, m\u1ed9t c\u00e2u h\u1ecfi k\u1ebf ti\u1ebfp s\u1ebd \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn \u0111\u1ec3 d\u1ef1ng c\u00e2y. Qu\u00e1 tr\u00ecnh n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 attribute sampling</p> <p>Ch\u1eafc r\u1eb1ng c\u00e1c b\u1ea1n r\u1ea5t th\u1eafc m\u1eafc t\u1ea1i sao ng\u01b0\u1eddi ta l\u1ea1i t\u1ea1o ra m\u1ed9t thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p nh\u01b0 v\u1eady: ng\u1eabu nhi\u00ean thay \u0111\u1ed5i c\u00e1c quan s\u00e1t v\u00e0 b\u1ecf qua m\u1ed9t s\u1ed1 c\u00e2u h\u1ecfi. C\u00e2u tr\u1ea3 l\u1eddi r\u1ea5t \u0111\u01a1n gi\u1ea3n: C\u00f3 th\u1ec3 c\u00e1c m\u1eabu th\u1eed m\u00e0 ch\u00fang ta \u0111ang s\u1eed d\u1ee5ng ch\u01b0a ho\u00e0n h\u1ea3o. V\u00ed d\u1ee5, c\u00f3 th\u1ec3 m\u1eabu th\u1eed c\u1ee7a ch\u00fang ta ch\u1ec9 c\u00f3 nh\u1eefng con m\u00e8o c\u00f3 l\u00f4ng \u0111u\u00f4i. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y nh\u1eefng con m\u00e8o thu\u1ed9c lo\u00e0i sphynx (m\u00e8o kh\u00f4ng l\u00f4ng) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i l\u00e0 con chu\u1ed9t. Tuy nhi\u00ean, n\u1ebfu c\u00e2u h\u1ecfi v\u1ec1 \u0111u\u00f4i kh\u00f4ng \u0111\u01b0\u1ee3c h\u1ecfi (b\u1edfi v\u00ec s\u1ef1 thay \u0111\u1ed5i ng\u1eabu nhi\u00ean), thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e2u h\u1ecfi c\u00e1c c\u00e2u h\u1ecfi kh\u00e1c (v\u00ed d\u1ee5: Con v\u1eadt \u0111\u00f3 c\u00f3 k\u00edch th\u01b0\u1edbc nh\u01b0 th\u1ebf n\u00e0o?). Vi\u1ec7c c\u00f3 nhi\u1ec1u c\u00e2u h\u1ecfi \u0111a d\u1ea1ng (c\u00f3 th\u1ec3 kh\u00f4ng ho\u00e0n h\u1ea3o) l\u00e0 m\u1ed9t \u00fd t\u01b0\u1edfng kh\u00f4ng t\u1ed3i: n\u00f3 c\u00f3 th\u1ec3 l\u00e0 c\u1ee9u tinh khi thu\u1eadt to\u00e1n tham chi\u1ebfu \u0111\u1ebfn m\u1ed9t quan s\u00e1t m\u00e0 n\u00f3 ch\u01b0a t\u1eebng th\u1ea5y tr\u01b0\u1edbc \u0111\u00e2y.</p> <p>V\u00e0 \u0111\u00f3 l\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng g\u00ec b\u1ea1n c\u1ea7n bi\u1ebft v\u1ec1 Random Forest.</p> <p>\u0110\u00e2y l\u00e0 b\u00e0i vi\u1ebft cu\u1ed1i c\u00f9ng trong chu\u1ed7i ba b\u00e0i vi\u1ebft v\u1ec1 Classification trong Machine Learning. Hi v\u1ecdng b\u1ea1n \u0111\u00e3 c\u00f3 \u0111\u01b0\u1ee3c nh\u1eefng hi\u1ec3u bi\u1ebft ban \u0111\u1ea7u v\u1ec1 b\u00e0i to\u00e1n ph\u00e2n lo\u1ea1i, v\u00e0 quen thu\u1ed9c v\u1edbi c\u00e1c kh\u00e1i ni\u1ec7m quan s\u00e1t (observations) hay thu\u1ed9c t\u00ednh (attributes). Ch\u00fang t\u00f4i c\u0169ng \u0111\u00e3 tr\u00ecnh b\u00e0y hai thu\u1eadt to\u00e1n ph\u00e2n lo\u1ea1i n\u1ed5i ti\u1ebfng, k-nearest neighbors v\u00e0 Random Forest, hi v\u1ecdng b\u1ea1n \u0111\u00e3 hi\u1ec3u \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o v\u1ec1 c\u00e1ch th\u1ee9c m\u00e0 c\u00e1c thu\u1eadt to\u00e1n n\u00e0y ho\u1ea1t \u0111\u1ed9ng.</p> <p>H\u1eb9n g\u1eb7p l\u1ea1i c\u00e1c b\u1ea1n \u1edf trong nh\u1eefng b\u00e0i vi\u1ebft t\u1edbi!</p>"},{"location":"translate/quora/mobius-function/","title":"H\u00e0m Mobius","text":"<p>Ngu\u1ed3n: Quora</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n m\u1ed9t ch\u1ee7 \u0111\u1ec1 v\u00f4 c\u00f9ng th\u00fa v\u1ecb trong s\u1ed1 h\u1ecdc - H\u00e0m ngh\u1ecbch \u0111\u1ea3o Mobius, c\u0169ng nh\u01b0 c\u00e1ch \u1ee9ng d\u1ee5ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n.</p> <p>M\u1ed9t l\u1eddi khuy\u00ean d\u00e0nh cho b\u1ea1n \u0111\u1ecdc l\u00e0 c\u00e1c b\u1ea1n n\u00ean t\u1ef1 ch\u1ee9ng minh nh\u1eefng c\u00f4ng th\u1ee9c \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n b\u1ea3n ch\u1ea5t b\u00e0i to\u00e1n.</p>"},{"location":"translate/quora/mobius-function/#cac-inh-nghia","title":"C\u00e1c \u0111\u1ecbnh ngh\u0129a","text":"<p>Tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u, c\u00e1c b\u1ea1n h\u00e3y ghi nh\u1edb m\u1ed9t s\u1ed1 \u0111\u1ecbnh ngh\u0129a sau \u0111\u00e2y \u0111\u1ec3 vi\u1ec7c ti\u1ebfp thu nh\u1eefng ki\u1ebfn th\u1ee9c \u1edf d\u01b0\u1edbi \u0111\u01b0\u1ee3c d\u1ec5 d\u00e0ng h\u01a1n.</p> <p>M\u1ed9t h\u00e0m \\(f(n): N \\rightarrow C\\) \u0111\u01b0\u1ee3c coi l\u00e0 h\u00e0m nh\u00e2n t\u00ednh (Multiplicative Function)  n\u1ebfu v\u1edbi m\u1ecdi c\u1eb7p s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau \\(n, m \\in N\\) ta c\u00f3 \\(f(mn)=f(m)f(n)\\)</p> <p>M\u1ed9t s\u1ed1 \\(n\\) ph\u00e2n t\u00edch ra th\u1eeba s\u1ed1 nguy\u00ean t\u1ed1 s\u1ebd c\u00f3 d\u1ea1ng \\(n={p_1}^{a_1}\\*{p_2}^{a_2}\\*{p_3}^{a_3}\\*...\\*{p_r}^{a_r}\\), v\u1edbi \\(p_i\\) l\u00e0 \u01b0\u1edbc nguy\u00ean t\u1ed1 c\u1ee7a \\(n\\).</p> <p>K\u00fd hi\u1ec7u \\(a\\|b\\) c\u00f3 ngh\u0129a l\u00e0 \\(a\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(b\\), hay \\(b\\) chia h\u1ebft cho \\(a\\)</p> <p>H\u00e0m \u0111\u1ecbnh danh Dirichlet \\(e(n)\\) (Dirichlet identity function):</p> <ul> <li> <p>\\(e(n)=1\\) v\u1edbi \\(n=1\\)</p> </li> <li> <p>\\(e(n)=0\\) v\u1edbi \\(n &gt; 1\\)</p> </li> </ul> <p>\\(I(n)=1\\) v\u1edbi m\u1ecdi \\(n \\in N\\)</p> <p>\\(id(n)=n\\) v\u1edbi m\u1ecdi \\(n \\in N\\)</p> <p>H\u00e0m Mobius \\(\\mu(n)\\):</p> <ul> <li> <p>\\(\\mu(1)=1\\)</p> </li> <li> <p>\\(\\mu(n)=0\\) n\u1ebfu t\u1ed3n t\u1ea1i \\(a_i&gt;1\\)</p> </li> <li> <p>\\(\\mu(n)=(-1)^r\\) n\u1ebfu \\(n={p_1}\\*{p_2}\\*{p_3}\\*...\\*{p_r}\\), hay \\(a_i = 1\\) v\u1edbi m\u1ecdi \\(i\\)</p> </li> <li> <p>C\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng \\(\\mu(n)=\\sum_{d\\|n,d &lt; n}\\mu(d)\\) v\u1edbi \\(n&gt;1\\) v\u00e0 t\u00ednh \u0111\u01b0\u1ee3c \\(\\mu(n)\\) b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng S\u00e0ng:     <code>cpp mu[1] = 1; for (int i = 1; i &lt;= N; i++)     for (int j = 2*i; j &lt;= N; j += i)         mu[j] -= mu[i];</code></p> </li> </ul> <p>V\u1ee1i m\u1ed7i \\(f(n)\\), ta g\u1ecdi h\u00e0m t\u1ed5ng \\(S_f(n)\\) l\u00e0 t\u1ed5ng c\u00e1c \\(f(d)\\) v\u1edbi \\(d\\) l\u00e0 \u01b0\u1edbc c\u1ee7a \\(n\\): \\(S_f(n)=\\sum_{d\\|n}{f(d)}\\)</p> <p>Phi h\u00e0m Euler \\(\\phi(n)\\) (Euler totient function): s\u1ed1 l\u01b0\u1ee3ng c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(n\\) v\u00e0 nguy\u00ean t\u1ed1 c\u00f9ng nhau v\u1edbi \\(n\\) (hay s\u1ed1 l\u01b0\u1ee3ng c\u00e1c s\u1ed1 \\(d: 1 \\leq d \\leq n,gcd(d,n)=1\\)). C\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng s\u00e0ng \u0111\u1ec3 t\u00ednh \\(phi(n)\\): <pre><code>for (int i = 1; i &lt;= N; i++) phi[i] = i;\nfor (int i = 2; i &lt;= N; i++)\n    if (phi[i] == i)\n       for (int j = i; j &lt;= N; j += i) \n           phi[j] -= phi[j]/i;\n</code></pre></p>"},{"location":"translate/quora/mobius-function/#cong-thuc-nghich-ao-mobius-mobius-inversion-formula","title":"C\u00f4ng th\u1ee9c ngh\u1ecbch \u0111\u1ea3o Mobius (M\u00f6bius inversion formula)","text":"<p>Ta \u0111\u1ecbnh ngh\u0129a Dirichlet Convolution l\u00e0 m\u1ed9t ph\u00e9p to\u00e1n v\u1edbi 2 h\u00e0m \\(f(n)\\) v\u00e0 \\(g(n)\\):</p> <p>\\(f \\circ g(n)=\\sum_{d_1\\*d_2=n}{f(d_1)\\*g(d_2)}\\)</p> <p>hay</p> <p>\\(f \\circ g(n)=\\sum_{d\\|n}{f(d)\\*g(n/d)}\\)</p> <p>C\u00f3 th\u1ec5 d\u1ec5 d\u00e0ng ch\u1ee9ng minh ph\u00e9p to\u00e1n n\u00e0y c\u00f3 t\u00ednh giao ho\u00e1n v\u00e0 k\u1ebft h\u1ee3p:</p> <p>\\(f\\circ g(n)=g\\circ f(n)\\)</p> <p>\\((f\\circ g)\\circ h(n)=f\\circ(g\\circ h)(n)\\)</p> <p>Ta c\u00f3 nh\u1eadn x\u00e9t r\u1eb1ng:</p> <p>\\(S_f(n)=\\sum_{d\\|n}{f(d)}=\\sum_{d\\|n}{f(d)\\*I(n/d)}=f\\circ I(n)\\)</p> <p>\\(S_{\\phi}(n)=\\sum_{d\\|n}{\\phi(d)}=id(n)\\)</p> <p>\\(S_{\\mu}(n)=\\sum_{d\\|n}{\\mu(d)}=I\\circ \\mu (n)=\\mu \\circ I(n)= e(n)\\)</p> <p>\\(f \\circ e(n)=\\sum_{d\\|n}{f(n/d)\\*e(d)}=f(n)\\)</p> <p>T\u1eeb \u0111\u00f3 suy ra:</p> <p>\\(S_f \\circ \\mu(n)=(f \\circ I)\\circ \\mu (n)=f\\circ (I\\circ\\mu)(n)=f\\circ e(n)=f(n)\\)</p> <p>hay</p> <p>\\(f(n)=\\sum_{d\\|n}{S_f(d)\\*\\mu (n/d)}\\) - \u0111\u00e2y g\u1ecdi l\u00e0 C\u00f4ng th\u1ee9c ngh\u1ecbch \u0111\u1ea3o Mobius</p>"},{"location":"translate/quora/mobius-function/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"translate/quora/mobius-function/#gcdex","title":"GCDEX","text":"<p>\u0110\u1ec1 b\u00e0i</p> <p>T\u00ednh \\(G=\\sum_{i=1}^{n} \\sum_{j=i+1}^{n}gcd(i,j)\\) (1).</p> <p>D\u1ec5 th\u1ea5y c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u01a1n gi\u1ea3n nh\u1ea5t cho b\u00e0i to\u00e1n n\u00e0y l\u00e0 duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p \\((i,j)\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(k\\*n^2)\\), v\u1edbi \\(k\\) l\u00e0 s\u1ed1 ph\u00e9p to\u00e1n t\u1ed1i \u0111a khi t\u00ednh \\(gcd\\). Ch\u00fang ta s\u1ebd \u0111i t\u00ecm m\u1ed9t l\u1eddi gi\u1ea3i t\u1ed1i \u01b0u h\u01a1n s\u1eed d\u1ee5ng nh\u1eefng ki\u1ebfn th\u1ee9c \u1edf tr\u00ean.</p> <ol> <li> <p>Nh\u1eadn x\u00e9t r\u1eb1ng \\(1 \\leq gcd(i,j) \\leq n\\) v\u1edbi m\u1ecdi \\(1 \\leq i &lt; j \\leq n\\).</p> <p>Nh\u01b0 v\u1eady, bi\u1ec3u th\u1ee9c tr\u00ean c\u00f3 th\u1ec3 vi\u1ebft l\u1ea1i th\u00e0nh</p> <p>\\(G=\\sum_{g=1}^{n}g\\*cnt[g]\\) (2). V\u1edbi \\(cnt[g]\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u1eb7p \\((i,j)\\) c\u00f3 \\(gcd\\) b\u1eb1ng \\(g\\).</p> <p>C\u00f4ng vi\u1ec7c t\u00ednh \\(cnt[g]\\) th\u1eadt s\u1ef1 kh\u00f4ng h\u1ec1 \u0111\u01a1n gi\u1ea3n. Ta \u0111\u1ec3 \u00fd r\u1eb1ng \\(gcd(i,j)=g \\Leftrightarrow gcd(i/g,j/g)=1\\), hay n\u00f3i c\u00e1ch kh\u00e1c, \\(i/g\\) v\u00e0 \\(j/g\\) ph\u1ea3i l\u00e0 2 s\u1ed1 nguy\u00ean t\u1ed1 c\u00f9ng nhau.</p> </li> <li> <p>Ta vi\u1ebft l\u1ea1i (2) th\u00e0nh</p> <p>\\(G=\\sum_{g=1}^{n}h(g)\\*cnt[g]\\) v\u1edbi \\(h(g)=g\\)</p> </li> <li> <p>Gi\u1edd ch\u00fang ta s\u1ebd t\u00ecm c\u00e1ch ph\u00e2n t\u00edch \\(h(n)\\) th\u00e0nh h\u00e0m t\u1ed5ng c\u1ee7a h\u00e0m \\(f(n)\\) n\u00e0o \u0111\u00f3, t\u1ee9c l\u00e0 \\(h(n)=S_f(n)=\\sum_{d\\|n}f(d)\\).</p> <p>\u1ee8ng d\u1ee5ng c\u00f4ng th\u1ee9c ngh\u1ecbch \u0111\u1ea3o Mobius, b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \\(f(n)=\\sum_{d\\|n}{h(d)\\*\\mu (n/d)}\\). M\u1ed9t k\u1ebft qu\u1ea3 r\u1ea5t \u0111\u1eb9p trong b\u00e0i to\u00e1n n\u00e0y l\u00e0 \\(f(n)=\\phi(n)\\), vi\u1ec7c ch\u1ee9ng minh m\u00ecnh xin nh\u01b0\u1eddng b\u1ea1n \u0111\u1ecdc.</p> <p>Khi \u0111\u00e3 bi\u1ebft \u0111\u01b0\u1ee3c \\(h(n)\\) v\u00e0 \\(\\mu(n)\\), ta c\u00f3 th\u1ec3 t\u00ednh \\(f(n)\\) b\u1eb1ng s\u00e0ng nh\u01b0 sau:</p> <p><code>cpp for (int i = 1; i &lt;= N; i++) for (int j = i; j &lt;= N; j += i)     f[j] += h[i] * mu[j/i];</code></p> <p>\u0110o\u1ea1n code tr\u00ean ch\u1ea1y trong th\u1eddi gian \\(O(NlogN)\\) v\u00ec v\u1edbi m\u1ed7i \\(i\\) v\u00f2ng l\u1eb7p trong s\u1ebd ch\u1ea1y \\(N/i\\) l\u1ea7n (s\u1ed1 b\u1ed9i c\u1ee7a \\(i\\)), v\u00e0 \\(O(\\sum_{i=1}^{N}N/i)=O(NlogN)\\).</p> </li> <li> <p>Vi\u1ebft l\u1ea1i (2) m\u1ed9t l\u1ea7n n\u1eefa ta \u0111\u01b0\u1ee3c:</p> <p>\\(G=\\sum_{g=1}^{n}(\\sum_{d\\|g}f(d))\\*cnt[g]\\) (3)</p> <p>\\(\\Leftrightarrow G=\\sum_{d=1}^{n}f(d)\\*(\\sum_{g:d\\|g}cnt[g])\\) (4)</p> </li> <li> <p>\u0110\u1eb7t \\(cnt2[d]=\\sum_{g:d\\|g}cnt[g]\\). H\u00e0m n\u00e0y c\u00f3 \u00fd ngh\u0129a l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u1eb7p \\((i,j)\\) c\u00f3 \\(gcd\\) l\u00e0 b\u1ed9i c\u1ee7a \\(d\\). \u0110\u1ebfn \u0111\u00e2y m\u1ecdi vi\u1ec7c \u0111\u00e3 \u0111\u01a1n gi\u1ea3n h\u01a1n r\u1ea5t nhi\u1ec1u. C\u00e1c b\u1ea1n ch\u1ec9 c\u1ea7n t\u00ecm s\u1ed1 l\u01b0\u1ee3ng c\u1eb7p \\((i,j)\\) m\u00e0 \\(i\\) v\u00e0 \\(j\\) \u0111\u1ec1u l\u00e0 b\u1ed9i c\u1ee7a \\(d\\). C\u00f3 \\(n/d\\) b\u1ed9i c\u1ee7a \\(d\\), n\u00ean s\u1ebd c\u00f3 \\(n/d\\*(n/d-1)/2\\) c\u1eb7p.</p> <p>V\u1eady (4) tr\u1edf th\u00e0nh \\(G=\\sum_{d=1}^{n}f(d)\\*n/d\\*(n/d-1)/2\\).</p> <p>D\u1ec5 d\u00e0ng ch\u1ee9ng minh l\u00e0 ch\u1ec9 c\u00f3 \\(\\sqrt n\\) gi\u00e1 tr\u1ecb \\(n/d\\) n\u00ean ta c\u00f3 th\u1ec3 duy\u1ec7t t\u1eebng gi\u00e1 tr\u1ecb c\u1ee7a \\(n/d\\) v\u00e0 c\u1ed9ng \\(n/d\\*(n/d-1)/2\\*\\sum_{k:n/k=n/d}f(k)\\) v\u00e0o k\u1ebft qu\u1ea3. B\u1eb1ng t\u1ed5ng ti\u1ec1n t\u1ed1 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 truy v\u1ea5n \u0111\u01b0\u1ee3c \\(\\sum_{k:n/k=n/d}f(k)\\) trong \\(O(1)\\) v\u00e0 \\(G\\) trong \\(O(\\sqrt n)\\):</p> <p><code>cpp for (int i = 1,j; i &lt;= n; i = j + 1) { j = n / (n/i); //v\u1ecb tr\u00ed j xa i nh\u1ea5t m\u00e0 n/i=n/j res += n/i*(n/i - 1)/2 * (Sf[j] - Sf[i-1]);//Sf[i]=f[1]+f[2]+f[3]+...+f[i] }</code></p> </li> </ol> <p>Nh\u01b0 v\u1eady thu\u1eadt to\u00e1n tr\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(NlogN+\\sqrt N \\*T)\\) v\u1edbi \\(T\\) l\u00e0 s\u1ed1 test.</p>"},{"location":"translate/quora/mobius-function/#bai-toan-tong-quat","title":"B\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t","text":"<p>B\u00e0i to\u00e1n t\u1ed5ng qu\u00e1t h\u01a1n c\u1ee7a b\u00e0i to\u00e1n tr\u00ean l\u00e0 t\u00ednh \\(G=\\sum_{i=1}^{n} \\sum_{j=i+1}^{n}h(gcd(i,j))\\) v\u1edbi \\(h\\) (n\u00ean) l\u00e0 m\u1ed9t h\u00e0m nh\u00e2n t\u00ednh. V\u00ed d\u1ee5 mu\u1ed1n t\u00ednh \\(G=\\sum_{i=1}^{n} \\sum_{j=i+1}^{n}gcd^3(i,j)\\) th\u00ec \\(h(n)=n^3\\).</p> <p>C\u00e1c b\u01b0\u1edbc t\u00ednh to\u00e1n g\u1ea7n nh\u01b0 gi\u1ed1ng v\u1edbi b\u00e0i to\u00e1n tr\u00ean.</p>"},{"location":"translate/quora/mobius-function/#coprime-triples","title":"Coprime Triples","text":"<p>\u0110\u1ec1 b\u00e0i</p> <p>Cho d\u00e3y s\u1ed1 \\(a_1,a_2,...,a_n\\). T\u00ecm s\u1ed1 b\u1ed9 ba \\((i,j,k)\\) (\\(1 \\leq i &lt; j &lt; k \\leq n\\)) c\u00f3 \\(gcd(a_i,a_j,a_k)=1\\). \\(n \\leq 10^5\\) v\u00e0 \\(a_i \\leq 10^6\\)</p> <p>Ta \u0111\u01b0a \u0111\u1ec1 b\u00e0i n\u00e0y v\u1ec1 b\u00e0i to\u00e1n: t\u00ednh \\(G=\\sum_{i=1}^{n}\\sum_{j=i+1}^{n}\\sum_{k=j+1}^{n}e(gcd(a_i,a_j,a_k))\\)</p> <ol> <li> <p>Vi\u1ebft l\u1ea1i bi\u1ec3u th\u1ee9c tr\u00ean: </p> <p>\\(G=\\sum_{g}^{maxA}h(g)*cnt[g]\\), \u1edf \u0111\u00e2y \\(cnt[g]\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng b\u1ed9 ba \\((i,j,k)\\) c\u00f3 \\(gcd(a_i,a_j,a_k)=1\\). \\(maxA=10^6\\)</p> </li> <li> <p>T\u00ecm \\(f(n)\\) b\u1eb1ng c\u00f4ng th\u1ee9c ngh\u1ecbch \u0111\u1ea3o Mobius.</p> <p>\u1ede b\u00e0i to\u00e1n n\u00e0y \\(f(n)\\) ch\u00ednh b\u1eb1ng \\(\\mu(n)\\), vi\u1ec7c ch\u1ee9ng minh m\u00ecnh c\u0169ng xin nh\u01b0\u1eddng l\u1ea1i cho b\u1ea1n \u0111\u1ecdc.</p> <p>L\u00fac n\u00e0y \\(G=\\sum_{g=1}^{maxA}(\\sum_{d\\|g}f(d))*cnt[g]\\).</p> <p>\\(\\Leftrightarrow G=\\sum_{d=1}^{maxA}f(d)*cnt2[g]\\).</p> </li> <li> <p>T\u00ednh \\(cnt2[d]\\) l\u00e0 s\u1ed1 b\u1ed9 ba \\((i,j,k)\\) c\u00f3 \\(gcd(a_i,a_j,a_k)\\) l\u00e0 b\u1ed9i c\u1ee7a \\(d\\).</p> </li> <li> <p>Duy\u1ec7t l\u1ea1i \\(d\\) v\u00e0 t\u00ednh \\(G\\).</p> </li> </ol>"},{"location":"translate/quora/mobius-function/#mot-so-bai-luyen-tap","title":"M\u1ed9t s\u1ed1 b\u00e0i luy\u1ec7n t\u1eadp","text":"<ul> <li> <p>https://www.codechef.com/JULY10/problems/LCM/</p> </li> <li> <p>http://www.codechef.com/COOK29/problems/EXGCD</p> </li> <li> <p>https://www.hackerrank.com/challenges/hyperrectangle-gcd</p> </li> <li> <p>http://www.spoj.com/problems/LCMSUM/</p> </li> <li> <p>http://www.spoj.com/problems/GCDEX2/</p> </li> </ul> <p>N\u1ebfu c\u00e1c b\u1ea1n mu\u1ed1n t\u00ecm hi\u1ec3u s\u00e2u v\u00e0 \u0111\u1ea7y \u0111\u1ee7 h\u01a1n v\u1ec1 c\u00e1c b\u00e0i to\u00e1n li\u00ean quan th\u00ec c\u00f3 th\u1ec3 tham kh\u1ea3o http://mathcircle.berkeley.edu/original/Multiplicative.pdf</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n","text":"<p>Ngu\u1ed3n b\u00e0i: Topcoder</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft n\u00e0y t\u00f4i s\u1ebd gi\u1edbi thi\u1ec7u t\u1edbi c\u00e1c b\u1ea1n v\u1ec1 ch\u1ee7 \u0111\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n. Tr\u01b0\u1edbc khi \u0111i v\u00e0o \u0111\u1ecbnh ngh\u0129a ch\u00ednh x\u00e1c c\u1ee7a c\u00e1c kh\u00e1i ni\u1ec7m, b\u00e0i vi\u1ebft s\u1ebd gi\u1ea3i th\u00edch c\u00e1c l\u00fd lu\u1eadn \u0111\u1eb1ng sau nh\u1eefng kh\u00e1i ni\u1ec7m \u0111\u00f3. T\u00f4i cho r\u1eb1ng vi\u1ec7c hi\u1ec3u c\u00e1c l\u00fd lu\u1eadn n\u00e0y c\u00f3 th\u1ec3 c\u00f2n quan tr\u1ecdng h\u01a1n b\u1ea3n th\u00e2n \u0111\u1ecbnh ngh\u0129a c\u1ee7a c\u00e1c kh\u00e1i ni\u1ec7m.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#tam-quan-trong-cua-nhung-ly-luan","title":"T\u1ea7m quan tr\u1ecdng c\u1ee7a nh\u1eefng l\u00fd lu\u1eadn","text":""},{"location":"translate/topcoder/Computational-Complexity-Section-1/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>Gi\u1ea3 s\u1eed b\u1ea1n \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng vi\u1ebft m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec3 x\u1eed l\u00fd m\u1ed9t t\u1eadp d\u1eef li\u1ec7u g\u1ed3m nhi\u1ec1u b\u1ea3n ghi m\u00e0 c\u00f4ng ty c\u1ee7a b\u1ea1n \u0111\u00e3 thu th\u1eadp. B\u1ea1n c\u00e0i \u0111\u1eb7t hai thu\u1eadt to\u00e1n v\u00e0 ki\u1ec3m tra ch\u00fang b\u1eb1ng m\u1ed9t v\u00e0i t\u1eadp d\u1eef li\u1ec7u kh\u00e1c nhau. Th\u1eddi gian ch\u1ea1y \u0111\u01b0\u1ee3c th\u1ed1ng k\u00ea trong b\u1ea3ng 1.</p> S\u1ed1 l\u01b0\u1ee3ng b\u1ea3n ghi 10 20 50 100 1000 5000 Thu\u1eadt to\u00e1n 1 0.00s 0.01s 0.05s 0.47s 23.92s 47min Thu\u1eadt to\u00e1n 2 0.05s 0.05s 0.06s 0.11s 0.78s 14.22s <p>B\u1ea3ng 1: Th\u1eddi gian ch\u1ea1y c\u1ee7a hai thu\u1eadt to\u00e1n 1, 2</p> <p>T\u1eeb b\u1ea3ng 1 ta c\u00f3 th\u1ec3 \u0111\u00e1nh gi\u00e1 m\u1ed9t c\u00e1ch kh\u00f4ng ch\u00ednh th\u1ee9c r\u1eb1ng thu\u1eadt to\u00e1n n\u00e0o t\u1ed1t h\u01a1n (v\u00ec th\u01b0\u1eddng l\u00e0 ta c\u00f3 th\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n ghi c\u1ea7n x\u1eed l\u00fd). V\u1edbi m\u1ed9t c\u00f4ng ty th\u00ec k\u1ebft lu\u1eadn d\u1ef1a tr\u00ean vi\u1ec7c ch\u1ea1y th\u1eed nh\u01b0 v\u1eady c\u00f3 th\u1ec3 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c. Nh\u01b0ng v\u1edbi ng\u01b0\u1eddi l\u1eadp tr\u00ecnh, n\u00f3 s\u1ebd t\u1ed1t h\u01a1n n\u1ebfu c\u00f3 th\u1ec3 \u0111\u00e1nh gi\u00e1 th\u1eddi gian ch\u1ea1y c\u1ee7a hai thu\u1eadt to\u00e1n tr\u01b0\u1edbc khi vi\u1ebft code v\u00e0 ch\u1ea1y th\u1eed - sau \u0111\u00f3 ch\u1ec9 c\u1ea7n c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n t\u1ed1t h\u01a1n.</p> <p>C\u00e1c k\u1ef3 thi l\u1eadp tr\u00ecnh c\u0169ng \u0111\u00f2i h\u1ecfi vi\u1ec7c \u0111\u00e1nh gi\u00e1 t\u01b0\u01a1ng t\u1ef1: k\u00edch c\u1ee1 c\u1ee7a t\u1eadp d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c cho tr\u01b0\u1edbc trong \u0111\u1ec1 b\u00e0i. Gi\u1ea3 s\u1eed ta \u0111\u00e3 ngh\u0129 ra \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n. C\u00e2u h\u1ecfi c\u1ea7n \u0111\u1eb7t ra tr\u01b0\u1edbc khi b\u1eaft tay v\u00e0o c\u00e0i \u0111\u1eb7t l\u00e0: thu\u1eadt to\u00e1n n\u00e0y c\u00f3 \u0111\u00e1ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t kh\u00f4ng? Li\u1ec7u n\u00f3 c\u00f3 th\u1ec3 ch\u1ea1y tr\u00ean b\u1ed9 test l\u1edbn nh\u1ea5t trong th\u1eddi gian cho ph\u00e9p kh\u00f4ng? N\u1ebfu ta c\u00f3 th\u1ec3 ngh\u0129 ra m\u1ed9t v\u00e0i thu\u1eadt to\u00e1n kh\u00e1c, n\u00ean ch\u1ecdn thu\u1eadt n\u00e0o \u0111\u1ec3 c\u00e0i \u0111\u1eb7t?</p> <p>C\u00e1c c\u00e2u h\u1ecfi tr\u00ean d\u1eabn t\u1edbi c\u00e2u h\u1ecfi c\u1ed1t l\u00f5i h\u01a1n: L\u00e0m sao \u0111\u1ec3 so s\u00e1nh hai thu\u1eadt to\u00e1n v\u1edbi nhau? Quay tr\u1edf l\u1ea1i v\u00ed d\u1ee5 1, ta c\u00f3 th\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng r\u1eb1ng khi s\u1ed1 b\u1ea3n ghi v\u01b0\u1ee3t qu\u00e1 1000, thu\u1eadt to\u00e1n 2 s\u1ebd ch\u1ea1y nhanh h\u01a1n nhi\u1ec1u l\u1ea7n thu\u1eadt to\u00e1n 1. N\u00f3i c\u00e1ch kh\u00e1c, x\u00e9t tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp d\u1eef li\u1ec7u c\u00f3 th\u1ec3, thu\u1eadt to\u00e1n 2 s\u1ebd ch\u1ea1y t\u1ed1t h\u01a1n trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p.</p> <p>C\u00f3 th\u1ec3 k\u1ebft lu\u1eadn \u0111\u01b0\u1ee3c r\u1eb1ng trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p - cho tr\u01b0\u1edbc 2 thu\u1eadt to\u00e1n, ho\u1eb7c l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n g\u1ea7n nh\u01b0 lu\u00f4n lu\u00f4n t\u1ed1t h\u01a1n, ho\u1eb7c l\u00e0 c\u1ea3 hai x\u1ea5p x\u1ec9 t\u1ed1t nh\u01b0 nhau. Nh\u01b0 v\u1eady, ch\u00fang ta s\u1ebd \u0111\u1ecbnh ngh\u0129a \u0111\u1ed9 t\u1ed1t c\u1ee7a thu\u1eadt to\u00e1n d\u1ef1a v\u00e0o \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 hi\u1ec7u qu\u1ea3 ch\u1ea1y tr\u00ean to\u00e0n b\u1ed9 t\u1eadp d\u1eef li\u1ec7u nh\u01b0 tr\u00ean. \u0110\u00e1nh gi\u00e1 n\u00e0y s\u1ebd l\u00e0 \u00fd t\u01b0\u1edfng ch\u00ednh \u0111\u1eb1ng sau c\u00e1c \u0111\u1ecbnh ngh\u0129a c\u1ee5 th\u1ec3 m\u00e0 ch\u00fang ta s\u1ebd \u0111\u1ec1 c\u1eadp v\u1ec1 sau.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#meo-gop-hai-thuat-toan","title":"M\u1eb9o g\u1ed9p hai thu\u1eadt to\u00e1n","text":"<p>N\u1ebfu \u0111\u1ed1i chi\u1ebfu v\u1edbi hai thu\u1eadt to\u00e1n v\u00ed d\u1ee5 1, kh\u00f4ng kh\u00f3 \u0111\u1ec3 th\u1ea5y r\u1eb1ng c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi th\u1eddi gian ch\u1ea1y t\u01b0\u01a1ng t\u1ef1 v\u1edbi ch\u00fang trong b\u1ea3ng 2</p> S\u1ed1 l\u01b0\u1ee3ng b\u1ea3n ghi 10 20 50 100 1000 5000 Thu\u1eadt to\u00e1n 3 $N$ 0.00s 0.01s 0.05s 0.11s 0.78s 14.22s <p>B\u1ea3ng 2: Th\u1eddi gian ch\u1ea1y c\u1ee7a thu\u1eadt to\u00e1n 3</p> <p>\u00dd t\u01b0\u1edfng c\u1ee7a thu\u00e2t to\u00e1n 3: n\u1ebfu s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n ghi nh\u1ecf th\u00ec ta \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n 1, ng\u01b0\u1ee3c l\u1ea1i \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n 2.</p> <p>\u00dd t\u01b0\u1edfng t\u01b0\u01a1ng t\u1ef1 th\u01b0\u1eddng \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng v\u00e0o th\u1ef1c t\u1ebf. M\u1ed9t v\u00ed d\u1ee5 l\u00e0 trong c\u00e1c h\u00e0m s\u1eafp x\u1ebfp <code>sort()</code> \u0111\u01b0\u1ee3c cung c\u1ea5p b\u1edfi th\u01b0 vi\u1ec7n c\u1ee7a c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh th\u01b0\u1eddng \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t theo thu\u1eadt to\u00e1n QuickSort v\u1edbi nhi\u1ec1u c\u1ea3i ti\u1ebfn, v\u00ed d\u1ee5:</p> <ul> <li>N\u1ebfu s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed qu\u00e1 nh\u1ecf, ch\u1ea1y thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp ch\u00e8n InsertSort (v\u00ec InsertSort ch\u1ea1y nhanh h\u01a1n v\u1edbi t\u1eadp d\u1eef li\u1ec7u k\u00edch th\u01b0\u1edbc nh\u1ecf).</li> <li>N\u1ebfu v\u1ecb tr\u00ed ph\u1ea7n t\u1eed ch\u1ed1t kh\u00f4ng t\u1ed1t, chuy\u1ec3n sang ch\u1ea1y thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp tr\u1ed9n MergeSort.</li> </ul>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#the-nao-la-o-hieu-qua-cua-thuat-toan","title":"Th\u1ebf n\u00e0o l\u00e0 \u0111\u1ed9 hi\u1ec7u qu\u1ea3 c\u1ee7a thu\u1eadt to\u00e1n?","text":""},{"location":"translate/topcoder/Computational-Complexity-Section-1/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>Gi\u1ea3 s\u1eed b\u1ea1n c\u00f3 \u0111o\u1ea1n m\u00e3 sau:</p> <pre><code>for (int i = 0; i &lt; N; i++)\n    for (int j = i + 1; j &lt; N; j++)\n        if (A[i] &gt; A[j])\n            swap(A[i], A[j]);\n</code></pre> <p>(\u0110\u00e2y th\u1ef1c ra l\u00e0 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t c\u1ee7a thu\u1eadt to\u00e1n MinSort) Gi\u1ea3 s\u1eed ch\u00fang ta \u0111\u01b0\u1ee3c cho m\u1ed9t m\u1ea3ng d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o (m\u1ea3ng A v\u00e0 s\u1ed1 ph\u1ea7n t\u1eed N), ta c\u00f3 th\u1ec3 t\u00ednh ch\u00ednh x\u00e1c s\u1ed1 b\u01b0\u1edbc ch\u1ea1y c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean \u0111\u1ea7u v\u00e0o \u0111\u00e3 cho. Ta th\u1eadm ch\u00ed c\u00f3 th\u1ec3 t\u00ednh ch\u00ednh x\u00e1c s\u1ed1 l\u1ec7nh th\u1ef1c thi trong b\u1ed9 vi x\u1eed l\u00fd n\u1ebfu ta mu\u1ed1n (ND: chuy\u1ec3n \u0111o\u1ea1n m\u00e3 C++ tr\u00ean th\u00e0nh m\u00e3 Assembly). Tuy nhi\u00ean, c\u00f3 r\u1ea5t nhi\u1ec1u gi\u00e1 tr\u1ecb m\u00e0 b\u1ed9 d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o c\u00f3 th\u1ec3 nh\u1eadn n\u00ean vi\u1ec7c t\u00ednh to\u00e1n s\u1ed1 b\u01b0\u1edbc nh\u01b0 tr\u00ean v\u1edbi m\u1ecdi kh\u1ea3 n\u0103ng \u0111\u1ea7u v\u00e0o l\u00e0 kh\u00f4ng th\u1ec3.</p> <p>Th\u1ef1c t\u1ebf tr\u00ean d\u1eabn ta t\u1edbi c\u00e2u h\u1ecfi quan tr\u1ecdng h\u01a1n: \u0111\u00e1nh gi\u00e1 quan tr\u1ecdng nh\u1ea5t v\u1ec1 \u0111\u1ed9 hi\u1ec7u qu\u1ea3 m\u00e0 ch\u00fang ta c\u1ea7n t\u1edbi l\u00e0 g\u00ec? Th\u00f4ng th\u01b0\u1eddng th\u00ec \u0111\u00f3 l\u00e0 t\u1ed1c \u0111\u1ed9 ch\u1ea1y thu\u1eadt to\u00e1n trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t - ta c\u1ea7n t\u00ecm ra m\u1ed9t \u0111\u00e1nh gi\u00e1 c\u1eadn tr\u00ean c\u1ee7a t\u1ed1c \u0111\u1ed9 ch\u1ea1y thu\u1eadt to\u00e1n.</p> <p>Tuy nhi\u00ean, th\u1ebf n\u00e0o l\u00e0 l\u00e0 tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t? M\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 l\u00e0m cho thu\u1eadt to\u00e1n ch\u1ea1y ch\u1eadm h\u01a1n l\u00e0  t\u0103ng k\u00edch c\u1ee1 \u0111\u1ea7u v\u00e0o. V\u00ec c\u1eadn tr\u00ean c\u1ee7a s\u1ed1 ph\u1ea7n t\u1eed \u0111\u00e3 b\u1ecb ch\u1eb7n b\u1edfi \u0111\u1ec1 b\u00e0i, c\u00e1c c\u00e2u h\u1ecfi quan tr\u1ecdng h\u01a1n l\u00e0: t\u1eadp \u0111\u1ea7u v\u00e0o x\u1ea5u nh\u1ea5t trong c\u00e1c t\u1eadp c\u00f3 c\u00f9ng s\u1ed1 ph\u1ea7n t\u1eed l\u00e0 t\u1eadp n\u00e0o? Khi t\u0103ng k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t t\u0103ng nh\u01b0 th\u1ebf n\u00e0o?</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#luu-y-ve-kich-co-tap-au-vao","title":"L\u01b0u \u00fd v\u1ec1 k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o","text":"<p>Hi\u1ec3u ch\u00ednh x\u00e1c th\u00ec \"k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o\" l\u00e0 \u0111\u1ea1i l\u01b0\u1ee3ng g\u00ec? Theo \u0111\u1ecbnh ngh\u0129a ch\u00ednh th\u1ed1ng, k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o \u0111\u01b0\u1ee3c vi\u1ebft th\u00e0nh m\u1ed9t t\u1eadp h\u1eefu h\u1ea1n c\u00e1c k\u00fd t\u1ef1 (v\u1edbi \u00edt nh\u1ea5t 02 'k\u00fd t\u1ef1'). Trong b\u00e0i n\u00e0y ta c\u00f3 th\u1ec3 coi t\u1eadp k\u00fd t\u1ef1 \u0111\u00f3 l\u00e0 c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean t\u1eeb 0 t\u1edbi 255. Nh\u01b0 v\u1eady \"k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o\" \u0111\u01b0\u1ee3c t\u00ednh \u0111\u00fang b\u1eb1ng s\u1ed1 bytes c\u1ee7a t\u1ec7p ch\u1ee9a d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o (input file).</p> <p>Th\u01b0\u1eddng th\u00ec m\u1ed9t ph\u1ea7n c\u1ee7a b\u1ed9 d\u1eef li\u1ec7u s\u1ebd l\u00e0 m\u1ed9t s\u1ed1 (ho\u1eb7c m\u1ed9t v\u00e0i s\u1ed1), m\u00e0 k\u00edch c\u1ee1 c\u1ee7a t\u1eadp \u0111\u1ea7u v\u00e0o s\u1ebd t\u1ec9 l\u1ec7 thu\u1eadn v\u1edbi s\u1ed1 n\u00e0y.</p> <p>Ch\u1eb3ng h\u1ea1n nh\u01b0 trong v\u00ed d\u1ee5 2, ta c\u00f3 m\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean \\(N\\) v\u00e0 m\u1ed9t m\u1ea3ng v\u1edbi \\(N\\) s\u1ed1 integer. K\u00edch c\u1ee1 theo \u0111\u01a1n v\u1ecb bytes c\u1ee7a file \u0111\u1ea7u v\u00e0o s\u1ebd x\u1ea5p x\u1ec9 \\(5N\\) (ph\u1ee5 thu\u1ed9c v\u00e0o h\u1ec7 \u0111i\u1ec1u h\u00e0nh v\u00e0 c\u1ea5u tr\u00fac m\u00e1y t\u00ednh, nh\u01b0ng s\u1ebd lu\u00f4n tuy\u1ebfn t\u00ednh v\u1edbi \\(N\\)).</p> <p>Trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta c\u00f3 th\u1ec3 ch\u1ecdn s\u1ed1 (ho\u1eb7c c\u00e1c s\u1ed1) \u0111\u00f3 \u0111\u1ec3 bi\u1ec3u di\u1ec5n k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o. V\u00ec v\u1eady khi n\u00f3i v\u1ec1 c\u00e1c b\u00e0i to\u00e1n c\u00f3 m\u1ea3ng / chu\u1ed7i, k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a m\u1ea3ng / chu\u1ed7i \u0111\u00f3, khi n\u00f3i v\u1ec1 c\u00e1c b\u00e0i to\u00e1n \u0111\u1ed3 th\u1ecb ta bi\u1ec3u th\u1ecb b\u1eb1ng c\u1ea3 hai \u0111\u1ea1i l\u01b0\u1ee3ng s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh v\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u1ea1nh,...</p> <p>V\u1edbi c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00f3, k\u1ec3 t\u1eeb \u0111\u00e2y cho t\u1edbi cu\u1ed1i b\u00e0i vi\u1ebft ta k\u00fd hi\u1ec7u \\(N\\) l\u00e0 k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o.</p> <p>M\u1ed9t tr\u01b0\u1eddng h\u1ee3p c\u1ea7n l\u01b0u \u00fd l\u00e0 khi vi\u1ebft m\u1ed9t s\u1ed1 \\(N\\) ta ch\u1ec9 c\u1ea7n \\(log(N)\\) kho\u1ea3ng tr\u1ed1ng (v\u00ed d\u1ee5 \u0111\u1ec3 vi\u1ebft 123456 trong h\u1ec7 c\u01a1 s\u1ed1 10 ta ch\u1ec9 c\u1ea7n \\(log_{10}(123456)\\) ch\u1eef s\u1ed1). C\u1ea7n ph\u00e2n bi\u1ec7t hai \u0111\u1ea1i l\u01b0\u1ee3ng n\u00e0y - v\u1edbi thu\u1eadt to\u00e1n ki\u1ec3m tra s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u01a1n gi\u1ea3n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111a th\u1ee9c tr\u00ean \u0111\u1ed9 l\u1edbn c\u1ee7a s\u1ed1 \u0111\u01b0\u1ee3c ki\u1ec3m tra ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 tr\u00ean s\u1ed1 l\u01b0\u1ee3ng ch\u1eef s\u1ed1 c\u1ee7a s\u1ed1 \u0111\u00f3! N\u1ebfu b\u1ea1n ch\u01b0a t\u1eebng g\u1eb7p kh\u00e1i ni\u1ec7m \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111a th\u1ee9c th\u00ec c\u0169ng kh\u00f4ng c\u1ea7n lo l\u1eafng v\u00ec kh\u00e1i ni\u1ec7m n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch trong ph\u1ea7n sau.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#tinh-toan-o-hieu-qua-cua-thuat-toan-nhu-the-nao","title":"T\u00ednh to\u00e1n \u0111\u1ed9 hi\u1ec7u qu\u1ea3 c\u1ee7a thu\u1eadt to\u00e1n nh\u01b0 th\u1ebf n\u00e0o?","text":"<p>Nh\u1eafc l\u1ea1i r\u1eb1ng cho tr\u01b0\u1edbc m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o, ta c\u00f3 th\u1ec3 \u0111\u1ebfm s\u1ed1 b\u01b0\u1edbc th\u1ef1c hi\u1ec7n c\u00e1c ph\u00e9p to\u00e1n c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n b\u1eb1ng c\u00e1ch m\u00f4 ph\u1ecfng c\u00e1c b\u01b0\u1edbc ch\u1ea1y thu\u1eadt to\u00e1n \u0111\u00f3 tr\u00ean b\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c cho. Gi\u1ea3 s\u1eed ta ti\u1ebfn h\u00e0nh \u0111\u1ebfm nh\u01b0 v\u1eady v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c b\u1ed9 d\u1eef li\u1ec7u c\u00f3 k\u00edch th\u01b0\u1edbc t\u1ed1i \u0111a \\(N\\). K\u00fd hi\u1ec7u \\(f(N)\\) l\u00e0 s\u1ed1 b\u01b0\u1edbc c\u1ea7n th\u1ef1c hi\u1ec7n nhi\u1ec1u nh\u1ea5t (tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t). H\u00e0m \\(f\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian, ho\u1eb7c ng\u1eafn g\u1ecdn th\u1eddi gian ch\u1ea1y c\u1ee7a thu\u1eadt to\u00e1n.</p> <p>N\u00f3i c\u00e1ch kh\u00e1c, n\u1ebfu ta c\u00f3 d\u1eef li\u1ec7u v\u00e0o v\u1edbi k\u00edch c\u1ee1 \\(N\\), vi\u1ec7c th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n m\u1ea5t t\u1ed1i \u0111a \\(f(N)\\) b\u01b0\u1edbc.</p> <p>Quay tr\u1edf lai thu\u1eadt to\u00e1n trong v\u00ed d\u1ee5 2. T\u1eadp \u0111\u1ea7u v\u00e0o x\u1ea5u nh\u1ea5t c\u00f3 \\(N\\) ph\u1ea7n t\u1eed l\u00e0 t\u1eadp n\u00e0o? N\u00f3i c\u00e1ch kh\u00e1c, trong s\u1ed1 c\u00e1c m\u1ea3ng c\u00f3 \\(N\\) ph\u1ea7n t\u1eed, m\u1ea3ng n\u00e0o khi\u1ebfn cho thu\u1eadt to\u00e1n ph\u1ea3i th\u1ef1c hi\u1ec7n nhi\u1ec1u b\u01b0\u1edbc nh\u1ea5t? T\u1eeb \u0111o\u1ea1n m\u00e3 c\u1ee7a thu\u1eadt to\u00e1n ta th\u1ea5y:</p> <ul> <li>B\u01b0\u1edbc th\u1ee9 nh\u1ea5t \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u0111\u00fang \\(N\\) l\u1ea7n</li> <li>B\u01b0\u1edbc th\u1ee9 hai v\u00e0 th\u1ee9 ba \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u0111\u00fang \\(\\frac{N(N-1)}{2}\\) l\u1ea7n</li> <li>B\u01b0\u1edbc th\u1ee9 t\u01b0 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n nhi\u1ec1u nh\u1ea5t \\(\\frac{N(N-1)}{2}\\) l\u1ea7n</li> </ul> <p>D\u1ec5 th\u1ea5y n\u1ebfu c\u00e1c ph\u1ea7n t\u1eed trong m\u1ea3ng \\(A\\) \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo chi\u1ec1u gi\u1ea3m d\u1ea7n ngay t\u1eeb \u0111\u1ea7u, b\u01b0\u1edbc th\u1ee9 4 s\u1ebd lu\u00f4n lu\u00f4n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n. V\u00ec v\u1eady thu\u1eadt to\u00e1n s\u1ebd ch\u1ea1y trong \\(\\frac{3N(N-1)}{2} + N = 1.5N^2 - 0.5N\\) b\u01b0\u1edbc. V\u00ec v\u1eady thu\u1eadt to\u00e1n tr\u00ean c\u00f3 s\u1ed1 b\u01b0\u1edbc t\u1ed1i \u0111a l\u00e0 \\(f(N) = 1.5N^2 - 0.5N\\).</p> <p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng vi\u1ec7c x\u00e1c \u0111\u1ecbnh ch\u00ednh x\u00e1c h\u00e0m \\(f\\) cho c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh ph\u1ee9c t\u1ea1p h\u01a1n l\u00e0 kh\u00e1 kh\u00f3 kh\u0103n. Th\u00eam v\u00e0o \u0111\u00f3, trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p d\u1ea1ng ch\u00ednh x\u00e1c c\u1ee7a h\u00e0m \\(f\\) l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft. Trong t\u00ednh to\u00e1n tr\u00ean gi\u00e1 tr\u1ecb \\(-0.5N\\) c\u00f3 th\u1ec3 b\u1ecf qua, v\u00ec khi \\(N\\) l\u1edbn th\u00ec \\(0.5N\\) nh\u1ecf h\u01a1n r\u1ea5t nhi\u1ec1u so v\u1edbi \\(1.5N^2\\) v\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng l\u1edbn t\u1edbi th\u1eddi gian ch\u1ea1y. M\u1ec7nh \u0111\u1ec1 \"\\(f(N)\\) x\u1ea5p x\u1ec9 b\u1eb1ng \\(1.5N^2\\)\" cho ta t\u1ea5t c\u1ea3 th\u00f4ng tin m\u00e0 ta c\u1ea7n. Ti\u1ebfp theo ch\u00fang ta s\u1ebd th\u1ea5y r\u1eb1ng, khi so s\u00e1nh thu\u1eadt to\u00e1n n\u00e0y v\u1edbi m\u1ed9t thu\u1eadt to\u00e1n n\u00e0o \u0111\u00f3 kh\u00e1c \u0111\u1ec3 gi\u1ea3i c\u00f9ng m\u1ed9t b\u00e0i to\u00e1n, h\u1eb1ng s\u1ed1 \\(1.5\\) c\u0169ng kh\u00f4ng th\u1eadt quan tr\u1ecdng.</p> <p>X\u00e9t hai thu\u1eadt to\u00e1n, m\u1ed9t c\u00f3 th\u1eddi gian ch\u1ea1y \\(N^2\\) v\u00e0 m\u1ed9t c\u00f3 th\u1eddi gian ch\u1ea1y \\(0.0001N^3\\). D\u1ec5 nh\u1eadn th\u1ea5y r\u1eb1ng v\u1edbi \\(N &gt; 1000\\) th\u00ec thu\u1eadt to\u00e1n \u0111\u1ea7u ti\u00ean ch\u1ea1y nhanh h\u01a1n - khi \\(N\\) t\u0103ng, kho\u1ea3ng c\u00e1ch v\u1ec1 \u0111\u1ed9 hi\u1ec7u qu\u1ea3 gi\u1eefa hai thu\u1eadt to\u00e1n c\u00e0ng tr\u1edf n\u00ean r\u00f5 r\u00e0ng. Trong khi thu\u1eadt to\u00e1n \u0111\u1ea7u ti\u00ean c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n v\u1edbi \\(N = 20 000\\) ch\u1ec9 trong th\u1eddi gian t\u00ednh b\u1eb1ng gi\u00e2y, thu\u1eadt to\u00e1n th\u1ee9 hai ph\u1ea3i m\u1ea5t t\u1edbi v\u00e0i ph\u00fat tr\u00ean c\u00e1c m\u00e1y t\u00ednh hi\u1ec7n \u0111\u1ea1i.</p> <p>S\u1ef1 kh\u00e1c bi\u1ec7t nh\u01b0 tr\u00ean s\u1ebd lu\u00f4n x\u1ea3y ra n\u1ebfu m\u1ed9t trong hai thu\u1eadt to\u00e1n c\u00f3 th\u1eddi gian ch\u1ea1y t\u0103ng ti\u1ec7m c\u1eadn nhanh h\u01a1n so v\u1edbi th\u1eddi gian ch\u1ea1y c\u1ee7a thu\u1eadt to\u00e1n c\u00f2n l\u1ea1i (n\u00f3i c\u00e1ch kh\u00e1c, khi \\(N\\) \u0111\u1ee7 l\u1edbn \u0111\u1ec3 k\u1ebft qu\u1ea3 ph\u00e9p t\u00ednh gi\u1edbi h\u1ea1n lim c\u1ee7a t\u1ef7 l\u1ec7 gi\u1eefa hai \u0111\u1ea1i l\u01b0\u1ee3ng n\u00e0y b\u1eb1ng 0 ho\u1eb7c \\(\\infty\\). ND: trong b\u00e0i n\u00e0y t\u00e1c gi\u1ea3 kh\u00f4ng n\u00f3i r\u00f5 vi\u1ec7c so s\u00e1nh \u0111\u1ed9 ph\u1ee9c t\u1ea1p theo ph\u00e9p t\u00ednh gi\u1edbi h\u1ea1n, ch\u1ec9 c\u1ea7n hi\u1ec3u kh\u00e1i ni\u1ec7m ti\u1ec7m c\u1eadn c\u00f3 ngh\u0129a l\u00e0 k\u00edch c\u1ee1 \u0111\u1ea7u v\u00e0o \u0111\u1ee7 l\u1edbn. Nh\u01b0 v\u1eady ti\u1ec7m c\u1eadn nhanh h\u01a1n c\u00f3 ngh\u0129a l\u00e0 nhanh h\u01a1n khi \u0111\u1ea7u v\u00e0o \u0111\u1ee7 l\u1edbn). B\u1ea5t k\u1ec3 c\u00e1c h\u1eb1ng s\u1ed1 nh\u1eadn gi\u00e1 tr\u1ecb n\u00e0o, m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 th\u1eddi gian ch\u1ea1y t\u1ef7 l\u1ec7 (thu\u1eadn) v\u1edbi \\(N^2\\) s\u1ebd lu\u00f4n lu\u00f4n hi\u1ec7u qu\u1ea3 h\u01a1n m\u1ed9t thu\u1eadt to\u00e1n kh\u00e1c c\u00f3 th\u1eddi gian ch\u1ea1y t\u1ef7 l\u1ec7 v\u1edbi \\(N^3\\) trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u1ee7a t\u1eadp \u0111\u1ea7u v\u00e0o. Nh\u1eadn \u0111\u1ecbnh n\u00e0y ch\u00ednh l\u00e0 \u00fd t\u01b0\u1edfng ch\u1ee7 \u0111\u1ea1o \u0111\u1ec3 x\u00e2y d\u1ef1ng \u0111\u1ecbnh ngh\u0129a ch\u00ednh th\u1ee9c c\u1ee7a c\u00e1c kh\u00e1i ni\u1ec7m.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#cac-khai-niem-co-ban","title":"C\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n","text":"<p>G\u1ecdi \\(f, g\\) l\u00e0 c\u00e1c h\u00e0m s\u1ed1 d\u01b0\u01a1ng kh\u00f4ng gi\u1ea3m tr\u00ean t\u1eadp s\u1ed1 nguy\u00ean d\u01b0\u01a1ng (l\u01b0u \u00fd r\u1eb1ng h\u00e0m th\u1eddi gian ch\u1ea1y th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n n\u00e0y). Ta n\u00f3i r\u1eb1ng \"\\(f(N)\\) thu\u1ed9c \\(O(g(N))\\)\" (c\u00e1ch \u0111\u1ecdc: \"\\(f\\) thu\u1ed9c O-l\u1edbn c\u1ee7a \\(g\\)\") n\u1ebfu t\u1ed3n t\u1ea1i c\u00e1c gi\u00e1 tr\u1ecb \\(c\\) v\u00e0 \\(N_0\\) th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n sau:</p> \\[ \\forall N &gt; N_0; f(N) &lt; c.g(N) \\] <p>M\u1ec7nh \u0111\u1ec1 tr\u00ean c\u00f3 th\u1ec3 di\u1ec5n d\u1ecbch nh\u01b0 sau: \\(f(N)\\) thu\u1ed9c \\(O(g(N))\\) n\u1ebfu v\u1edbi \\(c\\) n\u00e0o \u0111\u00f3 to\u00e0n b\u1ed9 \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m \\(f\\) n\u1eb1m d\u01b0\u1edbi \u0111\u1ed3 th\u1ecb c\u1ee7a h\u00e0m \\(c.g\\). Ch\u00fa \u00fd r\u1eb1ng \u0111i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 t\u1ed1c \u0111\u1ed9 t\u0103ng c\u1ee7a h\u00e0m \\(f\\) kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \u0111\u1ed9 t\u0103ng c\u1ee7a h\u00e0m \\(g\\). (ND: k\u00fd hi\u1ec7u O-l\u1edbn l\u00e0 k\u00fd hi\u1ec7u ch\u1ec9 t\u1eadp h\u1ee3p c\u1ee7a c\u00e1c h\u00e0m s\u1ed1, v\u00ec v\u1eady \u1edf \u0111\u00e2y quan h\u1ec7 gi\u1eefa \\(f\\) v\u00e0 \\(O(g(N))\\) l\u00e0 (ph\u1ea7n t\u1eed) thu\u1ed9c (t\u1eadp h\u1ee3p).)</p> <p>Thay v\u00ec vi\u1ebft \"\\(f(N)\\) thu\u1ed9c \\(O(g(N))\\)\" ta th\u01b0\u1eddng vi\u1ebft l\u00e0 \"\\(f(N)\\) = \\(O(g(N))\\)\". Ch\u00fa \u00fd l\u00e0 d\u1ea5u \"=\" kh\u00f4ng c\u00f3 t\u00ednh \u0111\u1ed1i x\u1ee9ng - vi\u1ebft \"\\(O(g(N)) = f (N)\\)\" l\u00e0 sai v\u00e0 kh\u00f4ng c\u00f3 \u00fd ngh\u0129a g\u00ec, \u0111\u1ed3ng th\u1eddi m\u1ec7nh \u0111\u1ec1 \"\\(g(N) = O(f (N))\\)\" c\u0169ng kh\u00f4ng ph\u1ea3i lu\u00f4n \u0111\u00fang (s\u1ebd \u0111\u01b0\u1ee3c ch\u1ec9 ra \u1edf ph\u1ea7n sau c\u1ee7a b\u00e0i vi\u1ebft).</p> <p>\u0110\u1ecbnh ngh\u0129a tr\u00ean \u0111\u01b0\u1ee3c bi\u1ebft t\u1edbi l\u00e0 k\u00fd ph\u00e1p O-l\u1edbn v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ec9 ra c\u1eadn tr\u00ean c\u1ee7a t\u1ed1c \u0111\u1ed9 t\u0103ng c\u1ee7a m\u1ed9t h\u00e0m s\u1ed1.</p> <p>X\u00e9t h\u00e0m s\u1ed1 \\(f (N) = 1.5N^2 \u2013 0.5N\\) trong v\u00ed d\u1ee5 2. Ta c\u00f3 th\u1ec3 ph\u00e1t bi\u1ec3u r\u1eb1ng \\(f (N) = O(N^2)\\) (m\u1ed9t tr\u01b0\u1eddng h\u1ee3p kh\u1ea3 d\u0129 cho c\u00e1c h\u1eb1ng s\u1ed1 l\u00e0 \\(c = 2\\) v\u00e0 \\(N_0 = 0\\)). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 h\u00e0m \\(f\\) kh\u00f4ng t\u0103ng (ti\u1ec7m c\u1eadn) nhanh h\u01a1n \\(N^2\\).</p> <p>L\u01b0u \u00fd r\u1eb1ng th\u1eddi gian ch\u1ea1y ch\u00ednh x\u00e1c c\u1ee7a h\u00e0m \\(f\\) kh\u00f4ng cho ta c\u00e2u tr\u1ea3 l\u1eddi cho c\u00e2u h\u1ecfi \"Ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean ch\u1ea1y m\u1ea5t bao l\u00e2u tr\u00ean m\u00e1y t\u00ednh?\". Nh\u1eadn \u0111\u1ecbnh quan tr\u1ecdng r\u00fat ra t\u1eeb v\u00ed d\u1ee5 tr\u00ean l\u00e0 th\u1eddi gian ch\u1ea1y c\u1ee7a h\u00e0m \\(f\\) \u0111\u00f3 l\u00e0 h\u00e0m b\u1eadc hai. N\u1ebfu ta t\u0103ng g\u1ea5p \u0111\u00f4i k\u00edch c\u1ee1 \u0111\u1ea7u v\u00e0o, th\u1eddi gian ch\u1ea1y s\u1ebd t\u0103ng x\u1ea5p x\u1ec9 4 l\u1ea7n th\u1eddi gian ch\u1ea1y ban \u0111\u1ea7u, kh\u00f4ng quan tr\u1ecdng m\u00e1y t\u00ednh c\u1ee7a ta nhanh nh\u01b0 th\u1ebf n\u00e0o.</p> <p>Vi\u1ec7c x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c c\u1eadn tr\u00ean \\(O(N^2)\\) c\u1ee7a \\(f(N)\\) c\u0169ng \u0111\u01b0a ta t\u1edbi c\u00f9ng nh\u1eadn \u0111\u1ecbnh nh\u01b0 tr\u00ean - \u0111\u1ea3m b\u1ea3o r\u1eb1ng \u0111\u1ed9 t\u0103ng c\u1ee7a h\u00e0m th\u1eddi gian ch\u1ea1y t\u1ed1i \u0111a l\u00e0 h\u00e0m b\u1eadc hai.</p> <p>V\u00ec v\u1eady, ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng k\u00fd ph\u00e1p O-l\u1edbn \u0111\u1ec3 m\u00f4 t\u1ea3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian (v\u00e0 \u0111\u00f4i khi l\u00e0 c\u1ea3 b\u1ed9 nh\u1edb) c\u1ee7a c\u00e1c thu\u1eadt to\u00e1n. V\u1edbi thu\u1eadt to\u00e1n trong v\u00ed d\u1ee5 2 ta s\u1ebd n\u00f3i \"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(N^2)\\)\" ho\u1eb7c ng\u1eafn g\u1ecdn h\u01a1n \"Thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(N^2)\\)\".</p> <p>Theo c\u00e1ch t\u01b0\u01a1ng t\u1ef1 ta s\u1ebd \u0111\u1ecbnh ngh\u0129a $ \\Omega$ (Omega-l\u1edbn) and $ \\Theta$ (Theta-l\u1edbn).</p> <p>Ta n\u00f3i r\u1eb1ng \\(f (N)= \\Omega(g(N))\\) n\u1ebfu \\(g(N) = O(f (N))\\), n\u00f3i c\u00e1ch kh\u00e1c n\u1ebfu \\(f\\) t\u0103ng nhanh h\u01a1n ho\u1eb7c b\u1eb1ng \\(g\\).</p> <p>Ta n\u00f3i r\u1eb1ng \\(f (N) = \\Theta(g(N))\\) n\u1ebfu \\(f (N) = O(g(N))\\) v\u00e0 \\(g(N) = O(f (N))\\), n\u00f3i c\u00e1ch kh\u00e1c n\u1ebfu c\u1ea3 hai h\u00e0m s\u1ed1 c\u00f3 \u0111\u1ed9 hi\u1ec7u qu\u1ea3 x\u1ea5p x\u1ec9 b\u1eb1ng nhau.</p> <p>D\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y l\u00e0 h\u00e0m Omega-l\u1edbn d\u00f9ng \u0111\u1ec3 ch\u1ec9 c\u1eadn d\u01b0\u1edbi v\u00e0 h\u00e0m Theta-l\u1edbn d\u00f9ng \u0111\u1ec3 ch\u1ec9 \u0111\u00e1nh gi\u00e1 ch\u1eb7t (c\u1ea3 hai c\u1eadn) c\u1ee7a m\u1ed9t h\u00e0m s\u1ed1. C\u00f3 nh\u1eefng \u0111\u00e1nh gi\u00e1 c\u1eadn kh\u00e1c t\u01b0\u01a1ng t\u1ef1 nh\u01b0ng \u00edt ph\u1ed5 bi\u1ebfn h\u01a1n.</p> <p>M\u1ed9t v\u00e0i m\u1ec7nh \u0111\u1ec1 s\u1eed d\u1ee5ng c\u00e1c k\u00fd ph\u00e1p tr\u00ean:</p> <ul> <li>\\(1.5N^2 -0.5N = O(N^2)\\).</li> <li>\\(47N log N = O(N^2)\\).</li> <li>\\(N log N + 1 000 047N = \\Theta(N log N)\\).</li> <li>T\u1ea5t c\u1ea3 c\u00e1c \u0111a th\u1ee9c b\u1eadc \\(k\\) l\u00e0 \\(O(N^k)\\).</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n trong v\u00ed d\u1ee5 2 l\u00e0 $ \\Theta(N^2)$.</li> <li>N\u1ebfu m\u1ed9t thu\u1eadt to\u00e1n thu\u1ed9c \\(O(N^2)\\), n\u00f3 c\u0169ng thu\u1ed9c \\(O(N^5)\\).</li> <li>C\u00e1c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp d\u1ef1a tr\u00ean ph\u00e9p so s\u00e1nh \u0111\u1ec1u l\u00e0 $ \\Omega(N log N)$.</li> <li>Thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp tr\u1ed9n MergeSort ch\u1ea1y tr\u00ean m\u1ea3ng g\u1ed3m \\(N\\) ph\u1ea7n t\u1eed th\u1ef1c hi\u1ec7n x\u1ea5p x\u1ec9 \\(N log N\\) ph\u00e9p so s\u00e1nh. V\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a MergeSort l\u00e0 $ \\Theta(N log N)$. N\u1ebfu m\u1ec7nh \u0111\u1ec1 tr\u01b0\u1edbc \u0111\u00f3 l\u00e0 \u0111\u00fang th\u00ec MergeSort ti\u1ec7m c\u1eadn thu\u1eadt to\u00e1n t\u1ed1i \u01b0u nh\u1ea5t trong c\u00e1c thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp d\u1ef1a tr\u00ean ph\u00e9p so s\u00e1nh.</li> <li>Thu\u1eadt to\u00e1n trong v\u00ed d\u1ee5 2 s\u1eed d\u1ee5ng $ \\Theta(N)$ bytes b\u1ed9 nh\u1edb.</li> <li>H\u00e0m s\u1ed1 cho bi\u1ebft s\u1ed1 r\u0103ng c\u1ee7a m\u1ed9t ng\u01b0\u1eddi \u1edf m\u1ed9t th\u1eddi \u0111i\u1ec3m x\u00e1c \u0111\u1ecbnh l\u00e0 \\(O(1)\\).</li> <li>M\u1ed9t thu\u1eadt to\u00e1n quay lui \u0111\u01a1n gi\u1ea3n gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n tr\u00ean b\u00e0n c\u1edd vua l\u00e0 \\(O(1)\\) v\u00ec c\u00e2y v\u1ecb tr\u00ed m\u00e0 thu\u1eadt to\u00e1n duy\u1ec7t qua c\u00f3 k\u00edch c\u1ee1 gi\u1edbi h\u1ea1n. (Tuy nhi\u00ean gi\u00e1 tr\u1ecb h\u1eb1ng s\u1ed1 trong \\(O(1)\\) n\u00e0y l\u1ea1i r\u1ea5t l\u1edbn)</li> <li>M\u1ec7nh \u0111\u1ec1 \"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y t\u1ed1i thi\u1ec3u l\u00e0 \\(O(N^2)\\)\" l\u00e0 v\u00f4 ngh\u0129a. (Di\u1ec5n d\u1ecbch: \"Gi\u00e1 tr\u1ecb t\u1ed1i thi\u1ec3u c\u1ee7a \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y t\u1ed1i \u0111a l\u00e0 x\u1ea5p x\u1ec9 h\u00e0m b\u1eadc hai\"). Ph\u00e1t bi\u1ec3u \u0111\u00fang l\u00e0: \"\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 $ \\Omega(N2)$.\"</li> </ul> <p>Khi n\u00f3i v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian/b\u1ed9 nh\u1edb c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n, thay v\u00ec s\u1eed d\u1ee5ng k\u00fd ph\u00e1p Theta-l\u1edbn $ \\Theta(f (N))$ ta c\u00f3 th\u1ec3 \u0111\u01a1n gi\u1ea3n ch\u1ec9 ra t\u00ean c\u1ee7a l\u1edbp h\u00e0m ch\u1ee9a h\u00e0m \\(f\\). V\u00ed d\u1ee5 v\u1edbi \\(f (N) =  \\Theta(N)\\), ta g\u1ecdi thu\u1eadt to\u00e1n \u0111\u00f3 l\u00e0 tuy\u1ebfn t\u00ednh. M\u1ed9t v\u00e0i v\u00ed d\u1ee5 kh\u00e1c:</p> <ul> <li>\\(f (N) = \\Theta(log N)\\): h\u00e0m log</li> <li>\\(f (N) = \\Theta(N^2)\\): h\u00e0m b\u1eadc 2</li> <li>\\(f (N) = \\Theta(N^3)\\): h\u00e0m b\u1eadc 3</li> <li>\\(f (N) = O(N^k)\\) : h\u00e0m \u0111a th\u1ee9c</li> <li>\\(f (N) = \\Omega(2^N)\\): h\u00e0m m\u0169</li> </ul> <p>V\u1edbi c\u00e1c b\u00e0i to\u00e1n tr\u00ean \u0111\u1ed3 th\u1ecb, \u0111\u1ed9 ph\u1ee9c t\u1ea1p $ \\Theta$(N + M) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"tuy\u1ebfn t\u00ednh theo \u0111\u1ed9 l\u1edbn c\u1ee7a \u0111\u1ed3 th\u1ecb\".</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#xac-inh-thoi-gian-chay-dua-vao-anh-gia-can-tren","title":"X\u00e1c \u0111\u1ecbnh th\u1eddi gian ch\u1ea1y d\u1ef1a v\u00e0o \u0111\u00e1nh gi\u00e1 c\u1eadn tr\u00ean","text":"<p>V\u1edbi h\u1ea7u h\u1ebft c\u00e1c thu\u1eadt to\u00e1n th\u01b0\u1eddng g\u1eb7p trong th\u1ef1c t\u1ebf, gi\u00e1 tr\u1ecb h\u1eb1ng s\u1ed1 c\u1ee7a \\(O\\) (ho\u1eb7c $ \\Theta$) th\u01b0\u1eddng l\u00e0 kh\u00e1 nh\u1ecf. N\u1ebfu m\u1ed9t thu\u1eadt to\u00e1n l\u00e0 $ \\Theta(N^2)$, \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u00ednh x\u00e1c l\u00e0 v\u00e0o kho\u1ea3ng \\(10N^2\\) ch\u1ee9 kh\u00f4ng ph\u1ea3i \\(10^7N^2\\).</p> <p>N\u00f3i c\u00e1ch kh\u00e1c: n\u1ebfu h\u1eb1ng s\u1ed1 l\u00e0 l\u1edbn th\u00ec th\u01b0\u1eddng l\u00e0 c\u00e1c h\u1eb1ng s\u1ed1 \u0111\u00f3 c\u00f3 li\u00ean quan t\u1edbi c\u00e1c \u0111\u1ea1i l\u01b0\u1ee3ng c\u00f3 s\u1eb5n trong \u0111\u1ec1 b\u00e0i. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u00e1ch l\u00e0m th\u00f4ng th\u01b0\u1eddng l\u00e0 g\u00e1n m\u1ed9t t\u00ean g\u1ecdi cho h\u1eb1ng s\u1ed1 \u0111\u00f3 v\u00e0 th\u00eam n\u00f3 v\u00e0o \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p theo k\u00fd ph\u00e1p, thay v\u00ec b\u1ecf qua nh\u01b0 ta \u0111\u00e3 l\u00e0m v\u1edbi s\u1ed1 \\(1.5\\) \u1edf v\u00ed d\u1ee5 2.</p> <p>V\u00ed d\u1ee5: b\u00e0i to\u00e1n y\u00eau c\u1ea7u \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed7i lo\u1ea1i k\u00fd t\u1ef1 trong m\u1ed9t chu\u1ed7i \u0111\u1ed9 d\u00e0i \\(N\\) k\u00fd t\u1ef1. Thu\u1eadt to\u00e1n \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 duy\u1ec7t c\u1ea3 chu\u1ed7i m\u1ed9t l\u1ea7n cho m\u1ed7i lo\u1ea1i k\u00fd t\u1ef1. K\u00edch c\u1ee1 b\u1ea3ng ch\u1eef c\u00e1i kh\u00f4ng thay \u0111\u1ed5i (v\u00ed d\u1ee5 nhi\u1ec1u nh\u1ea5t l\u00e0 255 k\u00fd t\u1ef1 trong ng\u00f4n ng\u1eef C), v\u00ec v\u1eady thu\u1eadt to\u00e1n l\u00e0 tuy\u1ebfn t\u00ednh v\u1edbi \\(N\\). M\u1eb7c d\u00f9 v\u1eady, ta n\u00ean vi\u1ebft \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian l\u00e0 $ \\Theta(|S| \\times N)$, trong \u0111\u00f3 \\(S\\) l\u00e0 b\u1ea3ng ch\u1eef c\u00e1i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng (L\u01b0u \u00fd l\u00e0 c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n t\u1ed1t h\u01a1n gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y trong $ \\Theta(|S| + N)$.</p> <p>Trong m\u1ed9t k\u1ef3 thi tr\u00ean TopCoder, m\u1ed9t thu\u1eadt to\u00e1n th\u1ef1c thi 1 000 000 000 ph\u00e9p nh\u00e2n hi\u1ebfm khi ch\u1ea1y trong gi\u1edbi h\u1ea1n th\u1eddi gian cho ph\u00e9p. Th\u1ef1c t\u1ebf n\u00e0y c\u1ed9ng v\u1edbi quan s\u00e1t \u1edf tr\u00ean v\u00e0 m\u1ed9t v\u00e0i kinh nghi\u1ec7m v\u1edbi c\u00e1c b\u00e0i to\u00e1n tr\u00ean TopCoder gi\u00fap ta t\u1ed5ng k\u1ebft b\u1ea3ng sau:</p> complexity maximum N $ \\Theta(N)$ 100 000 000 $ \\Theta(N log N)$     40 000 000 $ \\Theta(N^2)$     10 000 $ \\Theta(N^3)$     500 $ \\Theta(N^4)$     90 $ \\Theta(2^N)$     20 $ \\Theta(N!)$  11 <p>B\u1ea3ng 3: Gi\u00e1 tr\u1ecb \\(N\\) l\u1edbn nh\u1ea5t \u0111\u1ec3 c\u00e1c thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00e1c nhau ch\u1ea1y trong t\u1ed1i \u0111a 8 gi\u00e2y</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#luu-y-khi-phan-tich-o-phuc-tap-thuat-toan","title":"L\u01b0u \u00fd khi ph\u00e2n t\u00edch \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n","text":"<p>Th\u00f4ng th\u01b0\u1eddng khi tr\u00ecnh b\u00e0y m\u1ed9t thu\u1eadt to\u00e1n, c\u00e1ch t\u1ed1t nh\u1ea5t \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a n\u00f3 l\u00e0 k\u00fd ph\u00e1p Theta \\(\\Theta\\). Tuy nhi\u00ean, trong th\u1ef1c t\u1ebf th\u01b0\u1eddng ta ch\u1ec9 tr\u00ecnh b\u00e0y c\u1eadn \\(O-l\u1edbn\\) v\u00ec k\u00fd ph\u00e1p n\u00e0y d\u1ec5 vi\u1ebft h\u01a1n v\u00e0 ph\u1ed5 bi\u1ebfn h\u01a1n. Nh\u1eafc l\u1ea1i r\u1eb1ng \\(O-l\u1edbn\\) ch\u1ec9 mang \u00fd ngh\u0129a c\u1eadn tr\u00ean. Th\u00f4ng th\u01b0\u1eddng ta t\u00ecm c\u1eadn tr\u00ean \\(O-l\u1edbn\\) nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#vi-du-3","title":"V\u00ed d\u1ee5 3","text":"<p>Cho m\u1ed9t m\u1ea3ng A \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp. X\u00e1c \u0111\u1ecbnh xem li\u1ec7u c\u00f3 t\u1ed3n t\u1ea1i 02 ph\u1ea7n t\u1eed trong m\u1ea3ng m\u00e0 c\u00e1ch nhau D \u0111\u01a1n v\u1ecb hay kh\u00f4ng. X\u00e9t l\u1eddi gi\u1ea3i sau</p> <pre><code>int j = 0;\nfor(int i = 0; i &lt; N; i++) {\n    while ( (j &lt; N-1) &amp;&amp; (A[i] - A[j] &gt; D) )\n        j++;\n    if (A[i] - A[j] == D) return 1;\n}\n</code></pre> <p>Tho\u1ea1t nh\u00ecn ta c\u00f3 th\u1ec3 s\u1ebd \u0111\u00e1nh gi\u00e1 thu\u1eadt to\u00e1n tr\u00ean c\u00f3 c\u1eadn \\(O(N^2)\\) - v\u00f2ng l\u1eb7p trong c\u00f9ng ch\u1ea1y \\(N\\) l\u1ea7n, m\u1ed7i l\u1ea7n t\u0103ng bi\u1ebfn \\(j\\) t\u1ed1i \u0111a \\(N\\) l\u1ea7n. Ph\u00e2n t\u00edch k\u1ef9 h\u01a1n, ta th\u1ea5y r\u1eb1ng c\u1eadn tr\u00ean c\u00f3 \u0111\u00e1nh gi\u00e1 t\u1ed1t h\u01a1n l\u00e0 \\(O(N)\\) - th\u1eadt ra t\u1ed5ng th\u1ec3 s\u1ed1 l\u1ea7n ch\u1ea1y c\u00e2u l\u1ec7nh \\(j\\)++ trong to\u00e0n b\u1ed9 thu\u1eadt to\u00e1n kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(N\\) l\u1ea7n.</p> <p>M\u1ec7nh \u0111\u1ec1 \"thu\u1eadt to\u00e1n tr\u00ean l\u00e0 \\(O(N^2)\\)\" v\u1eabn l\u00e0 m\u1ed9t m\u1ec7nh \u0111\u1ec1 \u0111\u00fang. Tuy nhi\u00ean b\u1eb1ng vi\u1ec7c n\u00f3i r\u1eb1ng \"thu\u1eadt to\u00e1n tr\u00ean l\u00e0 \\(O(N)\\)\" ta cung c\u1ea5p nhi\u1ec1u th\u00f4ng tin h\u01a1n v\u1ec1 thu\u1eadt to\u00e1n \u0111\u00f3.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-1/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>Ch\u00fang ta \u0111\u00e3 ch\u1ec9 ra c\u00e1ch vi\u1ebft c\u00e1c c\u1eadn (tr\u00ean, d\u01b0\u1edbi) theo \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n c\u1ee7a thu\u1eadt to\u00e1n. Ta c\u0169ng \u0111\u00e3 ch\u1ee9ng minh r\u1eb1ng c\u00e1c c\u1eadn \u0111\u00f3 l\u00e0 c\u00e1c thu\u1ed9c t\u00ednh c\u01a1 b\u1ea3n v\u00e0 th\u01b0\u1eddng l\u00e0 hi\u1ec7u qu\u1ea3 \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 c\u00e1c thu\u1eadt to\u00e1n. Trong ph\u1ea7n sau ch\u00fang ta s\u1ebd ph\u00e2n t\u00edch l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n c\u1ee7a c\u00e1c thu\u1eadt to\u00e1n. Nh\u01b0 ta \u0111\u00e3 th\u1ea5y trong V\u00ed d\u1ee5 3 vi\u1ec7c ph\u00e2n t\u00edch n\u00e0y c\u00f3 th\u1ec3 tr\u1edf n\u00ean kh\u00e1 kh\u00f3 kh\u0103n. M\u1ed9t nguy\u00ean nh\u00e2n kh\u00e1c l\u00e0m cho vi\u1ec7c ph\u00e2n t\u00edch kh\u00f3 kh\u0103n l\u00e0 c\u00e1c thu\u1eadt to\u00e1n \u0111\u1ec7 quy. C\u00e1c v\u1ea5n \u0111\u1ec1 n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c x\u1eed l\u00fd trong ph\u1ea7n 2 c\u1ee7a b\u00e0i vi\u1ebft.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n - ph\u1ea7n 2","text":"<p>Ngu\u1ed3n b\u00e0i: Topcoder</p> <p>...\u0111\u1ecdc ph\u1ea7n 1</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong ph\u1ea7n n\u00e0y c\u1ee7a b\u00e0i vi\u1ebft ch\u00fang ta s\u1ebd t\u1eadp trung v\u00e0o vi\u1ec7c \u01b0\u1edbc l\u01b0\u1ee3ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec7 quy. V\u1ec1 m\u1eb7t b\u1ea3n ch\u1ea5t vi\u1ec7c n\u00e0y s\u1ebd d\u1eabn t\u1edbi kh\u1ea3o s\u00e1t \u0111\u1ed9 t\u0103ng c\u1ee7a c\u00e1c h\u00e0m \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian th\u1ecfa m\u00e3n c\u00e1c c\u00f4ng th\u1ee9c truy h\u1ed3i. N\u1ebfu b\u1ea1n ch\u01b0a hi\u1ec3u ch\u00ednh x\u00e1c th\u1ebf n\u00e0o l\u00e0 m\u1ed9t thu\u1eadt gi\u1ea3i \u0111\u1ec7 quy th\u00ec kh\u00f4ng c\u1ea7n lo l\u1eafng v\u00ec n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch trong c\u00e1c ph\u1ea7n sau. Tr\u01b0\u1edbc m\u1eaft ch\u00fang ta s\u1ebd xem x\u00e9t tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n h\u01a1n - c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u1ec7 quy.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vong-lap-long-nhau","title":"V\u00f2ng l\u1eb7p l\u1ed3ng nhau","text":"<p>\u0110\u1ec3 m\u1edf \u0111\u1ea7u, ta x\u00e9t c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh \u0111\u01a1n gi\u1ea3n kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1c l\u1eddi g\u1ecdi \u0111\u1ec7 quy. V\u1edbi c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 v\u1eady, ba quy t\u1eafc ph\u1ed5 bi\u1ebfn d\u1ec5 \u00e1p d\u1ee5ng \u0111\u1ec3 t\u00ecm c\u1eadn tr\u00ean c\u1ee7a \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0:</p> <ul> <li>T\u00ednh s\u1ed1 l\u1ea7n l\u1eb7p t\u1ed1i \u0111a c\u1ee7a m\u1ed9t v\u00f2ng l\u1eb7p</li> <li>N\u1ebfu c\u00e1c v\u00f2ng l\u1eb7p n\u1ed1i ti\u1ebfp nhau th\u00ec c\u1ed9ng c\u00e1c c\u1eadn \u0111\u00f3 v\u1edbi nhau</li> <li>N\u1ebfu c\u00e1c v\u00f2ng l\u1eb7p l\u1ed3ng nhau th\u00ec nh\u00e2n c\u00e1c c\u1eadn v\u1edbi nhau</li> </ul>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<p>\u01af\u1edbc l\u01b0\u1ee3ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a \u0111o\u1ea1n m\u00e3 sau: <pre><code>int result=0;                           //  1\nfor (int i=0; i&lt;N; i++)                 //  2\n  for (int j=i; j&lt;N; j++) {             //  3\n    for (int k=0; k&lt;M; k++) {           //  4\n      int x=0;                          //  5\n      while (x&lt;N) { result++; x+=3; }   //  6\n    }                                   //  7\n    for (int k=0; k&lt;2*M; k++)           //  8\n      if (k%7 == 4) result++;           //  9\n  }                                     // 10\n</code></pre></p> <p>R\u00f5 r\u00e0ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a v\u00f2ng l\u1eb7p <code>while</code> \u1edf d\u00f2ng 6 l\u00e0 \\(O(N)\\) - s\u1ed1 l\u1ea7n l\u1eb7p kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(N/3+1\\) l\u1ea7n.</p> <p>X\u00e9t v\u00f2ng l\u1eb7p <code>for</code> \u1edf c\u00e1c d\u00f2ng 4 - 7. D\u1ec5 th\u1ea5y bi\u1ebfn \\(k\\) \u0111\u01b0\u1ee3c t\u0103ng l\u00ean \\(M\\) l\u1ea7n. M\u1ed7i l\u1ea7n nh\u01b0 v\u1eady th\u00ec to\u00e0n b\u1ed9 v\u00f2ng l\u1eb7p <code>while</code> \u1edf d\u00f2ng 6 l\u1ea1i \u0111\u01b0\u1ee3c th\u1ef1c thi. Nh\u01b0 v\u1eady t\u1ed5ng s\u1ed1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a \u0111o\u1ea1n l\u1ec7nh t\u1eeb d\u00f2ng 4 t\u1edbi 7 l\u00e0 \\(O(MN)\\) (\u00e1p d\u1ee5ng quy t\u1eafc 3)</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a v\u00f2ng <code>for</code> \u1edf c\u00e1c d\u00f2ng 8 - 9 l\u00e0 \\(O(M)\\). Nh\u01b0 v\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a d\u00f2ng t\u1eeb 4 t\u1edbi 9 l\u00e0 \\(O(MN + M) = O(MN)\\) (\u00e1p d\u1ee5ng quy t\u1eafc 2 v\u00e0 lo\u1ea1i \u0111\u1ea1i l\u01b0\u1ee3ng kh\u00f4ng \u0111\u00e1ng k\u1ec3)</p> <p>To\u00e0n b\u1ed9 ph\u1ea7n m\u00e3 b\u00ean trong n\u00e0y \u0111\u01b0\u1ee3c th\u1ef1c thi \\(O(N^2)\\) l\u1ea7n - m\u1ed7i l\u1ea7n t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t t\u1ed5 h\u1ee3p c\u1ee7a bi\u1ebfn \\(i\\) v\u00e0 \\(j\\) (d\u00f2ng 2 v\u00e0 3) (ch\u00fa \u00fd l\u00e0 ch\u1ec9 c\u00f3 \\(N(N + 1)/2\\) gi\u00e1 tr\u1ecb kh\u00e1c nhau cho b\u1ed9 s\u1ed1 \\([i,j]\\). M\u1eb7c d\u00f9 v\u1eady \\(O(N^2)\\) v\u1eabn l\u00e0 c\u1eadn tr\u00ean \u0111\u00fang).</p> <p>T\u1eeb nh\u1eadn x\u00e9t tr\u00ean ta c\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n trong V\u00ed d\u1ee5 1 l\u00e0 \\(O(N^2 MN) = O(MN^3)\\).</p> <p>T\u1eeb v\u00ed d\u1ee5 tr\u00ean ng\u01b0\u1eddi \u0111\u1ecdc \u0111\u00e3 c\u00f3 kh\u1ea3 n\u0103ng ph\u00e2n t\u00edch \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c ph\u1ea7n m\u00e3 \u0111\u01a1n gi\u1ea3n s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p nh\u01b0 \u0111\u00e3 tr\u00ecnh b\u00e0y. Ch\u00fang ta s\u1ebd \u0111i t\u1edbi xem x\u00e9t c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 s\u1eed d\u1ee5ng \u0111\u1ec7 quy (t\u1ee9c l\u00e0 m\u1ed9t h\u00e0m s\u1ed1 m\u00e0 trong th\u00e2n h\u00e0m c\u1ee7a n\u00f3 s\u1ebd g\u1ecdi t\u1edbi ch\u00ednh n\u00f3 v\u1edbi tham s\u1ed1 kh\u00e1c) v\u00e0 ph\u00e2n t\u00edch \u1ea3nh h\u01b0\u1edfng c\u1ee7a nh\u1eefng l\u1eddi g\u1ecdi \u0111\u1ec7 quy n\u00e0y t\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a ch\u00fang.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#su-dung-e-quy-e-sinh-cac-cau-hinh-to-hop","title":"S\u1eed d\u1ee5ng \u0111\u1ec7 quy \u0111\u1ec3 sinh c\u00e1c c\u1ea5u h\u00ecnh t\u1ed5 h\u1ee3p","text":"<p>M\u1ed9t \u1ee9ng d\u1ee5ng ph\u1ed5 bi\u1ebfn c\u1ee7a \u0111\u1ec7 quy l\u00e0 c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n quay lui \u0111\u1ec3 sinh ra t\u1ea5t c\u1ea3 c\u00e1c nghi\u1ec7m c\u1ee7a m\u1ed9t b\u00e0i to\u00e1n. \u00dd t\u01b0\u1edfng chung l\u00e0 \u0111\u00e0o s\u00e2u v\u00e0o t\u1eebng nh\u00e1nh nghi\u1ec7m \u0111\u1ebfn khi nh\u00e1nh nghi\u1ec7m n\u00e0y \u0111\u01b0\u1ee3c th\u1eed h\u1ebft th\u00ec quay l\u1ea1i b\u01b0\u1edbc tr\u01b0\u1edbc \u0111\u00f3 \u0111\u1ec3 th\u1eed c\u00e1c nh\u00e1nh nghi\u1ec7m kh\u00e1c.</p> <p>C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c, c\u00f3 nh\u1eefng b\u00e0i to\u00e1n m\u00e0 ta kh\u00f4ng th\u1ec3 sinh ra t\u1ea5t c\u1ea3 c\u00e1c nghi\u1ec7m \u0111\u1ec3 th\u1eed t\u1eebng nghi\u1ec7m m\u1ed9t nh\u01b0 v\u1eady. Tuy nhi\u00ean, tr\u01b0\u1eddng h\u1ee3p th\u01b0\u1eddng x\u1ea3y ra l\u00e0 t\u1eadp nghi\u1ec7m c\u1ee7a m\u1ed9t b\u00e0i to\u00e1n tr\u00f9ng v\u1edbi m\u1ed9t lo\u1ea1i c\u1ea5u h\u00ecnh t\u1ed5 h\u1ee3p n\u00e0o \u0111\u00f3. Th\u00f4ng th\u01b0\u1eddng \u0111\u00f3 l\u00e0 t\u1eadp c\u00e1c ho\u00e1n v\u1ecb (v\u1edbi s\u1ed1 ph\u1ea7n t\u1eed cho tr\u01b0\u1edbc), nh\u01b0ng \u0111\u00f4i l\u00fac c\u0169ng c\u00f3 th\u1ec3 l\u00e0 c\u00e1c c\u1ea5u h\u00ecnh kh\u00e1c (t\u1ed5 h\u1ee3p, s\u1ed1 c\u00e1ch ph\u00e2n chia m\u1ed9t t\u1eadp h\u1ee3p, ...)</p> <p>L\u01b0u \u00fd l\u00e0 ta lu\u00f4n lu\u00f4n c\u00f3 th\u1ec3 sinh ra t\u1ea5t c\u1ea3 c\u00e1c chu\u1ed7i c\u1ee7a 0 v\u00e0 1, ki\u1ec3m tra t\u1eebng chu\u1ed7i m\u1ed9t (ki\u1ec3m tra xem chu\u1ed7i \u0111\u00f3 c\u00f3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t nghi\u1ec7m h\u1ee3p l\u1ec7 hay kh\u00f4ng) v\u00e0 l\u01b0u l\u1ea1i nghi\u1ec7m t\u1ed1t nh\u1ea5t. N\u1ebfu ta c\u00f3 th\u1ec3 t\u00ecm m\u1ed9t c\u1eadn tr\u00ean c\u1ee7a k\u00edch c\u1ee1 nghi\u1ec7m t\u1ed1t nh\u1ea5t, s\u1ed1 nghi\u1ec7m ph\u1ea3i ki\u1ec3m tra l\u00e0 h\u1eefu h\u1ea1n. Tuy nhi\u00ean c\u00e1ch l\u00e0m n\u00e0y kh\u00f4ng \u0111\u1ee7 nhanh v\u00e0 kh\u00f4ng n\u00ean d\u00f9ng n\u00f3 n\u1ebfu c\u00f3 c\u00e1ch l\u00e0m kh\u00e1c.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<p>M\u1ed9t thu\u1eadt to\u00e1n quay lui \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 sinh ra t\u1ea5t c\u1ea3 c\u00e1c ho\u00e1n v\u1ecb c\u1ee7a c\u00e1c s\u1ed1 t\u1ef1 nhi\u00ean t\u1eeb 0 t\u1edbi \\(N-1\\)</p> <pre><code>vector&lt;int&gt; permutation(N);\nvector&lt;int&gt; used(N,0);\n\nvoid try(int which, int what) {\n  // try taking the number \"what\" as the \"which\"-th element\n  permutation[which] = what;\n  used[what] = 1;\n\n  if (which == N-1)\n    outputPermutation();\n  else\n    // try all possibilities for the next element\n    for (int next=0; next&lt;N; next++)\n      if (!used[next])\n        try(which+1, next);\n\n  used[what] = 0;\n}\n\nint main() {\n  // try all possibilities for the first element\n  for (int first=0; first&lt;N; first++)\n    try(0,first);\n}\n</code></pre> <p>Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, d\u1ec5 th\u1ea5y c\u1eadn d\u01b0\u1edbi ch\u00ednh l\u00e0 s\u1ed1 l\u01b0\u1ee3ng nghi\u1ec7m kh\u1ea3 d\u0129 c\u1ee7a b\u00e0i to\u00e1n. Thu\u1eadt to\u00e1n quay lui th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n kh\u00f3 - khi ta kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n n\u00e0o t\u1ed1i \u01b0u h\u01a1n. Th\u01b0\u1eddng th\u00ec kh\u00f4ng gian nghi\u1ec7m kh\u00e1 l\u1edbn v\u00e0 ph\u00e2n b\u1ed1 \u0111\u1ed3ng \u0111\u1ec1u, thu\u1eadt to\u00e1n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t sao cho \u0111\u1ed9 ph\u1ee9c t\u1ea1p g\u1ea7n v\u1edbi \u0111\u00e1nh gi\u00e1 c\u1eadn d\u01b0\u1edbi. \u0110\u1ec3 t\u00ecm c\u1eadn tr\u00ean ta ch\u1ec9 vi\u1ec7c c\u1ed9ng th\u00eam s\u1ed1 l\u01b0\u1ee3ng ph\u00e9p t\u00ednh c\u1ea7n thi\u1ebft trong th\u1ef1c t\u1ebf.</p> <p>Tuy v\u1eady c\u00e1ch l\u00e0m n\u00e0y th\u01b0\u1eddng l\u00e0 kh\u00f4ng kh\u1ea3 thi do n\u00f3 ph\u1ea3i kh\u1ea3o s\u00e1t m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng l\u1edbn c\u00e1c nghi\u1ec7m - th\u01b0\u1eddng l\u00e0 h\u00e0m m\u0169 ho\u1eb7c l\u1edbn h\u01a1n th\u1ebf.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#chia-e-tri-su-dung-e-quy","title":"Chia \u0111\u1ec3 tr\u1ecb s\u1eed d\u1ee5ng \u0111\u1ec7 quy","text":"<p>T\u1eeb v\u00ed d\u1ee5 2 ch\u00fang ta c\u00f3 th\u1ec3 nh\u1ea7m t\u01b0\u1edfng r\u1eb1ng \u0111\u1ec7 quy ch\u1ea1y kh\u00f4ng hi\u1ec7u qu\u1ea3 v\u00e0 l\u00e0m cho t\u1ed1c \u0111\u1ed9 th\u1ef1c thi r\u1ea5t ch\u1eadm. Kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o \u0111i\u1ec1u n\u00e0y c\u0169ng \u0111\u00fang. Ng\u01b0\u1ee3c l\u1ea1i, \u0111\u1ec7 quy c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 r\u1ea5t m\u1ea1nh \u0111\u1ec3 thi\u1ebft k\u1ebf nh\u1eefng thu\u1eadt to\u00e1n hi\u1ec7u qu\u1ea3. C\u00e1ch th\u00f4ng th\u01b0\u1eddng \u0111\u1ec3 thi\u1ebft k\u1ec7 m\u1ed9t gi\u1ea3i thu\u1eadt \u0111\u1ec7 quy hi\u1ec7u qu\u1ea3 l\u00e0 \u00e1p d\u1ee5ng t\u01b0 t\u01b0\u1edfng Chia \u0111\u1ec3 Tr\u1ecb - chia b\u00e0i to\u00e1n th\u00e0nh nhi\u1ec1u ph\u1ea7n, x\u1eed l\u00fd c\u00e1c ph\u1ea7n nh\u1ecf t\u00e1ch bi\u1ec7t nhau v\u00e0 cu\u1ed1i c\u00f9ng gh\u00e9p c\u00e1c k\u1ebft qu\u1ea3 con l\u1ea1i \u0111\u1ec3 \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 cho b\u00e0i to\u00e1n l\u1edbn. D\u1ec5 th\u1ea5y r\u1eb1ng, ph\u1ea7n \"x\u1eed l\u00fd c\u00e1c ph\u1ea7n nh\u1ecf t\u00e1ch bi\u1ec7t nhau\" th\u01b0\u1eddng \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t b\u1eb1ng \u0111\u1ec7 quy - ti\u1ebfp t\u1ee5c chia ph\u1ea7n nh\u1ecf th\u00e0nh ph\u1ea7n nh\u1ecf h\u01a1n cho t\u1edbi khi \u0111\u1ee7 nh\u1ecf \u0111\u1ec3 gi\u1ea3i tr\u1ef1c ti\u1ebfp b\u1eb1ng c\u00e1c thu\u1eadt to\u00e1n \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-3","title":"V\u00ed d\u1ee5 3","text":"<p>M\u00e3 gi\u1ea3 m\u00f4 t\u1ea3 thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp tr\u1ed9n MergeSort</p> <pre><code>MergeSort(m\u1ea3ng S) {\n  if (s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a S &lt;= 1) return S;\n  chia \u0111\u00f4i S th\u00e0nh hai m\u1ea3ng con S1 v\u00e0 S2 v\u1edbi s\u1ed1 ph\u1ea7n t\u1eed g\u1ea7n b\u1eb1ng nhau;\n  MergeSort(S1);\n  MergeSort(S2);\n  tr\u1ed9n S1 v\u00e0 S2 \u0111\u00e3 s\u1eafp x\u1ebfp \u0111\u1ec3 thu \u0111\u01b0\u1ee3c S m\u1edbi \u0111\u00e3 s\u1eafp x\u1ebfp;\n  return S m\u1edbi;\n}\n</code></pre> <p>Ta th\u1ea5y l\u00e0 ch\u1ec9 c\u1ea7n \\(O(N)\\) (ho\u1eb7c \\(O(1)\\), t\u00f9y v\u00e0o c\u00e1ch c\u00e0i \u0111\u1eb7t) \u0111\u1ec3 chia m\u1ed9t m\u1ea3ng \\(N\\) ph\u1ea7n t\u1eed th\u00e0nh hai m\u1ea3ng con. Tr\u1ed9n hai m\u1ea3ng con ng\u1eafn h\u01a1n \u0111\u00e3 s\u1eafp x\u1ebfp n\u00e0y c\u00f3 th\u1ec3 l\u00e0m trong $ \\Theta(N)$: kh\u1edfi t\u1ea1o m\u1ea3ng \\(S\\) r\u1ed7ng. T\u1ea1i m\u1ed7i b\u01b0\u1edbc ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t m\u00e0 ch\u01b0a c\u00f3 trong \\(S\\) l\u00e0 ph\u1ea7n t\u1eed \u0111\u1ea7u c\u1ee7a \\(S1\\) ho\u1eb7c \\(S2\\). L\u1ea5y ph\u1ea7n t\u1eed n\u00e0y cho v\u00e0o cu\u1ed1i c\u1ee7a \\(S\\) v\u00e0 c\u1ee9 th\u1ebf ti\u1ebfp t\u1ee5c.</p> <p>Nh\u01b0 v\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ea7n \u0111\u1ec3 \\(MergeSort\\) m\u1ed9t m\u1ea3ng v\u1edbi \\(N\\) ph\u1ea7n t\u1eed l\u00e0 \\(\\Theta(N)\\) c\u1ed9ng v\u1edbi th\u1eddi gian th\u1ef1c hi\u1ec7n hai l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy.</p> <p>G\u1ecdi \\(f(N)\\) l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n MergeSort \u1edf tr\u00ean. Theo suy lu\u1eadn \u1edf tr\u00ean ta c\u00f3:</p> \\[ f(N) = f(\\lfloor N/2 \\rfloor) + f(\\lceil N/2 \\rceil) + p(N) \\] <p>V\u1edbi \\(p\\) l\u00e0 h\u00e0m tuy\u1ebfn t\u00ednh bi\u1ec3u th\u1ecb t\u1ed5ng chi ph\u00ed t\u00ednh to\u00e1n d\u00e0nh cho vi\u1ec7c chia \u0111\u00f4i m\u1ea3ng ban \u0111\u1ea7u v\u00e0 tr\u1ed9n hai m\u1ea3ng con v\u00e0o k\u1ebft qu\u1ea3 cu\u1ed1i.</p> <p>C\u00f4ng th\u1ee9c tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00f4ng th\u1ee9c truy h\u1ed3i. N\u1ebfu b\u1ea1n kh\u00f4ng bi\u1ebft thu\u1eadt ng\u1eef n\u00e0y th\u00ec c\u0169ng kh\u00f4ng c\u1ea7n lo l\u1eafng. T\u1eeb \"truy h\u1ed3i\" (recurrence) trong ti\u1ebfng Latin c\u00f3 ngh\u0129a l\u00e0 \"ch\u1ea1y v\u1ec1 ph\u00eda sau\". V\u00ec v\u1eady \"c\u00f4ng th\u1ee9c truy h\u1ed3i\" c\u00f3 ngh\u0129a l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m \\(f\\) \u0111\u01b0\u1ee3c t\u00ednh theo gi\u00e1 tr\u1ecb tr\u01b0\u1edbc \u0111\u00f3 (\u0111\u1ea7u v\u00e0o nh\u1ecf h\u01a1n) c\u1ee7a \\(f\\).</p> <p>\u0110\u1ec3 \u0111\u1ecbnh ngh\u0129a ho\u00e0n ch\u1ec9nh m\u1ed9t c\u00f4ng th\u1ee9c truy h\u1ed3i, ta c\u1ea7n ch\u1ec9 ra gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p kh\u1edfi t\u1ea1o c\u01a1 b\u1ea3n - trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \\(f(1)\\). C\u00e1c gi\u00e1 tr\u1ecb n\u00e0y (v\u00e0 h\u00e0m \\(p\\)) s\u1ebd cho ph\u00e9p ta t\u00ednh to\u00e1n ch\u00ednh x\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m \\(f\\).</p> <p>Tuy nhi\u00ean, nh\u01b0 ta \u0111\u00e3 th\u1ea5y \u1edf ph\u1ea7n 1, gi\u00e1 tr\u1ecb ch\u00ednh x\u00e1c c\u1ee7a h\u00e0m \\(f\\) kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ee5c ti\u00eau c\u1ea7n t\u00ednh. M\u1eb7c d\u00f9 v\u1ec1 m\u1eb7t l\u00fd thuy\u1ebft ta c\u00f3 th\u1ec3 t\u00ednh c\u1ee5 th\u1ec3 bi\u1ec3u th\u1ee9c c\u1ee7a h\u00e0m \\(f(N)\\) theo d\u1ea1ng \u0111\u00f3ng, bi\u1ec3u th\u1ee9c \u0111\u00f3 c\u00f3 th\u1ec3 r\u1ea5t ph\u1ee9c t\u1ea1p v\u00e0 kh\u00f4ng th\u1eadt s\u1ef1 c\u1ea7n thi\u1ebft. Trong th\u1ef1c t\u1ebf, ta ch\u1ec9 quan t\u00e2m t\u1edbi \u0111\u00e1nh gi\u00e1 \\(\\Theta\\) (ho\u1eb7c c\u1eadn tr\u00ean \\(O-l\u1edbn\\)) c\u1ee7a \u0111\u1ed9 t\u0103ng c\u1ee7a h\u00e0m \\(f\\). Th\u00f4ng th\u01b0\u1eddng c\u00e1c \u0111\u00e1nh gi\u00e1 n\u00e0y c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c m\u1ed9t c\u00e1ch kh\u00e1 thu\u1eadn l\u1ee3i n\u1ebfu ta n\u1eafm \u0111\u01b0\u1ee3c c\u00e1c ph\u01b0\u01a1ng ph\u00e1p t\u00ednh th\u00f4ng d\u1ee5ng.</p> <p>V\u00ec l\u00fd do tr\u00ean, ta s\u1ebd kh\u00f4ng c\u1ea7n t\u1edbi d\u1ea1ng ch\u00ednh x\u00e1c c\u1ee7a h\u00e0m \\(p\\) m\u00e0 ch\u1ec9 c\u1ea7n bi\u1ebft r\u1eb1ng \\(p(N) =  \\Theta(N)\\). Th\u00eam v\u00e0o \u0111\u00f3, ta kh\u00f4ng c\u1ea7n gi\u00e1 tr\u1ecb kh\u1edfi t\u1ea1o c\u1ee7a \\(p\\). Ta ch\u1ec9 c\u1ea7n bi\u1ebft r\u1eb1ng v\u1edbi \\(N\\) nh\u1ecf th\u00ec gi\u00e1 tr\u1ecb c\u1ee7a \\(p\\) s\u1ebd d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 h\u1eb1ng s\u1ed1.</p> <p>L\u00fd do \u0111\u1eb1ng sau vi\u1ec7c \u0111\u01a1n gi\u1ea3n h\u00f3a \\(p\\) nh\u01b0 tr\u00ean l\u00e0 do m\u1ed9t nh\u1eadn x\u00e9t: vi\u1ec7c thay \u0111\u1ed5i c\u00e1c gi\u00e1 tr\u1ecb kh\u1edfi t\u1ea1o ch\u1ec9 thay \u0111\u1ed5i nghi\u1ec7m c\u1ee7a c\u00f4ng th\u1ee9c truy h\u1ed3i ch\u1ee9 kh\u00f4ng thay \u0111\u1ed5i c\u1eadn tr\u00ean ti\u1ec7m c\u1eadn c\u1ee7a h\u00e0m s\u1ed1. (B\u1ea1n c\u00f3 th\u1ec3 th\u1eed b\u1eb1ng c\u00e1ch t\u00ecm m\u1ed9t h\u00e0m \\(p\\) b\u1ea5t k\u1ef3 v\u00e0 t\u00ednh \\(f(8)\\), \\(f(16)\\) v\u00e0 \\(f(32)\\) v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb \\(f(1)\\) kh\u00e1c nhau).</p> <p>B\u00ean c\u1ea1nh \u0111\u00f3, v\u00ec \u0111\u00e2y ch\u1ec9 l\u00e0 b\u00e0i vi\u1ebft mang t\u00ednh gi\u1edbi thi\u1ec7u n\u00ean ch\u00fang ta s\u1ebd kh\u00f4ng b\u00e0n \u0111\u1ebfn c\u00e1c l\u00fd thuy\u1ebft \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c ph\u00e9p l\u1ea5y ph\u1ea7n nguy\u00ean, l\u00e0m tr\u00f2n l\u00ean v\u00e0 l\u00e0m tr\u00f2n xu\u1ed1ng. Ta s\u1ebd \u0111\u01a1n gi\u1ea3n b\u1ecf qua c\u00e1c ph\u00e9p to\u00e1n \u0111\u00f3 (v\u00ed d\u1ee5 ta s\u1ebd coi c\u00e1c ph\u00e9p chia lu\u00f4n l\u00e0 chia l\u1ea5y nguy\u00ean v\u00e0 l\u00e0m tr\u00f2n xu\u1ed1ng).</p> <p>C\u00e1c b\u1ea1n c\u00f3 k\u1ef9 n\u0103ng to\u00e1n t\u1ed1t n\u00ean th\u1eed t\u1ef1 ch\u1ee9ng minh m\u1ec7nh \u0111\u1ec1 sau \u0111\u00e2y: n\u1ebfu \\(p\\) l\u00e0 h\u00e0m \u0111a th\u1ee9c (v\u1edbi \\(N\\) kh\u00f4ng \u00e2m) v\u00e0 \\(q(n) = p(n+1)\\) th\u00ec \\(q(n) = \\Theta(p(n))\\). M\u1ec7nh \u0111\u1ec1 tr\u00ean cho ph\u00e9p ta ch\u1ee9ng minh (v\u1edbi \\(f\\) b\u1ecb ch\u1eb7n tr\u00ean b\u1edfi m\u1ed9t h\u00e0m \u0111a th\u1ee9c) r\u1eb1ng v\u1ebf ph\u1ea3i c\u1ee7a c\u00f4ng th\u1ee9c truy h\u1ed3i c\u00f3 \u0111\u1ed9 t\u0103ng ti\u1ec7m c\u1eadn kh\u00f4ng thay \u0111\u1ed5i khi ta thay ph\u00e9p l\u00e0m tr\u00f2n xu\u1ed1ng b\u1edfi ph\u00e9p l\u00e0m tr\u00f2n l\u00ean.</p> <p>Nh\u1eadn \u0111\u1ecbnh tr\u00ean cho ph\u00e9p ta vi\u1ebft l\u1ea1i c\u00f4ng th\u1ee9c truy h\u1ed3i \u1edf tr\u00ean theo c\u00e1ch \u0111\u01a1n gi\u1ea3n h\u01a1n:</p> \\[ f(N) = 2f(N/2) + \\Theta(N) \\space\\space\\space(1) \\] <p>L\u01b0u \u00fd r\u1eb1ng \u0111\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t \"ph\u01b0\u01a1ng tr\u00ecnh\" theo ngh\u0129a truy\u1ec1n th\u1ed1ng. \u1ede ph\u1ea7n 1 ta \u0111\u00e3 th\u1ea5y r\u1eb1ng d\u1ea5u b\u1eb1ng \u1edf \u0111\u00e2y c\u00f3 ngh\u0129a l\u00e0 \"ti\u1ec7m c\u1eadn b\u1eb1ng\". Th\u00f4ng th\u01b0\u1eddng c\u00f3 r\u1ea5t nhi\u1ec1u h\u00e0m s\u1ed1 kh\u00e1c nhau th\u1ecfa m\u00e3n ph\u01b0\u01a1ng tr\u00ecnh tr\u00ean. Tuy nhi\u00ean t\u1ea5t c\u1ea3 c\u00e1c h\u00e0m s\u1ed1 \u0111\u00f3 s\u1ebd c\u00f3 c\u00f9ng \u0111\u1ed9 t\u0103ng - v\u00e0 \u0111\u00e2y ch\u00ednh l\u00e0 \u0111i\u1ec1u m\u00e0 ta h\u01b0\u1edbng t\u1edbi. T\u1ed5ng qu\u00e1t h\u01a1n, ta mu\u1ed1n t\u00ecm c\u1eadn tr\u00ean nh\u1ecf nh\u1ea5t c\u1ee7a \u0111\u1ed9 t\u0103ng c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c h\u00e0m s\u1ed1 th\u1ecfa m\u00e3n ph\u01b0\u01a1ng tr\u00ecnh tr\u00ean.</p> <p>Trong c\u00e1c ph\u1ea7n cu\u1ed1i c\u00f9ng c\u1ee7a b\u00e0i vi\u1ebft n\u00e0y, ta s\u1ebd b\u00e0n lu\u1eadn m\u1ed9t v\u00e0i ph\u01b0\u01a1ng ph\u00e1p gi\u1ea3i c\u00e1c \"ph\u01b0\u01a1ng tr\u00ecnh\" tr\u00ean. Tuy nhi\u00ean tr\u01b0\u1edbc \u0111\u00f3 ta s\u1ebd t\u00ecm hi\u1ec3u th\u00eam m\u1ed9t ch\u00fat v\u1ec1 c\u00e1c h\u00e0m logarit.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#luu-y-ve-ham-logarit","title":"L\u01b0u \u00fd v\u1ec1 h\u00e0m logarit","text":"<p>T\u1edbi \u0111\u00e2y b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1eb7t c\u00e2u h\u1ecfi: t\u00e1c gi\u1ea3 vi\u1ebft m\u1ed9t v\u00e0i thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 h\u00e0m logarit v\u00ed d\u1ee5 \\(O(NlogN)\\), v\u1eady c\u01a1 s\u1ed1 c\u1ee7a h\u00e0m logarit n\u00e0y l\u00e0 bao nhi\u00eau? T\u1ea1i sao ta kh\u00f4ng s\u1eed d\u1ee5ng c\u01a1 s\u1ed1 2 \u0111\u1ec3 c\u00f3 \\(O(Nlog_2N)\\)?</p> <p>C\u00e2u tr\u1ea3 l\u1eddi: c\u01a1 s\u1ed1 c\u1ee7a h\u00e0m logarit kh\u00f4ng quan tr\u1ecdng, t\u1ea5t c\u1ea3 cac h\u00e0m logarit (v\u1edbi c\u01a1 s\u1ed1 l\u1edbn h\u01a1n 1) \u0111\u1ec1u ti\u1ec7m c\u1eadn b\u1eb1ng nhau. L\u00fd do l\u00e0 hai h\u00e0m logarit kh\u00e1c nhau t\u1ef7 l\u1ec7 v\u1edbi nhau:</p> \\[     log_aN = \\frac{log_bN}{log_ba}          \\space\\space\\space(2) \\] <p>L\u01b0u \u00fd l\u00e0 v\u1edbi hai c\u01a1 s\u1ed1 \\(a, b &gt; 1\\) th\u00ec t\u1ef7 l\u1ec7 n\u00e0y l\u00e0 h\u1eb1ng s\u1ed1 \\(log_ba\\).</p> <p>Nh\u1eb1m m\u1ee5c \u0111\u00edch vi\u1ebft r\u00f5 r\u00e0ng v\u00e0 d\u1ec5 \u0111\u1ecdc, ta lu\u00f4n s\u1eed d\u1ee5ng k\u00fd hi\u1ec7u chung \\(logN\\) b\u00ean trong h\u00e0m \\(O-l\u1edbn\\), k\u1ec3 c\u1ea3 khi c\u00e1c h\u00e0m logarit kh\u00e1c nhau \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi t\u00ednh c\u1eadn c\u1ee7a \u0111\u1ed9 ph\u1ee9c t\u1ea1p.</p> <p>B\u00ean c\u1ea1nh \u0111\u00f3, \u00fd ngh\u0129a c\u1ee7a c\u00e1ch vi\u1ebft \\(logN\\) kh\u00e1c nhau gi\u1eefa c\u00e1c qu\u1ed1c gia kh\u00e1c nhau. \u0110\u1ec3 tr\u00e1nh nh\u1ea7m l\u1eabn ta quy \u01b0\u1edbc nh\u01b0 sau: \\(logN\\) \u0111\u1ec3 ch\u1ec9 c\u01a1 s\u1ed1 \\(10\\), \\(lnN\\) \u0111\u1ec3 ch\u1ec9 c\u01a1 s\u1ed1 t\u1ef1 nhi\u00ean, \\(lgN\\) cho c\u01a1 s\u1ed1 \\(2\\) v\u00e0 \\(log_bN\\) cho c\u00e1c tr\u01b0\u1eddng h\u1ee3p chung kh\u00e1c.</p> <p>Ti\u1ebfp theo \u0111\u00e2y ta s\u1ebd xem x\u00e9t m\u1ed9t ph\u00e0i m\u1eb9o bi\u1ebfn \u0111\u1ed5i h\u1eefu \u00edch \u0111\u01b0\u1ee3c d\u00f9ng trong c\u00e1c ph\u1ea7n sau. G\u1ecdi \\(a, b\\) l\u00e0 c\u00e1c h\u1eb1ng s\u1ed1 cho tr\u01b0\u1edbc v\u1edbi \\(a, b &gt; 1\\).</p> <p>T\u1eeb (2) ta c\u00f3:</p> \\[ log_ab = \\frac{log_bb}{log_ba} = \\frac{1}{log_ba} \\] <p>S\u1eed d\u1ee5ng t\u00ednh ch\u1ea5t tr\u00ean \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i \\(a^{log_bN}\\) ta \u0111\u01b0\u1ee3c: $$ a^{log_bN} = a^{log_aN/log_ab} = (a^{log_aN})^{1/log_ab} = N^{log_ba} \\space\\space\\space(3) $$</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#phuong-phap-thay-the","title":"Ph\u01b0\u01a1ng ph\u00e1p Thay Th\u1ebf","text":"<p>Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ed5ng k\u1ebft trong m\u1ed9t c\u00e2u: d\u1ef1 \u0111o\u00e1n c\u1eadn tr\u00ean (ti\u1ec7m c\u1eadn) c\u1ee7a \\(f\\) v\u00e0 (c\u1ed1 g\u1eafng) ch\u1ee9ng minh b\u1eb1ng quy n\u1ea1p.</p> <p>\u0110\u1ec3 minh h\u1ecda, ta s\u1ebd ch\u1ee9ng minh r\u1eb1ng h\u00e0m \\(f\\) th\u1ecfa m\u00e3n ph\u01b0\u01a1ng tr\u00ecnh (1) l\u00e0 \\(O(NlogN)\\) T\u1eeb (1) ta c\u00f3:</p> \\[ \\forall N; f(N) \\leq 2f(N/2) + cN \\] <p>v\u1edbi m\u1ed9t h\u1eb1ng s\u1ed1 \\(c\\) n\u00e0o \u0111\u00f3. Ta s\u1ebd ch\u1ee9ng minh r\u1eb1ng t\u1ed3n t\u1ea1i m\u1ed9t h\u1eb1ng s\u1ed1 \\(d\\) \u0111\u1ee7 l\u1edbn n\u00e0o \u0111\u00f3 m\u00e0 v\u1edbi m\u1ecdi \\(N\\) l\u1edbn ta c\u00f3 \\(f (N) \\leq dN lg N\\). Ta s\u1ebd ch\u1ee9ng minh b\u1eb1ng quy n\u1ea1p.</p> <p>Gi\u1ea3 s\u1eed \\(f (N/2) \\leq d (N/2)lg(N/2)\\). Ta c\u00f3:</p> <p></p> <p>N\u00f3i c\u00e1ch kh\u00e1c, ph\u00e9p quy n\u1ea1p s\u1ebd \u0111\u00fang n\u1ebfu \\(d&gt;c\\). Ta lu\u00f4n lu\u00f4n c\u00f3 th\u1ec3 ch\u1ecdn \\(d\\) l\u1edbn th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n n\u00e0y.</p> <p>\u0110\u1ec3 ho\u00e0n thi\u1ec7n ta c\u1ea7n ch\u1ee9ng minh r\u1eb1ng b\u1ea5t \u0111\u1eb3ng th\u1ee9c tr\u00ean \u0111\u00fang v\u1edbi m\u1ed9t v\u00e0i gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean c\u1ee7a \\(N\\). Ph\u00e9p ch\u1ee9ng minh kh\u00e1 ph\u1ee9c t\u1ea1p. \u00dd t\u01b0\u1edfng ch\u00ednh l\u00e0 n\u1ebfu gi\u00e1 tr\u1ecb \\(d\\) ta t\u00ecm \u0111\u01b0\u1ee3c ch\u01b0a \u0111\u1ee7 l\u1edbn, ta lu\u00f4n c\u00f3 th\u1ec3 t\u0103ng \\(d\\) sao cho c\u00e1c tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u ti\u00ean c\u1ee7a \\(N\\) th\u1ecfa m\u00e3n b\u1ea5t \u0111\u1eb3ng th\u1ee9c.</p> <p>L\u01b0u \u00fd r\u1eb1ng trong v\u00ed d\u1ee5 tr\u00ean ta kh\u00f4ng th\u1ec3 ch\u1ee9ng minh khi \\(N = 1\\) v\u1edbi v\u00ec \\(lg1 = 0\\). Tuy nhi\u00ean, \u0111i\u1ec1u n\u00e0y kh\u00f4ng \u1ea3nh h\u01b0\u1edfng t\u1edbi t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a ph\u00e9p ch\u1ee9ng minh tr\u00ean. K\u1ebft lu\u1eadn: t\u1eeb (1) ta c\u00f3  \\(f (N) = O(N lg N)\\).</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#phuong-phap-cay-e-quy","title":"Ph\u01b0\u01a1ng ph\u00e1p C\u00e2y \u0110\u1ec7 Quy","text":"<p>V\u1edbi m\u1ed9t ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u th\u00ec ph\u01b0\u01a1ng ph\u00e1p tr\u00ean kh\u00f4ng h\u1eefu d\u1ee5ng l\u1eafm. \u0110\u1ec3 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p Thay Th\u1ebf ta c\u1ea7n ph\u1ea3i c\u00f3 m\u1ed9t d\u1ef1 \u0111o\u00e1n t\u1ed1t v\u1ec1 c\u1eadn tr\u00ean c\u1ee7a \u0111\u1ed9 ph\u1ee9c t\u1ea1p, v\u00e0 \u0111\u1ec3 c\u00f3 d\u1ef1 \u0111o\u00e1n t\u1ed1t \u0111\u00f3 ta c\u1ea7n c\u00f3 m\u1ed9t v\u00e0i th\u00f4ng tin, hi\u1ec3u bi\u1ebft v\u1ec1 h\u00e0m \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u01b0\u1edbc. C\u00e2u h\u1ecfi l\u00e0, l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 thu th\u1eadp c\u00e1c hi\u1ec3u bi\u1ebft n\u00e0y? Tr\u01b0\u1edbc ti\u00ean ta s\u1ebd xem x\u00e9t k\u1ef9 h\u01a1n v\u1ec1 c\u01a1 ch\u1ebf ch\u1ea1y \u0111\u1ec7 quy c\u1ee7a n\u00f3 c\u1ee7a h\u00e0m s\u1ed1 tr\u00ean (b\u1eb1ng vi\u1ec7c ch\u1ea1y th\u1eed t\u1eebng b\u01b0\u1edbc \u0111\u1ec7 quy c\u1ee7a n\u00f3).</p> <p>Ta c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n c\u00e1c b\u01b0\u1edbc th\u1ef1c thi c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec7 quy tr\u00ean m\u1ed9t b\u1ed9 \u0111\u1ea7u v\u00e0o cho tr\u01b0\u1edbc b\u1eb1ng m\u1ed9t c\u00e2y c\u00f3 g\u1ed1c x\u00e1c \u0111\u1ecbnh. M\u1ed7i \u0111\u1ec9nh tr\u00ean c\u00e2y s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t b\u00e0i to\u00e1n con m\u00e0 ch\u01b0\u01a1ng tr\u00ecnh \u0111ang gi\u1ea3i. X\u00e9t m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u1ef3 tr\u00ean c\u00e2y. N\u1ebfu gi\u1ea3i b\u00e0i to\u00e1n thu\u1ed9c \u0111\u1ec9nh \u0111\u00f3 c\u1ea7n ph\u1ea3i g\u1ecdi \u0111\u1ec7 quy, \u0111\u1ec9nh \u0111\u00f3 s\u1ebd c\u00f3 c\u00e1c \u0111\u1ec9nh con t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c b\u00e0i to\u00e1n nh\u1ecf h\u01a1n n\u1eefa. G\u1ed1c c\u1ee7a c\u00e2y l\u00e0 b\u1ed9 \u0111\u1ea7u v\u00e0o, c\u00e1c l\u00e1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u00e1c b\u00e0i to\u00e1n c\u01a1 b\u1ea3n c\u00f3 th\u1ec3 gi\u1ea3i tr\u1ef1c ti\u1ebfp b\u1eb1ng c\u00e1c thu\u1eadt to\u00e1n th\u00f4ng th\u01b0\u1eddng (kh\u00f4ng \u0111\u1ec7 quy).</p> <p>Gi\u1ea3 s\u1eed ta \u0111\u00e1nh d\u1ea5u m\u1ed7i \u0111\u1ec9nh b\u1eb1ng m\u1ed9t nh\u00e3n bi\u1ec3u th\u1ecb \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u1ed9i t\u1ea1i c\u1ea7n c\u00f3 tr\u00ean \u0111\u1ec9nh \u0111\u00f3 (kh\u00f4ng t\u00ednh t\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy). R\u00f5 r\u00e0ng l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n g\u1ed1c b\u1eb1ng t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c nh\u00e3n c\u1ee7a c\u00e1c \u0111\u1ec9nh.</p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c ph\u1ea7n tr\u00ean, ta ch\u1ec9 quan t\u00e2m t\u1edbi c\u1eadn tr\u00ean ti\u1ec7m c\u1eadn. \u0110\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb n\u00e0y ta c\u00f3 th\u1ec3 \"l\u00e0m tr\u00f2n\" m\u1ed7i nh\u00e3n \u0111\u1ec3 vi\u1ec7c t\u00ednh t\u1ed5ng d\u1ec5 d\u00e0ng h\u01a1n. Ta minh h\u1ecda c\u00e1ch l\u00e0m tr\u00ean b\u1eb1ng m\u1ed9t v\u00e0i v\u00ed d\u1ee5 sau:</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-4","title":"V\u00ed d\u1ee5 4","text":"<p>C\u00e2y \u0111\u1ec7 quy cho thu\u1eadt to\u00e1n MergeSort \u1edf V\u00ed d\u1ee5 3 v\u1edbi 5 ph\u1ea7n t\u1eed. </p> <p>C\u00e2y \u0111\u1ec7 quy cho c\u00f4ng th\u1ee9c truy h\u1ed3i t\u01b0\u01a1ng \u1ee9ng c\u1ee7a MergeSort. S\u1ed1 trong m\u1ed7i \u0111\u1ec9nh bi\u1ec3u th\u1ecb s\u1ed1 b\u01b0\u1edbc m\u00e0 thu\u1eadt to\u00e1n th\u1ef1c thi t\u1ea1i \u0111\u1ec9nh \u0111\u00f3.</p> <p></p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-5","title":"V\u00ed d\u1ee5 5","text":"<p>C\u00e2y \u0111\u1ec7 quy trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh (1):</p> <p></p> <p>M\u1ed9t c\u00e1ch x\u1eed l\u00fd ph\u1ed5 bi\u1ebfn trong to\u00e1n t\u1ed5 h\u1ee3p l\u00e0 t\u00ednh t\u1ed5ng c\u00e1c c\u1ea5u h\u00ecnh theo th\u1ee9 t\u1ef1 m\u1edbi kh\u00e1c v\u1edbi th\u1ee9 t\u1ef1 m\u00e0 c\u00e1c t\u1ed5 h\u1ee3p \u0111\u01b0\u1ee3c t\u1ea1o ra. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta t\u00ednh t\u1ed5ng theo t\u1eebng m\u1ee9c tr\u00ean c\u00e2y (c\u00e1c \u0111\u1ec9nh c\u00f3 c\u00f9ng \u0111\u1ed9 s\u00e2u). Kh\u00f4ng kh\u00f3 \u0111\u1ec3 nh\u1eadn ra r\u1eb1ng t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf m\u1ed7i m\u1ee9c l\u00e0 \\(cN\\).</p> <p>C\u00e2u h\u1ecfi th\u1ee9 hai l\u00e0: c\u00e2y tr\u00ean c\u00f3 bao nhi\u00eau m\u1ee9c? R\u00f5 r\u00e0ng l\u00e0 l\u1edbp l\u00e1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi tr\u01b0\u1eddng h\u1ee3p c\u01a1 b\u1ea3n c\u1ee7a thu\u1eadt to\u00e1n. Ch\u00fa \u00fd l\u00e0 k\u00edch c\u1ee1 m\u1ea3ng c\u1ea7n x\u1eed l\u00fd gi\u1ea3m m\u1ed9t n\u1eeda khi \u0111i t\u1eeb m\u1ee9c tr\u00ean xu\u1ed1ng m\u1ee9c d\u01b0\u1edbi. V\u00ec sau \\(lgN\\) b\u01b0\u1edbc ta c\u00f3 b\u00e0i to\u00e1n c\u01a1 b\u1ea3n v\u1edbi m\u1ea3ng c\u00f3 \\(1\\) ph\u1ea7n t\u1eed, chi\u1ec1u cao c\u1ee7a c\u00e2y (t\u1ed5ng s\u1ed1 m\u1ee9c) s\u1ebd l\u00e0 \\(\\Theta(logN)\\).</p> <p>T\u1eeb hai nh\u1eadn x\u00e9t tr\u00ean ta thu \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng: t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ea7n th\u1ef1c hi\u1ec7n l\u00e0 $ \\Theta(cN log N) = \\Theta(N log N)$.</p> <p>N\u1ebfu b\u1ea1n ch\u01b0a ho\u00e0n to\u00e0n tin t\u01b0\u1edfng v\u00e0o k\u1ebft qu\u1ea3 v\u1eeba thu \u0111\u01b0\u1ee3c th\u00ec c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p Thay Th\u1ebf \u1edf tr\u00ean \u0111\u1ec3 ki\u1ec3m tra l\u1ea1i. Trong ph\u1ea7n sau ta s\u1ebd th\u1ea5y l\u00e0 t\u1ed3n t\u1ea1i nh\u1eefng \u0111\u1ecbnh l\u00fd c\u1ee5 th\u1ec3 \u0111\u1ec3 c\u00f3 th\u1ec3 ch\u1ee9ng minh ch\u1eb7t ch\u1ebd k\u1ebft qu\u1ea3 thu \u0111\u01b0\u1ee3c \u1edf tr\u00ean.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#cay-e-quy-mo-rong","title":"C\u00e2y \u0110\u1ec7 Quy m\u1edf r\u1ed9ng","text":"<p>V\u00ed d\u1ee5 5 \u1edf tr\u00ean cho ta m\u1ed9t c\u00e2u h\u1ecfi: vi\u1ec7c t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf m\u1ed7i m\u1ee9c c\u1ee7a c\u00e2y b\u1eb1ng nhau c\u00f3 ph\u1ea3i l\u00e0 tr\u00f9ng h\u1ee3p hay kh\u00f4ng?</p> <p>Tr\u1ea3 l\u1eddi: Kh\u00f4ng v\u00e0 C\u00f3. Kh\u00f4ng, v\u00ec m\u1ed9t l\u00fd do \u0111\u01a1n gi\u1ea3n m\u00e0 ta s\u1ebd xem \u1edf ph\u1ea7n sau. C\u00f3, v\u00ec kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o t\u1ed5ng c\u00e1c m\u1ee9c c\u0169ng b\u1eb1ng nhau nh\u01b0 v\u1eady - hai v\u00ed d\u1ee5 sau \u0111\u00e2y s\u1ebd minh h\u1ecda cho \u0111i\u1ec1u \u0111\u00f3.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-6","title":"V\u00ed d\u1ee5 6","text":"<p>Ta th\u1eed \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p C\u00e2y \u0110\u1ec7 Quy \u0111\u1ec3 gi\u1ea3i cho ph\u01b0\u01a1ng tr\u00ecnh sau: $$ f(N) = 3f(N/2) + \\Theta(N^3) $$</p> <p>C\u00e2y \u0111\u1ec7 quy s\u1ebd c\u00f3 d\u1ea1ng sau:</p> <p></p> <p>Th\u1eed t\u00ednh to\u00e1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ea1i v\u00e0i m\u1ee9c \u0111\u1ea7u ti\u00ean, ta c\u00f3:</p> level 1 2 3 \u2026 work $cN$ $ {3\\over 8}cN^3 $ $ {3^2 \\over 8^2}cN^3 $ ... <p>R\u00f5 r\u00e0ng l\u00e0 ta c\u00e0ng \u0111i s\u00e2u xu\u1ed1ng c\u00e2y th\u00ec t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u00e0ng gi\u1ea3m. V\u1eady t\u1ed1c \u0111\u1ed9 gi\u1ea3m l\u00e0 bao nhi\u00eau? Khi ta \u0111i xu\u1ed1ng m\u1ed9t m\u1ee9c th\u00ec s\u1ebd ph\u1ea3i gi\u1ea3i s\u1ed1 b\u00e0i to\u00e1n con g\u1ea5p ba l\u1ea7n s\u1ed1 b\u00e0i to\u00e1n \u1edf m\u1ee9c hi\u1ec7n t\u1ea1i. Tuy nhi\u00ean, v\u00ec m\u1ed7i b\u00e0i to\u00e1n con ch\u1ec9 ph\u1ea3i gi\u1ea3i c\u00f3 k\u00edch c\u1ee1 gi\u1ea3m m\u1ed9t n\u1eeda, n\u00ean th\u1eddi gian c\u1ea7n \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n con gi\u1ea3m c\u00f2n b\u1eb1ng \\(1 \\over 8\\) b\u00e0i to\u00e1n cha. Nh\u01b0 v\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p gi\u1ea3m theo h\u1ec7 s\u1ed1 \\(3 \\over 8\\).</p> <p>\u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 to\u00e0n b\u1ed9 b\u1ea3ng s\u1ed1 \u1edf tr\u00ean s\u1ebd h\u00ecnh th\u00e0nh m\u1ed9t d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n. Gi\u1ea3 s\u1eed r\u1eb1ng d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n \u0111\u00f3 t\u0103ng t\u1edbi v\u00f4 c\u00f9ng. T\u1ed5ng c\u1ee7a d\u00e3y s\u1ebd l\u00e0:</p> \\[ S = \\frac{cN^3}{1 - \\frac{3}{8}} = \\frac{8}{5}cN^3 = \\Theta(N^3) \\] <p>Nh\u01b0 v\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean c\u00e2y \u0111\u1ec7 quy l\u00e0 \\(O(N^3)\\) (t\u1ed5ng t\u1edbi v\u00f4 c\u00f9ng cho ta c\u1eadn tr\u00ean). Ta c\u0169ng th\u1ea5y l\u00e0 ngay ph\u1ea7n t\u1eeb \u0111\u1ea7u ti\u00ean c\u1ee7a d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n \u0111\u00e3 l\u00e0 $ \\Theta(N^3)$. V\u1eady ta k\u1ebft lu\u1eadn t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e2y \u0111\u1ec7 quy tr\u00ean l\u00e0 $ \\Theta(N^3)$.</p> <p>M\u1ed9t nguy\u00ean l\u00fd t\u1ed5ng qu\u00e1t quan tr\u1ecdng ta c\u00f3 th\u1ec3 r\u00fat ra t\u1eeb v\u00ed d\u1ee5 n\u00e0y l\u00e0: n\u1ebfu t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c m\u1ee9c c\u1ee7a c\u00e2y t\u1ea1o n\u00ean m\u1ed9t d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n gi\u1ea3m, th\u00ec t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean c\u1ea3 c\u00e2y s\u1ebd ti\u1ec7m c\u1eadn b\u1eb1ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf g\u1ed1c c\u1ee7a c\u00e2y.</p> <p>T\u1eeb k\u1ebft qu\u1ea3 tr\u00ean ta c\u00f3 m\u1ed9t nh\u1eadn x\u00e9t quan tr\u1ecdng v\u1ec1 thu\u1eadt to\u00e1n \u0111\u1ec7 quy bi\u1ec3u di\u1ec5n b\u1eb1ng c\u00f4ng th\u1ee9c truy h\u1ed3i c\u00f3 t\u00ednh ch\u1ea5t tr\u00ean: l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy gi\u1ea3i b\u00e0i to\u00e1n con kh\u00f4ng t\u1ed1n th\u1eddi gian th\u1ef1c thi b\u1eb1ng vi\u1ec7c chu\u1ea9n b\u1ecb l\u1eddi g\u1ecdi v\u00e0 x\u1eed l\u00fd sau l\u1eddi g\u1ecdi \u0111\u1ec7 quy. (N\u00f3i c\u00e1ch kh\u00e1c, n\u1ebfu ta c\u1ea7n c\u1ea3i ti\u1ebfn thu\u1eadt to\u00e1n th\u00ec ph\u1ea3i t\u1eadp trung t\u1ed1i h\u01b0u h\u00f3a hai vi\u1ec7c \u0111\u00f3).</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-7","title":"V\u00ed d\u1ee5 7","text":"<p>Gi\u1edd ch\u00fang ta c\u00f9ng th\u1eed \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p C\u00e2y \u0110\u1ec7 Quy \u0111\u1ec3 gi\u1ea3i ph\u01b0\u01a1ng tr\u00ecnh sau: $$ f(N) = 5f(N/3) + \\Theta(N) $$ C\u00e2y \u0111\u1ec7 quy s\u1ebd c\u00f3 d\u1ea1ng sau </p> <p>Nh\u01b0 tr\u00ean, th\u1eed t\u00ednh s\u1ed1 l\u1ec7nh c\u1ea7n th\u1ef1c thi \u1edf v\u00e0i m\u1ee9c \u0111\u1ea7u ti\u00ean. Ta c\u00f3:</p> level 1 2 3 \u2026 work $cN$ ${5\\over 3}cN$ ${5^2 \\over 3^2}cN$ ... <p>Ta c\u00f3 k\u1ebft qu\u1ea3 ng\u01b0\u1ee3c v\u1edbi v\u00ed d\u1ee5 6: khi ta c\u00e0ng \u0111i s\u00e2u xu\u1ed1ng d\u01b0\u1edbi th\u00ec t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u1ea1i c\u00e0ng t\u0103ng l\u00ean. Khi ta \u0111i xu\u1ed1ng m\u1ed9t  m\u1ee9c, s\u1ebd c\u00f3 g\u1ea5p \\(5\\) l\u1ea7n s\u1ed1 b\u00e0i to\u00e1n con, m\u1ed7i b\u00e0i to\u00e1n con s\u1ebd c\u00f3 k\u00edch c\u1ee1 b\u1eb1ng \\(1 \\over 3\\) b\u00e0i to\u00e1n cha. V\u00ec th\u1eddi gian x\u1eed l\u00fd l\u00e0 tuy\u1ebfn t\u00ednh v\u1edbi k\u00edch c\u1ee1 b\u00e0i to\u00e1n n\u00ean ta c\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf m\u1ee9c sau t\u0103ng g\u1ea5p $5 \\over 3 $ m\u1ee9c tr\u01b0\u1edbc.</p> <p>V\u1eabn nh\u01b0 tr\u00ean ta h\u01b0\u1edbng t\u1edbi vi\u1ec7c t\u00ednh t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean c\u1ea3 c\u00e2y. L\u1ea7n n\u00e0y vi\u1ec7c t\u00ednh to\u00e1n s\u1ebd kh\u00f3 h\u01a1n v\u00ec l\u01b0\u1ee3ng c\u00f4ng vi\u1ec7c ph\u1ea3i t\u00ednh n\u1eb1m \u1edf m\u1ee9c s\u00e2u nh\u1ea5t. Ta c\u1ea7n bi\u1ebft \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y.</p> <p>M\u1ee9c th\u1ea5p nh\u1ea5t t\u01b0\u01a1ng \u1ee9ng b\u00e0i to\u00e1n k\u00edch c\u1ee1 b\u1eb1ng \\(1\\). T\u1ed5ng qu\u00e1t, k\u00edch c\u1ee1 b\u00e0i to\u00e1n con \u1edf m\u1ee9c \\(k\\) l\u00e0 \\(N \\over 3^k\\). Gi\u1ea3i ph\u01b0\u01a1ng tr\u00ecnh \\(1 = N \\over 3^k\\) ta \u0111\u01b0\u1ee3c \\(k = log_3N\\). L\u01b0u \u00fd l\u00e0 \u1edf \u0111\u00e2y ta vi\u1ebft r\u00f5 ch\u1ec9 c\u01a1 s\u1ed1 c\u1ee7a h\u00e0m logarit v\u00ec c\u01a1 s\u1ed1 n\u00e0y quan tr\u1ecdng trong vi\u1ec7c ph\u1ea3n \u00e1nh c\u1ea5u tr\u00fac c\u00e2y.</p> <p>Nh\u01b0 v\u1eady c\u00e2y \u0111\u1ec7 quy c\u00f3 \\(log_3N\\) m\u1ee9c. M\u1ed7i m\u1ee9c c\u00f3 \\(5\\) l\u1ea7n s\u1ed1 \u0111\u1ec9nh so v\u1edbi m\u1ee9c tr\u00ean n\u00f3, n\u00ean m\u1ee9c cu\u1ed1i c\u00f9ng c\u00f3 \\(5^{log_3N}\\) \u0111\u1ec9nh. T\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf m\u1ee9c cu\u1ed1i t\u01b0\u01a1ng \u1ee9ng l\u00e0 \\(c5^{log_3N}\\).</p> <p>S\u1eed d\u1ee5ng ph\u01b0\u01a1ng tr\u00ecnh (3) ta vi\u1ebft l\u1ea1i gi\u00e1 tr\u1ecb n\u00e0y l\u00e0 \\(cN^{log_35}\\).</p> <p>\u0110\u1ec3 t\u00ednh t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean to\u00e0n c\u00e2y ta \u0111\u1ea3o ng\u01b0\u1ee3c c\u00e2y, t\u1ea1o th\u00e0nh m\u1ed9t d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n gi\u1ea3m v\u00e0 nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng c\u00e1ch t\u00ednh \u1edf tr\u00ean. X\u1eed l\u00fd t\u01b0\u01a1ng t\u1ef1 v\u00ed d\u1ee5 tr\u01b0\u1edbc \u0111\u00f3 ta thu \u0111\u01b0\u1ee3c t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb ti\u1ec7m c\u1eadn b\u1eb1ng v\u1edbi ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t trong d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n.</p> <p>Ta k\u1ebft lu\u1eadn r\u1eb1ng t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n bi\u1ec3u di\u1ec5n b\u1edfi ph\u01b0\u01a1ng tr\u00ecnh tr\u00ean l\u00e0 x\u1ea5p x\u1ec9 $\\Theta(N^{log_35}) \\approx \\Theta(N^{1.465}) $.</p> <p>L\u01b0u \u00fd l\u00e0 c\u01a1 s\u1ed1 3 trong h\u00e0m logarit cho ta k\u1ebft qu\u1ea3 m\u0169 ch\u00ednh x\u00e1c, v\u00ec v\u1eady c\u01a1 s\u1ed1 n\u00e0y r\u1ea5t quan tr\u1ecdng. N\u1ebfu l\u00e0 c\u01a1 s\u1ed1 kh\u00e1c th\u00ec gi\u00e1 tr\u1ecb ti\u1ec7m c\u1eadn c\u0169ng s\u1ebd thay \u0111\u1ed5i.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#inh-ly-tong-quat","title":"\u0110\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t","text":"<p>T\u1eeb c\u00e1c v\u00ed d\u1ee5 tr\u00ean ch\u00fang ta \u0111\u00e3 th\u1ea5y m\u1ed9t quy lu\u1eadt gi\u1ea3i c\u00e1c c\u00f4ng th\u1ee9c truy h\u1ed3i. Cho m\u1ed9t c\u00f4ng th\u1ee9c truy h\u1ed3i, l\u1eadp c\u00e2y \u0111\u1ec7 quy t\u01b0\u01a1ng \u1ee9ng v\u00e0 t\u00ednh t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean m\u1ed7i m\u1ee9c. K\u1ebft qu\u1ea3 thu \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 m\u1ed9t d\u00e3y c\u1ea5p s\u1ed1 nh\u00e2n. N\u1ebfu \u0111\u00f3 l\u00e0 d\u00e3y gi\u1ea3m, t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean to\u00e0n c\u00e2y s\u1ebd t\u1ef7 l\u1ec7 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a \u0111\u1ec9nh g\u1ed1c. N\u1ebfu l\u00e0 d\u00e3y t\u0103ng, t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd t\u1ef7 l\u1ec7 v\u1edbi  t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf c\u00e1c l\u00e1. N\u1ebfu l\u00e0 d\u00e3y kh\u00f4ng \u0111\u1ed5i th\u00ec t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 (\u0111\u1ed9 ph\u1ee9c t\u1ea1p tr\u00ean m\u1ed9t m\u1ee9c) nh\u00e2n v\u1edbi (chi\u1ec1u cao c\u00e2y).</p> <p>Trong th\u1ef1c t\u1ebf s\u1ebd c\u00f3 m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p m\u00e0 quy lu\u1eadt tr\u00ean g\u1eb7p kh\u00f3 kh\u0103n, tuy nhi\u00ean h\u1ea7u h\u1ebft s\u1ebd ch\u1ec9 c\u00f3 m\u1ed9t trong ba tr\u01b0\u1eddng h\u1ee3p tr\u00ean x\u1ea3y ra. Th\u00eam v\u00e0o \u0111\u00f3, ta c\u00f3 c\u01a1 s\u1edf \u0111\u1ec3 ch\u1ee9ng minh quy lu\u1eadt tr\u00ean m\u1ed9t c\u00e1ch ch\u1eb7t ch\u1ebd. C\u01a1 s\u1edf ch\u00ednh th\u1ed1ng c\u1ee7a quy lu\u1eadt tr\u00ean \u0111\u01b0\u1ee3c bi\u1ebft \u0111\u1ebfn v\u1edbi c\u00e1i t\u00ean \u0110\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t.</p> <p>\u0110\u1ec3 thu\u1eadn ti\u1ec7n b\u00e0i vi\u1ebft n\u00e0y s\u1ebd tr\u00ecnh b\u00e0y \u0111\u1ea7y \u0111\u1ee7 v\u1ec1 \u0111\u1ecbnh l\u00fd n\u00e0y. (L\u01b0u \u00fd l\u00e0 ta kh\u00f4ng c\u1ea7n bi\u1ebft ch\u1ee9ng minh c\u1ee7a n\u00f3 \u0111\u1ec3 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng v\u00e0o gi\u1ea3i c\u00f4ng th\u1ee9c truy h\u1ed3i).</p> <p>Cho \\(a \\geq 1\\) v\u00e0 \\(b &gt; 1\\) l\u00e0 hai h\u1eb1ng s\u1ed1 nguy\u00ean d\u01b0\u01a1ng. G\u1ecdi \\(p\\) l\u00e0 m\u1ed9t h\u00e0m s\u1ed1 nguy\u00ean kh\u00f4ng gi\u1ea3m. G\u1ecdi \\(f\\) l\u00e0 m\u1ed9t h\u00e0m s\u1ed1 b\u1ea5t k\u1ef3 th\u1ecfa m\u00e3n</p> <p>$$ f(N) = af(N/b) + p(N) $$ Ta c\u00f3 k\u1ebft qu\u1ea3 sau:</p> <ol> <li>N\u1ebfu \\(p(N) = O(N^{(log_ba) - \\varepsilon})\\) v\u1edbi m\u1ed9t s\u1ed1 $ \\varepsilon$ &gt; 0 n\u00e0o \u0111\u00f3 th\u00ec \\(f(N) = \\Theta(N^{log_ba})\\)</li> <li>N\u1ebfu \\(p(N) = O(N^{(log_ba) - \\varepsilon})\\)  th\u00ec \\(f (N) = \\Theta(p(N)log N)\\).</li> <li>N\u1ebfu \\(p(N) = \\Omega(N^{(log_ba) - \\varepsilon})\\) v\u1edbi m\u1ed9t s\u1ed1 $ \\varepsilon$ &gt; 0 n\u00e0o \u0111\u00f3, v\u00e0 n\u1ebfu \\(ap(N/b) \\leq cp(N)\\) v\u1edbi \\(c &lt; 1\\) khi \\(N\\) \u0111\u1ee7 l\u1edbn th\u00ec $ f (N) = \\Theta(p(N))$.</li> </ol> <p>Tr\u01b0\u1eddng h\u1ee3p \\(1\\) t\u01b0\u01a1ng v\u1edbi V\u00ed d\u1ee5 7. H\u1ea7u h\u1ebft th\u1eddi gian th\u1ef1c thi \u0111\u01b0\u1ee3c d\u00e0nh cho vi\u1ec7c g\u1ecdi l\u1ec7nh \u0111\u1ec7 quy v\u00e0 s\u1ed1 l\u1ea7n g\u1ecdi \u0111\u1ec7 quy l\u00e0 \u0111\u00e1ng k\u1ec3.</p> <p>Tr\u01b0\u1eddng h\u1ee3p \\(2\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi V\u00ed d\u1ee5 5. Th\u1eddi gian d\u00e0nh cho vi\u1ec7c g\u1ecdi \u0111\u1ec7 quy x\u1ea5p x\u1ec9 b\u1eb1ng th\u1eddi gian \u0111\u1ec3 chu\u1ea9n b\u1ecb cho l\u1ec7nh g\u1ecdi \u0111\u1ec7 quy v\u00e0 x\u1eed l\u00fd sau \u0111\u00f3. Tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c m\u1ee9c c\u1ee7a c\u00e2y ta c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p x\u1ea5p x\u1ec9 b\u1eb1ng nhau, chi\u1ec1u cao c\u00e2y lu\u00f4n l\u00e0 m\u1ed9t h\u00e0m logarit c\u1ee7a k\u00edch c\u1ee1 t\u1eadp \u0111\u1ea7u v\u00e0o.</p> <p>Tr\u01b0\u1eddng h\u1ee3p \\(3\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi V\u00ed d\u1ee5 6. H\u1ea7u h\u1ebft th\u1eddi gian th\u1ef1c thi \u0111\u01b0\u1ee3c d\u00e0nh cho vi\u1ec7c chu\u1ea9n b\u1ecb \u0111\u1ec3 g\u1ecdi l\u1ec7nh \u0111\u1ec7 quy v\u00e0 x\u1eed l\u00fd k\u1ebft qu\u1ea3 sau \u0111\u00f3. Th\u00f4ng th\u01b0\u1eddng th\u00ec t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd ti\u1ec7m c\u1eadn b\u1eb1ng v\u1edbi th\u1eddi gian th\u1ef1c thi \u1edf \u0111\u1ec9nh g\u1ed1c c\u1ee7a c\u00e2y.</p> <p>L\u01b0u \u00fd \u0111i\u1ec1u ki\u1ec7n th\u00eam v\u00e0o \u1edf tr\u01b0\u1eddng h\u1ee3p \\(3\\). \u0110\u1ec3 tr\u01b0\u1eddng h\u1ee3p \\(3\\) \u0111\u00fang ta c\u1ea7n c\u00f3 \u0111i\u1ec1u ki\u1ec7n c\u1ee7a h\u00e0m \\(p\\) ph\u1ea3i th\u1ecfa m\u00e3n th\u1eddi gian th\u1ef1c thi h\u00e0m \\(p\\) l\u1edbn h\u01a1n t\u1ed5ng th\u1eddi gian th\u1ef1c thi \u1edf c\u00e1c \u0111\u1ec9nh con ch\u00e1u. Th\u1eadt ra \u0111\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t v\u1ea5n \u0111\u1ec1 c\u1ea7n ph\u1ea3i ch\u00fa t\u00e2m qu\u00e1 nhi\u1ec1u b\u1edfi trong c\u00e1c k\u1ef3 thi c\u00e1c h\u00e0m \\(p\\) m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 g\u1eb7p h\u1ea7u nh\u01b0 s\u1ebd th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n tr\u00ean (n\u1ebfu r\u01a1i v\u00e0o tr\u01b0\u1eddn h\u1ee3p \\(3\\)).</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-8","title":"V\u00ed d\u1ee5 8","text":"<p>G\u1ecdi \\(f(N)\\) l\u00e0 th\u1eddi gian m\u00e0 thu\u1eadt to\u00e1n nh\u00e2n ma tr\u1eadn Strassen c\u1ea7n \u0111\u1ec3 nh\u00e2n hai ma tr\u1eadn vu\u00f4ng k\u00edch c\u1ee1 \\(N\\) x \\(N\\). \u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n \u0111\u1ec7 quy, th\u1ef1c hi\u1ec7n \\(7\\) l\u1eddi g\u1ecdi h\u00e0m \u0111\u1ec7 quy, m\u1ed7i h\u00e0m nh\u00e2n hai ma tr\u1eadn c\u00f3 k\u00edch c\u1ee1 \\(N/2\\) x \\(N/2\\) v\u00e0 sau \u0111\u00f3 t\u1ed5ng h\u1ee3p k\u1ebft qu\u1ea3 trong \\(\\Theta(N^2)\\).</p> <p>Ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i sau:</p> \\[ f(N) = 7f(N/2) + \\Theta(N^2) \\] <p>S\u1eed d\u1ee5ng \u0111\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t, ta th\u1ea5y Tr\u01b0\u1eddng h\u1ee3p \\(1\\) c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c. V\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Strassen l\u00e0 \\(\\Theta(N^{log_27}) \\approx \\Theta({N^{2.807}})\\). L\u01b0u \u00fd l\u00e0 thu\u1eadt to\u00e1n c\u1ed5 \u0111i\u1ec3n nh\u00e2n ma tr\u1eadn theo \u0111\u1ecbnh ngh\u0129a c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p $ \\Theta(N^3)$.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#vi-du-9","title":"V\u00ed d\u1ee5 9","text":"<p>Th\u1ec9nh tho\u1ea3ng ta c\u00f3 th\u1ec3 g\u1eb7p tr\u01b0\u1eddng h\u1ee3p m\u00e0 k\u00edch c\u1ee1 c\u00e1c b\u00e0i to\u00e1n con kh\u00f4ng b\u1eb1ng nhau. M\u1ed9t v\u00ed d\u1ee5 l\u00e0 thu\u1eadt to\u00e1n Trung v\u1ecb c\u1ee7a 5 \u0111\u1ec3 t\u00ecm ph\u1ea7n t\u1eed l\u1edbn th\u1ee9 k c\u1ee7a m\u1ed9t m\u1ea3ng s\u1ed1. Thu\u1eadt to\u00e1n tr\u00ean \u0111\u01b0\u1ee3c ch\u1ee9ng minh l\u00e0 c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1ecfa m\u00e3n c\u00f4ng th\u1ee9c</p> \\[ f(N) = f(N/5) + f(7N/10 + 6) + \\Theta(N) \\] <p>C\u00f4ng th\u1ee9c tr\u00ean gi\u1ea3i nh\u01b0 th\u1ebf n\u00e0o? Ph\u01b0\u01a1ng ph\u00e1p c\u00e2y \u0110\u1ec7 Quy c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong tr\u01b0\u1eddng h\u1ee3p b\u1ea5t \u0111\u1ed1i x\u1ee9ng nh\u01b0 v\u1eady kh\u00f4ng? C\u00f3 m\u1ed9t phi\u00ean b\u1ea3n t\u1ed5ng qu\u00e1t h\u01a1n c\u1ee7a \u0110\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t \u00e1p d\u1ee5ng cho tr\u01b0\u1eddng h\u1ee3p nh\u01b0 v\u1eady hay kh\u00f4ng? V\u00e0 trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p m\u00e0 \u0111\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t kh\u00f4ng \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c, \u0111i\u1ec3n h\u00ecnh l\u00e0 v\u1edbi c\u00f4ng th\u1ee9c \\(f (N) = 4f (N/4) + \\Theta(N log N)\\), ta c\u1ea7n x\u1eed l\u00fd th\u1ebf n\u00e0o?</p> <p>Ch\u00fang ta s\u1ebd kh\u00f4ng tr\u1ea3 l\u1eddi c\u00e1c c\u00e2u h\u1ecfi tr\u00ean t\u1ea1i \u0111\u00e2y, v\u00e0 t\u00e0i li\u1ec7u n\u00e0y c\u0169ng kh\u00f4ng ph\u1ea3i l\u00e0 t\u00e0i li\u1ec7u duy nh\u1ea5t v\u1ec1 ch\u1ee7 \u0111\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n. N\u1ebfu b\u1ea1n \u0111ang th\u1eafc m\u1eafc v\u1ec1 c\u00e1c c\u00e2u h\u1ecfi tr\u00ean th\u00ec b\u1ea1n \u0111\u00e3 n\u1eafm \u0111\u01b0\u1ee3c c\u01a1 b\u1ea3n \u0111\u1ee7 \u0111\u1ec3 s\u1eed d\u1ee5ng trong c\u00e1c k\u1ef3 thi thu\u1eadt to\u00e1n. N\u1ebfu b\u1ea1n mu\u1ed1n tr\u1ea3 l\u1eddi c\u00e1c c\u00e2u h\u1ecfi tr\u00ean th\u00ec c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ecdc trong c\u00e1c s\u00e1ch ch\u00ednh th\u1ed1ng.</p>"},{"location":"translate/topcoder/Computational-Complexity-Section-2/#loi-nguoi-dich","title":"L\u1eddi ng\u01b0\u1eddi d\u1ecbch","text":"<p>Trong b\u00e0i vi\u1ebft 2 ph\u1ea7n n\u00e0y t\u00e1c gi\u1ea3 misof \u0111\u00e3 gi\u1edbi thi\u1ec7u kh\u00e1 \u0111\u1ea7y \u0111\u1ee7 v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n \u0111\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng trong c\u00e1c k\u1ef3 thi l\u1eadp tr\u00ecnh. T\u00e1c gi\u1ea3 \u0111\u00e3 b\u1ecf qua m\u1ed9t v\u00e0i \u0111i\u1ec3m nh\u01b0 x\u1eed l\u00fd ph\u1ea7n nguy\u00ean, ch\u1ee9ng minh \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1eb1ng ph\u00e9p t\u00ednh l\u1ea5y gi\u1edbi h\u1ea1n, l\u1eddi gi\u1ea3i cho ph\u1ea7n 1 c\u1ee7a V\u00ed d\u1ee5 9 (xem l\u1eddi gi\u1ea3i t\u1ea1i \u0111\u00e2y), \u0111\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t m\u1edf r\u1ed9ng (d\u00f9ng \u0111\u1ec3 gi\u1ea3i ph\u1ea7n 2 c\u1ee7a v\u00ed d\u1ee5 9) v\u00e0 m\u1ed9t v\u00e0i chi ti\u1ebft kh\u00e1c. B\u1ea1n \u0111\u1ecdc quan t\u00e2m t\u1edbi c\u00e1c ph\u1ea7n b\u1ecb b\u1ecf qua c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ecdc cu\u1ed1n Introduction to Algorithm, 3rd edition link th\u01b0\u1eddng \u0111\u01b0\u1ee3c bi\u1ebft \u0111\u1ebfn v\u1edbi t\u00ean g\u1ecdi CLRS (4 ch\u1eef c\u00e1i \u0111\u1ea7u t\u00ean c\u1ee7a 4 t\u00e1c gi\u1ea3), h\u00ecnh nh\u01b0 \u0111\u00e3 c\u00f3 b\u1ea3n d\u1ecbch ti\u1ebfng Vi\u1ec7t. C\u00e1c b\u1ea1n y\u00eau th\u00edch h\u1ecdc tr\u1ef1c tuy\u1ebfn c\u00f3 th\u1ec3 t\u00ecm kh\u00f3a Analysis and Design of Algorithms tr\u00ean trang web mentorsnet.org (b\u1eb1ng ti\u1ebfng Anh), \u0111\u00e2y l\u00e0 kh\u00f3a h\u1ecdc c\u1ee7a gi\u1ea3ng vi\u00ean \u1ea4n \u0110\u1ed9 v\u00e0 h\u1ecd c\u00f3 slides b\u00e0i gi\u1ea3ng r\u1ea5t chi ti\u1ebft g\u1ed3m c\u1ea3 to\u00e0n b\u1ed9 ch\u1ee9ng minh c\u1ee7a \u0111\u1ecbnh l\u00fd T\u1ed5ng Qu\u00e1t c\u01a1 b\u1ea3n v\u00e0 m\u1edf r\u1ed9ng. Ngo\u00e0i ra, sau khi \u0111\u00e3 thu\u1ea7n th\u1ee5c v\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u00ednh to\u00e1n c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 c\u00e1c kh\u00e1i ni\u1ec7m l\u1edbp \\(P\\) v\u00e0 \\(NP, NP-Hard, NP-Complete\\). Hi\u1ec3u bi\u1ebft v\u1ec1 \\(P\\) v\u00e0 \\(NP\\) s\u1ebd gi\u00fap c\u00e1c b\u1ea1n ti\u1ebfp c\u1eadn v\u1edbi m\u1ed9t d\u1ea1ng b\u00e0i \u0111ang tr\u1edf n\u00ean ph\u1ed5 bi\u1ebfn g\u1ea7n \u0111\u00e2y l\u00e0 tham s\u1ed1 c\u1ed1 \u0111\u1ecbnh kh\u1ea3 t\u00ednh (fixed-parameter-tractability hay FPT). B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u v\u1ec1 FPT qua b\u00e0i vi\u1ebft tr\u00ean blog c\u1ee7a Petr \u1edf \u0111\u00e2y. Ti\u1ec1m n\u0103ng c\u1ee7a FPT theo m\u00ecnh ngh\u0129 l\u00e0 r\u1ea5t l\u1edbn v\u1edbi \u1ee9ng d\u1ee5ng kh\u00f4ng ch\u1ec9 trong vi\u1ec7c thi c\u00e1c k\u1ef3 thi thu\u1eadt to\u00e1n m\u00e0 c\u00f2n trong gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n th\u1ef1c t\u1ebf.</p>"},{"location":"translate/topcoder/Greedy-is-Good/","title":"Thu\u1eadt to\u00e1n Tham lam","text":"<p>Ngu\u1ed3n b\u00e0i: Topcoder</p>"},{"location":"translate/topcoder/Greedy-is-Good/#vi-du-minh-hoa","title":"V\u00ed d\u1ee5 minh h\u1ecda","text":"<p>John Smith \u0111ang g\u1eb7p r\u1eafc r\u1ed1i! Anh \u1ea5y l\u00e0 m\u1ed9t th\u00e0nh vi\u00ean c\u1ee7a Topcoder v\u00e0 sau khi h\u1ecdc c\u00e1ch \u0111\u1ec3 tr\u1edf th\u00e0nh b\u1eadc th\u1ea7y trong vi\u1ec7c \u0111\u1ed1i ph\u1ed1i v\u1edbi c\u00e1c b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng, anh \u1ea5y b\u1eaft \u0111\u1ea7u gi\u1ea3i quy\u1ebft h\u00e0ng lo\u1ea1t c\u00e1c b\u00e0i t\u1eadp. Nh\u01b0ng chi\u1ebfc m\u00e1y t\u00ednh \"d\u1ec5 b\u1ea3o\" c\u1ee7a anh b\u1eaft \u0111\u1ea7u tr\u1edf ch\u1ee9ng v\u00e0o h\u00f4m nay. V\u00e0o m\u1ed7i bu\u1ed5i s\u00e1ng nh\u01b0 th\u01b0\u1eddng l\u1ec7, John th\u1ee9c d\u1eady v\u00e0o l\u00fac 10 gi\u1edd s\u00e1ng, u\u1ed1ng m\u1ed9t c\u1ed1c c\u00e0 ph\u00ea v\u00e0 b\u1eaft \u0111\u1ea7u gi\u1ea3i c\u00e1c b\u00e0i t\u1eadp tr\u01b0\u1edbc khi th\u01b0\u1edfng th\u1ee9c b\u1eefa s\u00e1ng. M\u1eb7c d\u00f9 c\u00f3 th\u1ee9 g\u00ec \u0111\u00f3 \"sai sai\" so v\u1edbi m\u1ecdi h\u00f4m, nh\u01b0ng d\u1ef1a v\u00e0o kho t\u00e0ng ki\u1ebfn th\u1ee9c m\u00e0 anh \u1ea5y v\u1eeba m\u1edbi g\u1eb7t h\u00e1i \u0111\u01b0\u1ee3c, John \u0111\u00e3 vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh v\u1edbi m\u1ed9t t\u1ed1c \u0111\u1ed9 th\u1ea7n th\u00e1nh. M\u1ec7t m\u1ecfi v\u1edbi vi\u1ec7c c\u1ea5p ph\u00e1t ma tr\u1eadn v\u00e0o m\u1ed7i bu\u1ed5i s\u00e1ng, chi\u1ebfc m\u00e1y t\u00ednh th\u00f4ng b\u00e1o r\u1eb1ng: \"Segmentation fault!\". D\u00f9 cho d\u1ea1 d\u00e0y c\u00f2n \u0111ang r\u1ed7ng, song v\u1edbi \u00fd t\u01b0\u1edfng th\u00f4ng minh c\u1ee7a m\u00ecnh, John \u0111\u00e3 v\u01b0\u1ee3t qua r\u1eafc r\u1ed1i b\u1eb1ng c\u00e1ch ch\u00e8n th\u00eam m\u1ed9t v\u00f2ng l\u1eb7p. Nh\u01b0ng chi\u1ebfc m\u00e1y t\u00ednh l\u1ea1i g\u00e0o l\u00ean: \"Time limit exceeded!\".</p> <p>Thay v\u00ec ti\u1ebfp t\u1ee5c v\u01b0\u1edbng v\u00e0o m\u1edb r\u1eafc r\u1ed1i, John \u0111\u00e3 c\u00f3 m\u1ed9t quy\u1ebft \u0111\u1ecbnh th\u00f4ng minh h\u01a1n. \"Qu\u00e1 \u0111\u1ee7 cho vi\u1ec7c l\u1eadp tr\u00ecnh!\" - John n\u00f3i. Anh \u1ea5y quy\u1ebft \u0111\u1ecbnh s\u1ebd c\u00f3 m\u1ed9t k\u1ef3 ngh\u1ec9 nh\u01b0 l\u00e0 ph\u1ea7n th\u01b0\u1edfng cho nh\u1eefng n\u1ed7 l\u1ef1c c\u1ee7a m\u00ecnh.</p> <p>L\u00e0 m\u1ed9t con ng\u01b0\u1eddi tr\u00e0n tr\u1ec1 sinh l\u1ef1c, John mu\u1ed1n d\u00e0nh th\u1eddi gian nhi\u1ec1u cho cu\u1ed9c \u0111\u1eddi c\u1ee7a m\u00ecnh. C\u00f3 qu\u00e1 nhi\u1ec1u th\u1ee9 m\u00e0 anh ta mu\u1ed1n l\u00e0m, nh\u01b0ng kh\u00f4ng may l\u00e0 anh ta kh\u00f4ng th\u1ec3 n\u00e0o l\u00e0m h\u1ebft t\u1ea5t c\u1ea3 ch\u00fang \u0111\u01b0\u1ee3c. Th\u1ebf n\u00ean trong l\u00fac \u0103n s\u00e1ng, John \u0111\u00e3 v\u1ea1ch ra m\u1ed9t \"Fun plan\" \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n b\u1eb1ng m\u1ed9t th\u1eddi gian bi\u1ec3u cho t\u1eebng ho\u1ea1t \u0111\u1ed9ng nh\u01b0 sau:</p> Id Ho\u1ea1t \u0111\u1ed9ng Th\u1eddi gian 1 S\u1eeda ph\u00f2ng Th\u1ee9 2, 22:00 \u0111\u1ebfn th\u1ee9 3, 1:00 2 Du l\u1ecbch Hawaii Th\u1ee9 3, 6:00 \u0111\u1ebfn th\u1ee9 7, 22:00 3 V\u00f4 \u0111\u1ecbch cu\u1ed9c thi c\u1edd vua Th\u1ee9 3, 11:00 \u0111\u1ebfn th\u1ee9 3, 21:00 4 Th\u1ea1m d\u1ef1 nh\u1ea1c h\u1ed9i Rock Th\u1ee9 3, 19:00 \u0111\u1ebfn th\u1ee9 3, 23:00 5 Chi\u1ebfn th\u1eafng cu\u1ed9c thi Starcraft Th\u1ee9 4, 15:00 \u0111\u1ebfn th\u1ee9 5, 15:00 6 Ch\u01a1i tr\u00f2 b\u1eafn s\u00fang n\u01b0\u1edbc s\u01a1n Th\u1ee9 5, 10:00 \u0111\u1ebfn th\u1ee9 5, 16:00 7 Tham gia k\u1ef3 thi SRM tr\u00ean Topcoder Th\u1ee9 7, 12:00 \u0111\u1ebfn th\u1ee9 7, 14:00 8 T\u1eafm r\u1eeda Th\u1ee9 7, 20:30 \u0111\u1ebfn th\u1ee9 7, 20:45 9 T\u1ed5 ch\u1ee9c ti\u1ec7c ng\u1ee7 Th\u1ee9 7, 21:00 \u0111\u1ebfn Ch\u1ee7 nh\u1eadt, 6:00 10 Tham gia th\u1eed th\u00e1ch \"All you can eat\" v\u00e0 \"All you can drink\" Th\u1ee9 7, 21:01 \u0111\u1ebfn th\u1ee9 7, 23:59 <p>Gi\u1edd anh \u1ea5y mu\u1ed1n th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c t\u1ed1i \u0111a c\u00e1c ho\u1ea1t \u0111\u1ed9ng trong th\u1eddi gian bi\u1ec3u tr\u00ean. M\u1eb7c d\u00f9 \u0111\u1ec3 l\u00ean k\u1ebf ho\u1ea1ch hi\u1ec7u qu\u1ea3 th\u00ec c\u1ea7n ph\u1ea3i c\u00f3 ch\u00fat l\u00fd tr\u00ed, nh\u01b0ng gi\u1edd th\u00ec h\u1ed3n anh \u1ea5y \u0111\u00e3 \u0111\u1eafm ch\u00ecm v\u00e0o k\u1ef3 ngh\u1ec9 r\u1ed3i.</p>"},{"location":"translate/topcoder/Greedy-is-Good/#phat-bieu-bai-toan","title":"Ph\u00e1t bi\u1ec3u b\u00e0i to\u00e1n","text":"<p>Li\u1ec7u ta c\u00f3 th\u1ec3 gi\u00fap anh \u1ea5y c\u00f3 m\u1ed9t k\u1ef3 ngh\u1ec9 tuy\u1ec7t v\u1eddi? Ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3! \u0110\u1ea7u ti\u00ean, ta c\u1ea7n ph\u1ea3i tr\u00ecnh b\u00e0y l\u1ea1i b\u00e0i to\u00e1n:</p> <ul> <li>John c\u00f3 \\(N\\) ho\u1ea1t \u0111\u1ed9ng. Ho\u1ea1t \u0111\u1ed9ng \\(i\\) b\u1eaft \u0111\u1ea7u v\u00e0o th\u1eddi gian \\(L_i\\) v\u00e0 k\u1ebft th\u00fac v\u00e0o th\u1eddi gian \\(R_i\\).</li> <li>John c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n c\u1ea3 ho\u1ea1t \u0111\u1ed9ng \\(i\\) v\u00e0 ho\u1ea1t \u0111\u1ed9ng \\(j\\), n\u1ebfu 2 kho\u1ea3ng th\u1eddi gian \\([L_i, R_i]\\) v\u00e0 \\([L_j, R_j]\\) kh\u00f4ng giao nhau.</li> <li>L\u00e0 m\u1ed9t l\u1eadp tr\u00ecnh vi\u00ean t\u1ec9 m\u1ec9, m\u1ed9t khi \u0111\u00e3 \u0111\u1eb7t ra k\u1ebf ho\u1ea1ch, anh \u1ea5y bu\u1ed9c ph\u1ea3i th\u1ef1c hi\u1ec7n n\u00f3.</li> </ul> <p>M\u1ed7i ho\u1ea1t \u0111\u1ed9ng ch\u1ec9 c\u00f3 hai ch\u1ecdn l\u1ef1a l\u00e0 c\u00f3 ho\u1eb7c kh\u00f4ng. V\u1edbi m\u1ed7i tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn l\u1ef1a cho ho\u1ea1t \u0111\u1ed9ng th\u1ee9 nh\u1ea5t, ta l\u1ea1i c\u00f3 th\u00eam 2 l\u1ef1a ch\u1ecdn cho ho\u1ea1t \u0111\u1ed9ng th\u1ee9 2. Ph\u00e2n t\u00edch nhanh ta s\u1ebd th\u1ea5y \u0111\u01b0\u1ee3c r\u1eb1ng c\u00f3 \\(2^n\\) tr\u01b0\u1eddng h\u1ee3p, v\u00e0 trong t\u00ecnh hu\u1ed1ng n\u00e0y th\u00ec s\u1ebd c\u00f3 \\(2^{10} = 1024\\) tr\u01b0\u1eddng h\u1ee3p. V\u1edbi m\u1ed7i tr\u01b0\u1eddng h\u1ee3p ta s\u1ebd ki\u1ec3m tra xem c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c c\u00e1c ho\u1ea1t \u0111\u1ed9ng \u0111\u00f3 kh\u00f4ng: c\u00f3 2 c\u1eb7p ho\u1ea1t \u0111\u1ed9ng n\u00e0o b\u1ecb tr\u00f9ng th\u1eddi gian hay kh\u00f4ng. Sau khi x\u00e9t h\u1ebft c\u00e1c ph\u01b0\u01a1ng \u00e1n, ta d\u1ec5 d\u00e0ng t\u00ecm ra 1 ph\u01b0\u01a1ng \u00e1n c\u00f3 nhi\u1ec1u ho\u1ea1t \u0111\u1ed9ng nh\u1ea5t. V\u1edbi kh\u00e1 nhi\u1ec1u s\u1ef1 ch\u1ecdn l\u1ef1a nh\u01b0 th\u1ebf n\u00e0y, John bu\u1ed9c ph\u1ea3i nh\u1edd \u0111\u1ebfn s\u1ef1 gi\u00fap \u0111\u1ee1 c\u1ee7a chi\u1ebfc m\u00e1y t\u00ednh \u0111ang m\u1ec7t m\u1ecfi. Nh\u01b0ng \u0111i\u1ec1u g\u00ec s\u1ebd x\u1ea3y ra n\u1ebfu John c\u00f3 t\u1edbi 50 ho\u1ea1t \u0111\u1ed9ng trong danh s\u00e1ch? Th\u1eadm ch\u00ed d\u00f9ng \u0111\u1ebfn c\u1ea3 si\u00eau m\u00e1y t\u00ednh nhanh nh\u1ea5t th\u1ebf gi\u1edbi th\u00ec c\u0169ng c\u1ea7n \u0111\u1ebfn v\u00e0i n\u0103m \u0111\u1ec3 t\u00ecm ra c\u00e2u tr\u1ea3 l\u1eddi. Th\u1ebf n\u00ean, ph\u01b0\u01a1ng \u00e1n n\u00e0y kh\u00e1 phi th\u1ef1c t\u1ebf.</p>"},{"location":"translate/topcoder/Greedy-is-Good/#tiep-can-1","title":"Ti\u1ebfp c\u1eadn 1","text":"<p>Ch\u00fang ta c\u1ea7n t\u00ecm m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn m\u1edbi. M\u1ed9t ph\u01b0\u01a1ng \u00e1n t\u1ed1t c\u00f3 l\u1ebd l\u00e0 th\u1ef1c hi\u1ec7n c\u00f4ng vi\u1ec7c ngay khi th\u1eddi c\u01a1 \u0111\u1ebfn: N\u1ebfu ta c\u00f3 hai ho\u1ea1t \u0111\u1ed9ng v\u00e0 ch\u00fang b\u1ecb tr\u00f9ng v\u1ec1 th\u1eddi gian, ta s\u1ebd \u01b0u ti\u00ean l\u1ef1a ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng b\u1eaft \u0111\u1ea7u tr\u01b0\u1edbc nh\u1eb1m ti\u1ebft ki\u1ec7m th\u1eddi gian (ngh\u0129a l\u00e0 ho\u1ea1t \u0111\u1ed9ng c\u00f3 \\(L_i\\) nh\u1ecf h\u01a1n). N\u1ebfu \u00e1p d\u1ee5ng c\u00e1ch n\u00e0y v\u00e0o 10 ho\u1ea1t \u0111\u1ed9ng tr\u00ean th\u00ec:</p> <ul> <li>John b\u1eaft \u0111\u1ea7u bu\u1ed5i t\u1ed1i T2 b\u1eb1ng vi\u1ec7c S\u1eeda ph\u00f2ng.</li> <li>Bu\u1ed5i s\u00e1ng T3, anh \u1ea5y s\u1ebd l\u00ean m\u00e1y bay \u0111i Du l\u1ecbch Hawaii.</li> </ul> <p>V\u00e0 ch\u01b0a \u0111\u1ea7y m\u1ed9t ng\u00e0y nh\u01b0ng anh \u1ea5y \u0111\u00e3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c 2 ho\u1ea1t \u0111\u1ed9ng. Th\u1eadt tuy\u1ec7t v\u1eddi! Nh\u01b0ng th\u1eadt ra, \u0111\u00f3 ch\u1ec9 l\u00e0 l\u1ef1a ch\u1ecdn t\u1ed1t nh\u1ea5t l\u00fac n\u00e0y th\u00f4i. V\u00e0 b\u00e2y gi\u1edd th\u00ec ta c\u00f3 g\u00ec, 5 ng\u00e0y \u0103n ch\u01a1i \u1edf Hawaii v\u00e0 cho \u0111\u1ebfn t\u1eadn t\u1ed1i th\u1ee9 7 th\u00ec anh \u1ea5y v\u1eabn ch\u1ec9 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c 2 ho\u1ea1t \u0111\u1ed9ng. H\u00e3y ngh\u0129 xem trong 5 ng\u00e0y \u0111\u00f3 anh ta \u0111\u00e3 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c nh\u1eefng g\u00ec. M\u1eb7c d\u00f9 \u0111\u01a1n gi\u1ea3n v\u00e0 th\u1ef1c thi r\u1ea5t nhanh, song r\u1ea5t kh\u00f4ng may l\u00e0 thu\u1eadt to\u00e1n n\u00e0y l\u1ea1i kh\u00f4ng ch\u00ednh x\u00e1c.</p>"},{"location":"translate/topcoder/Greedy-is-Good/#tiep-can-2","title":"Ti\u1ebfp c\u1eadn 2","text":"<p>H\u00e3y th\u1eed m\u1ed9t m\u00e1nh kh\u00f3e kh\u00e1c. Gi\u1edd ta s\u1ebd b\u1ecf nh\u1eefng ho\u1ea1t \u0111\u1ed9ng ti\u00eau t\u1ed1n nhi\u1ec1u th\u1eddi gian nh\u01b0 \u0111i Du l\u1ecbch Hawaii b\u1eb1ng c\u00e1ch l\u1ef1a ch\u1ecdn nh\u1eefng ho\u1ea1t \u0111\u1ed9ng t\u1ed1n \u00edt th\u1eddi gian nh\u1ea5t (ngh\u0129a l\u00e0 c\u00f3 \\(R_i - L_i\\) nh\u1ecf nh\u1ea5t) v\u00e0 ki\u1ec3m tra xem n\u00f3 c\u00f3 h\u1ee3p l\u00ed v\u1edbi nh\u1eefng ho\u1ea1t \u0111\u1ed9ng \u0111\u00e3 ch\u1ecdn tr\u01b0\u1edbc \u0111\u00f3 ch\u01b0a r\u1ed3i ti\u1ebfp t\u1ee5c qu\u00e1 tr\u00ecnh. Theo nh\u01b0 th\u1eddi gian bi\u1ec3u \u1edf tr\u00ean th\u00ec ho\u1ea1t \u0111\u1ed9ng \u0111\u1ea7u ti\u1ec7n \u0111\u01b0\u1ee3c ch\u1ecdn l\u1ef1a s\u1ebd l\u00e0 t\u1eafm. V\u1edbi th\u1eddi gian ch\u1ec9 15 ph\u00fat, \u0111\u00e2y ch\u00ednh l\u00e0 l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u c\u1ee5c b\u1ed9 (local best). V\u00e0 gi\u1edd \u0111i\u1ec1u m\u00e0 ta c\u1ea7n bi\u1ebft \u0111\u00f3 l\u00e0 c\u00f3 th\u1ec3 gi\u1eef \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u c\u1ee5c b\u1ed9 khi m\u00e0 nh\u1eefng ho\u1ea1t \u0111\u1ed9ng th\u00edch h\u1ee3p kh\u00e1c \u0111\u01b0\u1ee3c ch\u1ecdn l\u1ef1a. Th\u1eddi gian bi\u1ec3u c\u1ee7a John s\u1ebd nh\u01b0 sau:</p> <ul> <li>T\u1eafm r\u1eeda (15 ph\u00fat, t\u1ed1i T7, 20:30 - 20:45).</li> <li>Tham gia k\u1ef3 thi SRM tr\u00ean Topcoder (2 ti\u1ebfng, T7, 12:00 - 14:00).</li> <li>Tham gia th\u1eed th\u00e1ch \"All you can eat\" v\u00e0 \"All you can drink\" (2 ti\u1ebfng 58 ph\u00fat, T7, 21:01 - 23:59).</li> <li>S\u1eeda ph\u00f2ng (3 ti\u1ebfng, T2, 22:00 - T3, 1:00).</li> <li>Th\u1ea1m d\u1ef1 nh\u1ea1c h\u1ed9i Rock (4 ti\u1ebfng, T3, 19:00 - 23:00).</li> <li>Ch\u01a1i tr\u00f2 b\u1eafn s\u00fang n\u01b0\u1edbc s\u01a1n (6 ti\u1ebfng, T5, 10:00 - 16:00).</li> </ul> <p>Trong 10 h\u00e0nh \u0111\u1ed9ng, ta \u0111\u00e3 l\u1ef1a ra \u0111\u01b0\u1ee3c 6 h\u00e0nh \u0111\u1ed9ng, kh\u00f4ng t\u1ec7 ch\u00fat n\u00e0o! Gi\u1edd th\u00ec thu\u1eadt to\u00e1n c\u1ee7a ta v\u1eabn ch\u1ea1y r\u1ea5t nhanh v\u00e0 \u0111\u00e1ng tin c\u1eady h\u01a1n ch\u00fat. V\u00e0 qu\u1ea3 th\u1ef1c, \u0111\u00e1p \u00e1n ch\u00ednh x\u00e1c trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 6. John r\u1ea5t h\u00e0i l\u00f2ng v\u1ec1 s\u1ef1 h\u1ed7 tr\u1ee3 c\u1ee7a ch\u00fang ta, nh\u01b0ng sau khi tr\u1edf v\u1ec1 t\u1eeb k\u1ef3 ngh\u1ec9 v\u1edbi k\u1ebf ho\u1ea1ch th\u00f4ng minh n\u00e0y, John \u0111\u00e3 ph\u1ea3i \u0111\u1ed1i m\u1eb7t v\u1edbi nh\u1eefng r\u1eafc r\u1ed1i nghi\u00eam tr\u1ecdng kh\u00e1c:</p> <p>\u00c1p d\u1ee5ng thu\u1eadt to\u00e1n c\u1ee7a ta, John \u0111\u00e3 tham gia m\u1ed9t cu\u1ed9c h\u1eb9n h\u00f2 ch\u00f3ng v\u00e1nh (m\u00e0u \u0111\u1ecf), \u0111\u1ec3 r\u1ed3i anh \u1ea5y \u0111\u00e3 b\u1ecf l\u1ee1 c\u1ea3 b\u00e0i thi trong tr\u01b0\u1eddng (m\u00e0u xanh da tr\u1eddi) l\u1eabn tr\u1eadn \u0111\u1ea5u b\u00f3ng r\u1ed5 c\u1ee7a \u0111\u1ed9i anh \u1ea5y y\u00eau th\u00edch (m\u00e0u xanh l\u00e1). L\u00e0 m\u1ed9t Topcoder, ch\u00fang ta c\u1ea7n ph\u1ea3i vi\u1ebft ra m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh ho\u00e0n to\u00e0n ch\u00ednh x\u00e1c, ch\u1ee9 kh\u00f4ng ph\u1ea3i ch\u1ec9 \u0111\u00fang trong 1 s\u1ed1 tr\u01b0\u1eddng h\u1ee3p. Ch\u1ec9 c\u1ea7n m\u1ed9t tr\u01b0\u1eddng h\u1ee3p duy nh\u1ea5t ch\u00fang ta kh\u00f4ng gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c s\u1ebd d\u1eabn t\u1edbi m\u1ed9t th\u1ea5t b\u1ea1i to\u00e0n di\u1ec7n.</p>"},{"location":"translate/topcoder/Greedy-is-Good/#tiep-can-3","title":"Ti\u1ebfp c\u1eadn 3","text":"<p>Nh\u1eefng g\u00ec m\u00e0 ch\u00fang ta th\u01b0\u1eddng l\u00e0m trong t\u00ecnh hu\u1ed1ng n\u00e0y l\u00e0 ph\u00e2n t\u00edch \u0111i\u1ec1u g\u00ec \u0111\u00e3 g\u00e2y ra l\u1ed7i \u1edf c\u00e1ch l\u00e0m tr\u01b0\u1edbc \u0111\u1ec3 tr\u00e1nh l\u1eb7p l\u1ea1i n\u00f3 trong t\u01b0\u01a1ng lai. H\u00e3y xem x\u00e9t l\u1ea1i tr\u01b0\u1eddng h\u1ee3p sai. Cu\u1ed9c h\u1eb9n h\u00f2 tr\u00f9ng th\u1eddi gian v\u1edbi c\u1ea3 vi\u1ec7c l\u00e0m b\u00e0i thi l\u1eabn tr\u1eadn \u0111\u1ea5u b\u00f3ng r\u1ed5, trong khi c\u1ea3 tr\u1eadn \u0111\u1ea5u b\u00f3ng r\u1ed5 l\u1eabn l\u00e0m b\u00e0i thi ch\u1ec9 tr\u00f9ng l\u1eb7p v\u1edbi m\u1ed9t m\u00ecnh cu\u1ed9c h\u1eb9n h\u00f2. V\u1eady th\u00ec \u00fd t\u01b0\u1edfng c\u0169ng t\u1ef1 sinh ra t\u1eeb v\u1ea5n \u0111\u1ec1 n\u00e0y. T\u1ea1i sao ta kh\u00f4ng ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng \u00edt b\u1ecb tr\u00f9ng l\u1eb7p nh\u1ea5t so v\u1edbi nh\u1eefng ho\u1ea1t \u0111\u1ed9ng c\u00f2n l\u1ea1i? Nghe c\u00f3 v\u1ebb h\u1ee3p l\u00ed!</p> <p>\u0110\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y ho\u00e0n to\u00e0n \u0111\u00fang \u0111\u1eafn, l\u1ea7n n\u00e0y ta h\u00e3y th\u1eed ch\u1ee9ng minh. Gi\u1edd gi\u1ea3 s\u1eed ta \u0111\u00e3 l\u1ef1a ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng X, ta s\u1ebd th\u1eed ki\u1ec3m tra xem ta c\u00f3 th\u1ec3 l\u1ef1a ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng A v\u00e0 B (nh\u1eefng ho\u1ea1t \u0111\u1ed9ng b\u1ecb tr\u00f9ng l\u1eb7p v\u1edbi X) thay v\u00ec X \u0111\u01b0\u1ee3c hay kh\u00f4ng. V\u00e0 A, B c\u0169ng kh\u00f4ng \u0111\u01b0\u1ee3c tr\u00f9ng l\u1eb7p nhau, n\u1ebfu kh\u00f4ng ta c\u0169ng kh\u00f4ng th\u1ec3 t\u1ed1i \u01b0u h\u00f3a k\u1ebft qu\u1ea3. B\u00e2y gi\u1edd, ta s\u1ebd quay v\u1ec1 tr\u01b0\u1eddng h\u1ee3p tr\u01b0\u1edbc \u0111\u00f3 (X tr\u00f9ng v\u1edbi 2 ho\u1ea1t \u0111\u1ed9ng, A v\u00e0 B tr\u00f9ng v\u1edbi 1 ho\u1ea1t \u0111\u1ed9ng). Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta s\u1ebd ch\u1ecdn A v\u00e0 B ngay t\u1eeb \u0111\u1ea7u ti\u00ean. M\u1ed9t trong nh\u1eefng c\u00e1ch \u0111\u1ec3 ph\u1ea3n b\u00e1c l\u1ea1i gi\u1ea3 thi\u1ebft n\u00e0y ch\u00ednh l\u00e0 cho ho\u1ea1t \u0111\u1ed9ng A v\u00e0 B tr\u00f9ng l\u1eb7p v\u1edbi nhi\u1ec1u ho\u1ea1t \u0111\u1ed9ng h\u01a1n n\u1eefa ch\u1ee9 kh\u00f4ng ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng X. Nghe n\u00f3 c\u00f3 v\u1ebb kh\u00f4ng tr\u1ef1c quan cho l\u1eafm, nh\u01b0ng (th\u1eadt kh\u00f4ng may) ta v\u1eabn c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3 nh\u01b0 sau:</p> <p>Nh\u01b0ng ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng g\u1ea1ch m\u00e0u xanh ch\u00ednh l\u00e0 nh\u1eefng l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u trong th\u1eddi gian bi\u1ec3u tr\u00ean. Nh\u01b0ng ho\u1ea1t \u0111\u1ed9ng t\u00f4 m\u00e0u \u0111\u1ecf tr\u00f9ng l\u1eb7p v\u1edbi 2 ho\u1ea1t \u0111\u1ed9ng n\u00ean n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c ch\u1ecdn tr\u01b0\u1edbc. V\u1eabn c\u00f2n 4 ho\u1ea1t \u0111\u1ed9ng th\u00edch h\u1ee3p kh\u00e1c tr\u01b0\u1edbc ho\u1ea1t \u0111\u1ed9ng \u0111\u1ecf, nh\u01b0ng ch\u00fang \u0111\u1ec1u b\u1ecb tr\u00f9ng l\u1eb7p l\u1eabn nhau, th\u1ebf n\u00ean ta ch\u1ec9 c\u00f3 th\u1ec3 l\u1ef1a ch\u1ecdn th\u00eam 1 ho\u1ea1t \u0111\u1ed9ng. \u0110i\u1ec1u t\u01b0\u01a1ng t\u1ef1 c\u0169ng x\u1ea3y ra \u0111\u1ed1i v\u1edbi 4 ho\u1ea1t \u0111\u1ed9ng sau ho\u1ea1t \u0111\u1ed9ng m\u00e0u \u0111\u1ecf, nh\u01b0ng ta v\u1eabn ch\u1ec9 c\u00f3 th\u1ec3 ch\u1ecdn 1. V\u1eady t\u1ed5ng c\u1ed9ng theo ph\u01b0\u01a1ng ph\u00e1p n\u00e0y, ta v\u1eabn ch\u1ec9 c\u00f3 th\u1ec3 ch\u1ecdn 3 ho\u1ea1t \u0111\u1ed9ng, trong khi k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u l\u00e0 4.</p>"},{"location":"translate/topcoder/Greedy-is-Good/#tiep-can-4","title":"Ti\u1ebfp c\u1eadn 4","text":"<p>T\u1ed5ng qu\u00e1t l\u1ea1i, ta \u0111\u00e3 th\u1eed 3 c\u00e1ch kh\u00e1c nhau, v\u00e0 m\u1ed7i c\u00e1ch \u0111\u1ec1u c\u00f3 thi\u1ebfu s\u00f3t:</p> <ul> <li>C\u00e1ch 1: Ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng c\u00f3 \\(L_i\\) nh\u1ecf nh\u1ea5t</li> <li>C\u00e1ch 2: Ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng c\u00f3 \\(R_i - L_i\\) nh\u1ecf nh\u1ea5t</li> <li>C\u00e1ch 3: Ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng giao v\u1edbi \u00edt ho\u1ea1t \u0111\u1ed9ng kh\u00e1c nh\u1ea5t.</li> </ul> <p>C\u00f3 v\u1ebb nh\u01b0 ch\u00fang ta \u0111ang \u0111\u1ed1i m\u1eb7t v\u1edbi m\u1ed9t v\u1ea5n \u0111\u1ec1 h\u00f3c b\u00faa. Nh\u01b0ng th\u1eadt ra, v\u1ea5n \u0111\u1ec1 n\u00e0y v\u1eabn c\u00f3 m\u1ed9t c\u00e1ch gi\u1ea3i quy\u1ebft \u0111\u1eb9p \u0111\u1ebd, v\u00e0 kh\u00f4ng h\u1ec1 ph\u1ee9c t\u1ea1p. N\u1ebfu ta xem x\u00e9t h\u00ecnh tr\u00ean m\u1ed9t c\u00e1ch k\u1ef9 l\u01b0\u1ee1ng h\u01a1n n\u1eefa, ta s\u1ebd th\u1ea5y \u0111\u01b0\u1ee3c r\u1eb1ng ho\u1ea1t \u0111\u1ed9ng m\u00e0u xanh n\u1eb1m \u1edf g\u00f3c tr\u00e1i d\u01b0\u1edbi l\u00e0 l\u00e0 ho\u1ea1t \u0111\u1ed9ng duy nh\u1ea5t ho\u00e0n th\u00e0nh tr\u01b0\u1edbc \u0111\u01b0\u1eddng v\u1ebd d\u1ecdc m\u00e0u \u0111\u1ecf. V\u1eady, n\u1ebfu l\u1ef1a ch\u1ecdn 1 ho\u1ea1t \u0111\u1ed9ng \u0111\u01a1n l\u1ebb, ta s\u1ebd ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng k\u1ebft th\u00fac s\u1edbm nh\u1ea5t (c\u00f3 \\(R_i\\) nh\u1ecf nh\u1ea5t). G\u1ecdi th\u1eddi \u0111i\u1ec3m ho\u00e0n th\u00e0nh ho\u1ea1t \u0111\u1ed9ng \u0111\u00f3 l\u00e0 \\(t_1\\), th\u00ec kho\u1ea3ng th\u1eddi gian sau \\(t_1\\) s\u1ebd tr\u1ed1ng \u0111\u1ec3 ta c\u00f3 th\u1ec3 ch\u1ecdn c\u00e1c ho\u1ea1t \u0111\u1ed9ng kh\u00e1c. N\u1ebfu ch\u00fang ta ch\u1ecdn b\u1ea5t k\u1ef3 ho\u1ea1t \u0111\u1ed9ng n\u00e0o kh\u00e1c, th\u00ec kho\u1ea3ng th\u1eddi gian c\u00f2n l\u1ea1i s\u1ebd ng\u1eafn \u0111i. \u0110i\u1ec1u n\u00e0y l\u00e0 hi\u1ec3n nhi\u00ean, b\u1edfi v\u00ec khi ta k\u1ebft th\u00fac v\u1edbi b\u1ea5t k\u1ef3 m\u1ed9t ho\u1ea1t \u0111\u1ed9ng n\u00e0o kh\u00e1c th\u00ec lu\u00f4n lu\u00f4n \\(t_2\\) &gt; \\(t_1\\). Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u ti\u00ean, ta s\u1ebd c\u00f3 to\u00e0n b\u1ed9 th\u1eddi gian t\u1eeb \\(t_1\\) \u0111\u1ebfn khi k\u1ebft th\u00fac v\u00e0 bao g\u1ed3m lu\u00f4n kho\u1ea3ng t\u1eeb \\(t_2\\) \u0111\u1ebfn k\u1ebft th\u00fac. B\u1edfi v\u1eady m\u00e0 n\u00f3 c\u0169ng kh\u00f4ng c\u00f3 khuy\u1ebft \u0111i\u1ec3m trong vi\u1ec7c l\u1ef1a ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng k\u1ebft th\u00fac s\u1edbm. V\u00e0 n\u00f3 c\u00f2n c\u00f3 m\u1ed9t \u01b0u \u0111i\u1ec3m \u0111\u00f3 l\u00e0 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 ch\u00e8n th\u00eam m\u1ed9t ho\u1ea1t \u0111\u1ed3ng b\u1ea5t k\u1ef3 v\u00e0o gi\u1eefa \\(t_1\\) v\u00e0 \\(t_2\\) v\u00e0 k\u1ebft th\u00fac tr\u01b0\u1edbc khi ho\u1ea1t \u0111\u1ed9ng c\u1ee7a \\(t_2\\) b\u1eaft \u0111\u1ea7u.</p> <p>Tr\u00ean \u0111\u00e2y l\u00e0 \u00fd t\u01b0\u1edfng \u0111\u1ec3 ch\u1ee9ng minh thu\u1eadt to\u00e1n n\u00e0y \u0111\u00fang. Ta c\u00f3 th\u1ec3 t\u1eeb \u0111\u00f3 \u0111\u1ec3 ch\u1ee9ng minh ch\u1eb7t ch\u1ebd l\u00e0 c\u00e1ch l\u00e0m n\u00e0y \u0111\u00fang.</p> <p>\u0110\u01b0\u1ee3c bi\u1ebft t\u1edbi v\u1edbi t\u00ean g\u1ecdi \"L\u1ef1a ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng\" (Activity Selection), \u0111\u00e2y l\u00e0 b\u00e0i to\u00e1n c\u01a1 s\u1edf s\u1eed d\u1ee5ng \"Ph\u01b0\u01a1ng ph\u00e1p Tham lam\". Gi\u1ed1ng nh\u01b0 l\u00e0 m\u1ed9t g\u00e3 tham lam lu\u00f4n mu\u1ed1n chi\u1ebfm l\u1ea5y nhi\u1ec1u nh\u1ea5t, th\u01b0\u1eddng xuy\u00ean nh\u1ea5t m\u00e0 h\u1eafn ta c\u00f3 th\u1ec3, trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u1edf m\u1ed7i b\u01b0\u1edbc ta s\u1ebd ch\u1ecdn l\u1ef1a m\u1ed9t ho\u1ea1t \u0111\u1ed9ng k\u1ebft th\u00fac \u0111\u1ea7u ti\u00ean v\u00e0 m\u1ed7i l\u1ea7n \u0111\u1ec1u kh\u00f4ng c\u00f3 ho\u1ea1t \u0111\u1ed9ng \u0111ang trong ti\u1ebfn tr\u00ecnh. V\u00e0 c\u00f3 m\u1ed9t s\u1ef1 th\u1eadt \u0111\u00f3 l\u00e0 ta lu\u00f4n lu\u00f4n \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p tham lam cho m\u1ed7i b\u01b0\u1edbc trong cu\u1ed9c \u0111\u1eddi c\u1ee7a m\u00ecnh. Khi ta \u0111i mua s\u1eafm ho\u1eb7c \u0111i xe h\u01a1i, ta \u0111\u1ec1u lu\u00f4n l\u1ef1a ch\u1ecdn ph\u01b0\u01a1ng \u00e1n t\u1ed1t nh\u1ea5t t\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i. Th\u1eadt ra, ph\u01b0\u01a1ng ph\u00e1p tham lam c\u00f3 2 c\u00f4ng th\u1ee9c chung:</p> <ul> <li>T\u00ednh l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u: T\u1eeb nh\u1eefng k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u c\u1ee5c b\u1ed9 ta c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u to\u00e0n c\u1ee5c m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i xem x\u00e9t l\u1ea1i c\u00e1c k\u1ebft qu\u1ea3.</li> <li>T\u00ednh t\u1ed1i \u01b0u t\u1eeb b\u00e0i to\u00e1n nh\u1ecf: K\u1ebft qu\u1ea3 t\u1ed1i \u01b0u c\u00f3 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng c\u00e1c k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u t\u1eeb b\u00e0i to\u00e1n nh\u1ecf h\u01a1n.</li> </ul> <p>\u0110o\u1ea1n m\u00e3 gi\u1ea3 d\u01b0\u1edbi \u0111\u00e2y di\u1ec5n ta c\u00e1ch l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u c\u00e1c ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng thu\u1eadt to\u00e1n tham lam m\u00e0 ta v\u1eeba ch\u1ee9ng minh ph\u00eda tr\u00ean:</p> <pre><code>\u0110\u1eb7t N l\u00e0 s\u1ed1 ho\u1ea1t \u0111\u1ed9ng v\u00e0\n{I} l\u00e0 ho\u1ea1t \u0111\u1ed9ng th\u1ee9 I  (1 &lt;= I &lt;= N)\n\nV\u1edbi m\u1ed7i {I}, x\u00e9t S[I] v\u00e0 F[I] l\u1ea7n l\u01b0\u1ee3t l\u00e0 th\u1eddi gian b\u1eaft \u0111\u1ea7u v\u00e0 k\u1ebft th\u00fac c\u1ee7a ho\u1ea1t \u0111\u1ed9ng \u0111\u00f3.\nS\u1eafp x\u1ebfp l\u1ea1i c\u00e1c ho\u1ea1t \u0111\u1ed9ng theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a th\u1eddi gian k\u1ebft th\u00fac.\n- C\u00f3 ngh\u0129a l\u00e0, v\u1edbi I &lt; J ta ph\u1ea3i c\u00f3 F [I] &lt;= F [J]\n\n//  A l\u00e0 t\u1eadp h\u1ee3p c\u00e1c ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c ch\u1ecdn\nA = {1}\n//  J l\u00e0 ho\u1ea1t \u0111\u1ed9ng cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c ch\u1ecdn\nJ = 1\nFor I = 2  to N\n  // ta c\u00f3 th\u1ec3 ch\u1ecdn I n\u1ebfu n\u00f3 l\u00e0 ho\u1ea1t \u0111\u1ed9ng cu\u1ed1i c\u00f9ng\n  // vi\u1ec7c ch\u1ecdn l\u1ef1a \u0111\u00e3 ho\u00e0n th\u00e0nh\n  If S [I] &gt;= F [J]\n    // l\u1ef1a ch\u1ecdn ho\u1ea1t \u0111\u1ed9ng 'I'\n    A = A + {I}\n\n    // ho\u1ea1t \u0111\u1ed9ng 'I' gi\u1edd tr\u1edf th\u00e0nh ho\u1ea1t \u0111\u1ed9ng cu\u1ed1i c\u00f9ng \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn\n    J = I\n  Endif\nEndfor\n\nReturn A\n</code></pre> <p>Sau khi \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n tr\u00ean, \"Fun plan\" c\u1ee7a Johnny s\u1ebd nh\u01b0 th\u1ebf n\u00e0y:</p> <ul> <li>S\u1eeda ph\u00f2ng</li> <li>V\u00f4 \u0111\u1ecbch cu\u1ed9c thi c\u1edd vua</li> <li>Chi\u1ebfn th\u1eafng cu\u1ed9c thi Starcraft</li> <li>Tham gia k\u1ef3 thi SRM tr\u00ean Topcoder</li> <li>T\u1eafm r\u1eeda</li> <li>Tham gia th\u1eed th\u00e1ch \"All you can eat\" v\u00e0 \"All you can drink\"</li> </ul> <p>V\u1ea5n \u0111\u1ec1 c\u1ee7a John Smith \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft, tuy nhi\u00ean \u0111\u00e2y ch\u1ec9 l\u00e0 m\u1ed9t v\u00ed d\u1ee5 m\u00e0 Tham lam c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng.</p> <p>B\u00e0i t\u1eadp t\u01b0\u01a1ng t\u1ef1: Boxing</p>"},{"location":"translate/topcoder/Greedy-is-Good/#bioscore","title":"BioScore","text":"<p>B\u00e0i to\u00e1n</p> <ul> <li>Cho \\(N\\) d\u00e3y k\u00fd t\u1ef1 d\u00e0i b\u1eb1ng nhau. M\u1ed7i d\u00e3y g\u1ed3m 4 lo\u1ea1i k\u00fd t\u1ef1: <code>A</code>, <code>C</code>, <code>T</code>, <code>G</code>.</li> <li>\u0110\u1ed9 t\u01b0\u01a1ng \u0111\u1ed3ng c\u1ee7a 2 d\u00e3y l\u00e0 t\u1ed5ng \u0111i\u1ec3m c\u1ee7a c\u00e1c c\u1eb7p k\u00fd t\u1ef1 c\u1ee7a c\u00f9ng v\u1ecb tr\u00ed. V\u00ed d\u1ee5, \u0111\u1ed9 t\u01b0\u01a1ng \u0111\u1ed3ng c\u1ee7a <code>ACTA</code> v\u00e0 <code>GATC</code> l\u00e0: <code>score(A,G) + score(C,A) + score(T,T) + score(A,C)</code>.</li> </ul> <p>T\u00ecm c\u00e1ch x\u00e2y d\u1ef1ng b\u1ea3ng \\(S\\) (<code>score</code>) sao cho \u0111\u1ed9 t\u01b0\u01a1ng \u0111\u1ed3ng c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p 2 x\u00e2u trong \\(N\\) x\u00e2u l\u00e0 l\u1edbn nh\u1ea5t, bi\u1ebft r\u1eb1ng b\u1ea3ng \\(S\\) ph\u1ea3i th\u1ecfa m\u00e3n c\u00e1c t\u00ednh ch\u1ea5t:</p> <ul> <li>C\u00e1c gi\u00e1 tr\u1ecb t\u1eeb -10 \u0111\u1ebfn 10</li> <li>\u0110\u1ed1i x\u1ee9ng: \\(S(x, y) = S(y, x)\\).</li> <li>\u0110\u01b0\u1eddng ch\u00e9o d\u01b0\u01a1ng: \\(S(x, x) &gt; 0\\).</li> <li>T\u1ed5ng c\u00e1c s\u1ed1 trong \\(S\\) ph\u1ea3i b\u1eb1ng 0.</li> </ul> <p>Ph\u00e2n t\u00edch</p> <p>Vi\u1ec7c \u0111\u1ea7u ti\u00ean m\u00e0 ta c\u1ea7n l\u00e0m l\u00e0 x\u00e2y d\u1ef1ng m\u1ed9t ma tr\u1eadn cho bi\u1ebft s\u1ed1 l\u1ea7n l\u1eb7p (ma tr\u1eadn t\u1ea7n s\u1ed1) c\u1ee7a t\u1eebng c\u1eb7p 2 k\u00fd t\u1ef1. \u0110\u00e2y l\u00e0 m\u1ed9t c\u00f4ng vi\u1ec7c kh\u00e1 nh\u1eb9 nh\u00e0ng khi m\u00e0 ta ch\u1ec9 c\u1ea7n gh\u00e9p t\u1eebng c\u1eb7p k\u00fd t\u1ef1 \u1edf hai chu\u1ed7i t\u1ea1o r\u1ed3i \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a ch\u00fang (<code>AA</code>, <code>AC</code>, <code>AG</code>, <code>AT</code>, <code>CA</code>, <code>CC</code>, <code>CG</code>, <code>CT</code>, <code>GA</code>, <code>GC</code>, <code>GG</code>, <code>GT</code>, <code>TA</code>, <code>TC</code>, <code>TG</code>, <code>TT</code>). T\u1eebng c\u1eb7p k\u00fd t\u1ef1 s\u1ebd \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t ph\u1ea7n t\u1eed trong ma tr\u1eadn v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 ch\u00ednh l\u00e0 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a n\u00f3.</p> <p>V\u00ed d\u1ee5, h\u00e3y x\u00e9t b\u1ed9 <code>{\"ACTAGAGAC\", \"AAAAAAAAA\", \"TAGTCATAC\", \"GCAGCATTC\"}</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf v\u00ed d\u1ee5 th\u1ee9 2.</p> <p></p> <p>\u1ede g\u00f3c ph\u1ea3i - d\u01b0\u1edbi c\u1ee7a h\u00ecnh minh h\u1ecda tr\u00ean, ta c\u00f3 th\u1ec3 th\u1ea5y k\u1ebft qu\u1ea3 c\u1ee7a ma tr\u1eadn t\u1ea7n s\u1ed1 \u0111\u1ed1i v\u1edbi b\u1ed9 \u0111\u00e3 cho. T\u1ea1m g\u1ecdi n\u00f3 l\u00e0 \\(F\\). Gi\u1edd vi\u1ec7c m\u00e0 ta c\u1ea7n l\u00e0m l\u00e0 t\u00ecm ra m\u1ed9t ma tr\u1eadn \\(S\\) sao cho t\u1ed5ng c\u1ee7a c\u00e1c t\u00edch: \\(F[i, j] \\* S[i, j]\\) v\u1edbi \\((1 \\le i, j \\le 4)\\) l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>Gi\u1edd ta x\u00e9t t\u1eebng \u0111i\u1ec1u ki\u1ec7n cho ma tr\u1eadn c\u1ea7n t\u00ecm:</p> <p>1) T\u1ed5ng c\u1ee7a 16 ph\u1ea7n t\u1eed b\u1eb1ng \\(0\\):</p> <p>R\u00f5 r\u00e0ng, n\u1ebfu ta kh\u00f4ng gi\u1edbi h\u1ea1n t\u1ed5ng c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed, th\u00ec ta c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c t\u1ed5ng b\u1eb1ng v\u00f4 c\u00f9ng, n\u1ebfu g\u00e1n t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a \\(S\\) l\u00e0 v\u00f4 c\u00f9ng. Nh\u01b0ng b\u1edfi v\u00ec t\u1ed1ng c\u1ee7a ch\u00fang ph\u1ea3i b\u1eb1ng \\(0\\), th\u1ebf n\u00ean khi ta t\u0103ng gi\u00e1 tr\u1ecb 1 ph\u1ea7n t\u1eed l\u00ean th\u00ec ta s\u1ebd ph\u1ea3i gi\u1ea3m \u0111i gi\u00e1 tr\u1ecb c\u1ee7a 1 ph\u1ea7n t\u1eed kh\u00e1c. Th\u1eed th\u00e1ch \u1edf \u0111i\u1ec1u ki\u1ec7n n\u00e0y ch\u00ednh l\u00e0 ph\u1ea3i t\u00ecm ra m\u1ed9t s\u1ef1 ph\u00e2n b\u1ed1 t\u1ed1i \u01b0u.</p> <p>2) Gi\u00e1 tr\u1ecb m\u1ed7i ph\u1ea7n t\u1eed ch\u1ec9 n\u1eb1m trong kho\u1ea3ng t\u1eeb -10 \u0111\u1ebfn 10 (\\(S[i, j] \\in [-10, 10]\\))</p> <p>T\u01b0\u01a1ng t\u1ef1, n\u1ebfu kh\u00f4ng c\u00f3 \u0111i\u1ec1u ki\u1ec7n n\u00e0y, k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn v\u00f4 c\u00f9ng, n\u1ebfu ta c\u00f3 1 c\u1eb7p kh\u00f4ng xu\u1ea5t hi\u1ec7n, g\u00e1n \\(S\\) t\u01b0\u01a1ng \u1ee9ng l\u00e0 \u00e2m v\u00f4 c\u00f9ng, c\u00f2n c\u00e1c ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i trong m\u1ea3ng l\u00e0 d\u01b0\u01a1ng v\u00f4 c\u00f9ng.</p> <p>3) M\u1ed7i ph\u1ea7n t\u1eed \u0111\u1ed1i x\u1ee9ng ph\u1ea3i c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng nhau (\\(S(x, y) = S(y, x)\\))</p> <p>B\u1edfi v\u00ec t\u00ednh \u0111\u1ed1i x\u1ee9ng, ta ph\u1ea3i quy \u0111\u1ecbnh cho c\u00e1c \u0111i\u1ec3m cho c\u00e1c c\u1eb7p nh\u01b0 <code>AC</code> v\u00e0 <code>CA</code> b\u1eb1ng nhau. Do t\u00ednh \u0111\u1ed1i x\u1ee9ng n\u00e0y, ta c\u1eadp nh\u1eadt l\u1ea1i m\u1ea3ng t\u1ea7n s\u1ed1 xu\u1ea5t hi\u1ec7n \u0111\u1ec3 t\u00ednh c\u1ea3 c\u00e1c c\u1eb7p \u0111\u1ed1i x\u1ee9ng. \u0110\u1ed1i v\u1edbi v\u00ed d\u1ee5 tr\u00ean, ta c\u00f3 b\u1ea3ng t\u1ea7n s\u1ed1 m\u1edbi nh\u01b0 sau:</p> AA: 14 AC+CA: 11 AG+GA: 10 AT+TA: 10 CC: 4 CG+GC: 2 TC+CT: 0 GG: 0 GT+TG: 3 TT: 1 <p>T\u1eeb tr\u1ef1c gi\u00e1c ta c\u00f3 th\u1ec3 th\u1ea5y ngay \u0111\u1ebfn ph\u01b0\u01a1ng \u00e1n nh\u01b0 sau: \u0111\u00e3 s\u1ebd g\u00e1n \u0111i\u1ec3m s\u1ed1 c\u00e0ng cao \u0111\u1ed1i v\u1edbi c\u1eb7p xu\u1ea5t hi\u1ec7n c\u00e0ng nhi\u1ec1u l\u1ea7n.</p> <p>4) C\u00e1c ph\u1ea7n t\u1eed tr\u00ean \u0111\u01b0\u1eddng ch\u00e9o ph\u1ea3i d\u01b0\u01a1ng (\\(S(x, x) &gt; 0\\))</p> <p>Do t\u00ednh ch\u1ea5t n\u00e0y, ta ph\u1ea3i x\u00e9t ri\u00eang hai lo\u1ea1i ph\u1ea7n t\u1eed:</p> <ul> <li>4 ph\u1ea7n t\u1eed tr\u00ean \u0111\u01b0\u1eddng ch\u00e9o (c\u00e1c ph\u1ea7n t\u1eed \u0111\u1ea1i di\u1ec7n cho <code>AA</code>, <code>CC</code>, <code>GG</code>, <code>TT</code>)</li> <li>6 ph\u1ea7n t\u1eed kh\u00f4ng n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng ch\u00e9o (c\u00e1c ph\u1ea7n t\u1eed \u0111\u1ea1i di\u1ec7n cho <code>AC + CA</code>, <code>AG + GA</code>, <code>AT + TA</code>, <code>CG + GC</code>, <code>CT + TC</code>, <code>GT +TG</code>).</li> </ul> <p>Ta x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m th\u1ee9 nh\u1ea5t. C\u00f3 \\(10^4 = 10,000\\) tr\u01b0\u1eddng h\u1ee3p kh\u00e1c nhau. V\u1edbi m\u1ed7i tr\u01b0\u1eddng h\u1ee3p c\u1ee7a nh\u00f3m th\u1ee9 nh\u1ea5t, ta s\u1ebd t\u00ecm \u0111\u00e1p \u00e1n t\u1ed1i \u01b0u cho nh\u00f3m th\u1ee9 2.</p> <ul> <li>V\u1edbi m\u1ed7i tr\u01b0\u1eddng h\u1ee3p, ta c\u00f3 t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m th\u1ee9 nh\u1ea5t n\u1eb1m trong kho\u1ea3ng \\([4, 40]\\), n\u00ean t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m th\u1ee9 2 n\u1eb1m trong kho\u1ea3ng $[-20, -2] (ch\u00fa \u00fd r\u1eb1ng nh\u00f3m th\u1ee9 2 \u0111\u1ed1i x\u1ee9ng, m\u1ed7i ph\u1ea7n t\u1eed xu\u1ea5t hi\u1ec7n 2 l\u1ea7n trong ma tr\u1eadn S, n\u00ean ta ph\u1ea3i nh\u00e2n \u0111\u00f4i)</li> <li>V\u00ec c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m 2 c\u00f3 chung t\u00ednh ch\u1ea5t, ta s\u1eed d\u1ee5ng Tham lam \u0111\u1ec3 t\u00ecm k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u cho nh\u00f3m th\u1ee9 2.</li> </ul> <p>Nh\u1eafc l\u1ea1i t\u01b0 t\u01b0\u1edfng c\u1ee7a Tham lam: t\u1ea1i m\u1ed7i b\u01b0\u1edbc, ta ch\u1ecdn m\u1ed9t l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u c\u1ee5c b\u1ed9. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y ngh\u0129a l\u00e0 ta x\u00e9t l\u1ea7n l\u01b0\u1ee3t t\u1eebng ph\u1ea7n t\u1eed, v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed, g\u00e1n cho n\u00f3 gi\u00e1 tr\u1ecb t\u1ed1i \u01b0u.</p> <p>Nh\u1eadn x\u00e9t:</p> <p>N\u1ebfu ta x\u00e9t l\u1ea7n l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n, \u1edf m\u1ed7i b\u01b0\u1edbc ta g\u00e1n gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 cho ph\u1ea7n t\u1eed \u0111\u00f3, th\u00ec k\u1ebft qu\u1ea3 thu \u0111\u01b0\u1ee3c s\u1ebd t\u1ed1i \u01b0u.</p> <p>Do \u0111\u00f3, c\u00e1ch l\u00e0m l\u00e0:</p> <ul> <li>S\u1eafp x\u1ebfp 6 ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m 2 theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n (theo ma tr\u1eadn \\(F\\)).</li> <li>Hai gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean s\u1ebd \u0111\u01b0\u1ee3c g\u00e1n b\u1eb1ng \\(10\\) (v\u00ec tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t ta c\u1ea7n t\u1ed5ng b\u1eb1ng -20, th\u00ec ta v\u1eabn c\u00f3 th\u1ec3 g\u00e1n 4 gi\u00e1 tr\u1ecb c\u00f2n l\u1ea1i l\u00e0 -10).</li> <li>Ta bi\u1ebft r\u1eb1ng s\u1ed1 \u0111i\u1ec3m cu\u1ed1i c\u00f9ng s\u1ebd nh\u1ecf h\u01a1n \\(0\\). B\u1edfi v\u00ec ta mu\u1ed1n t\u1ed1i \u0111a h\u00f3a s\u1ed1 \u0111i\u1ec3m c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 3, n\u00ean ba ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i s\u1ebd lu\u00f4n l\u00e0 \\(-10\\):</li> <li>Trong tr\u01b0\u1eddng h\u1ee3p t\u1ed1t nh\u1ea5t, t\u1ed5ng b\u1eb1ng -2, ta thu \u0111\u01b0\u1ee3c: \\([10, 10, 8, -10, -10, -10]\\).</li> <li>Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, t\u1ed5ng b\u1eb1ng -20, ta thu \u0111\u01b0\u1ee3c: \\([10, 10, -10, -10, -10, -10]\\).</li> <li>Ta c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 c\u00e1c t\u1ed5ng t\u1eeb -20 \u0111\u1ebfn -2 b\u1eb1ng vi\u1ec7c thay \u0111\u1ed5i gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed th\u1ee9 3 t\u1eeb 8 \u0111\u1ebfn -10.</li> </ul> <p>Gi\u1edd ta c\u1ea7n ch\u1ee9ng minh r\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p c\u1ee7a m\u00ecnh l\u00e0 \u0111\u00fang.</p> <ul> <li>V\u00ec ta x\u00e9t h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u1ee7a nh\u00f3m 1, n\u00ean ta ch\u1ec9 c\u1ea7n ch\u1ee9ng minh c\u00e1ch ch\u1ecdn c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m 2 l\u00e0 t\u1ed1i \u01b0u.</li> <li>V\u00ec t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a nh\u00f3m 2 c\u1ed1 \u0111\u1ecbnh, n\u00ean n\u1ebfu ta t\u0103ng 1 ph\u1ea7n t\u1eed, th\u00ec ph\u1ea3i gi\u1ea3m 1 ph\u1ea7n t\u1eed kh\u00e1c.</li> <li>G\u1ecdi \\(f_1\\) v\u00e0 \\(f_2\\) l\u00e0 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a 2 s\u1ed1 b\u1ea5t k\u1ef3 c\u1ee7a nh\u00f3m 2. Ta c\u00f3:</li> <li>\\(f_1 \\* s_1 + f_2 \\* s_2 = X\\).</li> <li>Kh\u00f4ng l\u00e0m m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(f_1 \\ge f_2\\). Do c\u00e1ch tham, ta c\u00f3 \\(s_1 \\ge s_2\\). Ta c\u0169ng c\u00f3 \\(s_1\\) l\u00e0 l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3, n\u00ean ta kh\u00f4ng th\u1ec3 t\u0103ng \\(s_1\\).</li> <li>Gi\u1ea3 s\u1eed c\u00e1ch l\u00e0m c\u1ee7a ta kh\u00f4ng t\u1ed1i \u01b0u, ngh\u0129a l\u00e0 ta c\u00f3 m\u1ed9t c\u00e1ch ch\u1ecdn 1 s\u1ed1 \\(a\\) sao cho:</li> <li>\\(f_1 \\* (s_1 - a) + f_2 \\* (s_2 + a) = Y\\) v\u1edbi \\(a\\) l\u00e0 s\u1ed1 d\u01b0\u01a1ng.</li> <li>Ta c\u00f3 \\(Y-X = a * (f2-f1)\\). B\u1edfi v\u00ec \\(f1 \\ge f2\\) n\u00ean \\(Y-X\\) lu\u00f4n \u00e2m.</li> </ul> <p>Do v\u1eady, c\u00e1ch l\u00e0m c\u1ee7a ta l\u00e0 t\u1ed1i \u01b0u.</p> <p>C\u00e0i \u0111\u1eb7t</p> <p>\u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean s\u1ebd \u0111\u01b0\u1ee3c minh h\u1ecda trong \u0111o\u1ea1n m\u00e3 gi\u1ea3 d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>Best = -Infinity\nFor S[1] = 1 to 10\n  For S[2] = 1 to 10\n    For S[3] = 1 to 10\n      For S[4] = 1 to 10\n        If (S[1] + S[2] + S[3] + S[4]) mod 2 = 0)\n          S[5] = S[6] = 10\n          S[7] = 10 - (S[1] + S[2] + S[3] + S[4]) / 2\n          S[8] = S[9] = S[10] = -10)\n\n          // bi\u1ebfn Best s\u1ebd l\u01b0u l\u1ea1i gi\u00e1 tr\u1ecb trung b\u00ecnh l\u1edbn nh\u1ea5t t\u00ecm \u0111\u01b0\u1ee3c\n          Best = max (Best, score (F, S))\n        Endif\n      Endfor\n    Endfor\n  Endfor\nEndfor\nReturn Best\n</code></pre> <p>\u0110\u1ed1i v\u1edbi m\u1ea3ng l\u01b0u \u0111i\u1ec3m \u0111\u00e3 cho (trong tr\u01b0\u1eddng h\u1ee3p c\u1ee7a ch\u00fang ta l\u00e0 m\u1ea3ng \\(S\\)), ta s\u1ebd t\u00ednh k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng b\u1eb1ng vi\u1ec7c ch\u1ec9 t\u00ednh t\u1ed5ng c\u1ee7a t\u00edch \\(F[I] \\* S[I] (1 \\le I \\le 10)\\).</p>"},{"location":"translate/topcoder/Greedy-is-Good/#goldmine","title":"GoldMine","text":"<p>B\u00e0i to\u00e1n</p> <p>C\u00f3 \\(N\\) m\u1ecf v\u00e0ng, m\u1ed7i m\u1ecf v\u00e0ng ch\u1ee9a \u0111\u01b0\u1ee3c t\u1ed1i \u0111a \\(6\\) c\u00f4ng nh\u00e2n. B\u1eb1ng c\u00e1ch ph\u00e2n b\u1ed5 c\u00e1c c\u00f4ng nh\u00e2n, c\u00f4ng ty s\u1ebd thu \u0111\u01b0\u1ee3c (ho\u1eb7c m\u1ea5t \u0111i) s\u1ed1 ti\u1ec1n nh\u01b0 sau:</p> <ul> <li> <p>N\u1ebfu m\u1ecf v\u00e0ng c\u00f3 \u00edt nh\u00e2n c\u00f4ng h\u01a1n tr\u1eef l\u01b0\u1ee3ng c\u1ee7a n\u00f3, c\u00f4ng ty s\u1ebd thu \u0111\u01b0\u1ee3c \\(60\\)$ v\u1edbi m\u1ed7i c\u00f4ng nh\u00e2n.</p> </li> <li> <p>N\u1ebfu m\u1ecf v\u00e0ng c\u00f3 s\u1ed1 c\u00f4ng nh\u00e2n b\u1eb1ng v\u1edbi tr\u1eef l\u01b0\u1ee3ng c\u1ee7a n\u00f3, c\u00f4ng ty s\u1ebd thu \u0111\u01b0\u1ee3c \\(50\\)$ cho v\u1edbi m\u1ed7i c\u00f4ng nh\u00e2n.</p> </li> <li> <p>N\u1ebfu m\u1ecf v\u00e0ng c\u00f3 s\u1ed1 c\u00f4ng nh\u00e2n nhi\u1ec1u h\u01a1n tr\u1eef l\u01b0\u1ee3ng c\u1ee7a n\u00f3, c\u00f4ng ty s\u1ebd \u0111\u01b0\u1ee3c s\u1ed1 ti\u1ec1n l\u00e0 \\(50\\) nh\u00e2n cho tr\u1eef l\u01b0\u1ee3ng m\u1ecf. V\u1edbi m\u1ed7i c\u00f4ng nh\u00e2n b\u1ecb th\u1eeba ra so v\u1edbi s\u1ea3n l\u01b0\u1ee3ng m\u1ecf, c\u00f4ng ty s\u1ebd b\u1ecb m\u1ea5t \u0111i \\(20\\)$.</p> </li> </ul> <p>D\u00f9 cho c\u00f3 b\u1ecb m\u1ea5t ti\u1ec1n \u0111i ch\u0103ng n\u1eefa th\u00ec c\u00f4ng ty c\u0169ng bu\u1ed9c ph\u1ea3i ph\u00e2n c\u00f4ng \u0111\u1ee7 c\u00e1c c\u00f4ng nh\u00e2n v\u00e0o c\u00e1c m\u1ecf.</p> <p>Ph\u00e2n t\u00edch</p> <p>B\u1eb1ng vi\u1ec7c s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p tham lam, ta s\u1ebd ph\u00e2n t\u00edch xem c\u00e1ch m\u1ed9t m\u1ecf v\u00e0ng b\u1ecb khai th\u00e1c tri\u1ec7t. Kinh nghi\u1ec7m cho th\u1ea5y, \u0111\u1ed1i v\u1edbi d\u1ea1ng b\u00e0i nh\u01b0 t\u00ecm ki\u1ebfm gi\u00e1 tr\u1ecb t\u1ed1i \u0111a, th\u01b0\u1eddng ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u1eb1ng Tham lam. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, m\u1ee5c ti\u00eau c\u1ee7a ta l\u00e0 ch\u1ec9 \u0111\u1ecbnh nh\u1eefng c\u00f4ng nh\u00e2n \u0111\u1ebfn c\u00e1c m\u1ecf v\u00e0ng sao cho t\u1ed5ng l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c l\u00e0 t\u1ed1i \u0111a. Ph\u00e2n t\u00edch nhanh, ta th\u1ea5y r\u1eb1ng c\u1ea7n ph\u1ea3i bi\u1ebft l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c t\u1eeb c\u00e1c m\u1ecf v\u00e0ng trong t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p (ch\u1ec9 c\u00f3 7 tr\u01b0\u1eddng h\u1ee3p - t\u1eeb 0 \u0111\u1ebfn 6 c\u00f4ng nh\u00e2n). B\u1ea3ng d\u01b0\u1edbi \u0111\u00e2y s\u1ebd cho ta th\u1ea5y l\u1ee3i nhu\u1eadn kh\u1ea3 thi \u0111\u1ed1i v\u1edbi hai m\u1ecf \u1edf v\u00ed d\u1ee5 0 trong b\u00e0i:</p> 0 ng\u01b0\u1eddi 1 ng\u01b0\u1eddi 2 ng\u01b0\u1eddi 3 ng\u01b0\u1eddi 4 ng\u01b0\u1eddi 5 ng\u01b0\u1eddi 6 ng\u01b0\u1eddi M\u1ecf 1 $0$ $57$ $87$ $87$ $67$ $47$ $27$ M\u1ecf 2 $0$ $52$ $66$ $75$ $75$ $66$ $48$ <p>N\u1ebfu ta ch\u1ec9 c\u00f3 duy nh\u1ea5t m\u1ed9t c\u00f4ng nh\u00e2n, l\u1ef1a ch\u1ecdn t\u1ed1i \u01b0u ch\u00ednh l\u00e0 cho anh ta v\u00e0o m\u1ecf n\u01a1i m\u00e0 anh ta mang l\u1ea1i nhi\u1ec1u l\u1ee3i nhu\u1eadn nh\u1ea5t. Nh\u01b0ng n\u1ebfu ta c\u00f3 nhi\u1ec1u c\u00f4ng nh\u00e2n, ta c\u1ea7n ph\u1ea3i ki\u1ec3m tra xem n\u1ebfu ph\u00e2n c\u00f4ng anh \u1edf m\u1ecf t\u01b0\u01a1ng t\u1ef1 c\u00f3 mang l\u1ea1i l\u1ee3i nhu\u1eadn c\u1ee5c b\u1ed9 t\u1ed1i \u01b0u kh\u00f4ng.</p> <p>Trong v\u00ed d\u1ee5, ta c\u00f3 4 c\u00f4ng nh\u00e2n c\u1ea7n \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng. B\u1ea3ng d\u01b0\u1edbi \u0111\u00e2y s\u1ebd cho bi\u1ebft l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c c\u1ee7a m\u1ed7i m\u1ecf v\u1edbi t\u1eebng c\u00f4ng nh\u00e2n \u0111\u01b0\u1ee3c th\u00eam v\u00e0o.</p> Ban \u0111\u1ea7u Ng\u01b0\u1eddi 1 Ng\u01b0\u1eddi 2 Ng\u01b0\u1eddi 3 Ng\u01b0\u1eddi 4 Ng\u01b0\u1eddi 5 Ng\u01b0\u1eddi 6 M\u1ecf 1 $-$ $57$ $30$ $0$ $-20$ $-20$ $-20$ M\u1ecf 1 $-$ $52$ $14$ $9$ $  0$ $-9 $ $-20$ <p>Ta \u0111\u1ec3 \u00fd r\u1eb1ng, m\u1ecf 1 s\u1ebd t\u0103ng th\u00eam 57 n\u1ebfu ta th\u00eam v\u00e0o m\u1ed9t c\u00f4ng nh\u00e2n, trong khi m\u1ecf 2 ch\u1ec9 t\u0103ng th\u00eam 52. Th\u1ebf n\u00ean, ta s\u1ebd ph\u00e2n b\u1ed1 ng\u01b0\u1eddi \u0111\u1ea7u ti\u00ean v\u00e0o m\u1ecf 1.</p> Ban \u0111\u1ea7u Ng\u01b0\u1eddi 1 Ng\u01b0\u1eddi 2 Ng\u01b0\u1eddi 3 Ng\u01b0\u1eddi 4 Ng\u01b0\u1eddi 5 Ng\u01b0\u1eddi 6 M\u1ecf 1 $-$ $57$ $30$ $0$ $-20$ $-20$ -20 M\u1ecf 1 $-$ $52$ $14$ $9$ $  0$ $-9 $ $-20$ <p>Gi\u1edd, n\u1ebfu ta th\u00eam c\u00f4ng nh\u00e2n v\u00e0o m\u1ecf 1, ta ch\u1ec9 t\u0103ng l\u1ee3i nhu\u1eadn \u0111\u01b0\u1ee3c th\u00eam 30. B\u1edfi v\u1eady n\u00ean ta s\u1ebd th\u00eam c\u00f4ng nh\u00e2n v\u00e0o m\u1ecf 2, l\u00fac n\u00e0y l\u1ee3i nhu\u1eadn ta thu \u0111\u01b0\u1ee3c s\u1ebd t\u0103ng th\u00eam 52.</p> Ban \u0111\u1ea7u Ng\u01b0\u1eddi 1 Ng\u01b0\u1eddi 2 Ng\u01b0\u1eddi 3 Ng\u01b0\u1eddi 4 Ng\u01b0\u1eddi 5 Ng\u01b0\u1eddi 6 M\u1ecf 1 $-$ $57$ $30$ $0$ $-20$ $-20$ $-20$ M\u1ecf 1 $-$ $52$ $14$ $9$   $0$ $-9 $ $-20$ <p>C\u00f4ng nh\u00e2n th\u1ee9 3 s\u1ebd c\u00f3 \u00edch h\u01a1n khi l\u00e0m \u1edf m\u1ecf 1 v\u1edbi l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c l\u00e0 30.</p> Ban \u0111\u1ea7u Ng\u01b0\u1eddi 1 Ng\u01b0\u1eddi 2 Ng\u01b0\u1eddi 3 Ng\u01b0\u1eddi 4 Ng\u01b0\u1eddi 5 Ng\u01b0\u1eddi 6 M\u1ecf 1 $-$ $57$ $30$ $0$ $-20$ $-20$ $-20$ M\u1ecf 1 $-$ $52$ $14$ $9$   $0$ $-9$  $-20$ <p>V\u1edbi c\u00f4ng nh\u00e2n th\u1ee9 4, ta c\u00f3 th\u1ec3 cho anh ta v\u00e0o m\u1ecf 1 (v\u1edbi l\u1ee3i nhu\u1eadn l\u00e0 0) ho\u1eb7c m\u1ecf 2 (v\u1edbi l\u1ee3i nhu\u1eadn l\u00e0 14). D\u0129 nhi\u00ean, ta s\u1ebd ph\u00e2n c\u00f4ng anh \u1ea5y v\u00e0o m\u1ecf hai.</p> Ban \u0111\u1ea7u Ng\u01b0\u1eddi 1 Ng\u01b0\u1eddi 2 Ng\u01b0\u1eddi 3 Ng\u01b0\u1eddi 4 Ng\u01b0\u1eddi 5 Ng\u01b0\u1eddi 6 M\u1ecf 1 $-$ $57$ $30$ $0$ $-20$ $-20$ $-20$ M\u1ecf 1 $-$ $52$ $14$ $9$   $0$ $-9$  $-20$ <p>Cu\u1ed1i c\u00f9ng, hai c\u00f4ng nh\u00e2n c\u00f2n l\u1ea1i s\u1ebd \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng b\u1eb1ng c\u00e1ch cho c\u1ea3 hai v\u00e0o l\u00e0m \u1edf m\u1ecf 2 ho\u1eb7c m\u1ed7i ng\u01b0\u1eddi l\u00e0m \u1edf m\u1ed9t m\u1ecf ri\u00eang. V\u00ed d\u1ee5 cho ta th\u1ea5y k\u1ebft qu\u1ea3 m\u00e0 ta v\u1eeba t\u00ecm \u0111\u01b0\u1ee3c ch\u00ednh l\u00e0 k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u. Nh\u01b0ng c\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0 li\u1ec7u ph\u01b0\u01a1ng ph\u00e1p n\u00e0y c\u00f3 lu\u00f4n \u0111\u00fang hay kh\u00f4ng?</p> <p>Kh\u1eb3ng \u0111\u1ecbnh: Ta lu\u00f4n lu\u00f4n thu \u0111\u01b0\u1ee3c t\u1ed5ng l\u1ee3i nhu\u1eadn l\u1edbn nh\u1ea5t khi l\u1ea7n l\u01b0\u1ee3t cho t\u1eebng c\u00f4ng nh\u00e2n v\u00e0o m\u1ecf c\u00f3 l\u1ee3i nhu\u1eadn cao nh\u1ea5t \u1edf th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i.</p> <p>Ch\u1ee9ng minh: G\u1ecdi \\(A, B\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 m\u1ecf 1 v\u00e0 m\u1ecf 2, \\(a1, b1, a2, b2\\) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau:</p> <ul> <li> <p>\\(a1\\) - l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c khi ph\u00e2n c\u00f4ng th\u00eam m\u1ed9t c\u00f4ng nh\u00e2n v\u00e0o \\(A\\).</p> </li> <li> <p>\\(a1+a2\\) - l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c khi ph\u00e2n c\u00f4ng th\u00eam hai c\u00f4ng nh\u00e2n v\u00e0o \\(A\\).</p> </li> <li> <p>\\(b1\\) - l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c khi ph\u00e2n c\u00f4ng th\u00eam m\u1ed9t c\u00f4ng nh\u00e2n v\u00e0o \\(B\\).</p> </li> <li> <p>\\(b1+b2\\) - l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c khi ph\u00e2n c\u00f4ng th\u00eam hai c\u00f4ng nh\u00e2n v\u00e0o \\(B\\).</p> </li> </ul> <p>Thu\u1eadt to\u00e1n Tham lam c\u1ee7a ta s\u1ebd gia t\u0103ng l\u1ee3i nhu\u1eadn b\u1eb1ng \\(a1\\) cho c\u00f4ng nh\u00e2n \u0111\u1ea7u ti\u00ean v\u00e0 \\((a2+b1)\\) cho c\u00f4ng nh\u00e2n th\u1ee9 2. T\u1ed5ng l\u1ee3i nhu\u1eadn l\u00fac n\u00e0y s\u1ebd l\u00e0 \\(a1+max(a2, b1)\\). N\u1ebfu ban \u0111\u1ea7u ta ch\u1ecdn \\(b1\\) th\u00ec l\u1ee3i nhu\u1eadn c\u1ee7a c\u00f4ng nh\u00e2n th\u1ee9 2 thu \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 \\(a1\\) ho\u1eb7c \\(b2\\).</p> <p>Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u1ea7u ti\u00ean, ta s\u1ebd c\u00f3 \\(a1+b1 \\le a1+max(a2, b1)\\).</p> <p>Trong tr\u01b0\u1eddng h\u1ee3p th\u1ee9 hai, t\u1ed5ng l\u1ee3i nhu\u1eadn s\u1ebd l\u00e0 \\(b1+b2\\). Ta c\u1ea7n ph\u1ea3i ch\u1ee9ng minh \\(b1+b2 \\le a1+max(a2, b1)\\). M\u00e0 ta lu\u00f4n c\u00f3 \\(b1 \\le b2\\) v\u00ec l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c t\u1eeb vi\u1ec7c th\u00eam m\u1ed9t c\u00f4ng nh\u00e2n v\u00e0o m\u1ed9t m\u1ecf lu\u00f4n lu\u00f4n l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng l\u1ee3i nhu\u1eadn thu \u0111\u01b0\u1ee3c t\u1eeb vi\u1ec7c th\u00eam m\u1ed9t c\u00f4ng nh\u00e2n n\u1eefa v\u00e0o m\u1ecf \u0111\u00f3.</p> Tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ecf v\u00e0ng L\u1ee3i nhu\u1eadn t\u1eeb vi\u1ec7c th\u00eam 1 ng\u01b0\u1eddi L\u1ee3i nhu\u1eadn t\u1eeb vi\u1ec7c th\u00eam 1 ng\u01b0\u1eddi S\u1ed1 l\u01b0\u1ee3ng m\u1ecf $&gt;$s\u1ed1 l\u01b0\u1ee3ng ng\u01b0\u1eddi \u0111\u00e0o+2 $60$ $60$ S\u1ed1 l\u01b0\u1ee3ng m\u1ecf $=$ s\u1ed1 l\u01b0\u1ee3ng ng\u01b0\u1eddi \u0111\u00e0o+2 $60$ $50$ S\u1ed1 l\u01b0\u1ee3ng m\u1ecf $=$ s\u1ed1 l\u01b0\u1ee3ng ng\u01b0\u1eddi \u0111\u00e0o+1 $50$ $-20$ S\u1ed1 l\u01b0\u1ee3ng m\u1ecf $&lt;$ s\u1ed1 l\u01b0\u1ee3ng ng\u01b0\u1eddi \u0111\u00e0o+2 $-20$ $-20$ <p>V\u00ec \\(b1+b2 \\le a1+a2 \\le a1+b1 \\le a1+max(a2, b1)\\), l\u1ef1a ch\u1ecdn Tham lam c\u0169ng ch\u00ednh l\u00e0 ph\u01b0\u01a1ng \u00e1n t\u1ed1i \u01b0u.</p> <p>C\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n n\u00e0y ho\u00e0n to\u00e0n kh\u00f4ng kh\u00f3, tuy nhi\u00ean ta c\u1ea7n ph\u1ea3i x\u1eed l\u00fd th\u00eam m\u1ed9t v\u00e0i tr\u01b0\u1eddng h\u1ee3p n\u1eefa (t\u1ea5t c\u1ea3 c\u00e1c c\u00f4ng nh\u00e2n \u0111\u1ec1u ph\u1ea3i \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng, ch\u1ec9 c\u00f3 t\u1ed1i \u0111a s\u00e1u ng\u01b0\u1eddi trong m\u1ed9t m\u1ecf v\u00e0 n\u1ebfu m\u1ed9t c\u00f4ng nh\u00e2n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u1ed1i \u01b0u \u1edf nhi\u1ec1u m\u1ecf, \u01b0u ti\u00ean m\u1ecf c\u00f3 ch\u1ec9 s\u1ed1 nh\u1ecf h\u01a1n).</p>"},{"location":"translate/topcoder/Greedy-is-Good/#worldpeace","title":"WorldPeace","text":"<p>B\u00e0i to\u00e1n: Cho n \u0111\u1ea5t n\u01b0\u1edbc, m\u1ed7i n\u01b0\u1edbc c\u00f3 d\u00e2n s\u1ed1 c\u1ee7a h\u1ecd. H\u00e3y chia th\u00e0nh th\u00e0nh c\u00e1c nh\u00f3m c\u00f3 k ng\u01b0\u1eddi kh\u00f4ng c\u00f3 c\u00f9ng qu\u1ed1c t\u1ecbch. H\u00e3y cho bi\u1ebft s\u1ed1 l\u01b0\u1ee3ng nh\u00f3m t\u1ed1i \u0111a c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c.</p> <p>Ph\u00e2n t\u00edch:</p> <p>Nh\u1eefng thu\u1eadt to\u00e1n Tham lam \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng t\u1ed1t \u1edf m\u1ecdi t\u00ecnh hu\u1ed1ng b\u1edfi ta \u0111\u00e3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a n\u00f3. Nh\u01b0ng c\u00f2n m\u1ed9t l\u1edbp b\u00e0i to\u00e1n t\u1ed1i \u01b0u h\u00f3a n\u1eefa m\u00e0 thu\u1eadt to\u00e1n Tham lam c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng. \u0110\u00e2y l\u00e0 nh\u1eefng b\u00e0i t\u1eadp thu\u1ed9c l\u1edbp NP - \u0111\u1ea7y \u0111\u1ee7 (nh\u01b0 b\u00e0i to\u00e1n ng\u01b0\u1eddi \u0111\u01b0a th\u01b0 TSP Traveling Salesman Problem), \u0111\u1ed1i v\u1edbi d\u1ea1ng b\u00e0i to\u00e1n n\u00e0y, ta th\u01b0\u1eddng s\u1ebd s\u1eed d\u1ee5ng ph\u01b0\u1ee3ng ph\u00e1p nh\u00e1nh c\u1eadn \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 h\u01a1n l\u00e0 ch\u1edd \u0111\u1ee3i ch\u01b0\u01a1ng tr\u00ecnh th\u1ef1c thi... L\u1eddi gi\u1ea3i kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng l\u00e0 t\u1ed1i \u01b0u, song trong ph\u1ea7n l\u1edbn tr\u01b0\u1eddng h\u1ee3p, n\u00f3 \u0111\u00e3 \u0111\u1ee7 t\u1ed1t r\u1ed3i. V\u1edbi m\u1ed9t b\u00e0i to\u00e1n kh\u00f4ng thu\u1ed9c l\u1edbp NP nh\u01b0 th\u1ebf n\u00e0y, \u0111\u00e2y ch\u00ednh l\u00e0 v\u00ed d\u1ee5 tuy\u1ec7t v\u1eddi cho vi\u1ec7c m\u1ed9t thu\u1eadt to\u00e1n Tham lam kh\u00f4ng ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u00e1nh l\u1eeba v\u00e0 v\u01b0\u1ee3t qua c\u00e1c test m\u1eabu, m\u00e0 n\u00f3 c\u00f2n c\u00f3 th\u1ec3 v\u01b0\u1ee3t qua c\u1ea3 nh\u1eefng b\u1ed9 test h\u1ec7 th\u1ed1ng \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf k\u1ef9 c\u00e0ng. Thu\u1eadt to\u00e1n n\u00e0y kh\u00f4ng qu\u00e1 kh\u00f3 \u0111\u1ec3 ngh\u0129 ra, m\u00e0 ch\u1ec9 c\u1ea7n m\u1ed9t v\u00e0i ph\u00e2n t\u00edch nhanh ta c\u00f3 th\u1ec3 nh\u1eadn ra, \u0111\u1ec3 t\u1ed1i \u0111a h\u00f3a t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng nh\u00f3m, lu\u00f4n lu\u00f4n t\u1ed1i \u01b0u \u0111\u1ec3 t\u1ea1o thi\u1ebft l\u1eadp m\u1ed9t nh\u00f3m t\u1eeb k qu\u1ed1c gia c\u00f3 d\u00e2n s\u1ed1 \u0111\u00f4ng nh\u1ea5t. Ch\u00fang ta \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u1edf t\u1eebng b\u01b0\u1edbc v\u00e0 sau \u0111\u00f3 s\u1eafp x\u1ebfp l\u1ea1i \u0111o\u1ea1n \u0111\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c k qu\u1ed1c gia ti\u1ebfp theo c\u00f3 d\u00e2n s\u1ed1 \u0111\u00f4ng nh\u1ea5t. \u00dd t\u01b0\u1edfng n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c minh h\u1ecda trong \u0111o\u1ea1n m\u00e3 gi\u1ea3 d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>Groups = 0\nRepeat\n  // s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n\n  Sort (A)\n  Min = A[K]\n  If Min &gt; 0\n      Groups = Groups + 1\n  For I = 1 to K\n    A[I] = A[I] - 1\n  Endfor\nUntil  Min = 0\nReturn Groups\n</code></pre> <p>Kh\u00f4ng may thay, m\u1ed7i qu\u1ed1c gia l\u1ea1i c\u00f3 t\u1edbi h\u00e0ng t\u1ef7 ng\u01b0\u1eddi d\u00e2n, th\u1ebf n\u00ean ta kh\u00f4ng th\u1ec3 n\u00e0o thi\u1ebft l\u1eadp t\u1eebng nh\u00f3m m\u1ed9t \u0111\u01b0\u1ee3c. V\u1ec1 m\u1eb7t l\u00fd thuy\u1ebft, \u0111\u1ed1i v\u1edbi m\u1ed9t t\u1eadp h\u1ee3p c\u1ee7a k qu\u1ed1c gia, ch\u00fang ta s\u1ebd t\u1ea1o nh\u00f3m cho \u0111\u1ebfn khi m\u00e0 to\u00e0n b\u1ed9 ng\u01b0\u1eddi d\u00e2n c\u1ee7a n\u01b0\u1edbc \u0111\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00e2n nh\u00f3m. V\u00e0 \u0111i\u1ec1u n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n ch\u1ec9 trong 1 b\u01b0\u1edbc:</p> <pre><code>Groups = 0\nRepeat\n  // s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n\n  Sort (A)\n  Min= A[K]\n  Groups = Groups + Min\n  For I = 1 to K\n    A[I] = A[I] - Min\n  Endfor\nUntil Min = 0\nReturn Groups\n</code></pre> <p>Th\u1eddi gian th\u1ef1c thi gi\u1edd kh\u00f4ng c\u00f2n l\u00e0 v\u1ea5n \u0111\u1ec1 n\u1eefa, m\u00e0 v\u1ea5n \u0111\u1ec1 gi\u1edd \u0111\u00e2y ch\u00ednh l\u00e0 t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a thu\u1eadt to\u00e1n! Khi ta th\u1eed v\u00ed d\u1ee5 0 trong b\u00e0i, thu\u1eadt to\u00e1n c\u1ee7a ch\u00fang ta tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 l\u00e0 4 ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 5. Nh\u01b0ng k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 trong v\u00ed d\u1ee5 1, 2 v\u00e0 3 th\u00ec \u0111\u00fang. Trong v\u1edbi v\u00ed d\u1ee5 cu\u1ed1i c\u00f9ng, thay v\u00ec t\u1ea1o ra 3983180234 nh\u00f3m, ta ch\u1ec9 t\u1ea1o \u0111\u01b0\u1ee3c 3983180207 nh\u00f3m m\u00e0 th\u00f4i. B\u1eb1ng vi\u1ec7c ch\u1ec9 k\u1ebft qu\u1ea3 c\u00f3 sai l\u1ec7ch kh\u00f4ng \u0111\u00e1ng k\u1ec3, ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng gi\u1ea3i thu\u1eadt c\u1ee7a m\u00ecnh kh\u00e1 t\u1ed1t. Th\u1ebf n\u00ean gi\u1edd ta ch\u1ec9 c\u1ea7n c\u1ea3i ti\u1ebfn n\u00f3 theo h\u01b0\u1edbng n\u00e0y.</p> <p>Cho \u0111\u1ebfn hi\u1ec7n t\u1ea1i, ta \u0111\u00e3 c\u00f3 trong tay hai thu\u1eadt to\u00e1n: * Thu\u1eadt to\u00e1n tham lam \u0111\u1ea7u ti\u00ean ch\u00ednh x\u00e1c, nh\u01b0ng kh\u00f4ng \u0111\u1ee7 nhanh. * Thu\u1eadt to\u00e1n tham lam th\u1ee9 hai nhanh, nh\u01b0ng l\u1ea1i kh\u00f4ng ch\u00ednh x\u00e1c.</p> <p>Gi\u1edd, \u0111i\u1ec1u m\u00e0 ta c\u1ea7n l\u00e0m \u0111\u00f3 ch\u00ednh l\u00e0 t\u0103ng \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00ean nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3, m\u00e0 th\u1eddi gian th\u1ef1c thi v\u1eabn kh\u00f4ng b\u1ecb qu\u00e1 gi\u1edbi h\u1ea1n. M\u1ed9t c\u00e1ch c\u01a1 b\u1ea3n, ta \u0111ang t\u00ecm ki\u1ebfm s\u1ef1 c\u00e2n b\u1eb1ng gi\u1eefa th\u1eddi gian th\u1ef1c thi v\u00e0 \u0111\u1ed9 ch\u00ednh x\u00e1c. \u0110i\u1ec3m kh\u00e1c bi\u1ec7t duy nh\u1ea5t gi\u1eefa hai thu\u1eadt to\u00e1n k\u1ec3 tr\u00ean ch\u00ednh l\u00e0 s\u1ed1 l\u01b0\u1ee3ng nh\u00f3m m\u00e0 ch\u00fang ta l\u1ef1a ch\u1ecdn \u0111\u01b0\u1ee3c. Ch\u00fang ta s\u1ebd c\u00f3 m\u1ed9t ph\u01b0\u01a1ng \u00e1n nh\u01b0 sau: ta s\u1ebd l\u1ef1a ra m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng l\u1edbn nh\u00f3m ng\u1eabu nhi\u00ean l\u00fac \u0111\u1ea7u, sau \u0111\u00f3 s\u1ebd gi\u1ea3i quy\u1ebft \u0111o\u1ea1n c\u00f2n l\u1ea1i theo c\u00e1ch ti\u1ebfp c\u1eadn an to\u00e0n h\u01a1n. Khi m\u00e0 ch\u00fang ta ch\u1ec9 c\u00f2n l\u1ea1i m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng nh\u1ecf ng\u01b0\u1eddi d\u00e2n ch\u01b0a \u0111\u01b0\u1ee3c ph\u00e2n nh\u00f3m \u1edf c\u00e1c qu\u1ed1c gia, th\u00ec l\u00fac n\u00e0y n\u00f3 ho\u00e0n to\u00e0n h\u1ee3p l\u00ed khi ta s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p v\u00e9t c\u1ea1n. V\u1edbi bi\u1ebfn Allowed \u0111\u01b0\u1ee3c kh\u1ecfi t\u1ea1o trong thu\u1eadt to\u00e1n d\u01b0\u1edbi \u0111\u00e2y, ta \u0111i\u1ec1u khi\u1ec3n s\u1ed1 l\u01b0\u1ee3ng nh\u00f3m m\u00e0 ta mong mu\u1ed1n t\u1ea1o t\u1ea1i th\u1eddi \u0111i\u1ec3m \u0111\u01b0\u1ee3c cho.</p> <pre><code>Groups = 0\nRepeat\n// s\u1eafp x\u1ebfp l\u1ea1i m\u1ea3ng theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n\n  Sort (A)\n  Min = A[K]\n  Allowance = (Min+999) / 1000\n  Groups = Groups + Allowance\n  For I = 1 to K\n    A[I] = A[I] - Allowance\n  Endfor\nUntil Min = 0\nReturn Groups\n</code></pre> <p>N\u1ebfu c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y th\u1eadt s\u1ef1 \u0111\u00fang, ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 nh\u1eadn ra \u0111\u01b0\u1ee3c. M\u1eb7c d\u00f9 n\u00f3 c\u00f3 th\u1ec3 tho\u00e1t kh\u1ecfi \u00e1nh m\u1eaft s\u1eafc nh\u1ecdn c\u1ee7a Tomek c\u0169ng nh\u01b0 l\u00e0 test h\u1ec7 th\u1ed1ng, nh\u01b0ng c\u00f3 v\u1ebb l\u00e0 n\u00f3 s\u1ebd kh\u00f4ng th\u1ec3 n\u00e0o \u0111\u01b0a ra k\u1ebft qu\u1ea3 qu\u1ea3 \u0111\u00fang v\u1edbi m\u1ecdi b\u1ed9 test kh\u1ea3 thi. \u0110\u00e2y ch\u00ednh m\u1ed9t v\u00ed d\u1ee5 cho th\u1ea5y n\u1ebfu \u0111\u01b0\u1ee3c tinh ch\u1ec9nh, t\u1eeb m\u1ed9t thu\u1eadt to\u00e1n tham lam \u0111\u01a1n gi\u1ea3n (nh\u01b0ng v\u1eabn c\u00f2n khi\u1ebfm khuy\u1ebft) c\u0169ng c\u0169ng c\u00f3 th\u1ec3 tr\u1edf th\u00e0nh m\u1ed9t gi\u1ea3i thu\u1eadt \"\u0111\u00fang\". \u0110\u1ec3 bi\u1ebft th\u00eam v\u1ec1 thu\u1eadt to\u00e1n ch\u00ednh x\u00e1c cho b\u00e0i n\u00e0y, xem l\u1eddi gi\u1ea3i \u1edf Match Editorial.</p>"},{"location":"translate/topcoder/Greedy-is-Good/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":"<p>Tham lam th\u01b0\u1eddng d\u1ec5 ngh\u0129 ra, d\u1ec5 c\u00e0i \u0111\u1eb7t v\u00e0 ch\u1ea1y nhanh, nh\u01b0ng kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng \u0111\u00fang. Khi b\u1ea1n s\u1eed d\u1ee5ng duy\u1ec7t ho\u1eb7c quy ho\u1ea1ch \u0111\u1ed9ng, n\u00f3 gi\u1ed1ng nh\u01b0 b\u1ea1n \u0111ang di chuy\u1ec3n tr\u00ean m\u1eb7t \u0111\u1ea5t an to\u00e0n. C\u00f2n \u0111\u1ed1i v\u1edbi tham lam, th\u00ec gi\u1ed1ng nh\u01b0 b\u1ea1n \u0111ang \u0111i tr\u00ean m\u1ed9t b\u00e3i m\u00ecn. Nh\u01b0 b\u1ea1n \u0111\u00e3 th\u1ea5y qua v\u00ed d\u1ee5 1, c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch tham kh\u00e1c nhau nh\u01b0ng ch\u1ec9 c\u00f3 m\u1ed9t c\u00e1ch cho k\u1ebft qu\u1ea3 \u0111\u00fang. V\u00ec v\u1eady, khi l\u00e0m b\u00e0i, b\u1ea1n lu\u00f4n lu\u00f4n n\u00ean t\u00ecm c\u00e1ch ch\u1ee9ng minh t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a thu\u1eadt tham.</p> <p>Kh\u00f4ng t\u1ed3n t\u1ea1i m\u1ed9t c\u00f4ng th\u1ee9c chung n\u00e0o cho vi\u1ec7c \u00e1p d\u1ee5ng Tham lam, tuy nhi\u00ean, ta c\u00f3 th\u1ec3 nh\u00ecn ra thu\u1eadt tham b\u1eb1ng vi\u1ec7c ph\u00e2n t\u00edch c\u00e1c t\u00ednh ch\u1ea5t c\u1ee7a b\u00e0i to\u00e1n, kinh nghi\u1ec7m c\u0169ng nh\u01b0 tr\u1ef1c gi\u00e1c.</p> <p>M\u1ed9t v\u00e0i l\u01b0u \u00fd nh\u1ecf</p> <ul> <li> <p>Nh\u01b0ng b\u00e0i t\u1eadp m\u00e0 c\u00f3 v\u1ebb c\u1ef1c k\u1ef3 ph\u1ee9c t\u1ea1p (nh\u01b0 TCSocks) c\u00f3 th\u1ec3 xem nh\u01b0 l\u00e0 d\u1ea5u hi\u1ec7u \u0111\u1ec3 ti\u1ebfp c\u1eadn b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p Tham lam.</p> </li> <li> <p>Nh\u01b0ng b\u00e0i to\u00e1n m\u00e0 d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o r\u1ea5t l\u1edbn (m\u00e0 k\u1ec3 c\u1ea3 thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n^2)\\) v\u1eabn kh\u00f4ng k\u1ecbp) th\u01b0\u1eddng \u0111\u01b0\u1ee3c gi\u1ea3i b\u1eb1ng tham lam h\u01a1n l\u00e0 quay lui ho\u1eb7c quy ho\u1ea1ch \u0111\u1ed9ng.</p> </li> <li> <p>M\u1eb7c d\u00f9 n\u00f3 c\u00f3 v\u1ebb r\u00f9ng r\u1ee3n, nh\u01b0ng b\u1ea1n n\u00ean nh\u00ecn thu\u1eadt to\u00e1n tham lam d\u01b0\u1edbi \u0111\u00f4i m\u1eaft c\u1ee7a m\u1ed9t th\u00e1m t\u1eed ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 d\u01b0\u1edbi c\u1eb7p k\u00ednh c\u1ee7a m\u1ed9t nh\u00e0 to\u00e1n h\u1ecdc.</p> </li> </ul> <p> M\u1ed9t th\u00e1m t\u1eed gi\u1ecfi tham lam.</p> <p> M\u1ed9t ng\u01b0\u1eddi tham lam may m\u1eafn.</p> <p> M\u1ed9t ng\u01b0\u1eddi tham lam kh\u00f4ng may m\u1eafn.</p> <ul> <li>Ngo\u00e0i ra, vi\u1ec7c h\u1ecdc t\u1eadp m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n c\u00f3 s\u1eed d\u1ee5ng Tham lam s\u1ebd gi\u00fap n\u1eafm v\u1eefng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y h\u01a1n (thu\u1eadt to\u00e1n Prim, thu\u1eadt to\u00e1n Kruskal, thu\u1eadt to\u00e1n Dijkstra)</li> </ul>"},{"location":"translate/topcoder/Greedy-is-Good/#bai-tap-mo-rong","title":"B\u00e0i t\u1eadp m\u1edf r\u1ed9ng","text":""},{"location":"translate/topcoder/Greedy-is-Good/#cap-o-1","title":"C\u1ea5p \u0111\u1ed9 1","text":"<ul> <li>GroceryBagger \u2013 SRM 222</li> <li>FanFailure \u2013 SRM 195</li> <li>PlayGame \u2013 SRM 217</li> <li>SchoolAssembly \u2013 TCO04 Round 2</li> <li>RockStar \u2013 SRM 216</li> <li>Apothecary \u2013 SRM 204</li> <li>Boxing \u2013 TCO04 Round 3</li> <li>Unblur \u2013 TCO04 Semifinal Room 3</li> </ul>"},{"location":"translate/topcoder/Greedy-is-Good/#cap-o-2","title":"C\u1ea5p \u0111\u1ed9 2","text":"<ul> <li>Crossroads \u2013 SRM 217</li> <li>TCSocks \u2013 SRM 207</li> <li>HeatDeath \u2013 TCO04 Round 4</li> <li>BioScore \u2013 TCO04 Semifinal Room 1</li> <li>Rationalization \u2013 SRM 224</li> </ul>"},{"location":"translate/topcoder/Greedy-is-Good/#cap-o-3","title":"C\u1ea5p \u0111\u1ed9 3","text":"<ul> <li>GoldMine \u2013 SRM 169</li> <li>MLBRecord \u2013 TCO04 Round 2</li> <li>RearrangeFurniture \u2013 SRM 220</li> <li>WorldPeace \u2013 SRM 204</li> </ul>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/","title":"X\u00e1c su\u1ea5t","text":"<p>Ngu\u1ed3n: Understanding Probabilities - Topcoder</p> <p>X\u00e1c su\u1ea5t l\u00e0 m\u1ed9t nh\u00e1nh c\u1ee7a To\u00e1n h\u1ecdc c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng trong th\u1ef1c t\u1ebf, ch\u1eb3ng h\u1ea1n nh\u01b0 trong ph\u00e2n t\u00edch gi\u00e1 c\u1ea3 th\u1ecb tr\u01b0\u1eddng, chu\u1ea9n b\u1ecb chi\u1ebfn l\u01b0\u1ee3c trong thi \u0111\u1ea5u th\u1ec3 thao, d\u1ef1 b\u00e1o th\u1eddi ti\u1ebft.. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a x\u00e1c su\u1ea5t tr\u00ean Quora.</p> <p>\u0110a s\u1ed1 c\u00e1c b\u00e0i to\u00e1n v\u1ec1 x\u00e1c su\u1ea5t \u0111\u1ec1u \u0111\u01b0\u1ee3c l\u1ea5y v\u00ed d\u1ee5 t\u1eeb th\u1ef1c t\u1ebf. V\u00ed d\u1ee5:</p> <p>K\u1ef3 thi s\u1eafp \u0111\u1ebfn, c\u00f3 20 ch\u1ee7 \u0111\u1ec1 c\u1ea7n h\u1ecdc v\u00e0 b\u1ea1n ch\u1ec9 c\u00f3 \u0111\u1ee7 th\u1eddi gian \u0111\u1ec3 h\u1ecdc 15 ch\u1ee7 \u0111\u1ec1. N\u1ebfu trong b\u00e0i ki\u1ec3m tra ch\u1ec9 c\u00f3 2 c\u00e2u h\u1ecfi (m\u1ed7i c\u00e2u h\u1ecfi v\u1ec1 1 ch\u1ee7 \u0111\u1ec1), th\u00ec x\u00e1c su\u1ea5t b\u1ea1n c\u00f3 th\u1ec3 tr\u1ea3 l\u1eddi \u0111c c\u1ea3 2 c\u00e2u l\u00e0 bao nhi\u00eau?</p> <p>Kh\u00f4ng kh\u00f3 \u0111\u1ec3 nh\u1eadn ra b\u00e0i t\u1eadp n\u00e0o c\u1ea7n d\u00f9ng ki\u1ebfn th\u1ee9c v\u1ec1 x\u00e1c su\u1ea5t nh\u01b0ng gi\u1ea3i \u0111\u01b0\u1ee3c ch\u00fang l\u00e0 m\u1ed9t c\u00e2u chuy\u1ec7n ho\u00e0n to\u00e0n kh\u00e1c. Bi\u1ebft c\u00e1ch \u0111\u1ec3 ti\u1ebfp c\u1eadn nh\u1eefng b\u00e0i to\u00e1n nh\u01b0 v\u1eady l\u00e0 m\u1ed9t l\u1ee3i th\u1ebf l\u1edbn trong c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh, v\u00e0 b\u00e0i vi\u1ebft d\u01b0\u1edbi \u0111\u00e2y s\u1ebd trang b\u1ecb nh\u1eefng ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ea3ng cho b\u1ea1n.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#co-ban","title":"C\u01a1 b\u1ea3n","text":"<p>Ta h\u00ecnh dung l\u00e0m vi\u1ec7c v\u1edbi x\u00e1c su\u1ea5t nh\u01b0 ti\u1ebfn h\u00e0nh m\u1ed9t cu\u1ed9c th\u00ed nghi\u1ec7m. T\u1eadp h\u1ee3p c\u1ee7a t\u1ea5t c\u1ea3 nh\u1eefng k\u1ebft qu\u1ea3 (outcome) c\u00f3 th\u1ec3 x\u1ea3y ra c\u1ee7a th\u00ed nghi\u1ec7m \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 kh\u00f4ng gian m\u1eabu (sample space), th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u b\u1edfi \\(S\\). M\u1ed7i k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 x\u1ea3y ra \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t \u0111i\u1ec3m trong kh\u00f4ng gian m\u1eabu.</p> <p>Ch\u00fang ta c\u00f9ng xem x\u00e9t v\u00ed d\u1ee5 d\u01b0\u1edbi \u0111\u00e2y:</p> <ul> <li>Tung x\u00fac s\u1eafc m\u1ed9t l\u1ea7n</li> <li>Kh\u00f4ng gian m\u1eabu $S = {1,2,3,4,5,6} $</li> <li>Tung hai \u0111\u1ed3ng xu</li> <li>Kh\u00f4ng gian m\u1eabu \\(S = { (0, 0), (0, 1), (1, 0), (1, 1) }\\) v\u1edbi 0 th\u1ec3 hi\u1ec7n \u0111\u1ed3ng xu s\u1ea5p v\u00e0 1 th\u1ec3 hi\u1ec7n \u0111\u1ed3ng xu ng\u1eeda.</li> </ul> <p>Ta \u0111\u1ecbnh ngh\u0129a m\u1ed9t bi\u1ebfn c\u1ed1 (event) l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t th\u00ed nghi\u1ec7m. Do \u0111\u00f3, m\u1ed9t bi\u1ebfn c\u1ed1 l\u00e0 m\u1ed9t t\u1eadp con c\u1ee7a kh\u00f4ng gian m\u1eabu \\(S\\). N\u1ebfu ta \u0111\u1eb7t bi\u1ebfn c\u1ed1 l\u00e0 \\(E\\), th\u00ec \\(E \\subseteq S\\). M\u1ed9t bi\u1ebfn c\u1ed1 c\u00f3 th\u1ec3 ch\u1ec9 bao g\u1ed3m m\u1ed9t k\u1ebft qu\u1ea3 duy nh\u1ea5t trong kh\u00f4ng gian m\u1eabu. Bi\u1ebfn c\u1ed1 bao g\u1ed3m nhi\u1ec1u h\u01a1n m\u1ed9t k\u1ebft qu\u1ea3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn c\u1ed1 ph\u1ee9c h\u1ee3p (compound event), v\u00ed d\u1ee5 nh\u01b0 trong th\u00ed nghi\u1ec7m tung 2 \u0111\u1ed3ng xu \u1edf tr\u00ean.</p> <p>C\u00e1i ch\u00fang ta quan t\u00e2m nh\u1ea5t l\u00e0 x\u00e1c su\u1ea5t \u0111\u1ec3 m\u1ed9t bi\u1ebfn c\u1ed1 nh\u1ea5t \u0111\u1ecbnh x\u1ea3y ra, \\(P(E)\\). Theo \u0111\u1ecbnh ngh\u0129a, \\(P(E)\\) l\u00e0 m\u1ed9t s\u1ed1 th\u1ef1c trong kho\u1ea3ng t\u1eeb \\(0\\) \u0111\u1ebfn \\(1\\), trong \u0111\u00f3 \\(0\\) th\u1ec3 hi\u1ec7n bi\u1ebfn c\u1ed1 kh\u00f4ng c\u00f3 kh\u1ea3 n\u0103ng x\u1ea3y ra v\u00e0 \\(1\\) th\u1ec3 hi\u1ec7n bi\u1ebfn c\u1ed1 ch\u1eafc ch\u1eafn x\u1ea3y ra (hay l\u00e0 to\u00e0n b\u1ed9 kh\u00f4ng gian m\u1eabu).</p> <p>/uploads/translate_topcoder_undertstandprobabilities_1.gif</p> <ul> <li>Impossible Event: bi\u1ebfn c\u1ed1 ch\u1eafc ch\u1eafn ko th\u1ec3 x\u1ea3y ra</li> <li>Certain: bi\u1ebfn c\u1ed1 ch\u1eafc ch\u1eafn x\u1ea3y ra</li> <li>Even chance: bi\u1ebfn c\u1ed1 c\u00f3 x\u00e1c su\u1ea5t 50-50.</li> </ul> <p>Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp, m\u1ed7i k\u1ebft qu\u1ea3 kh\u1ea3 thi \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi \u0111\u00fang m\u1ed9t \u0111i\u1ec3m trong kh\u00f4ng gian m\u1eabu. \u0110i\u1ec1u n\u00e0y \u0111\u01b0a ta \u0111\u1ebfn c\u00f4ng th\u1ee9c:</p> <p>\\(P(E) = \\frac{\\left \\| E \\right \\|}{\\left \\| S \\right \\|}\\)</p> <p>N\u00f3i c\u00e1ch kh\u00e1c, ta c\u00f3 th\u1ec3 t\u00ednh x\u00e1c su\u1ea5t \u0111\u1ec3 m\u1ed9t bi\u1ebfn c\u1ed1 x\u1ea3y ra b\u1eb1ng c\u00e1ch chia s\u1ed1 k\u1ebft qu\u1ea3 thu\u1ed9c bi\u1ebfn c\u1ed1 \\(E\\) cho t\u1ed5ng s\u1ed1 k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 x\u1ea3y ra (theo kh\u00f4ng gian m\u1eabu \\(S\\)). \u0110\u1ec3 di\u1ec5n t\u1ea3 m\u1ed1i quan h\u1ec7 gi\u1eefa c\u00e1c bi\u1ebfn c\u1ed1, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng c\u00e1c quy \u01b0\u1edbc t\u1eeb l\u00fd thuy\u1ebft v\u1ec1 t\u1eadp h\u1ee3p. X\u00e9t tr\u01b0\u1eddng h\u1ee3p tung con x\u00fac s\u1eafc m\u1ed9t l\u1ea7n. Nh\u01b0 tr\u00ean, ta c\u00f3 \\(S = \\{1,2,3,4,5,6\\}\\). Xem x\u00e9t nh\u1eefng bi\u1ebfn c\u1ed1 d\u01b0\u1edbi \u0111\u00e2y:</p> <ul> <li>Bi\u1ebfn c\u1ed1 \\(A\\): \u0111i\u1ec3m &gt; 3: \\({4,5,6}\\)</li> <li>Bi\u1ebfn c\u1ed1 \\(B\\): \u0111i\u1ec3m l\u00e0 s\u1ed1 l\u1ebb: \\({1,3,5}\\)</li> <li>Bi\u1ebfn c\u1ed1 \\(C\\): \u0111i\u1ec3m l\u00e0 7: $\\varnothing $</li> <li>\\(A \\cup B\\): \u0111i\u1ec3m &gt; 3 ho\u1eb7c \u0111i\u1ec3m l\u00e0 s\u1ed1 l\u1ebb: \\(={1, 3, 4, 5, 6}\\)</li> <li>\\(A \\cap B\\): \u0111i\u1ec3m &gt; 3 v\u00e0 l\u00e0 s\u1ed1 l\u1ebb: $ {5}$</li> <li>\\(A'\\): bi\u1ebfn c\u1ed1 A kh\u00f4ng x\u1ea3y ra: \\({1, 2, 3}\\)</li> </ul> <p>X\u00e1c su\u1ea5t:</p> <ul> <li>\\(P(A \\cup B) = 5/6\\)</li> <li>\\(P(A \\cap B) = 1/6\\)</li> <li>$P(A\u2019) = 1 \u2013 P(A) = 1 \u2013 1/2 = 1/2 $</li> <li>\\(P(C) = 0\\)</li> </ul> <p>B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean khi gi\u1ea3i m\u1ed9t b\u00e0i to\u00e1n v\u1ec1 x\u00e1c su\u1ea5t l\u00e0 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c kh\u00f4ng gian m\u1eabu. Ti\u1ebfp theo, b\u1ea1n s\u1ebd ph\u1ea3i x\u00e1c \u0111\u1ecbnh s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed c\u1ee7a bi\u1ebfn c\u1ed1 th\u1ecfa m\u00e3n. \u0110\u00e2y l\u00e0 c\u00e1ch ti\u1ebfp c\u1eadn c\u01a1 b\u1ea3n, nh\u01b0ng khi \u00e1p d\u1ee5ng, n\u00f3 c\u00f3 th\u1ec3 thay \u0111\u1ed5i t\u00f9y v\u00e0o t\u1eebng b\u00e0i t\u1eadp.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>QuizShow (SRM 223, Div 1 \u2013 Easy).</p> <p>T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i</p> <p>Trong m\u1ed9t cu\u1ed9c thi, b\u1ea1n \u0111ang \u0111\u1ea5u v\u1edbi 2 ng\u01b0\u1eddi n\u1eefa \u0111\u1ec3 ti\u1ebfn v\u00e0o c\u00e2u h\u1ecfi cu\u1ed1i c\u00f9ng. M\u1ed7i ng\u01b0\u1eddi \u0111ang s\u1edf h\u1eefu m\u1ed9t s\u1ed1 \u0111i\u1ec3m nh\u1ea5t \u0111\u1ecbnh gi\u00e0nh \u0111\u01b0\u1ee3c t\u1eeb c\u00e1c c\u00e2u h\u1ecfi tr\u01b0\u1edbc. T\u1ea1i c\u00e2u h\u1ecfi n\u00e0y, m\u1ed7i ng\u01b0\u1eddi s\u1ebd \u0111\u01b0a ra s\u1ed1 \u0111i\u1ec3m c\u01b0\u1ee3c trong kho\u1ea3ng t\u1eeb 0 \u0111\u1ebfn s\u1ed1 \u0111i\u1ec3m \u0111ang c\u00f3, n\u1ebfu tr\u1ea3 l\u1eddi \u0111\u00fang s\u1ebd \u0111\u01b0\u1ee3c s\u1ed1 \u0111i\u1ec3m c\u01b0\u1ee3c n\u00e0y, tr\u1ea3 l\u1eddi sai s\u1ebd b\u1ecb tr\u1eeb \u0111\u00fang b\u1eb1ng s\u1ed1 \u0111i\u1ec3m \u0111\u00e3 c\u01b0\u1ee3c. \u0110\u1ec3 chi\u1ebfn th\u1eafng, b\u1ea1n ph\u1ea3i l\u00e0 ng\u01b0\u1eddi s\u1edf h\u1eefu s\u1ed1 \u0111i\u1ec3m cao nh\u1ea5t sau khi ho\u00e0n th\u00e0nh c\u00e2u h\u1ecfi cu\u1ed1i c\u00f9ng.</p> <p>B\u1ea1n bi\u1ebft \u0111i\u1ec3m hi\u1ec7n t\u1ea1i c\u1ee7a c\u1ea3 3 ng\u01b0\u1eddi (s\u1ed1 nguy\u00ean kh\u00f4ng qu\u00e1 \\(10^4\\)), v\u00e0 gi\u00e1 tr\u1ecb ti\u1ec1n c\u01b0\u1ee3c c\u1ee7a 2 ng\u01b0\u1eddi kia.</p> <p>H\u1ecfi b\u1ea1n n\u00ean c\u01b0\u1ee3c bao nhi\u00eau \u0111\u1ec3 x\u00e1c su\u1ea5t th\u1eafng l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>Ph\u00e2n t\u00edch</p> <p>M\u1ea5u ch\u1ed1t \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n l\u00e0 x\u00e9t \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c kh\u1ea3 n\u0103ng c\u00f3 th\u1ec3, s\u1ed1 l\u01b0\u1ee3ng n\u00e0y kh\u00f4ng nhi\u1ec1u. Sau m\u1ed9t l\u00fac \u0111\u00e1nh gi\u00e1, ta s\u1ebd x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c kh\u00f4ng gian m\u1eabu:</p> <pre><code>S = {\n  ( ng\u01b0\u1eddi 1 \u0111\u00fang, ng\u01b0\u1eddi 2 sai, b\u1ea1n sai),\n  ( ng\u01b0\u1eddi 1 \u0111\u00fang, ng\u01b0\u1eddi 2 sai, b\u1ea1n \u0111\u00fang),\n  ( ng\u01b0\u1eddi 1 \u0111\u00fang, ng\u01b0\u1eddi 2 \u0111\u00fang, b\u1ea1n sai),\n  ( ng\u01b0\u1eddi 1 \u0111\u00fang, ng\u01b0\u1eddi 2 \u0111\u00fang, b\u1ea1n \u0111\u00fang),\n\n  ( ng\u01b0\u1eddi 1 sai, ng\u01b0\u1eddi 2 sai, b\u1ea1n sai),\n  ( ng\u01b0\u1eddi 1 sai, ng\u01b0\u1eddi 2 sai, b\u1ea1n \u0111\u00fang),\n  ( ng\u01b0\u1eddi 1 sai, ng\u01b0\u1eddi 2 \u0111\u00fang, b\u1ea1n sai),\n  ( ng\u01b0\u1eddi 1 sai, ng\u01b0\u1eddi 2 \u0111\u00fang, b\u1ea1n \u0111\u00fang)\n}\n</code></pre> <p>\u0110\u1ec1 b\u00e0i y\u00eau c\u1ea7u b\u1ea1n t\u00ecm s\u1ed1 ti\u1ec1n c\u01b0\u1ee3c \u0111\u1ec3 t\u1ed1i \u0111a s\u1ed1 k\u1ebft qu\u1ea3 m\u00e0 trong \u0111\u00f3 b\u1ea1n th\u1eafng. \u0110\u1ec3 \u0111\u1ebfm \u0111\u01b0\u1ee3c s\u1ed1 k\u1ebft qu\u1ea3 nh\u01b0 v\u1eady cho t\u1eebng s\u1ed1 ti\u1ebfn c\u01b0\u1ee3c, ta c\u1ea7n x\u00e1c \u0111\u1ecbnh xem c\u1ea3 ba ng\u01b0\u1eddi ch\u01a1i s\u1ebd k\u1ebft th\u00fac v\u1edbi bao nhi\u00eau \u0111i\u1ec3m trong 8 tr\u01b0\u1eddng h\u1ee3p c\u00f3 th\u1ec3 x\u1ea3y ra. \u00dd t\u01b0\u1edfng \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n trong code d\u01b0\u1edbi \u0111\u00e2y</p> <pre><code>int wager (vector  scores, int wager1, int wager2)\n{\n int best, bet, odds, wage, I, J, K;\n best = 0; bet = 0;\n\n for (wage = 0; wage &lt;= scores[0]; wage++)\n {\n  odds = 0;\n  // 'odds' dem so ket qua tot\n  for (I = -1; I &lt;= 1; I = I + 2)\n   for (J = -1; J &lt;= 1; J = J + 2)\n    for (K = -1; K &lt;= 1; K = K + 2)\n     if (scores[0] + I * wage &gt; scores[1] + J * wager1  &amp;&amp;\n      scores[0] + I * wage &gt; scores[2] + K * wager2) { odds++; }\n\n  //  mot so tien cuoc tot hon duoc tim thay, cap nhat ket qua\n  if (odds &gt; best)  { bet = wage ; best = odds; }\n }\n return bet;\n}\n</code></pre> <p>M\u1ed9t b\u00e0i th\u00fa v\u1ecb kh\u00e1c l\u00e0 PipeCuts (SRM 233, Div 1 \u2013 Easy), b\u00e0i n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i b\u1eb1ng c\u00e1ch t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#bien-co-oc-lap","title":"Bi\u1ebfn c\u1ed1 \u0111\u1ed9c l\u1eadp","text":"<p>X\u00e9t \\(n\\) bi\u1ebfn c\u1ed1 \u0111\u1ed9c l\u1eadp (independent events): $ E_1, E_2, ..., E_n$ . Hai c\u00e2u h\u1ecfi th\u01b0\u1eddng g\u1eb7p l\u00e0:</p> <ol> <li>X\u00e1c su\u1ea5t \u0111\u1ec3 t\u1ea5t c\u1ea3 bi\u1ebfn c\u1ed1 x\u1ea3y ra?: \\(P(all)\\)</li> <li>X\u00e1c su\u1ea5t \u0111\u1ec3 \u00edt nh\u1ea5t m\u1ed9t bi\u1ebfn c\u1ed1 trong s\u1ed1 ch\u00fang x\u1ea3y ra? \\(P(any)\\)</li> </ol> <p>\u0110\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi th\u1ee9 nh\u1ea5t, ta x\u00e9t bi\u1ebfn c\u1ed1 \u0111\u1ea7u ti\u00ean (\\(E_1\\)):</p> <ul> <li>N\u1ebfu \\(E_1\\) kh\u00f4ng x\u1ea3y ra, gi\u1ea3 thuy\u1ebft kh\u00f4ng c\u00f2n \u0111\u00fang n\u1eefa.</li> <li>V\u00ec v\u1eady, ph\u1ea3i ch\u1eafc r\u1eb1ng \\(E1\\) s\u1ebd x\u1ea3y ra v\u1edbi x\u00e1c su\u1ea5t \\(P(E_1)\\). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 c\u00f3 x\u00e1c su\u1ea5t \\(P(E_1)\\) \u0111\u1ec3 ta ki\u1ec3m tra s\u1ef1 x\u1ea3y ra c\u1ee7a bi\u1ebfn c\u1ed1 ti\u1ebfp theo (g\u1ecdi l\u00e0 \\(E_2\\)).</li> <li>Bi\u1ebfn c\u1ed1 \\(E_2\\) x\u1ea3y ra v\u1edbi x\u00e1c su\u1ea5t l\u00e0 \\(P(E_2)\\), v\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 ti\u1ebfp t\u1ee5c qu\u00e1 tr\u00ecnh n\u00e0y t\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady.</li> </ul> <p>V\u00ec x\u00e1c su\u1ea5t \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 m\u1ed9t s\u1ed1 th\u1ef1c n\u1eb1m trong kho\u1ea3ng t\u1eeb 0 \u0111\u1ebfn 1, ta t\u1ed5ng h\u1ee3p \u0111\u01b0\u1ee3c x\u00e1c su\u1ea5t \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00e1c bi\u1ebfn c\u1ed1 x\u1ea3y ra b\u1eb1ng c\u00f4ng th\u1ee9c d\u01b0\u1edbi \u0111\u00e2y:</p> <p>$P(all) = P(E_1) * P(E_2) * ... * P(En) $</p> <p>C\u00e1ch t\u1ed1t nh\u1ea5t \u0111\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi th\u1ee9 hai l\u00e0 t\u00ecm x\u00e1c su\u1ea5t \u0111\u1ec3 kh\u00f4ng c\u00f3 bi\u1ebfn c\u1ed1 n\u00e0o di\u1ec5n ra v\u00e0 l\u1ea5y ph\u1ea7n b\u00f9.</p> <p>$P(any) = 1 - P(E_1') * P(E_2') * ... * P(E_n') $</p> <p>Nh\u1eefng c\u00f4ng th\u1ee9c tr\u00ean \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng r\u1ea5t nhi\u1ec1u, c\u1ea7n n\u1eafm ch\u1eafc \u0111\u1ec3 \u0111i \u0111\u1ec1n ph\u1ea7n ti\u1ebfp theo.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#birthdayodds","title":"BirthdayOdds","text":"<p>M\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh \u0111\u1ec3 m\u00f4 t\u1ea3 n\u1ed9i dung x\u00e1c su\u1ea5t \u0111\u01b0\u1ee3c b\u00e0n lu\u1eadn \u1edf ph\u1ea7n tr\u00ean l\u00e0  Ngh\u1ecbch l\u00ed v\u1ec1 ng\u00e0y sinh (Birthday Paradox): N\u1ebfu c\u00f3 \u00edt nh\u1ea5t 23 ng\u01b0\u1eddi trong m\u1ed9t c\u0103n ph\u00f2ng, x\u00e1c su\u1ea5t \u0111\u1ec3 2 ng\u01b0\u1eddi b\u1ea5t k\u00ec trong s\u1ed1 h\u1ecd c\u00f3 c\u00f9ng ng\u00e0y sinh l\u00e0 l\u1edbn h\u01a1n 0.5. Tho\u1ea1t nh\u00ecn, k\u1ebft qu\u1ea3 n\u00e0y c\u00f3 v\u1ebb tr\u00e1i ng\u01b0\u1ee3c v\u1edbi tr\u1ef1c gi\u00e1c th\u00f4ng th\u01b0\u1eddng nh\u01b0ng n\u00f3 ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh b\u1eb1ng to\u00e1n h\u1ecdc.</p> <p>B\u00e2y gi\u1edd, m\u1ed9t b\u00e0i to\u00e1n \u0111\u1eb7t ra l\u00e0 t\u00ecm s\u1ed1 ng\u01b0\u1eddi nh\u1ecf nh\u1ea5t \u0111\u1ec3 x\u00e1c su\u1ea5t c\u00f3 \u00edt nh\u1ea5t 2 ng\u01b0\u1eddi trong s\u1ed1 h\u1ecd c\u00f9ng ng\u00e0y sinh nh\u1eadt l\u00e0 l\u1edbn h\u01a1n x %. \u0110\u00f4i khi trong c\u00e1c b\u00e0i to\u00e1n x\u00e1c su\u1ea5t, c\u00e1ch ti\u1ebfp c\u1eadn d\u1ec5 d\u00e0ng h\u01a1n l\u00e0 th\u1eed gi\u1ea3i b\u00e0i to\u00e1n ng\u01b0\u1ee3c: \"T\u00ecm x\u00e1c su\u1ea5t \u0111\u1ec3 \\(N\\) ng\u01b0\u1eddi ng\u1eabu nhi\u00ean c\u00f3 ng\u00e0y sinh kh\u00e1c nhau?\". Chi\u1ebfn thu\u1eadt l\u00e0 b\u1eaft \u0111\u1ea7u v\u1edbi m\u1ed9t c\u00e1i ph\u00f2ng r\u1ed7ng v\u00e0 l\u1ea7n l\u01b0\u1ee3t th\u00eam t\u1eebng ng\u01b0\u1eddi m\u1ed9t v\u00e0o v\u00e0 so s\u00e1nh ng\u00e0y sinh c\u1ee7a ng\u01b0\u1eddi \u0111\u00f3 v\u1edbi t\u1ea5t c\u1ea3 nh\u1eefng ng\u01b0\u1eddi \u0111\u00e3 c\u00f3 trong ph\u00f2ng.</p> <pre><code>int minPeople (int minOdds, int days) {\n  int nr;\n  double target, p;\n\n  target = 1 - (double) minOdds / 100;\n  nr = 1;\n  p = 1;\n\n  while (p &gt; target) {\n    p = p * ( (double) 1 - (double) nr / days);\n    nr ++;\n  }\n\n  return nr;\n}\n</code></pre> <p>C\u00e1c b\u00e0i to\u00e1n v\u1ec1 x\u00e1c su\u1ea5t c\u00f3 th\u1ec3 r\u1ea5t ph\u1ee9c t\u1ea1p v\u00e0 nhi\u1ec1u khi k\u1ebft qu\u1ea3 t\u1ea1o c\u1ea3m gi\u00e1c m\u00e2u thu\u1eabn v\u1edbi nh\u1eefng nh\u1eadn \u0111inh th\u00f4ng th\u01b0\u1eddng c\u1ee7a ch\u00fang ta (V\u00ed d\u1ee5 nh\u01b0 Ngh\u1ecbch l\u00ed v\u1ec1 ng\u00e0y sinh \u1edf tr\u00ean ho\u1eb7c m\u1ed9t v\u00ed d\u1ee5 kh\u00e1c l\u00e0  B\u00e0i to\u00e1n Monty Hall). \u0110\u1ec3 c\u00f3 th\u1ec3 gi\u1ea3i nh\u01b0ng b\u00e0i to\u00e1n nh\u01b0 v\u1eady m\u1ed9t c\u00e1ch th\u00e0nh th\u1ea1o, ngo\u00e0i vi\u1ec7c n\u1eafm ch\u1eafc c\u00e1c c\u00f4ng th\u1ee9c to\u00e1n h\u1ecdc, c\u00e1c b\u1ea1n c\u0169ng c\u1ea7n luy\u1ec7n t\u1eadp cho m\u00ecnh m\u1ed9t l\u1ed1i t\u01b0 duy, tr\u1ef1c gi\u00e1c to\u00e1n h\u1ecdc nh\u1ea1y b\u00e9n \u0111\u1ec3 tr\u00e1nh \u0111\u01b0a ra nh\u1eefng nh\u1eadn \u0111\u1ecbnh sai l\u1ea7m v\u1ec1 b\u00e0i to\u00e1n. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m b\u00e0i ki\u1ec3m tra \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 tr\u1ef1c gi\u00e1c to\u00e1n h\u1ecdc c\u1ee7a m\u00ecnh.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#cac-kien-thuc-nang-cao","title":"C\u00e1c ki\u1ebfn th\u1ee9c n\u00e2ng cao","text":""},{"location":"translate/topcoder/Hieu-ve-xac-suat/#bien-ngau-nhien-random-variable","title":"Bi\u1ebfn ng\u1eabu nhi\u00ean (Random variable)","text":"<p>Random Variable l\u00e0 m\u1ed9t bi\u1ebfn m\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a m\u1ed9t l\u1ea7n th\u00ed nghi\u1ec7m. V\u00ed d\u1ee5:</p> <ul> <li>\\(X1\\) l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a x\u00fac s\u1eafc.</li> <li>\\(X2\\) l\u00e0 2 l\u1ea7n gi\u00e1 tr\u1ecb x\u00fac s\u1eafc (c\u00f3 th\u1ec3 vi\u1ebft \\(2 * X1\\))</li> <li>\\(X3\\) l\u00e0 b\u00ecnh ph\u01b0\u01a1ng gi\u00e1 tr\u1ecb x\u00fac s\u1eafc</li> <li>...</li> </ul>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#gia-tri-ky-vong-expected-value","title":"Gi\u00e1 tr\u1ecb k\u1ef3 v\u1ecdng (Expected value):","text":"<p>V\u1edbi \\(X\\) l\u00e0 1 random variable, \\(E(X)\\) l\u00e0 gi\u00e1 tr\u1ecb trung b\u00ecnh c\u1ee7a X, n\u1ebfu ta th\u1ef1c hi\u1ec7n th\u00ed nghi\u1ec7m v\u00f4 s\u1ed1 l\u1ea7n. Ta c\u0169ng c\u00f3 th\u1ec3 h\u00ecnh dung nh\u01b0 gi\u00e1 tr\u1ecb trung b\u00ecnh c\u00f3 tr\u1ecdng s\u1ed1.</p> <p>V\u00ed d\u1ee5:</p> <p>C\u00f3 2 l\u1edbp h\u1ecdc:</p> <ul> <li>l\u1edbp A c\u00f3 40 h\u1ecdc sinh v\u00e0 \u0111i\u1ec3m trung b\u00ecnh l\u00e0 5</li> <li>l\u1edbp B c\u00f3 30 h\u1ecdc sinh v\u00e0 \u0111i\u1ec3m trung b\u00ecnh l\u00e0 6</li> </ul> <p>\u0110i\u1ec3m trung b\u00ecnh c\u1ee7a t\u1ea5t c\u1ea3 h\u1ecdc sinh l\u00e0:</p> <p><code>(5 * 40 + 6 * 30) / (40 + 30) = 5 * (40 / 70) + 6 * (30 / 70)</code></p> <p>C\u00e1c tr\u1ecdng s\u1ed1 \\(40 / 70\\) v\u00e0 \\(30 / 70\\) \u0111\u01b0\u1ee3c nh\u00e2n th\u00eam do s\u1ed1 l\u01b0\u1ee3ng tr\u01b0\u1eddng h\u1ee3p \u0111i\u1ec3m 5 v\u00e0 6 kh\u00e1c nhau.</p> <p>C\u00f4ng th\u1ee9c t\u1ed5ng qu\u00e1t:</p> <p><code>E(X) = prob(X = 1) * 1 + prob(X = 2) * 2 + ...</code></p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#linearity-of-expectation","title":"Linearity of Expectation","text":"<p>Linearity of Expectation l\u00e0 1 k\u0129 n\u0103ng r\u1ea5t quan tr\u1ecdng nh\u1ea5t khi l\u00e0m c\u00e1c b\u00e0i v\u1ec1 Expected value.</p> <p>V\u00ed d\u1ee5:</p> <ul> <li>Tung 2 x\u00fac s\u1eafc</li> <li>T\u00ednh Expected value c\u1ee7a t\u1ed5ng gi\u00e1 tr\u1ecb 2 x\u00fac s\u1eafc.</li> </ul> <p>X\u00e9t ri\u00eang t\u1eebng x\u00fac s\u1eafc:</p> <ul> <li>\u0110\u1eb7t \\(E(X1)\\) l\u00e0 expected value c\u1ee7a gi\u00e1 tr\u1ecb x\u00fac s\u1eafc 1</li> <li>\u0110\u1eb7t \\(E(X2)\\) l\u00e0 expected value c\u1ee7a gi\u00e1 tr\u1ecb x\u00fac s\u1eafc 2</li> </ul> <p>\\(E(X1) = E(X2) = (1/6) \\* 1 + (1/6) \\* 2 + ... + (1/6) \\* 6 = 3.5\\).</p> <p>Linearity of Expectation cho ta c\u00f4ng th\u1ee9c sau:</p> <p>\\(E(X1 + X2) = E(X1) + E(X2) = 7\\).</p> <p>Ph\u00e1t bi\u1ec3u ch\u00ednh x\u00e1c:</p> <p>N\u1ebfu \\(X1\\), \\(X2\\), ..., \\(Xk\\) l\u00e0 c\u00e1c random variable c\u00f3 c\u00f9ng kh\u00f4ng gian m\u1eabu:</p> <p>\\(E(X1 \\* a1 + X2 \\* a2 + ... + Xk \\* ak) = a1 \\* E(X1) + a2 \\* E(X2) + ... + ak \\* E(Xk)\\).</p> <p>Ch\u00fa \u00fd r\u1eb1ng c\u00e1c bi\u1ebfn kh\u00f4ng c\u1ea7n \u0111\u1ed9c l\u1eadp.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#tinh-xac-suat-tung-buoc-mot","title":"T\u00ednh x\u00e1c su\u1ea5t t\u1eebng b\u01b0\u1edbc m\u1ed9t","text":"<p>Trong ph\u1ea7n d\u01b0\u1edbi \u0111\u00e2y, ch\u00fang ta s\u1ebd ti\u1ebfp t\u1ee5c th\u1ea3o lu\u1eadn m\u1ed9t v\u00e0i b\u00e0i t\u1eadp tr\u00ean Topcoder m\u00e0 trong \u0111\u00f3: X\u00e1c su\u1ea5t c\u1ee7a m\u1ed9t bi\u1ebfn c\u1ed1 b\u1ecb \u1ea3nh h\u01b0\u1edfng b\u1edfi bi\u1ebfn c\u1ed1 kh\u00e1c.</p> <p>Ch\u00fang ta c\u00f3 th\u1ec3 h\u00ecnh dung n\u00f3 nh\u01b0 m\u1ed9t \u0111\u1ed3 th\u1ecb m\u00e0 trong \u0111\u00f3:</p> <ul> <li>M\u1ed7i n\u00fat l\u00e0 m\u1ed9t bi\u1ebfn c\u1ed1</li> <li>M\u1ed7i c\u1ea1nh th\u1ec3 hi\u1ec7n s\u1ef1 ph\u1ee5 thu\u1ed9c gi\u1eefa c\u00e1c bi\u1ebfn c\u1ed1.</li> </ul> <p>So s\u00e1nh n\u00e0y h\u01a1i g\u01b0\u1ee3ng \u00e9p, nh\u01b0ng c\u00e1ch ch\u00fang ta t\u00ednh to\u00e1n x\u00e1c su\u1ea5t cho c\u00e1c bi\u1ebfn c\u1ed1 r\u1ea5t gi\u1ed1ng c\u00e1ch ch\u00fang ta duy\u1ec7t qua c\u00e1c \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb: Ta b\u1eaft \u0111\u1ea7u \u1edf g\u1ed1c - l\u00e0 tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u v\u00e0 c\u00f3 x\u00e1c su\u1ea5t l\u00e0 1. Sau \u0111\u00f3, ta xem x\u00e9t c\u00e1c c\u1ea1nh k\u1ec1 \u0111\u1ec3 \u0111\u1ebfn c\u00e1c kh\u1ea3 n\u0103ng kh\u00e1c nhau k\u00e8m theo c\u00e1c x\u00e1c su\u1ea5t t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#nested-randomness","title":"Nested Randomness","text":"<p>T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i:</p> <p>H\u00e0m <code>random(N)</code> tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 nguy\u00ean ng\u1eabu nhi\u00ean trong kho\u1ea3ng t\u1eeb \\(0\\) \u0111\u1ebfn \\(N-1\\), m\u1ed7i s\u1ed1 c\u00f3 x\u00e1c su\u1ea5t \u0111\u01b0\u1ee3c tr\u1ea3 l\u1ea1i nh\u01b0 nhau v\u00e0 b\u1eb1ng \\(1/N\\).</p> <p>Gi\u1edd x\u00e9t <code>random(random(N))</code>. \u0110\u1ec3 d\u1ec5 h\u00ecnh dung, ta x\u00e9t \\(N=4\\):</p> <ul> <li><code>random(N)</code> tr\u1ea3 l\u1ea1i c\u00e1c s\u1ed1 nguy\u00ean 0 \u0111\u1ebfn 3 v\u1edbi x\u00e1c su\u1ea5t b\u1eb1ng nhau l\u00e0 \\(1/4\\).</li> <li><code>random(random(N))</code>, ta c\u00f3 4 tr\u01b0\u1eddng h\u1ee3p v\u1edbi x\u00e1c su\u1ea5t b\u1eb1ng nhau (ph\u1ee5 thu\u1ed9c v\u00e0o k\u1ebft qu\u1ea3 c\u1ee7a h\u00e0m <code>random</code> b\u00ean trong):</li> <li><code>random(0)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/4\\): b\u00e1o l\u1ed7i</li> <li><code>random(1)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/4\\): lu\u00f4n tr\u1ea3 v\u1ec1 0</li> <li><code>random(2)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/4\\): tr\u1ea3 v\u1ec1 0 ho\u1eb7c 1 v\u1edbi x\u00e1c su\u1ea5t \\(1/2\\).</li> <li><code>random(3)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/4\\): tr\u1ea3 v\u1ec1 0, 1, ho\u1eb7c 2 v\u1edbi x\u00e1c su\u1ea5t \\(1/3\\).</li> <li>N\u1ebfu x\u00e9t ti\u1ebfp <code>random(random(random(N)))</code>:</li> <li><code>random(0)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/4 + 1/8 + 1/12 = 11/24\\)</li> <li><code>random(1)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/8 + 1/12 = 5/24\\)</li> <li><code>random(2)</code>: \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi x\u00e1c su\u1ea5t \\(1/12\\)</li> <li>...</li> </ul> <p>Ta h\u00ecnh dung b\u1eb1ng h\u00ecnh sau:</p> <p>/uploads/translate_topcoder_understandprobabilties_02.gif</p> <p>Code \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y</p> <pre><code>double probability (int N, int nestings, int target) {\n  int I, J, K;\n  double A[1001], B[2001];\n  // A[I] la xac suat de so I xuat hien\n\n  for (I = 0; I &lt; N ; I++)\n    A[I] = (double) 1 / N;\n\n  for (K = 2; K &lt;= nestings; K++) {\n    for (I = 0; I &lt; N; I++)\n      B[I] = 0;\n\n    // voi moi I giua 0 den N-1, ta goi ham random(I)\n    // theo yeu cau de bai\n    for (I = 0; I &lt; N; I++)\n      for (J = 0; J &lt; I; J++)\n        B[J] +=  (double) A[I] / I;\n\n    for (I = 0; I &lt; N; I++)\n      A[I] = B[I];\n  }\n  return A[target];\n}\n</code></pre> <p>B\u00e0i t\u1eadp t\u01b0\u01a1ng t\u1ef1:</p> <ul> <li>ChessKnight,</li> <li>DiceThrows,</li> <li>RockSkipping,</li> <li>PointSystem,</li> <li>VolleyBall</li> </ul>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#geneticcrossover","title":"GeneticCrossover","text":""},{"location":"translate/topcoder/Hieu-ve-xac-suat/#khai-niem","title":"Kh\u00e1i ni\u1ec7m","text":"<p>\u1ede b\u00e0i n\u00e0y c\u00f3 kh\u00e1i ni\u1ec7m v\u1ec1 x\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n (conditional probability):</p> <p>X\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n l\u00e0 x\u00e1c su\u1ea5t \u0111\u1ec3 m\u1ed9t bi\u1ebfn c\u1ed1 A n\u00e0o \u0111\u00f3 x\u1ea3y ra, bi\u1ebft r\u1eb1ng m\u1ed9t bi\u1ebfn c\u1ed1 B kh\u00e1c \u0111\u00e3 x\u1ea3y ra.</p> <p>K\u00fd hi\u1ec7u \\(P(A\\|B)\\), v\u00e0 \u0111\u1ecdc l\u00e0 \"x\u00e1c su\u1ea5t c\u1ee7a A, bi\u1ebft B\". N\u1ebfu \\(A\\) v\u00e0 \\(B\\) l\u00e0 c\u00e1c bi\u1ebfn c\u1ed1, v\u00e0 \\(P(B) &gt; 0\\), th\u00ec x\u00e1c su\u1ea5t c\u00f3 \u0111i\u1ec1u ki\u1ec7n c\u1ee7a \\(A\\) n\u1ebfu bi\u1ebft \\(B\\) l\u00e0:</p> <p>\\(P(A\\|B) = \\frac{P(A \\cap B)}{P(B)}\\)</p> <p>T\u01b0\u01a1ng \u0111\u01b0\u01a1ng, ta c\u00f3</p> <p>\\(P(A \\cap B) = P(A\\|B) P(B)\\)</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#tom-tat-e-bai","title":"T\u00f3m t\u1eaft \u0111\u1ec1 b\u00e0i","text":"<p>Theo di truy\u1ec1n h\u1ecdc \u1edf \u0111\u1ed9ng v\u1eadt, m\u1ed7i c\u1eb7p gen s\u1ebd bi\u1ec3u th\u1ecb m\u1ed9t t\u00ednh tr\u1ea1ng. M\u1ed7i gen c\u00f3 hai d\u1ea1ng c\u01a1 b\u1ea3n l\u00e0 tr\u1ed9i ho\u1eb7c l\u1eb7n. N\u1ebfu trong c\u1eb7p gen c\u00f3 gen tr\u1ed9i th\u00ec t\u00ednh tr\u1ea1ng c\u1ee7a gen tr\u1ed9i n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n ra ngo\u00e0i, ng\u01b0\u1ee3c l\u1ea1i, tr\u01b0\u1eddng h\u1ee3p c\u1ea3 hai \u0111\u1ec1u l\u00e0 gen l\u1eb7n th\u00ec t\u00ednh tr\u1ea1ng c\u1ee7a gen l\u1eb7n n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n ra ngo\u00e0i.</p> <p>Ngo\u00e0i ra, m\u1ed9t s\u1ed1 gen c\u00f2n c\u00f3 t\u00ednh ph\u1ee5 thu\u1ed9c. N\u1ebfu m\u1ed9t gen ph\u1ee5 thu\u1ed9c v\u00e0o m\u1ed9t gen kh\u00e1c th\u00ec gen \u0111\u00f3 ch\u1ec9 c\u00f3 th\u1ec3  th\u1ec3 hi\u1ec7n t\u00ednh tr\u1ed9i n\u1ebfu gen n\u00f3 ph\u1ee5 thu\u1ed9c v\u00e0o c\u0169ng th\u1ec3 hi\u1ec7n t\u00ednh tr\u1ed9i. B\u00ean c\u1ea1nh \u0111\u00f3, c\u00f3 nh\u1eefng gen kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o b\u1ea5t c\u1ee9 gen n\u00e0o kh\u00e1c v\u00e0 t\u00ednh tr\u1ea1ng c\u1ee7a n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n nh\u01b0 trong \u0111o\u1ea1n \u0111\u1ea7u. \u0110\u1ea3m b\u1ea3o kh\u00f4ng c\u00f3 tr\u01b0\u1eddng h\u1ee3p m\u1ed9t gen ph\u1ee5 thu\u1ed9c v\u00e0o ch\u00ednh n\u00f3 hay chu\u1ed7i ph\u1ee5 thu\u1ed9c t\u1ea1o th\u00e0nh m\u1ed9t v\u00f2ng (v\u00ed d\u1ee5 I ph\u1ee5 thu\u1ed9c J, J ph\u1ee5 thu\u1ed9c K, K ph\u1ee5 thu\u1ed9c I).</p> <p>Cho \\(n\\) c\u1eb7p gen c\u1ee7a c\u00e1 th\u1ec3 b\u1ed1 m\u1eb9 v\u00e0 m\u1ed9t s\u1ed1 th\u00f4ng tin v\u1ec1 ch\u00fang. V\u1edbi m\u1ed7i c\u1eb7p gen, c\u00e1 th\u1ec3 b\u1ed1/m\u1eb9 s\u1ebd cho con c\u1ee7a ch\u00fang m\u1ed9t trong hai gen. V\u00ed d\u1ee5 nh\u01b0 c\u00e1 th\u1ec3 m\u1eb9 c\u00f3 hai chu\u1ed7i gen l\u00e0 \u2018ABC\u2019 v\u00e0 \u2018abc\u2019 th\u00ec v\u1edbi c\u1eb7p gen \u0111\u1ea7u ti\u00ean, c\u00e1 th\u1ec3 m\u1eb9 c\u00f3 th\u1ec3 cho c\u00e1 th\u1ec3 con gen \u2018a\u2019 ho\u1eb7c \u2018A\u2019, v\u1edbi c\u1eb7p th\u1ee9 hai l\u00e0 \u2018b\u2019 ho\u1eb7c \u2018B\u2019 v\u00e0 c\u1ee9 th\u1ebf. T\u01b0\u01a1ng t\u1ef1 c\u00e1 th\u1ec3 b\u1ed1 s\u1ebd cho c\u00e1 th\u1ec3 con m\u1ed9t gen trong t\u1eebng c\u1eb7p nh\u01b0 v\u1eady. Sau c\u00f9ng, c\u00e1 th\u1ec3 con s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c \\(n\\) c\u1eb7p gen t\u1eeb b\u1ed1 v\u00e0 m\u1eb9. Ch\u1ea5t l\u01b0\u1ee3ng con gi\u1ed1ng c\u1ee7a c\u00e1 th\u1ec3 con \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 d\u1ef1a v\u00e0o t\u00ednh tr\u1ea1ng th\u1ec3 hi\u1ec7n \u1edf m\u1ed7i c\u1eb7p gen. N\u1ebfu c\u1eb7p gen th\u1ee9 \\(i\\) th\u1ec3 hi\u1ec7n t\u00ednh tr\u1ea1ng tr\u1ed9i, ch\u1ea5t l\u01b0\u1ee3ng con gi\u1ed1ng s\u1ebd \u0111\u01b0\u1ee3c c\u1ed9ng th\u00eam <code>troi[i]</code>, c\u00f2n n\u1ebfu l\u00e0 t\u00ednh tr\u1ea1ng l\u1eb7n th\u00ec s\u1ebd c\u1ed9ng th\u00eam <code>lan[i]</code>.</p> <p>Nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n l\u00e0 t\u00ednh gi\u00e1 tr\u1ecb k\u00ec v\u1ecdng c\u1ee7a ch\u1ea5t l\u01b0\u1ee3ng con gi\u1ed1ng.</p> <p>B\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c cung c\u1ea5p 2 chu\u1ed7i gen th\u1ec3 hi\u1ec7n \\(n\\) \\((n \\le 50)\\) c\u1eb7p gen c\u1ee7a c\u00e1 th\u1ec3 m\u1eb9; 2 chu\u1ed7i gen th\u1ec3 hi\u1ec7n \\(n\\) c\u1eb7p gen c\u1ee7a c\u00e1 th\u1ec3 b\u1ed1; 1 m\u1ea3ng \\(n\\) s\u1ed1 nguy\u00ean th\u1ec3 hi\u1ec7n quan h\u1ec7 ph\u1ee5 thu\u1ed9c gi\u1eefa c\u00e1c gen, 2 m\u1ea3ng \\(n\\) s\u1ed1 nguy\u00ean <code>troi[i]</code> va <code>lan[i]</code> l\u00e0 gi\u00e1 tr\u1ecb c\u00f4ng th\u00eam cho ch\u1ea5t l\u01b0\u1ee3ng con gi\u1ed1ng gen th\u1ee9 \\(i\\) th\u1ec3 hi\u1ec7n t\u00ednh tr\u1ea1ng tr\u1ed9i / l\u0103n.</p> <p>T\u1eeb nh\u1eefng d\u1eef li\u1ec7u tr\u00ean, b\u1ea1n c\u1ea7n xu\u1ea5t ra gi\u00e1 tr\u1ecb k\u00ec v\u1ecdng c\u1ea7n t\u00ecm.</p> <p>(ND: Gi\u00e1 tr\u1ecb k\u00ec v\u1ecdng \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00e1ch l\u1ea5y t\u1ed5ng c\u1ee7a t\u1ea5t c\u1ea3 t\u00edch c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 x\u1ea3y ra v\u1edbi x\u00e1c su\u1ea5t \u0111\u1ec3 x\u1ea3y ra gi\u00e1 tr\u1ecb \u0111\u00f3. V\u00ed d\u1ee5:</p> <ul> <li>Gi\u00e1 tr\u1ecb ch\u1ea5t l\u01b0\u1ee3ng con gi\u1ed1ng: x\u00e1c su\u1ea5t \u0111\u1ec3 \u0111\u1ea1t gi\u00e1 tr\u1ecb n\u00e0y</li> <li>17 : 0.5625</li> <li>13 : 0.1875</li> <li>9   : 0.25</li> </ul> <p>V\u1eady gi\u00e1 tr\u1ecb k\u00ec v\u1ecdng c\u1ee7a ch\u1ea5t l\u01b0\u1ee3ng con gi\u1ed1ng s\u1ebd l\u00e0 \\(17 \\* 0.5625 + 13 \\* 0.1875 + 9 \\* 0.25 = 14.25\\))</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#phan-tich","title":"Ph\u00e2n t\u00edch","text":"<p>D\u1ef1a v\u00e0o m\u00f4 t\u1ea3 \u0111\u1ec1 b\u00e0i, c\u00f3 hai tr\u01b0\u1eddng h\u1ee3p c\u00f3 th\u1ec3 x\u1ea3y ra: m\u1ed9t gen kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o gen kh\u00e1c, ho\u1eb7c gen n\u00e0y c\u00f3 ph\u1ee5 thu\u1ed9c.</p> <p>Tr\u01b0\u1eddng h\u1ee3p th\u1ee9 nh\u1ea5t, g\u1ecdi \\(p\\) l\u00e0 x\u00e1c su\u1ea5t m\u00e0 gen n\u00e0y l\u00e0 gen tr\u1ed9i. C\u00f3 4 tr\u01b0\u1eddng h\u1ee3p:</p> <ul> <li>\u00cdt nh\u1ea5t b\u1ed1 ho\u1eb7c m\u1eb9 c\u00f3 hai gen tr\u1ed9i (\\(p = 1\\))</li> <li>M\u1ed7i b\u1ed1 ho\u1eb7c m\u1eb9 c\u00f3 \u0111\u00fang m\u1ed9t gen tr\u1ed9i (\\(p = 0.5\\))</li> <li>M\u1ed7i b\u1ed1 ho\u1eb7c m\u1eb9 c\u00f3 m\u1ed9t gen tr\u1ed9i v\u00e0 ng\u01b0\u1eddi c\u00f2n l\u1ea1i c\u00f3 duy nh\u1ea5t m\u1ed9t gen l\u1eb7n (\\(p = 0.25\\))</li> <li>C\u1ea3 hai b\u1ed1 m\u1eb9 c\u00f3 hai gen l\u1eb7n (\\(p = 0\\))</li> </ul> <p>Tr\u01b0\u1eddng h\u1ee3p th\u1ee9 hai, gen n\u00e0y c\u00f3 ph\u1ee5 thu\u1ed9c v\u00e0o m\u1ed9t gen kh\u00e1c. \u0110i\u1ec1u n\u00e0y l\u00e0m b\u00e0i to\u00e1n tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p h\u01a1n do gen b\u1ecb ph\u1ee5 thu\u1ed9c c\u00f3 th\u1ec3 l\u1ea1i ph\u1ee5 thu\u1ed9c v\u00e0o m\u1ed9t gen kh\u00e1c n\u1eefa v\u00e0 c\u1ee9 th\u1ebf... Do \u0111\u00f3, \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c x\u00e1c su\u1ea5t m\u00e0 m\u1ed9t gen ph\u1ee5 th\u1ed9c l\u00e0 gen tr\u1ed9i, ta c\u1ea7n x\u00e9t x\u00e1c su\u1ea5t \u0111\u1ec3 m\u1ed7i gen trong chu\u1ed7i ph\u1ee5 thu\u1ed9c (b\u1eaft \u0111\u1ea7u t\u1eeb gen \u0111ang x\u00e9t) \u0111\u1ec1u l\u00e0 gen tr\u1ed9i. X\u00e1c su\u1ea5t \u0111\u1ec3 gen \u0111ang x\u00e9t l\u00e0 gen tr\u1ed9i s\u1ebd b\u1eb1ng t\u00edch c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c x\u00e1c su\u1ea5t \u0111\u00f3. Thu\u1eadt to\u00e1n th\u1ef1c hi\u1ec7n m\u1ed9t c\u00e1ch \u0111\u1ec7 quy, v\u00e0 \u0111\u00e2y code ho\u00e0n ch\u1ec9nh cho b\u00e0i t\u1eadp n\u00e0y:</p> <pre><code>int n, d[200];\ndouble power[200];\n\n// here we determine the characteristic for each gene (in power[I]\n// we keep the probability of gene I to be expressed dominantly)\ndouble detchr (string p1a, string p1b, string p2a, string p2b, int nr) {\n  double p, p1, p2;\n  p = p1 = p2 = 1.0;\n  if (p1a[nr] &lt;= 'Z')\n    p1 = p1 - 0.5;\n\n  //  is a dominant gene\n  if (p1b[nr] &lt;= 'Z')\n    p1 = p1 - 0.5;\n  if (p2a[nr] &lt;= 'Z')\n    p2 = p2 - 0.5;\n  if (p2b[nr] &lt;= 'Z')\n    p2 = p2 - 0.5;\n  p = 1 - p1 * p2;\n\n  if (d[nr] != 1)\n    power[nr] = p * detchr (p1a, p1b, p2a, p2b, d[nr]);\n  // gene 'nr' is dependent on gene d[nr]\n  else power[nr] = p;\n  return power[nr];\n}\n\ndouble cross (string p1a, string p1b, string p2a, string p2b,\n vector dom, vector rec, vector dependencies) {\n  int I;\n  double fitness = 0.0;\n\n\n  n = rec.size();\n  for (I = 0; I &lt; n; i++)\n    d[i] = dependencies[i];\n  for (I = 0 ;I &lt; n; I++)\n    power[i] = -1.0;\n  for (I = 0; I &lt; n; i++)\n    if (power[I] == -1.0)\n      detchr (p1a, p1b, p2a, p2b, i);\n\n  // we check if the dominant character of gene I has\n  // not already been computed\n  for (I = 0; I &lt;= n; I++)\n    fitness = fitness + (double) power[i] * dom[i]-(double) (1-power[i]) * rec[i];\n  // we compute the expected 'quality' of an animal based on the\n  // probabilities of each gene to be expressed dominantly\n\n  return fitness;\n}\n</code></pre> <p>B\u00e0i t\u01b0\u01a1ng t\u1ef1: ProbabilityTree</p>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#thuat-toan-ngau-nhien","title":"Thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean","text":"<p>Ta g\u1ecdi nh\u1eefng thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean l\u00e0 nh\u1eefng thu\u1eadt to\u00e1n s\u1eed d\u1ee5ng h\u00e0m ng\u1eabu nhi\u00ean \u0111\u1ec3 \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh trong qu\u00e1 tr\u00ecnh ch\u1ea1y. Kh\u00f4ng gi\u1ed1ng nh\u01b0 nh\u1eefng thu\u1eadt to\u00e1n \u0111\u00e3 x\u00e1c \u0111\u1ecbnh tr\u01b0\u1edbc, v\u1edbi m\u1ed7i d\u1eef li\u1ec7u v\u00e0o x\u00e1c \u0111\u1ecbnh th\u00ec s\u1ebd cho ra duy nh\u1ea5t m\u1ed9t k\u1ebft qu\u1ea3 ra c\u0169ng nh\u01b0 th\u1eddi gian ch\u1ea1y, thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean c\u00f3 th\u1ec3 bi\u1ec3u hi\u1ec7n kh\u00e1c nhau trong m\u1ed7i l\u1ea7n ch\u1ea1y. V\u1ec1 c\u01a1 b\u1ea3n, ta s\u1ebd ph\u00e2n bi\u1ec7t hai lo\u1ea1i c\u1ee7a thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean:</p> <ol> <li>Thu\u1eadt to\u00e1n Monte Carlo: c\u00f3 th\u1ec3 \u0111\u01b0a ra k\u1ebft qu\u1ea3 sai - tuy nhi\u00ean x\u00e1c su\u1ea5t c\u1ee7a sai s\u00f3t l\u00e0 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c.</li> <li>Thu\u1eadt to\u00e1n Las Vegas: lu\u00f4n cho k\u1ebft qu\u1ea3 \u0111\u00fang, v\u00e0 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t gi\u1eefa c\u00e1c l\u1ea7n ch\u1ea1y v\u1edbi c\u00f9ng m\u1ed9t d\u1eef li\u1ec7u v\u00e0o l\u00e0 th\u1eddi gian ch\u1ea1y - ta s\u1ebd nghi\u00ean c\u1ee9u v\u00e0 s\u1ef1 ph\u00e2n ph\u1ed1i theo x\u00e1c su\u1ea5t c\u1ee7a th\u1eddi gian ch\u1ea1y.</li> </ol> <p>Tham kh\u1ea3o t\u00e0i li\u1ec7u t\u1eeb College of Engineering at UIUC \u0111\u1ec3 xem c\u00e1ch c\u00e1c thu\u1eadt to\u00e1n n\u00e0y ho\u1ea1t \u0111\u1ed9ng.</p> <p>M\u1ee5c ti\u00eau ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n ng\u1eabu nhi\u00eau l\u00e0 \u0111\u1ec3 t\u00ecm ki\u1ebfm m\u1ed9t h\u01b0\u1edbng ti\u1ebfp c\u1eadn \u0111\u01a1n gi\u1ea3n h\u01a1n cho nh\u1eefng b\u00e0i to\u00e1n ph\u1ee9c t\u1ea1p ho\u1eb7c kh\u00f4ng c\u00f3 l\u1eddi gi\u1ea3i. Nh\u1eefng thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean kh\u00f4ng \u0111\u1ea3m b\u1ea3o s\u1ebd lu\u00f4n t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u nh\u1ea5t, nh\u01b0ng ch\u00fang c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t k\u1ebft qu\u1ea3 \u0111\u1ee7 t\u1ed1t trong m\u1ed9t gi\u1edbi h\u1ea1n v\u1ec1 th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb \"ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c\".</p> <p>M\u1ed9t c\u00e2u h\u1ecfi th\u00fa v\u1ecb \u0111\u01b0\u1ee3c \u0111\u01b0a ra l\u00e0 li\u1ec7u nh\u1eefng thu\u1eadt to\u00e1n nh\u01b0 v\u1eady c\u00f3 \u00edch trong c\u00e1c k\u00ec thi l\u1eadp tr\u00ecnh hay kh\u00f4ng. Khi b\u1ea1n kh\u00f4ng ngh\u0129 ra m\u1ed9t c\u00e1ch n\u00e0o \u0111\u1ec3 gi\u1ea3i, h\u01b0\u1edbng \u0111i h\u1ee3p l\u00fd l\u00e0 th\u1eed c\u00e0i m\u1ed9t c\u00e1ch random. \u0110\u1ed9 t\u1ed1t c\u1ee7a vi\u1ec7c random ph\u1ee5 thu\u1ed9c nhi\u1ec1u v\u00e0o t\u00ednh ch\u1ea5t c\u1ee7a b\u00e0i to\u00e1n, v\u00e0 khi c\u00f3 kinh nghi\u1ec7m c\u0169ng nh\u01b0 c\u1ea3m nh\u1eadn To\u00e1n h\u1ecdc t\u1ed1t, b\u1ea1n c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c l\u00e0 random c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u00fang \u0111\u01b0\u1ee3c v\u1edbi b\u00e0i to\u00e1n hay kh\u00f4ng. Tham kh\u1ea3o QueenInterference</p> <p>Trong c\u00e1c b\u00e0i to\u00e1n t\u1ed1i \u01b0u h\u00f3a, n\u1ebfu s\u1ed1 nghi\u1ec7m t\u1ed1i \u01b0u kh\u00e1 nhi\u1ec1u so v\u1edbi s\u1ed1 kh\u1ea3 n\u0103ng c\u00f3 th\u1ec3 x\u1ea3y ra, m\u1ed9t thu\u1eadt to\u00e1n random \u0111\u01a1n gi\u1ea3n nh\u01b0 sau c\u0169ng c\u00f3 th\u1ec3 c\u00f3 hi v\u1ecdng ch\u1ea1y \u0111\u00fang:</p> <pre><code>Max = 1000000; attempt = 0;\nwhile (attempt &lt; Max) {\n  answer = solve_random (...);\n  if (better (answer, optimum))\n  // T\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 t\u1ed1t h\u01a1n\n  {\n    optimum = answer;\n    cout &lt;&lt; \"Solution \" &lt;&lt; answer &lt;&lt; \" found on step \" &lt;&lt; attempt &lt;&lt; \"\\n\";\n  }\n  attempt ++;\n}\n</code></pre>"},{"location":"translate/topcoder/Hieu-ve-xac-suat/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<p>ND: M\u00ecnh kh\u00f4ng ch\u00e9p l\u1ea1i danh s\u00e1ch b\u00e0i t\u1eadp trong b\u00e0i vi\u1ebft g\u1ed1c \u1edf Topcoder do sau n\u00e0y t\u00e1c gi\u1ea3 c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda hay b\u1ed5 sung. C\u00e1c b\u1ea1n xem cu\u1ed1i b\u00e0i vi\u1ebft g\u1ed1c tr\u00ean Topcoder \u0111\u1ec3 luy\u1ec7n t\u1eadp th\u00eam.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/","title":"K\u0129 n\u0103ng \u0111\u1ecdc \u0111\u1ec1 Topcoder","text":"<p>T\u00e1c gi\u1ea3: antimatter</p> <p>Ngu\u1ed3n: Topcoder</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#ve-topcoder","title":"V\u1ec1 Topcoder","text":"<p>Topcoder l\u00e0 m\u1ed9t trang web t\u1ed5 ch\u1ee9c c\u00e1c k\u1ef3 thi thu\u1eadt to\u00e1n l\u00e2u \u0111\u1eddi v\u00e0 c\u00f3 uy t\u00edn nh\u1ea5t. V\u1edbi h\u00e0ng ngh\u00ecn \u0111\u1ec1 b\u00e0i t\u1eeb c\u00e1c k\u1ef3 thi \u0111\u00e3 di\u1ec5n ra, Topcoder l\u00e0 m\u1ed9t ngu\u1ed3n \u0111\u1ec3 luy\u1ec7n t\u1eadp r\u1ea5t hi\u1ec7u qu\u1ea3.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 v\u00e0o Web Arena \u0111\u1ec3 t\u00ecm c\u00e1c b\u00e0i c\u0169 c\u1ee7a Topcoder v\u00e0 l\u00e0m b\u00e0i.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>\u0110\u00e3 bao nhi\u00eau l\u1ea7n b\u1ea1n \u0111\u0103ng k\u00ed SRM (Topcoder Single Round Matches), v\u00e0o ph\u00f2ng thi khi h\u1ec7 th\u1ed1ng b\u00e1o, v\u00e0 khi b\u1eaft \u0111\u1ea7u, b\u1ea1n m\u1edf 250... v\u00e0 th\u1ea5y c\u1ef1c kh\u00f3 hi\u1ec3u.</p> <p>C\u00f3 th\u1ec3 \u0111i\u1ec1u \u1ea5y ch\u01b0a bao gi\u1edd x\u1ea3y ra v\u1edbi b\u1ea1n. B\u1ea1n c\u00f3 th\u1ec3 may m\u1eafn, ho\u1eb7c b\u1ea1n \u0111\u00e3 c\u00f3 k\u0129 n\u0103ng \u0111\u1ecdc \u0111\u1ec1 v\u00f4 \u0111\u1ecbch. Tuy nhi\u00ean, r\u1ea5t nhi\u1ec1u ng\u01b0\u1eddi \u0111\u1ea7y kinh nghi\u1ec7m (v\u00e2ng, c\u1ea3 nick \u0111\u1ecf) c\u00f3 th\u1ec3 b\u00f3 tay ng\u1ed3i nh\u00ecn \u0111\u1ec1 m\u00e0 kh\u00f4ng hi\u1ec3u g\u00ec. V\u1ea5n \u0111\u1ec1 n\u00e0y r\u00f5 l\u00e0 nghi\u00eam tr\u1ecdng. L\u00e0m sao b\u1ea1n c\u00f3 th\u1ec3 gi\u1ea3i b\u00e0i khi kh\u00f4ng c\u00f3 b\u1ea5t c\u1ee9 \u00fd t\u01b0\u1edfng n\u00e0o v\u1ec1 vi\u1ec7c m\u00ecnh \u0111ang l\u00e0m ch\u1ee9?</p> <p>May m\u1eafn thay, c\u00e1c b\u00e0i to\u00e1n tr\u00ean Topcoder \u0111\u01b0\u1ee3c vi\u1ebft theo m\u1ed9t c\u00e1ch \u0111\u1eb7c bi\u1ec7t. </p> <p>Bi\u1ebft \u0111\u01b0\u1ee3c h\u01b0\u1edbng l\u00e0m c\u1ee7a m\u00ecnh quanh c\u00e1c ch\u1ee7 \u0111\u1ec1 kh\u00e1c nhau s\u1ebd gi\u00fap b\u1ea1n hi\u1ec3u r\u00f5 n\u1ed9i dung c\u1ee7a b\u00e0i to\u00e1n h\u01a1n.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#cac-muc-cua-e-bai","title":"C\u00e1c m\u1ee5c c\u1ee7a \u0111\u1ec1 b\u00e0i","text":""},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#muc-e-bai-problem-statement","title":"M\u1ee5c \u0111\u1ec1 b\u00e0i (Problem Statement)","text":"<p>\u0110\u1ec1 b\u00e0i th\u01b0\u1eddng b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c tr\u00ecnh b\u00e0y v\u1ec1 b\u00e0i to\u00e1n, th\u00f4ng qua m\u1ed9t c\u00e2u chuy\u1ec7n th\u1ef1c t\u1ebf ho\u1eb7c m\u1ed9t c\u00e2u chuy\u1ec7n m\u00e0 t\u00e1c gi\u1ea3 t\u01b0\u1edfng t\u01b0\u1ee3ng ra. Th\u01b0\u1eddng th\u00ec ta c\u00f3 th\u1ec3 b\u1ecf qua nh\u1eefng chi ti\u1ebft r\u01b0\u1eddm r\u00e0 \u0111\u00f3. Nh\u01b0ng kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o ta c\u0169ng c\u00f3 th\u1ec3 b\u1ecf qua nh\u1eefng c\u00e2u chuy\u1ec7n \u0111\u00f3 v\u00ec n\u00f3 c\u00f3 th\u1ec3 c\u00f3 li\u00ean quan r\u1ea5t ch\u1eb7t ch\u1ebd, v\u00ed d\u1ee5 nh\u01b0 trong b\u00e0i MatchMaking(SRM 203 Div I Easy / Div II Medium).</p> <p>M\u1ee5c n\u00e0y th\u01b0\u1eddng \u0111a d\u1ea1ng t\u1eeb b\u00e0i to\u00e1n n\u00e0y \u0111\u1ebfn b\u00e0i to\u00e1n kh\u00e1c, d\u1ef1a tr\u00ean phong c\u00e1ch vi\u1ebft c\u1ee7a ng\u01b0\u1eddi ra \u0111\u1ec1. \u0110\u1ec1 b\u00e0i c\u0169ng c\u00f3 th\u1ec3 ch\u1ee9a th\u00eam nhi\u1ec1u th\u1ee9 nh\u01b0:</p> <ul> <li> <p>M\u00f4 t\u1ea3 v\u1ec1 nh\u1eefng g\u00ec b\u1ea1n c\u1ea7n l\u00e0m m\u1ed9t c\u00e1ch t\u1ed5ng quan. V\u00ed d\u1ee5 nh\u01b0, UserName(SRM 203, Div 2 easy). Y\u00eau c\u1ea7u c\u1ee7a \u0111\u1ec1 b\u00e0i l\u00e0 c\u1ea7n b\u1ea1n t\u00ecm bi\u1ebfn th\u1ec3 \u0111\u1ea7u ti\u00ean c\u1ee7a c\u00e1c username cho tr\u01b0\u1edbc m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c l\u1ea5y. \u0110\u1ec3 \u00fd r\u1eb1ng b\u00e0i to\u00e1n ch\u01b0a \u0111\u1ec1 c\u1eadp t\u1edbi t\u00ean hay ki\u1ec3u bi\u1ebfn s\u1ed1, ho\u1eb7c c\u1ea5u tr\u00fac c\u1ee7a input.</p> </li> <li> <p>M\u00f4 t\u1ea3 s\u01a1 v\u1ec1 input, v\u00ed d\u1ee5 nh\u01b0 ki\u1ec3u v\u00e0 t\u00ean bi\u1ebfn trong input, c\u0169ng nh\u01b0 m\u1ed1i li\u00ean h\u1ec7 v\u00e0 \u00fd ngh\u0129a c\u1ee7a ch\u00fang.</p> </li> </ul>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#inh-nghia-ham-definition","title":"\u0110\u1ecbnh ngh\u0129a h\u00e0m (Definition)","text":"<p>Ti\u1ebfp \u0111\u1ebfn l\u00e0 ph\u1ea7n \u0111\u1ecbch ngh\u0129a h\u00e0m. \u0110\u00e2y l\u00e0 ph\u1ea7n \u0111\u1eb7c bi\u1ec7t ch\u1ec9 c\u00f3 trong c\u00e1c \u0111\u1ec1 Topcoder. V\u00ed d\u1ee5:</p> <pre><code>Definition\n\nClass:             QuipuReader\nMethod:            readKnots\nParameters:        String[]\nReturns:           int[]\nMethod signature:  int[] readKnots(String[] knots)\n(be sure your method is public)\n</code></pre> <p>\u0110\u1ec3 n\u1ed9p b\u00e0i l\u00ean Topcoder, b\u1ea1n kh\u00f4ng c\u1ea7n vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7y \u0111\u1ee7, m\u00e0 ch\u1ec9 c\u1ea7n vi\u1ebft 1 class, trong \u0111\u00f3 c\u00f3 1 public method. Ki\u1ec3u d\u1eef li\u1ec7u tr\u1ea3 v\u1ec1 v\u00e0 \u0111\u1ecbnh ngh\u0129a c\u1ee7a h\u00e0m ph\u1ea3i \u0111\u00fang theo y\u00eau c\u1ea7u c\u1ee7a \u0111\u1ec1 b\u00e0i. Ch\u00fa \u00fd l\u00e0 kh\u00e1c v\u1edbi h\u1ea7u h\u1ebft c\u00e1c trang web kh\u00e1c, b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i \u0111\u1ecdc input / vi\u1ebft output.</p> <p>V\u00ed d\u1ee5:</p> <p>Java</p> <pre><code>public class QuipuReader {\n    public int[] readKnots(String[] knots) {\n        // code\n    }\n}\n</code></pre> <p>C++</p> <pre><code>class QuipuReader {\npublic:\nvector&lt;int&gt; readKnots(vector&lt;string&gt; knots) {\n    // code\n}\n</code></pre> <p>Ch\u00fa \u00fd r\u1eb1ng ph\u1ea7n \u0111\u1ecbnh ngh\u0129a h\u00e0m s\u1ebd ph\u1ee5 thu\u1ed9c v\u00e0o ng\u00f4n ng\u1eef m\u1eb7c \u0111\u1ecbnh c\u1ee7a b\u1ea1n.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#phan-chu-giai-notes","title":"Ph\u1ea7n ch\u00fa gi\u1ea3i (Notes)","text":"<p>Ph\u1ea7n l\u01b0u \u00fd kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng xu\u1ea5t hi\u1ec7n. Nh\u01b0ng n\u1ebfu c\u00f3, H\u00c3Y \u0110\u1eccC N\u00d3! Th\u00f4ng th\u01b0\u1eddng th\u00ec n\u00f3 s\u1ebd nh\u1ea5n m\u1ea1nh c\u00e1c tr\u01b0\u1eddng h\u1ee3p hi\u1ec3m, ho\u1eb7c cung c\u1ea5p th\u00eam nh\u1eefng th\u00f4ng tin m\u00e0 c\u00f3 th\u1ec3 ch\u01b0a \u0111\u01b0\u1ee3c nh\u1eafc t\u1edbi trong ph\u1ea7n \u0110\u1ec1 b\u00e0i.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#ieu-kien-rang-buoc-constraints","title":"\u0110i\u1ec1u ki\u1ec7n r\u1eb1ng bu\u1ed9c (Constraints)","text":"<p>M\u1ee5c \u0111i\u1ec1u ki\u1ec7n r\u00e0ng bu\u1ed9c lu\u00f4n quan tr\u1ecdng nh\u1ea5t. N\u00f3 s\u1ebd li\u1ec7t k\u00ea r\u00e0ng bu\u1ed9c d\u1eef li\u1ec7u trong Input. Vi\u1ec7c n\u00e0y gi\u00fap b\u1ea1n bi\u1ebft r\u00f5 v\u1ec1 c\u00e1c th\u00f4ng tin quan tr\u1ecdng v\u00ed d\u1ee5 nh\u01b0 bao nhi\u00eau b\u1ed9 nh\u1edb \u0111\u01b0\u1ee3c c\u1ea5p ph\u00e1t ho\u1eb7c \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n ph\u1ea3i l\u00e0 bao nhi\u00eau.</p> <p>C\u1ea9n th\u1eadn c\u00e1c gi\u1edbi h\u1ea1n. \u0110\u00f4i khi n\u00f3 s\u1ebd gi\u00fap b\u1ea1n t\u00ecm ra thu\u1eadt to\u00e1n ch\u00ednh x\u00e1c, ho\u1eb7c l\u00e0 l\u00e0m gi\u1ea3m \u0111\u1ed9 kh\u00f3 cho c\u00e1c thu\u1eadt to\u00e1n kh\u00f4ng hi\u1ec7u qu\u1ea3 b\u1eb1ng \u0111\u1ec3 ch\u1ea1y \u0111\u00fang th\u1eddi gian. S\u1ebd c\u00f3 m\u1ed9t s\u1ef1 kh\u00e1c bi\u1ec7t r\u1ea5t l\u1edbn gi\u1eefa input g\u1ed3m 50 s\u1ed1 v\u00e0 5 s\u1ed1, c\u1ea3 hai \u0111\u1ec1u quan tr\u1ecdng v\u1edbi solution s\u1ebd pass, v\u00e0 d\u1ec5 h\u01a1n cho vi\u1ec7c vi\u1ebft code.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#vi-du-examples","title":"V\u00ed d\u1ee5 (Examples)","text":"<p>M\u1ee5c n\u00e0y l\u00e0 danh s\u00e1ch c\u00e1c test b\u1ea1n c\u00f3 th\u1ec3 ch\u1ea1y th\u1eed. N\u00f3 cho input (theo \u0111\u00fang quy \u0111\u1ecbnh) v\u00e0 \u0111\u00e1p \u00e1n, v\u00e0 \u0111\u00f4i khi c\u00f3 th\u00eam l\u1eddi gi\u1ea3i th\u00edch v\u1ec1 test khi c\u1ea7n thi\u1ebft.</p> <p>Th\u00f4ng th\u01b0\u1eddng b\u1ea1n n\u00ean test code c\u1ee7a m\u00ecnh v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c test v\u00ed d\u1ee5. Trong \u0111\u00f3 th\u01b0\u1eddng s\u1ebd c\u00f3 nh\u1eefng test hi\u1ec3m, nh\u1eefng tr\u01b0\u1eddng h\u1ee3p m\u00e0 c\u00f3 th\u1ec3 b\u1ea1n ch\u01b0a t\u1eebng ngh\u0129 \u0111\u1ebfn, v\u00e0 m\u1ed9t test ng\u1eabu nhi\u00ean l\u1edbn. Ch\u00fa \u00fd r\u1eb1ng \u0111\u1ec3 \u0111\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a b\u00e0i sau khi k\u1ef3 thi k\u1ebft th\u00fac, code c\u1ee7a b\u1ea1n ph\u1ea3i ch\u1ea1y \u0111\u00fang v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c test \u0111\u01b0\u1ee3c Topcoder chu\u1ea9n b\u1ecb t\u1eeb tr\u01b0\u1edbc (th\u01b0\u1eddng s\u1ed1 test c\u00f3 th\u1ec3 l\u00e0 100 - 200).</p> <p>C\u00e1c v\u00ed d\u1ee5 n\u00e0y kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng bao qu\u00e1t h\u1ebft tr\u01b0\u1eddng h\u1ee3p! Code b\u1ea1n ch\u1ea1y \u0111\u00fang v\u1edbi c\u00e1c test v\u00ed d\u1ee5 kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 n\u00f3 \u0111\u00fang. V\u00ec v\u1eady h\u00e3y test nhi\u1ec1u, v\u00e0 ngh\u0129 ra c\u00e1c test c\u1ee7a ch\u00ednh b\u1ea1n. Ch\u00fa \u00fd r\u1eb1ng sau Coding Phase, Topcoder c\u00f2n c\u00f3 ph\u1ea7n Challenge Phase - b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng c\u00e1c test c\u1ee7a b\u1ea1n \u0111\u1ec3 b\u1eaft l\u1ed7i sai trong code ng\u01b0\u1eddi kh\u00e1c v\u00e0 \u0111\u01b0\u1ee3c th\u00eam \u0111i\u1ec3m.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#bai-toan-vi-du","title":"B\u00e0i to\u00e1n v\u00ed d\u1ee5","text":"<p>B\u00e2y gi\u1edd ch\u00fang ta s\u1ebd th\u1eed m\u1ed9t b\u00e0i to\u00e1n, ph\u00e2n t\u00edch n\u00f3, t\u1eebng b\u01b0\u1edbc m\u1ed9t.</p> <p>H\u00e3y \u0111\u1ecdc \u0111\u1ec1 BettingMoney, v\u00f2ng SRM 191 Div 2 Easy. \u0110\u1ea7u ti\u00ean ta ph\u00e2n ra c\u00e1c ph\u1ea7n c\u1ee7a \u0111\u1ec1 b\u00e0i. B\u00e0i to\u00e1n n\u00f3i v\u1ec1 ch\u1ee7 \u0111\u1ec1 \u0111\u00e1nh b\u1ea1c v\u00e0 m\u1ed9t s\u1ed1 th\u00f4ng tin v\u1ec1 n\u00f3. Ch\u00fang ta l\u1ea1i c\u00f3 m\u1ed9t m\u00f4 t\u1ea3 v\u1ec1 input - c\u00e1c d\u1ea1ng d\u1eef li\u1ec7u, ki\u1ec3u bi\u1ebfn, v\u00e0 nh\u1eefng \u0111\u1ea1i l\u01b0\u1ee3ng n\u00f3 \u0111\u1ea1i \u0111i\u1ec7n. Sau \u0111\u00f3 ch\u00fang ta c\u00f3 y\u00eau c\u1ea7u: x\u00e1c \u0111\u1ecbnh l\u00e3i t\u1ed1i \u0111a c\u1ee7a 1 ng\u00e0y.</p> <p>Ch\u00fa \u00fd hai \u0111o\u1ea1n gi\u1ea3i th\u00edch \u1edf cu\u1ed1i b\u00e0i to\u00e1n: \u0111o\u1ea1n \u0111\u1ea7u cung c\u1ea5p m\u1ed9t v\u00ed d\u1ee5 c\u1ee7a test, v\u00e0 \u0111o\u1ea1n th\u1ee9 hai l\u00e0 m\u1ed9t test ho\u00e0n ch\u1ec9nh, c\u1ef1c k\u00ec gi\u00fap \u00edch cho b\u1ea1n trong vi\u1ec7c hi\u1ec3u \u0111\u1ec1 b\u00e0i.</p> <p>Ph\u1ea7n ch\u00fa gi\u1ea3i trong b\u00e0i n\u00e0y cung c\u1ea5p th\u00eam nhi\u1ec1u th\u00f4ng tin:</p> <ul> <li>Trong c\u00e1c ph\u1ea7n \u0111\u1ec1 b\u00e0i, b\u1ea1n c\u00f3 th\u1ec3 s\u1ebd kh\u00f4ng bi\u1ebft r\u1eb1ng 100 cent = 1 dollar.</li> <li>K\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 l\u00e0 s\u1ed1 \u00e2m</li> <li>Ti\u1ec1n l\u00e3i thu \u0111\u01b0\u1ee3c l\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng g\u00ec ta c\u1ea7n quan t\u00e2m khi \u0111\u1eb7t c\u01b0\u1ee3c.</li> </ul> <p>C\u00e1c gi\u1edbi h\u1ea1n \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp r\u00f5 r\u00e0ng. Ph\u1ea7n input m\u1ea3ng s\u1ebd g\u1ed3m \u0111\u00fang s\u1ed1 ph\u1ea7n t\u1eed, gi\u1eefa 1 v\u00e0 50. (50 l\u00e0 m\u1ed9t con s\u1ed1 kh\u00e1 l\u1edbn \u0111\u1ed1i v\u1edbi truy\u1ec1n th\u1ed1ng c\u1ee7a topcoder v\u1edbi input). K\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng s\u1ebd gi\u1eefa 0 v\u00e0 c\u00f9ng v\u1edbi k\u00edch th\u01b0\u1edbc l\u00e0 s\u1ed1 \u00e2m (ngh\u0129a l\u00e0,  b\u1ea1n c\u00f3 m\u1ed9t suy ngh\u0129, r\u1eb1ng ai \u0111o s\u1ebd th\u1eafng ph\u1ea7n c\u00e1 c\u01b0\u1ee3c). M\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng n\u1eb1m trong kho\u1ea3ng 0 v\u00e0 5000. \u0110i\u1ec1u n\u00e0y \u0111\u1ec3 ch\u1eafc ch\u1eafn ki\u1ec3u d\u1eef li\u1ec7u integer s\u1ebd \u0111\u1ee7 \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n.</p> <p>Cu\u1ed1i c\u00f9ng, l\u00e0 ph\u1ea7n v\u00ed d\u1ee5. Th\u01b0\u1eddng th\u00ec \u0111\u1ec1 b\u00e0i s\u1ebd bao g\u1ed3m m\u1ed9t v\u00ed d\u1ee5 test c\u00f9ng ch\u00fa gi\u1ea3i, l\u00e0 test s\u1ed1 0. Sau \u0111\u00f3 l\u00e0 c\u00e1c test kh\u00e1c c\u00f3 ch\u00fa gi\u1ea3i ho\u1eb7c kh\u00f4ng. Ta c\u0169ng c\u1ea7n l\u01b0u \u00fd r\u1eb1ng m\u1ed9t test v\u00ed d\u1ee5 c\u00f3 k\u1ebft qu\u1ea3 l\u00e0 s\u1ed1 \u00e2m, \u0111\u1ec3 b\u1ed5 sung cho ph\u1ea7n l\u01b0u \u00fd.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#mot-bai-toan-phuc-tap-hon","title":"M\u1ed9t b\u00e0i to\u00e1n ph\u1ee9c t\u1ea1p h\u01a1n","text":"<p>B\u00e2y gi\u1edd h\u00e3y nh\u00ecn qua Poetry, v\u00f2ng SRM 170 Div 2 Hard. \u0110\u1ed1i v\u1edbi b\u00e0i to\u00e1n n\u00e0y, b\u1ea1n r\u1ea5t kh\u00f3 \u0111\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c trong th\u1eddi gian cho ph\u00e9p, nh\u01b0ng ch\u00fang ta h\u00e3y c\u00f9ng th\u1eed nghi\u00ean c\u1ee9u \u0111\u1ec1 b\u00e0i.</p> <p>M\u1ee5c \u0111\u1ea7u ti\u00ean cho b\u1ea1n bi\u1ebft ngay v\u1ec1 vi\u1ec7c b\u1ea1n c\u1ea7n l\u00e0m - b\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t b\u00e0i th\u01a1, v\u00e0 b\u1ea1n ph\u1ea3i x\u00e1c \u0111\u1ecbnh v\u1ec1 c\u00e1ch gieo v\u1ea7n. Ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a m\u1ee5c n\u00e0y l\u00e0m r\u00f5 h\u01a1n v\u1ec1 c\u00e1c c\u00e1ch gieo v\u1ea7n.</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n m\u00e0 c\u00f3 r\u1ea5t nhi\u1ec1u \u0111\u1ecbnh ngh\u0129a, v\u00e0 v\u1edbi m\u1ed7i \u0111\u1ecbnh ngh\u0129a b\u1ea1n n\u00ean \u0111\u1ecdc qua \u00edt nh\u1ea5t v\u00e0i l\u1ea7n, \u0111\u1ec3 c\u00f3 th\u1ec3 hi\u1ec3u r\u00f5 \u0111\u01b0\u1ee3c m\u1ed7i li\u00ean h\u1ec7 gi\u1eefa ch\u00fang.</p> <p>Sau \u0111\u00f3 l\u00e0 m\u1ed9t d\u00f2ng l\u01b0u \u00fd v\u1ec1 m\u1ed9t \u0111i\u1ec3m c\u00f3 th\u1ec3 b\u1ecb b\u1ecf qua: m\u1ed9t d\u00f2ng tr\u1eafng s\u1ebd \u0111\u01b0\u1ee3c d\u00e1nh d\u1ea5u l\u00e0 m\u1ed9t kho\u1ea3ng c\u00e1ch trong c\u00e1ch gieo v\u1ea7n.</p> <p>Ph\u1ea7n r\u00e0ng bu\u1ed9c kh\u00e1 c\u01a1 b\u1ea3n nh\u01b0 c\u00e1c b\u00e0i to\u00e1n topcoder kh\u00e1c: s\u1ebd c\u00f3 t\u1eeb 1 \u0111\u1ebfn 50 d\u00f2ng trong b\u00e0i th\u01a1, m\u1ed7i d\u00f2ng t\u1eeb 0 t\u1edbi 50 k\u00ed t\u1ef1. Ch\u1ec9 kho\u1ea3ng c\u00e1ch v\u00e0 c\u00e1c ch\u1eef c\u00e1i \u0111\u01b0\u1ee3c cho ph\u00e9p, v\u00e0 ch\u1ec9 c\u00f3 m\u1ed9t t\u1eeb h\u1ee3p ph\u00e1p trong b\u00e0i.</p> <p>Cu\u1ed1i c\u00f9ng l\u00e0 m\u1ed9t v\u00e0i v\u00ed d\u1ee5. Th\u01b0\u1eddng, c\u00e1c b\u00e0i to\u00e1n th\u01b0\u1eddng \u0111\u00e1nh \u0111\u1ed1 ho\u1eb7c c\u00f3 m\u1ed9t \u0111\u1ec1 b\u00e0i ph\u1ee9c t\u1ea1p c\u00f9ng nhi\u1ec1u v\u00ed d\u1ee5 h\u01a1n, \u0111\u1ec3 l\u00e0m r\u00f5 \u00edt nh\u1ea5t m\u1ed9t v\u00e0i \u0111i\u1ec3m trong \u0111\u1ec1 b\u00e0i. Nh\u1eafc l\u1ea1i, \u0111i\u1ec1u n\u00e0y kh\u00f4ng c\u00f3 ngh\u0129a r\u1eb1ng b\u1ea1n \u0111\u00fang c\u00e1c test \u0111\u1ea5y l\u00e0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng b\u1ea1n c\u00f3 m\u1ed9t b\u00e0i gi\u1ea3i \u0111\u1ea7y \u0111\u1ee7 v\u00e0 ho\u00e0n to\u00e0n ch\u00ednh x\u00e1c, nh\u01b0ng n\u00f3 s\u1ebd c\u00f3 c\u01a1 h\u1ed9i cao h\u01a1n \u0111\u1ec3 t\u00ecm c\u00e1c l\u1ed7i n\u1ebfu c\u00f3 nhi\u1ec1u v\u00ed d\u1ee5 b\u1ea1n bi\u1ebft k\u1ebft qu\u1ea3.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#bai-tap-luyen-tap","title":"B\u00e0i t\u1eadp luy\u1ec7n t\u1eadp","text":"<p>\u0110\u00e2y l\u00e0 danh s\u00e1ch c\u00e1c b\u00e0i to\u00e1n t\u01b0\u01a1ng t\u1ef1, \u0111\u01b0\u1ee3c x\u1ebfp th\u00e0nh c\u00e1c nh\u00f3m theo \u0111\u1ed9 kh\u00f3 hi\u1ec3u. H\u00e3y t\u1ef1 l\u00e0m trong ph\u00f2ng Arena Practice Rooms. Ngay c\u1ea3 vi\u1ec7c b\u1ea1n kh\u00f4ng th\u1ec3 gi\u1ea3i ch\u00fang, \u00edt nh\u1ea5t b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm ra b\u00e0i to\u00e1n mu\u1ed1n b\u1ea1n l\u00e0m g\u00ec khi ph\u00e2n chia th\u00e0nh c\u00e1c ph\u1ea7n kh\u00e1c nhau.</p>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#e-cap-en-trong-bai-viet-nay","title":"\u0110\u1ec1 c\u1eadp \u0111\u1ebfn trong b\u00e0i vi\u1ebft n\u00e0y","text":"<ul> <li>SRM 203 Div 2 Easy - UserName</li> <li>SRM 191 Div 2 Easy - BettingMoney</li> <li>SRM 203 Div 1 Easy - MatchMaking</li> <li>SRM 170 Div 2 Hard - Poetry</li> </ul>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#cac-bai-tuong-tu","title":"C\u00e1c b\u00e0i t\u01b0\u01a1ng t\u1ef1","text":"<ul> <li>SRM 146 Div 2 Easy \u2013 Yahtzee</li> <li>SRM 200 Div 2 Easy \u2013 NoOrderOfOperations</li> <li>SRM 185 Div 2 Easy \u2013 PassingGrade</li> <li>SRM 155 Div 2 Easy \u2013 Quipu</li> <li>SRM 147 Div 2 Easy \u2013 CCipher</li> <li>SRM 208 Div 1 Easy \u2013 TallPeople</li> <li>SRM 173 Div 1 Easy \u2013 WordForm</li> <li>SRM 162 Div 1 Easy \u2013 PaperFold</li> </ul>"},{"location":"translate/topcoder/How-to-Dissect-a-Topcoder-Problem-Statement/#cac-bai-kho-hon","title":"C\u00e1c b\u00e0i kh\u00f3 h\u01a1n","text":"<ul> <li>SRM 197 Div 2 Hard \u2013 QuickSums</li> <li>SRM 158 Div 1 Hard \u2013 Jumper</li> <li>SRM 170 Div 1 Easy \u2013 RecurrenceRelation</li> <li>SRM 177 Div 1 Easy \u2013 TickTick</li> <li>SRM 169 Div 2 Hard \u2013 Twain</li> <li>SRM 155 Div 1 Med \u2013 QuipuReader</li> </ul>"},{"location":"translate/topcoder/How-to-Find-a-Solution/","title":"Ngh\u1ec7 thu\u1eadt gi\u1ea3i b\u00e0i","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c: How to Find a Solution - \u0111\u0103ng b\u1edfi Dumitru tr\u00ean Topcoder</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>V\u1edbi nhi\u1ec1u b\u00e0i to\u00e1n tr\u00ean topcoder (TC), l\u1eddi gi\u1ea3i c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ecm ra ngay sau m\u1ed9t n\u1ed1t nh\u1ea1c. \u0110i\u1ec1u n\u00e0y c\u00f3 \u0111\u01b0\u1ee3c l\u00e0 do nh\u1eefng n\u00e9t t\u01b0\u01a1ng \u0111\u1ed3ng gi\u1eefa nh\u1eefng b\u00e0i to\u00e1n c\u00f3 l\u1eddi gi\u1ea3i gi\u1ed1ng nhau. Nh\u1eefng n\u00e9t t\u01b0\u01a1ng \u0111\u1ed3ng n\u00e0y ch\u00ednh l\u00e0 nh\u1eefng g\u1ee3i \u00fd tuy\u1ec7t v\u1eddi cho nh\u1eefng coder kinh nghi\u1ec7m \u0111\u1ec3 c\u00f3 th\u1ec3 nh\u1eadn \u0111\u1ecbnh \u0111\u01b0\u1ee3c l\u1eddi gi\u1ea3i b\u00e0i to\u00e1n. M\u1ee5c ti\u00eau ch\u00ednh c\u1ee7a b\u00e0i vi\u1ebft n\u00e0y l\u00e0 h\u01b0\u1edbng d\u1eabn \u0111\u1ec3 c\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 nh\u1eadn \u0111\u1ecbnh \u0111\u01b0\u1ee3c ch\u00fang.</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#nhung-bai-toan-khong-yeu-cau-ki-nang-ac-biet-mo-phong-tim-kiem-sap-xep","title":"Nh\u1eefng b\u00e0i to\u00e1n kh\u00f4ng y\u00eau c\u1ea7u k\u0129 n\u0103ng \u0111\u1eb7c bi\u1ec7t (m\u00f4 ph\u1ecfng, t\u00ecm ki\u1ebfm, s\u1eafp x\u1ebfp, ...)","text":"<p>H\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p, nh\u1eefng b\u00e0i to\u00e1n n\u00e0y th\u01b0\u1eddng ch\u1ec9 y\u00eau c\u1ea7u b\u1ea1n th\u1ef1c hi\u1ec7n t\u1eebng b\u01b0\u1edbc m\u1ed9t v\u1edbi nh\u1eefng c\u00f4ng vi\u1ec7c r\u1ea5t \u0111\u01a1n gi\u1ea3n. Gi\u1edbi h\u1ea1n th\u00ec kh\u00f4ng qu\u00e1 l\u1edbn c\u0169ng kh\u00f4ng qu\u00e1 nh\u1ecf. V\u00e0 nh\u1eefng b\u00e0i n\u00e0y th\u01b0\u1eddng l\u00e0 b\u00e0i \u0111\u1ea7u ti\u00ean (b\u00e0i d\u1ec5 nh\u1ea5t) trong TC SRM. Ch\u00fang th\u01b0\u1eddng \u0111\u1ec3 ki\u1ec3m tra xem b\u1ea1n code nhanh v\u00e0 ch\u00ednh x\u00e1c nh\u01b0 n\u00e0o, v\u00e0 kh\u00f4ng y\u00eau c\u1ea7u ki\u1ebfn th\u1ee9c v\u1ec1 thu\u1eadt to\u00e1n.</p> <p>H\u1ea7u h\u1ebft c\u00e1c b\u00e0i to\u00e0n s\u1ebd y\u00eau c\u1ea7u b\u1ea1n m\u00f4 ph\u1ecfng t\u1ea5t c\u1ea3 c\u00e1c b\u01b0\u1edbc \u0111\u01b0\u1ee3c n\u00eau ra trong \u0111\u1ec1. </p> <p>BusinessTasks - SRM 236 Div 1: C\u00f3 \\(N\\) nhi\u1ec7m v\u1ee5 \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea d\u01b0\u1edbi d\u1ea1ng 1 v\u00f2ng tr\u00f2n, nhi\u1ec7m v\u1ee5 \u0111\u1ea7u ti\u00ean k\u1ec1 v\u1edbi nhi\u1ec7m v\u1ee5 cu\u1ed1i c\u00f9ng. Cho m\u1ed9t s\u1ed1 \\(n\\). B\u1eaft \u0111\u1ea7u t\u1eeb nhi\u1ec7m v\u1ee5 \u0111\u1ea7u ti\u00ean, di chuy\u1ec3n theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (t\u1eeb th\u1ee9 1 \u0111\u1ebfn th\u1ee9 2 r\u1ed3i ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady) v\u00e0 \u0111\u1ed3ng th\u1eddi \u0111\u1ebfm t\u1eeb 1 \u0111\u1ebfn \\(n\\). V\u1eeba di chuy\u1ec3n v\u1eeba \u0111\u1ebfm, khi \u0111\u1ebfm \u0111\u1ebfn n, b\u1ecf nhi\u1ec7m v\u1ee5 hi\u1ec7n t\u1ea1i ra kh\u1ecfi danh s\u00e1ch v\u00e0 \u0111\u1ebfm t\u1eeb nhi\u1ec7m v\u1ee5 ti\u1ebfp theo. L\u1eb7p l\u1ea1i th\u1ee7 t\u1ee5c n\u00e0y cho \u0111\u1ebfn khi ch\u1ec9 c\u00f2n 1 nhi\u1ec7m v\u1ee5. T\u00ecm nhi\u1ec7m v\u1ee5 \u0111\u00f3.</p> <p>V\u1edbi \\(N \\le 1000\\) b\u00e0i n\u00e0y ch\u1ec9 l\u00e0 v\u1ea5n \u0111\u1ec1 c\u1ee7a code, kh\u00f4ng c\u00f3 thu\u1eadt to\u00e1n g\u00ec \u0111\u1eb7c bi\u1ec7t - th\u1ef1c hi\u1ec7n t\u1eebng b\u01b0\u1edbc m\u1ed9t cho \u0111\u1ebfn khi ch\u1ec9 c\u00f2n l\u1ea1i m\u1ed9t nhi\u1ec7m v\u1ee5. Nh\u1eefng lo\u1ea1i b\u00e0i to\u00e1n n\u00e0y th\u01b0\u1eddng c\u00f3 \\(N\\) nh\u1ecf, v\u1eady n\u00ean kh\u00f4ng c\u1ea7n ph\u1ea3i quan t\u00e2m \u0111\u1ebfn tr\u01b0\u1eddng h\u1ee3p \\(N\\) l\u1edbn. C\u1ea7n nh\u1edb r\u1eb1ng trong topcoder th\u00ec 100 tri\u1ec7u ph\u00e9p t\u00ednh v\u1eabn c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c. </p> <p>C\u00f3 m\u1ed9t s\u1ed1 b\u00e0i y\u00eau c\u1ea7u b\u1ea1n ph\u1ea3i t\u00ecm ki\u1ebfm </p> <p>TallPeople - SRM 208 Div 1: C\u00f3 m\u1ed9t nh\u00f3m ng\u01b0\u1eddi \u0111\u01b0\u1ee3c x\u1ebfp th\u00e0nh m\u1ed9t ma tr\u1eadn \\(R * C\\), \\(R\\) h\u00e0ng, \\(C\\) c\u1ed9t. Nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n l\u00e0 tr\u1ea3 v\u1ec1 2 s\u1ed1 - S\u1ed1 th\u1ee9 nh\u1ea5t l\u00e0 chi\u1ec1u cao c\u1ee7a ng\u01b0\u1eddi cao nh\u1ea5t trong nh\u1eefng ng\u01b0\u1eddi th\u1ea5p nh\u1ea5t \u1edf m\u1ed7i h\u00e0ng, s\u1ed1 th\u1ee9 hai l\u00e0 chi\u1ec1u cao c\u1ee7a ng\u01b0\u1eddi th\u1ea5p nh\u1ea5t trong nh\u1eefng ng\u01b0\u1eddi cao nh\u1ea5t \u1edf m\u1ed7i c\u1ed9t.</p> <p>Nh\u01b0 b\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y, \u0111\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n t\u00ecm ki\u1ebfm r\u1ea5t \u0111\u01a1n gi\u1ea3n. B\u1ea1n ch\u1ec9 c\u1ea7n theo c\u00e1c b\u01b0\u1edbc \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 trong \u0111\u1ec1 v\u00e0 t\u00ecm ra 2 gi\u00e1 tr\u1ecb y\u00eau c\u1ea7u. Nh\u1eefng b\u00e0i TC kh\u00e1c c\u00f3 th\u1ec3 y\u00eau c\u1ea7u s\u1eafp x\u1ebfp c\u00e1c b\u1ed9 theo quy lu\u1eadt n\u00e0o \u0111\u00f3. B\u1ea1n c\u00f3 th\u1ec3 l\u00e0m v\u1edbi thu\u1eadt to\u00e1n sort \\(O(N^2)\\) ho\u1eb7c s\u1eed d\u1ee5ng c\u00e1c th\u01b0 vi\u00ean c\u00f3 s\u1eb5n.</p> <p>V\u00ed d\u1ee5 kh\u00e1c:</p> <p>MedalTable - SRM 209 Div 1</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#tim-kiem-theo-chieu-rong-breadth-first-search-bfs","title":"T\u00ecm ki\u1ebfm theo chi\u1ec1u r\u1ed9ng (Breadth First Search - BFS)","text":"<p>Nh\u1eefng b\u00e0i s\u1eed d\u1ee5ng BFS th\u01b0\u1eddng y\u00eau c\u1ea7u t\u00ecm s\u1ed1 b\u01b0\u1edbc \u00edt nh\u1ea5t (ho\u1eb7c \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t) t\u1eeb \u0111i\u1ec3m \u0111\u1ea7u \u0111\u1ebfn \u0111i\u1ec3m cu\u1ed1i. B\u00ean c\u1ea1nh \u0111\u00f3, \u0111\u01b0\u1eddng \u0111i gi\u1eefa 2 \u0111i\u1ec3m b\u1ea5t k\u00ec th\u01b0\u1eddng c\u00f3 chung tr\u1ecdng s\u1ed1 (v\u00e0 th\u01b0\u1eddng l\u00e0 1). Ph\u1ed5 bi\u1ebfn nh\u1ea5t l\u00e0 d\u1ea1ng b\u00e0i cho b\u1ea3ng \\(N \\* M\\), c\u00f3 nh\u1eefng \u00f4 \u0111i qua \u0111\u01b0\u1ee3c v\u00e0 nh\u1eefng \u00f4 kh\u00f4ng \u0111i qua \u0111\u01b0\u1ee3c. B\u1ea3ng n\u00e0y c\u00f3 th\u1ec3 l\u00e0 m\u00ea cung, s\u01a1 \u0111\u1ed3, c\u00e1c th\u00e0nh ph\u1ed1 ho\u1eb7c c\u00e1c th\u1ee9 c\u00e1c th\u1ee9 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng. C\u00f3 th\u1ec3 n\u00f3i \u0111\u00e2y l\u00e0 nh\u1eefng b\u00e0i to\u00e0n BFS kinh \u0111i\u1ec3n (classic). B\u1edfi v\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a BFS l\u00e0 tuy\u1ebfn t\u00ednh trong h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p (\\(N^2\\) ho\u1eb7c \\(NlogN\\)), gi\u1edbi h\u1ea1n c\u1ee7a \\(N\\) (ho\u1eb7c \\(M\\)) c\u00f3 th\u1ec3 l\u1edbn, l\u00ean t\u1edbi 1 tri\u1ec7u.</p> <p>SmartWordToy - SRM 233 Div 1: Cho m\u1ed9t t\u1eeb g\u1ed3m 4 ch\u1eef c\u00e1i Latin in th\u01b0\u1eddng. V\u1edbi m\u1ed9t l\u1ea7n click b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ed5i b\u1ea5t k\u00ec ch\u1eef n\u00e0o th\u00e0nh ch\u1eef c\u00e1i tr\u01b0\u1edbc ho\u1eb7c sau n\u00f3 trong b\u1ea3ng ch\u1eef c\u00e1i (v\u00ed d\u1ee5 'c' c\u00f3 th\u1ec3 th\u00e0nh 'b' ho\u1eb7c 'd'). B\u1ea3ng ch\u1eef c\u00e1i s\u1ebd theo chu k\u00ec v\u00f2ng l\u1eb7p, t\u1ee9c l\u00e0 'a' c\u00f3 th\u1ec3 th\u00e0nh 'z' v\u00e0 'z' c\u00f3 th\u1ec3 th\u00e0nh 'a'.</p> <p>Cho m\u1ed9t t\u1eadp c\u00e1c r\u1eb1ng bu\u1ed9c, m\u1ed7i r\u1eb1ng bu\u1ed9c s\u1ebd l\u00e0 t\u1eadp c\u00e1c t\u1eeb b\u1ecb c\u1ea5m. M\u1ed9t r\u1eb1ng bu\u1ed9c bao g\u1ed3m 4 x\u00e2u k\u00ed t\u1ef1. M\u1ed9t t\u1eeb g\u1ecdi l\u00e0 b\u1ecb c\u1ea5m n\u1ebfu m\u1ed7i ch\u1eef c\u00e1i c\u1ee7a n\u00f3 \u0111\u1ec1u xu\u1ea5t hi\u1ec7n trong ch\u00ednh r\u00e0ng bu\u1ed9c \u1edf v\u1ecb tr\u00ed \u0111\u00f3, i.e. ch\u1eef \u0111\u1ea7u ti\u00ean \u1edf trong x\u00e2u \u0111\u1ea7u ti\u00ean, ch\u1eef th\u1ee9 2 trong x\u00e2u th\u1ee9 2, ... V\u00ed d\u1ee5, c\u00f3 r\u1eb1ng bu\u1ed9c sau \"lf a tc e\" th\u00ec c\u00e1c t\u1eeb sau b\u1ecb c\u1ea5m \"late\", \"fate\", \"lace\" v\u00e0 \"face\".</p> <p>B\u1ea1n c\u1ea7n ph\u1ea3i t\u00ecm s\u1ed1 l\u1ea7n b\u1ea5m n\u00fat \u00edt nh\u1ea5t \u0111\u1ec3 t\u1eeb ban \u0111\u1ea7u bi\u1ebfn th\u00e0nh t\u1eeb \u0111\u00edch m\u00e0 kh\u00f4ng \u0111i qua t\u1eeb c\u1ea5m, ho\u1eb7c tr\u1ea3 v\u1ec1 -1 n\u1ebfu kh\u00f4ng th\u1ec3 bi\u1ebfn \u0111\u01b0\u1ee3c.</p> <p>Hints:</p> <ul> <li>Coi c\u00e1c t\u1eeb l\u00e0 c\u00e1c tr\u1ea1ng th\u00e1i. C\u00f3 nhi\u1ec1u nh\u1ea5t \\(26^4\\) t\u1eeb kh\u00e1c nhau g\u1ed3m 4 ch\u1eef c\u00e1i.</li> <li>C\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 bi\u1ebfn m\u1ed9t tr\u1ea1ng th\u00e1i v\u1ec1 m\u1ed9t tr\u1ea1ng th\u00e1i kh\u00e1c.</li> <li>Chi ph\u00ed \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i 1 tr\u1ea1ng th\u00e1i lu\u00f4n l\u00e0 1 (v\u1edbi 1 l\u1ea7n click)</li> <li>B\u1ea1n c\u1ea7n ph\u1ea3i t\u00ecm s\u1ed1 b\u01b0\u1edbc nh\u1ecf nh\u1ea5t \u0111\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i \u0111\u00edch t\u1eeb tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u.</li> </ul> <p>M\u1ecdi th\u1ee9 \u0111\u1ec1u ch\u1ec9 ra r\u1eb1ng b\u00e0i n\u00e0y c\u1ea7n gi\u1ea3i b\u1eb1ng BFS. Nh\u1eefng \u0111i\u1ec1u t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean s\u1ebd th\u01b0\u1eddng th\u1ea5y trong c\u00e1c b\u00e0i BFS. B\u00e2y gi\u1edd, ch\u00fang ta c\u00f9ng xem m\u1ed9t BFS b\u00e0i kh\u00e1 th\u00fa v\u1ecb.</p> <p>CaptureThemAll - SRM 207 Div 2 (3rd problem): Harry \u0111ang ch\u01a1i c\u1edd vua. Anh c\u00f3 m\u1ed9t qu\u00e2n m\u00e3, c\u00f2n \u0111\u1ed1i th\u1ee7 l\u00e0 Joe c\u00f3 1 qu\u00e2n h\u1eadu v\u00e0 1 qu\u00e2n xe. H\u00e3y t\u00ecm s\u1ed1 b\u01b0\u1edbc nh\u1ecf nh\u1ea5t qu\u00e2n m\u00e3 ph\u1ea3i \u0111i \u0111\u1ec3 \u0103n \u0111\u01b0\u1ee3c c\u1ea3 h\u1eadu v\u00e0 xe.</p> <p>Hints: M\u1edbi \u0111\u1ea7u, c\u00f3 v\u1ebb nh\u01b0 b\u00e0i n\u00e0y l\u00e0 1 b\u00e0i quy ho\u1ea1ch \u0111\u1ed9ng ho\u1eb7c backtrack. Nh\u01b0ng n\u1ebfu \u0111\u1ec3 \u00fd k\u0129 \u0111\u1ec1 b\u00e0i, ta s\u1ebd c\u00f3 nh\u1eefng nh\u1eadn x\u00e9t sau:</p> <ul> <li>\u0110\u1ec1 cho 1 b\u1ea3ng.</li> <li>Qu\u00e2n m\u00e3 c\u00f3 th\u1ec3 \u0111i t\u1eeb 1 \u00f4 t\u1edbi c\u00e1c \u00f4 m\u00e0 n\u00f3 c\u00f3 th\u1ec3 \u0111i \u0111\u01b0\u1ee3c.</li> <li>Chi ph\u00ed \u1edf m\u1ed7i b\u01b0\u1edbc \u0111i l\u00e0 1.</li> <li>B\u1ea1n c\u1ea7n t\u00ecm s\u1ed1 b\u01b0\u1edbc \u0111i nh\u1ecf nh\u1ea5t.</li> </ul> <p>V\u1edbi nh\u1eefng th\u00f4ng tin tr\u00ean, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng BFS. \u0110\u1eebng b\u1ed1i r\u1ed1i n\u1ebfu nh\u1eefng \u0111i\u1ec3m li\u00ean th\u00f4ng l\u00e0 nh\u1eefng \u00f4 kh\u00f4ng k\u1ec1 nhau. H\u00e3y ngh\u0129 m\u1ed7i \u00f4 l\u00e0 m\u1ed9t \u0111i\u1ec3m tr\u00ean \u0111\u1ed3 th\u1ecb hay m\u1ed9t tr\u1ea1ng th\u00e1i hay b\u1ea5t c\u1ee9 c\u00e1i g\u00ec b\u1ea1n mu\u1ed1n.</p> <p>Ch\u00fa \u00fd r\u1eb1ng ph\u1ea7n l\u1edbn nh\u1eefng g\u1ee3i \u00fd v\u1ec1 thu\u1eadt gi\u1ea3i BFS l\u00e0 chi ph\u00ed b\u1eb1ng 1 cho m\u1ed7i b\u01b0\u1edbc.</p> <p>B\u1ea1n c\u00f3 th\u1ec3 luy\u1ec7n t\u1eadp th\u00eam v\u1ec1 BFS b\u1eb1ng nh\u1eefng v\u00ed d\u1ee5 sau:</p> <p>V\u00ed d\u1ee5 kh\u00e1c:</p> <p>RevolvingDoors - SRM 233 Div 1</p> <p>WalkingHome - SRM 222 Div 1</p> <p>TurntableService - SRM 219 Div 1</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#loang-flood-fill","title":"Loang (Flood Fill)","text":"<p>Th\u1ec9nh tho\u1ea3ng b\u1ea1n s\u1ebd g\u1eb7p ph\u1ea3i b\u00e0i to\u00e1n c\u1ea7n t\u1edbi Loang, m\u1ed9t k\u0129 thu\u1eadt s\u1eed d\u1ee5ng BFS \u0111\u1ec3 t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m c\u00f3 th\u1ec3 \u0111i t\u1edbi. \u0110i\u1ec3m kh\u00e1c bi\u1ec7t gi\u1eefa Loang so v\u1edbi nh\u1eefng b\u00e0i BFS \u1edf tr\u00ean l\u00e0 b\u1ea1n kh\u00f4ng ph\u1ea3i t\u00ecm chi ph\u00ed nh\u1ecf nh\u1ea5t.</p> <p>V\u00ed d\u1ee5, c\u00f3 m\u1ed9t m\u00ea cung, \u00f4 1 l\u00e0 kh\u00f4ng \u0111i \u0111\u01b0\u1ee3c v\u00e0 0 l\u00e0 \u0111i \u0111\u01b0\u1ee3c. Ban c\u1ea7n ph\u1ea3i t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c \u00f4 m\u00e0 c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn t\u1eeb \u00f4 g\u00f3c tr\u00e1i tr\u00ean. B\u00e0i n\u00e0y ch\u1ec9 c\u1ea7n l\u1ea5y ra m\u1ed9t \u0111\u1ec9nh \u0111\u00e3 th\u0103m, nh\u00e9t t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh ch\u01b0a th\u0103m m\u00e0 k\u1ec1 v\u1edbi \u0111\u1ec9nh hi\u1ec7n t\u1ea1i v\u00e0o queue r\u1ed3i ti\u1ebfp t\u1ee5c l\u00e0m nh\u01b0 v\u1eady cho \u0111\u1ebfn khi queue r\u1ed7ng. L\u01b0u \u00fd r\u1eb1ng n\u1ebfu s\u1ed1 \u0111\u1ec9nh l\u1edbn, c\u00e0i \u0111\u1eb7t b\u1eb1ng DFS (Depth First Search) s\u1ebd c\u00f3 th\u1ec3 b\u1ecb tr\u00e0n stack do \u0111\u1ec7 quy qu\u00e1 s\u00e2u v\u00e0 compile code kh\u00f4ng t\u0103ng k\u00edch th\u01b0\u1edbc stack (xem th\u00eam gi\u1ea3i th\u00edch \u1edf \u0111\u00e2y). T\u1ed1t h\u01a1n h\u1ebft l\u00e0 n\u00ean d\u00f9ng BFS. \u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i v\u00ed d\u1ee5:</p> <p>grafixMask - SRM 211 Div 1:  Cho m\u1ed9t bitmap \\(400 * 600\\). C\u00f3 m\u1ed9t t\u1eadp h\u00ecnh ch\u1eef nh\u1eadt bao ph\u1ee7 bitmap n\u00e0y (c\u00e1c g\u00f3c c\u1ee7a ch\u00fang c\u00f3 t\u1ecda \u0111\u1ed9 nguy\u00ean). B\u1ea1n c\u1ea7n ph\u1ea3i t\u00ecm ra t\u1ea5t c\u1ea3 c\u00e1c v\u00f9ng li\u00ean ti\u1ebfp kh\u00f4ng b\u1ecb ph\u1ee7 v\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a ch\u00fang.</p> <p>Hints:</p> <ul> <li>C\u00f3 m\u1ed9t map (b\u1ea3ng).</li> <li>M\u1ed9t s\u1ed1 \u0111i\u1ec3m kh\u00f4ng \u0111i qua \u0111\u01b0\u1ee3c.</li> <li>C\u1ea7n t\u00ecm ra nh\u1eefng v\u00f9ng li\u00ean th\u00f4ng.</li> </ul> <p>Nh\u1eefng d\u1ea5u hi\u1ec7u tr\u00ean cho th\u1ea5y b\u00e0i n\u00e0y c\u1ea7n ph\u1ea3i s\u1eed d\u1ee5ng Loang</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#duyet-trau-va-quay-lui-brute-force-and-backtracking","title":"Duy\u1ec7t tr\u00e2u v\u00e0 quay lui (Brute Force and Backtracking)","text":"<p>Hai k\u0129 thu\u1eadt n\u00e0y \u0111\u01b0\u1ee3c g\u1ed9p chung v\u00e0o m\u1ed9t lo\u1ea1i v\u00ec ch\u00fang kh\u00e1 gi\u1ed1ng nhau. Quay lui l\u00e0 k\u0129 thu\u1eadt n\u00e2ng cao v\u00e0 t\u1ed1i \u01b0u h\u01a1n so v\u1edbi duy\u1ec7t tr\u00e2u. N\u00f3 th\u01b0\u1eddng s\u1eed d\u1ee5ng \u0111\u1ec7 quy v\u00e0 \u00e1p d\u1ee5ng cho nh\u1eefng b\u00e0i c\u00f3 gi\u1edbi h\u1ea1n nh\u1ecf \\((N \\le 20)\\)</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#duyet-trau-brute-force","title":"Duy\u1ec7t tr\u00e2u (Brute Force)","text":"<p>\u0110\u1ed1i v\u1edbi nh\u1eefng b\u00e0i duy\u1ec7t tr\u00e2u th\u00ec gi\u1edbi h\u1ea1n th\u01b0\u1eddng b\u00e9. Duy\u1ec7t tr\u00e2u b\u1ea3n ch\u1ea5t \u0111\u00fang nh\u01b0 c\u00e1i t\u00ean c\u1ee7a n\u00f3, l\u00e0 duy\u1ec7t h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p v\u00e0 ch\u1ecdn ra c\u00e1i t\u1ed1t nh\u1ea5t. N\u00f3 r\u1ea5t d\u1ec5 x\u00e2y d\u1ef1ng v\u00e0 c\u00e0i \u0111\u1eb7t.</p> <p>GeneralChess - SRM 197 Div 1: Cho m\u1ed9t s\u1ed1 qu\u00e2n m\u00e3 (nhi\u1ec1u nh\u1ea5t l\u00e0 8) c\u00f9ng v\u1edbi v\u1ecb tr\u00ed c\u1ee7a ch\u00fang \\((-10000 \\le x, y \\le 10000)\\). B\u1ea1n c\u1ea7n ph\u1ea3i t\u00ecm c\u00e1c v\u1ecb tr\u00ed \u0111\u1ec3 \u0111\u1eb7t th\u00eam m\u1ed9t qu\u00e2n m\u00e3 m\u00e0 n\u00f3 c\u00f3 th\u1ec3 \u0103n \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 c\u00e1c qu\u00e2n \u0111\u00e3 cho.</p> <p>Hints:</p> <ul> <li>\u0110\u1ec1 y\u00eau c\u1ea7u t\u00ecm c\u00e1c tr\u01b0\u1eddng h\u1ee3p th\u1ecfa m\u00e3 1 quy lu\u1eadt nh\u1ea5t \u0111\u1ecbnh (\u1edf \u0111\u00e2y l\u00e0 \u0103n t\u1ea5t c\u1ea3 c\u00e1c qu\u00e2n \u0111\u00e3 cho).</li> <li>Gi\u1edbi h\u1ea1n b\u00e9 - ch\u1ec9 c\u00f3 8 qu\u00e2n m\u00e3.</li> </ul> <p>Gi\u1edbi h\u1ea1n \\(x\\), \\(y\\) trong b\u00e0i tr\u00ean kh\u00f4ng quan tr\u1ecdng, b\u1ea1n ch\u1ec9 c\u1ea7n th\u1eed c\u00e1c v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0103n m\u1ed9t qu\u00e2n m\u00e3 v\u00e0 \u0111\u1ed1i v\u1edbi t\u1eebng v\u1ecb tr\u00ed th\u00ec x\u00e9t xem n\u00f3 c\u00f3 \u0103n \u0111\u01b0\u1ee3c c\u00e1c qu\u00e2n c\u00f2n l\u1ea1i kh\u00f4ng.</p> <p>M\u1ed9t v\u00ed d\u1ee5 kh\u00e1c:</p> <p>LargestCircle - SRM 212 Div 2 (3rd problem): Cho m\u1ed9t l\u01b0\u1edbi vu\u00f4ng v\u1edbi m\u1ed9t s\u1ed1 \u00f4 \u0111\u00e3 b\u1ecb \u0111\u00e1nh d\u1ea5u. T\u00ecm \u0111\u01b0\u1eddng tr\u00f2n l\u1edbn nh\u1ea5t kh\u00f4ng \u0111i qua c\u00e1c \u00f4 \u0111\u00e3 b\u1ecb \u0111\u00e1nh d\u1ea5u v\u00e0 c\u00f3 t\u00e2m n\u1eb1m tr\u00ean \u0111i\u1ec3m giao c\u1ee7a l\u01b0\u1edbi \u00f4 vu\u00f4ng (b\u00e1n k\u00ednh l\u00e0 s\u1ed1 nguy\u00ean). Tr\u1ea3 l\u1ea1i b\u00e1n k\u00ednh c\u1ee7a \u0111\u01b0\u1eddng tr\u00f2n. </p> <p>K\u00edch th\u01b0\u1edbc l\u1edbn nh\u1ea5t c\u1ee7a l\u01b0\u1edbi l\u00e0 50</p> <p>Hints: T\u1ea1i m\u1ed7i \u0111i\u1ec3m giao b\u1ea1n th\u1eed t\u1eebng b\u00e1n k\u00ednh m\u1ed9t sao cho th\u1ecfa m\u00e3n \u0111\u1ec1 b\u00e0i. R\u1ed3i ch\u1ecdn ra b\u00e1n k\u00ednh l\u1edbn nh\u1ea5t trong s\u1ed1 ch\u00fang.  Ph\u00e2n t\u00edch \u0111\u1ed9 ph\u1ee9c t\u1ea1p: C\u00f3 nhi\u1ec1u nh\u1ea5t l\u00e0 \\(50 * 50\\) \u00f4, b\u00e1n k\u00ednh l\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean v\u1edbi max l\u00e0 25 v\u00e0 b\u1ea1n c\u1ea7n ki\u1ec3m tra c\u00e1c \u0111i\u1ec3m tr\u00ean thu\u1ed9c \u0111\u01b0\u1eddng tr\u00f2n trong m\u1ed9t th\u1eddi gian tuy\u1ebfn t\u00ednh. T\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd r\u1ea5t b\u00e9 v\u00e0 b\u1ea1n c\u00f3 th\u1ec3 y\u00ean t\u00e2m duy\u1ec7t tr\u00e2u.</p> <p>V\u00ed d\u1ee5 kh\u00e1c:</p> <p>Cafeteria \u2013 SRM 229 Div 1</p> <p>WordFind \u2013 SRM 232 Div 1</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#quay-lui-backtracking","title":"Quay lui (Backtracking)","text":"<p>K\u0129 thu\u1eadt n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u1edbi nh\u1eefng b\u00e0i c\u00f3 gi\u1edbi h\u1ea1n nh\u1ecf. C\u00e1c d\u1ea1ng quay lui m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 g\u1eb7p ph\u1ea3i l\u00e0 t\u00ecm:</p> <ol> <li>T\u1ea5t c\u1ea3 c\u00e1c c\u1ea5u h\u00ecnh ho\u1eb7c m\u1ed9t t\u1eadp c\u00e1c c\u1ea5u h\u00ecnh th\u1ecfa m\u00e3n m\u1ed9t y\u00eau c\u1ea7u.</li> <li>C\u1ea5u h\u00ecnh t\u1ed1t nh\u1ea5t theo m\u1ed9t m\u1ed9t ti\u00eau ch\u00ed n\u00e0o \u0111\u00f3.</li> </ol> <p>BridgeCrossing \u2013 SRM 146 Div 2 (3rd problem): C\u00f3 m\u1ed9t nh\u00f3m ng\u01b0\u1eddi c\u1ea7n sang c\u1ea7u. Tuy nhi\u00ean, do c\u1ea7u qu\u00e1 c\u0169, n\u00ean m\u1ed9t l\u1ea7n ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ed1i \u0111a 2 ng\u01b0\u1eddi qua c\u1ea7u. Tr\u1eddi th\u00ec t\u1ed1i, ch\u1ec9 c\u00f3 m\u1ed9t c\u00e1i \u0111\u00e8n pin. Hai ng\u01b0\u1eddi c\u00f9ng \u0111i qua c\u1ea7u th\u00ec th\u1eddi gian c\u1ee7a hai ng\u01b0\u1eddi s\u1ebd l\u00e0 th\u1eddi gian c\u1ee7a ng\u01b0\u1eddi ch\u1eadm h\u01a1n. Do kh\u00f4ng th\u1ec3 n\u00e9m \u0111\u00e8n pin t\u1eeb b\u00ean n\u00e0y sang b\u00ean kia, n\u00ean m\u1ed9t ng\u01b0\u1eddi s\u1ebd ph\u1ea3i quay l\u1ea1i r\u1ed3i \u0111i v\u1edbi m\u1ed9t ng\u01b0\u1eddi kh\u00e1c. H\u1ecfi th\u1eddi gian \u00edt nh\u1ea5t \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00f9ng qua c\u1ea7u.</p> <p>C\u00f3 nhi\u1ec1u nh\u1ea5t l\u00e0 6 ng\u01b0\u1eddi.</p> <p>Hints:</p> <ul> <li>Gi\u1edbi h\u1ea1n ch\u1ec9 c\u00f3 nhi\u1ec1u nh\u1ea5t 6 ng\u01b0\u1eddi. Qu\u00e1 \u0111\u1ee7 \u0111\u1ec3 c\u00f3 th\u1ec3 sinh ra t\u1ea5t c\u1ea3 c\u00e1c ho\u00e1n  v\u1ecb.</li> <li>B\u1ea1n c\u1ea7n t\u00ecm ra c\u00e1ch t\u1ed1t nh\u1ea5t trong s\u1ed1 c\u00e1c c\u00e1ch \u0111\u01b0a m\u1ecdi ng\u01b0\u1eddi sang c\u1ea7u.</li> </ul> <p>Ta s\u1ebd b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c \u0111\u01b0a 2 ng\u01b0\u1eddi b\u1ea5t k\u00ec qua c\u1ea7u r\u1ed3i ti\u1ebfp t\u1ee5c \u0111\u01b0a nh\u1eefng ng\u01b0\u1eddi c\u00f2n l\u1ea1i sang. Ng\u01b0\u1eddi quay l\u1ea1i s\u1ebd l\u00e0 ng\u01b0\u1eddi nhanh nh\u1ea5t. So s\u00e1nh v\u00e0 t\u00ecm ra ph\u01b0\u01a1ng \u00e1n t\u1ed1n \u00edt th\u1eddi gian nh\u1ea5t. M\u1eb7c d\u00f9 c\u00f2n c\u00f3 m\u1ed9t thu\u1eadt gi\u1ea3i kh\u00e1c cho b\u00e0i n\u00e0y nh\u01b0ng v\u1edbi gi\u1edbi h\u1ea1n b\u00e9 nh\u01b0 v\u1eady th\u00ec ch\u00fang ta kh\u00f4ng c\u1ea7n thi\u1ebft ph\u1ea3i quan t\u00e2m.</p> <p>MNS \u2013 SRM 148 Div 1: Cho 9 s\u1ed1 nguy\u00ean trong kho\u1ea3ng t\u1eeb 0 \u0111\u1ebfn 9. M\u1ed9t \u00f4 vu\u00f4ng th\u1ea7n k\u00ec l\u00e0 \u00f4 vu\u00f4ng m\u00e0 c\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp sao cho t\u1ed5ng m\u1ed7i h\u00e0ng v\u00e0 m\u1ed7i c\u1ed9t \u0111\u1ec1u b\u1eb1ng nhau. T\u00ednh s\u1ed1 c\u00e1ch kh\u00e1c nhau \u0111\u1ec3 s\u1eafp x\u00eap d\u00e3y s\u1ed1 \u0111\u00e3 cho th\u00e0nh m\u1ed9t \u00f4 vu\u00f4ng th\u1ea7n k\u00ec. Hai c\u00e1ch s\u1eafp x\u1ebfp kh\u00e1c nhau n\u1ebfu ch\u00fang kh\u00e1c nhau \u1edf \u00edt nh\u1ea5t 1 v\u1ecb tr\u00ed.</p> <p>Hints: Do ch\u1ec9 c\u00f3 9 s\u1ed1 n\u00ean ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 sinh ra h\u1ebft c\u00e1c c\u00e1ch s\u1eafp x\u1ebfp c\u1ee7a ch\u00fang. Li\u1ec7t k\u00ea c\u00e1c ho\u00e1n v\u1ecb c\u1ee7a 9 s\u1ed1, \u0111\u1ed3ng th\u1eddi l\u01b0u l\u1ea1i m\u1ed9t danh s\u00e1ch c\u00e1c c\u00e1ch s\u1eafp x\u1ebfp kh\u00e1c nhau \u0111\u00e3 c\u00f3 \u0111\u1ec3 ki\u1ec3m tra.</p> <p>V\u00ed d\u1ee5 kh\u00e1c: WeirdRooks \u2013 SRM 234 Div 1</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#quy-hoach-ong-dynamic-programming","title":"Quy ho\u1ea1ch \u0111\u1ed9ng (Dynamic Programming)","text":"<p>\u0110\u1ec3 gi\u1ea3i quy\u1ebft c\u0169ng nh\u01b0 nh\u00ecn ra d\u1ea1ng b\u00e0i n\u00e0y th\u00ec ch\u1ee7 y\u1ebfu d\u1ef1a v\u00e0o kinh nghi\u1ec7m. Th\u01b0\u1eddng th\u00ec gi\u1edbi h\u1ea1n trong c\u00e1c b\u00e0i QH\u0110 kh\u00f4ng l\u1edbn c\u0169ng kh\u00f4ng nh\u1ecf, \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u01b0\u1eddng l\u00e0 \\(N^2\\) , \\(N^3\\) , ... N\u1ebfu nh\u01b0 gi\u1edbi h\u1ea1n qu\u00e1 nh\u1ecf (v\u1edbi TC th\u00ec th\u01b0\u1eddng \\(N \\le 30\\)) th\u00ec th\u01b0\u1eddng kh\u00f4ng ph\u1ea3i l\u00e0 DP. Trong QH\u0110 th\u00ec c\u00e1c b\u00e0i to\u00e1n l\u1edbn s\u1ebd \u0111\u01b0\u1ee3c chia th\u00e0nh c\u00e1c b\u00e0i to\u00e1n nh\u1ecf h\u01a1n v\u00e0 t\u00ednh d\u1ef1a v\u00e0o ch\u00fang. \u0110\u1ec3 hi\u1ec3u h\u01a1n v\u1ec1 QH\u0110, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i n\u00e0y.</p> <p>Th\u1eed ph\u00e2n t\u00edch m\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n: Cho N \u0111\u1ed3ng xu v\u1edbi gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang(\\(V_1\\), \\(V_2\\), ..., \\(V_N\\)) v\u00e0 m\u1ed9t s\u1ed1 S. T\u00ecm s\u1ed1 \u0111\u1ed3ng xu nh\u1ecf nh\u1ea5t m\u00e0 t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang b\u1eb1ng S (b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t \u0111\u1ed3ng nhi\u1ec1u l\u1ea7n) ho\u1eb7c th\u00f4ng b\u00e1o kh\u00f4ng c\u00f3 c\u00e1ch n\u00e0o nh\u01b0 v\u1eady. \\(N \\le 1000\\) v\u00e0 \\(S \\le 1000\\)</p> <p>Hints:</p> <ul> <li>Gi\u1edbi h\u1ea1n c\u1ee7a \\(N\\) v\u00e0 \\(S\\) \u0111\u1ec1u \u1edf m\u1ee9c v\u1eeba ph\u1ea3i.</li> <li>M\u1ed9t tr\u1ea1ng th\u00e1i \u0111\u1ecbnh ngh\u0129a l\u00e0 s\u1ed1 \u0111\u1ed3ng xu nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u1ed5ng b\u1eb1ng 1 gi\u00e1 tr\u1ecb.</li> <li>T\u1ed5ng i ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1c t\u1ed5ng b\u00e9 h\u01a1n j (j &lt; i).</li> <li>B\u1eb1ng c\u00e1ch th\u00eam m\u1ed9t \u0111\u1ed3ng xu, ta di chuy\u1ec3n t\u1eeb tr\u1ea1ng th\u00e1i n\u00e0y sang tr\u1ea1ng th\u00e1i kh\u00e1c.</li> </ul> <p>T\u1ea5t c\u1ea3 nh\u1eefng t\u00ednh ch\u1ea5t tr\u00ean cho th\u1ea5y \u0111\u00e2y l\u00e0 m\u1ed9t b\u00e0i QH\u0110.</p> <p>ZigZag \u2013 2003 TCCC Semifinals 3: M\u1ed9t d\u00e3y s\u1ed1 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 zig-zag n\u1ebfu c\u00e1c hi\u1ec7u gi\u1eefa nh\u1eefng li\u1ec1n nhau l\u00e0 m\u1ed9t d\u00e3y \u0111an d\u1ea5u (lu\u00e2n phi\u00ean \u00e2m d\u01b0\u01a1ng \u00e2m d\u01b0\u01a1ng ...). D\u00e3y c\u00f3 \u00edt h\u01a1n 2 s\u1ed1 l\u00e0 1 d\u00e3y zig-zag. Cho m\u1ed9t d\u00e3y s\u1ed1 t\u00ecm d\u00e3y con zig-zag d\u00e0i nh\u1ea5t. M\u1ed9t d\u00e3y con thu \u0111\u01b0\u1ee3c b\u1eb1ng c\u00e1ch x\u00f3a b\u1ecf m\u1ed9t s\u1ed1 s\u1ed1 trong d\u00e3y ban \u0111\u1ea7u (ho\u1eb7c kh\u00f4ng x\u00f3a). Gi\u1edbi h\u1ea1n \\(N \\le 50\\)</p> <p>Hints:</p> <ul> <li>Gi\u1edbi h\u1ea1n c\u1ee7a \\(N\\) kh\u00f4ng l\u1edbn kh\u00f4ng nh\u1ecf.</li> <li>\\(f(i, d)\\) l\u00e0 \u0111\u1ed9 d\u00e0i d\u00e3y con zig-zag d\u00e0i nh\u1ea5t k\u1ebft th\u00fac t\u1ea1i i, c\u00f2n d = 0 n\u1ebfu s\u1ed1 tr\u01b0\u1edbc i b\u00e9 h\u01a1n n\u00f3 v\u00e0 d = 1 n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i.</li> <li>\\(f(i, d)\\) \u0111\u01b0\u1ee3c t\u00ednh b\u1edfi \\(f(j, e)\\) \\((j &lt; i)\\).</li> <li>N\u1ebfu th\u00eam m\u1ed9t s\u1ed1 v\u00e0o trong d\u00e3y hi\u1ec7n t\u1ea1i th\u00ec ta \u0111\u01b0\u1ee3c m\u1ed9t d\u00e3y d\u00e0i h\u01a1n.</li> </ul> <p>Nh\u01b0 v\u1eady, b\u00e0i n\u00e0y c\u0169ng c\u00f3 nh\u1eefng d\u00e2u hi\u1ec7u gi\u1ed1ng v\u1edbi b\u00e0i tr\u00ean v\u00e0 nh\u1eefng b\u00e0i QH\u0110 kh\u00e1c. Ph\u1ea7n kh\u00f3 nh\u1ea5t l\u00e0 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c b\u00e0i \u0111\u01b0a ra l\u00e0 QH\u0110 b\u1eb1ng nh\u1eefng d\u1ea5u hi\u1ec7u tr\u00ean. Sau \u0111\u00f3 b\u01b0\u1edbc ti\u1ebfp theo ch\u1ec9 l\u00e0 x\u00e2y d\u1ef1ng thu\u1eadt to\u00e1n v\u00e0 c\u00e0i \u0111\u1eb7t.</p> <p>V\u00ed d\u1ee5 kh\u00e1c:</p> <p>ChessMetric \u2013 2003 TCCC Round 4</p> <p>AvoidRoads \u2013 2003 TCO Semifinals 4</p> <p>FlowerGarden \u2013 2004 TCCC Round 1</p> <p>BadNeighbors \u2013 2004 TCCC Round 4</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#nang-cao-hard-drills","title":"N\u00e2ng cao (Hard Drills):","text":""},{"location":"translate/topcoder/How-to-Find-a-Solution/#luong-cuc-ai-maximum-flow","title":"Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i (Maximum Flow)","text":"<p>C\u0169ng kh\u00f4ng d\u1ec5 \u0111\u1ec3 c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c m\u1ed9t b\u00e0i to\u00e1n s\u1eed d\u1ee5ng Lu\u1ed3ng. Tuy nhi\u00ean, m\u1ed9t s\u1ed1 d\u1ea5u hi\u1ec7u sau c\u00f3 th\u1ec3 gi\u00fap b\u1ea1n:</p> <ul> <li>\u0110\u1ec3 \u00fd v\u00e0o gi\u1edbi h\u1ea1n, nh\u1eefng b\u00e0i n\u00e0y th\u01b0\u1eddng c\u00f3 gi\u1edbi h\u1ea1n ph\u00f9 h\u1ee3p v\u1edbi \\(O(N^3)\\) ho\u1eb7c \\(O(N^4)\\)</li> <li>\u0110\u1ed3 th\u1ecb v\u1edbi c\u00e1c c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 (cho tr\u1ef1c ti\u1ebfp ho\u1eb7c gi\u00e1n ti\u1ebfp).</li> <li>C\u1ea7n t\u00ecm gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a c\u00e1i g\u00ec \u0111\u00f3.</li> </ul> <p>V\u00ed d\u1ee5 Cho m\u1ed9t danh s\u00e1ch c\u00e1c \u1ed1ng n\u01b0\u1edbc, m\u1ed7i \u1ed1ng ch\u1ec9 cho m\u1ed9t l\u01b0\u1ee3ng n\u01b0\u1edbc nh\u1ea5t \u0111\u1ecbnh \u0111\u01b0\u1ee3c \u0111i qua. C\u00e1c \u00f4ng \u0111\u01b0\u1ee3c n\u1ed1i v\u1edbi nhau.</p> <p>T\u00ecm l\u01b0\u1ee3ng n\u01b0\u1edbc l\u1edbn nh\u1ea5t c\u00f3 th\u1ec3 ch\u1ea3y \u0111\u01b0\u1ee3c t\u1eeb \u0111i\u1ec3m \u0111\u1ea7u \u0111\u1ebfn \u0111i\u1ec3m cu\u1ed1i trong m\u1ed9t \u0111\u01a1n v\u1ecb th\u1eddi gian.</p> <p>\\(N \\le 100\\)</p> <p>D\u1ec5 d\u00e0ng th\u1ea5y \u0111\u01b0\u1ee3c l\u01b0\u1ee3ng n\u01b0\u1edbc \u1edf m\u1ed7i \u1ed1ng l\u00e0 tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh, kh\u1edbp n\u1ed1i c\u00e1c \u1ed1ng l\u00e0 c\u00e1c \u0111\u1ec9nh trong \u0111\u1ed3 th\u1ecb. B\u1ea1n ph\u1ea3i t\u00ecm l\u01b0\u1ee3ng n\u01b0\u1edbc l\u1edbn nh\u1ea5t ch\u1ea3y t\u1eeb \u0111\u1ec9nh b\u1eaft \u0111\u1ea7u \u0111\u1ebfn \u0111\u1ec9nh k\u1ebft th\u00fac.</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#cap-ghep-optimal-pair-matching","title":"C\u1eb7p gh\u00e9p (Optimal Pair Matching)","text":"<p>D\u1ea1ng b\u00e0i n\u00e0y th\u01b0\u1eddng cho 2 t\u1eadp v\u00e0 c\u00e1c quy t\u1eafc, b\u1ea1n ph\u1ea3i s\u1eed d\u1ee5ng c\u00e1c quy t\u1eafc n\u00e0y \u0111\u1ec3 gh\u00e9p c\u00e0ng nhi\u1ec1u c\u00e0ng t\u1ed1t c\u00e1c ph\u1ea7n t\u1eed \u1edf t\u1eadp \\(A\\) v\u1edbi c\u00e1c ph\u1ea7n t\u1eed \u1edf t\u1eadp \\(B\\).</p> <p>Parking \u2013 SRM 236 Div 1: Cho \\(N\\) c\u00e1i xe v\u00e0 \\(M\\) ch\u1ed7 \u0111\u1ed7 xe tr\u00ean m\u1ed9t c\u00e1i b\u1ea3ng h\u00ecnh ch\u1eef nh\u1eadt, trong \u0111\u00f3 c\u00f3 m\u1ed9t s\u1ed1 \u00f4 kh\u00f4ng \u0111i qua \u0111\u01b0\u1ee3c. B\u1ea1n c\u1ea7n t\u00ecm m\u1ed9t c\u00e1ch \u0111\u1ec3 \u0111\u01b0a t\u1ea5t c\u1ea3 c\u00e1c xe v\u00e0o \u0111i\u1ec3m \u0111\u1ed7 xe, sao cho s\u1ed1 l\u1edbn nh\u1ea5t trong c\u00e1c kho\u1ea3ng c\u00e1ch t\u1eeb m\u1ed9t xe \u0111\u1ebfn ch\u1ed7 \u0111\u1ed7 c\u1ee7a n\u00f3 l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3. M\u1ed9t \u0111i\u1ec3m \u0111\u1ed7 xe ch\u1ec9 cho ph\u00e9p m\u1ed9t xe \u0111\u1ed7.</p> <p>Hints:  Nh\u1eadn x\u00e9t b\u00e0i n\u00e0y, ta th\u1ea5y c\u00f3 2 t\u1eadp: xe v\u00e0 \u0111i\u1ec3m \u0111\u1ed7 xe, ch\u00fang ta c\u1ea7n th\u1ef1c hi\u1ec7n gh\u00e9p m\u1ed7i xe v\u1edbi m\u1ed9t \u0111i\u1ec3m \u0111\u1ed7 t\u01b0\u01a1ng \u1ee9ng. T\u1ed3n t\u1ea1i m\u1ed9t c\u1ea1nh gi\u1eefa 1 xe v\u00e0 1 \u0111i\u1ec3m \u0111\u1ed7 n\u1ebfu c\u00f3 \u0111\u01b0\u1eddng \u0111i gi\u1eefa ch\u00fang v\u00e0 tr\u1ecdng s\u1ed1 c\u1ee7a c\u1ea1nh n\u00e0y l\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t gi\u1eefa 2 \u0111i\u1ec3m n\u00e0y. B\u01b0\u1edbc ti\u1ebfp theo l\u00e0 chia nh\u1ecb ph\u00e2n kho\u1ea3ng c\u00e1ch d\u00e0i nh\u1ea5t: \u1edf m\u1ed7i b\u01b0\u1edbc, x\u00f3a \u0111i c\u00e1c c\u1ea1nh c\u00f3 \u0111\u1ed9 d\u00e0i l\u1edbn h\u01a1n \\(C\\); n\u1ebfu v\u1eabn c\u00f3 th\u1ec3 gh\u00e9p t\u1ea5t c\u1ea3 c\u00e1c xe v\u00e0o \u0111i\u1ec3m \u0111\u1ed7 th\u00ec ch\u1ecdn m\u1ed9t gi\u00e1 tr\u1ecb \\(C\\) nh\u1ecf h\u01a1n; ng\u01b0\u1ee3c l\u1ea1i th\u00ec ch\u1ecdn m\u1ed9t gi\u00e1 tr\u1ecb \\(C\\) l\u1edbn h\u01a1n. Khi \u0111\u00e3 chia nh\u1ecb ph\u00e2n xong, gi\u00e1 tr\u1ecb \\(C\\) nh\u1ecf nh\u1ea5t s\u1ebd l\u00e0 k\u1ebft qu\u1ea3 c\u1ea7n t\u00ecm.</p>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#quy-hoach-tuyen-tinh-linear-programming-thuat-toan-simplex","title":"Quy ho\u1ea1ch tuy\u1ebfn t\u00ednh (Linear Programming) &amp; Thu\u1eadt to\u00e1n Simplex","text":"<p>D\u1ea5u hi\u1ec7u nh\u1eadn bi\u1ebft: - Cho m\u1ed9t t\u1eadp c\u00e1c v\u1eadt v\u1edbi kh\u1ed1i l\u01b0\u1ee3ng ho\u1eb7c s\u1ed1 l\u01b0\u1ee3ng c\u1ea7n \u0111\u1ea1t \u0111\u01b0\u1ee3c c\u1ee7a m\u1ed7i v\u1eadt. - Cho m\u1ed9t danh s\u00e1ch c\u00e1c t\u1eadp h\u1ee3p. M\u1ed7i t\u1eadp bao g\u1ed3m m\u1ed9t s\u1ed1 v\u1eadt v\u1edbi m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng nh\u1ea5t \u0111\u1ecbnh. M\u1ed7i t\u1eadp c\u00f3 m\u1ed9t chi ph\u00ed. - M\u1ee5c \u0111\u00edch c\u1ee7a b\u00e0i to\u00e1n l\u00e0 t\u00ecm m\u1ed9t t\u1eadp t\u1ed1i \u01b0u t\u1eeb c\u00e1c t\u1eadp tr\u00ean sao cho t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng c\u1ee7a m\u1ed7i v\u1eadt b\u1eb1ng s\u1ed1 l\u01b0\u1ee3ng c\u1ea7n \u0111\u1ea1t \u0111\u01b0\u1ee3c.</p> <p>V\u00ed d\u1ee5:</p> <p>Mixture \u2013 SRM 231 Div 1: B\u1ea1n \u0111ang mu\u1ed1n l\u00e0m ra m\u1ed9t h\u1ed7n h\u1ee3p t\u1eeb c\u00e1c h\u1ee3p ch\u1ea5t kh\u00e1c nhau, m\u1ed7i h\u1ee3p ch\u1ea5t c\u1ea7n ph\u1ea3i \u0111\u00fang li\u1ec1u l\u01b0\u1ee3ng. B\u1edfi v\u00ec c\u00e1c h\u1ee3p ch\u1ea5t \u0111\u00f4i khi kh\u00f4ng \u0111\u01b0\u1ee3c b\u00e1n ri\u00eang, m\u00e0 b\u1ea1n ph\u1ea3i mua c\u00e1c h\u1ed7n h\u1ee3p c\u00f3 s\u1eb5n m\u00e0 ch\u1ee9a ch\u00fang. M\u1ed7i h\u1ed7n h\u1ee3p l\u1ea1i c\u00f3 m\u1ed9t l\u01b0\u1ee3ng nh\u1ea5t \u0111\u1ecbnh c\u1ee7a m\u1ed7i h\u1ee3p ch\u1ea5t c\u1ea5u th\u00e0nh. B\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i mua to\u00e0n b\u1ed9 h\u1ed7n h\u1ee3p m\u00e0 c\u00f3 th\u1ec3 mua nh\u1eefng h\u1ee3p ch\u1ea5t b\u1ea1n c\u1ea7n v\u1edbi li\u1ec1u l\u01b0\u1ee3ng t\u00f9y ch\u1ecdn. Nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n l\u00e0 t\u00ecm ra c\u00e1ch ti\u00eau \u00edt ti\u1ec1n nh\u1ea5t \u0111\u1ec1 c\u00f3 th\u1ec3 t\u1ea1o ra \u0111\u01b0\u1ee3c h\u1ed7n h\u1ee3p mong mu\u1ed1n.</p> <p>Hints:</p> <ul> <li>M\u1ed9t t\u1eadp c\u00e1c v\u1eadt (h\u1ee3p ch\u1ea5t).</li> <li>M\u1ed9t danh s\u00e1ch c\u00e1c t\u1eadp (c\u00e1c h\u1ed7n h\u1ee3p c\u00f3 s\u1eb5n).</li> <li>T\u00ecm chi ph\u00ed nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u1ea1o ra t\u1eadp mong mu\u1ed1n t\u1eeb c\u00e1c t\u1eadp c\u00f3 s\u1eb5n.</li> </ul> <p>Nh\u1eefng t\u00ednh ch\u1ea5t tr\u00ean gi\u1ed1ng h\u1ec7t v\u1edbi d\u1ea5u hi\u1ec7u nh\u1eadn bi\u1ebft c\u1ee7a d\u1ea1ng Linear Programming.</p> <p>\u0110\u00e2y l\u00e0 1 k\u0129 thu\u1eadt n\u00e2ng cao, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam \u1edf:</p> <ul> <li>Wikipedia - Linear Programming</li> <li>Simplex algorithm</li> </ul>"},{"location":"translate/topcoder/How-to-Find-a-Solution/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c l\u1eddi gi\u1ea3i cho m\u1ed9t b\u00e0i to\u00e1n b\u1ea1n c\u1ea7n ph\u1ea3i l\u00e0m nhi\u1ec1u b\u00e0i t\u1eadp \u0111\u1ec3 luy\u1ec7n kh\u1ea3 n\u0103ng nh\u1eadn \u0111\u1ecbnh b\u00e0i to\u00e1n c\u0169ng nh\u01b0 t\u0103ng th\u00eam kinh nghi\u1ec7m. Ngo\u00e0i ra, c\u00f2n r\u1ea5t nhi\u1ec1u d\u1ea1ng b\u00e0i kh\u00e1c m\u00e0 trong ph\u1ea1m vi b\u00e0i vi\u1ebft n\u00e0y kh\u00f4ng th\u1ec3 bao ph\u1ee7 h\u1ebft \u0111\u01b0\u1ee3c.</p>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/","title":"To\u00e1n h\u1ecdc trong Tin h\u1ecdc","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c: Mathematics for Topcoders - \u0111\u0103ng b\u1edfi dimkadimon tr\u00ean Topcoder</p>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u:","text":"<p>Nhi\u1ec1u ng\u01b0\u1eddi thi Topcoder ph\u00e0n n\u00e0n khi trong \u0111\u1ec1 c\u00f3 qu\u00e1 nhi\u1ec1u To\u00e1n \u2013 \u0111i\u1ec3m y\u1ebfu c\u1ee7a h\u1ecd. C\u00e1 nh\u00e2n t\u00f4i l\u00e0 m\u1ed9t ng\u01b0\u1eddi r\u1ea5t y\u00eau To\u00e1n, v\u00ec v\u1eady c\u00f3 l\u1ebd t\u00f4i s\u1ebd c\u00f3 ch\u00fat thi\u00ean v\u1ecb trong v\u1ea5n \u0111\u1ec1 n\u00e0y. Nh\u01b0ng t\u00f4i ho\u00e0n to\u00e0n tin t\u01b0\u1edfng r\u1eb1ng, c\u00e1c b\u00e0i t\u1eadp n\u00ean c\u00f3 \u00edt nh\u1ea5t m\u1ed9t ch\u00fat To\u00e1n h\u1ecdc v\u00e0 Khoa h\u1ecdc m\u00e1y t\u00ednh ph\u1ea3i \u0111i li\u1ec1n v\u1edbi To\u00e1n h\u1ecdc. Th\u1eadt kh\u00f3 c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng khi m\u00e0 c\u1ea3 hai l\u0129nh v\u1ef1c n\u00e0y c\u0169ng t\u1ed3n t\u1ea1i m\u00e0 kh\u00f4ng h\u1ec1 c\u00f3 b\u1ea5t k\u1ef3 s\u1ef1 t\u01b0\u01a1ng t\u00e1c n\u00e0o l\u1eabn nhau. Ng\u00e0y nay, To\u00e1n h\u1ecdc \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng r\u1ea5t nhi\u1ec1u trong Tin h\u1ecdc \u0111\u1ec3  gi\u1ea3i nh\u1eefng h\u1ec7 ph\u01b0\u01a1ng tr\u00ecnh h\u00e0ng ngh\u00ecn \u1ea9n hay t\u00ecm nghi\u1ec7m x\u1ea5p x\u1ec9 \u0111\u1ed1i v\u1edbi nh\u1eefng ph\u01b0\u01a1ng tr\u00ecnh m\u00e0 kh\u00f4ng c\u00f3 c\u00f4ng th\u1ee9c nghi\u1ec7m t\u1ed5ng qu\u00e1t. To\u00e1n h\u1ecdc c\u00f2n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong vi\u1ec7c nghi\u00ean c\u1ee9u v\u1ec1 Khoa h\u1ecdc m\u00e1y t\u00ednh, c\u0169ng nh\u01b0 l\u00e0 \u00e1p d\u1ee5ng cho c\u00e1c thu\u1eadt to\u00e1n v\u1ec1 \u0111\u1ed3 th\u1ecb (graph algorithms) v\u00e0 l\u0129nh v\u1ef1c th\u1ecb gi\u00e1c m\u00e1y t\u00ednh (Computer Vision).</p> <p>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd ph\u00e2n t\u00edch v\u1ec1 l\u00fd thuy\u1ebft v\u00e0 \u1ee9ng d\u1ee5ng c\u1ee7a m\u1ed9t v\u00e0i c\u1ea5u tr\u00fac To\u00e1n h\u1ecdc ph\u1ed5 bi\u1ebfn. C\u00e1c ch\u1ee7 \u0111\u1ec1 \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp t\u1edbi bao g\u1ed3m:</p> <ol> <li>S\u1ed1 nguy\u00ean t\u1ed1.</li> <li>\u01af\u1edbc chung l\u1edbn nh\u1ea5t (GCD).</li> <li>H\u00ecnh h\u1ecdc c\u01a1 b\u1ea3n.</li> <li>H\u1ec7 c\u01a1 s\u1ed1.</li> <li>Ph\u00e2n s\u1ed1 v\u00e0 s\u1ed1 ph\u1ee9c.</li> </ol>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#so-nguyen-to","title":"S\u1ed1 nguy\u00ean t\u1ed1:","text":"<p>M\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1  khi v\u00e0 ch\u1ec9 khi n\u00f3 ch\u1ec9 chia h\u1ebft cho 1 v\u00e0 ch\u00ednh n\u00f3. V\u00ed d\u1ee5 nh\u01b0 2, 3, 5, 79, 311 v\u00e0 1931 \u0111\u1ec1u l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1, trong khi 21 th\u00ec kh\u00f4ng ph\u1ea3i, b\u1edfi n\u00f3 chia h\u1ebft cho 3 v\u00e0 7. \u0110\u1ec3 x\u00e1c \u0111\u1ecbnh xem m\u1ed9t s\u1ed1 t\u1ef1 nhi\u00ean \\(n\\) c\u00f3 ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 hay kh\u00f4ng, ta ch\u1ec9 c\u1ea7n \u0111\u01a1n gi\u1ea3n ki\u1ec3m tra xem n\u00f3 c\u00f3 chia h\u1ebft cho b\u1ea5t k\u1ef3 s\u1ed1 n\u00e0o nh\u1ecf h\u01a1n n\u00f3 v\u00e0 l\u1edbn 1 hay kh\u00f4ng. Ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ph\u00e9p chia c\u00f3 d\u01b0 (to\u00e1n t\u1eed %) \u0111\u1ec3 ki\u1ec3m tra kh\u1ea3 n\u0103ng chia h\u1ebft c\u1ee7a n\u00f3: </p> <p>Java</p> <pre><code>    for (int i = 2; i &lt; n; i++) \n        if (n % i == 0) return false;\n\n    return true;\n</code></pre> <p>Pascal</p> <pre><code>    for i := 2 to n - 1 do\n        if (n mod i = 0) then exit(false);\n\n    exit(true);\n</code></pre> <p>Ch\u00fang ta c\u00f2n c\u00f3 th\u1ec3 l\u00e0m cho \u0111o\u1ea1n m\u00e3 n\u00e0y ch\u1ea1y nhanh h\u01a1n n\u1eefa b\u1eb1ng vi\u1ec7c nh\u1eadn ra r\u1eb1ng, ta ch\u1ec9 c\u1ea7n x\u00e9t kh\u1ea3 n\u0103ng chia h\u1ebft cho m\u1ecdi gi\u00e1 tr\u1ecb \\(i\\) l\u1edbn h\u01a1n 1 v\u00e0 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng v\u1edbi ph\u1ea7n nguy\u00ean c\u1ee7a c\u0103n b\u1eadc 2 c\u1ee7a \\(n\\), t\u1ea1m g\u1ecdi l\u00e0 \\(m\\). T\u1ea1i sao l\u1ea1i th\u1ebf nh\u1ec9? \u0110\u1ea5y l\u00e0 b\u1edfi v\u00ec n\u1ebfu \\(n\\) chia h\u1ebft cho b\u1ea5t k\u1ef3 s\u1ed1 n\u00e0o l\u1edbn h\u01a1n \\(m\\) th\u00ec k\u1ebft qu\u1ea3 nh\u1eadn \u0111\u01b0\u1ee3c c\u0169ng ch\u1ec9 l\u00e0 m\u1ed9t s\u1ed1 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(m\\). M\u1ed9t c\u1ea3i ti\u1ebfn n\u1eefa l\u00e0: ta th\u1ea5y r\u1eb1ng kh\u00f4ng t\u1ed3n t\u1ea1i b\u1ea5t k\u1ef3 m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 ch\u1eb5n n\u00e0o l\u1edbn h\u01a1n 2. Nh\u01b0 v\u1eady, sau khi \u0111\u00e3 ki\u1ec3m tra r\u1eb1ng \\(n\\) l\u00e0 s\u1ed1 l\u1ebb th\u00ec ta c\u00f3 th\u1ec3 an t\u00e2m t\u0103ng bi\u1ebfn \\(i\\) l\u00ean 2 gi\u00e1 tr\u1ecb. \u0110\u00e2y s\u1ebd l\u00e0 \u0111o\u1ea1n m\u00e3 \u00e1p d\u1ee5ng ph\u01b0\u01a1ng th\u1ee9c ki\u1ec3m tra s\u1ed1 nguy\u00ean t\u1ed1 m\u1edbi nh\u1ea5t n\u00e0y:</p> <p>Java</p> <pre><code>    public boolean isPrime (int n)\n    {\n        if (n &lt;= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        int m = Math.sqrt(n);\n\n        for (int i = 3; i &lt;= m; i += 2)\n            if (n % i == 0)\n                return false;\n\n        return true;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function IsPrime (n : Integer): Boolean;\n    var\n        i : Integer;\n        m : Integer;\n    begin\n        if (n &lt;= 1) exit(false);\n        if (n = 2) exit(true);\n        if (n mod 2 = 0) exit(false);\n        i := 3;\n        m := trunc(sqrt(n));\n        while (i &lt;= m) do\n            begin\n                if (n mod i = 0) exit(false);\n                inc(i, 2);\n            end;\n        exit(true);\n    end;\n</code></pre> <p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u1ea7n ph\u1ea3i t\u00ecm m\u1ecdi s\u1ed1 nguy\u00ean t\u1ed1 trong kho\u1ea3ng \\([1, 100000]\\), th\u00ec ch\u1eb3ng l\u1ebd ta ph\u1ea3i g\u1ecdi h\u00e0m ki\u1ec3m tra 100000 l\u1ea7n sao? Vi\u1ec7c l\u1eb7p \u0111i l\u1eb7p l\u1ea1i c\u00e1c ph\u00e9p ki\u1ec3m tra t\u01b0\u01a1ng t\u1ef1 th\u1eadt s\u1ef1 kh\u00f4ng hi\u1ec7u qu\u1ea3 ch\u00fat n\u00e0o. Trong t\u00ecnh hu\u1ed1ng n\u00e0y, ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u nh\u1ea5t ch\u00ednh l\u00e0 s\u1eed d\u1ee5ng S\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes (Sieve of Eratosthenes). S\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes s\u1ebd x\u00e1c \u0111\u1ecbnh to\u00e0n b\u1ed9 nh\u1eefng s\u1ed1 nguy\u00ean t\u1ed1 trong kho\u1ea3ng \\([2, n]\\). Tr\u01b0\u1edbc h\u1ebft, s\u00e0ng nguy\u00ean t\u1ed1 s\u1ebd gi\u1ea3 \u0111\u1ecbnh m\u1ecdi s\u1ed1 t\u1ef1 nhi\u00ean t\u1eeb 2 \u0111\u1ebfn \\(n\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1. K\u1ebf \u0111\u1ebfn, n\u00f3 s\u1ebd ch\u1ecdn ra s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u1ea7u ti\u00ean v\u00e0 x\u00f3a \u0111i nh\u1eefng b\u1ed9i nh\u1ecf h\u01a1n b\u1eb1ng \\(n\\) c\u1ee7a s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u00f3. V\u00e0 n\u00f3 l\u1ea1i ti\u1ebfp t\u1ee5c qu\u00e1 tr\u00ecnh b\u1eb1ng l\u1ef1a m\u1ed9t s\u1ed1 nguy\u00ean t\u1ed1 ti\u1ebfp theo v\u00e0 x\u00f3a \u0111i c\u00e1c b\u1ed9i c\u1ee7a n\u00f3. Qu\u00e1 tr\u00ecnh n\u00e0y s\u1ebd ti\u1ebfp t\u1ee5c di\u1ec5n ra cho \u0111\u1ebfn khi m\u00e0 m\u1ecdi s\u1ed1 \u0111\u1ec1u \u0111\u00e3 x\u1eed l\u00fd. V\u00ed d\u1ee5, ta s\u1ebd t\u00ecm c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 trong kho\u1ea3ng \\([2, 20]\\). Tr\u01b0\u1edbc h\u1ebft, ta h\u00e3y ghi ra d\u00e3y s\u1ed1 \u0111\u00f3:</p> <pre><code>2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n</code></pre> <p>B\u1edfi v\u00ec 2 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u1ea7u ti\u00ean, n\u00ean ta s\u1ebd lo\u1ea1i b\u1ecf \u0111i t\u1ea5t c\u1ea3 nh\u1eefng b\u1ed9i c\u1ee7a 2 v\u00e0 nh\u1ecf h\u01a1n b\u1eb1ng 20.</p> <pre><code>2 3 5 7 9 11 13 15 17 19\n</code></pre> <p>B\u1edfi v\u00ec 3 l\u00e0 s\u1ed1 \u0111\u1ea7u ti\u00ean ch\u01b0a b\u1ecb b\u1ecf, n\u00ean ta s\u1ebd l\u1ef1a ch\u1ecdn 3 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 ti\u1ebfp theo v\u00e0 lo\u1ea1i b\u1ecf \u0111i t\u1ea5t c\u1ea3 nh\u1eefng b\u1ed9i c\u1ee7a 3 v\u00e0 nh\u1ecf h\u01a1n b\u1eb1ng 20.</p> <pre><code>2 3 5 7 11 13 17 19\n</code></pre> <p>Ti\u1ebfp \u0111\u1ebfn, ta s\u1ebd ch\u1ecdn 5, ta th\u1ea5y kh\u00f4ng c\u00f2n b\u1ed9i n\u00e0o c\u1ee7a 5 nh\u1ecf h\u01a1n b\u1eb1ng 20 c\u00f2n s\u00f3t n\u00ean ta l\u1ea1i ti\u1ebfp t\u1ee5c x\u00e9t \u0111\u1ebfn 7, ...</p> <p>V\u00e0 gi\u1edd th\u00ec t\u1ea5t c\u1ea3 nh\u1eefng s\u1ed1 c\u00f2n s\u00f3t l\u1ea1i ch\u00ednh l\u00e0 c\u00e1c s\u1ed1 nguy\u00ean t\u1ed1 m\u00e0 ta c\u1ea7n t\u00ecm. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 \u0111o\u1ea1n m\u00e3 cho S\u00e0ng nguy\u00ean t\u1ed1 Eratosthenes:</p> <p>Java</p> <pre><code>    public boolean[] sieve(int n)\n    {\n        boolean[] prime=new boolean[n+1];\n        Arrays.fill(prime,true);\n        prime[0] = false;\n        prime[1] = false;\n        int m = Math.sqrt(n);\n\n        for (int i = 2; i &lt;= m; i++)\n            if (prime[i])\n                for (int k = i * i; k &lt;= n; k += i)\n                    prime[k] = false;\n\n        return prime;\n    } \n</code></pre> <p>Pascal</p> <pre><code>    //m\u1ea3ng ki\u1ec3m tra s\u1ed1 nguy\u00ean t\u1ed1 prime[0..n]\n\n    function sieve(n : Integer): Boolean;   \n    var\n        i, m : Integer;\n    begin\n        fillchar(prime, sizeof(prime), 1);\n        prime[0] := false;\n        prime[1] := false;\n\n        m := trunc(sqrt(n));\n        for i := 2 to m do\n            if (prime[i]) then\n                for j := i to n div i do\n                    prime[i * j] := false;\n    end;\n</code></pre> <p>\u1ede \u0111o\u1ea1n m\u00e3 tr\u00ean, ta s\u1ebd t\u1ea1o m\u1ed9t m\u1ea3ng prime, n\u01a1i s\u1ebd ch\u1ee9a c\u00e1c gi\u00e1 tr\u1ecb nguy\u00ean trong kho\u1ea3ng \\([0, n]\\). <code>Prime[i]</code> l\u00e0 true n\u1ebfu \\(i\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. V\u00f2ng l\u1eb7p b\u00ean ngo\u00e0i s\u1ebd t\u00ecm ki\u1ebfm s\u1ed1 nguy\u00ean t\u1ed1 ti\u1ebfp theo, trong khi v\u00f2ng l\u1eb7p b\u00ean trong s\u1ebd lo\u1ea1i b\u1ecf \u0111i t\u1ea5t c\u1ea3 nh\u1eefng b\u1ed9i nh\u1ecf h\u01a1n b\u1eb1ng \\(n\\) c\u1ee7a s\u1ed1 nguy\u00ean t\u1ed1 \u0111\u00f3.</p>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#uoc-chung-lon-nhat","title":"\u01af\u1edbc chung l\u1edbn nh\u1ea5t","text":"<p>\u01af\u1edbc chung l\u1edbn nh\u1ea5t (Greatest Common Divisor) c\u1ee7a hai s\u1ed1  t\u1ef1 nhi\u00ean \\(a\\) v\u00e0 \\(b\\) l\u00e0 s\u1ed1 l\u1edbn nh\u1ea5t m\u00e0 c\u1ea3 \\(a\\) v\u00e0 \\(b\\) \u0111\u1ec1u chia h\u1ebft. \u0110\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \\(GCD(a, b)\\), m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n, ta c\u00f3 th\u1ec3 l\u1ea5y s\u1ed1 nh\u1ecf h\u01a1n trong hai s\u1ed1 \\(a\\) v\u00e0 \\(b\\) r\u1ed3i gi\u1ea3m d\u1ea7n cho \u0111\u1ebfn khi n\u00e0o c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t s\u1ed1 m\u00e0 c\u1ea3 \\(a\\) v\u00e0 \\(b\\) \u0111\u1ec1u c\u00f9ng chia h\u1ebft cho s\u1ed1 \u0111\u00f3.</p> <p>Java</p> <pre><code>    for (int i = Math.min(a, b); i &gt;= 1; i--)\n        if (a % i == 0 &amp;&amp; b % i == 0)\n            return i;\n</code></pre> <p>Pascal</p> <pre><code>    for i := min(a, b) downto 1 do\n        if (a mod i = 0) and (b mod i = 0) then exit(i);\n</code></pre> <p>M\u1eb7c d\u00f9 ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u1ee7 nhanh \u0111\u1ec3 \u0111\u00e1p \u1ee9ng ph\u1ea7n l\u1edbn c\u00e1c tr\u01b0\u1eddng h\u1ee3p, song ta v\u1eabn c\u00f2n m\u1ed9t c\u00e1ch nhanh h\u01a1n n\u1eefa, \u0111\u00f3 ch\u00ednh l\u00e0 thu\u1eadt to\u00e1n Euclid. Thu\u1eadt to\u00e1n  Euclid s\u1ebd l\u1eb7p \u0111i l\u1eb7p l\u1ea1i vi\u1ec7c x\u1eed l\u00fd hai s\u1ed1 cho \u0111\u1ebfn khi m\u00e0 ph\u1ea7n d\u01b0 c\u1ee7a ch\u00fang b\u1eb1ng 0. V\u00ed d\u1ee5, gi\u1ea3 s\u1eed ch\u00fang ta mu\u1ed1n t\u00ecm \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a hai s\u1ed1 2336 v\u00e0 1314. \u0110\u1ea7u ti\u00ean, ta s\u1ebd ph\u00e2n t\u00edch s\u1ed1 l\u1edbn h\u01a1n l\u00e0 2336 th\u00e0nh b\u1ed9i c\u1ee7a 1314 c\u1ed9ng th\u00eam cho ph\u1ea7n d\u01b0.</p> <pre><code>    2336 = 1314 x 1 + 1022\n</code></pre> <p>Ta s\u1ebd th\u1ef1c hi\u1ec7n t\u01b0\u01a1ng t\u1ef1 v\u1edbi 1314 v\u00e0 1022.</p> <pre><code>    1314 = 1022 x 1 + 292\n</code></pre> <p>Ta ti\u1ebfp t\u1ee5c qu\u00e1 tr\u00ecnh cho \u0111\u1ebfn khi ph\u1ea7n d\u01b0 b\u1eb1ng 0.</p> <pre><code>    1022 = 292 x 3 + 146\n    292 = 146 x 2 + 0\n</code></pre> <p>V\u00e0 ph\u1ea7n d\u01b0 cu\u1ed1i c\u00f9ng m\u00e0 kh\u00e1c 0 ch\u00ednh l\u00e0 \u01b0\u1edbc chung l\u1edbn nh\u1ea5t m\u00e0 ta c\u1ea7n t\u00ecm. V\u1eady \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a 1314 v\u00e0 2336 ch\u00ednh l\u00e0 146. Thu\u1eadt to\u00e1n tr\u00ean s\u1ebd \u0111\u01b0\u1ee3c m\u00f4 ph\u1ecfng l\u1ea1i b\u1eb1ng m\u1ed9t \u0111o\u1ea1n m\u00e3 \u0111\u1ec7 quy \u0111\u01a1n gi\u1ea3n:</p> <p>Java</p> <pre><code>    // gi\u1ea3 \u0111\u1ecbnh r\u1eb1ng a v\u00e0 b \u0111\u1ec1u kh\u00e1c 0\n    public int GCD(int a, int b)\n    {\n        if (b == 0) return a;\n        return GCD(b, a % b);\n    }\n</code></pre> <p>Pascal</p> <pre><code>    // gi\u1ea3 \u0111\u1ecbnh a v\u00e0 b \u0111\u1ec1u kh\u00e1c 0\n    function GCD(a, b : Integer): Integer;\n    begin\n        if (b = 0) then exit(a)\n        else exit(GCD(b, a mod b));\n    end;\n</code></pre> <p>\u0110\u1eb7c bi\u1ec7t, thu\u1eadt to\u00e1n Euclid c\u00f2n \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong vi\u1ec7c t\u00ecm b\u1ed9i chung nh\u1ecf nh\u1ea5t (LCM) c\u1ee7a hai s\u1ed1 t\u1ef1 nhi\u00ean. V\u00ed d\u1ee5, b\u1ed9i chung nh\u1ecf nh\u1ea5t c\u1ee7a 6 v\u00e0 9 l\u00e0 18 v\u00ec 18 l\u00e0 s\u1ed1 nh\u1ecf nh\u1ea5t m\u00e0 chia h\u1ebft cho c\u1ea3 a l\u1eabn b. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 \u0111o\u1ea1n m\u00e3 cho vi\u1ec7c t\u00ecm b\u1ed9i chung nh\u1ecf nh\u1ea5t:</p> <p>Java</p> <pre><code>    public int LCM(int a, int b)\n    {\n        return b * a / GCD(a, b);\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function LCM(a, b : Integer): Integer;\n    begin\n        exit(a * b / GCD(a, b));\n    end;\n</code></pre> <p>M\u1ed9t ch\u00fa \u00fd cu\u1ed1i c\u00f9ng \u0111\u00f3 l\u00e0 vi\u1ec7c thu\u1eadt to\u00e1n Euclid c\u00f2n c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 gi\u1ea3i ph\u01b0\u01a1ng tr\u00ecnh t\u00ecm nghi\u1ec7m nguy\u00ean Diophantine. \u0110\u00f3 l\u00e0 nh\u1eefng ph\u01b0\u01a1ng tr\u00ecnh c\u00f3 h\u1ec7 s\u1ed1 v\u00e0 \u1ea9n s\u1ed1 nguy\u00ean \\((a, b, c, x, y \\in N)\\) v\u00e0 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n nh\u01b0 sau:</p> <pre><code>    ax + by = c\n</code></pre> <p>Xem th\u00eam: Thu\u1eadt to\u00e1n Euclid m\u1edf r\u1ed9ng</p>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#hinh-hoc","title":"H\u00ecnh h\u1ecdc","text":"<p>\u0110\u00f4i khi, b\u00e0i to\u00e1n y\u00eau c\u1ea7u ta t\u00ecm ph\u1ea7n giao c\u1ee7a c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt v\u1edbi c\u00e1c c\u1ea1nh song song tr\u1ee5c t\u1ecda \u0111\u1ed9. C\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch \u0111\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt. \u0110\u1ed1i v\u1edbi h\u1ec7 tr\u1ee5c t\u1ecda \u0111\u1ed9 Cartesian, th\u00ec c\u00e1ch bi\u1ec3u di\u1ec5n ph\u1ed5 bi\u1ebfn nh\u1ea5t ch\u00ednh l\u00e0 l\u01b0u gi\u1eef gi\u00e1 tr\u1ecb t\u1ecda \u0111\u1ed9 c\u1ee7a g\u00f3c tr\u00e1i - d\u01b0\u1edbi v\u00e0 g\u00f3c ph\u1ea3i - tr\u00ean c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt.</p> <p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 hai h\u00ecnh ch\u1eef nh\u1eadt \\(R1\\) v\u00e0 \\(R2\\). \u0110\u1eb7t \\((x1, y1)\\) l\u00e0 t\u1ecda \u0111\u1ed9 g\u00f3c tr\u00e1i - d\u01b0\u1edbi, \\((x2, y2)\\) l\u00e0 t\u1ecda \u0111\u1ed9 g\u00f3c ph\u1ea3i - tr\u00ean c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt \\(R1\\). T\u01b0\u01a1ng t\u1ef1 v\u1edbi \\(R2\\), ta \u0111\u1eb7t \\((x3, y3)\\), \\((x4, y4)\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 t\u1ecda \u0111\u1ed9 g\u00f3c tr\u00e1i - d\u01b0\u1edbi v\u00e0 g\u00f3c ph\u1ea3i - tr\u00ean c\u1ee7a \\(R2\\). Ph\u1ea7n giao c\u1ee7a \\(R1\\) v\u00e0 \\(R2\\) s\u1ebd l\u00e0 h\u00ecnh ch\u1eef nh\u1eadt \\(R3\\) c\u00f3 t\u1ecda \u0111\u1ed9 tr\u00e1i - d\u01b0\u1edbi l\u00e0 \\((max(x1, x3), max(y1, y3))\\) v\u00e0 t\u1ecda \u0111\u1ed9 g\u00f3c ph\u1ea3i - tr\u00ean l\u00e0 \\((min(x2, x4), min(y2, y4))\\). N\u1ebfu  \\(max(x1, x3) &gt; min(x2, x4)\\) ho\u1eb7c \\(max(y1, y3) &gt; min(y2, y4)\\) th\u00ec s\u1ebd kh\u00f4ng t\u1ed3n t\u1ea1i h\u00ecnh ch\u1eef nh\u1eadt \\(R3\\), hay n\u00f3i c\u00e1c kh\u00e1c l\u00e0 \\(R1\\) v\u00e0 \\(R2\\) kh\u00f4ng giao nhau. C\u00f4ng th\u1ee9c n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c m\u1edf r\u1ed9ng ra h\u01a1n kh\u00f4ng gian 2 chi\u1ec1u gi\u1ed1ng nh\u01b0 l\u00e0 trong b\u00e0i CuboidJoin (SRM 191, Div 2 Hard). </p> <p>Th\u01b0\u1eddng th\u00ec, khi l\u00e0m b\u00e0i ch\u00fang ta s\u1ebd ph\u1ea3i \u0111\u1ed1i m\u1eb7t v\u1edbi nh\u1eefng \u0111a gi\u00e1c m\u00e0 \u0111\u1ec9nh c\u1ee7a n\u00f3 l\u00e0 s\u1ed1 nguy\u00ean. Nh\u1eefng \u0111a gi\u00e1c \u0111\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0110a gi\u00e1c l\u01b0\u1edbi (lattice polygon). Trong ph\u1ea7n h\u01b0\u1edbng d\u1eabn c\u01a1 b\u1ea3n v\u1ec1 kh\u00e1i ni\u1ec7m h\u00ecnh h\u1ecdc (Geometry Concepts), lbackstrom \u0111\u00e3 tr\u00ecnh b\u00e0y m\u1ed9t c\u00e1ch ng\u1eafn g\u1ecdn c\u00e1ch t\u00ednh di\u1ec7n t\u00edch th\u00f4ng qua c\u00e1c c\u1ea1nh c\u1ee7a \u0111a gi\u00e1c. B\u00e2y gi\u1edd, gi\u1ea3 s\u1eed ta kh\u00f4ng bi\u1ebft \u0111\u01b0\u1ee3c ch\u00ednh x\u00e1c v\u1ecb tr\u00ed c\u00e1c c\u1ea1nh m\u00e0 thay v\u00e0o \u0111\u00f3 ta c\u00f3 \u0111\u01b0\u1ee3c c\u00e1c gi\u00e1 tr\u1ecb sau:</p> <pre><code>    B = s\u1ed1 l\u01b0\u1ee3ng \u0111i\u1ec3m n\u1eb1m \u1edf tr\u00ean c\u1ea1nh \u0111a gi\u00e1c (Boundary)\n    I = s\u1ed1 l\u01b0\u1ee3ng \u0111i\u1ec3m n\u1eb1m trong \u0111a gi\u00e1c (Inside)\n</code></pre> <p>Th\u1eadt vi di\u1ec7u, th\u00f4ng qua hai gi\u00e1 tr\u1ecb tr\u00ean ta c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c di\u1ec7n t\u00edch \u0111a gi\u00e1c b\u1eb1ng c\u00f4ng th\u1ee9c sau:</p> <pre><code>    Di\u1ec7n t\u00edch = B/2 + I - 1\n</code></pre> <p>C\u00f4ng th\u1ee9c tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ecbnh l\u00fd Pick \u0111\u01b0\u1ee3c ch\u1ee9ng minh b\u1edfi Georg Alexander Pick (1859 \u2013 1943). \u0110\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c r\u1eb1ng \u0111\u1ecbnh l\u00fd Pick c\u00f3 t\u00ednh ch\u1ea5t bao qu\u00e1t cho to\u00e0n b\u1ed9 m\u1ecdi \u0111a gi\u00e1c l\u01b0\u1edbi, ta ch\u1ee9ng minh theo 4 b\u01b0\u1edbc:</p> <ul> <li>B\u01b0\u1edbc 1: ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd Pick \u0111\u00fang v\u1edbi m\u1ecdi h\u00ecnh ch\u1eef nh\u1eadt l\u01b0\u1edbi, c\u00f3 c\u1ea1nh song song v\u1edbi tr\u1ee5c t\u1ecda \u0111\u1ed9.</li> <li>B\u01b0\u1edbc 2: ch\u1ee9ng minh \u0111\u01b0\u1ee3c \u0111\u1ecbnh l\u00fd Pick v\u1eabn \u0111\u00fang v\u1edbi m\u1ecdi tam gi\u00e1c vu\u00f4ng c\u00f3 hai c\u1ea1nh song song v\u1edbi tr\u1ee5c t\u1ecda \u0111\u00f4 (b\u1edfi ch\u00fang l\u00e0 ph\u00e2n n\u1eeda di\u1ec7n t\u00edch m\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt l\u01b0\u1edbi c\u00f3 t\u1ecda \u0111\u1ed9 m\u1ed9t \u0111\u1ec9nh l\u00e0 g\u00f3c vu\u00f4ng c\u1ee7a tam gi\u00e1c v\u00e0 c\u00f3 c\u1ea1nh l\u00e0 c\u00e1c c\u1ea1nh g\u00f3c vu\u00f4ng c\u1ee7a tam gi\u00e1c).</li> <li>B\u01b0\u1edbc 3: ch\u1ee9ng minh \u0111\u1ecbnh l\u00fd Pick \u0111\u00fang v\u1edbi m\u1ecdi tam gi\u00e1c, b\u1edfi m\u1ed9t tam gi\u00e1c b\u1ea5t k\u1ef3 \u0111\u1ec1u c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n th\u00e0nh m\u1ed9t h\u00ecnh ch\u1eef nh\u1eadt b\u1eb1ng c\u00e1ch gh\u00e9p c\u1eb7p v\u1edbi m\u1ed9t v\u00e0i tam gi\u00e1c vu\u00f4ng kh\u00e1c.</li> <li>B\u01b0\u1edbc 4: ta th\u1ea5y r\u1eb1ng m\u1ecdi c\u1eb7p 2 \u0111a gi\u00e1c l\u01b0\u1edbi c\u00f3 chung c\u1ea1nh s\u1ebd t\u1ea1o th\u00e0nh m\u1ed9t \u0111a gi\u00e1c l\u01b0\u1edbi kh\u00e1c b\u1eb1ng c\u00e1ch x\u00f3a \u0111i c\u1ea1nh chung, v\u00e0 m\u1ecdi \u0111a gi\u00e1c l\u01b0\u1edbi \u0111\u1ec1u c\u00f3 th\u1ec3 t\u1ea1o ra b\u1eb1ng c\u00e1ch gh\u00e9p c\u00e1c h\u00ecnh tam gi\u00e1c.</li> </ul> <p>T\u1ed5ng h\u1ee3p l\u1ea1i 4 b\u01b0\u1edbc tr\u00ean v\u00e0 ta s\u1ebd thu \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 r\u1eb1ng \u0111\u1ecbnh l\u00fd Pick \u0111\u00fang v\u1edbi m\u1ecdi \u0111a gi\u00e1c l\u01b0\u1edbi. \u0110\u1ecbnh l\u00fd Pick kh\u00e1 h\u1eefu \u00edch khi ta c\u1ea7n t\u00ecm s\u1ed1 \u0111i\u1ec3m c\u00f3 t\u1ecda \u0111\u1ed9 nguy\u00ean b\u00ean trong m\u1ed9t \u0111a gi\u00e1c l\u1edbn.</p> <p>M\u1ed9t c\u00f4ng th\u1ee9c \u0111\u00e1ng nh\u1edb kh\u00e1c \u0111\u00f3 ch\u00ednh l\u00e0 c\u00f4ng th\u1ee9c Euler d\u00e0nh cho c\u00e1c kh\u1ed1i \u0111a di\u1ec7n. Kh\u1ed1i \u0111a di\u1ec7n \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\u00e0 m\u1ed9t kh\u1ed1i (m\u1ed9t \u0111a gi\u00e1c) m\u00e0 ta c\u00f3 th\u1ec3 chia th\u00e0nh nhi\u1ec1u \u0111a gi\u00e1c nh\u1ecf h\u01a1n. C\u00e1c \u0111a gi\u00e1c nh\u1ecf h\u01a1n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1eb7t, c\u00e1ch \u0111\u1ec9nh c\u1ee7a m\u1eb7t c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ec9nh c\u1ee7a kh\u1ed1i \u0111a di\u1ec7n v\u00e0 t\u01b0\u01a1ng t\u1ef1, c\u00e1c c\u1ea1nh c\u1ee7a m\u1eb7t c\u0169ng g\u1ecdi l\u00e0 c\u1ea1nh. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00f4ng th\u1ee9c Euler.</p> <pre><code>    V - E + F = 2, v\u1edbi:\n        V = s\u1ed1 \u0111\u1ec9nh c\u1ee7a kh\u1ed1i\n        E = s\u1ed1 c\u1ea1nh c\u1ee7a kh\u1ed1i\n        F = s\u1ed1 m\u1eb7t c\u1ee7a kh\u1ed1i\n</code></pre> <p>V\u00ed d\u1ee5, x\u00e9t m\u1ed9t h\u00ecnh vu\u00f4ng m\u00e0 c\u1ea3 hai \u0111\u01b0\u1eddng ch\u00e9o \u0111\u1ec1u \u0111\u01b0\u1ee3c v\u1ebd. Ta s\u1ebd c\u00f3 \\(V = 5\\), \\(E = 8\\) v\u00e0 \\(F = 5\\) (ph\u1ea7n n\u1eb1m ngo\u00e0i h\u00ecnh vu\u00f4ng c\u0169ng \u0111\u01b0\u1ee3c coi nh\u01b0 l\u00e0 m\u1ed9t m\u1eb7t), ta s\u1ebd c\u00f3 \\(V - E + F = 2\\).</p> <p>Ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng quy n\u1ea1p \u0111\u1ec3 ch\u1ee9ng minh n\u00f3 nh\u01b0 sau: Ta s\u1ebd b\u1eaft \u0111\u1ea7u v\u1edbi \\(V = 2\\), v\u00ec m\u1ed7i \u0111\u1ec9nh \u0111\u1ec1u c\u1ea7n ph\u1ea3i c\u00f3 \u00edt nh\u1ea5t m\u1ed9t c\u1ea1nh. V\u00e0 n\u1ebfu \\(V = 2\\) th\u00ec ch\u1ec9 c\u00f3 x\u1ea3y ra duy nh\u1ea5t m\u1ed9t d\u1ea1ng kh\u1ed1i \u0111a di\u1ec7n m\u00e0 th\u00f4i. \u0110\u00f3 l\u00e0 d\u1ea1ng kh\u1ed1i \u0111a di\u1ec7n m\u00e0 hai c\u1ea1nh s\u1ebd n\u1ed1i v\u1edbi \\(E\\) \u0111\u1ec9nh. Kh\u1ed1i \u0111a di\u1ec7n n\u00e3y c\u0169ng s\u1ebd c\u00f3 \\(E\\) m\u1eb7t, (\\(E-1\\) m\u1eb7t b\u00ean trong h\u00ecnh v\u00e0 1 m\u1eb7t ngo\u00e0i h\u00ecnh). Th\u1ebf n\u00ean \\(V - E + F = 2 - E + E = 2\\) (\u0111i\u1ec1u ph\u1ea3i ch\u1ee9ng minh). Gi\u1edd ta gi\u1ea3 s\u1eed \u0111\u1ecbnh l\u00fd Euler \u0111\u00fang v\u1edbi \\(V\\) t\u1eeb \\([2, n]\\), x\u00e9t \\(V = n+1\\). Ch\u1ecdn m\u1ed9t c\u1ea1nh \\(w\\) b\u1ea5t k\u1ef3. Gi\u1edd gi\u1ea3 \u0111\u1ecbnh \\(w\\) n\u1ed1i v\u1edbi t\u1ea5t c\u1ea3 nh\u1eefng l\u01b0\u1edbi c\u00f2n l\u1ea1i c\u00f3 \\(G\\) \u0111\u1ec9nh. N\u1ebfu b\u1ecf \u0111i c\u1ea1nh \\(w\\) n\u00e0y v\u00e0 nh\u1eefng \u0111\u1ec9nh m\u00e0 n\u00f3 n\u1ed1i, ta s\u1ebd c\u00f3 m\u1ed9t l\u01b0\u1edbi v\u1edbi \\(n\\) c\u1ea1nh, \\(E - G\\) \u0111\u1ec9nh v\u00e0 \\(F-G+1\\) m\u1eb7t. T\u1eeb gi\u1ea3 \u0111\u1ecbnh tr\u00ean ta c\u00f3:</p> <pre><code>    (n) - (E - G) + (F - G + 1) = 2\n     (n+1) - E + F = 2\n</code></pre> <p>V\u1eady v\u1edbi \\(V = n+1\\), ta c\u0169ng v\u1eabn thu \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 l\u00e0 \\(V - E + F = 2\\). V\u1eady l\u00e0 v\u1edbi ph\u01b0\u01a1ng ph\u00e1p quy n\u1ea1p to\u00e1n h\u1ecdc, ta \u0111\u00e3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c \u0111\u1ecbnh l\u00fd Euler.</p>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#he-co-so","title":"H\u1ec7 c\u01a1 s\u1ed1:","text":"<p>M\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n m\u00e0 ng\u01b0\u1eddi thi Topcoder \u0111\u1ed1i m\u1eb7t nhi\u1ec1u nh\u1ea5t \u0111\u00f3 ch\u00ednh l\u00e0 vi\u1ec7c chuy\u1ec3n \u0111\u1ed5i s\u1ed1 t\u1eeb h\u1ec7 c\u01a1 s\u1ed1 nh\u1ecb ph\u00e2n sang h\u1ec7 c\u01a1 s\u1ed1 th\u1eadp ph\u00e2n v\u00e0 ng\u01b0\u1ee3c l\u1ea1i (c\u00f9ng v\u1edbi nhi\u1ec1u h\u1ec7 c\u01a1 s\u1ed1 kh\u00e1c).</p> <p>V\u1eady h\u1ec7 c\u01a1 s\u1ed1 ngh\u0129a l\u00e0 g\u00ec? Ta s\u1ebd b\u1eaft \u0111\u1ea7u v\u1edbi h\u1ec7 c\u01a1 s\u1ed1 ti\u00eau chu\u1ea9n (h\u1ec7 th\u1eadp ph\u00e2n). X\u00e9t s\u1ed1 4325 \u1edf h\u1ec7 c\u01a1 s\u1ed1 10. Ta th\u1ea5y 4325 c\u00f3 th\u1ec3 ph\u00e2n t\u00edch th\u00e0nh \\(5 + 2\\*10 + 3\\*10\\*10 + 4\\*10\\*10\\*10\\). Ch\u00fa \u00fd r\u1eb1ng m\u1ed7i \"gi\u00e1 tr\u1ecb\" c\u1ee7a ch\u1eef s\u1ed1 ti\u1ebfp theo sau c\u1ee7a s\u1ed1 \u0111\u01b0\u1ee3c nh\u00e2n th\u00eam t\u00edch s\u1ed1 10 khi ta x\u00e9t t\u1eeb ph\u1ea3i qua tr\u00e1i. H\u1ec7 nh\u1ecb ph\u00e2n c\u0169ng ho\u1ea1t \u0111\u1ed9ng theo c\u00e1ch t\u01b0\u01a1ng t\u1ef1 nh\u01b0 th\u1ebf. N\u00f3 s\u1eed d\u1ee5ng hai ch\u1eef s\u1ed1 0 v\u00e0 1 v\u00e0 \"gi\u00e1 tr\u1ecb\" c\u1ee7a t\u1eebng ch\u1eef s\u1ed1 s\u1ebd \u0111\u01b0\u1ee3c nh\u00e2n th\u00eam 2 khi ta x\u00e9t t\u1eeb ph\u1ea3i qua tr\u00e1i. V\u00ed d\u1ee5, s\u1ed1 1011 \u1edf d\u1ea1ng nh\u1ecb ph\u00e2n c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n th\u00e0nh \\(1 + 1\\*2 + 0\\*2\\*2 + 1\\*2\\*2\\*2 = 1 + 2 + 8 = 11\\) v\u00e0 tr\u1edf l\u1ea1i th\u00e0nh s\u1ed1 \u1edf h\u1ec7 th\u1eadp ph\u00e2n l\u00e0 11. V\u00e0 \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1ch \u0111\u1ec3 ta chuy\u1ec3n t\u1eeb s\u1ed1 \u1edf h\u1ec7 nh\u1ecb ph\u00e2n (ho\u1eb7c b\u1ea5t k\u1ef3 h\u1ec7 s\u1ed1 n\u00e0o) v\u1ec1 h\u1ec7 c\u01a1 s\u1ed1 th\u1eadp ph\u00e2n. Sau \u0111\u00e2y l\u00e0 \u0111o\u1ea1n m\u00e3 \u0111\u1ec3 chuy\u1ec3n s\u1ed1 \\(n\\) t\u1eeb m\u1ed9t h\u1ec7 c\u01a1 s\u1ed1 \\(b\\) \\((2 \\le b \\le n)\\) th\u00e0nh h\u1ec7 c\u01a1 s\u1ed1 th\u1eadp ph\u00e2n.</p> <p>Java</p> <pre><code>    public int toDecimal(int n, int b)\n    {\n        int result = 0;\n        int multiplier = 1;\n\n        while(n &gt; 0)\n        {\n            result += n % 10 * multiplier;\n            multiplier *= b;\n            n /= 10;\n        }\n\n        return result;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function ToDectimal(n, b : Integer): Integer;\n    var\n        mul : Integer = 1;\n\n    begin\n        result := 0;\n\n        while (n &gt; 0) do\n            begin\n                result := result + (n mod 10) * mul;\n                mul := mul * b;\n                n := n div 10;\n            end;\n    end;\n</code></pre> <p>Ng\u01b0\u1eddi d\u00f9ng Java h\u1eb3n s\u1ebd r\u1ea5t vui khi bi\u1ebft r\u1eb1ng v\u1eabn c\u00f3 c\u00e1ch kh\u00e1c \u0111\u01a1n gi\u1ea3n h\u01a1n \u0111\u1ec3 th\u1ef1c hi\u1ec7n vi\u1ec7c n\u00e0y.</p> <pre><code>    return Integer.parseInt(\"\" + n, b);\n</code></pre> <p>\u0110\u1ec3 chuy\u1ec3n m\u1ed9t s\u1ed1 t\u1eeb h\u1ec7 th\u1eadp ph\u1ea7n v\u1ec1 h\u1ec7 nh\u1ecb ph\u00e2n c\u0169ng kh\u00e1 \u0111\u01a1n gi\u1ea3n. Gi\u1ea3 s\u1eed ta mu\u1ed1n chuy\u1ec3n s\u1ed1 43 t\u1eeb h\u1ec7 th\u1eadp ph\u00e2n v\u1ec1 h\u1ec7 nh\u1ecb ph\u00e2n. T\u1ea1i b\u01b0\u1edbc \u0111\u1ea7u c\u1ee7a c\u00f4ng th\u1ee9c ta s\u1ebd chia \u0111\u00f4i 43 v\u00e0 l\u01b0u l\u1ea1i gi\u00e1 tr\u1ecb ph\u1ea7n d\u01b0, ti\u1ebfp t\u1ee5c x\u1eed l\u00fd v\u1edbi s\u1ed1 \u0111\u01b0\u1ee3c chia \u0111\u00f4i \u0111\u00f3 cho \u0111\u1ebfn khi n\u00f3 b\u1eb1ng 0. V\u00e0 danh s\u00e1ch s\u1ed1 d\u01b0 sau cu\u1ed1i c\u00f9ng c\u0169ng ch\u00ednh l\u00e0 c\u00e1ch bi\u1ec3u di\u1ec5n s\u1ed1 nh\u1ecb ph\u00e2n c\u1ea7n t\u00ecm.</p> <pre><code>    43/2 = 21 + d\u01b0 1\n    21/2 = 10 + d\u01b0 1\n    10/2 = 5  + d\u01b0 0\n    5/2  = 2  + d\u01b0 1\n    2/2  = 1  + d\u01b0 0\n    1/2  = 0  + d\u01b0 1\n</code></pre> <p>V\u1eady 43 s\u1ebd \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n th\u00e0nh 101011 \u1edf d\u1ea1ng nh\u1ecb ph\u00e2n. B\u1eb1ng vi\u1ec7c thay s\u1ed1 2 th\u00e0nh s\u1ed1 b, ta c\u00f3 th\u1ec3 chuy\u1ec3n t\u1eeb h\u1ec7 th\u1eadp ph\u00e2n v\u1ec1 b\u1ea5t k\u1ef3 h\u1ec7 c\u01a1 s\u1ed1 b n\u00e0o (2):</p> <p>Java</p> <pre><code>    public int fromDecimal(int n, int b)\n    {\n        int result = 0;\n        int multiplier = 1;\n\n        while(n &gt; 0)\n        {\n            result += n % b * multiplier;\n            multiplier *= 10;\n            n /= b;\n        }\n\n        return result;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function FromDecimal(n, b : Integer): Integer;\n    var\n        mul : Integer = 1;\n    begin\n        result := 0;\n\n        while (n &gt; 0) do\n            begin\n                result := result + (n mod b) * mul;\n                mul := mul * 10;\n                n := n div b;\n            end;\n    end;\n</code></pre> <p>\u0110\u1ed1i v\u1edbi tr\u01b0\u1eddng h\u1ee3p \\(b\\) l\u1edbn h\u01a1n 10, ta s\u1ebd x\u1eed d\u1ee5ng c\u00e1c k\u00fd t\u1ef1 kh\u00f4ng ph\u1ea3i ch\u1eef s\u1ed1 \u0111\u1ec3 \u0111\u1ea1i di\u1ec7n cho c\u00e1c s\u1ed1 t\u1eeb 10 tr\u1edf l\u00ean. V\u00ed d\u1ee5, ta s\u1ebd \u0111\u1ec3 'A' \u0111\u1ea1i di\u1ec7n cho 10, 'B' cho 11, ... \u0110o\u1ea1n m\u00e3 sau \u0111\u00e2y s\u1ebd cho ph\u00e9p ta chuy\u1ec3n t\u1eeb s\u1ed1 th\u1eadp ph\u00e2n sang b\u1ea5t k\u1ef3 h\u1ec7 c\u01a1 s\u1ed1 n\u00e0o (l\u00ean \u0111\u1ebfn 20).</p> <p>Java</p> <pre><code>    public String fromDecimal2(int n, int b)\n    {\n        String chars = \"0123456789ABCDEFGHIJ\";\n        String result = \"\";\n\n        while(n &gt; 0)\n        {\n            result = chars.charAt(n%b) + result;\n            n /= b;\n        }\n\n        return result;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function FromDecimal2(n, b : Integer): String;\n    var\n        chars : string = '0123456789ABCDEFGHIJ';\n    begin\n        result := '';\n\n        while (n &gt; 0) do\n            begin\n                result := chars[n mod b + 1] + result;\n                n := n div b;\n            end;\n    end;\n</code></pre> <p>Trong Java, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng nh\u1eefng c\u00e1ch t\u1eaft sau \u0111\u1ec3 chu\u1ea9n t\u1eeb h\u1ec7 th\u1eadp ph\u00e2n sang nh\u01b0 h\u1ec7 s\u1ed1 th\u00f4ng d\u1ee5ng kh\u00e1c, nh\u01b0 l\u00e0 h\u1ec7 nh\u1ecb ph\u00e2n, h\u1ec7 b\u00e1t ph\u00e2n, h\u1ec7 th\u1eadp l\u1ee5c ph\u00e2n.</p> <pre><code>    Integer.toBinaryString(n);\n    Integer.toOctalString(n);\n    Integer.toHexString(n);\n</code></pre>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#phan-so-va-so-phuc","title":"Ph\u00e2n s\u1ed1 v\u00e0 s\u1ed1 ph\u1ee9c","text":"<p>Ph\u00e2n s\u1ed1 th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1eb7p r\u1ea5t nhi\u1ec1u trong c\u00e1c b\u00e0i t\u1eadp. Th\u01b0\u1eddng th\u00ec v\u1ea5n \u0111\u1ec1 kh\u00f3 kh\u0103n nh\u1ea5t m\u00e0 ta c\u1ea7n ph\u1ea3i \u0111\u1ed1i m\u1eb7t \u0111\u00f3 ch\u00ednh l\u00e0 vi\u1ec7c bi\u1ec3u di\u1ec5n c\u00e1c ph\u00e2n s\u1ed1 \u0111\u00f3. M\u1eb7c d\u00f9 n\u00f3 ho\u00e0n to\u00e0n kh\u1ea3 thi trong vi\u1ec7c t\u1ea1o ra m\u1ed9t l\u1edbp (class) kh\u00e1c \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t c\u00e1ch \u0111\u1ea7y \u0111\u1ee7 c\u00e1c th\u00f4ng tin v\u1ec1 ph\u1ea7n s\u1ed1, nh\u01b0ng trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p th\u00ec c\u00e1ch th\u01b0\u1eddng d\u00f9ng nh\u1ea5t l\u00e0 s\u1eed d\u1ee5ng m\u1ea3ng l\u01b0u 2 gi\u00e1 tr\u1ecb b\u1eb1ng c\u00e1ch gh\u00e9p c\u1eb7p (pair). \u00dd t\u01b0\u1edfng l\u00e0 ta s\u1ebd l\u01b0u s\u1ed1 \u0111\u1ea7u ti\u00ean l\u00e0 t\u1eed s\u1ed1, s\u1ed1 th\u1ee9 hai l\u00e0 m\u1eabu s\u1ed1. Ta s\u1ebd b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c nh\u00e2n hai ph\u00e2n s\u1ed1 a v\u00e0 b:</p> <p>Java</p> <pre><code>    public int[] multiplyFractions(int[] a, int[] b)\n    {\n        int[] c = {a[0] * b[0], a[1] * b[1]};\n        return c;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    type\n        ps = record\n        x, y : Integer;\n        end;\n\n    function multiplyFractions(a, b : ps): ps;\n    var\n        c : ps;\n    begin\n        c.x := a.x * b.x;\n        c.y := a.y * b.y;\n        exit(c);\n    end;\n</code></pre> <p>C\u1ed9ng ph\u00e2n s\u1ed1 th\u00ec c\u00f3 m\u1ed9t ch\u00fat ph\u1ee9c t\u1ea1p h\u01a1n, b\u1edfi ch\u1ec9 c\u00f3 nh\u01b0ng ph\u00e2n s\u1ed1 c\u00f3 c\u00f9ng m\u1eabu s\u1ed1 m\u1edbi c\u00f3 th\u1ec3 c\u1ed9ng tr\u1ef1c ti\u1ebfp. Tr\u01b0\u1edbc h\u1ebft ta s\u1ebd t\u00ecm m\u1eabu s\u1ed1 chung c\u1ee7a hai ph\u00e2n s\u1ed1 v\u00e0 nh\u00e2n t\u1eed s\u1ed1 hai ph\u00e2n s\u1ed1 theo t\u1ec9 s\u1ed1 gi\u1eefa m\u1eabu s\u1ed1 c\u0169 v\u1edbi m\u1eabu s\u1ed1 chung. M\u1eabu s\u1ed1 chung l\u00e0 s\u1ed1 c\u00f3 th\u1ec3 chia h\u1ebft cho c\u1ea3 m\u1eabu c\u1ee7a hai ph\u00e2n s\u1ed1, hay \u0111\u01a1n gi\u1ea3n h\u01a1n \u0111\u00f3 ch\u00ednh l\u00e0 b\u1ed9i chung nh\u1ecf nh\u1ea5t c\u1ee7a hai m\u1eabu s\u1ed1. V\u00ed d\u1ee5 \u0111\u1ec3 c\u1ed9ng hai ph\u00e2n s\u1ed1 4/9 v\u00e0 1/6. B\u1ed9i chung nh\u1ecf nh\u1ea5t c\u1ee7a 9 v\u00e0 6 l\u00e0 18. \u0110\u1ec3 chuy\u1ec3n \u0111\u1ed5i hai ph\u00e2n s\u1ed1 ta s\u1ebd l\u1ea5y ph\u00e2n s\u1ed1 th\u1ee9 nh\u1ea5t nh\u00e2n cho 2/2 v\u00e0 s\u1ed1 th\u1ee9 hai cho 3/3.</p> <pre><code>    4/9 + 1/6 = (4*2)/(9 * 2) + (1 * 3)/(6 * 3) =  8/18 +  3/18\n</code></pre> <p>M\u1ed9t khi hai ph\u00e2n s\u1ed1 \u0111\u00e3 c\u00f3 m\u1eabu s\u1ed1 b\u1eb1ng nhau, th\u00ec ta ch\u1ec9 c\u1ea7n \u0111\u01a1n gi\u1ea3n c\u1ed9ng hai ph\u00e2n s\u1ed1 \u0111\u00f3 l\u1ea1i v\u00e0 nh\u1eadn k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng l\u00e0 ph\u00e2n s\u1ed1 11/18. Tr\u1eeb c\u0169ng r\u1ea5t \u0111\u01a1n gi\u1ea3n, ch\u1ec9 kh\u00e1c nhau \u1edf b\u01b0\u1edbc cu\u1ed1i c\u00f9ng.</p> <pre><code>    4/9 - 1/6 =  8/18 - 3/18 =  5/18\n</code></pre> <p>\u0110\u00e2y l\u00e0 \u0111o\u1ea1n m\u00e3 cho ch\u01b0\u01a1ng tr\u00ecnh c\u00f4ng hai ph\u00e2n s\u1ed1: </p> <p>Java</p> <pre><code>    public int[] addFractions(int[] a, int[] b)\n    {\n        int denom = LCM(a[1], b[1]);\n        int[] c= {denom / a[1] * a[0] + denom / b[1] * b[0], denom};\n        return c;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function addFractions(a, b : ps): ps;\n    var\n        denom : Integer;\n    begin\n        denom := LCM(a.y, b.y);\n        result.x := denom div a.y * a.x + denom div b.y * b.x;\n        result.y := denom;\n    end;\n</code></pre> <p>Cu\u1ed1i c\u00f9ng, n\u00f3 r\u1ea5t c\u1ea7n thi\u1ebft \u0111\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c c\u00e1ch t\u1ed1i gi\u1ea3n ph\u00e2n s\u1ed1 th\u00e0nh ph\u00e2n s\u1ed1 t\u1ed1i gi\u1ea3n. V\u00e0 ph\u00e2n s\u1ed1 ch\u1ec9 t\u1ed1i gi\u1ea3n khi v\u00e0 ch\u1ec9 khi \u01b0\u1edbc chung l\u1edbn nh\u1ea5t c\u1ee7a t\u1eed s\u1ed1 v\u00e0 m\u1eabu s\u1ed1 l\u00e0 1. Ch\u00fang ta s\u1ebd l\u00e0m nh\u01b0 sau:</p> <p>Java</p> <pre><code>    public void reduceFraction(int[] a)\n    {\n        int b = GCD(a[0],a[1]);\n        a[0] /= b;\n        a[1] /= b;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    procedure reduceFraction(var a : ps);\n    var\n        b : Integer;    \n    begin\n        b := GCD(a.x, a.y);\n        a.x := a.x div b;\n        a.y := a.y div b;\n    end;\n</code></pre> <p>B\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p t\u01b0\u01a1ng t\u1ef1, ta c\u0169ng c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n \u0111\u01b0\u1ee3c s\u1ed1 ph\u1ee9c. M\u1ed9t c\u00e1ch t\u1ed5ng qu\u00e1t, s\u1ed1 ph\u1ee9c \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng \\(a + ib\\) v\u1edbi \\(a\\), \\(b\\) l\u00e0 s\u1ed1 th\u1ef1c v\u00e0 \\(i\\) l\u00e0 c\u0103n b\u1eadc hai c\u1ee7a -1. V\u00ed d\u1ee5, \u0111\u1ec3 c\u1ed9ng hai s\u1ed1 ph\u1ee9c, ta s\u1ebd c\u1ed9ng \u0111\u01a1n gi\u1ea3n nh\u01b0 sau:</p> <p>\\(m + n\\) \\(= (a + bi) + (c + di)\\) \\(= (a + c) + (b + d)\\)</p> <p>Vi\u1ec7c nh\u00e2n hai s\u1ed1 ph\u1ee9c c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 vi\u1ec7c nh\u00e2n s\u1ed1 th\u1ef1c, tr\u1eeb vi\u1ec7c \\(i*i\\) b\u1eb1ng -1.</p> <pre><code>    m * n\n    = (a + ib) * (c + id)\n    = ac + iad + ibc + (i^2)bd\n    = (ac - bd) + i(ad + bc)\n</code></pre> <p>B\u1eb1ng vi\u1ec7c l\u01b0u tr\u1eef ph\u1ea7n s\u1ed1 th\u1ef1c \u1edf ph\u1ea7n t\u1eed th\u1ee9 nh\u1ea5t v\u00e0 ph\u1ea7n s\u1ed1 ph\u1ee9c \u1edf ph\u1ea7n t\u1eed th\u1ee9 hai trong m\u1ed9t m\u1ea3ng hai gi\u00e1 tr\u1ecb nh\u01b0 \u0111o\u1ea1n m\u00e3 d\u01b0\u1edbi \u0111\u00e2y:</p> <p>Java</p> <pre><code>    public int[] multiplyComplex(int[] m, int[] n)\n    {\n        int[] prod = {m[0]*n[0] - m[1]*n[1], m[0]*n[1] + m[1]*n[0]};\n        return prod;\n    }\n</code></pre> <p>Pascal</p> <pre><code>    function multiplyComplex(m, n : ps): ps;\n    begin\n        result.x := m.x * n.x - m.y * n.y;\n        result.y := m.x * n.y + m.y * n.x;\n    end;\n</code></pre>"},{"location":"translate/topcoder/Mathematics-for-Topcoders/#tong-ket","title":"T\u1ed5ng k\u1ebft:","text":"<p>T\u1ed5ng k\u1ebft l\u1ea1i, t\u00f4i ch\u1ec9 mu\u1ed1n n\u00f3i r\u1eb1ng b\u1ea1n kh\u00f4ng th\u1ec3 \u0111\u1ea1t rating cao \u1edf Topcoder m\u00e0 kh\u00f4ng n\u1eafm r\u00f5 To\u00e1n h\u1ecdc v\u00e0 nh\u1eefng thu\u1eadt to\u00e1n n\u00eau tr\u00ean. Th\u01b0\u1eddng th\u00ec m\u1ed9t trong nh\u1eefng ch\u1ee7 \u0111\u1ec1 To\u00e1n h\u1ecdc th\u01b0\u1eddng g\u1eb7p nh\u1ea5t trong c\u00e1c b\u00e0i t\u1eadp \u0111\u00f3 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1. Ti\u1ebfp \u0111\u00f3 l\u00e0 nh\u1eefng b\u00e0i v\u1ec1 h\u1ec7 c\u01a1 s\u1ed1, m\u00e0 nguy\u00ean nh\u00e2n ch\u1ee7 y\u1ebfu l\u00e0 v\u00ec m\u00e1y t\u00ednh ho\u1ea1t \u0111\u1ed9ng d\u1ef1a tr\u00ean h\u1ec7 nh\u1ecb ph\u00e2n, n\u00ean ta c\u1ea7n ph\u1ea3i bi\u1ebft c\u00e1ch chuy\u1ec3n t\u1eeb h\u1ec7 nh\u1ecb ph\u00e2n v\u1ec1 h\u1ec7 th\u1eadp ph\u00e2n. C\u00f2n c\u00f4ng th\u1ee9c t\u00ednh \u01b0\u1edbc chung l\u1edbn nh\u1ea5t (GCD) v\u00e0 b\u1ed9i chung nh\u1ecf nh\u1ea5t (LCM) th\u00ec \u0111\u01b0\u1ee3c d\u00f9ng nhi\u1ec1u trong c\u1ea3 nh\u1eefng b\u00e0i t\u1eadp \"thu\u1ea7n to\u00e1n\" v\u00e0 c\u1ea3 h\u00ecnh h\u1ecdc. Cu\u1ed1i c\u00f9ng, t\u00f4i vi\u1ebft ch\u1ee7 \u0111\u1ec1 Ph\u00e2n s\u1ed1 v\u00e0 s\u1ed1 ph\u1ee9c l\u00e0 vi\u1ec7c n\u00f3 kh\u00f4ng ch\u1ec9 c\u1ea7n thi\u1ebft cho vi\u1ec7c thi Topcoder, m\u00e0 b\u1edfi n\u00f3 c\u00f2n v\u00f4 c\u00f9ng quan tr\u1ecdng khi l\u00e0m vi\u1ec7c v\u1edbi nh\u1eefng con s\u1ed1.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/","title":"Nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n: Ph\u1ea7n 1","text":"<p>B\u00e0i vi\u1ebft b\u1edfi leadhyena_inran.</p> <p>Ngu\u1ed3n: Topcoder</p> <p>Gi\u1ea3i b\u00e0i l\u00e0 m\u1ed9t ngh\u1ec7 thu\u1eadt, n\u00f3 c\u00f3 th\u1ec3 g\u00e2y kh\u00f3 kh\u0103n cho c\u1ea3 nh\u1eefng coder k\u00ec c\u1ef1u nh\u1ea5t c\u0169ng nh\u01b0 nh\u1eefng ng\u01b0\u1eddi m\u1edbi h\u1ecdc. \u0110\u1ec3 t\u00ecm c\u00e1ch gi\u1ea3i ph\u00f9 h\u1ee3p, ch\u00fang ta ph\u1ea3i bi\u1ebft k\u1ebft h\u1ee3p nhi\u1ec1u ph\u01b0\u01a1ng ph\u00e1p kh\u00e1c nhau nh\u01b0 c\u1ea3m nh\u1eadn b\u1eb1ng tr\u1ef1c gi\u00e1c, s\u00e1ng t\u1ea1o v\u00e0 th\u1eadm ch\u00ed l\u00e0 may m\u1eafn. C\u1ea3m gi\u00e1c b\u1ea5t l\u1ef1c tr\u01b0\u1edbc nh\u1eefng b\u00e0i kh\u00f3 th\u01b0\u1eddng l\u00e0m ch\u00fang ta n\u1ea3n ch\u00ed, v\u00e0 c\u00f3 th\u1ec3 b\u1ecf cu\u1ed9c gi\u1eefa ch\u1eebng. Tuy nhi\u00ean, kh\u00f4ng g\u00ec l\u00e0 kh\u00f4ng th\u1ec3 n\u1ebfu b\u1ea1n c\u00f3 \u0111\u1ee7 quy\u1ebft t\u00e2m c\u0169ng nh\u01b0 k\u0129 n\u0103ng c\u1ea7n thi\u1ebft. B\u1edfi l\u00ed do \u0111\u00f3, b\u00e0i h\u01b0\u1edbng d\u1eabn n\u00e0y s\u1ebd \u0111\u01b0a ra nh\u1eefng k\u0129 n\u0103ng \u0111\u1ec3 gi\u00fap c\u00e1c b\u1ea1n ch\u1ecdn nh\u1eefng h\u01b0\u1edbng ti\u1ebfp c\u1eadn r\u00f5 r\u00e0ng cho nh\u1eefng b\u00e0i to\u00e1n nh\u01b0 v\u1eady.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/#tu-duy-theo-loi-mon-pattern-mining-and-wrong-mindset","title":"T\u01b0 duy theo l\u1ed1i m\u00f2n (Pattern Mining and Wrong Mindset)","text":"<p>Ch\u00fang ta r\u1ea5t d\u1ec5 h\u01b0\u1edbng c\u00e1c suy ngh\u0129 v\u00e0o vi\u1ec7c t\u00ecm gi\u1ea3i thu\u1eadt d\u1ef1a tr\u00ean t\u1eebng d\u1ea1ng c\u1ee7a \u0111\u1ec1 b\u00e0i. V\u1edbi nh\u1eefng ng\u01b0\u1eddi \u0111\u00e3 l\u00e0m kh\u00e1 nhi\u1ec1u b\u00e0i t\u1eadp, h\u1ecd s\u1ebd nh\u1eadn ra \u0111\u01b0\u1ee3c d\u1ea1ng c\u1ee7a nh\u1eefng b\u00e0i to\u00e1n kh\u00e1c nhau, v\u00e0 khi \u0111\u1ecdc th\u1ea5y m\u1ed9t b\u00e0i to\u00e1n n\u00e0o \u0111\u00f3 quen thu\u1ed9c, th\u00ec suy ngh\u0129 hi\u1ec7n ra ngay t\u1ee9c kh\u1eafc trong \u0111\u1ea7u l\u00e0: \u201c\u1ed2, \u0111\u00e2y l\u00e0 d\u1ea1ng b\u00e0i X, n\u00ean s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n n\u00e0y, \u00e1p d\u1ee5ng k\u0129 thu\u1eadt n\u00e0y\u201d. C\u00e1ch n\u00e0y kh\u00e1 h\u1eefu \u00edch \u0111\u1ed1i v\u1edbi nh\u1eefng ng\u01b0\u1eddi m\u1edbi h\u1ecdc: n\u1ebfu ch\u01b0a th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c, th\u00ec h\u1ecd s\u1ebd t\u1eadp trung v\u00e0o luy\u1ec7n t\u1eadp v\u1edbi nh\u1eefng d\u1ea1ng \u0111\u1ec1 b\u00e0i n\u00e0y \u0111\u1ec3 khi\u1ebfn n\u00f3 tr\u1edf th\u00e0nh m\u1ed9t d\u1ea1ng b\u00e0i quen thu\u1ed9c.</p> <p>Tuy nhi\u00ean, c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y c\u0169ng c\u00f3 nh\u01b0\u1ee3c \u0111i\u1ec3m kh\u00e1 l\u1edbn. C\u00f3 nh\u1eefng l\u00fac ta t\u01b0\u1edfng r\u1eb1ng m\u00ecnh \u0111ang code \u0111\u00fang h\u01b0\u1edbng nh\u1edd v\u00e0o l\u1ed1i t\u01b0 duy nh\u01b0 v\u1eady, nh\u01b0ng khi test th\u1eed th\u00ec kh\u00f4ng kh\u1edbp m\u1ed9t v\u00ed d\u1ee5 n\u00e0o c\u1ea3. L\u00fac \u0111\u00f3 \u0111\u1ecdc k\u0129 l\u1ea1i \u0111\u1ec1 b\u00e0i m\u1edbi nh\u1eadn ra: m\u00ecnh ch\u01b0a g\u1eb7p \"d\u1ea1ng\" n\u00e0y bao gi\u1edd v\u00e0 b\u1ebf t\u1eafc ho\u00e0n to\u00e0n. B\u1ea1n s\u1ebd tr\u1ea3i nghi\u1ec7m \u0111i\u1ec1u n\u00e0y nhi\u1ec1u l\u1ea7n khi gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n \"g\u1ed1c\" v\u00e0 \u0111\u1ed9c \u0111\u00e1o, v\u00e0 k\u1ec3 c\u1ea3 nh\u1eefng coder \"l\u00e3o l\u00e0ng\" c\u0169ng c\u00f3 l\u00fac b\u1ecb ch\u00ednh kinh nghi\u1ec7m c\u1ee7a m\u00ecnh \u0111\u00e1nh l\u1eeba.</p> <p>T\u01b0 duy l\u1ed1i m\u00f2n th\u01b0\u1eddng khi\u1ebfn ta \u1ea3o t\u01b0\u1edfng r\u1eb1ng m\u1ecdi b\u00e0i to\u00e1n \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c \"ph\u00e2n lo\u1ea1i\" v\u00e0 ta ch\u1ec9 c\u1ea7n \u00e1p d\u1ee5ng \"\u0111\u00fang thu\u1eadt\", trong khi th\u1ef1c t\u1ebf \u0111i\u1ec1u n\u00e0y b\u1ea5t kh\u1ea3 thi. Khi ta t\u1ea1m qu\u00ean h\u1ebft nh\u1eefng l\u1ed1i m\u00f2n \u0111\u00f3 v\u00e0 s\u1eed d\u1ee5ng h\u1ebft kh\u1ea3 n\u0103ng suy ngh\u0129, ph\u00e2n t\u00edch, tr\u00ecnh \u0111\u1ed9 c\u1ee7a ta s\u1ebd \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n r\u1ea5t nhi\u1ec1u.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/#coding-kata","title":"Coding Kata","text":"<p>\u0110\u00e2y l\u00e0 th\u1eed th\u00e1ch \u0111\u1ea7u ti\u00ean: h\u00e3y ch\u1ecdn b\u1ea5t c\u1ee9 b\u00e0i t\u1eadp n\u00e0o trong Practice Rooms m\u00e0 b\u1ea1n ch\u01b0a l\u00e0m. H\u1ed1t n\u00f3, cho d\u00f9 ph\u1ea3i m\u1ea5t bao nhi\u00eau th\u1eddi gian, v\u00e0 ho\u00e0n th\u00e0nh n\u00f3 (c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng editorial n\u1ebfu qu\u00e1 \"b\u00ed\"). Sau khi l\u00e0m xong (accepted), h\u00e3y xem b\u1ea1n m\u1ea5t bao nhi\u00eau th\u1eddi gian \u0111\u1ec3 gi\u1ea3i. Ti\u1ebfp theo, x\u00f3a h\u1ebft code v\u00e0 g\u00f5 l\u1ea1i l\u1ea7n n\u1eefa, check th\u1eddi gian sau khi l\u00e0m xong. Ti\u1ebfp t\u1ee5c l\u1ea7n th\u1ee9 3 nh\u01b0 th\u1ebf.</p> <p>Th\u1eddi gian ho\u00e0n th\u00e0nh l\u1ea7n \u0111\u1ea7u ti\u00ean l\u00e0 th\u1eddi gian \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n khi b\u1ea1n kh\u00f4ng c\u00f3 b\u1ea5t c\u1ee9 h\u01b0\u1edbng suy ngh\u0129 hay c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0o v\u1ec1 b\u00e0i to\u00e1n. Th\u1eddi gian ho\u00e0n th\u00e0nh l\u1ea7n th\u1ee9 2 l\u00e0 th\u1eddi gian l\u1ea7n \u0111\u1ea7u ti\u00ean tr\u1eeb \u0111i th\u1eddi gian b\u1ea1n d\u00f9ng \u0111\u1ec3 \u0111\u1ecdc v\u00e0 hi\u1ec3u \u0111\u1ec1 (\u0111\u1eebng qu\u00e1 ng\u1ea1c nhi\u00ean v\u1edbi s\u1ed1 l\u1ed7i b\u1ea1n l\u1eb7p l\u1ea1i \u1edf l\u1ea7n n\u00e0y). C\u00f2n th\u1eddi gian ho\u00e0n th\u00e0nh l\u1ea7n cu\u1ed1i l\u00e0 th\u1eddi gian b\u1ea1n c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c trong l\u00fac thi th\u1eadt n\u1ebfu t\u00ecm th\u1ea5y \u0111\u01b0\u1ee3c c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00fang ngay sau khi \u0111\u1ecdc \u0111\u1ec1 b\u00e0i. Vi\u1ec7c gi\u1ea3i b\u00e0i v\u1edbi th\u1eddi gian c\u1ee7a l\u1ea7n cu\u1ed1i c\u00f9ng ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c (th\u1eadm ch\u00ed kh\u00f4ng c\u1ea7n kh\u1ea3 n\u0103ng g\u00f5 ph\u00edm nhanh). Nh\u01b0ng \u0111i\u1ec1u m\u00e0 b\u1ea1n c\u0169ng nh\u1eadn ra \u1edf l\u1ea7n gi\u1ea3i th\u1ee9 3 l\u00e0 c\u1ea3m gi\u00e1c b\u1ea1n \u0111\u00e3 bi\u1ebft tr\u01b0\u1edbc chi\u1ebfn thu\u1eadt, n\u00ean code th\u1ebf n\u00e0o, d\u1ec5 b\u1ecb bug nh\u1ea5t \u1edf nh\u1eefng \u0111o\u1ea1n n\u00e0o, ... \u0110\u00f3 l\u00e0 c\u1ea3m gi\u00e1c \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00fang.</p> <p>\u1ede nhi\u1ec1u m\u00f4n v\u00f5, c\u00f3 m\u1ed9t thu\u1eadt ng\u1eef luy\u1ec7n t\u1eadp g\u1ecdi l\u00e0 kata. Ng\u01b0\u1eddi t\u1eadp s\u1ebd thi tri\u1ec3n nh\u1eefng \u0111\u00f2n th\u1ebf \u0111\u01b0\u1ee3c k\u1ecbch b\u1ea3n s\u1eb5n v\u00e0 c\u1ed1 ph\u00f2ng th\u1ee7 tr\u01b0\u1edbc c\u00e1c \u0111\u00f2n t\u1ea5n c\u00f4ng - c\u0169ng \u0111\u00e3 \u0111\u01b0\u1ee3c k\u1ecbch b\u1ea3n. Tho\u1ea1t nghe th\u00ec ph\u01b0\u01a1ng ph\u00e1p n\u00e0y ch\u1ea3 c\u00f3 t\u00e1c d\u1ee5ng g\u00ec v\u00ec s\u1ebd ch\u1eb3ng l\u00fac n\u00e0o \u0111\u00e1nh nhau \u0111\u01b0\u1ee3c \"ti\u1ec7n\" nh\u01b0 v\u1eady. H\u01a1n n\u1eefa c\u00f3 v\u1ebb nh\u01b0 n\u00f3 khuy\u1ebfn kh\u00edch l\u1ed1i t\u01b0 duy, luy\u1ec7n t\u1eadp theo l\u1ed1i m\u00f2n \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean. Th\u1ebf nh\u01b0ng kata s\u1ebd cho ng\u01b0\u1eddi t\u1eadp c\u1ea3m gi\u00e1c c\u1ee7a vi\u1ec7c c\u00f3 m\u1ed9t k\u1ebf ho\u1ea1ch r\u00f5 r\u00e0ng v\u00e0 khuy\u1ebfn kh\u00edch \u00fd ch\u00ed. Tin h\u1ecdc c\u0169ng nh\u01b0 v\u1eady; ch\u1ec9 sau khi code 3 l\u1ea7n m\u1ed9t d\u1ea1ng b\u00e0i trong m\u1ed9t th\u1eddi gian \u0111\u1ee7 nhi\u1ec1u ta m\u1edbi nhu\u1ea7n nhuy\u1ec5n h\u1ebft m\u1ecdi m\u1eb7t c\u1ee7a b\u00e0i to\u00e1n - \u0111\u1ecbnh h\u01b0\u1edbng, tr\u00ecnh b\u00e0y code v\u00e0 debug.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/#chien-thuat-inh-huong-giai-bai-approach-tactics","title":"Chi\u1ebfn thu\u1eadt \u0111\u1ecbnh h\u01b0\u1edbng gi\u1ea3i b\u00e0i (Approach Tactics)","text":"<p>B\u00e2y gi\u1edd b\u1ea1n \u0111\u00e3 bi\u1ebft vi\u1ec7c \u0111\u1ecbnh h\u01b0\u1edbng gi\u1ea3i b\u00e0i n\u00f3 nh\u01b0 th\u1ebf n\u00e0o v\u00e0 n\u00f3 bao g\u1ed3m nh\u1eefng g\u00ec, b\u1ea1n s\u1ebd nh\u1eadn ra r\u1eb1ng tr\u01b0\u1edbc \u0111\u00e2y b\u1ea1n \u0111\u00e3 bi\u1ebft kh\u00e1 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 ti\u1ebfp c\u1eadn m\u1ed9t b\u00e0i to\u00e1n. D\u1ea1ng nh\u01b0 \u201cT\u00f4i d\u00f9ng Quy ho\u1ea1ch \u0111\u1ed9ng (dynamic programming) cho b\u00e0i \u0111\u00f3\u201d, \u201cT\u00f4i c\u00f3 th\u1ec3 d\u00f9ng tham lam (greedy) \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y kh\u00f4ng?\u201d, \u201c\u0110\u1eebng n\u00f3i v\u1edbi t\u00f4i r\u1eb1ng duy\u1ec7t (brute-force) c\u00f3 th\u1ec3 \u0103n b\u00e0i n\u00e0y\u201d. Th\u1eadt ra b\u1ea1n \u0111ang d\u00f9ng sai nh\u1eefng t\u1eeb ng\u1eef \u1edf \u0111\u00e2y, v\u00ec b\u1ea1n kh\u00f4ng th\u1ec3 ph\u00e2n lo\u1ea1i m\u1ed7i b\u00e0i t\u1eadp ch\u1ec9 v\u1edbi tham hay duy\u1ec7t. C\u00f3 r\u1ea5t r\u1ea5t nhi\u1ec1u d\u1ea1ng b\u00e0i t\u1eadp, v\u00e0 c\u0169ng r\u1ea5t nhi\u1ec1u c\u00e1ch ti\u1ebfp c\u1eadn, v\u00e0 th\u1eadm ch\u00ed v\u1edbi m\u1ed7i h\u01b0\u1edbng ti\u1ebfp c\u1eadn c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i r\u1ea5t nhi\u1ec1u c\u00e1ch th\u1ec3 hi\u1ec7n kh\u00e1c nhau. C\u00e1ch d\u00f9ng t\u1eeb nh\u01b0 v\u1eady ch\u1ec9 t\u1ed5ng qu\u00e1t \u0111\u01b0\u1ee3c nh\u1eefng b\u01b0\u1edbc \u0111i l\u1edbn \u0111\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n.</p> <p>Trong TopCoder c\u00f3 nhi\u1ec1u b\u00e0i c\u00f3 l\u1eddi gi\u1ea3i ho\u00e0n ch\u1ec9nh v\u00e0 ch\u00fa th\u00edch c\u1eb7n k\u1ebd. L\u1ea7n tham gia contest ti\u1ebfp theo, b\u1ea1n h\u00e3y th\u1eed t\u00ecm m\u1ed9t b\u00e0i vi\u1ebft t\u1ed1t v\u00e0 nghi\u00ean c\u1ee9u c\u00e1c b\u01b0\u1edbc ti\u1ebfp c\u1eadn c\u1ee5 th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n m\u00e0 t\u00e1c gi\u1ea3 \u0111\u00e3 ch\u1ec9 ra. B\u1ea1n s\u1ebd b\u1eaft \u0111\u1ea7u ch\u00fa \u00fd r\u1eb1ng c\u00f3 m\u1ed9t t\u00ednh ch\u1ea5t n\u00e0o \u0111\u00f3 c\u1ee7a b\u00e0i to\u00e1n s\u1ebd g\u1ee3i ra cho b\u1ea1n m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn, hay nh\u1eefng c\u00e1ch bi\u1ebfn \u0111\u1ed5i, chuy\u1ec3n h\u01b0\u1edbng, ph\u00e2n t\u00edch, ... l\u00e0m b\u1ea1n \u0111\u1ebfn g\u1ea7n h\u01a1n v\u1edbi \u0111\u00e1p \u00e1n, hay \u00edt nh\u1ea5t gi\u00fap b\u1ea1n kh\u00f4ng ngh\u0129 theo h\u01b0\u1edbng sai. Khi t\u00ecm m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn, h\u00e3y th\u1eed t\u1ea5t c\u1ea3 nh\u1eefng h\u01b0\u1edbng \u0111i b\u1ea1n c\u00f3, nh\u01b0 ki\u1ec3u b\u1ea1n \u0111\u00e3 g\u00f5 s\u1eb5n code h\u1ebft trong \u0111\u1ea7u - b\u1ea1n thuy\u1ebft ph\u1ee5c b\u1ea3n th\u00e2n r\u1eb1ng h\u01b0\u1edbng \u0111i c\u1ee7a b\u1ea1n l\u00e0 \u0111\u00fang.</p> <p>Nh\u1eefng coder c\u00f3 ki\u1ebfn th\u1ee9c to\u00e1n c\u01a1 b\u1ea3n t\u1ed1t s\u1ebd c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c h\u01b0\u1edbng suy ngh\u0129 n\u00e0y, b\u1edfi v\u00ec nh\u1eefng h\u01b0\u1edbng ti\u1ebfp c\u1eadn \u0111\u00f3 r\u1ea5t gi\u1ed1ng v\u1edbi k\u0129 n\u0103ng ch\u1ee9ng minh to\u00e1n h\u1ecdc. V\u1edbi nh\u1eefng k\u00ec th\u1ee7 h\u1ecd s\u1ebd th\u1ea5y n\u00f3 gi\u1ed1ng nh\u01b0 vi\u1ec7c ngh\u0129 tr\u01b0\u1edbc c\u00e1c n\u01b0\u1edbc c\u1edd hay nh\u1eefng ng\u01b0\u1eddi thi\u1ebft k\u1ebf \u1ee9ng d\u1ee5ng c\u00f3 th\u1ec3 \u0111\u00e3 quen v\u1edbi n\u00f3 trong khi l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c design patterns (thu\u1eadt ng\u1eef trong l\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng, ch\u1ec9 nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p thi\u1ebft k\u1ebf hi\u1ec7u qu\u1ea3 \u0111\u00e3 \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u k\u0129)...</p> <p>\u0110\u1ec3 luy\u1ec7n t\u1eadp c\u00e1ch t\u01b0 duy v\u00e0 t\u00ecm ra ph\u01b0\u01a1ng ph\u00e1p ph\u00f9 h\u1ee3p v\u1edbi m\u00ecnh, ghi ch\u00fa l\u1ea1i h\u01b0\u1edbng gi\u1ea3i c\u1ee7a c\u00e1c b\u00e0i to\u00e1n l\u00e0 r\u1ea5t quan tr\u1ecdng. Sau \u0111\u00f3 h\u00e3y vi\u1ebft m\u1ed9t b\u00e0i ph\u00e2n t\u00edch d\u1ef1a tr\u00ean nh\u1eefng g\u00ec b\u1ea1n \u0111\u00e3 l\u00e0m, c\u00e0ng chi ti\u1ebft c\u00e0ng t\u1ed1t, \u0111\u1ec3 nh\u1eefng ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c c\u00e1ch b\u1ea1n suy ngh\u0129 nh\u01b0 th\u1ebf n\u00e0o. Vi\u1ec7c vi\u1ebft l\u1ea1i nh\u01b0 th\u1ebf kh\u00f4ng ch\u1ec9 gi\u00fap b\u1ea1n hi\u1ec3u r\u00f5 h\u01a1n c\u00e1ch ti\u1ebfp c\u1eadn c\u1ee7a m\u00ecnh, m\u00e0 c\u00f2n t\u00ecm ra \u0111\u01b0\u1ee3c nh\u1eefng sai l\u1ea7m c\u1ee7a b\u1ea3n th\u00e2n v\u00e0 c\u1ea3i thi\u1ec7n n\u00f3. H\u00e3y nh\u1edb r\u1eb1ng, r\u1ea5t kh\u00f3 \u0111\u1ec3 c\u1ea3i thi\u1ec7n \u0111\u01b0\u1ee3c nh\u1eefng \u0111i\u1ec1u m\u00e0 b\u1ea1n c\u00f2n ch\u01b0a hi\u1ec3u.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/#chia-nho-van-e","title":"Chia nh\u1ecf v\u1ea5n \u0111\u1ec1","text":"<p>H\u00e3y b\u00e0n v\u1ec1 m\u1ed9t trong nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn ph\u1ed5 bi\u1ebfn nh\u1ea5t: chia nh\u1ecf v\u1ea5n \u0111\u1ec1 ra, c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ti\u1ebfp c\u1eadn t\u1eeb tr\u00ean xu\u1ed1ng (top-down programming). \u00dd t\u01b0\u1edfng c\u01a1 b\u1ea3n \u1edf \u0111\u00e2y l\u00e0 code c\u1ee7a b\u1ea1n ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n theo th\u1ee9 t\u1ef1, n\u00ean h\u00e3y b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c suy ngh\u0129 xem ph\u1ea7n ch\u01b0\u01a1ng tr\u00ecnh ch\u00ednh s\u1ebd c\u1ea7n nh\u1eefng g\u00ec tr\u01b0\u1edbc khi x\u00e2y d\u1ef1ng nh\u1eefng h\u00e0m con. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p b\u1ea1n th\u1ea5y \u0111\u01b0\u1ee3c t\u1ed5ng th\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh, c\u0169ng nh\u01b0 chia nh\u1ecf v\u1ea5n \u0111\u1ec1 t\u1eeb nh\u1eefng th\u1ee9 ph\u1ee9c t\u1ea1p cho \u0111\u1ebfn \u0111\u01a1n gi\u1ea3n.</p> <p>M\u1ed9t v\u00ed d\u1ee5 \u00e1p d\u1ee5ng c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y. Round 2, MatArith, topcoder Invitational 2002, b\u00e0i to\u00e1n y\u00eau c\u1ea7u b\u1ea1n ph\u1ea3i t\u00ednh gi\u00e1 tr\u1ecb bi\u1ec3u th\u1ee9c c\u00f3 s\u1eed d\u1ee5ng ma tr\u1eadn. \u0110\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c nh\u1eefng con s\u1ed1 ch\u00fang ta ph\u1ea3i x\u1eed l\u00fd x\u00e2u (v\u00ec input l\u00e0 string), t\u00ednh to\u00e1n d\u1ef1a tr\u00ean \u0111\u00f3, v\u00e0 tr\u1ea3 ng\u01b0\u1ee3c v\u1ec1 string. N\u00ean b\u1ea1n c\u1ea7n m\u1ed9t h\u00e0m <code>print</code> \u0111\u1ec3 in k\u1ebft qu\u1ea3, m\u1ed9t h\u00e0m <code>parse</code> \u0111\u1ec3 x\u1eed l\u00fd x\u00e2u v\u00e0 m\u1ed9t h\u00e0m <code>calc</code> \u0111\u1ec3 x\u1eed l\u00ed to\u00e1n h\u1ecdc. Kh\u00f4ng c\u1ea7n suy ngh\u0129 qu\u00e1 ph\u1ee9c t\u1ea1p, N\u1ebfu ch\u00fang ta c\u00f3 \u0111\u1ee7 3 h\u00e0m \u0111\u00f3 th\u00ec v\u1ea5n \u0111\u1ec1 s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft ch\u1ec9 trong 1 d\u00f2ng code:</p> <pre><code>public String[] calculate(String[] A, String[] B, String[] C, String eval){\n   return print(calc(parse(A),parse(B),parse(C),eval));\n}\n</code></pre> <p>C\u00e1i hay c\u1ee7a c\u00e1c ti\u1ebfp c\u1eadn n\u00e0y l\u00e0 t\u1ea1o ra m\u1ed9t h\u1ec7 th\u1ed1ng c\u1ea5p b\u1eadc c\u00e1c h\u00e0m, h\u00e0m tr\u00ean s\u1ebd d\u1ef1a v\u00e0o k\u1ebft qu\u1ea3 c\u1ee7a h\u00e0m d\u01b0\u1edbi \u0111\u1ec3 ch\u1ea1y. B\u00e2y gi\u1edd c\u00f4ng vi\u1ec7c \u0111\u00e3 \u0111\u01b0\u1ee3c chia l\u00e0m 3 ph\u1ea7n: t\u1ea1o h\u00e0m <code>parse</code>, h\u00e0m <code>print</code>, v\u00e0 h\u00e0m <code>calc</code>. N\u1ebfu b\u1ea1n chia b\u00e0i to\u00e1n th\u00e0nh nh\u1eefng b\u00e0i to\u00e1n con \u0111\u1ee7 nh\u1ecf, b\u1ea1n s\u1ebd kh\u00f4ng ph\u1ea3i t\u1ed1n nhi\u1ec1u th\u1eddi gian v\u00e0o vi\u1ec7c suy ngh\u0129 cho nh\u1eefng b\u01b0\u1edbc kh\u00f4ng \u0111\u01a1n gi\u1ea3n, b\u1edfi v\u00ec n\u00f3 s\u1ebd tr\u1edf n\u00ean atomic (s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp ph\u00eda d\u01b0\u1edbi). Thay v\u00e0o \u0111\u00f3 ch\u00fang ta c\u00f3 th\u1ec3 t\u1eadp trung v\u00e0o h\u00e0m c\u1ed9ng v\u00e0 h\u00e0m nh\u00e2n ma tr\u1eadn hay h\u00e0m \u0111\u1ecdc d\u1eef li\u1ec7u v\u00e0o sao cho ch\u00ednh x\u00e1c.</p> <p>C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng kh\u00e1 hi\u1ec7u qu\u1ea3 v\u00e0o nh\u1eefng b\u00e0i to\u00e1n \u0111\u1ec7 quy. To\u00e0n b\u1ed9 \u00fd t\u01b0\u1edfng c\u1ee7a \u0111\u1ec7 quy \u0111\u00f3 l\u00e0 chia v\u1ea5n \u0111\u1ec1 l\u1edbn th\u00e0nh nh\u1eefng v\u1ea5n \u0111\u1ec1 nh\u1ecf h\u01a1n nh\u01b0ng gi\u1ed1ng ch\u00ednh x\u00e1c v\u1edbi v\u1ea5n \u0111\u1ec1 g\u1ed1c, v\u1eady ch\u00fang ta ch\u1ec9 c\u1ea7n gi\u1ea3i \u0111\u01b0\u1ee3c m\u1ed9t 1 v\u1ea5n \u0111\u1ec1 g\u1ed1c l\u00e0 xong. C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y c\u0169ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t ph\u1ed5 bi\u1ebfn trong functional programming (m\u1ed9t l\u1edbp c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh m\u00e0 ch\u01b0\u01a1ng tr\u00ecnh \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng ch\u1ec9 t\u1eeb c\u00e1c h\u00e0m). C\u00f3 kh\u00e1 nhi\u1ec1u b\u00e0i vi\u1ebft \u0111\u00e3 b\u00e0n s\u00e2u v\u1ec1 v\u1ea5n \u0111\u1ec1 n\u00e0y, nh\u01b0ng \u00fd t\u01b0\u1edfng c\u01a1 b\u1ea3n ch\u00ednh l\u00e0 n\u1ebfu ta chia nh\u1ecf b\u00e0i to\u00e1n m\u1ed9t c\u00e1ch \u0111\u00fang \u0111\u1eafn, ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd t\u1ef1 \u0111\u1ed9ng g\u1eedi tham s\u1ed1 qua m\u1ed7i l\u1eddi g\u1ecdi h\u00e0m, kh\u00f4ng c\u1ea7n thi\u1ebft l\u01b0u tr\u1eef d\u1eef li\u1ec7u gi\u1eefa c\u00e1c b\u01b0\u1edbc. Nh\u01b0ng c\u00f3 m\u1ed9t nh\u01b0\u1ee3c \u0111i\u1ec3m l\u00e0 s\u1ebd kh\u00f3 debug h\u01a1n.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/#ke-hoach-debug","title":"K\u1ebf ho\u1ea1ch debug","text":"<p>B\u1ea5t c\u1ee9 khi n\u00e0o c\u00f3 m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn, ch\u00fang ta ph\u1ea3i lu\u00f4n c\u00f3 m\u1ed9t k\u1ebf ho\u1ea1ch debug cho c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00f3. C\u00f3 r\u1ea5t nhi\u1ec1u kh\u1ea3 n\u0103ng x\u1ea3y ra l\u00e0m cho ch\u01b0\u01a1ng tr\u00ecnh ch\u00fang ta ch\u1ea1y sai, b\u1eb1ng c\u00e1ch suy ngh\u0129 tr\u01b0\u1edbc c\u00e1c h\u01b0\u1edbng ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y sai, ch\u00fang ta c\u00f3 th\u1ec3 ng\u0103n ch\u1eb7n bug tr\u01b0\u1edbc khi code. H\u01a1n th\u1ebf n\u1eefa, n\u1ebfu kh\u00f4ng v\u01b0\u1ee3t qua \u0111\u01b0\u1ee3c c\u00e1c test m\u1eabu, ch\u00fang ta s\u1ebd bi\u1ebft ngay v\u1ecb tr\u00ed th\u00edch h\u1ee3p \u0111\u1ec3 b\u1eaft \u0111\u1ea7u t\u00ecm l\u1ed7i. Cu\u1ed1i c\u00f9ng, b\u1eb1ng c\u00e1ch ch\u00fa \u00fd \u0111\u1ebfn \u0111i\u1ec3m tr\u1ecdng y\u1ebfu nh\u1ea5t, s\u1ebd d\u1ec5 d\u00e0ng h\u01a1n \u0111\u1ec3 ch\u1ee9ng minh c\u00e1ch ti\u1ebfp c\u1eadn c\u1ee7a b\u1ea1n l\u00e0 \u0111\u00fang.</p> <p>V\u1edbi tr\u01b0\u1eddng h\u1ee3p ti\u1ebfp c\u1eadn top-down, vi\u1ec7c chia nh\u1ecf nh\u1eefng ph\u1ea7n code th\u00e0nh nh\u1eefng h\u00e0m con gi\u00fap ch\u00fang ta c\u00f4 l\u1eadp nh\u1eefng ph\u1ea7n code l\u1ed7i v\u00e0 ch\u1ec9 ph\u1ea3i s\u1eeda l\u1ea1i code \u1edf m\u1ed9t n\u01a1i. C\u0169ng nh\u01b0 vi\u1ec7c test \u0111\u01b0\u1ee3c m\u1ed9t t\u1ed5 h\u1ee3p c\u00e1c h\u00e0m d\u1ec5 b\u1ecb bug nh\u1ea5t. Copy v\u00e0 paste nhi\u1ec1u l\u00fac c\u0169ng l\u00e0m vi\u1ec7c s\u1eeda l\u1ed7i t\u1ed1n nhi\u1ec1u c\u00f4ng s\u1ee9c h\u01a1n thay v\u00ec vi\u1ebft ri\u00eang m\u1ed9t h\u00e0m con. M\u1ed9t kinh nghi\u1ec7m n\u1eefa cho c\u00e1ch ti\u1ebfp c\u1eadn t\u1eeb tr\u00ean xu\u1ed1ng l\u00e0 ch\u00fang ta n\u00ean t\u00ecm bugs b\u00ean trong h\u00e0m tr\u01b0\u1edbc khi t\u00ecm gi\u1eefa nh\u1eefng l\u1eddi g\u1ecdi h\u00e0m. Nh\u1eefng c\u00e1ch n\u00e0y t\u1ea1o n\u00ean m\u1ed9t chi\u1ebfn thu\u1eadt debug: bi\u1ebft \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed n\u00e0o c\u1ea7n test tr\u01b0\u1edbc ti\u00ean, ch\u1ed7 n\u00e0o b\u1ea1n ngh\u0129 l\u00e0 sai v\u00e0 c\u1ea7n ki\u1ec3m tra, hay ch\u1ee9ng minh nh\u1eefng \u0111o\u1ea1n code chu\u1ea9n v\u00e0 b\u1ecf qua ch\u00fang. N\u1ebfu luy\u1ec7n t\u1eadp th\u01b0\u1eddng xuy\u00ean, b\u1ea1n s\u1ebd th\u1ea5y r\u1eb1ng nh\u1eefng k\u0129 n\u0103ng n\u00e0y v\u00f4 c\u00f9ng h\u1eefu \u00edch.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-1/#atomic-code","title":"Atomic Code","text":"<p>N\u1ebfu ch\u00fang ta \u0111i \u0111\u1ebfn m\u1ed9t ph\u1ea7n code m\u00e0 ch\u00fang ta kh\u00f4ng th\u1ec3 chia nh\u1ecf \u0111\u01b0\u1ee3c n\u1eefa, th\u00ec ph\u1ea7n \u0111\u00f3 g\u1ecdi l\u00e0 atomic code. Hi v\u1ecdng c\u00e1c b\u1ea1n \u0111\u1ec1u bi\u1ebft c\u00e1ch code nh\u1eefng ph\u1ea7n nh\u01b0 v\u1eady, v\u00ec \u0111\u00f3 s\u1ebd l\u00e0 nh\u1eefng ph\u1ea7n b\u1ea1n s\u1ebd code th\u01b0\u1eddng xuy\u00ean nh\u1ea5t. Nh\u01b0ng \u0111\u1eebng lo n\u1ebfu b\u1ea1n ch\u01b0a thu\u1ea7n th\u1ee5c n\u00f3, nh\u1eefng atomic code kh\u00f3 nh\u01b0 v\u1eady th\u01b0\u1eddng l\u00e0m cho b\u00e0i to\u00e1n tr\u1edf n\u00ean th\u00fa v\u1ecb h\u01a1n, v\u00e0 th\u00ecnh tho\u1ea3ng th\u1ea5y tr\u01b0\u1edbc \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 s\u1ebd gi\u00fap b\u1ea1n c\u00f3 m\u1ed9t b\u01b0\u1edbc ti\u1ebfn l\u1edbn trong vi\u1ec7c t\u00ecm c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00fang \u0111\u1eafn, h\u1ea1n ch\u1ebf \u0111\u01b0\u1ee3c vi\u1ec7c phung ph\u00ed th\u1eddi gian cho nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn sai.</p> <p>D\u1ea1ng atomic code b\u1ea1n vi\u1ebft th\u01b0\u1eddng xuy\u00ean nh\u1ea5t \u0111\u00f3 l\u00e0 d\u1ea1ng t\u1ed1i gi\u1ea3n nh\u1ea5t, n\u00ean ph\u1ea7n l\u1edbn s\u1ebd c\u00f3 l\u1ec7nh s\u1eb5n trong th\u01b0 vi\u1ec7n \u0111\u1ec3 h\u1ed7 tr\u1ee3 n\u00f3. Vi\u1ec7c s\u1eed d\u1ee5ng th\u00e0nh th\u1ea1o th\u01b0 vi\u1ec7n l\u00e0 m\u1ed9t l\u1ee3i th\u1ebf l\u1edbn, n\u00f3 gi\u00fap ch\u00fang ta vi\u1ebft \u0111\u01b0\u1ee3c atomic code trong s\u00e1ng v\u00e0 r\u00f5 r\u00e0ng h\u01a1n. C\u00f2n c\u00e1ch n\u00e0o \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian h\u01a1n khi b\u1ea1n bi\u1ebft r\u1eb1ng m\u1ed9t ph\u1ea7n atomic code kh\u00e1 kh\u00f3 x\u01a1i l\u1ea1i l\u00e0 m\u1ed9t h\u00e0m hay m\u1ed9t l\u1edbp n\u00e0o \u0111\u00f3 trong th\u01b0 vi\u1ec7n s\u1eb5n c\u00f3?</p> <p>M\u00ecnh s\u1ebd g\u1ecdi d\u1ea1ng atomic code th\u1ee9 hai m\u00e0 b\u1ea1n s\u1ebd vi\u1ebft l\u00e0 language techniques (m\u1ed9t d\u1ea1ng k\u0129 n\u0103ng v\u1ec1 ng\u00f4n ng\u1eef). \u0110\u00f3 l\u00e0 nh\u1eefng ph\u1ea7n code nh\u1ecf m\u00e0 b\u1ea1n thu\u1ed9c l\u00f2ng \u0111\u1ec3 gi\u1ea3i quy\u1ebft m\u1ed9t ph\u00e9p x\u1eed l\u00ed n\u00e0o \u0111\u00f3, nh\u01b0 t\u00ecm ch\u1ec9 s\u1ed1 c\u1ee7a ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t \u0111\u1ea7u ti\u00ean trong m\u1ea3ng, hay t\u00e1ch m\u1ed9t x\u00e2u ra th\u00e0nh nh\u1eefng chu\u1ed7i con m\u00e0 kh\u00f4ng c\u00f3 kho\u1ea3ng tr\u1eafng. Nh\u1eefng k\u0129 thu\u1eadt tr\u00ean r\u1ea5t c\u1ea7n thi\u1ebft cho vi\u1ec7c t\u00ecm c\u00e1ch ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n, b\u1edfi v\u00ec n\u1ebfu b\u1ea1n bi\u1ebft r\u00f5 c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a nh\u1eefng thao t\u00e1c c\u01a1 b\u1ea3n \u0111\u00f3, s\u1ebd l\u00e0m cho vi\u1ec7c qu\u00e1 tr\u00ecnh chia nh\u1ecf nhanh \u0111\u1ebfn atomic h\u01a1n, n\u00f3 c\u0169ng s\u1ebd h\u1ea1n ch\u1ebf vi\u1ec7c t\u1ea1o ra bug kh\u00f4ng \u0111\u00e1ng c\u00f3. Th\u00eam n\u1eefa, n\u1ebfu b\u1ea1n c\u1ea7n ph\u1ea3i c\u00e0i m\u1ed9t h\u00e0m h\u01a1i t\u01b0\u01a1ng t\u1ef1 nh\u01b0 m\u1ed9t language technique m\u00e0 b\u1ea1n \u0111\u00e3 bi\u1ebft, th\u00ec vi\u1ec7c \u0111\u00f3 s\u1ebd tr\u1edf n\u00ean v\u00f4 c\u00f9ng d\u1ec5 d\u00e0ng d\u1ef1a tr\u00ean vi\u1ec7c ch\u1ec9 c\u1ea7n s\u1eeda \u0111\u1ed5i n\u00f3 ch\u00fat \u00edt. Luy\u1ec7n t\u1eadp v\u1edbi nh\u1eefng language technique \u0111\u00f3 n\u00ean l\u00e0 vi\u1ec7c l\u00e0m h\u00e0ng ng\u00e0y, v\u00e0 b\u1ea5t k\u00ec atomic code n\u00e0o c\u0169ng s\u1ebd c\u00f3 th\u1ec3 bay ra kh\u1ecfi b\u00e0n tay (v\u00e0 bay v\u00e0o m\u00e0n h\u00ecnh) ngay khi b\u1ea1n v\u1eeba ngh\u0129 \u0111\u1ebfn n\u00f3.</p> <p>V\u1ec1 vi\u1ec7c s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n c\u00e1 nh\u00e2n, t\u00f4i th\u1ea5y c\u00f3 nhi\u1ec1u ng\u01b0\u1eddi s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n b\u1eb1ng c\u00e1ch ch\u00e8n nh\u1eefng \u0111o\u1ea1n code th\u01b0\u1eddng d\u00f9ng v\u00e0o ph\u1ea7n \u0111\u1ea7u c\u1ee7a file. \u0110i\u1ec1u n\u00e0y ho\u00e0n to\u00e0n h\u1ee3p l\u00ed v\u00e0 h\u1ee3p ph\u00e1p. Nh\u1eefng \u01b0u \u0111i\u1ec3m c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y l\u00e0 c\u00f3 th\u1ec3 t\u1ea1o ra \u0111\u01b0\u1ee3c nhi\u1ec1u ph\u1ea7n tr\u01b0\u1edbc cho nh\u1eefng atomic code th\u01b0\u1eddng g\u1eb7p, c\u00f3 nhi\u1ec1u l\u1ee3i \u00edch cho vi\u1ec7c ti\u1ebfp c\u1eadn top-down, c\u0169ng nh\u01b0 bottom-up (s\u1ebd \u0111\u1ec1 c\u1eadp sau). Tuy nhi\u00ean, theo \u00fd ki\u1ebfn c\u00e1 nh\u00e2n, nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y kh\u00f4ng t\u01b0\u01a1ng x\u1ee9ng v\u1edbi hi\u1ec7u qu\u1ea3. N\u00f3 c\u00f3 th\u1ec3 l\u00e0m ch\u1eadm code c\u1ee7a b\u1ea1n \u0111i, b\u1edfi v\u00ec b\u1ea1n ph\u1ea3i t\u00ecm c\u00e1ch l\u00e0m cho input c\u1ee7a \u0111\u1ec1 b\u00e0i kh\u1edbp v\u1edbi \u0111\u1ea7u v\u00e0o c\u1ee7a th\u01b0 vi\u1ec7n c\u1ee7a b\u1ea1n, ho\u1eb7c th\u01b0 vi\u1ec7n c\u1ee7a b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u0111\u1ee7 t\u1ed1t \u0111\u1ec3 l\u00e0m \u0111i\u1ec1u \u0111\u00f3. \u0110i\u1ec1u hi\u1ec3n nhi\u00ean l\u00e0 nh\u1eefng th\u01b0 vi\u1ec7n b\u1ea1n t\u1ef1 vi\u1ebft c\u00f3 th\u1ec3 b\u1ecb bugged, v\u00e0 vi\u1ec7c debug th\u01b0 vi\u1ec7n c\u1ee7a b\u1ea1n l\u00fac \u0111ang thi \u0111\u1ea5u s\u1ebd r\u1ea5t nguy hi\u1ec3m b\u1edfi v\u00ec b\u1ea1n ph\u1ea3i s\u1eeda l\u1ea1i nh\u1eefng b\u00e0i b\u1ea1n \u0111\u00e3 submit tr\u01b0\u1edbc khi xem th\u00eam b\u1ea5t k\u00ec b\u00e0i n\u00e0o kh\u00e1c. Th\u00eam n\u1eefa, th\u01b0 vi\u1ec7n c\u00e1 nh\u00e2n kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf c\u00e1c k\u00ec thi onsite, v\u00ed d\u1ee5 nh\u01b0 thi HSG QG. Cu\u1ed1i c\u00f9ng, vi\u1ec7c s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n c\u00e1 nh\u00e2n s\u1ebd l\u00e0m b\u1ea1n ph\u1ea3i h\u1ecdc k\u1ef9 n\u0103ng s\u1eed d\u1ee5ng n\u00f3 ch\u1ee9 kh\u00f4ng ph\u1ea3i k\u1ef9 n\u0103ng c\u1ee7a ng\u00f4n ng\u1eef, khi\u1ebfn vi\u1ec7c \u0111\u1ecdc hi\u1ec3u \u0111\u01b0\u1ee3c b\u00e0i gi\u1ea3i c\u1ee7a ng\u01b0\u1eddi kh\u00e1c kh\u00f3 h\u01a1n. N\u1ebfu s\u1eed d\u1ee5ng \u0111\u00fang l\u00fac, th\u00ec n\u00f3 s\u1ebd l\u00e0 m\u1ed9t v\u0169 kh\u00ed hi\u1ec7u qu\u1ea3, nh\u01b0ng n\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 v\u0169 kh\u00ed v\u1ea1n n\u0103ng trong m\u1ecdi tr\u01b0\u1eddng h\u1ee3p.</p> <p>C\u00f3 nh\u1eefng l\u00fac b\u1ea1n s\u1ebd g\u1eb7p nh\u1eefng atomic code m\u00e0 b\u1ea1n kh\u00f4ng th\u1ec3 chia nh\u1ecf v\u1ea5n \u0111\u1ec1 \u0111\u01b0\u1ee3c n\u1eefa. \u0110\u00e2y l\u00e0 l\u00fac b\u1ea1n ph\u1ea3i b\u1eaft \u0111\u1ea7u ph\u00e2n t\u00edch c\u00e1ch ti\u1ebfp c\u1eadn hi\u1ec7n t\u1ea1i c\u1ee7a b\u1ea1n. T\u00f4i c\u00f3 n\u00ean chia nh\u1ecf v\u1ea5n \u0111\u1ec1 theo c\u00e1ch kh\u00e1c kh\u00f4ng? C\u00f3 n\u00ean l\u01b0u tr\u1eef d\u1eef li\u1ec7u b\u1eb1ng c\u1ea5u tr\u00fac kh\u00e1c? \u0110\u00e2y c\u00f3 ph\u1ea3i l\u00e0 nh\u00e2n t\u1ed1 \u0111\u1ec3 l\u00e0m cho b\u00e0i to\u00e1n tr\u1edf n\u00ean kh\u00f3 h\u01a1n? B\u1ea1n ph\u1ea3i x\u00e9t \u0111\u1ebfn nh\u1eefng th\u1ee9 \u0111\u00f3 tr\u01b0\u1edbc khi t\u00ecm ra \u0111\u00e1p \u00e1n. Th\u1eadm ch\u00ed \u1edf th\u1eddi \u0111i\u1ec3m b\u1ea1n nh\u1eadn ra b\u1ea1n kh\u00f4ng t\u00ecm ra \u0111\u01b0\u1ee3c h\u01b0\u1edbng suy ngh\u0129 ti\u1ebfp theo, th\u00ec v\u1eabn lu\u00f4n c\u00f3 c\u00e1ch \u0111\u1ec3 tho\u00e1t ra kh\u1ecfi t\u00ecnh hu\u1ed1ng \u0111\u00f3, m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u n\u00f3 \u1edf ph\u1ea7n ti\u1ebfp theo.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/","title":"Nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n: Ph\u1ea7n 2","text":"<p>B\u00e0i vi\u1ebft b\u1edfi leadhyena_inran.</p> <p>Ngu\u1ed3n: Topcoder </p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#tiep-can-tu-duoi-len-bottom-up-programming","title":"Ti\u1ebfp c\u1eadn t\u1eeb d\u01b0\u1edbi l\u00ean (Bottom-up Programming)","text":"<p>K\u1ef9 thu\u1eadt n\u00e0y ng\u01b0\u1ee3c v\u1edbi k\u1ef9 thu\u1eadt chia nh\u1ecf v\u1ea5n \u0111\u1ec1 \u0111\u00e3 \u0111\u01b0\u1ee3c n\u00f3i \u0111\u1ebfn \u1edf b\u00e0i vi\u1ebft tr\u01b0\u1edbc, v\u00e0 n\u00f3 n\u00ean l\u00e0 k\u1ef9 thu\u1eadt \u0111\u1ea7u ti\u00ean b\u1ea1n ngh\u0129 t\u1edbi khi b\u1ea1n ch\u01b0a t\u00ecm ra h\u01b0\u1edbng gi\u1ea3i. Bottom-up programming l\u00e0 ph\u01b0\u01a1ng ph\u00e1p xu\u1ea5t ph\u00e1t t\u1eeb nh\u1eefng h\u00e0m c\u01a1 b\u1ea3n, ch\u1ec9nh s\u1eeda, th\u00eam t\u00ednh n\u0103ng, k\u1ebft h\u1ee3p ch\u00fang \u0111\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n ban \u0111\u1ea7u. Nhi\u1ec1u l\u00fac khi v\u1eeba \u0111\u1ecdc \u0111\u1ec1 b\u1ea1n s\u1ebd th\u1ea5y r\u1eb1ng b\u1ea1n c\u1ea7n m\u1ed9t h\u00e0m c\u1ee5 th\u1ec3 n\u00e0o \u0111\u00f3 \u0111\u1ec3 gi\u1ea3i b\u00e0i n\u00e0y, n\u1ebfu n\u00f3 \u0111\u00e3 atomic hay d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t th\u00ec b\u1ea1n c\u00f3 th\u1ec3 c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng th\u1eb3ng l\u00ean t\u1eeb nh\u1eefng h\u00e0m c\u01a1 b\u1ea3n \u0111\u00f3 thay v\u00ec chia nh\u1ecf ra.</p> <p>Trong b\u00e0i MatArith \u1edf ph\u1ea7n tr\u01b0\u1edbc, ch\u01b0\u01a1ng tr\u00ecnh con \u0111\u1ec3 c\u1ed9ng v\u00e0 nh\u00e2n ma tr\u1eadn c\u0169ng c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng k\u0129 thu\u1eadt n\u00e0y. B\u1ea1n c\u00f3 th\u1ec3 vi\u1ebft m\u1ed9t h\u00e0m <code>evalMult</code> nh\u1ecf h\u01a1n c\u00f3 nhi\u1ec7m v\u1ee5 nh\u00e2n c\u00e1c ma tr\u1eadn v\u1edbi nhau b\u1eb1ng c\u00e1ch x\u1eed l\u00ed lu\u00f4n tr\u00ean string, m\u1ed9t h\u00e0m <code>evalAdd</code> t\u01b0\u01a1ng t\u1ef1 \u0111\u1ec3 c\u1ed9ng ma tr\u1eadn. </p> <p>N\u00f3i chung, x\u00e2y d\u1ef1ng d\u1ea7n d\u1ea7n l\u00ean nh\u1eefng ch\u01b0\u01a1ng tr\u00ecnh con tr\u01b0\u1edbc khi gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 ch\u00ednh c\u1ee7a b\u00e0i to\u00e1n l\u00e0 m\u1ed9t chi\u1ebfn thu\u1eadt kh\u00e1 t\u1ed1t. M\u1ed9t v\u00e0i v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh l\u00e0 c\u00e1c thao t\u00e1c tr\u00ean c\u1ea5u tr\u00fac d\u1eef li\u1ec7u (data structures), c\u00e1c to\u00e1n t\u1eed c\u1ee7a ma tr\u1eadn, s\u1ed1 ph\u1ee9c... B\u1ea1n s\u1ebd th\u1ea5y r\u1eb1ng, b\u1eb1ng vi\u1ec7c gi\u1ea3i quy\u1ebft nh\u1eefng v\u1ea5n \u0111\u1ec1 nh\u1ecf tr\u01b0\u1edbc, b\u1ea1n s\u1ebd h\u00ecnh dung r\u00f5 h\u01a1n b\u1ea1n c\u1ea7n l\u00e0m g\u00ec. Th\u1ec9nh tho\u1ea3ng, n\u1ebfu b\u1ea1n b\u1ecb b\u1ebf t\u1eafc v\u1edbi c\u00e1ch n\u00e0y, th\u00ec h\u00e3y vi\u1ebft m\u1ed9t v\u00e0i d\u00f2ng atomic code \u0111\u1ec3 xem vi\u1ec7c chia nh\u1ecf v\u1ea5n \u0111\u1ec1 ra th\u00ec c\u00f3 h\u1ee3p l\u00ed h\u01a1n hay kh\u00f4ng. Nh\u01b0 b\u1ea1n th\u1ea5y, \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00fang th\u00ec ph\u1ea3i th\u1eed \u0111\u1ec3 bi\u1ebft c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0o sai tr\u01b0\u1edbc \u0111\u00e3.</p> <p>B\u00ean c\u1ea1nh \u0111\u00f3, h\u00e3y nh\u1edb r\u1eb1ng b\u1ea5t k\u00ec d\u00f2ng code n\u00e0o b\u1ea1n vi\u1ebft ra \u0111\u1ec1u ph\u1ea3i \u0111\u01b0\u1ee3c ki\u1ec3m tra k\u0129 tr\u01b0\u1edbc khi x\u00e2y d\u1ef1ng l\u00ean cao, b\u1edfi v\u00ec \u0111\u00e2y l\u00e0 nh\u1eefng d\u00f2ng code \u0111\u1ea7u ti\u00ean b\u1ea1n vi\u1ebft v\u00e0 b\u1ea1n s\u1ebd ch\u00f3ng qu\u00ean khi c\u00e0ng vi\u1ebft l\u00ean nh\u1eefng ph\u1ea7n ph\u00eda tr\u00ean. M\u1ed9t m\u1eb9o kh\u00e1 hay \u0111\u1ec3 t\u00ecm l\u1ed7i: n\u00f3 th\u01b0\u1eddng n\u1eb1m trong nh\u1eefng d\u00f2ng code c\u0169 c\u1ee7a b\u1ea1n.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#vet-can-brute-force","title":"V\u00e9t c\u1ea1n (Brute Force)","text":"<p>B\u1ea5t c\u1ee9 khi n\u00e0o \u0111\u1ec1 b\u00e0i y\u00eau c\u1ea7u m\u1ed9t k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u, th\u00ec c\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 l\u00e0 th\u1eed t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra. B\u1ea5t c\u1ee9 khi n\u00e0o l\u1eddi gi\u1ea3i \u0111\u00f2i h\u1ecfi vi\u1ec7c t\u00ednh to\u00e1n nhi\u1ec1u b\u01b0\u1edbc, c\u00e1ch t\u1ed1t nh\u1ea5t \u0111\u1ec3 gi\u1ea3i l\u00e0 l\u00e0m theo t\u1eebng b\u01b0\u1edbc t\u00ednh to\u00e1n \u0111\u00f3. B\u1ea5t c\u1ee9 khi n\u00e0o b\u00e0i to\u00e1n y\u00eau c\u1ea7u b\u1ea1n \u0111\u1ebfm nh\u1eefng c\u00e1ch \u0111\u1ec3 l\u00e0m m\u1ed9t th\u1ee9 g\u00ec \u0111\u00f3 trong m\u1ed9t \u0111i\u1ec1u ki\u1ec7n cho tr\u01b0\u1edbc, c\u00e1ch t\u1ed1t nh\u1ea5t l\u00e0 th\u1eed t\u1ea5t c\u1ea3 m\u1ecdi c\u00e1ch v\u00e0 ch\u1ecdn nh\u1eefng c\u00e1ch th\u1ecfa y\u00eau c\u1ea7u. N\u00f3i c\u00e1ch kh\u00e1c, c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u1ea7u ti\u00ean cho c\u00e1c b\u00e0i to\u00e1n n\u00ean l\u00e0 m\u1ed9t c\u00e1ch d\u1ec5 nh\u1eadn th\u1ea5y nh\u1ea5t, cho d\u00f9 n\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 c\u00e1ch t\u1ed1t nh\u1ea5t.</p> <p>Chi\u1ebfn thu\u1eadt ti\u1ebfp c\u1eadn n\u00e0y g\u1ecdi l\u00e0 v\u00e9t c\u1ea1n (brute force) - x\u00e9t qua t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f3 th\u1ec3 x\u1ea3y ra \u0111\u1ec3 t\u00ecm k\u1ebft qu\u1ea3. M\u1ed7i khi b\u1ea1n g\u1eb7p m\u1ed9t b\u00e0i to\u00e1n, \u0111\u1ea7u ti\u00ean ph\u1ea3i x\u00e9t \u0111\u1ebfn l\u00e0 test x\u1ea5u nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3 l\u00e0 g\u00ec v\u00e0 li\u1ec7u th\u1eddi gian cho ph\u00e9p c\u00f3 \u0111\u1ee7 kh\u00f4ng. N\u1ebfu c\u00f3 th\u1ec3, h\u00e3y brute force v\u00ec th\u01b0\u1eddng code s\u1ebd \u0111\u01a1n gi\u1ea3n v\u00e0 \u00edt m\u1eafc l\u1ed7i h\u01a1n. B\u1ea1n c\u0169ng ph\u1ea3i c\u00f3 \u0111\u1ee7 ki\u1ebfn th\u1ee9c v\u1ec1 m\u00f4i tr\u01b0\u1eddng l\u1eadp tr\u00ecnh (programming environment) \u0111\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng th\u1eddi gian ch\u1ea1y c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh. C\u00f3 nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p do kh\u00f4ng \u01b0\u1edbc l\u01b0\u1ee3ng \u0111\u00fang n\u00ean \u0111\u00e3 b\u1ecf qua c\u00e1ch brute force \u0111\u01a1n gi\u1ea3n v\u00e0 t\u1ed1n th\u1eddi gian v\u00e0o debug nh\u1eefng c\u00e1ch gi\u1ea3i ph\u1ee9c t\u1ea1p, c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 vi\u1ec7c b\u1ecb qu\u00e1 th\u1eddi gian (time limit exceeded) khi kh\u00f4ng d\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c \u0111\u1ebfn tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t.</p> <p>N\u00f3i chung, n\u1ebfu b\u1ea1n kh\u00f4ng th\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c c\u00e1ch n\u00e0o kh\u00e1c \u0111\u1ec3 gi\u1ea3i, th\u00ec h\u00e3y d\u00f9ng brute-force. N\u1ebfu kh\u00f4ng \u0111\u1ee7 nhanh, th\u00ec ti\u1ebfp t\u1ee5c t\u00ecm c\u00e1ch kh\u00e1c t\u1ed1i \u01b0u h\u01a1n. Sau \u0111\u00f3 ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng code brute-force \u0111\u1ec3 test cho nh\u1eefng c\u00e1ch gi\u1ea3i kh\u00e1c (v\u00ec code brute-force bao gi\u1edd kh\u1ea3 n\u0103ng m\u1eafc l\u1ed7i c\u0169ng th\u1ea5p h\u01a1n).</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#su-dung-giai-thuat","title":"S\u1eed d\u1ee5ng gi\u1ea3i thu\u1eadt","text":"<p>S\u1eed d\u1ee5ng nh\u1eefng gi\u1ea3i thu\u1eadt c\u01a1 b\u1ea3n c\u0169ng l\u00e0 c\u00e1ch ti\u1ebfp hi\u1ec7u qu\u1ea3. Vi\u1ec7c n\u00e0y c\u0169ng gi\u1ed1ng nh\u01b0 vi\u1ec7c \u0111i c\u00e1c n\u01b0\u1edbc m\u1edf \u0111\u1ea7u gi\u1ed1ng nhau khi ch\u01a1i c\u1edd v\u1eady. Th\u00f4ng th\u01b0\u1eddng, c\u00e1ch th\u1eed l\u1ea7n l\u01b0\u1ee3t c\u00e1c thu\u1eadt to\u00e1n \u0111\u1ec3 ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n l\u00e0 m\u1ed9t c\u00e1ch l\u00e0m kh\u00f4ng hay cho l\u1eafm (n\u00f3 t\u1ea1o ra t\u01b0 duy l\u1ed1i m\u00f2n v\u00e0 nhi\u1ec1u l\u1ed7 h\u1ed5ng ki\u1ebfn th\u1ee9c cho c\u00e1c b\u00e0i to\u00e1n c\u01a1 b\u1ea3n), nh\u01b0ng n\u00f3 c\u0169ng kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t \u00fd t\u1ed3i n\u1ebfu s\u1eed d\u1ee5ng n\u00f3 nh\u01b0 m\u1ed9t atomic code hay d\u1ef1a v\u00e0o \u0111\u00f3 \u0111\u1ec3 chia nh\u1ecf v\u1ea5n \u0111\u1ec1 ra.</p> <p>B\u00e0i n\u00e0y m\u00ecnh kh\u00f4ng b\u00e0n lu\u1eadn nhi\u1ec1u v\u1ec1 gi\u1ea3i thu\u1eadt (\u0111\u00e3 c\u00f3 nhi\u1ec1u b\u00e0i h\u01b0\u1edbng d\u1eabn v\u1ec1 ph\u1ea7n n\u00e0y), m\u00e0 b\u00e0n v\u1ec1 vi\u1ec7c n\u00ean d\u00f9ng gi\u1ea3i thu\u1eadt nh\u01b0 th\u1ebf n\u00e0o \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh c\u00e1ch ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n. Bi\u1ebft c\u00e1ch s\u1eed d\u1ee5ng gi\u1ea3i thu\u1eadt trong tr\u01b0\u1eddng h\u1ee3p c\u01a1 b\u1ea3n l\u00e0 ch\u01b0a \u0111\u1ee7, h\u00e3y c\u1ed1 g\u1eafng hi\u1ec3u th\u1eadt s\u00e2u v\u1ec1 n\u00f3. V\u00ed d\u1ee5, b\u00e0i CityLink SRM 170 Div I Med, d\u00f9ng k\u1ebft h\u1ee3p c\u00e1c gi\u1ea3i thu\u1eadt \u0111\u1ed3 th\u1ecb (graph algorithm) \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 gi\u1ea3i, ng\u01b0\u1ee3c l\u1ea1i vi\u1ec7c code m\u1ed9t gi\u1ea3i thu\u1eadt th\u00f4ng th\u01b0\u1eddng th\u00ec kh\u00f4ng \u0111\u1ee7. Ch\u1ec9 c\u00f3 hi\u1ec3u s\u00e2u v\u1ec1 c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a thu\u1eadt to\u00e1n m\u1edbi c\u00f3 th\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c c\u00e1ch k\u1ebft h\u1ee3p ch\u00fang v\u1edbi nhau.</p> <p>V\u00ec v\u1eady, khi h\u1ecdc m\u1ed9t gi\u1ea3i thu\u1eadt m\u1edbi, b\u1ea1n ph\u1ea3i hi\u1ec3u \u0111\u01b0\u1ee3c code ch\u1ea1y nh\u01b0 th\u1ebf n\u00e0o, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 bao nhi\u00eau, ph\u1ea7n n\u00e0o c\u1ee7a code c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u01b0\u1ee3c v\u00e0 \u1ea3nh h\u01b0\u1edfng nh\u01b0 th\u1ebf n\u00e0o \u0111\u1ebfn thu\u1eadt to\u00e1n. Vi\u1ec7c nh\u1edb c\u00e1ch code m\u1ed9t gi\u1ea3i thu\u1eadt c\u0169ng c\u1ef1c k\u00ec quan tr\u1ecdng, b\u1edfi v\u00ec n\u1ebfu kh\u00f4ng c\u00f3 kinh nghi\u1ec7m c\u00e0i \u0111\u1eb7t th\u00ec s\u1ebd r\u1ea5t kh\u00f3 \u0111\u1ec3 t\u00ecm l\u1ed7i. S\u1eed d\u1ee5ng thu\u1eadt to\u00e1n m\u1ed9t c\u00e1ch s\u00e1ng t\u1ea1o \u0111\u1ec3 gi\u1ea3i quy\u1ebft nhi\u1ec1u b\u00e0i to\u00e1n kh\u00e1c nhau c\u0169ng l\u00e0 m\u1ed9t c\u00e1ch luy\u1ec7n t\u1eadp h\u1eefu \u00edch. \u00cdt ra th\u00ec ta c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c nh\u1eefng tr\u01b0\u1eddng h\u1ee3p n\u00e0o kh\u00f4ng ph\u00f9 h\u1ee3p \u0111\u1ec3 d\u00f9ng thu\u1eadt to\u00e1n n\u00e0y. \u0110\u00f3 l\u00e0 l\u00fd do t\u1ea1i sao n\u00ean h\u1ecdc nh\u1eefng k\u0129 thu\u1eadt n\u1ec1n t\u1ea3ng nh\u01b0 chia \u0111\u1ec3 tr\u1ecb (divide-and-conquer), quy ho\u1ea1ch \u0111\u1ed9ng (dynamic programming), tham lam (greedy algorithms) tr\u01b0\u1edbc nh\u1eefng thu\u1eadt to\u00e1n c\u1ee5 th\u1ec3 kh\u00e1c, b\u1edfi v\u00ec nh\u1eefng k\u0129 thu\u1eadt \u0111\u00f3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00f9y bi\u1ebfn m\u1ed9t khi b\u1ea1n \u0111\u00e3 hi\u1ec3u c\u00e1ch ho\u1ea1t \u0111\u1ed9ng.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#phat-bieu-lai-bai-toan-theo-cach-khac","title":"Ph\u00e1t bi\u1ec3u l\u1ea1i b\u00e0i to\u00e1n theo c\u00e1ch kh\u00e1c","text":"<p>T\u00ecnh hu\u1ed1ng n\u00e0y r\u1ea5t quen thu\u1ed9c: b\u1ea1n c\u1ea3m th\u1ea5y m\u00ecnh \u0111u\u1ed1i s\u1ee9c b\u1edfi vi\u1ec7c c\u1ed1 g\u1eafng t\u00ecm ra d\u1ea1ng b\u00e0i c\u1ee7a \u0111\u1ec1. \u0110i\u1ec1u n\u00e0y x\u1ea3y ra c\u00f3 l\u1ebd v\u00ec \u0111\u1ec1 b\u00e0i c\u1ea7n ph\u1ea3i bi\u1ebfn \u0111\u1ed5i \u0111\u1ec3 ti\u1ebfp c\u1eadn \u0111\u01b0\u1ee3c, khi bi\u1ebfn \u0111\u1ed5i \u0111\u1ec1 b\u00e0i th\u00ec ch\u00fang ta s\u1ebd d\u1ec1 d\u00e0ng nh\u1eadn ra v\u1ea5n \u0111\u1ec1 h\u01a1n. V\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh l\u00e0 b\u00e0i Game of Fifteen - SRM 172. Trong b\u00e0i n\u00e0y, b\u1ea1n c\u00f3 nh\u1eefng con s\u1ed1 t\u1eeb 1 \u0111\u1ebfn 9, b\u1ea1n c\u00f3 th\u1ec3 l\u1ea5y m\u1ed9t trong nh\u1eefng con s\u1ed1 \u0111\u00f3 theo l\u01b0\u1ee3t, n\u1ebfu b\u1ea1n c\u00f3 3 s\u1ed1 trong c\u00e1c s\u1ed1 b\u1ea1n \u0111\u00e3 ch\u1ecdn c\u00f3 t\u1ed5ng b\u1eb1ng 15 tr\u01b0\u1edbc \u0111\u1ed1i th\u1ee7, b\u1ea1n th\u1eafng. V\u1edbi b\u00e0i to\u00e1n n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3 \u0111i\u1ec1u ch\u1ec9nh l\u1ea1i \u0111\u1ec1 b\u00e0i b\u1eb1ng vi\u1ec7c \u0111\u1eb7t c\u00e1c con s\u1ed1 trong ma tr\u1eadn 3x3 (trong \u0111\u00f3 m\u1ed7i d\u00f2ng, m\u1ed7i c\u1ed9t v\u00e0 \u0111\u01b0\u1eddng ch\u00e9o c\u00f3 t\u1ed5ng b\u1eb1ng nhau, trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 15). Ngay l\u1eadp t\u1ee9c b\u1ea1n nh\u1eadn ra r\u1eb1ng \u0111\u00e2y ch\u1ec9 l\u00e0 tr\u00f2 ch\u01a1i Tic-Tac-Toe. Vi\u1ec7c thay \u0111\u1ed5i n\u00e0y \u0111\u00e3 bi\u1ebfn m\u1ed9t b\u00e0i to\u00e1n m\u00e0 b\u1ea1n ch\u01b0a t\u1eebng g\u1eb7p, th\u00e0nh m\u1ed9t b\u00e0i to\u00e1n b\u1ea1n \u0111\u00e3 ti\u1ebfp x\u00fac nhi\u1ec1u h\u01a1n. M\u1ed9t s\u1ed1 nh\u00e0 to\u00e1n h\u1ecdc g\u1ecdi n\u00f3 l\u00e0 c\u00e1ch ti\u1ebfp c\u1eadn \\(ABA^{-1}\\), b\u1edfi v\u00ec: \u0111\u1ea7u ti\u00ean b\u1ea1n thay \u0111\u1ed5i d\u1ea1ng \u0111\u1ec1 b\u00e0i \\((A)\\), sau \u0111\u00f3 gi\u1ea3i n\u00f3 \\((B)\\), v\u00e0 tr\u1ea3 ng\u01b0\u1ee3c l\u1ea1i v\u1ea5n \u0111\u1ec1 ban \u0111\u1ea7u \\(A^{-1}\\). C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y r\u1ea5t ph\u1ed5 bi\u1ebfn trong vi\u1ec7c gi\u1ea3i nh\u1eefng b\u00e0i to\u00e1n ph\u1ee9c t\u1ea1p nh\u01b0 diagonalizing matrices v\u00e0 gi\u1ea3i Rubik.</p> <p>C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y \u0111\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn \u0111\u1ec3 l\u00e0m \u0111\u01a1n gi\u1ea3n \u0111i nh\u1eefng ph\u00e9p to\u00e1n c\u01a1 b\u1ea3n. V\u00ed d\u1ee5: HexagonIntersections - SRM 206. Trong b\u00e0i to\u00e1n n\u00e0y, ch\u00fang ta c\u1ea7n t\u00ecm s\u1ed1 h\u00ecnh 6 c\u1ea1nh ch\u1ea1m m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng cho tr\u01b0\u1edbc. B\u00e0i to\u00e1n tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n n\u1ebfu b\u1ea1n l\u1eadt nghi\u00eang c\u00e1i l\u01b0\u1edbi qua, n\u00ean nh\u1eefng h\u00ecnh 6 c\u1ea1nh c\u00f3 c\u1ea1nh song song v\u1edbi tr\u1ee5c x v\u00e0 y, b\u00e0i to\u00e1n v\u1eabn gi\u1eef nguy\u00ean \u0111\u00e1p \u00e1n nh\u01b0 c\u0169, nh\u01b0ng \u0111\u00e3 \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u.</p> <p>H\u00e3y ch\u00fa \u00fd \u0111\u1ebfn l\u00fac debug n\u1ebfu b\u1ea1n s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y. Nh\u1edb r\u1eb1ng \u0111\u00e1p \u00e1n tr\u1ea3 v\u1ec1 l\u00e0 \u0111\u00e1p \u00e1n c\u1ee7a b\u00e0i to\u00e1n \u0111\u00e3 b\u1ecb bi\u1ebfn \u0111\u1ed5i, b\u1ea1n c\u1ea7n ph\u1ea3i tr\u1ea3 l\u1ea1i \u0111\u00e1p \u00e1n cho b\u00e0i to\u00e1n ban \u0111\u1ea7u. \u0110\u1ec3 kh\u00f4ng ph\u1ea3i qu\u00ean, b\u1ea1n n\u00ean \u0111\u1ec3 l\u1ea1i m\u1ed9t v\u00e0i comment \u1edf ph\u1ea7n \u0111\u00f3.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#go-bo-nhung-inh-nghia","title":"G\u1ee1 b\u1ecf nh\u1eefng \u0111\u1ecbnh ngh\u0129a","text":"<p>Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 m\u1ed9t m\u1eb9o c\u0169 c\u1ee7a nh\u1eefng nh\u00e0 to\u00e1n h\u1ecdc, \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft \u0111\u1ed1i v\u1edbi nh\u1eefng tr\u01b0\u1eddng h\u1ee3p \u0111\u1ec1 b\u00e0i \u0111\u01b0\u1ee3c cho v\u1edbi h\u00e0ng \u0111\u1ed1ng c\u00e1c \u0111\u1ecbnh ngh\u0129a ch\u1ed3ng l\u00ean nhau, n\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 th\u00e1o g\u1ee1 nh\u1eefng r\u1ed1i r\u1eafm trong \u0111\u1ec1 b\u00e0i \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c c\u00e1ch ti\u1ebfp c\u1eadn th\u00edch h\u1ee3p. Khi b\u1ea1n \u0111\u1ecdc m\u1ed9t \u0111\u1ecbnh ngh\u0129a n\u00e0o \u0111\u00f3 m\u00e0 b\u1ea1n ch\u01b0a bao gi\u1edd th\u1ea5y tr\u01b0\u1edbc \u0111\u00e2y, c\u1ed1 g\u1eafng ngh\u0129 c\u00e1ch l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 code n\u00f3. N\u1ebfu ch\u01b0\u01a1ng tr\u00ecnh y\u00eau c\u1ea7u b\u1ea1n t\u00ecm ra m\u1ed9t grozmojt \u0111\u01a1n gi\u1ea3n nh\u1ea5t trong t\u1eadp s\u1ed1 nguy\u00ean (\u1edf \u0111\u00e2y grozmojt l\u00e0 m\u1ed9t thu\u1eadt ng\u1eef kh\u00f4ng c\u00f3 th\u1eadt \u0111\u1ec3 v\u00ed d\u1ee5 v\u1ec1 \u0111\u1ecbnh ngh\u0129a b\u1ea1n ch\u01b0a bao gi\u1edd th\u1ea5y). \u0110\u1ea7u ti\u00ean b\u1ea1n ph\u1ea3i t\u00ecm ra \u0111\u01b0\u1ee3c l\u00e0m sao \u0111\u1ec3 code c\u1ee7a b\u1ea1n nh\u1eadn ra \u0111\u00f3 l\u00e0 m\u1ed9t grozmojt, r\u1ed3i sau \u0111\u00f3 t\u00ecm c\u00e1ch \u0111\u1ec3 t\u00ecm ki\u1ebfm n\u00f3. C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y r\u1ea5t gi\u1ed1ng v\u1edbi c\u00e1c ti\u1ebfp c\u1eadn t\u1eeb d\u01b0\u1edbi l\u00ean (bottom-up programming), nh\u01b0ng l\u00e0m vi\u1ec7c tr\u00ean \u0111\u1ecbnh ngh\u0129a thay v\u00ec tr\u00ean c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh con.</p> <p>Nh\u1eefng b\u00e0i to\u00e1n m\u00f4 ph\u1ecfng c\u0169ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u1edbi c\u00e1c chi\u1ebfn thu\u1eadt t\u01b0\u01a1ng t\u1ef1. C\u00e1ch t\u1ed1t nh\u1ea5t \u0111\u1ec3 l\u00e0m nh\u1eefng b\u00e0i to\u00e1n m\u00f4 ph\u1ecfng l\u00e0 t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng gi\u1ed1ng nh\u01b0 v\u1eady, c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c h\u00e0nh \u0111\u1ed9ng \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u. B\u1eb1ng c\u00e1ch \u0111\u00f3, b\u1ea1n s\u1ebd kh\u00f4ng ph\u1ea3i lo b\u1ea1n c\u00f3 \u0111\u01b0a \u0111\u1ee7 th\u00f4ng tin tr\u1ea1ng th\u00e1i v\u00e0o c\u00e1c h\u00e0m hay kh\u00f4ng, b\u1edfi v\u00ec t\u1ea5t c\u1ea3 th\u00f4ng tin \u0111\u00e3 g\u00f3i g\u1ecdn trong \u0111\u1ed1i t\u01b0\u1ee3ng, c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y tr\u1edf n\u00ean n\u00ean ti\u1ec7n l\u1ee3i v\u00e0 code \u0111\u01b0\u1ee3c atomic r\u1ea5t nhanh. \u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00fang \u0111\u1eafn n\u1ebfu m\u1ed9t thu\u1eadt to\u00e1n c\u1ea7n \u0111\u01b0\u1ee3c m\u00f4 ph\u1ecfng \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 b\u01b0\u1edbc th\u1ef1c hi\u1ec7n (nh\u01b0 MergeSort), ho\u1eb7c l\u00e0 s\u1ed1 \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb trong c\u00e1c thu\u1eadt to\u00e1n kh\u00e1c (nh\u01b0 ImmutableTrees). Trong nh\u1eefng tr\u01b0\u1eddng h\u1ee3p nh\u01b0 v\u1eady, t\u00ednh g\u1ecdn g\u00e0ng v\u00e0 \u0111\u01a1n gi\u1ea3n c\u1ee7a code l\u00e0m cho vi\u1ec7c suy ngh\u0129 c\u00e1c b\u01b0\u1edbc ti\u1ebfp theo d\u1ec5 d\u00e0ng h\u01a1n.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#bai-toan-co-the-giai-uoc","title":"B\u00e0i to\u00e1n c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c","text":"<p>C\u00f3 m\u1ed9t b\u00e0i to\u00e1n v\u1ec1 h\u00ecnh h\u1ecdc nh\u01b0 th\u1ebf n\u00e0y: b\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t c\u1eb7p h\u00ecnh tr\u00f2n \u0111\u1ed3ng t\u00e2m v\u00e0 b\u1ea1n ch\u1ec9 c\u00f3 \u0111\u1ed9 d\u00e0i d\u00e2y cung c\u1ee7a h\u00ecnh tr\u00f2n b\u00ean ngo\u00e0i m\u00e0 ti\u1ebfp tuy\u1ebfn v\u1edbi h\u00ecnh tr\u00f2n b\u00ean trong (k\u00ed hi\u1ec7u l\u00e0 x). B\u1ea1n \u0111\u01b0\u1ee3c h\u1ecfi l\u00e0 di\u1ec7n t\u00edch \u1edf gi\u1eefa 2 h\u00ecnh tr\u00f2n l\u00e0 bao nhi\u00eau. B\u1ea1n ngh\u0129 r\u1eb1ng: \u201cn\u1ebfu b\u00e0i n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c th\u00ec b\u00e1n k\u00ednh c\u1ee7a \u0111\u01b0\u1eddng tr\u00f2n b\u00ean trong l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft v\u1edbi vi\u1ec7c t\u00ednh to\u00e1n, n\u00ean m\u00ecnh s\u1ebd \u0111\u1eb7t n\u00f3 b\u1eb1ng 0. B\u1edfi v\u00ec di\u1ec7n t\u00edch c\u1ee7a h\u00ecnh tr\u00f2n b\u00ean trong b\u1eb1ng 0, ho\u1eb7c b\u1ecb l\u00e0m suy bi\u1ebfn \u1edf t\u00e2m c\u1ee7a h\u00ecnh tr\u00f2n b\u00ean ngo\u00e0i, n\u00ean d\u00e2y cung c\u1ee7a h\u00ecnh tr\u00f2n b\u00ean ngo\u00e0i \u0111i qua t\u00e2m, do \u0111\u00f3 \u0111\u01b0\u1eddng k\u00ednh v\u00e0 di\u1ec7n t\u00edch c\u1ee7a h\u00ecnh tr\u00f2n ngo\u00e0i b\u1eb1ng \\(\\pi(x/2)^{2}\\)\u201d. Ch\u00fa \u00fd r\u1eb1ng vi\u1ec7c ch\u1ee9ng minh to\u00e1n h\u1ecdc \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a b\u00e0i n\u00e0y th\u00ec kh\u00f3 h\u01a1n, nh\u01b0ng s\u1ef1 th\u1eadt l\u00e0 vi\u1ec7c \u0111\u00e1p \u00e1n c\u00f3 t\u1ed3n t\u1ea1i l\u00e0m cho b\u00e0i to\u00e1n d\u1ec5 h\u01a1n. B\u1edfi v\u00ec ng\u01b0\u1eddi ra \u0111\u1ec1 ph\u1ea3i vi\u1ebft \u0111\u00e1p \u00e1n cho b\u00e0i to\u00e1n, b\u1ea1n bi\u1ebft r\u1eb1ng c\u00e1c b\u00e0i to\u00e1n \u0111\u00f3 \u0111\u1ec1u c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c, \u0111\u00f3 c\u0169ng l\u00e0 m\u1ed9t l\u1ee3i th\u1ebf l\u1edbn trong nh\u1eefng contest c\u1ee7a SRM.</p> <p>C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y c\u0169ng \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c cho suy ngh\u0129 r\u1eb1ng ng\u01b0\u1eddi ra \u0111\u1ec1 s\u1ebd t\u00ecm m\u1ed9t d\u1ea1ng b\u00e0i to\u00e1n c\u1ee5 th\u1ec3 n\u00e0o \u0111\u00f3, v\u00e0 th\u1ec9nh tho\u1ea3ng d\u1ef1a v\u00e0o vi\u1ec7c ch\u1ec9nh s\u1eeda \u0111\u1ec1 b\u00e0i g\u1ed1c, ta \u0111\u01b0\u1ee3c g\u1ee3i \u00fd h\u01b0\u1edbng l\u00e0m(\u0111\u1eb7c bi\u1ec7t trong tr\u01b0\u1eddng h\u1ee3p khi b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c xem l\u00e0 qu\u00e1 kh\u00f3). M\u1ed9t v\u00e0i v\u00ed d\u1ee5 nh\u01b0 x\u00e9t qua c\u00e1c \u0111i\u1ec1u ki\u1ec7n ban \u0111\u1ea7u c\u1ee7a \u0111\u1ec1 b\u00e0i nh\u01b0 m\u1ea3ng ch\u1ec9 c\u00f3 nhi\u1ec1u nh\u1ea5t 20 ph\u1ea7n t\u1eed (m\u00e0 r\u1ea5t nhi\u1ec1u coder c\u00f3 kinh nghi\u1ec7m s\u1ebd n\u00f3i r\u1eb1ng t\u00e1c gi\u1ea3 mu\u1ed1n b\u1ea1n s\u1eed d\u1ee5ng brute-force cho b\u00e0i n\u00e0y), hay gi\u1edbi h\u1ea1n s\u1ed1 nguy\u00ean trong kho\u1ea3ng t\u1eeb 1 \u0111\u1ebfn 10000 (cho ph\u00e9p nh\u00e2n c\u00e1c s\u1ed1 v\u1edbi nhau m\u00e0 kh\u00f4ng tr\u00e0n). B\u1eb1ng vi\u1ec7c d\u1ef1a v\u00e0o c\u00e1c \u0111i\u1ec1u ki\u1ec7n gi\u1edbi h\u1ea1n n\u00e0y c\u1ee7a \u0111\u1ec1 b\u00e0i, b\u1ea1n s\u1ebd gi\u1edbi h\u1ea1n l\u1ea1i \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u00e0i to\u00e1n v\u00e0 t\u00ecm ra c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u01a1n gi\u1ea3n v\u00e0 t\u1ed1t h\u01a1n.</p> <p>Th\u1ec9nh tho\u1ea3ng \u0111\u1ed9 kh\u00f3 c\u1ee7a b\u00e0i to\u00e1n c\u0169ng c\u00f3 th\u1ec3 g\u1ee3i \u00fd \u0111\u01b0\u1ee3c c\u00e1ch gi\u1ea3i n\u00f3. V\u00ed d\u1ee5, b\u00e0i FanFailure - SRM 195 Div I. B\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn t\u1eadp h\u1ee3p con (subsets), nhi\u1ec1u nh\u1ea5t (maximal) v\u00e0 \u00edt nh\u1ea5t (minimal), n\u00ean b\u1ea1n s\u1ebd ngh\u0129 r\u1eb1ng brute-force s\u1ebd c\u00f3 t\u00e1c d\u1ee5ng, r\u1ed3i sau \u0111\u00f3 b\u1ea1n th\u1ea5y r\u1eb1ng m\u1ea3ng nhi\u1ec1u nh\u1ea5t \u0111\u1ebfn 50 ph\u1ea7n t\u1eed. \\(2^{50}\\) t\u1eadp con kh\u00e1c nhau s\u1ebd l\u00e0m b\u1ea1n b\u1ecf ngay c\u00e1i \u00fd t\u01b0\u1edfng brute-force (ng\u01b0\u1eddi ra \u0111\u1ec1 ch\u00fa tr\u1ecdng \u0111\u1ebfn c\u00e1ch t\u01b0 duy h\u01a1n l\u00e0 k\u0129 n\u0103ng code), v\u00e0 t\u00ecm m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c... Nh\u01b0ng khi b\u1ea1n nh\u1eadn ra \u0111\u00f3 l\u00e0 b\u00e0i Div I Easy v\u00e0 n\u00f3 c\u0169ng tr\u00f4ng kh\u00f4ng \u0111\u1ebfn n\u1ed7i kh\u00f3 nh\u01b0 v\u1eady, th\u00ec b\u1ea1n s\u1ebd ngh\u0129 \u0111\u1ebfn c\u00e1ch tham lam (greedy). C\u00f3 th\u1ec3 b\u1ea1n s\u1ebd kh\u00f4ng r\u00fat ra \u0111\u01b0\u1ee3c nh\u1eadn x\u00e9t \u0111\u00f3 n\u1ebfu n\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 b\u00e0i Div I Easy.</p> <p>H\u00e3y nh\u1edb r\u1eb1ng \u0111\u00f3 ch\u1ec9 l\u00e0 nh\u1eefng m\u1eb9o nh\u1ecf v\u00e0 kh\u00f4ng n\u00ean quan t\u00e2m nhi\u1ec1u \u0111\u1ebfn vi\u1ec7c t\u1ea1i sao n\u00f3 ho\u1ea1t \u0111\u1ed9ng hay kh\u00f4ng, n\u00f3 ch\u1ec9 g\u1ee3i \u00fd cho ta bi\u1ebft r\u1eb1ng nh\u1eefng g\u00ec ng\u01b0\u1eddi ra \u0111\u1ec1 \u0111ang ngh\u0129. H\u01a1n th\u1ebf n\u1eefa, n\u1ebfu ng\u01b0\u1eddi ra \u0111\u1ec1 thu\u1ed9c d\u1ea1ng ng\u01b0\u1eddi th\u00edch \u0111\u00e1nh \u0111\u1ed1, c\u00e2n n\u00e3o ng\u01b0\u1eddi kh\u00e1c, th\u00ec c\u00e1ch n\u00e0y s\u1ebd kh\u00f4ng th\u1ec3 d\u00f9ng \u0111\u01b0\u1ee3c. Mi\u1ec5n l\u00e0 b\u1ea1n \u0111\u01b0a ra c\u00e1ch ti\u1ebfp c\u1eadn d\u1ef1a tr\u00ean nh\u1eefng l\u1eadp lu\u1eadn logic thay v\u00ec \u0111o\u00e1n m\u00f2, th\u00ec \u0111\u00e2y c\u0169ng l\u00e0 m\u1ed9t m\u1eb9o kh\u00e1 h\u1eefu \u00edch.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#chia-truong-hop","title":"Chia tr\u01b0\u1eddng h\u1ee3p","text":"<p>C\u00f3 m\u1ed9t s\u1ed1 b\u00e0i \u0111\u01b0\u1ee3c gi\u1ea3i b\u1eb1ng vi\u1ec7c chia b\u00e0i to\u00e1n theo t\u1eebng tr\u01b0\u1eddng h\u1ee3p ch\u1ee9 kh\u00f4ng ph\u1ea3i theo t\u1eebng b\u01b0\u1edbc. B\u1eb1ng c\u00e1ch chia nh\u1ecf b\u00e0i to\u00e1n th\u00e0nh nh\u1eefng tr\u01b0\u1eddng h\u1ee3p, v\u1edbi m\u1ed7i t\u1eadp \u0111\u1ea7u v\u00e0o kh\u00e1c nhau, b\u1ea1n c\u00f3 th\u1ec3 vi\u1ebft m\u1ed9t h\u00e0m con \u0111\u1ec3 gi\u1ea3i quy\u1ebft n\u00f3 v\u00e0 \u0111\u1ec1u \u0111\u00f3 hi\u1ec3n nhi\u00ean l\u00e0 d\u1ec5 h\u01a1n. X\u00e9t b\u00e0i TeamPhoto - SRM 167 Div I Medium. B\u00e0i n\u00e0y chia tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n nh\u01b0ng r\u1ea5t kh\u00f3 \u0111\u1ec3 gi\u1ea3i. N\u1ebfu b\u1ea1n chia b\u00e0i to\u00e1n th\u00e0nh nh\u1eefng tr\u01b0\u1eddng h\u1ee3p ri\u00eang, b\u1ea1n s\u1ebd th\u1ea5y r\u1eb1ng b\u00e0i to\u00e1n ban \u0111\u1ea7u kh\u00f4ng th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i thu\u1eadt to\u00e1n tham lam, th\u00ec m\u1ed7i tr\u01b0\u1eddng h\u1ee3p c\u1ee7a n\u00f3 c\u00f3 th\u1ec3, v\u00e0 b\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn tr\u01b0\u1eddng h\u1ee3p t\u1ed1i \u01b0u nh\u1ea5t \u0111\u1ec3 \u0111\u01b0a ra \u0111\u00e1p \u00e1n.</p> <p>Tr\u01b0\u1eddng h\u1ee3p th\u01b0\u1eddng d\u00f9ng c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y nh\u1ea5t l\u00e0 khi c\u1ea7n ph\u1ea3i b\u1ecf \u0111i nh\u1eefng test \u1edf bi\u00ean, \u0111\u1ec3 ch\u00fang ta kh\u00f4ng ph\u1ea3i thay \u0111\u1ed5i solution ch\u00ednh qu\u00e1 nhi\u1ec1u. M\u1ed9t v\u00ed d\u1ee5 l\u00e0 b\u00e0i BirthdayOdds - SRM 174 Div I Easy, r\u1ea5t nhi\u1ec1u ng\u01b0\u1eddi d\u00f9ng d\u00f2ng n\u00e0y \u0111\u1ec3 x\u1eed l\u00ed <code>if (daysInYears == 1) return 2;</code> cho tr\u01b0\u1eddng h\u1ee3p bi\u00ean. \u0110\u1ec3 tr\u00e1nh nh\u1eefng tr\u01b0\u1eddng h\u1ee3p nh\u01b0 th\u1ebf, ch\u00fang ta n\u00ean x\u00e9t ri\u00eang n\u00f3 ra. B\u1eb1ng c\u00e1ch th\u00eam v\u00e0o c\u00e1c d\u00f2ng code \u0111\u1ec3 ki\u1ec3m tra nh\u1eefng test \u1edf bi\u00ean, \u0111\u1ed9 an to\u00e0n c\u1ee7a solution \u0111\u01b0\u1ee3c t\u0103ng l\u00ean, v\u00e0 d\u1ec5 d\u00e0ng h\u01a1n trong vi\u1ec7c ki\u1ec3m tra c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00f3 l\u00e0 \u0111\u00fang.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#ke-hoach-ben-trong-ke-hoach","title":"K\u1ebf ho\u1ea1ch b\u00ean trong k\u1ebf ho\u1ea1ch","text":"<p>Nh\u01b0 \u0111\u00e3 n\u00f3i ph\u00eda tr\u00ean, c\u00e1c c\u00e1ch ti\u1ebfp c\u1eadn m\u1ed9t b\u00e0i to\u00e1n kh\u00f4ng d\u1ec5 ph\u00e2n lo\u1ea1i. H\u01a1n n\u1eefa c\u00f3 nhi\u1ec1u b\u00e0i ph\u1ea3i k\u1ebft h\u1ee3p r\u1ea5t nhi\u1ec1u b\u01b0\u1edbc \u0111\u1ec3 \u0111\u01b0a ra m\u1ed9t \u0111\u00e1p \u00e1n ho\u00e0n ch\u1ec9nh. V\u00ed d\u1ee5 nh\u01b0 b\u00e0i MagicianTour - SRM 191 Div I Hard. \u0110\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i n\u00e0y c\u1ea7n ph\u1ea3i l\u00e0m 2 b\u01b0\u1edbc: b\u01b0\u1edbc \u0111\u1ea7u ti\u00ean c\u1ea7n vi\u1ec7c t\u00ecm ki\u1ebfm tr\u00ean \u0111\u1ed3 th\u1ecb \u0111\u1ec3 t\u00ecm nh\u1eefng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng (connected components) v\u00e0 2-coloring c\u1ee7a n\u00f3 (c\u00e1ch t\u00f4 \u0111\u1ed3 th\u1ecb ch\u1ec9 b\u1eb1ng 2 m\u00e0u), b\u01b0\u1edbc th\u1ee9 hai ph\u1ea3i d\u00f9ng quy ho\u1ea1ch \u0111\u1ed9ng gi\u1ed1ng b\u00e0i to\u00e1n balo. Trong nh\u1eefng tr\u01b0\u1eddng h\u1ee3p nh\u01b0 th\u1ebf n\u00e0y, h\u00e3y nh\u1edb r\u1eb1ng nhi\u1ec1u l\u00fac s\u1ebd c\u1ea7n ph\u1ea3i \u00e1p d\u1ee5ng nhi\u1ec1u h\u01a1n m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn cho m\u1ed9t b\u00e0i to\u00e1n. M\u1ed9t v\u00ed d\u1ee5 kh\u00e1c l\u00e0 b\u00e0i TopographicalImage - SRM 210 Div II Hard, b\u00e0i n\u00e0y y\u00eau c\u1ea7u t\u00ecm g\u00f3c nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u00ednh gi\u00e1 tr\u1ecb cho \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t trong m\u1ed9t gi\u1edbi h\u1ea1n nh\u1ea5t \u0111\u1ecbnh. \u0110\u1ec3 gi\u1ea3i quy\u1ebft n\u00f3, ch\u00fa \u00fd r\u1eb1ng vi\u1ec7c t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 l\u00e0m b\u1eb1ng ch\u1eb7t nh\u1ecb ph\u00e2n (binary search), nh\u01b0ng ta c\u0169ng c\u1ea7n ph\u1ea3i suy ngh\u0129 k\u0129 h\u01a1n n\u1eefa, ph\u1ea7n k\u1ebf ho\u1ea1ch b\u00ean trong l\u00e0 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng gi\u1ea3i thu\u1eadt Floyd-Warshall \u0111\u1ec3 xem g\u00f3c \u0111\u00e3 th\u1ecfa m\u00e3n ch\u01b0a.</p> <p>Nh\u1edb r\u1eb1ng m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn kh\u00f4ng ph\u1ea3i ch\u1ec9 l\u00e0 \u201c\u1ed2, m\u00ecnh bi\u1ebft c\u00e1ch chia nh\u1ecf b\u00e0i n\u00e0y ... L\u00e0m th\u00f4i!\u201d. \u00dd t\u01b0\u1edfng cho vi\u1ec7c t\u00ecm c\u00e1ch ti\u1ebfp c\u1eadn l\u00e0 suy ngh\u0129, l\u1eadp lu\u1eadn c\u00f3 k\u1ebf ho\u1ea1ch v\u1ec1: c\u00e1c b\u01b0\u1edbc c\u1ea7n l\u00e0m trong code c\u1ee7a b\u1ea1n, \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n n\u00e0y nh\u01b0 th\u1ebf n\u00e0o, l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 l\u01b0u v\u00e0 truy\u1ec1n gi\u00e1 tr\u1ecb c\u00e1c bi\u1ebfn, code c\u00f3 pass \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t kh\u00f4ng, n\u01a1i n\u00e0o d\u1ec5 sinh ra bug nh\u1ea5t. N\u1ebfu ch\u00fang ta l\u00ean k\u1ebf ho\u1ea1ch k\u0129 c\u00e0ng th\u00ec kh\u1ea3 n\u1eafng \u0111\u00fang c\u00e0ng cao h\u01a1n. V\u1edbi m\u1ed7i c\u00e1ch ti\u1ebfp c\u1eadn th\u00ec ph\u1ea3i c\u00f3 nh\u1eefng b\u01b0\u1edbc l\u00ean k\u1ebf ho\u1ea1ch cho c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u00f3.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#thay-oi-cac-cach-tiep-can","title":"Thay \u0111\u1ed5i c\u00e1c c\u00e1ch ti\u1ebfp c\u1eadn","text":"<p>Kh\u00f4ng bao gi\u1edd c\u00f3 c\u00e1ch ti\u1ebfp c\u1eadn t\u1ed1t nh\u1ea5t cho t\u1ea5t c\u1ea3 c\u00e1c coder, lu\u00f4n lu\u00f4n c\u00f3 \u00edt nh\u1ea5t 2 c\u00e1ch \u0111\u1ec3 ti\u1ebfp c\u1eadn m\u1ed9t v\u1ea5n \u0111\u1ec1. H\u00e3y x\u00e9t b\u00e0i OhamaLow - SRM 206 Div I Easy. C\u00e1ch th\u00f4ng d\u1ee5ng h\u01a1n \u0111\u1ec3 ti\u1ebfp c\u1eadn b\u00e0i n\u00e0y l\u00e0 th\u1eed t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra, v\u1edbi nh\u1eefng c\u1ea5u h\u00ecnh th\u1ecfa m\u00e3n y\u00eau c\u1ea7u th\u00ec sort l\u1ea1i v\u00e0 so s\u00e1nh n\u00f3 v\u1edbi \u0111\u00e1p \u00e1n \u0111\u1ec3 c\u1eadp nh\u1eadt l\u1ea1i \u0111\u00e1p \u00e1n. \u0110\u00e2y l\u00e0 chi\u1ebfn thu\u1eadt t\u00ecm ki\u1ebfm v\u00e9t c\u1ea1n ph\u1ed5 bi\u1ebfn nh\u1ea5t. Nh\u01b0ng n\u00f3 kh\u00f4ng ch\u1ec9 c\u00f3 v\u1eady, h\u00e3y nh\u1edb r\u1eb1ng ph\u1ea3i lu\u00f4n c\u00f3 nh\u1eefng ph\u00e2n t\u00edch nh\u1ecf trong nh\u1eefng ph\u00e2n t\u00edch l\u1edbn. B\u1ea1n ph\u1ea3i t\u00ecm ra c\u00e1ch l\u00e0m sao \u0111\u1ec3 t\u1ea1o ra t\u1eebng c\u1ea5u h\u00ecnh (c\u00f3 th\u1ec3 c\u00e0i b\u1eb1ng \u0111\u1ec7 quy hay s\u1eed d\u1ee5ng nhi\u1ec1u v\u00f2ng l\u1eb7p l\u1ed3ng nhau), l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 l\u01b0u nh\u1eefng c\u1ea5u h\u00ecnh l\u1ea1i (m\u1ea3ng, x\u00e2u, hay th\u1eadm ch\u00ed d\u00f9ng class) v\u00e0 l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 so s\u00e1nh nh\u1eefng c\u1ea5u h\u00ecnh \u0111\u00f3. \u1ede m\u1ed7i b\u01b0\u1edbc c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch \u0111\u1ec3 l\u00e0m v\u00e0 h\u1ea5u h\u1ebft t\u1ea5t c\u1ea3 c\u00e1c c\u00e1ch l\u00e0m \u0111\u1ec1u ch\u1ea1y \u0111\u01b0\u1ee3c. Nh\u01b0 \u0111\u00e3 n\u00f3i, c\u00f3 r\u1ea5t nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p ta t\u00ecm \u0111\u01b0\u1ee3c nhi\u1ec1u c\u00e1ch x\u1eed l\u00ed kh\u00e1c nhau cho c\u00f9ng m\u1ed9t v\u1ea5n \u0111\u1ec1. V\u00ed d\u1ee5 nh\u01b0 b\u00e0i to\u00e1n y\u00eau c\u1ea7u b\u1ea1n t\u00ecm m\u1ed9t c\u1ea5u h\u00ecnh th\u1ecfa m\u00e3n 2 \u0111i\u1ec1u ki\u1ec7n: \u0111i\u1ec1u ki\u1ec7n b\u1eaft bu\u1ed9c v\u00e0 \u0111i\u1ec1u ki\u1ec7n t\u1ed1i \u01b0u. Thay v\u00ec t\u1ea1o nh\u1eefng c\u1ea5u h\u00ecnh th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n b\u1eaft bu\u1ed9c, r\u1ed3i duy\u1ec7t qua ch\u1ecdn c\u1ea5u h\u00ecnh t\u1ed1i \u01b0u nh\u1ea5t, ta c\u00f3 th\u1ec3 t\u1ea1o ra t\u1ea5t c\u1ea3 c\u00e1c c\u1ea5u h\u00ecnh, s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 t\u1eeb t\u1ed1t nh\u1ea5t \u0111\u1ebfn x\u1ea5u nh\u1ea5t, r\u1ed3i ch\u1ec9 c\u1ea7n ch\u1ecdn c\u1ea5u h\u00ecnh \u0111\u1ea7u ti\u00ean th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n b\u1eaft bu\u1ed9c. N\u00f3i c\u00e1ch kh\u00e1c, b\u1ea1n l\u1ea5y c\u00e1c x\u00e2u con 5 k\u00fd t\u1ef1 t\u1eeb x\u00e2u \"87654321\" \u0111\u1ec3 xem shared hand v\u00e0 player hand c\u00f3 th\u1ec3 t\u1ea1o th\u00e0nh chosen hand \u0111\u01b0\u1ee3c kh\u00f4ng, n\u1ebfu \u0111\u01b0\u1ee3c th\u00ec tr\u1ea3 l\u1ea1i v\u1ec1 k\u1ebft qu\u1ea3 \u0111\u00f3. C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y c\u0169ng \u0111\u00f2i h\u1ecfi nh\u1eefng b\u01b0\u1edbc \u0111i nh\u1ecf (l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 k\u1ebft h\u1ee3p shared hand v\u00e0 player hand, l\u00e0m th\u1ec3 n\u00e0o \u0111\u1ec3 ki\u1ebfm tra c\u00e1c c\u1ea5u h\u00ecnh, v\u00e2n v\u00e2n) nh\u01b0ng th\u1ec9nh tho\u1ea3ng (tr\u01b0\u1eddng h\u1ee3p n\u00e0y t\u1ed1t h\u01a1n) b\u1ea1n c\u00f3 th\u1ec3 chia nh\u1ecf n\u00f3 ra nhanh h\u01a1n.</p> <p>\u0110\u1ec3 c\u00f3 quy\u1ec1n ch\u1ecdn m\u1ed9t trong hai c\u00e1ch ti\u1ebfp c\u1eadn, b\u1ea1n ph\u1ea3i ngh\u0129 ra \u0111\u01b0\u1ee3c c\u1ea3 hai. C\u00e1ch luy\u1ec7n t\u1eadp cho vi\u1ec7c n\u00e0y l\u00e0 h\u00e3y t\u00ecm nhi\u1ec1u c\u00e1ch gi\u1ea3i kh\u00e1c nhau c\u1ee7a m\u1ed9t b\u00e0i to\u00e1n (v\u00ed d\u1ee5 nh\u01b0 gi\u1ea3i l\u1ea1i c\u00e1c b\u00e0i SRM \u0111\u00e3 tham gia v\u1edbi c\u00e1ch gi\u1ea3i kh\u00e1c). B\u1eb1ng c\u00e1ch n\u00e0y, b\u1ea1n s\u1ebd t\u0103ng \u0111\u01b0\u1ee3c kh\u1ea3 n\u0103ng t\u00ecm ki\u1ebfm nhi\u1ec1u c\u00e1ch ti\u1ebfp c\u1eadn v\u1ea5n \u0111\u1ec1, c\u00f3 th\u1ec3 \u0111\u00f3 l\u00e0 m\u1ed9t c\u00e1ch t\u1ed1t h\u01a1n, hay h\u01a1n, hay th\u1eadm chi l\u00e0 d\u1ec5 debug h\u01a1n.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#quay-lui-cac-cach-tiep-can-sai","title":"Quay lui c\u00e1c c\u00e1ch ti\u1ebfp c\u1eadn sai","text":"<p>Nh\u01b0 \u0111\u00e3 n\u00f3i \u0111\u1ebfn \u1edf ph\u1ea7n tr\u01b0\u1edbc, m\u1ed9t b\u00e0i to\u00e1n c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch ti\u1ebfp c\u1eadn l\u00e0 \u0111i\u1ec1u r\u1ea5t th\u01b0\u1eddng g\u1eb7p. B\u1ea1n c\u00f3 th\u1ec3 ch\u1ee3t ngh\u0129 \u0111\u1ebfn n\u00f3 khi \u0111ang code dang d\u1edf c\u00e1ch hi\u1ec7n t\u1ea1i. M\u1ed9t trong nh\u1eefng k\u0129 n\u0103ng kh\u00f3 \u0111\u1ec3 luy\u1ec7n t\u1eadp nh\u1ea5t khi tham gia SRM \u0111\u00f3 l\u00e0 kh\u1ea3 n\u0103ng \u0111\u1ec3 ho\u00e0n to\u00e0n t\u1eadp trung v\u00e0o c\u00e1ch ti\u1ebfp c\u1eadn hi\u1ec7n t\u1ea1i, kh\u00f4ng b\u1ecb ph\u00e2n t\u00e2m b\u1edfi c\u00f3 nhi\u1ec1u c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c. Nh\u1edb r\u1eb1ng b\u1ea1n s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c th\u01b0\u1edfng th\u00eam \u0111i\u1ec3m cho vi\u1ec7c code t\u1ed1i \u01b0u h\u01a1n, hay logic h\u01a1n. B\u1ea1n l\u1ea5y \u0111i\u1ec3m d\u1ef1a v\u00e0o kh\u1ea3 n\u0103ng gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c v\u1ea5n \u0111\u1ec1 nhanh nh\u1ea5t c\u00f3 th\u1ec3. N\u1ebfu b\u1ea1n ngh\u0129 ra \u0111\u01b0\u1ee3c m\u1ed9t h\u01b0\u1edbng gi\u1ea3i t\u1ed1t h\u01a1n h\u01b0\u1edbng gi\u1ea3i m\u00e0 b\u1ea1n \u0111\u00e3 code \u0111\u01b0\u1ee3c ph\u00e2n n\u1eeda, h\u00e3y ph\u00e2n t\u00edch xem b\u1ea1n s\u1ebd m\u1ea5t bao nhi\u00eau th\u1eddi gian \u0111\u1ec3 chuy\u1ec3n qua h\u01b0\u1edbng gi\u1ea3i \u0111\u00f3. Trong h\u1ea7u h\u1ebft tr\u01b0\u1eddng h\u1ee3p, s\u1ef1 thay \u0111\u1ed5i l\u00e0 kh\u00f4ng \u0111\u00e1ng.</p> <p>Kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng cho vi\u1ec7c t\u00ecm m\u1ed9t h\u01b0\u1edbng ti\u1ebfp c\u1eadn \u0111\u00fang \u0111\u1eafn trong l\u1ea7n \u0111\u1ea7u ti\u00ean. Code m\u1ed9t solution v\u00e0 debug n\u00f3 d\u1ec5 ch\u1ecbu h\u01a1n l\u00e0 vi\u1ec7c nh\u1eadn ra m\u00ecnh \u0111\u00e3 ho\u00e0n to\u00e0n \u0111i sai h\u01b0\u1edbng. N\u1ebfu b\u1ea1n g\u1eb7p ph\u1ea3i tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3, b\u1ea5t k\u1ec3 l\u00e0 g\u00ec, \u0111\u1eebng x\u00f3a n\u00f3.  \u0110\u1eb7t t\u00ean l\u1ea1i nh\u1eefng h\u00e0m ch\u00ednh hay b\u1ea5t k\u00ec h\u00e0m con hay c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e0o c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda \u0111\u01b0\u1ee3c. L\u00ed do l\u00e0 trong khi b\u1ea1n mu\u1ed1n code l\u1ea1i ho\u00e0n to\u00e0n nh\u1eefng d\u00f2ng code \u201cs\u1ea1ch\u201d m\u1edbi, b\u1ea1n ph\u1ea3i th\u1eeba nh\u1eadn r\u1eb1ng nh\u1eefng d\u00f2ng code c\u0169 c\u00f3 th\u1ec3 gi\u1ed1ng nh\u01b0 v\u1eady. Vi\u1ec7c code l\u1ea1i s\u1ebd l\u00e0m b\u1ea1n kh\u00f4ng ngh\u0129 ra \u0111\u01b0\u1ee3c th\u1ee9 g\u00ec m\u1edbi. H\u01a1n n\u1eefa, gi\u1eef l\u1ea1i code c\u0169 c\u00f3 th\u1ec3 gi\u00fap b\u1ea1n test nh\u1eefng c\u00e1ch ti\u1ebfp c\u1eadn ti\u1ebfp theo, c\u0169ng nh\u01b0 vi\u1ec7c t\u1ea1o ra test \u0111\u1ec3 t\u00ecm ra tr\u01b0\u1eddng h\u1ee3p sai cho c\u00e1c c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>M\u1eb7c d\u00f9 c\u1ea7n r\u1ea5t nhi\u1ec1u suy ngh\u0129 logic, vi\u1ec7c t\u00ecm c\u00e1ch ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t b\u1ed9 m\u00f4n khoa h\u1ecdc, m\u00e0 n\u00f3 l\u00e0 ch\u1ec9 l\u00e0 kh\u1ea3 n\u0103ng suy \u0111o\u00e1n v\u1edbi vi\u1ec7c chu\u1ea9n b\u1ecb k\u1ebf ho\u1ea1ch t\u1ed1t. Mu\u1ed1n \u0111\u1ea1t \u0111\u01b0\u1ee3c hi\u1ec7u qu\u1ea3 trong vi\u1ec7c ti\u1ebfp c\u1eadn b\u00e0i to\u00e1n c\u0169ng nh\u01b0 t\u1ef1 tin h\u01a1n v\u1edbi \u0111\u00e1p \u00e1n c\u1ee7a m\u00ecnh th\u00ec b\u1ea1n ph\u1ea3i t\u00ecm nh\u1eefng \u00fd t\u01b0\u1edfng s\u00e1ng t\u1ea1o, nh\u1eefng suy ngh\u0129 t\u1ec9 m\u1ec9, c\u1ea9n th\u1eadn. Vi\u1ec7c \u0111\u00f3 s\u1ebd ti\u1ebft ki\u1ec7m \u0111\u01b0\u1ee3c nhi\u1ec1u th\u1eddi gian cho b\u1ea1n trong l\u00fac code v\u00e0 debug. Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n tr\u01b0\u1edbc nh\u1eefng g\u00ec m\u00ecnh s\u1ebd code tr\u01b0\u1edbc khi ch\u1ea1m tay v\u00e0o b\u00e0n ph\u00edm ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c qua vi\u1ec7c luy\u1ec7n t\u1eadp, nh\u01b0ng ph\u1ea7n th\u01b0\u1edfng cho s\u1ef1 ch\u0103m ch\u1ec9 n\u00e0y l\u00e0 kh\u1ea3 n\u0103ng gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 c\u0169ng nh\u01b0 rating s\u1ebd l\u00ean nh\u01b0 di\u1ec1u g\u1eb7p gi\u00f3.</p>"},{"location":"translate/topcoder/Planning-an-Approach-to-a-Topcoder-Problem-Part-2/#nhung-bai-tap-a-e-cap-toi","title":"Nh\u1eefng b\u00e0i t\u1eadp \u0111\u00e3 \u0111\u1ec1 c\u1eadp t\u1edbi","text":"<ul> <li>TCI \u201902 Round 2 Div I Med \u2013 MatArith</li> <li>SRM 170 Div I Med \u2013 CityLink</li> <li>SRM 172 Div I Med \u2013 Fifteen</li> <li>SRM 206 Div I Hard \u2013 HexagonIntersections</li> <li>SRM 195 Div I Easy \u2013 FanFailure</li> <li>SRM 167 Div I Med \u2013 TeamPhoto</li> <li>SRM 174 Div I Easy \u2013 BirthdayOdds</li> <li>SRM 191 Div I Hard \u2013 MagicianTour</li> <li>SRM 210 Div II Hard \u2013 TopographicalImage</li> <li>SRM 206 Div I Easy \u2013 OmahaLow</li> </ul>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/","title":"B\u00e0i to\u00e1n RMQ v\u00e0 b\u00e0i to\u00e1n LCA","text":"<p>Ngu\u1ed3n: Topcoder</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, t\u00e1c gi\u1ea3 s\u1ebd gi\u1edbi thi\u1ec7u v\u1edbi b\u1ea1n 2 b\u00e0i to\u00e1n c\u01a1 b\u1ea3n: B\u00e0i to\u00e1n RMQ v\u00e0 b\u00e0i to\u00e1n LCA, c\u0169ng nh\u01b0 m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa 2 b\u00e0i to\u00e1n n\u00e0y.</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#cac-inh-nghia","title":"C\u00e1c \u0111\u1ecbnh ngh\u0129a","text":"<p>G\u1ec9a s\u1eed thu\u1eadt to\u00e1n c\u00f3 th\u1eddi gian ti\u1ec1n x\u1eed l\u00fd l\u00e0 \\(f(n)\\) v\u00e0 th\u1eddi gian tr\u1ea3 l\u1eddi 1 truy v\u1ea5n l\u00e0 \\(g(n)\\). Ta k\u00fd hi\u1ec7u \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng qu\u00e1t c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(&lt; f(n),g(n) &gt;\\).</p> <p>Trong b\u00e0i n\u00e0y, khi vi\u1ebft \\(\\log{N}\\), ch\u00fang ta hi\u1ec3u l\u00e0 log c\u01a1 s\u1ed1 2 c\u1ee7a \\(N\\).</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#bai-toan-range-minimum-query-rmq","title":"B\u00e0i to\u00e1n Range Minimum Query (RMQ)","text":"<p>Cho m\u1ea3ng \\(A[0,N-1]\\). B\u1ea1n c\u1ea7n tr\u1ea3 l\u1eddi \\(Q\\) truy v\u1ea5n. M\u1ed7i truy v\u1ea5n g\u1ed3m 2 s\u1ed1 \\(i\\), \\(j\\) v\u00e0 b\u1ea1n c\u1ea7n \u0111\u01b0a ra v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) c\u1ee7a m\u1ea3ng \\(A\\), k\u00fd hi\u1ec7u l\u00e0 \\(RMQ_A(i,j)\\).</p> <p></p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#bai-toan-lowest-common-ancestor-lca","title":"B\u00e0i to\u00e1n Lowest Common Ancestor (LCA)","text":"<p>Cho c\u00e2y c\u00f3 g\u1ed1c \\(T\\). B\u1ea1n c\u1ea7n tr\u1ea3 l\u1eddi \\(Q\\) truy v\u1ea5n. M\u1ed7i truy v\u1ea5n g\u1ed3m 2 s\u1ed1 \\(u\\), \\(v\\) v\u00e0 b\u1ea1n c\u1ea7n t\u00ecm n\u00fat xa g\u1ed1c nh\u1ea5t m\u00e0 l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a c\u1ea3 2 n\u00fat \\(u\\) v\u00e0 \\(v\\), k\u00fd hi\u1ec7u l\u00e0 \\(LCA_T(u,v)\\).</p> <p></p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#bai-toan-rmq","title":"B\u00e0i to\u00e1n RMQ","text":""},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-o1-on","title":"Thu\u1eadt to\u00e1n \\(&lt; O(1), O(N) &gt;\\)","text":"<p>Thu\u1eadt to\u00e1n hi\u1ec3n nhi\u00ean nh\u1ea5t cho b\u00e0i RMQ l\u00e0 ta kh\u00f4ng c\u1ea7n ti\u1ec1n x\u1eed l\u00fd g\u00ec c\u1ea3. V\u1edbi m\u1ed7i truy v\u1ea5n, ta x\u00e9t l\u1ea7n l\u01b0\u1ee3t t\u1eebng ph\u1ea7n t\u1eed t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) \u0111\u1ec3 t\u00ecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t. Hi\u1ec3n nhi\u00ean, \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(&lt; O(1), O(N) &gt;\\).</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-on2o1","title":"Thu\u1eadt to\u00e1n \\(&lt; O(N^2),O(1) &gt;\\)","text":"<p>L\u01b0u gi\u00e1 tr\u1ecb c\u1ee7a \\(RMQ_A(i,j)\\) trong m\u1ed9t b\u1ea3ng \\(M[0,N-1][0,N-1]\\).</p> <p>Thu\u1eadt to\u00e1n s\u1ebd c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(&lt; O(N^3),O(1) &gt;\\). Tuy nhi\u00ean ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p xu\u1ed1ng \\(&lt; O(N^2),O(1) &gt;\\) nh\u01b0 sau:</p> <pre><code>      for i = 0 .. N-1\n          M[i][i] = i;\n\n      for i = 0 .. N-1\n          for j = i+1 .. N-1\n              if (A[M[i][j - 1]] &lt; A[j])\n                  M[i][j] = M[i][j - 1];\n              else\n                  M[i][j] = j;\n</code></pre> <p>C\u00f3 th\u1ec3 th\u1ea5y thu\u1eadt to\u00e1n n\u00e0y kh\u00e1 ch\u1eadm v\u00e0 t\u1ed1n b\u1ed9 nh\u1edb \\(O(N^2)\\) n\u00ean s\u1ebd kh\u00f4ng h\u1eefu \u00edch v\u1edbi nh\u1eefng d\u1eef li\u1ec7u l\u1edbn h\u01a1n.</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-onosqrt-n","title":"Thu\u1eadt to\u00e1n \\(&lt; O(N),O(\\sqrt N) &gt;\\)","text":"<p>Ta c\u00f3 th\u1ec3 chia m\u1ea3ng th\u00e0nh \\(\\sqrt N\\) ph\u1ea7n. Ta s\u1eed d\u1ee5ng m\u1ed9t m\u1ea3ng \\(M[0, \\sqrt N]\\) \u0111\u1ec3 l\u01b0u gi\u00e1 tr\u1ecb m\u1ed7i ph\u1ea7n. \\(M\\) c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c trong \\(O(N)\\):</p> <p></p> <p>\u0110\u1ec3 t\u00ednh \\(RMQ_A(i,j)\\), ch\u00fang ta x\u00e9t gi\u00e1 tr\u1ecb \\(M\\) c\u1ee7a \\(\\sqrt N\\) ph\u1ea7n n\u1eb1m trong \u0111o\u1ea1n \\([i,j]\\), v\u00e0 nh\u1eefng ph\u1ea7n t\u1eed \u1edf \u0111\u1ea7u v\u00e0 cu\u1ed1i \u0111o\u1ea1n \\([i,j]\\) l\u00e0 giao gi\u1eefa c\u00e1c ph\u1ea7n. V\u00ed d\u1ee5, \u0111\u1ec3 t\u00ednh \\(RMQ_A(2,7)\\) ta ch\u1ec9 c\u1ea7n so s\u00e1nh \\(A[2]\\), \\(A[M[1]]\\), \\(A[6]\\) v\u00e0 \\(A[7]\\).</p> <p>D\u1ec5 th\u1ea5y thu\u1eadt to\u00e1n kh\u00f4ng s\u1eed d\u1ee5ng qu\u00e1 \\(3\\sqrt N\\) ph\u00e9p to\u00e1n cho m\u1ed7i truy v\u1ea5n.</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#sparse-table-st","title":"Sparse Table (ST)","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t h\u01b0\u1edbng ti\u1ebfp c\u1eadn t\u1ed1t h\u01a1n \u0111\u1ec3 ti\u1ec1n x\u1eed l\u00fd \\(RMQ\\) cho c\u00e1c \u0111o\u1ea1n con c\u00f3 \u0111\u1ed9 d\u00e0i \\(2^k\\), s\u1eed d\u1ee5ng quy ho\u1ea1ch \u0111\u1ed9ng.</p> <p>Ta s\u1eed d\u1ee5ng m\u1ea3ng \\(M[0,N-1][0,logN]\\) v\u1edbi \\(M[i][j]\\) l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n c\u00f3 \u0111\u1ed9 d\u00e0i \\(2^j\\) v\u00e0 b\u1eaft \u0111\u1ea7u \u1edf \\(i\\). V\u00ed d\u1ee5:</p> <p></p> <p>\u0110\u1ec3 t\u00ednh \\(M[i][j]\\), ta x\u00e9t \\(M\\) c\u1ee7a 2 n\u1eeda \u0111\u1ea7u v\u00e0 n\u1eeda cu\u1ed1i c\u1ee7a \u0111o\u1ea1n, m\u1ed7i ph\u1ea7n s\u1ebd c\u00f3 \u0111\u1ed9 d\u00e0i \\(2^{j-1}\\):</p> <p></p> <pre><code>void process2(int M[MAXN][LOGMAXN], int A[MAXN], int N)\n{\n  int i, j;\n\n  // Kh\u1edfi t\u1ea1o M v\u1edbi c\u00e1c kho\u1ea3ng \u0111\u1ed9 d\u00e0i 1\n  for (i = 0; i &lt; N; i++)\n    M[i][0] = i;\n\n  // T\u00ednh M v\u1edbi c\u00e1c kho\u1ea3ng d\u00e0i 2^j\n  for (j = 1; 1 &lt;&lt; j &lt;= N; j++)\n    for (i = 0; i + (1 &lt;&lt; j) - 1 &lt; N; i++)\n      if (A[M[i][j - 1]] &lt; A[M[i + (1 &lt;&lt; (j - 1))][j - 1]])\n        M[i][j] = M[i][j - 1];\n      else\n        M[i][j] = M[i + (1 &lt;&lt; (j - 1))][j - 1];\n}\n</code></pre> <p>\u0110\u1ec3 t\u00ednh \\(RMQ_A(i,j)\\) ta d\u1ef1a v\u00e0o 2 \u0111o\u1ea1n con \u0111\u1ed9 d\u00e0i \\(2^k\\) ph\u1ee7 h\u1ebft \\([i,j]\\), v\u1edbi \\(k= \\lfloor log(j-i+1) \\rfloor\\):</p> <p></p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng qu\u00e1t c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(&lt; O(NlogN),O(1) &gt;\\)</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#cay-phan-oan-segment-tree-interval-tree-range-tree","title":"C\u00e2y ph\u00e2n \u0111o\u1ea1n (segment tree, interval tree, range tree)","text":"<p>Ta bi\u1ec3u di\u1ec5n c\u00e2y b\u1eb1ng m\u1ed9t m\u1ea3ng \\(M[1,2*2^{[logN]+1}]\\) v\u1edbi \\(M[i]\\) l\u00e0 v\u1ecb tr\u00ed c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong \u0111o\u1ea1n m\u00e0 n\u00fat \\(i\\) qu\u1ea3n l\u00fd.</p> <p></p> <p>Kh\u1edfi t\u1ea1o:</p> <pre><code>void initialize(intnode, int b, int e, int M[MAXIND], int A[MAXN], int N)\n{\n  if (b == e)\n    M[node] = b;\n  else\n  {\n    // Kh\u1edfi t\u1ea1o n\u00fat con tr\u00e1i v\u00e0 n\u00fat con ph\u1ea3i\n    initialize(2 * node, b, (b + e) / 2, M, A, N);\n    initialize(2 * node + 1, (b + e) / 2 + 1, e, M, A, N);\n\n    // T\u00ednh gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t d\u1ef1a tr\u00ean 2 n\u00fat con\n    if (A[M[2 * node]] &lt;= A[M[2 * node + 1]])\n      M[node] = M[2 * node];\n    else\n      M[node] = M[2 * node + 1];\n  }\n}\n</code></pre> <p>Truy v\u1ea5n:</p> <pre><code>int query(int node, int b, int e, int M[MAXIND], int A[MAXN], int i, int j)\n{\n  int p1, p2;\n\n  // \u0110o\u1ea1n c\u1ea7n t\u00ednh kh\u00f4ng giao v\u1edbi \u0111o\u1ea1n c\u1ee7a n\u00fat hi\u1ec7n t\u1ea1i\n  // --&gt; return -1\n  if (i &gt; e || j &lt; b)\n    return -1;\n\n  // \u0110o\u1ea1n c\u1ea7n t\u00ednh n\u1eb1m trong ho\u00e0n to\u00e0n trong \u0111o\u1ea1n c\u1ee7a n\u00fat hi\u1ec7n t\u1ea1i\n  // --&gt; return M[node]\n  if (b &gt;= i &amp;&amp; e &lt;= j)\n    return M[node];\n\n  // T\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong 2 c\u00e2y con tr\u00e1i v\u00e0 c\u00e2y con ph\u1ea3i\n  p1 = query(2 * node, b, (b + e) / 2, M, A, i, j);\n  p2 = query(2 * node + 1, (b + e) / 2 + 1, e, M, A, i, j);\n\n  // T\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong c\u00e1c c\u00e2y con\n  if (p1 == -1)\n    return M[node] = p2;\n  if (p2 == -1)\n    return M[node] = p1;\n  if (A[p1] &lt;= A[p2])\n    return M[node] = p1;\n  return M[node] = p2;\n}\n</code></pre> <p>M\u1ed7i truy v\u1ea5n s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong \\(O(logN)\\) v\u00e0 thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng qu\u00e1t l\u00e0 \\(&lt; O(N),O(logN) &gt;\\)</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#bai-toan-lca","title":"B\u00e0i to\u00e1n LCA","text":""},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-on-on","title":"Thu\u1eadt to\u00e1n \\(&lt; O(N), O(N) &gt;\\)","text":"<p>Thu\u1eadt to\u00e1n \u0111\u01a1n gi\u1ea3n nh\u1ea5t nh\u01b0 sau:</p> <ul> <li>\u0110\u1eb7t \\(h(u)\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a \u0111\u1ec9nh \\(u\\).</li> <li>\u0110\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n \\(u\\), \\(v\\). Kh\u00f4ng l\u00e0m m\u1ea5t t\u00ednh t\u1ed5ng qu\u00e1t, gi\u1ea3 s\u1eed \\(h(u) &gt; h(v)\\).</li> <li>Ta \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(u'\\), v\u1edbi \\(u'\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) v\u00e0 \\(h(u') = h(v)\\).</li> <li>Ta \u0111\u1ed3ng th\u1eddi \u0111i t\u1eeb \\(u\\) v\u00e0 \\(v\\) l\u00ean cha c\u1ee7a n\u00f3, \u0111\u1ebfn khi 2 \u0111\u1ec9nh n\u00e0y tr\u00f9ng nhau (l\u00fac \u0111\u00f3 c\u1ea3 2 \u0111\u1ec9nh \u0111\u1ec1u \u1edf LCA).</li> </ul> <p></p> <p>V\u00ed d\u1ee5:</p> <ul> <li>Ta c\u1ea7n t\u00ecm LCA c\u1ee7a \\(u\\) v\u00e0 \\(v\\). Ban \u0111\u1ea7u \\(h(u) &gt; h(v)\\).</li> <li>Ta \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) m\u00e0 c\u00f3 \\(h(u') = h(v)\\): \u0110i t\u1eeb \\(u\\) l\u00ean \\(u4\\) l\u00ean \\(u3\\).</li> <li>Sau \u0111\u00f3 \u0111\u1ed3ng th\u1eddi \u0111i t\u1eeb \\(u\\) v\u00e0 \\(v\\) l\u00ean cha c\u1ee7a n\u00f3 \u0111\u1ebfn khi 2 \u0111\u1ec9nh b\u1eb1ng nhau:</li> <li>\\(u = u2, v = v2\\)</li> <li>\\(u = u1, v = v1\\)</li> <li>\\(u = v = lca\\)</li> </ul> <pre><code>function LCA(u, v):\n  if h(u) &lt; h(v):\n    swap(u, v)\n\n  while h(u) &gt; h(v):\n    u = parent(u)\n\n  while u != v:\n    u = parent(u)\n    v = parent(v)\n\n  return u\n</code></pre>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-onosqrt-n_1","title":"Thu\u1eadt to\u00e1n \\(&lt; O(N),O(\\sqrt N) &gt;\\)","text":"<p>\u00dd t\u01b0\u1edfng chia input th\u00e0nh c\u00e1c ph\u1ea7n b\u1eb1ng nhau nh\u01b0 trong b\u00e0i to\u00e1n \\(RMQ\\) c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u1edbi \\(LCA\\). Ch\u00fang ta s\u1ebd chia c\u00e2y th\u00e0nh \\(\\sqrt H\\) ph\u1ea7n, v\u1edbi \\(H\\) l\u00e0 chi\u1ec1u cao c\u00e2y. Ph\u1ea7n \u0111\u1ea7u bao g\u1ed3m c\u00e1c t\u1ea7ng t\u1eeb \\(0\\) \u0111\u1ebfn \\(\\sqrt H-1\\), ph\u1ea7n 2 s\u1ebd g\u1ed3m c\u00e1c t\u1ea7ng t\u1eeb \\(\\sqrt H\\) \u0111\u1ebfn \\(2\\sqrt H-1\\),...:</p> <p></p> <p>Gi\u1edd v\u1edbi m\u1ed7i n\u00fat ch\u00fang ta c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c n\u00fat t\u1ed5 ti\u00ean \u1edf ph\u1ea7n ngay tr\u00ean n\u00f3. Ta s\u1ebd t\u00ednh gi\u00e1 tr\u1ecb n\u00e0y s\u1eed d\u1ee5ng m\u1ea3ng \\(P[1,MAXN]\\):</p> <p></p> <p>Ta c\u00f3 th\u1ec3 t\u00ednh \\(P\\) b\u1eb1ng DFS (\\(T[i]\\) l\u00e0 cha c\u1ee7a \\(i\\), \\(nr=\\sqrt H\\) v\u00e0 \\(L[i]\\) l\u00e0 t\u1ea7ng c\u1ee7a n\u00fat \\(i\\))</p> <pre><code>void dfs(int node, int T[MAXN], int N, int P[MAXN], int L[MAXN], int nr)  {\n      int k;\n\n  // N\u1ebfu n\u00fat \u1edf ph\u1ea7n \u0111\u1ea7u ti\u00ean, th\u00ec P[node] = 1\n  // N\u1ebfu n\u00fat \u1edf \u0111\u1ea7u c\u1ee7a 1 ph\u1ea7n, th\u00ec P[node] = T[node]\n  // Tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i, P[node] = P[T[node]]\n  if (L[node] &lt; nr)\n    P[node] = 1;\n  else\n    if(!(L[node] % nr))\n      P[node] = T[node];\n    else\n      P[node] = P[T[node]];\n\n  // DFS xu\u1ed1ng c\u00e1c con\n  for each son k of node\n    dfs(k, T, N, P, L, nr);\n}\n</code></pre> <p>Truy v\u1ea5n:</p> <pre><code>int LCA(int T[MAXN], int P[MAXN], int L[MAXN], int x, int y)\n{\n  // N\u1ebfu c\u00f2n n\u00fat \u1edf ph\u1ea7n ti\u1ebfp theo kh\u00f4ng ph\u1ea3i l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a c\u1ea3 x v\u00e0 y,\n  // ta nh\u1ea3y l\u00ean ph\u1ea7n ti\u1ebfp theo. \u0110o\u1ea1n n\u00e0y c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 thu\u1eadt to\u00e1n\n  // &lt;O(1), O(N)&gt; nh\u01b0ng thay v\u00ec nh\u1ea3y t\u1eebng n\u00fat, ta nh\u1ea3y t\u1eebng \u0111o\u1ea1n.\n  while (P[x] != P[y])\n    if (L[x] &gt; L[y])\n      x = P[x];\n    else\n      y = P[y];\n\n  // Gi\u1edd x v\u00e0 y \u1edf c\u00f9ng ph\u1ea7n. Ta t\u00ecm LCA gi\u1ed1ng nh\u01b0 thu\u1eadt &lt;O(1), O(N)&gt;\n  while (x != y)\n    if (L[x] &gt; L[y])\n      x = T[x];\n    else\n      y = T[y];\n    return x;\n}\n</code></pre> <p>H\u00e0m n\u00e0y s\u1eed d\u1ee5ng t\u1ed1i \u0111a \\(2\\sqrt H\\) ph\u00e9p to\u00e1n. V\u1edbi c\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y ch\u00fang ta c\u00f3 thu\u1eadt to\u00e1n \\(&lt; O(N),O(\\sqrt H) &gt;\\), trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t th\u00ec \\(N=H\\) n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng qu\u00e1t c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(&lt; O(N),O(\\sqrt N) &gt;\\).</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-onlognologn","title":"Thu\u1eadt to\u00e1n \\(&lt; O(NlogN),O(logN) &gt;\\)","text":"<p>\u1ee8ng d\u1ee5ng Sparse Table ch\u00fang ta c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n nhanh h\u01a1n. \u0110\u1ea7u ti\u00ean ch\u00fang ta t\u00ednh m\u1ed9t b\u1ea3ng \\(P[1,N][1,logN]\\) v\u1edbi \\(P[i][j]\\) l\u00e0 t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(i\\):</p> <p></p> <p>Code:</p> <pre><code>void process3(int N, int T[MAXN], int P[MAXN][LOGMAXN])\n{\n  int i, j;\n\n  // Kh\u1edfi t\u1ea1o\n  for (i = 0; i &lt; N; i++)\n    for (j = 0; 1 &lt;&lt; j &lt; N; j++)\n      P[i][j] = -1;\n\n  // Kh\u1edfi t\u1ea1o cha th\u1ee9 2^0 = 1 c\u1ee7a m\u1ed7i n\u00fat\n  for (i = 0; i &lt; N; i++)\n    P[i][0] = T[i];\n\n  // Quy ho\u1ea1ch \u0111\u1ed9ng\n  for (j = 1; 1 &lt;&lt; j &lt; N; j++)\n    for (i = 0; i &lt; N; i++)\n      if (P[i][j - 1] != -1)\n        P[i][j] = P[P[i][j - 1]][j - 1];\n}\n</code></pre> <p>B\u01b0\u1edbc kh\u1edfi t\u1ea1o n\u00e0y t\u1ed1n \\(O(NlogN)\\) b\u1ed9 nh\u1edb l\u1eabn th\u1eddi gian.</p> <p>C\u00e1ch t\u00ecm LCA gi\u1ed1ng h\u1ec7t nh\u01b0 thu\u1eadt to\u00e1n \\(&lt;O(1), O(N)&gt;\\), nh\u01b0ng \u0111\u1ec3 t\u0103ng t\u1ed1c, thay v\u00ec nh\u1ea3y l\u00ean cha \u1edf m\u1ed7i b\u01b0\u1edbc, th\u00ec ta d\u00f9ng m\u1ea3ng \\(P\\) \u0111\u1ec3 nh\u1ea3y, t\u1eeb \u0111\u00f3 thu \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(logN)\\) cho m\u1ed7i b\u01b0\u1edbc. C\u1ee5 th\u1ec3:</p> <ul> <li>G\u1ecdi \\(h(u)\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a n\u00fat \\(u\\). \u0110\u1ec3 t\u00ednh \\(LCA(u, v)\\), gi\u1ea3 s\u1eed \\(h(u) &gt; h(v)\\), \u0111\u1ea7u ti\u00ean ta t\u00ecm \\(u'\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(u\\) v\u00e0 c\u00f3 \\(h(u') = h(v)\\):</li> <li>R\u00f5 r\u00e0ng, ta c\u1ea7n nh\u1ea3y t\u1eeb \\(u\\) l\u00ean cha th\u1ee9 \\(h(u) - h(v)\\). Ta chuy\u1ec3n \\(h(u) - h(v)\\) sang h\u1ec7 2. Duy\u1ec7t \\(j\\) t\u1eeb \\(log(h(u))\\) xu\u1ed1ng \\(0\\), n\u1ebfu t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(u\\) kh\u00f4ng cao h\u01a1n \\(v\\) th\u00ec ta cho \\(p\\) nh\u1ea3y l\u00ean t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a n\u00f3.</li> <li>Sau khi \\(u\\) v\u00e0 \\(v\\) \u0111\u00e3 \u1edf c\u00f9ng t\u1ea7ng, ta s\u1ebd t\u00ednh \\(LCA(u, v)\\): c\u0169ng nh\u01b0 tr\u00ean, ta s\u1ebd duy\u1ec7t \\(j\\) t\u1eeb \\(log(h(u))\\) xu\u1ed1ng \\(0\\), n\u1ebfu t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a \\(u\\) v\u00e0 \\(v\\) kh\u00e1c nhau th\u00ec ch\u1eafc ch\u1eafn \\(LCA(u, v)\\) s\u1ebd \u1edf cao h\u01a1n, khi \u0111\u00f3 ta s\u1ebd cho c\u1ea3 \\(u\\) v\u00e0 \\(v\\) nh\u1ea3y l\u00ean t\u1ed5 ti\u00ean th\u1ee9 \\(2^j\\) c\u1ee7a n\u00f3. Cu\u1ed1i c\u00f9ng th\u00ec \\(u\\) v\u00e0 \\(v\\) s\u1ebd c\u00f3 c\u00f9ng cha, v\u1eady n\u00ean khi \u0111\u00f3 \\(LCA(u, v) = T[u] = T[v]\\).</li> </ul> <p>Code:</p> <pre><code>function LCA(N, P[MAXN][MAXLOGN], T[MAXN], h[MAXN], u, v):\n  if h(u) &lt; h(v):\n    // \u0110\u1ed5i u v\u00e0 v\n    swap(u, v)\n\n  log = log2( h(u) )\n\n  // T\u00ecm t\u1ed5 ti\u00ean u' c\u1ee7a u sao cho h(u') = h(v)\n\n  for i = log .. 0:\n    if h(u) - 2^i &gt;= h(v):\n      u = P[u][i]\n\n  if u == v:\n    return u\n\n  // T\u00ednh LCA(u, v):\n  for i = log .. 0:\n    if P[u][i] != -1 and P[u][i] != P[v][i]:\n      u = P[u][i]\n      v = P[v][i]\n\n  return T[u];\n</code></pre> <p>M\u1ed7i l\u1ea7n g\u1ecdi h\u00e0m n\u00e0y ch\u1ec9 t\u1ed1n t\u1ed1i \u0111a \\(2logH\\) ph\u00e9p to\u00e1n. Trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t th\u00ec \\(H=N\\) n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng qu\u00e1t c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(&lt; O(NlogN),O(logN) &gt;\\).</p> <p>B\u00e0i to\u00e1n LCA c\u00f2n c\u00f3 nhi\u1ec1u c\u00e1ch gi\u1ea3i th\u00fa v\u1ecb kh\u00e1c. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o th\u00eam trong b\u00e0i vi\u1ebft n\u00e0y.</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#tu-lca-en-rmq","title":"T\u1eeb LCA \u0111\u1ebfn RMQ","text":"<p>Ta c\u00f3 th\u1ec3 bi\u1ebfn \u0111\u1ed5i b\u00e0i to\u00e1n LCA th\u00e0nh b\u00e0i to\u00e1n RMQ trong th\u1eddi gian tuy\u1ebfn t\u00ednh, do \u0111\u00f3 m\u00e0 m\u1ecdi thu\u1eadt to\u00e1n \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n RMQ \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n LCA. H\u00e3y c\u00f9ng x\u00e9t v\u00ed d\u1ee5 sau:</p> <p></p> <p></p> <p>\u0110\u1ec3 \u00fd r\u1eb1ng \\(LCA_T(u,v)\\) l\u00e0 n\u00fat g\u1ea7n g\u1ed1c nh\u1ea5t xu\u1ea5t hi\u1ec7n gi\u1eefa l\u00fac th\u0103m \\(u\\) v\u00e0 \\(v\\) trong ph\u00e9p duy\u1ec7t DFS. V\u00ec th\u1ebf ta c\u00f3 th\u1ec3 x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed gi\u1eefa c\u00e1c c\u1eb7p ch\u1ec9 s\u1ed1 b\u1ea5t k\u00ec c\u1ee7a \\(u\\) v\u00e0 \\(v\\) trong d\u00e3y Euler Tour v\u00e0 t\u00ecm n\u00fat cao nh\u1ea5t. Ta x\u00e2y d\u1ef1ng 3 m\u1ea3ng:</p> <ul> <li> <p>\\(E[1,2*N-1]\\): d\u00e3y th\u1ee9 t\u1ef1 th\u0103m c\u1ee7a c\u00e1c n\u00fat tr\u00ean \u0111\u01b0\u1eddng \u0111i Euler, \\(E[i]\\) l\u00e0 n\u00fat \u0111\u01b0\u1ee3c th\u0103m th\u1ee9 \\(i\\) tr\u00ean \u0111\u01b0\u1eddng \u0111i.</p> </li> <li> <p>\\(L[1,2*N-1]\\): t\u1ea7ng c\u1ee7a c\u00e1c n\u00fat, \\(L[i]\\) l\u00e0 t\u1ea7ng c\u1ee7a n\u00fat \\(E[i]\\)</p> </li> <li> <p>\\(H[1,N]\\): \\(H[i]\\) l\u00e0 v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n \u0111\u1ea7u ti\u00ean c\u1ee7a n\u00fat \\(i\\) tr\u00ean Euler Tour</p> </li> </ul> <p>G\u1ec9a s\u1eed \\(H[u]&lt;H[v]\\). D\u1ec5 th\u1ea5y vi\u1ec7c c\u1ea7n l\u00e0m l\u00fac n\u00e0y l\u00e0 t\u00ecm n\u00fat c\u00f3 \\(L\\) nh\u1ecf nh\u1ea5t tr\u00ean \\(E[H[u]..H[v]]\\). Do \u0111\u00f3 \\(LCA_T(u,v)=E[RMQ_L(H[u],H[v]))]\\). V\u00ed d\u1ee5:</p> <p></p> <p>C\u0169ng d\u1ec5 th\u1ea5y l\u00e0 m\u1ed7i 2 ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp trong \\(L\\) \u0111\u1ec1u h\u01a1n k\u00e9m nhau \u0111\u00fang 1 \u0111\u01a1n v\u1ecb.</p>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#tu-rmq-en-lca","title":"T\u1eeb RMQ \u0111\u1ebfn LCA","text":"<p>M\u1ed9t c\u00e2y Cartesian c\u1ee7a m\u1ed9t d\u00e3y \\(A[0,N-1]\\) l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \\(C(A)\\) c\u00f3 g\u1ed1c l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t trong \\(A\\) v\u00e0 c\u00f3 v\u1ecb tr\u00ed \\(i\\). C\u00e2y con tr\u00e1i c\u1ee7a \\(C(A)\\) l\u00e0 c\u00e2y Cartesian c\u1ee7a \\(A[0,i-1]\\) n\u1ebfu \\(i&gt;0\\), ng\u01b0\u1ee3c l\u1ea1i th\u00ec kh\u00f4ng c\u00f3. C\u00e2y con ph\u1ea3i c\u1ee7a \\(C(A)\\) l\u00e0 c\u00e2y Cartesian c\u1ee7a \\(A[i+1,N-1]\\).</p> <p>D\u1ec5 th\u1ea5y r\u1eb1ng \\(RMQ_A(i,j)=LCA_C(i,j)\\).</p> <p></p> <p></p> <p>B\u00e2y gi\u1edd vi\u1ec7c c\u1ea7n l\u00e0m ch\u1ec9 c\u00f2n l\u00e0 t\u00ednh \\(C(A)\\) trong th\u1eddi gian tuy\u1ebfn t\u00ednh. Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t c\u00e1i stack.</p> <ul> <li> <p>Ban \u0111\u1ea7u stack r\u1ed7ng. Ta l\u1ea7n l\u01b0\u1ee3t \u0111\u1ea9y c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a \\(A\\) v\u00e0o stack.</p> </li> <li> <p>T\u1ea1i b\u01b0\u1edbc th\u1ee9 \\(i\\), \\(A[i]\\) s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o ngay c\u1ea1nh ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng kh\u00f4ng l\u1edbn h\u01a1n \\(A[i]\\) trong stack, c\u00e1c ph\u1ea7n t\u1eed l\u1edbn h\u01a1n \\(A[i]\\) b\u1ecb lo\u1ea1i kh\u1ecfi stack. Ph\u1ea7n t\u1eed trong stack \u1edf v\u1ecb tr\u00ed c\u1ee7a \\(A[i]\\) tr\u01b0\u1edbc khi ch\u00e8n \\(A[i]\\) v\u00e0o s\u1ebd l\u00e0 con tr\u00e1i c\u1ee7a \\(i\\), c\u00f2n \\(i\\) s\u1ebd l\u00e0 con ph\u1ea3i c\u1ee7a ph\u1ea7n t\u1eed tr\u01b0\u1edbc n\u00f3 trong stack. \u1ede m\u1ed7i b\u01b0\u1edbc th\u00ec ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean trong stack s\u1ebd l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y Cartesian.</p> </li> </ul> <p>V\u00ed d\u1ee5 \u0111\u1ed1i v\u1edbi c\u00e2y \u1edf tr\u00ean:</p> B\u01b0\u1edbc Stack S\u1ef1 h\u00ecnh th\u00e0nh c\u00e2y 0 0 0 l\u00e0 n\u00fat duy nh\u1ea5t trong c\u00e2y 1 0 1 1 \u0111\u01b0\u1ee3c \u0111\u1ea9y v\u00e0o cu\u1ed1i stack. Gi\u1edd 1 l\u00e0 con ph\u1ea3i c\u1ee7a 0 2 0 2 A[2] &lt; A[1]. L\u00fac n\u00e0y 2 l\u00e0 con ph\u1ea3i c\u1ee7a 0 v\u00e0 con tr\u00e1i c\u1ee7a 2 l\u00e0 1 3 3 A[3] hi\u1ec7n \u0111ang l\u00e0 ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t cho n\u00ean m\u1ecdi ph\u1ea7n t\u1eed c\u1ee7a stack b\u1ecb l\u1ea5y ra ra v\u00e0 3 tr\u1edf th\u00e0nh g\u1ed1c c\u00e2y. Con tr\u00e1i c\u1ee7a 3 l\u00e0 0 4 3 4 4 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea1nh 3 v\u00e0 con ph\u1ea3i c\u1ee7a 3 l\u00e0 4 5 3 4 5 5 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea1nh 4, con ph\u1ea3i c\u1ee7a 4 l\u00e0 5 6 3 4 5 6 6 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea1nh 5, con ph\u1ea3i c\u1ee7a 5 l\u00e0 6 7 3 4 5 6 7 7 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea1nh 6, con ph\u1ea3i c\u1ee7a 6 l\u00e0 7 8 3 8 8 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea1nh 3, c\u00e1c ph\u1ea7n t\u1eed l\u1edbn h\u01a1n b\u1ecb lo\u1ea1i b\u1ecf. 8 gi\u1edd l\u00e0 con ph\u1ea3i c\u1ee7a 3 v\u00e0 con tr\u00e1i c\u1ee7a 8 l\u00e0 4 9 3 8 9 9 \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea1nh 8, con ph\u1ea3i c\u1ee7a 8 l\u00e0 9 <p>V\u00ec m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a \\(A\\) \u0111\u1ec1u ch\u1ec9 \u0111\u1ea9y v\u00e0o v\u00e0 l\u1ea5y ra 1 l\u1ea7n n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \\(O(N)\\).</p> <pre><code>void computeTree(int A[MAXN], int N, int T[MAXN])  {\n      int st[MAXN], i, k, top = -1;\n\n  // B\u1eaft \u0111\u1ea7u v\u1edbi stack r\u1ed7ng\n  // \u1ede b\u01b0\u1edbc th\u1ee9 i ta \u0111\u1ea9y i v\u00e0 stack\n  for (i = 0; i &lt; N; i++)\n  {\n    //T\u00ecm v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng A[i] trong stack\n    k = top;\n    while (k &gt;= 0 &amp;&amp; A[st[k]] &gt; A[i])\n      k--;\n\n    // Ch\u1ec9nh s\u1eeda c\u00e2y theo m\u00f4 t\u1ea3 \u1edf tr\u00ean\n    if (k != -1)\n      T[i] = st[k];\n    if (k &lt; top)\n      T[st[k + 1]] = i;\n\n    // \u0110\u1ea9y i v\u00e0o stack r\u1ed3i x\u00f3a c\u00e1c ph\u1ea7n t\u1eed l\u1edbn h\u01a1n A[i]\n    st[++k] = i;\n    top = k;\n  }\n  // Ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean trong stack l\u00e0 g\u1ed1c c\u00e2y n\u00ean n\u00f3 kh\u00f4ng c\u00f3 cha\n  T[st[0]] = -1;\n}\n</code></pre>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#thuat-toan-ono1-cho-bai-toan-rmq-thu-hep","title":"Thu\u1eadt to\u00e1n \\(&lt; O(N),O(1) &gt;\\) cho b\u00e0i to\u00e1n RMQ thu h\u1eb9p","text":"<p>B\u00e0i to\u00e1n \\(RMQ\\) ph\u00e1t sinh khi gi\u1ea3i b\u00e0i to\u00e1n LCA ch\u1ec9 l\u00e0 tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t c\u1ee7a b\u00e0i to\u00e1n RMQ t\u1ed5ng qu\u00e1t, do ta c\u00f3 \u0111i\u1ec1u ki\u1ec7n \\(\\|A[i]-A[i-1]\\|=1\\) v\u1edbi m\u1ecdi \\(i\\in[1,N-1]\\) (l\u00fd do l\u00e0 2 ph\u1ea7n t\u1eed li\u00ean ti\u1ebfp c\u00f3 quan h\u1ec7 cha con v\u1edbi nhau). Ta g\u1ecdi b\u00e0i to\u00e1n \\(RMQ\\) n\u00e0y l\u00e0 b\u00e0i to\u00e1n RMQ thu h\u1eb9p. Trong 1 s\u1ed1 t\u00e0i li\u1ec7u c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 b\u00e0i to\u00e1n \\(\\pm 1 RMQ\\). Trong m\u1ee5c n\u00e0y, ta s\u1ebd nghi\u00ean c\u1ee9u m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1t h\u01a1n cho b\u00e0i to\u00e1n RMQ thu h\u1eb9p.</p> <p>H\u00e3y bi\u1ebfn \u0111\u1ed5i \\(A\\) th\u00e0nh m\u1ed9t d\u00e3y nh\u1ecb ph\u00e2n c\u00f3 \\(N-1\\) ph\u1ea7n t\u1eed, v\u1edbi \\(B[i]=A[i]-A[i-1]\\). Nh\u01b0 v\u1eady \\(A[i]=A[0]+B[1]+..+B[i]\\) v\u00e0 \\(B[i]\\) ch\u1ec9 nh\u1eadn gi\u00e1 tr\u1ecb \\(1\\) ho\u1eb7c \\(-1\\).</p> <p>Ch\u00fang ta chia \\(A\\) th\u00e0nh c\u00e1c block k\u00edch th\u01b0\u1edbc \\(l=[log(N)/2]\\). G\u1ecdi \\(M[i]\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong block th\u1ee9 \\(i\\) v\u00e0 \\(D[i]\\) l\u00e0 v\u1ecb tr\u00ed c\u1ee7a gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t n\u00e0y trong \\(A\\). C\u1ea3 \\(M\\) v\u00e0 \\(D\\) \u0111\u1ec1u c\u00f3 \\(N/l\\) ph\u1ea7n t\u1eed. T\u00ednh Sparse Table cho \\(M\\), t\u1ed1n \\(O(N/l*log(N/l))=O(N)\\) v\u1ec1 b\u1ed9 nh\u1edb v\u00e0 th\u1eddi gian.</p> <p>D\u00f9ng sparse table cho m\u1ea3ng \\(M\\), ta t\u00ednh \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a 1 v\u00e0i block trong \\(O(1)\\). Nh\u01b0ng ta v\u1eabn c\u1ea7n t\u00ednh \\(RMQ\\) gi\u1eefa 2 v\u1ecb tr\u00ed b\u1ea5t k\u00ec trong c\u00f9ng m\u1ed9t block. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, nh\u1eadn th\u1ea5y \\(B\\) l\u00e0 m\u1ed9t d\u00e3y nh\u1ecb ph\u00e2n, m\u00e0 m\u1ed7i block c\u00f3 \\(l\\) ph\u1ea7n t\u1eed. V\u00ec s\u1ed1 l\u01b0\u1ee3ng d\u00e3y nh\u1ecb ph\u00e2n \u0111\u1ed9 d\u00e0i \\(l\\) l\u00e0 \\(2^l=\\sqrt N\\) l\u00e0 m\u1ed9t s\u1ed1 kh\u00e1 nh\u1ecf n\u00ean ch\u00fang ta c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c m\u1ea3ng \\(P[\\sqrt(N)][l][l]\\), v\u1edbi \\(P(b, i, j)\\) l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t trong c\u00e1c bit t\u1eeb \\(i\\) \u0111\u1ebfn \\(j\\) c\u1ee7a d\u00e3y nh\u1ecb ph\u00e2n \\(b\\). D\u1ec5 d\u00e0ng kh\u1edfi t\u1ea1o \\(P\\) b\u1eb1ng quy ho\u1ea1ch \u0111\u1ed9ng trong c\u1ea3 th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb \\(O(\\sqrt N*l^2)\\). Ch\u00fa \u00fd r\u1eb1ng, ta c\u0169ng c\u1ea7n bi\u1ebft gi\u00e1 tr\u1ecb \\(b\\) trong \\(O(1)\\) v\u1edbi m\u1ed7i block c\u1ee7a m\u1ea3ng \\(A\\). Do \u0111\u00f3, ta c\u1ea7n kh\u1edfi t\u1ea1o m\u1ea3ng \\(T\\) v\u1edbi \\(N/l\\) ph\u1ea7n t\u1eed, m\u1ed7i ph\u1ea7n t\u1eed cho bi\u1ebft gi\u00e1 tr\u1ecb \\(b\\) c\u1ee7a block t\u01b0\u01a1ng \u1ee9ng.</p> <p>K\u1ebft h\u1ee3p m\u1ea3ng \\(T\\), \\(P\\) v\u1edbi Sparse table cho m\u1ea3ng \\(M\\), ta c\u00f3 th\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n \\(RMQ_A(i, j)\\) trong \\(O(1)\\). Ta c\u00f3 2 tr\u01b0\u1eddng h\u1ee3p:</p> <ol> <li>\\(i\\) v\u00e0 \\(j\\) thu\u1ed9c c\u00f9ng block.</li> <li>Ta d\u00f9ng m\u1ea3ng \\(T\\) \u0111\u1ec3 bi\u1ebft d\u00e3y nh\u1ecb ph\u00e2n \\(b\\) \u1edf block ch\u1ee9a \\(i\\) v\u00e0 \\(j\\).</li> <li>T\u00ednh \\(u\\) v\u00e0 \\(v\\) l\u00e0 v\u1ecb tr\u00ed c\u1ee7a \\(i\\) v\u00e0 \\(j\\) trong block.</li> <li>K\u1ebft qu\u1ea3 ch\u00ednh l\u00e0 \\(P(b, u, v)\\).</li> <li>\\(i\\) v\u00e0 \\(j\\) thu\u1ed9c 2 block kh\u00e1c nhau: k\u1ebft qu\u1ea3 s\u1ebd l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a 3 gi\u00e1 tr\u1ecb:</li> <li>Gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong block ch\u1ee9a \\(i\\) v\u00e0 n\u1eb1m b\u00ean ph\u1ea3i \\(i\\):<ul> <li>D\u00f9ng m\u1ea3ng \\(T\\) \u0111\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a d\u00e3y nh\u1ecb ph\u00e2n c\u1ee7a block ch\u1ee9a \\(i\\) l\u00e0 \\(b\\).</li> <li>T\u00ednh ch\u1ec9 s\u1ed1 c\u1ee7a \\(i\\) trong block ch\u1ee9a \\(i\\) l\u00e0 \\(u\\).</li> <li>K\u1ebft qu\u1ea3 ch\u00ednh l\u00e0 \\(P(b, i, l)\\).</li> </ul> </li> <li>Gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong block ch\u1ee9a \\(j\\) v\u00e0 n\u1eb1m b\u00ean tr\u00e1i \\(j\\): l\u00e0m t\u01b0\u01a1ng t\u1ef1 tr\u01b0\u1eddng h\u1ee3p tr\u00ean</li> <li>Gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c c\u00e1c block n\u1eb1m gi\u1eefa block ch\u1ee9a \\(i\\) v\u00e0 block ch\u1ee9a \\(j\\). D\u00f9ng Sparse table cho \\(M\\), ta d\u1ec5 d\u00e0ng t\u00ednh   \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb n\u00e0y trong \\(O(1)\\).</li> </ol>"},{"location":"translate/topcoder/Range-Minimum-Query-and-Lowest-Common-Ancestor/#mot-so-bai-e-luyen-tap","title":"M\u1ed9t s\u1ed1 b\u00e0i \u0111\u1ec3 luy\u1ec7n t\u1eadp","text":"<ul> <li>CF #278 Div 1 - B</li> <li>Bayan 2015 Contest Warm Up - D</li> <li>Hello 2015 (Div.1) - A</li> <li>LCA</li> <li>QTREE2</li> <li>HBTLCA</li> <li>UPGRANET</li> <li>VOTREE</li> <li>SRM 310 - Floating Median</li> <li>Lorenzo Von Matterhorn</li> <li>http://acm.pku.edu.cn/JudgeOnline/problem?id=1986</li> <li>http://acm.pku.edu.cn/JudgeOnline/problem?id=2374</li> <li>http://acmicpc-live-archive.uva.es/nuevoportal/data/problem.php?p=2045</li> <li>http://acm.pku.edu.cn/JudgeOnline/problem?id=2763</li> <li>http://acm.uva.es/p/v109/10938.html</li> <li>http://acm.sgu.ru/problem.php?contest=0&amp;problem=155</li> </ul>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/","title":"T\u1ea7m Quan Tr\u1ecdng C\u1ee7a Thu\u1eadt To\u00e1n","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c: The Importance of Algorithms - \u0111\u0103ng b\u1edfi lbackstrom tr\u00ean Topcoder </p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#mo-au","title":"M\u1edf \u0111\u1ea7u","text":"<p>\u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c t\u1ea7m quan tr\u1ecdng c\u1ee7a vi\u1ec7c h\u1ecdc v\u00e0 hi\u1ec3u v\u1ec1 thu\u1eadt to\u00e1n, \u0111\u1ea7u ti\u00ean ta c\u1ea7n \u0111\u1ecbnh ngh\u0129a ch\u00ednh x\u00e1c \"Thu\u1eadt to\u00e1n l\u00e0 g\u00ec?\". Theo nh\u01b0 cu\u1ed1n s\u00e1ch n\u1ed5i ti\u1ebfng Introduction to Algorithms (M\u1edf \u0111\u1ea7u v\u1ec1 thu\u1eadt to\u00e1n), th\u00ec \"thu\u1eadt to\u00e1n\" l\u00e0 \"m\u1ed9t qu\u00e1 tr\u00ecnh t\u00ednh to\u00e1n c\u1ee5 th\u1ec3, trong \u0111\u00f3 l\u1ea5y m\u1ed9t hay nhi\u1ec1u gi\u00e1 tr\u1ecb l\u00e0m \u0111\u1ea7u v\u00e0o (input) v\u00e0 cho ra m\u1ed9t hay nhi\u1ec1u gi\u00e1 tr\u1ecb k\u1ebft qu\u1ea3 (output)\". N\u00f3i c\u00e1ch kh\u00e1c, thu\u1eadt to\u00e1n gi\u1ed1ng nh\u01b0 b\u1ea3n \u0111\u1ed3 ch\u1ec9 \u0111\u01b0\u1eddng gi\u00fap ta gi\u1ea3i quy\u1ebft m\u1ed9t v\u1ea5n \u0111\u1ec1 r\u00f5 r\u00e0ng, c\u1ee5 th\u1ec3. V\u00ed d\u1ee5, nhi\u1ec1u d\u00f2ng code \u0111\u1ec3 t\u00ednh d\u00e3y Fibonacci l\u00e0 m\u1ed9t c\u00e1ch c\u00e0i \u0111\u1eb7t c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n n\u00e0o \u0111\u00f3. M\u1ed9t h\u00e0m \u0111\u1ec3 c\u1ed9ng hai s\u1ed1 c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n, m\u1eb7c d\u00f9 n\u00f3 r\u1ea5t \u0111\u01a1n gi\u1ea3n.</p> <p>M\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n, nh\u01b0 thu\u1eadt \u0111\u1ec3 t\u00ednh d\u00e3y Fibonacci, kh\u00e1 tr\u1ef1c quan v\u00e0 ta c\u00f3 th\u1ec3 suy ra nh\u1edd v\u00e0o suy lu\u1eadn logic c\u0169ng nh\u01b0 k\u0129 n\u0103ng gi\u1ea3i b\u00e0i. Tuy nhi\u00ean, \u0111\u1ed1i v\u1edbi nh\u1eefng thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p h\u01a1n, ch\u00fang ta c\u1ea7n h\u1ecdc v\u00e0 hi\u1ec3u, \u0111\u1ec3 l\u00e0m n\u1ec1n t\u1ea3ng cho vi\u1ec7c gi\u1ea3i quy\u1ebft nh\u1eefng b\u00e0i to\u00e1n kh\u00f3 h\u01a1n. Trong cu\u1ed9c s\u1ed1ng h\u00e0ng ng\u00e0y, nh\u1eefng vi\u1ec7c t\u01b0\u1edfng ch\u1eebng nh\u01b0 \u0111\u01a1n gi\u1ea3n nh\u01b0 ki\u1ec3m tra email hay nghe nh\u1ea1c \u0111\u1ec1u \u0111\u00f2i h\u1ecfi nh\u1eefng thu\u1eadt to\u00e1n r\u1ea5t ph\u1ee9c t\u1ea1p. Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd c\u00f9ng xem m\u1ed9t v\u00e0i v\u00ed d\u1ee5 v\u1ec1 c\u00e1ch \u00e1p d\u1ee5ng thu\u1eadt to\u00e1n.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#phan-tich-thoi-gian-thuc-hien-thuat-toan","title":"Ph\u00e2n t\u00edch th\u1eddi gian th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n","text":"<p>M\u1ed9t trong nh\u1eefng y\u1ebfu t\u1ed1 quan tr\u1ecdng nh\u1ea5t c\u1ee7a m\u1ed9t thu\u1eadt to\u00e1n l\u00e0 vi\u1ec7c n\u00f3 ch\u1ea1y nhanh hay ch\u1eadm. Ngh\u0129 ra m\u1ed9t thu\u1eadt \u0111\u1ec3 gi\u1ea3i m\u1ed9t b\u00e0i to\u00e1n l\u00e0 vi\u1ec7c d\u1ec5, nh\u01b0ng \u0111\u1ec3 n\u00f3 c\u00f3 \u00fd ngh\u0129a trong th\u1ef1c t\u1ebf, th\u00ec thu\u1eadt to\u00e1n ph\u1ea3i ch\u1ea1y \u0111\u1ee7 nhanh. T\u1ed1c \u0111\u1ed9 c\u1ee7a m\u1ed9t thu\u1eadt t\u00f9y thu\u1ed9c v\u00e0o t\u1ed1c \u0111\u1ed9 m\u00e1y c\u0169ng nh\u01b0 chi ti\u1ebft c\u00e0i \u0111\u1eb7t, c\u00e1c nh\u00e0 khoa h\u1ecdc m\u00e1y t\u00ednh th\u01b0\u1eddng \u0111\u1ec1 c\u1eadp \u0111\u1ebfn runtime (th\u1eddi gian ch\u1ea1y) t\u01b0\u01a1ng \u1ee9ng v\u1edbi k\u00edch th\u01b0\u1edbc input. V\u00ed d\u1ee5, n\u1ebfu input g\u1ed3m \\(N\\) s\u1ed1, m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 th\u1eddi gian ch\u1ea1y t\u1ec9 l\u1ec7 thu\u1eadn v\u1edbi \\(N^2\\) \u0111\u01b0\u1ee3c k\u00ed hi\u1ec7u l\u00e0 \\(O(N^2)\\). K\u00fd hi\u1ec7u n\u00e0y ngh\u0129a l\u00e0, khi m\u00e1y t\u00ednh ch\u1ea1y m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n tr\u00ean v\u1edbi \u0111\u1ed9 l\u1edbn input l\u00e0 \\(N\\), ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd t\u1ed1n \\(C*N^2\\) gi\u00e2y, v\u1edbi \\(C\\) l\u00e0 m\u1ed9t h\u1eb1ng s\u1ed1 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o k\u00edch th\u01b0\u1edbc input.</p> <p>Tuy nhi\u00ean, th\u1eddi gian ch\u1ea1y th\u1ef1c t\u1ebf c\u1ee7a nhi\u1ec1u thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p c\u00f2n ph\u1ee5 thu\u1ed9c nhi\u1ec1u y\u1ebfu t\u1ed1 kh\u00e1c ngo\u00e0i \u0111\u1ed9 l\u1edbn input. V\u00ed d\u1ee5, m\u1ed9t thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp s\u1ebd ch\u1ea1y nhanh h\u01a1n nhi\u1ec1u khi \u0111\u01b0\u1ee3c x\u1eed l\u00ed m\u1ed9t d\u00e3y s\u1ed1 \u0111\u00e3 s\u1eafp x\u1ebfp s\u1eb5n so v\u1edbi khi ph\u1ea3i gi\u1ea3i quy\u1ebft m\u1ed9t d\u00e3y s\u1ed1 l\u1ed9n x\u1ed9n. T\u1eeb \u0111\u00f3 sinh ra hai kh\u00e1i ni\u1ec7m: th\u1eddi gian ch\u1ea1y t\u1ed1i \u0111a v\u00e0 th\u1eddi gian ch\u1ea1y trung b\u00ecnh. Th\u1eddi gian ch\u1ea1y t\u1ed1i \u0111a l\u00e0 th\u1eddi gian thu\u1eadt to\u00e1n c\u1ea7n \u0111\u1ec3 x\u1eed l\u00ed input trong tr\u01b0\u1eddng h\u1ee3p t\u1ed3i nh\u1ea5t. Th\u1eddi gian ch\u1ea1y trung b\u00ecnh l\u00e0 th\u1eddi gian trung b\u00ecnh cho m\u1ecdi input c\u00f3 th\u1ec3 xu\u1ea5t hi\u1ec7n. Trong 2 thu\u1eadt ng\u1eef, th\u1eddi gian t\u1ed1i \u0111a th\u01b0\u1eddng d\u1ec5 ph\u00e2n t\u00edch h\u01a1n, n\u00ean n\u00f3 th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 c\u00e1c thu\u1eadt to\u00e1n. Vi\u1ec7c t\u00ednh to\u00e1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p nhi\u1ec1u l\u00fac kh\u00f4ng \u0111\u01a1n gi\u1ea3n v\u00ec ta kh\u00f4ng th\u1ec3 ki\u1ec3m tra \u0111\u01b0\u1ee3c h\u1ebft m\u1ecdi tr\u01b0\u1eddng h\u1ee3p. B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ecdc th\u00eam v\u1ec1 m\u1ed9t s\u1ed1 k\u0129 n\u0103ng t\u00ednh to\u00e1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u1edf c\u00e1c ngu\u1ed3n kh\u00e1c.</p> <p>\u01af\u1edbc t\u00ednh th\u1eddi gian ch\u1ea1y c\u1ee7a c\u00e1c thu\u1eadt, \\(N = 100\\)</p> <ul> <li>\\(O(Log(N))\\): \\(10^{-7}\\) gi\u00e2y</li> <li>\\(O(N)\\): \\(10^{-6}\\) gi\u00e2y</li> <li>\\(O(N*Log(N))\\): \\(10^{-5}\\) gi\u00e2y</li> <li>\\(O(N^2)\\): \\(10^{-4}\\) gi\u00e2y</li> <li>\\(O(N^6)\\): \\(3\\) ph\u00fat</li> <li>\\(O(2^N)\\): \\(10^{14}\\) n\u0103m</li> <li>\\(O(N!)\\): \\(10^{142}\\) n\u0103m</li> </ul>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#sap-xep","title":"S\u1eafp x\u1ebfp","text":"<p>Thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n r\u1ea5t hay \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong khoa h\u1ecdc m\u00e1y t\u00ednh. C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u1ec3 s\u1eafp x\u1ebfp m\u1ed9t nh\u00f3m \u0111\u1ed3 v\u1eadt l\u00e0 l\u1ea5y ra m\u00f3n \u0111\u1ed3 nh\u1ecf nh\u1ea5t v\u00e0 \u0111\u1eb7t l\u00ean \u0111\u1ea7u. Ta l\u1ea1i l\u1ea5y ra m\u00f3n \u0111\u1ed3 nh\u1ecf th\u1ee9 hai v\u00e0 \u0111\u1eb7t c\u1ea1nh m\u00f3n \u0111\u1ea7u ti\u00ean; c\u1ee9 th\u1ebf ti\u1ebfp t\u1ee5c. \u0110\u00e1ng ti\u1ebfc, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y l\u00e0 \\(O(N^2)\\), t\u1ee9c th\u1eddi gian ch\u1ea1y c\u1ee7a thu\u1eadt s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi b\u00ecnh ph\u01b0\u01a1ng \u0111\u1ed9 l\u1edbn input. N\u1ebfu c\u1ea7n s\u1eafp x\u1ebfp 1 t\u1ec9 s\u1ed1, thu\u1eadt s\u1ebd c\u1ea7n \\(10^{18}\\) c\u00e2u l\u1ec7nh m\u00e1y t\u00ednh (instructions). \u0110\u1ec3 d\u1ec5 h\u00ecnh dung th\u00ec m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh hi\u1ec7n \u0111\u1ea1i m\u1ed7i gi\u00e2y ch\u1ec9 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c g\u1ea7n \\(10^9\\) c\u00e2u l\u1ec7nh, v\u00e0 s\u1ebd c\u1ea7n nhi\u1ec1u n\u0103m m\u1edbi s\u1eafp x\u1ebfp xong 1 t\u1ec9 con s\u1ed1 n\u00f3i tr\u00ean.</p> <p>May thay, c\u00f3 nhi\u1ec1u thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp kh\u00e1c hi\u1ec7u qu\u1ea3 h\u01a1n nh\u01b0 Quick Sort, Heap Sort, Merge Sort,... Nhi\u1ec1u thu\u1eadt c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u1ec9 \\(O(N\\*Log(N))\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p nh\u1ecf h\u01a1n r\u00fat ng\u1eafn r\u1ea5t nhi\u1ec1u th\u1eddi gian \u0111\u1ec3 s\u1eafp x\u1ebfp 1 t\u1ec9 con s\u1ed1, \u0111\u1ebfn m\u1ee9c m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh b\u00ecnh th\u01b0\u1eddng nh\u1ea5t c\u0169ng th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c trong ch\u01b0a \u0111\u1ebfn m\u1ed9t ph\u00fat. Thay v\u00ec \\(10^{18}\\) c\u00e2u l\u1ec7nh, m\u00e1y ch\u1ec9 ph\u1ea3i th\u1ef1c hi\u1ec7n \\(10^{10}\\).</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#uong-i-ngan-nhat","title":"\u0110\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t","text":"<p>Thu\u1eadt to\u00e1n t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t gi\u1eefa hai \u0111i\u1ec3m \u0111\u00e3 \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u t\u1eeb r\u1ea5t l\u00e2u. \u1ee8ng d\u1ee5ng c\u1ee7a thu\u1eadt to\u00e1n n\u00e0y r\u1ea5t nhi\u1ec1u, nh\u01b0ng t\u1ea1m th\u1eddi h\u00e3y x\u00e9t b\u00e0i to\u00e1n c\u01a1 b\u1ea3n nh\u1ea5t: t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb A \u0111\u1ebfn B trong m\u1ed9t th\u00e0nh ph\u1ed1 v\u1edbi m\u1ed9t s\u1ed1 con \u0111\u01b0\u1eddng v\u00e0 giao l\u1ed9. C\u00f3 r\u1ea5t nhi\u1ec1u thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n \u0111\u1ec3 gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i ki\u1ec3u n\u00e0y, v\u1edbi m\u1ed7i ph\u01b0\u01a1ng ph\u00e1p c\u00f3 \u01b0u nh\u01b0\u1ee3c \u0111i\u1ec3m ri\u00eang. Tr\u01b0\u1edbc khi t\u00ecm hi\u1ec3u v\u1ec1 ch\u00fang, h\u00e3y xem th\u1eed \"thu\u1eadt tr\u00e2u\" - x\u00e9t h\u1ebft c\u00e1c kh\u1ea3 n\u0103ng - s\u1ebd m\u1ea5t bao l\u00e2u \u0111\u1ec3 gi\u1ea3i. \u0110\u00e1ng ti\u1ebfc, ta s\u1ebd kh\u00f4ng s\u1ed1ng \u0111\u1ee7 l\u00e2u \u0111\u1ec3 bi\u1ebft k\u1ebft qu\u1ea3 t\u1eeb ph\u01b0\u01a1ng ph\u00e1p n\u00e0y - cho d\u00f9 A v\u00e0 B \u0111\u1ec1u \u1edf trong m\u1ed9t th\u1ecb tr\u1ea5n nh\u1ecf, b\u1edfi \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt l\u00e0 \\(O(C ^ N)\\), v\u1edbi \\(C\\) l\u00e0 h\u1eb1ng s\u1ed1. D\u00f9 \\(C\\) c\u00f3 nh\u1ecf, \\(C ^ N\\) s\u1ebd tr\u1edf n\u00ean l\u1edbn kh\u1ee7ng khi\u1ebfp ngay c\u1ea3 v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb v\u1eeba ph\u1ea3i c\u1ee7a \\(N\\).</p> <p>M\u1ed9t trong nh\u1eefng thu\u1eadt to\u00e1n nhanh nh\u1ea5t \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(E \\* Log(V))\\), v\u1edbi \\(E\\) l\u00e0 s\u1ed1 \u0111\u01b0\u1eddng \u0111i, \\(V\\) l\u00e0 s\u1ed1 giao l\u1ed9. \u0110\u1ec3  d\u1ec5 h\u00ecnh dung, thu\u1eadt to\u00e1n s\u1ebd m\u1ea5t 2 gi\u00e2y \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t trong th\u00e0nh ph\u1ed1 c\u00f3 10000 giao l\u1ed9 v\u00e0 20000 con \u0111\u01b0\u1eddng. Thu\u1eadt to\u00e1n n\u00e0y - Djikstra - kh\u00e1 ph\u1ee9c t\u1ea1p v\u00e0 \u0111\u00f2i h\u1ecfi s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u H\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean (Priority Queue). Tuy nhi\u00ean c\u00f3 nh\u1eefng tr\u01b0\u1eddng h\u1ee3p m\u00e0 ngay c\u1ea3 Djisktra c\u0169ng tr\u1edf n\u00ean qu\u00e1 ch\u1eadm (v\u00ed d\u1ee5 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb H\u00e0 N\u1ed9i \u0111\u1ebfn Sillicon Valley - c\u00f3 \u0111\u1ebfn h\u00e0ng t\u1ec9 giao l\u1ed9), c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean s\u1ebd s\u1eed d\u1ee5ng heuristics. Heuristics l\u00e0 m\u1ed9t h\u00e0m x\u1ea5p x\u1ec9 c\u1ee7a m\u1ed9t t\u00ednh ch\u1ea5t c\u1ee7a b\u00e0i to\u00e1n. V\u00ed d\u1ee5, trong b\u00e0i to\u00e1n n\u00e0y, 1 heuristic c\u00f3 th\u1ec3 l\u00e0 kho\u1ea3ng c\u00e1ch \u0111\u01b0\u1eddng chim bay gi\u1eefa 2 \u0111i\u1ec3m. S\u1eed d\u1ee5ng heuristic, ch\u00fang ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c l\u1eddi gi\u1ea3i nhanh h\u01a1n, v\u00ed d\u1ee5 thu\u1eadt to\u00e1n A* c\u00f3 th\u1ec3 ch\u1ea1y nhanh h\u01a1n Dijkstra trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng r\u00fat ng\u1eafn th\u1eddi gian ch\u1ea1y c\u1ee7a thu\u1eadt trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, nh\u01b0ng n\u00f3 hi\u1ec7u qu\u1ea3 v\u1edbi ph\u1ea7n l\u1edbn tr\u01b0\u1eddng h\u1ee3p trong th\u1ef1c t\u1ebf.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#thuat-toan-xap-xi","title":"Thu\u1eadt to\u00e1n x\u1ea5p x\u1ec9","text":"<p>Th\u1ebf nh\u01b0ng \u0111\u00f4i khi, ngay c\u1ea3 v\u1edbi thu\u1eadt m\u1ea1nh nh\u1ea5t, d\u00f9ng heuristics t\u1ed1t nh\u1ea5t, ch\u1ea1y tr\u00ean m\u00e1y t\u00ednh nhanh nh\u1ea5t c\u0169ng tr\u1edf n\u00ean qu\u00e1 ch\u1eadm. \u0110\u1ed1i v\u1edbi c\u00e1c tr\u01b0\u1eddng h\u1ee3p n\u00e0y ta bu\u1ed9c ph\u1ea3i hi sinh ph\u1ea7n n\u00e0o s\u1ef1 ch\u00ednh x\u00e1c c\u1ee7a k\u1ebft qu\u1ea3. Thay v\u00ec c\u1ed1 \u0111i t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t, ta \u0111\u00e3 c\u00f3 th\u1ec3 th\u1ecfa m\u00e3n v\u1edbi m\u1ed9t con \u0111\u01b0\u1eddng kh\u00f4ng d\u00e0i h\u01a1n 10% so v\u1edbi k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u.</p> <p>Th\u1ef1c t\u1ebf, c\u00f3 nhi\u1ec1u b\u00e0i to\u00e1n quan tr\u1ecdng m\u00e0 thu\u1eadt t\u1ed1i \u01b0u c\u1ee7a ch\u00fang qu\u00e1 ch\u1eadm v\u00e0 kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c. Nh\u00f3m b\u00e0i n\u1ed5i ti\u1ebfng nh\u1ea5t cho t\u00ednh c\u00e1ch n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 NP - non-deterministic polynomial. Khi m\u1ed9t b\u00e0i to\u00e1n n\u00e0o \u0111\u00f3 \u0111\u01b0\u1ee3c cho l\u00e0 NP-hard hay NP-complete, \u0111\u1ed3ng ngh\u0129a kh\u00f4ng ai bi\u1ebft thu\u1eadt to\u00e1n t\u1ed1i \u01b0u c\u1ee7a n\u00f3. H\u01a1n n\u1eefa, n\u1ebfu ai \u0111\u00f3 ngh\u0129 ra \u0111\u01b0\u1ee3c thu\u1eadt t\u1ed1i \u01b0u cho m\u1ed9t b\u00e0i to\u00e1n NP-complete, thu\u1eadt \u0111\u00f3 c\u0169ng \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c cho m\u1ecdi b\u00e0i to\u00e1n NP-complete kh\u00e1c.</p> <p>M\u1ed9t v\u00ed d\u1ee5 n\u1ed5i ti\u1ebfng c\u1ee7a NP-hard l\u00e0 b\u00e0i to\u00e1n Ng\u01b0\u1eddi b\u00e1n h\u00e0ng (Traveling Salesman Problem - TSP). M\u1ed9t ng\u01b0\u1eddi b\u00e1n h\u00e0ng c\u1ea7n \u0111i \u0111\u1ebfn \\(N\\) th\u00e0nh ph\u1ed1, v\u00e0 anh ta bi\u1ebft c\u1ea7n bao l\u00e2u \u0111\u1ec3 \u0111i t\u1eeb m\u1ed9t th\u00e0nh ph\u1ed1 \u0111\u1ebfn m\u1ed9t th\u00e0nh ph\u1ed1 kh\u00e1c. C\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0, nhanh nh\u1ea5t th\u00ec m\u1ea5t bao l\u00e2u \u0111\u1ec3 anh ta \u0111i h\u1ebft \\(N\\) th\u00e0nh ph\u1ed1? B\u1edfi thu\u1eadt to\u00e1n nhanh nh\u1ea5t cho TSP v\u1eabn qu\u00e1 ch\u1eadm - nhi\u1ec1u ng\u01b0\u1eddi tin l\u00e0 \u0111i\u1ec1u n\u00e0y s\u1ebd lu\u00f4n \u0111\u00fang - ta t\u00ecm \u0111\u1ebfn nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ee7 nhanh m\u00e0 \u0111\u01b0a ra \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 g\u1ea7n \u0111\u00fang, thay v\u00ec thu\u1eadt to\u00e1n t\u1ed1i \u01b0u.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#thuat-toan-ngau-nhien","title":"Thu\u1eadt to\u00e1n ng\u1eabu nhi\u00ean","text":"<p>M\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn v\u1ea5n \u0111\u1ec1 kh\u00e1c \u0111\u00f3 l\u00e0 th\u1eed \"random\" theo m\u1ed9t c\u00e1ch n\u00e0o \u0111\u00f3. Tuy kh\u00f4ng c\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, bi\u1ec7n ph\u00e1p n\u00e0y s\u1ebd c\u00f3 hi\u1ec7u qu\u1ea3 v\u1edbi nh\u1eefng tr\u01b0\u1eddng h\u1ee3p b\u00ecnh th\u01b0\u1eddng. QuickSort l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho vi\u1ec7c random nh\u01b0 v\u1eady. Khi \"suy bi\u1ebfn\", QuickSort s\u1ebd s\u1eafp x\u1ebfp m\u1ed9t d\u00e3y trong \\(O(N^2)\\), v\u1edbi \\(N\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y. Nh\u01b0ng n\u1ebfu \u00e1p d\u1ee5ng random v\u00e0o thu\u1eadt to\u00e1n, x\u00e1c su\u1ea5t x\u1ea3y ra suy bi\u1ebfn l\u00e0 c\u1ef1c k\u00ec th\u1ea5p, v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh c\u1ee7a QuickSort tr\u1edf th\u00e0nh \\(O(N*Log(N))\\). C\u00f3 nh\u1eefng thu\u1eadt c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N\\*Log(N))\\) k\u1ec3 c\u1ea3 \u1edf tr\u01b0\u1eddng h\u1ee3p x\u1ea5u, nh\u01b0ng ch\u00fang s\u1ebd ch\u1eadm h\u01a1n \u1edf tr\u01b0\u1eddng h\u1ee3p b\u00ecnh th\u01b0\u1eddng. D\u00f9 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u00f9ng l\u00e0 \\(O(N\\*Log(N))\\), QuickSort c\u00f3 h\u1eb1ng s\u1ed1 \\(C\\) nh\u1ecf h\u01a1n nhi\u1ec1u, t\u1ee9c s\u1ed1 ph\u00e9p t\u00ednh c\u1ea7n th\u1ef1c hi\u1ec7n nh\u1ecf h\u01a1n.</p> <p>M\u1ed9t thu\u1eadt to\u00e1n kh\u00e1c d\u00f9ng random \u0111\u1ec3 t\u00ecm trung v\u1ecb c\u1ee7a m\u1ed9t d\u00e3y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh \\(O(N)\\). \u0110\u00e2y l\u00e0 c\u1ea3i ti\u1ebfn r\u1ea5t l\u1edbn so v\u1edbi vi\u1ec7c s\u1eafp x\u1ebfp l\u1ea1i d\u00e3y v\u00e0 ch\u1ecdn ra ph\u1ea7n t\u1eed gi\u1eefa v\u1ed1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N*Log(N))\\). Th\u00eam n\u1eefa, cho d\u00f9 v\u1eabn c\u00f3 c\u00e1c thu\u1eadt to\u00e1n t\u00ecm trung v\u1ecb kh\u00f4ng-random v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(N)\\), thu\u1eadt to\u00e1n n\u00e0y v\u1eabn \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng nhi\u1ec1u h\u01a1n nh\u1edd c\u00e0i \u0111\u1eb7t gi\u1ea3n v\u00e0 t\u1ed1c \u0111\u1ed9 ch\u1ea1y nhanh h\u01a1n.</p> <p>\u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a Thu\u1eadt to\u00e1n trung v\u1ecb n\u00e0y l\u00e0 ch\u1ecdn ng\u1eabu nhi\u00ean m\u1ed9t s\u1ed1 \\(X\\) b\u1ea5t k\u00ec trong d\u00e3y, v\u00e0 \u0111\u1ebfm xem c\u00f3 bao nhi\u00eau s\u1ed1 nh\u1ecf h\u01a1n n\u00f3. Gi\u1ea3 s\u1eed d\u00e3y c\u00f3 \\(N\\) s\u1ed1, v\u00e0 c\u00f3 \\(K\\) s\u1ed1 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(X\\). N\u1ebfu \\(K&lt;N/2\\), v\u1eady ta bi\u1ebft trung v\u1ecb s\u1ebd l\u00e0 s\u1ed1 th\u1ee9 \\((N/2 - K)\\) l\u1edbn h\u01a1n \\(X\\). Ta b\u1ecf \u0111i \\(K\\) s\u1ed1 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng \\(X\\). B\u00e2y gi\u1edd ta ph\u1ea3i t\u00ecm s\u1ed1 nh\u1ecf th\u1ee9 \\((N/2-K)\\), thay v\u00ec s\u1ed1 trung v\u1ecb. Ta ti\u1ebfp t\u1ee5c random m\u1ed9t s\u1ed1 \\(X\\) kh\u00e1c, v\u00e0 l\u1eb7p l\u1ea1i. </p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#compression-nen","title":"Compression - N\u00e9n","text":"<p>M\u1ed9t l\u1edbp kh\u00e1c c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd x\u1eed l\u00ed nh\u1eefng v\u1ea5n \u0111\u1ec1 nh\u01b0 data compression (n\u00e9n d\u1eef li\u1ec7u). Lo\u1ea1i thu\u1eadt to\u00e1n n\u00e0y kh\u00f4ng c\u00f3 output x\u00e1c \u0111\u1ecbnh m\u00e0 thay v\u00e0o \u0111\u00f3 c\u1ed1 g\u1eafng t\u1ed1i \u01b0u \u1edf nh\u1eefng ti\u00eau ch\u00ed kh\u00e1c. V\u1edbi data compression, thu\u1eadt (nh\u01b0 LZW) s\u1ebd c\u1ed1 g\u1eafng \u0111\u1ec3 cho output nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3, v\u00e0 v\u1eabn c\u00f3 kh\u1ea3 n\u0103ng ph\u1ee5c h\u1ed3i l\u1ea1i tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u. Nh\u1eefng thu\u1eadt to\u00e1n ki\u1ec3u n\u00e0y cho ra k\u1ebft qu\u1ea3 c\u00f3 th\u1ec3 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c, nh\u01b0ng kh\u00f4ng ph\u1ea3i t\u1ed1i \u01b0u nh\u1ea5t. V\u00ed d\u1ee5 thu\u1eadt to\u00e1n c\u1ee7a JPG v\u00e0 MP3, d\u00f9 khi\u1ebfn d\u1eef li\u1ec7u b\u1ecb gi\u1ea3m ch\u1ea5t l\u01b0\u1ee3ng \u0111i \u0111\u00f4i ch\u00fat, s\u1ebd t\u1ea1o ra nh\u1eefng files nh\u1ecf h\u01a1n files g\u1ed1c r\u1ea5t nhi\u1ec1u. Files MP3 kh\u00f4ng c\u1ed1 g\u1eafng gi\u1eef l\u1ea1i m\u1ecdi \u00e2m thanh c\u1ee7a b\u00e0i h\u00e1t m\u00e0 ghi v\u1eeba \u0111\u1ee7 th\u00f4ng tin \u0111\u1ec3 ch\u1ea5t l\u01b0\u1ee3ng v\u1eeba t\u1ed1t, dung l\u01b0\u1ee3ng files l\u1ea1i nh\u1ecf. Files JPG c\u0169ng d\u1ef1a tr\u00ean \u00fd t\u01b0\u1edfng t\u01b0\u01a1ng t\u1ef1.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#tam-quan-trong-cua-thuat-toan","title":"T\u1ea7m quan tr\u1ecdng c\u1ee7a thu\u1eadt to\u00e1n","text":"<p>V\u1edbi m\u1ed9t l\u1eadp tr\u00ecnh vi\u00ean, hay m\u1ed9t nh\u00e0 khoa h\u1ecdc m\u00e1y t\u00ednh, hi\u1ec3u r\u00f5 v\u1ec1 c\u00e1c thu\u1eadt to\u00e1n v\u1eeba n\u00eau l\u00e0 r\u1ea5t quan tr\u1ecdng \u0111\u1ec3 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng th\u1ef1c ti\u1ec5n. N\u1ebfu ta vi\u1ebft m\u1ed9t ph\u1ea7n m\u1ec1m, ta s\u1ebd ph\u1ea3i \u0111\u00e1nh gi\u00e1 \u0111\u01b0\u1ee3c ph\u1ea7n m\u1ec1m \u0111\u00f3 s\u1ebd ho\u1ea1t \u0111\u1ed9ng nhanh ch\u1eadm ra sao. Nh\u1eefng \u0111\u00e1nh gi\u00e1 nh\u01b0 v\u1eady s\u1ebd k\u00e9m ch\u00ednh x\u00e1c h\u01a1n nhi\u1ec1u n\u1ebfu ta kh\u00f4ng c\u00f3 hi\u1ec3u bi\u1ebft v\u1ec1 th\u1eddi gian ch\u1ea1y hay \u0111\u1ed9 ph\u1ee9c t\u1ea1p. Th\u00eam n\u1eefa, hi\u1ec3u bi\u1ebft v\u1ec1 thu\u1eadt to\u00e1n c\u1ee7a nh\u1eefng g\u00ec ta \u0111ang l\u00e0m s\u1ebd gi\u00fap ta d\u1ef1 \u0111o\u00e1n nh\u1eefng tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t khi\u1ebfn ph\u1ea7n m\u1ec1m ch\u1ea1y ch\u1eadm \u0111i hay x\u1ea3y ra l\u1ed7i.</p> <p>T\u1ea5t nhi\u00ean, ta s\u1ebd th\u01b0\u1eddng xuy\u00ean g\u1eb7p nh\u1eefng b\u00e0i to\u00e1n ch\u01b0a \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u tr\u01b0\u1edbc \u0111\u00f3. L\u00fac n\u00e0y ta ph\u1ea3i t\u1ef1 ngh\u0129 ra thu\u1eadt m\u1edbi, ho\u1eb7c \u00e1p d\u1ee5ng thu\u1eadt c\u0169 m\u1ed9t c\u00e1ch s\u00e1ng t\u1ea1o h\u01a1n. C\u00e0ng c\u00f3 ki\u1ebfn th\u1ee9c v\u1ec1 thu\u1eadt to\u00e1n, ta c\u00e0ng c\u00f3 kh\u1ea3 n\u0103ng gi\u1ea3i quy\u1ebft th\u00e0nh c\u00f4ng v\u1ea5n \u0111\u1ec1. Trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p, m\u1ed9t v\u1ea5n \u0111\u1ec1 m\u1edbi c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1ec1 m\u1ed9t v\u1ea5n \u0111\u1ec1 c\u0169 h\u01a1n m\u00e0 kh\u00f4ng c\u1ea7n qu\u00e1 nhi\u1ec1u s\u1ee9c l\u1ef1c, v\u1edbi \u0111i\u1ec1u ki\u1ec7n ta ph\u1ea3i c\u00f3 ki\u1ebfn th\u1ee9c \u0111\u1ee7 s\u00e2u v\u1ec1 v\u1ea5n \u0111\u1ec1 c\u0169 n\u00e0y.</p> <p>\u0110\u1ec3 minh h\u1ecda, h\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng v\u1ec1 c\u00f4ng vi\u1ec7c c\u1ee7a m\u1ed9t \"switch\" internet. M\u1ed9t switch c\u00f3 \\(N\\) s\u1ee3i d\u00e2y c\u00e1p, v\u00e0 s\u1ebd nh\u1eadn c\u00e1c g\u00f3i data t\u1eeb c\u00e1c s\u1ee3i c\u00e1p n\u00e0y. Switch s\u1ebd ph\u1ea3i ph\u00e2n t\u00edch c\u00e1c g\u00f3i data n\u00e0y r\u1ed3i tr\u1ea3 ch\u00fang v\u1ec1 \u0111\u00fang d\u00e2y c\u00e1p c\u0169. C\u00e1i switch n\u00e0y c\u0169ng gi\u1ed1ng nh\u01b0 m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh, l\u00e0m vi\u1ec7c d\u1ef1a tr\u00ean c\u00e1c xung nh\u1ecbp v\u1edbi c\u00e1c b\u01b0\u1edbc r\u00e0nh m\u1ea1ch; c\u00e1c g\u00f3i d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c g\u1eedi ra \u1edf c\u00e1c qu\u00e3ng ngh\u1ec9 - intervals - thay v\u00ec li\u00ean t\u1ee5c. \u1ede m\u1ed9t switch nhanh, ch\u00fang ta c\u1ea7n g\u1eedi c\u00e1c g\u00f3i d\u1eef li\u1ec7u n\u00e0y c\u00e0ng nhanh c\u00e0ng t\u1ed1t \u1edf m\u1ed7i qu\u00e3ng ngh\u1ec9 \u0111\u1ec3 ch\u00fang kh\u00f4ng \u1ee9 \u0111\u1ecdng v\u00e0 b\u1ecb b\u1ecf qua. V\u1eady m\u1ee5c ti\u00eau c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 g\u1eedi c\u00e0ng nhi\u1ec1u g\u00f3i data c\u00e0ng t\u1ed1t \u1edf m\u1ed7i qu\u00e3ng ngh\u1ec9, v\u00e0 g\u00f3i n\u00e0o \u0111\u1ebfn tr\u01b0\u1edbc th\u00ec \u0111\u01b0\u1ee3c chuy\u1ec3n \u0111i tr\u01b0\u1edbc. H\u00f3a ra, m\u1ed9t thu\u1eadt to\u00e1n c\u00f3 t\u00ean \"stable matching\" c\u00f3 li\u00ean h\u1ec7 tr\u1ef1c ti\u1ebfp t\u1edbi v\u1ea5n \u0111\u1ec1 n\u00e0y v\u00e0 ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng, d\u00f9 nh\u00ecn s\u01a1 m\u1ed1i t\u01b0\u01a1ng quan gi\u1eefa v\u1ea5n \u0111\u1ec1 v\u00e0 thu\u1eadt to\u00e1n c\u00f3 v\u1ebb kh\u00f4ng r\u00f5 r\u00e0ng. Ch\u1ec9 c\u00f3 n\u1ec1n t\u1ea3ng thu\u1eadt to\u00e1n v\u1eefng v\u00e0ng m\u1edbi gi\u00fap ta \u0111i \u0111\u1ebfn l\u1eddi gi\u1ea3i cho nh\u1eefng tr\u01b0\u1eddng h\u1ee3p nh\u01b0 v\u1eady.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#mot-vai-vi-du-thuc-te","title":"M\u1ed9t v\u00e0i v\u00ed d\u1ee5 th\u1ef1c t\u1ebf","text":"<p>C\u00f3 r\u1ea5t nhi\u1ec1u v\u00ed d\u1ee5 cho th\u1ea5y c\u00e1c v\u1ea5n \u0111\u1ec1 th\u1ef1c t\u1ebf \u0111\u00f2i h\u1ecfi hi\u1ec3u bi\u1ebft v\u1ec1 thu\u1eadt to\u00e1n. G\u1ea7n nh\u01b0 m\u1ecdi th\u1ee9 b\u1ea1n \u0111ang l\u00e0m v\u1edbi m\u00e1y t\u00ednh \u0111\u01b0\u1ee3c d\u1ef1a tr\u00ean m\u1ed9t thu\u1eadt to\u00e1n n\u00e0o \u0111\u00f3 m\u00e0 c\u00f3 ng\u01b0\u1eddi ph\u1ea3i r\u1ea5t v\u1ea5t v\u1ea3 m\u1edbi t\u00ecm ra. Cho d\u00f9 l\u00e0 \u1ee9ng d\u1ee5ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t c\u1ee7a m\u00e1y t\u00ednh hi\u1ec7n \u0111\u1ea1i c\u0169ng c\u1ea7n \u0111\u1ebfn thu\u1eadt to\u00e1n \u0111\u1ec3 qu\u1ea3n l\u00ed d\u1eef b\u1ed9 nh\u1edb v\u00e0 truy xu\u1ea5t th\u00f4ng tin t\u1eeb hard drive (\u1ed5 c\u1ee9ng).</p> <p>C\u00f3 r\u1ea5t nhi\u1ec1u v\u00ed d\u1ee5 trong \u0111\u1eddi s\u1ed1ng, \u1edf \u0111\u00e2y t\u00f4i s\u1ebd gi\u1edbi thi\u1ec7u 2 b\u00e0i to\u00e1n th\u1ef1c t\u1ebf c\u00f3 c\u00f9ng \u0111\u1ed9 kh\u00f3 v\u1edbi c\u00e1c b\u00e0i \u1edf TopCoder. B\u00e0i \u0111\u1ea7u l\u00e0 Maximum Flow Problem (Lu\u1ed3ng C\u1ef1c \u0110\u1ea1i), v\u00e0 b\u00e0i sau c\u00f3 li\u00ean quan \u0111\u1ebfn Dynamic Programming (Quy Ho\u1ea1ch \u0110\u1ed9ng) - m\u1ed9t k\u0129 thu\u1eadt gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c nh\u1eefng v\u1ea5n \u0111\u1ec1 t\u01b0\u1edfng nh\u01b0 kh\u00f4ng th\u1ec3 v\u1edbi t\u1ed1c \u0111\u1ed9 cao.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#maximum-flow-luong-cuc-ai","title":"Maximum Flow - Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i","text":"<p>B\u00e0i to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i li\u00ean quan \u0111\u1ebfn b\u00e0i to\u00e1n t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t \u0111\u00e3 \u0111\u01b0\u1ee3c n\u00f3i \u1edf tr\u00ean. V\u00e0o nh\u1eefng n\u0103m 1950, b\u00e0i to\u00e1n l\u1ea7n \u0111\u1ea7u \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u, \u0111\u1ec3 \u00e1p d\u1ee5ng v\u1edbi m\u1ea1ng l\u01b0\u1edbi \u0111\u01b0\u1eddng s\u1eaft c\u1ee7a Li\u00ean X\u00f4. M\u1ef9 mu\u1ed1n bi\u1ebft Li\u00ean X\u00f4 c\u00f3 th\u1ec3 ti\u1ebfp t\u1ebf cho c\u00e1c n\u01b0\u1edbc v\u1ec7 tinh \u1edf \u0110\u00f4ng \u00c2u th\u00f4ng qua m\u1ea1ng l\u01b0\u1edbi \u0111\u01b0\u1eddng s\u1eaft nhanh nh\u01b0 th\u1ebf n\u00e0o.</p> <p>Th\u00eam v\u00e0o \u0111\u00f3, M\u1ef9 c\u00f2n mu\u1ed1n bi\u1ebft tuy\u1ebfn \u0111\u01b0\u1eddng n\u00e0o c\u00f3 th\u1ec3 b\u1ecb ph\u00e1 ho\u1ea1i d\u1ec5 d\u00e0ng nh\u1ea5t nh\u1eb1m chia c\u1eaft c\u00e1c n\u01b0\u1edbc n\u00e0y kh\u1ecfi Li\u00ean Bang. H\u00f3a ra, 2 v\u1ea5n \u0111\u1ec1 n\u00e0y li\u00ean quan m\u1eadt thi\u1ebft, v\u00e0 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n v\u1ec1 ti\u1ebfp t\u1ebf s\u1ebd gi\u1ea3i quy\u1ebft lu\u00f4n v\u1ea5n \u0111\u1ec1 th\u1ee9 hai.</p> <p>Thu\u1eadt to\u00e1n hi\u1ec7u qu\u1ea3 \u0111\u1ea7u ti\u00ean cho b\u00e0i to\u00e1n t\u00ecm lu\u1ed3ng c\u1ef1c \u0111\u1ea1i \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Ford v\u00e0 Fulkerson; thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean 2 nh\u00e0 khoa h\u1ecdc m\u00e1y t\u00ednh n\u00e0y v\u00e0 \u0111\u00e3 tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng thu\u1eadt to\u00e1n n\u1ed5i ti\u1ebfng nh\u1ea5t ng\u00e0nh. Trong 50 n\u0103m qua, m\u1ed9t s\u1ed1 c\u1ea3i ti\u1ebfn \u0111\u00e3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng \u0111\u1ec3 thu\u1eadt nhanh h\u01a1n, nhi\u1ec1u trong s\u1ed1 \u0111\u00f3 v\u00f4 c\u00f9ng tinh t\u1ebf.</p> <p>T\u1eeb l\u00fac b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u, c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u01b0a ra. V\u00ed d\u1ee5 trong m\u1ea1ng m\u00e1y t\u00ednh, ta c\u1ea7n truy\u1ec1n th\u1eadt nhi\u1ec1u d\u1eef li\u1ec7u t\u1eeb m\u1ed9t \u0111i\u1ec3m \u0111\u1ebfn m\u1ed9t \u0111i\u1ec3m kh\u00e1c. Trong kinh doanh, thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong nghi\u00ean c\u1ee9u v\u1eadn h\u00e0nh (operations research). V\u00ed d\u1ee5, n\u1ebfu b\u1ea1n c\u00f3 \\(N\\) nh\u00e2n vi\u00ean v\u00e0 \\(N\\) c\u00f4ng vi\u1ec7c c\u1ea7n l\u00e0m, nh\u01b0ng kh\u00f4ng ph\u1ea3i ai c\u0169ng l\u00e0m \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 m\u1ecdi c\u00f4ng vi\u1ec7c, thu\u1eadt to\u00e1n t\u00ecm lu\u1ed3ng c\u1ef1c \u0111\u1ea1i s\u1ebd ch\u1ec9 ra c\u00e1ch giao vi\u1ec7c \u0111\u1ec3 c\u00e1c c\u00f4ng vi\u1ec7c \u0111\u1ec1u ho\u00e0n th\u00e0nh, mi\u1ec5n l\u00e0 c\u00f3 ph\u01b0\u01a1ng \u00e1n kh\u1ea3 thi.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#sequence-comparison-so-sanh-chuoi","title":"Sequence Comparison - So s\u00e1nh chu\u1ed7i","text":"<p>Nhi\u1ec1u coder \u0111i l\u00e0m c\u1ea3 \u0111\u1eddi m\u00e0 kh\u00f4ng t\u1eebng ph\u1ea3i c\u00e0i m\u1ed9t thu\u1eadt to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng n\u00e0o. Th\u1ebf nh\u01b0ng quy ho\u1ea1ch \u0111\u1ed9ng l\u00e0 c\u1ea7n thi\u1ebft cho nhi\u1ec1u thu\u1eadt to\u00e1n quan tr\u1ecdng. M\u1ed9t thu\u1eadt to\u00e1n c\u00f3 l\u1ebd nhi\u1ec1u ng\u01b0\u1eddi \u0111\u00e3 t\u1eebng s\u1eed d\u1ee5ng qua m\u00e0 kh\u00f4ng bi\u1ebft, l\u00e0 t\u00ecm kho\u1ea3ng c\u00e1ch c\u1ee7a 2 chu\u1ed7i. C\u1ee5 th\u1ec3 h\u01a1n, t\u00ednh to\u00e1n xem sau bao nhi\u00eau l\u1ea7n th\u00eam, x\u00f3a hay s\u1eeda th\u00ec x\u00e2u A s\u1ebd tr\u1edf th\u00e0nh x\u00e2u B.</p> <p>V\u00ed d\u1ee5, c\u00f3 2 x\u00e2u \"AABAA\" v\u00e0 \"AAAB\". \u0110\u1ec3 chuy\u1ec3n x\u00e2u \u0111\u1ea7u th\u00e0nh x\u00e2u sau, \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 x\u00f3a k\u00ed t\u1ef1 'B' \u1edf gi\u1eefa r\u1ed3i chuy\u1ec3n 'A' cu\u1ed1i x\u00e2u th\u00e0nh 'B'. Thu\u1eadt to\u00e1n n\u00e0y c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng, v\u00ed d\u1ee5 nh\u01b0 trong c\u00e1c v\u1ea5n \u0111\u1ec1 li\u00ean quan \u0111\u1ebfn DNA hay ch\u1ed1ng \u0111\u1ea1o v\u0103n. V\u1edbi c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean, thu\u1eadt to\u00e1n n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng trong vi\u1ec7c so s\u00e1nh 2 phi\u00ean b\u1ea3n source code (m\u00e3 ngu\u1ed3n) c\u1ee7a c\u00f9ng 1 file. N\u1ebfu c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a chu\u1ed7i l\u00e0 c\u00e1c d\u00f2ng c\u1ee7a file, thu\u1eadt s\u1ebd cho ta bi\u1ebft d\u00f2ng code n\u00e0o b\u1ecb x\u00f3a, d\u00f2ng n\u00e0o b\u1ecb th\u00eam v\u00e0o hay s\u1eeda \u0111i trong c\u00e1c phi\u00ean b\u1ea3n \u0111\u00f3.</p> <p>Kh\u00f4ng c\u00f3 quy ho\u1ea1ch \u0111\u1ed9ng, ta s\u1ebd ph\u1ea3i x\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p theo c\u1ea5p s\u1ed1 m\u0169 \u0111\u1ec3 bi\u1ebfn m\u1ed9t x\u00e2u th\u00e0nh x\u00e2u kh\u00e1c. V\u1edbi quy ho\u1ea1ch \u0111\u1ed9ng, b\u00e0i to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u1ec9 \\(O(N\\*M)\\), trong \u0111\u00f3 \\(N\\) v\u00e0 \\(M\\) l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed c\u1ee7a m\u1ed7i x\u00e2u.</p>"},{"location":"translate/topcoder/The-Importance-of-Algorithm/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>S\u1ed1 thu\u1eadt to\u00e1n kh\u00e1c nhau m\u00e0 con ng\u01b0\u1eddi h\u1ecdc c\u0169ng nhi\u1ec1u nh\u01b0 s\u1ed1 b\u00e0i to\u00e1n kh\u00e1c nhau m\u00e0 ta c\u1ea7n gi\u1ea3i. Th\u1ebf nh\u01b0ng kh\u1ea3 n\u0103ng cao l\u00e0 b\u00e0i to\u00e1n b\u1ea1n \u0111ang c\u1ed1 g\u1eafng gi\u1ea3i c\u00f3 li\u00ean quan \u0111\u1ebfn m\u1ed9t b\u00e0i to\u00e1n kh\u00e1c, theo m\u1ed9t c\u00e1ch n\u00e0o \u0111\u00f3. C\u00f3 m\u1ed9t v\u1ed1n hi\u1ec3u bi\u1ebft s\u00e2u v\u00e0 r\u1ed9ng v\u1ec1 c\u00e1c thu\u1eadt to\u00e1n s\u1ebd gi\u00fap b\u1ea1n ch\u1ecdn l\u1ef1a \u0111\u01b0\u1ee3c h\u01b0\u1edbng \u0111i \u0111\u00fang v\u00e0 \u00e1p d\u1ee5ng th\u00e0nh c\u00f4ng. Khi nghi\u00ean c\u1ee9u thu\u1eadt to\u00e1n, nhi\u1ec1u b\u00e0i to\u00e1n nh\u00ecn c\u00f3 v\u1ebb kh\u00f4ng th\u1ef1c t\u1ebf, nh\u01b0ng k\u0129 n\u0103ng gi\u1ea3i quy\u1ebft \u0111\u00f3 l\u1ea1i \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong nh\u1eefng b\u00e0i to\u00e1n m\u00e0 ch\u00fang ta g\u1eb7p h\u00e0ng ng\u00e0y.</p>"},{"location":"translate/topcoder/Using-Regular-Expression/","title":"S\u1eed d\u1ee5ng Regex","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c: Using Regular Expressions - \u0111\u0103ng b\u1edfi Dan[Popovici] &amp; mariusmuja tr\u00ean Topcoder</p>"},{"location":"translate/topcoder/Using-Regular-Expression/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>M\u1ed9t regex (regular expression) l\u00e0 m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t d\u00f9ng \u0111\u1ec3 m\u00f4 t\u1ea3 m\u1ed9t m\u1eabu t\u00ecm ki\u1ebfm (search pattern). H\u1eb3n l\u00e0 nhi\u1ec1u b\u1ea1n \u0111\u00e3 nh\u00ecn th\u1ea5y ho\u1eb7c d\u00f9ng regex trong c\u00e1c c\u00e2u l\u1ec7nh nh\u01b0 <code>ls *.txt</code> (ho\u1eb7c <code>dir *.txt</code>) \u0111\u1ec3 li\u1ec7t k\u00ea ra t\u1ea5t c\u1ea3 c\u00e1c file c\u00f3 \u0111u\u00f4i txt. Regex r\u1ea5t h\u1eefu d\u1ee5ng kh\u00f4ng ch\u1ec9 trong vi\u1ec7c t\u00ecm ki\u1ebfm tr\u00ean x\u00e2u (pattern matching) m\u00e0 c\u00f2n trong vi\u1ec7c x\u1eed l\u00fd v\u0103n b\u1ea3n. Trong c\u00e1c k\u1ef3 SRMs th\u00ec regex c\u00f3 th\u1ec3 c\u1ef1c k\u1ef3 h\u1eefu \u00edch. V\u00e0i d\u00f2ng code s\u1eed d\u1ee5ng regex trong c\u00e1c b\u00e0i to\u00e1n x\u1eed l\u00fd text c\u00f3 th\u1ec3 khi\u1ebfn vi\u1ec7c l\u1eadp tr\u00ecnh tr\u1edf n\u00ean d\u1ec5 th\u1edf h\u01a1n nhi\u1ec1u.</p>"},{"location":"translate/topcoder/Using-Regular-Expression/#mo-ta-regex","title":"M\u00f4 t\u1ea3 regex","text":"<p>M\u1ed9t regex l\u00e0 m\u1ed9t ho\u1eb7c nhi\u1ec1u \"nh\u00e1nh\" kh\u00f4ng r\u1ed7ng, \u0111\u01b0\u1ee3c ph\u00e2n c\u00e1ch b\u1edfi k\u00fd t\u1ef1 <code>|</code>. Regex s\u1ebd kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 c\u00e1i g\u00ec kh\u1edbp v\u1edbi m\u1ed9t trong c\u00e1c nh\u00e1nh c\u1ee7a n\u00f3. Regex sau s\u1ebd kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 t\u1eeb n\u00e0o trong 3 t\u1eeb \"the\", \"top\", \"coder\".</p> <pre><code>Regex: the|top|coder\nINPUT: Marius is one of the topcoders.\n\nT\u00ecm th\u1ea5y \"the\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 17 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 20.\nT\u00ecm th\u1ea5y \"top\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 21 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 24.\nT\u00ecm th\u1ea5y \"coder\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 24 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 29.\n</code></pre> <p>M\u1ed9t nh\u00e1nh bao g\u1ed3m m\u1ed9t ho\u1eb7c nhi\u1ec1u m\u1ea3nh n\u1ed1i v\u00e0o v\u1edbi nhau. N\u00f3 s\u1ebd kh\u1edbp v\u1edbi m\u1ea3nh \u0111\u1ea7u ti\u00ean tr\u01b0\u1edbc, r\u1ed3i sau \u0111\u00f3 s\u1ebd \u0111\u1ebfn m\u1ea3nh th\u1ee9 2, th\u1ee9 3, v.v.  </p> <p>M\u1ed9t m\u1ea3nh l\u00e0 m\u1ed9t nguy\u00ean t\u1eed (atom) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c theo sau b\u1edfi m\u1ed9t trong c\u00e1c k\u00fd t\u1ef1 sau <code>*</code>, <code>+</code>, <code>?</code>, ho\u1eb7c bi\u00ean (bound):</p> <ul> <li>M\u1ed9t nguy\u00ean t\u1eed \u0111\u01b0\u1ee3c theo sau b\u1edfi <code>*</code> s\u1ebd kh\u1edbp v\u1edbi chu\u1ed7i n\u00e0o c\u00f3 0 ho\u1eb7c nhi\u1ec1u h\u01a1n ph\u1ea7n kh\u1edbp v\u1edbi nguy\u00ean t\u1eed \u0111\u00f3.</li> <li>M\u1ed9t nguy\u00ean t\u1eed \u0111\u01b0\u1ee3c theo sau b\u1edfi <code>+</code> s\u1ebd kh\u1edbp v\u1edbi chu\u1ed7i n\u00e0o c\u00f3 1 ho\u1eb7c nhi\u1ec1u h\u01a1n ph\u1ea7n kh\u1edbp v\u1edbi nguy\u00ean t\u1eed \u0111\u00f3.</li> <li>M\u1ed9t nguy\u00ean t\u1eed \u0111\u01b0\u1ee3c theo sau b\u1edfi <code>?</code> s\u1ebd kh\u1edbp v\u1edbi chu\u1ed7i n\u00e0o c\u00f3 0 ho\u1eb7c 1 ph\u1ea7n kh\u1edbp v\u1edbi nguy\u00ean t\u1eed \u0111\u00f3.  </li> </ul> <p>Regex sau s\u1ebd kh\u1edbp v\u1edbi chu\u1ed7i n\u00e0o c\u00f3 ch\u1eef \"top\" v\u00e0 \"coder\" n\u1ed1i ti\u1ebfp nhau:</p> <pre><code>Regex: (top|coder)+\nINPUT: This regex matches topcoder, codertop, toptop, toptoptop, codercoder...\nT\u00ecm th\u1ea5y \"topcoder\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 19 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 27.\nT\u00ecm th\u1ea5y \"codertop\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 37 v\u1ea3 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 45.\n</code></pre> <p>M\u1ed9t bi\u00ean \u0111\u01b0\u1ee3c b\u1eaft \u0111\u1ea7u b\u1edfi <code>{</code> \u0111\u01b0\u1ee3c theo sau b\u1edfi 1 ho\u1eb7c 2 s\u1ed1 nguy\u00ean kh\u00f4ng d\u1ea5u c\u00e1ch nhau b\u1edfi d\u1ea5u <code>,</code>, v\u00e0 lu\u00f4n k\u1ebft th\u00fac b\u1edfi <code>}</code>. N\u1ebfu c\u00f3 2 s\u1ed1 nguy\u00ean th\u00ec s\u1ed1 th\u1ee9 nh\u1ea5t s\u1ebd kh\u00f4ng l\u1edbn h\u01a1n s\u1ed1 th\u1ee9 hai.</p> <ul> <li>M\u1ed9t nguy\u00ean t\u1eed theo sau b\u1edfi m\u1ed9t bi\u00ean ch\u1ee9a duy nh\u1ea5t m\u1ed9t s\u1ed1 nguy\u00ean \\(i\\) th\u00ec s\u1ebd kh\u1edbp v\u1edbi x\u00e2u \u0111\u01b0\u1ee3c gh\u00e9p b\u1edfi \u0111\u00fang \\(i\\) nguy\u00ean t\u1eed.</li> <li>M\u1ed9t nguy\u00ean t\u1eed theo sau b\u1edfi m\u1ed9t bi\u00ean ch\u1ee9a duy nh\u1ea5t m\u1ed9t s\u1ed1 nguy\u00ean \\(i\\) c\u00f3 d\u1ea5u <code>,</code> \u0111\u1eb1ng sau th\u00ec s\u1ebd kh\u1edbp v\u1edbi x\u00e2u \u0111\u01b0\u1ee3c gh\u00e9p b\u1edfi \\(i\\) ho\u1eb7c nhi\u1ec1u h\u01a1n \\(i\\) nguy\u00ean t\u1eed.</li> <li>M\u1ed9t nguy\u00ean t\u1eed theo sau b\u1edfi m\u1ed9t bi\u00ean ch\u1ee9a 2 s\u1ed1 nguy\u00ean \\(i\\), \\(j\\) s\u1ebd kh\u1edbp v\u1edbi x\u00e2u \u0111\u01b0\u1ee3c gh\u00e9p b\u1edfi \\(i\\) \u0111\u1ebfn \\(j\\) nguy\u00ean t\u1eed.</li> </ul> <p>Regex sau s\u1ebd kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 x\u00e2u n\u00e0o c\u00f3 2, 3 ho\u1eb7c 4 k\u00fd t\u1ef1 <code>1</code>:</p> <pre><code>Regex: 1{2,4}\nINPUT: 101 + 10 = 111 , 11111 = 10000 + 1111\nT\u00ecm th\u1ea5y \"111\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 11 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 14.\nT\u00ecm th\u1ea5y \"1111\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 17 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 21\nT\u00ecm th\u1ea5y \"1111\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 33 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 37.\n</code></pre> <p>Ch\u00fang ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng chu\u1ed7i d\u00e0i nh\u1ea5t c\u00f3 th\u1ec3 s\u1ebd \u0111\u01b0\u1ee3c kh\u1edbp v\u00e0 c\u00e1c \u0111o\u1ea1n \u0111\u01b0\u1ee3c kh\u1edbp s\u1ebd kh\u00f4ng giao nhau. M\u1ed9t nguy\u00ean t\u1eed (atom) c\u00f3 th\u1ec3 l\u00e0:</p> <ul> <li>M\u1ed9t regex \u0111\u01b0\u1ee3c \u0111\u1eb7t trong d\u1ea5u ngo\u1eb7c tr\u00f2n <code>()</code> (kh\u1edbp v\u1edbi c\u1ea3 regex)</li> <li>M\u1ed9t bi\u1ec3u th\u1ee9c ngo\u1eb7c (xem v\u00ed d\u1ee5)</li> <li><code>.</code> (kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 k\u00fd t\u1ef1 n\u00e0o)</li> <li><code>^</code> (kh\u1edbp v\u1edbi x\u00e2u r\u1ed7ng \u1edf \u0111\u1ea7u d\u00f2ng)</li> <li><code>$</code> (kh\u1edbp v\u1edbi x\u00e2u r\u1ed7ng \u1edf cu\u1ed1i d\u00f2ng)</li> <li>K\u00fd t\u1ef1 <code>\\</code> \u0111\u01b0\u1ee3c theo sau b\u1edfi m\u1ed9t trong c\u00e1c k\u00fd t\u1ef1 <code>^.[$()\\|\\*+?{\\</code> (kh\u1edbp v\u1edbi c\u00e1c k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t t\u01b0\u01a1ng \u1ee9ng)</li> <li>M\u1ed9t k\u00fd t\u1ef1 (kh\u1edbp v\u1edbi k\u00fd t\u1ef1 \u0111\u00f3).</li> <li>K\u00fd t\u1ef1 <code>\\</code> \u0111\u01b0\u1ee3c theo sau b\u1edfi m\u1ed9t ch\u1eef s\u1ed1 \\(d\\) kh\u00e1c 0. Nguy\u00ean t\u1eed n\u00e0y s\u1ebd kh\u1edbp v\u1edbi chu\u1ed7i k\u00fd t\u1ef1 gi\u1ed1ng v\u1edbi chu\u1ed7i k\u00fd t\u1ef1 \u0111\u01b0\u1ee3c kh\u1edbp b\u1edfi bi\u1ec3u th\u1ee9c con trong ngo\u1eb7c tr\u00f2n th\u1ee9 \\(d\\) (\u0111\u00e1nh s\u1ed1 ngo\u1eb7c tr\u00f2n b\u1eb1ng v\u1ecb tr\u00ed c\u1ee7a m\u1edf ngo\u1eb7c t\u1eeb tr\u00e1i qua ph\u1ea3i). V\u00ed d\u1ee5: <code>([bc])\\1</code> s\u1ebd kh\u1edbp v\u1edbi <code>bb</code> ho\u1eb7c <code>cc</code> v\u00e0 kh\u00f4ng kh\u1edbp v\u1edbi <code>bc</code>.   </li> </ul> <p>Regex sau \u0111\u00e2y kh\u1edbp v\u1edbi m\u1ed9t x\u00e2u \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi 2 ch\u1eef in th\u01b0\u1eddng gi\u1ed1ng nhau \u0111\u01b0\u1ee3c ph\u00e2n c\u00e1ch b\u1edfi b\u1ea5t k\u1ef3 k\u00fd t\u1ef1 n\u00e0o:</p> <pre><code>Regex: ([a-z]+).\\1\nINPUT: top-topcoder|coder\nT\u00ecm th\u1ea5y \"top-top\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 0 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 7.\nT\u00ecm th\u1ea5y \"coder|coder\" b\u1eaft \u0111\u1ea7u v\u1edf v\u1ecb tr\u00ed 7 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 18.\n</code></pre> <p>M\u1ed9t danh s\u00e1ch c\u00e1c k\u00fd t\u1ef1 \u0111\u01b0\u1ee3c vi\u1ebft trong d\u1ea5u <code>[]</code> kh\u1edbp v\u1edbi b\u1ea5t k\u00fd k\u00fd t\u1ef1 \u0111\u01a1n n\u00e0o \u1edf trong danh s\u00e1ch.</p> <ul> <li>N\u1ebfu danh s\u00e1ch \u0111\u01b0\u1ee3c b\u1eaft \u0111\u1ea7u b\u1edfi <code>^</code>, n\u00f3 s\u1ebd kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 k\u00fd t\u1ef1 n\u00e0o kh\u00f4ng \u1edf trong danh s\u00e1ch.</li> <li>N\u1ebfu 2 k\u00fd t\u1ef1 trong danh s\u00e1ch \u0111\u01b0\u1ee3c ph\u00e2n c\u00e1ch b\u1edfi <code>-</code> th\u00ec c\u00f3 ngh\u0129a l\u00e0 danh s\u00e1ch n\u00e0y bao g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c k\u00fd t\u1ef1 n\u1eb1m trong \"\u0111o\u1ea1n\" v\u1edbi 2 \u0111\u1ea7u l\u00e0 2 k\u00fd t\u1ef1 \u0111\u00f3 (v\u00ed d\u1ee5 <code>[0-9]</code> kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 ch\u1eef s\u1ed1 th\u1eadp ph\u00e2n n\u00e0o).</li> </ul> <p>T\u1ea5t c\u1ea3 c\u00e1c k\u00fd t\u1ef1 (ngo\u1ea1i tr\u1eeb <code>]</code>, <code>^</code>, <code>-</code>), k\u1ec3 c\u1ea3 k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t \u0111\u1ec1u m\u1ea5t \u0111i t\u00ednh ch\u1ea5t \u0111\u1eb7c bi\u1ec7t c\u1ee7a n\u00f3 trong bi\u1ec3u th\u1ee9c ngo\u1eb7c.</p> <p>Regex sau \u0111\u00e2y kh\u1edbp v\u1edbi c\u00e1c t\u1eeb kh\u00f4ng b\u1eaft \u0111\u1ea7u b\u1edfi <code>b</code>, <code>c</code>, <code>d</code> v\u00e0 k\u1ebft th\u00fac b\u1edfi <code>at</code>:</p> <pre><code>Regex: [^b-d]at\nINPUT: bat\nKh\u00f4ng t\u00ecm th\u1ea5y x\u00e2u n\u00e0o kh\u1edbp.\n\nRegex: [^b-d]at\nINPUT: hat\nT\u00ecm th\u1ea5y \"hat\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 0 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 3.\n</code></pre> <p>V\u00ed d\u1ee5 sau \u0111\u00e2y s\u1ebd bao g\u1ed3m h\u1ea7u h\u1ebft c\u00e1c \u0111\u1ecbnh ngh\u0129a \u1edf ph\u00eda tr\u00ean \u0111\u00e3 n\u00eau. N\u00f3 s\u1ebd kh\u1edbp v\u1edbi m\u1ed9t c\u1eb7p HTML tag \u0111\u00f3ng/m\u1edf v\u00e0 n\u1ed9i dung gi\u1eefa 2 tag n\u00e0y.</p> <pre><code>Regex: &lt;([a-zA-Z][a-zA-Z0-9]*)(()| [^&gt;]*)&gt;(.*)&lt;/\\1&gt;\nINPUT: &lt;font size=\"2\"&gt;Topcoder is the&lt;/font&gt; &lt;b&gt;best&lt;/b&gt;\nT\u00ecm th\u1ea5y \"&lt;font size=\"2\"&gt;Topcoder is the&lt;/font&gt;\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 0 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 37.\nT\u00ecm th\u1ea5y \"&lt;b&gt;best&lt;/b&gt;\" b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed 38 v\u00e0 k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed 49.\n</code></pre> <p>Gi\u1ea3i th\u00edch:</p> <ul> <li><code>([a-zA-Z][a-zA-Z0-9]\\*)</code> s\u1ebd kh\u1edbp v\u1edbi b\u1ea5t k\u1ef3 t\u1eeb n\u00e0o b\u1eaft \u0111\u1ea7u b\u1edfi m\u1ed9t ch\u1eef c\u00e1i v\u00e0 ti\u1ebfp t\u1ee5c b\u1edfi m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng ch\u1eef c\u00e1i ho\u1eb7c ch\u1eef s\u1ed1 b\u1ea5t k\u1ef3.  </li> <li><code>(()| [^&gt;]\\*)</code> s\u1ebd kh\u1edbp v\u1edbi x\u00e2u r\u1ed7ng ho\u1eb7c b\u1ea5t k\u1ef3 x\u00e2u n\u00e0o kh\u00f4ng ch\u1ee9a '&gt;'.  </li> <li><code>\\1</code> kh\u1edbp v\u1edbi x\u00e2u n\u00e0o m\u00e0 <code>([a-zA-Z][a-zA-Z0-9]\\*)</code> \u0111\u00e3 kh\u1edbp tr\u01b0\u1edbc \u0111\u00f3.  </li> </ul> <p>M\u00f4 t\u1ea3 tr\u00ean l\u00e0 m\u00f4 t\u1ea3 s\u01a1 qua v\u1ec1 regex c\u01a1 b\u1ea3n. M\u1ed9t regex \u0111\u01b0\u1ee3c vi\u1ebft b\u1edfi c\u00e1c lu\u1eadt tr\u00ean s\u1ebd ch\u1ea1y \u0111\u01b0\u1ee3c \u1edf Java (&gt;= 1.4) v\u00e0 C++ (POSIX EXTENDED). \u0110\u1ec3 t\u00ecm hi\u1ec3u s\u00e2u h\u01a1n v\u1ec1 c\u00e1c m\u1edf r\u1ed9ng \u0111\u01b0\u1ee3c cung c\u1ea5p b\u1edfi c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c m\u1eddi c\u00e1c b\u1ea1n xem ph\u1ea7n tham kh\u1ea3o.</p>"},{"location":"translate/topcoder/Using-Regular-Expression/#su-dung-regex","title":"S\u1eed d\u1ee5ng regex","text":""},{"location":"translate/topcoder/Using-Regular-Expression/#debug-regex","title":"Debug regex","text":"<p>Trong c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c nhau, th\u01b0\u1eddng regex c\u00f3 th\u1ec3 kh\u00e1c nhau \u0111\u00f4i ch\u00fat. \u0110\u1ec3 ki\u1ec3m tra 1 \u0111o\u1ea1n regex trong 1 ng\u00f4n ng\u1eef c\u00f3 \u00fd ngh\u0129a g\u00ec, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 l\u00ean search \"debug regex online\", c\u00f3 kh\u00e1 nhi\u1ec1u trang ph\u00f9 h\u1ee3p.</p>"},{"location":"translate/topcoder/Using-Regular-Expression/#trong-java","title":"Trong Java","text":"<p>Trong Java (t\u1eeb 1.4 tr\u1edf l\u00ean) c\u00f3 m\u1ed9t package t\u00ean l\u00e0 <code>java.util.regex</code> cho ph\u00e9p s\u1eed d\u1ee5ng regex.  </p> <p>Package n\u00e0y bao g\u1ed3m 3 class: Pattern, Matcher, PatternSyntaxException.</p> <ul> <li>Object Pattern l\u00e0 m\u1ed9t regex \u0111\u00e3 \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch. Class Pattern kh\u00f4ng cung c\u1ea5p public constructors. \u0110\u1ec3 t\u1ea1o ra m\u1ed9t object, b\u1ea1n ph\u1ea3i s\u1eed d\u1ee5ng m\u1ed9t trong c\u00e1c method c\u1ee7a n\u00f3 v\u00e0 ch\u00fang s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t object Pattern.</li> <li>Object Matcher s\u1ebd ti\u1ebfn h\u00e0nh th\u00f4ng d\u1ecbch m\u1eabu v\u00e0 kh\u1edbp v\u1edbi input. Gi\u1ed1ng nh\u01b0 class Pattern, Matcher kh\u00f4ng c\u00f3 public constructors. \u0110\u1ec3 t\u1ea1o ra m\u1ed9t object Matcher b\u1ea1n ph\u1ea3i s\u1eed d\u1ee5ng method c\u1ee7a class Matcher tr\u00ean m\u1ed9t object Pattern v\u00e0 n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t object Matcher. </li> <li>Object PatternSyntaxException l\u00e0 unchecked exception ch\u1ec9 ra l\u1ed7i c\u00fa ph\u00e1p c\u1ee7a regex.</li> </ul> <p>V\u00ed d\u1ee5 (l\u1ea5y t\u1eeb [4]):</p> <pre><code>Pattern pattern;\nMatcher matcher;\npattern = Pattern.compile(&lt;REGEX&gt;);\nmatcher = pattern.matcher(&lt;INPUT&gt;);\nboolean found;\nwhile(matcher.find()) {\n  System.out.println(\"Found the text \\\"\" + matcher.group() +  \"\\\" starting at index \" + matcher.start() +\n      \" and ending at index \" + matcher.end() + \".\");\n  found = true;\n}\n\nif(!found){\n  System.out.println(\"No match found.\");\n}\n</code></pre> <p>Java c\u0169ng cung c\u1ea5p c\u00e1c method sau trong class String:</p> <ul> <li><code>boolean matches(String regex)</code>: ki\u1ec3m tra xem x\u00e2u hi\u1ec7n t\u1ea1i c\u00f3 kh\u1edbp v\u1edbi <code>regex</code> kh\u00f4ng.</li> <li><code>String replaceAll(String regex, String replacement)</code>: Thay t\u1ea5t c\u1ea3 c\u00e1c x\u00e2u con c\u1ee7a x\u00e2u hi\u1ec7n t\u1ea1i m\u00e0 kh\u1edbp v\u1edbi <code>regex</code> b\u1eb1ng x\u00e2u <code>replacement</code>.</li> <li><code>String replaceFirst(String regex, String replacement)</code>: Thay x\u00e2u con \u0111\u1ea7u ti\u00ean c\u1ee7a x\u00e2u hi\u1ec7n t\u1ea1i m\u00e0 kh\u1edbp v\u1edbi <code>regex</code> b\u1eb1ng x\u00e2u <code>replacement</code>.</li> <li><code>String[] split(String regex)</code>: Chia x\u00e2u hi\u1ec7n t\u1ea1i th\u00e0nh nhi\u1ec1u x\u00e2u s\u1eed d\u1ee5ng c\u00e1c x\u00e2u con kh\u1edbp v\u1edbi <code>regex</code> l\u00e0m ph\u00e2n c\u00e1ch.</li> </ul>"},{"location":"translate/topcoder/Using-Regular-Expression/#trong-c","title":"Trong C++","text":"<p>Nhi\u1ec1u topcoders cho r\u1eb1ng regex l\u00e0 m\u1ed9t trong nh\u1eefng \u0111i\u1ec3m m\u1ea1nh c\u1ee7a Java so v\u1edbi C++. Tuy nhi\u00ean c\u00e1c coders s\u1eed d\u1ee5ng C++ c\u0169ng kh\u00f4ng h\u1ec1 n\u1ea3n ch\u00ed v\u00ec regex c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong C++.</p> <p>C\u00f3 nhi\u1ec1u th\u01b0 vi\u1ec7n h\u1ed7 tr\u1ee3 regex cho C++, tuy nhi\u00ean ch\u00fang kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi nhau t\u1ed1t cho l\u1eafm.  M\u1ed9t \u0111i\u1ec1u may m\u1eafn \u0111\u00f3 l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn l\u1ef1a m\u1ed9t trong c\u00e1c th\u01b0 vi\u1ec7n n\u00e0y \u0111\u1ec3 s\u1eed d\u1ee5ng v\u00e0 kh\u00f4ng ph\u1ea3i lo l\u00e0 n\u00f3 kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi nhau. N\u1ebfu b\u1ea1n mu\u1ed1n d\u00f9ng regex \u1edf arena b\u1ea1n ph\u1ea3i l\u1ef1a ch\u1ecdn gi\u1eefa 2 APIs: POSIX_regex v\u00e0 GNU_regex. \u0110\u1ec3 s\u1eed d\u1ee5ng 2 APIs n\u00e0y b\u1ea1n ph\u1ea3i th\u00eam header \"regex.h\". C\u1ea3 2 APIs \u0111\u1ec1u \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n qua 2 b\u01b0\u1edbc. \u0110\u1ea7u ti\u00ean s\u1ebd c\u00f3 m\u1ed9t h\u00e0m bi\u00ean d\u1ecbch regex, sau \u0111\u00f3 s\u1ebd c\u00f3 m\u1ed9t h\u00e0m kh\u1edbp/t\u00ecm regex \u0111\u00e3 \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch v\u1edbi x\u00e2u c\u1ea7n kh\u1edbp.  Sau \u0111\u00e2y s\u1ebd l\u00e0 m\u00f4 t\u1ea3 ng\u1eafn g\u1ecdn v\u1ec1 2 APIs n\u00e0y \u0111\u1ec3 cho c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn l\u1ef1a b\u1ea1n th\u00edch c\u00e1i n\u00e0o h\u01a1n.</p>"},{"location":"translate/topcoder/Using-Regular-Expression/#posix_regex","title":"POSIX_regex","text":"<p>POSIX_regex h\u1ed7 tr\u1ee3 2 ki\u1ec3u regex kh\u00e1c nhau: c\u01a1 b\u1ea3n v\u00e0 m\u1edf r\u1ed9ng. Regex c\u01a1 b\u1ea3n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 trong ed, trong khi regex m\u1edf r\u1ed9ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 trong egrep, th\u00eam v\u00e0o c\u00e1c ph\u00e9p to\u00e1n <code>|</code>, <code>+</code>, <code>?</code> v\u00e0 kh\u00f4ng y\u00eau c\u1ea7u <code>\\</code> \u1edf c\u00e1c bi\u1ec3u th\u1ee9c con vi\u1ebft trong ngo\u1eb7c \u0111\u01a1n <code>()</code> ho\u1eb7c c\u00e1c bi\u00ean \u0111\u01b0\u1ee3c vi\u1ebft trong ngo\u1eb7c nh\u1ecdn <code>{}</code>. Ki\u1ec3u c\u01a1 b\u1ea3n l\u00e0 m\u1eb7c \u0111\u1ecbnh, nh\u01b0ng ki\u1ec3u m\u1edf r\u1ed9ng \u0111\u01b0\u1ee3c \u01b0a th\u00edch h\u01a1n.</p> <p>V\u1edbi POSIX, b\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm regex m\u00e0 kh\u00f4ng th\u1ec3 kh\u1edbp \u0111\u01b0\u1ee3c. \u0110\u1ec3 kh\u1edbp \u0111\u01b0\u1ee3c, b\u1ea1n ph\u1ea3i bi\u00ean d\u1ecbch n\u00f3 th\u00e0nh m\u1ed9t pattern buffer, s\u1eed d\u1ee5ng <code>regcomp</code>. M\u1ed9t khi \u0111\u00e3 bi\u00ean d\u1ecbch th\u00e0nh pattern buffer b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm trong m\u1ed9t x\u00e2u k\u1ebft th\u00fac b\u1eb1ng null b\u1eb1ng c\u00e1ch d\u00f9ng <code>regexec</code>. N\u1ebfu m\u1ed9t trong hai h\u00e0m <code>regcomp</code> v\u00e0 <code>regexec</code> g\u1eb7p l\u1ed7i n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 error code. \u0110\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c l\u1ed7i l\u00e0 g\u00ec b\u1ea1n d\u00f9ng <code>regerror</code>. \u0110\u1ec3 gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb c\u1ee7a pattern buffer b\u1ea1n d\u00f9ng <code>regfree</code>.</p> <p>\u0110\u1ec3 bi\u1ebft c\u00e1ch s\u1eed d\u1ee5ng chi ti\u1ebft m\u1eddi c\u00e1c b\u1ea1n xem m\u1ee5c [2] v\u00e0 [3] \u1edf ph\u1ea7n tham kh\u1ea3o. </p>"},{"location":"translate/topcoder/Using-Regular-Expression/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>Sau \u0111\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 c\u00e1ch s\u1eed d\u1ee5ng c\u00e1c h\u00e0m n\u00e0y:</p> <pre><code>regex_t reg;\n\nstring pattern = \"[^tpr]{2,}\";\nstring str = \"topcoder\";\n\nregmatch_t matches[1];\n\nregcomp(&amp;reg,pattern.c_str(),REG_EXTENDED|REG_ICASE);\n\nif (regexec(&amp;reg,str.c_str(),1,matches,0)==0) {\n  cout &lt;&lt; \"Match \"\n  cout &lt;&lt; str.substr(matches[0].rm_so,matches[0].rm_eo-matches[0].rm_so)\n  cout &lt;&lt; \" found starting at: \"\n  cout &lt;&lt; matches[0].rm_so\n  cout &lt;&lt; \" and ending at \"\n  cout &lt;&lt; matches[0].rm_eo\n  cout &lt;&lt; endl;\n} else {\n  cout &lt;&lt; \"Match not found.\"\n  cout &lt;&lt; endl;\n}\nregfree(&amp;reg);\n</code></pre>"},{"location":"translate/topcoder/Using-Regular-Expression/#gnu_regex","title":"GNU_regex","text":"<p>GNU_regex API c\u00f3 nhi\u1ec1u h\u00e0m h\u01a1n. V\u1edbi c\u00e1c h\u00e0m c\u1ee7a GNU_regex c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 kh\u1edbp m\u1ed9t x\u00e2u v\u1edbi m\u1eabu v\u00e0 c\u0169ng c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm m\u1eabu \u1edf trong x\u00e2u. Vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1c h\u00e0m n\u00e0y c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1c h\u00e0m c\u1ee7a POSIX: \u0111\u1ea7u ti\u00ean m\u1ed9t m\u1eabu c\u1ea7n ph\u1ea3i \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch s\u1eed d\u1ee5ng <code>re_compile_pattern</code>, sau \u0111\u00f3 nh\u1eadn \u0111\u01b0\u1ee3c pattern buffer v\u00e0 n\u00f3 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 t\u00ecm v\u00e0 kh\u1edbp. C\u00e1c h\u00e0m s\u1eed d\u1ee5ng cho t\u00ecm ki\u1ebfm v\u00e0 kh\u1edbp l\u00e0 <code>re_search</code> v\u00e0 <code>re_match</code>. Trong tr\u01b0\u1eddng h\u1ee3p t\u00ecm ki\u1ebfm th\u00ec <code>fastmap</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ed1i \u01b0u vi\u1ec7c t\u00ecm ki\u1ebfm. N\u1ebfu kh\u00f4ng c\u00f3 <code>fastmap</code> thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm s\u1ebd kh\u1edbp c\u00e1c m\u1eabu \u1edf c\u00e1c v\u1ecb tr\u00ed li\u00ean ti\u1ebfp nhau trong x\u00e2u. Fastmap s\u1ebd ch\u1ec9 ra v\u1ecb tr\u00ed c\u1ee7a k\u00fd t\u1ef1 b\u1eaft \u0111\u1ea7u t\u00ecm ki\u1ebfm. Fastmap \u0111\u01b0\u1ee3c t\u1ea1o b\u1eb1ng c\u00e1ch g\u1ecdi <code>re_compile_fastmap</code>. GNU_regex c\u00f2n c\u00f3 h\u00e0m <code>re_search2</code> v\u00e0 <code>re_match2</code> cho vi\u1ec7c t\u00ecm ki\u1ebfm v\u00e0 kh\u1edbp v\u1edbi nh\u1eefng data t\u00e1ch r\u1eddi.  \u0110\u1ec3 gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb c\u1ee7a pattern buffer b\u1ea1n d\u00f9ng <code>regfree</code>.   </p> <p>\u0110\u1ec3 bi\u1ebft c\u00e1ch s\u1eed d\u1ee5ng chi ti\u1ebft m\u1eddi c\u00e1c b\u1ea1n xem m\u1ee5c [3] \u1edf ph\u1ea7n tham kh\u1ea3o. </p>"},{"location":"translate/topcoder/Using-Regular-Expression/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<pre><code>string pattern = \"([a-z]+).\\\\1\";\nstring str = \"top-topcoder|coder\";\n\nre_pattern_buffer buffer;\n  char map[256];\n\nbuffer.translate = 0;\nbuffer.fastmap = map;\nbuffer.buffer = 0;\nbuffer.allocated = 0;\n\nre_set_syntax(RE_SYNTAX_POSIX_EXTENDED);\nconst char* status = re_compile_pattern(pattern.c_str(),pattern.size(),&amp;buffer);\nif (status) {\n    cout &lt;&lt; \"Error: \" &lt;&lt; status &lt;&lt; endl;\n}\nre_compile_fastmap(&amp;buffer);\n\nstruct re_registers regs;\nint ofs = 0;\nif (re_search(&amp;buffer,str.c_str(),str.size(),0,str.size(),&amp;regs)!=-1) {\n  cout &lt;&lt; \"Match \"\n  cout &lt;&lt; str.substr(regs.start[0],regs.end[0]-regs.start[0])\n  cout &lt;&lt; \" found starting at: \"\n  cout &lt;&lt; regs.start[0]\n  cout &lt;&lt; \" and ending at \"\n  cout &lt;&lt; regs.end[0]\n  cout &lt;&lt; endl;\n} else {\n  cout &lt;&lt; \"Match not found.\"\n  cout &lt;&lt; endl;\n}\nregfree(&amp;buffer);\n</code></pre>"},{"location":"translate/topcoder/Using-Regular-Expression/#vi-du-trong-cac-cuoc-thi-srms","title":"V\u00ed d\u1ee5 trong c\u00e1c cu\u1ed9c thi SRMs","text":"<p>C\u00e1c v\u00ed d\u1ee5 ph\u00eda d\u01b0\u1edbi \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Java. B\u1ea1n n\u00e0o d\u00f9ng C++ c\u00f3 th\u1ec3 d\u00f9ng POSIX ho\u1eb7c GNU regex APIs  \u0111\u1ec3 vi\u1ebft c\u00e1c h\u00e0m t\u01b0\u01a1ng \u0111\u01b0\u01a1ng trong Java (replace_all, split, matches). CyberLine (SRM 187 div 1, level 1) </p> <p><pre><code>import java.util.*;\npublic class Cyberline\n{\n  public String lastCyberword(String cyberline)\n  {\n    String[]w=cyberline.replaceAll(\"-\",\"\")\n          .replaceAll(\"[^a-zA-Z0-9]\",\" \")\n          .split(\" \") ;\n    return w[w.length-1];\n  }\n}\n</code></pre> UnLinker (SRM 203 div 2, level 3) </p> <pre><code>import java.util.*;\npublic class UnLinker\n{\n  public String clean(String text)\n  {\n    String []m = text.split(\"((http://)?www[.]|http://)[a-zA-Z0-9.]+[.](com|org|edu|info|tv)\",-1);\n    String s = m[0] ;\n    for (int i = 1 ; i &lt; m.length ; ++i)\n      s = s + \"OMIT\" + i + m[i] ;\n    return s ;\n  }\n}\n</code></pre> <p>CheatCode (SRM 154 div 1, level 1)</p> <pre><code>import java.util.*;\npublic class CheatCode {\n  public int[] matches(String keyPresses, String[] codes) {\n    boolean []map = new boolean[codes.length] ;\n    int count = 0 ;\n    for (int i=0;i&lt;codes.length; ++i)\n    {\n      String regex = \".*\" ;\n      for (int j=0; j&lt;codes[i].length(); ) {\n        int k = 1;\n        while ((j+k)&lt;codes[i].length() &amp;&amp; codes[i].charAt(j+k)==codes[i].charAt(j)) k++;\n        regex = regex + codes[i].charAt(j) + \"{\"+k+\",}\";\n        j+=k;\n      }\n\n      regex = regex + \".*\" ;\n      if (keyPresses.matches(regex))\n      {\n        map[i] = true ;\n        count++ ;\n      }\n    }\n    int []res = new int[count] ;\n    int j=0;\n    for (int i= 0 ; i &lt; codes.length; ++i)\n      if(map[i] == true)\n        res[j++]=i ;\n    return res ;\n  }\n}\n</code></pre>"},{"location":"translate/topcoder/Using-Regular-Expression/#tham-khao","title":"Tham kh\u1ea3o","text":"<ol> <li>Xem trang h\u01b0\u1edbng d\u1eabn c\u1ee7a linux: regex(7) </li> <li>Xem trang h\u01b0\u1edbng d\u1eabn c\u1ee7a linux: regex(3)</li> <li>http://docs.freebsd.org/info/regex/regex.info.Programming_with_Regex.html</li> <li>http://www.regular-expressions.info/</li> <li>http://java.sun.com/docs/books/tutorial/extra/regex/</li> </ol>"},{"location":"translate/topcoder/dynamic-programming/","title":"Nh\u1eadp m\u00f4n Quy ho\u1ea1ch \u0111\u1ed9ng","text":"<p>Ngu\u1ed3n: Topcoder.</p> <p>C\u00f3 r\u1ea5t nhi\u1ec1u b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng quy ho\u1ea1ch \u0111\u1ed9ng (QH\u0110) (Dynamic Programming). QH\u0110 l\u00e0 m\u1ed9t trong nh\u1eefng k\u0129 thu\u1eadt quan tr\u1ecdng. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n hi\u1ec3u \u0111\u01b0\u1ee3c QH\u0110 th\u00f4ng qua c\u00e1c v\u00ed d\u1ee5 c\u1ee5 th\u1ec3.</p> <p>Note: Trong b\u00e0i n\u00e0y c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u ph\u1ea7n b\u1ea1n \u0111\u00e3 bi\u1ebft, b\u1ea1n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 chuy\u1ec3n qua \u0111\u1ecdc ph\u1ea7n kh\u00e1c.</p>"},{"location":"translate/topcoder/dynamic-programming/#beginner","title":"Beginner","text":""},{"location":"translate/topcoder/dynamic-programming/#qh-la-gi","title":"QH\u0110 l\u00e0 g\u00ec ?","text":"<p>QH\u0110 l\u00e0 k\u0129 thu\u1eadt \u0111\u01b0\u1ee3c \u0111\u01b0\u1ee3c d\u00f9ng khi c\u00f3 m\u1ed9t c\u00f4ng th\u1ee9c v\u00e0 m\u1ed9t (ho\u1eb7c m\u1ed9t v\u00e0i) tr\u1ea1ng th\u00e1i b\u1eaft \u0111\u1ea7u. M\u1ed9t b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c t\u00ednh b\u1edfi c\u00e1c b\u00e0i to\u00e1n nh\u1ecf h\u01a1n \u0111\u00e3 t\u00ecm ra tr\u01b0\u1edbc \u0111\u00f3. QH\u0110 c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \u0111a th\u1ee9c n\u00ean s\u1ebd ch\u1ea1y nhanh h\u01a1n quay lui v\u00e0 duy\u1ec7t tr\u00e2u.</p> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n h\u00e3y xem v\u00ed d\u1ee5 sau:</p> <p>Cho \\(N\\) \u0111\u1ed3ng xu v\u00e0 gi\u00e1 ti\u1ec1n c\u1ee7a m\u1ed7i \u0111\u1ed3ng (\\(V_0,V_1,...,V_{N-1}~\\)),  v\u00e0 s\u1ed1 \\(S\\). T\u00ecm s\u1ed1 \u0111\u1ed3ng xu nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a ch\u00fang b\u1eb1ng \\(S\\) (s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed3ng xu kh\u00f4ng gi\u1edbi h\u1ea1n).</p> <p>B\u00e2y gi\u1edd ch\u00fang ta s\u1ebd x\u00e2y d\u1ef1ng thu\u1eadt gi\u1ea3i:</p> <p>\u0110\u1ea7u ti\u00ean, c\u1ea7n t\u00ecm m\u1ed9t tr\u1ea1ng th\u00e1i c\u1ee7a b\u00e0i to\u00e1n.</p>"},{"location":"translate/topcoder/dynamic-programming/#trang-thai-la-gi","title":"Tr\u1ea1ng th\u00e1i l\u00e0 g\u00ec ?","text":"<p>Tr\u1ea1ng th\u00e1i l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p, m\u1ed9t b\u00e0i to\u00e1n con c\u1ee7a b\u00e0i to\u00e1n l\u1edbn.</p> <p>V\u00ed d\u1ee5, tr\u1ea1ng th\u00e1i trong b\u00e0i n\u00e0y l\u00e0 s\u1ed1 l\u01b0\u1ee3ng xu nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u1ed5ng b\u1eb1ng \\(i\\), v\u1edbi \\(i \\le S\\). \u0110\u1ec3 t\u00ecm ra tr\u1ea1ng th\u00e1i \\(i\\), c\u1ea7n ph\u1ea3i t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c tr\u1ea1ng th\u00e1i \\(j\\) m\u00e0 \\((j &lt; i)\\). M\u1ed9t khi \u0111\u00e3 t\u00ecm ra tr\u1ea1ng th\u00e1i \\(i\\), ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm ra tr\u1ea1ng th\u00e1i c\u1ee7a \\(i+1\\).</p>"},{"location":"translate/topcoder/dynamic-programming/#lam-the-nao-e-tim-uoc","title":"L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c ?","text":"<p>V\u1edbi m\u1ed7i \\(j\\), \\(V_j \\le i\\), t\u00ecm s\u1ed1 \u0111\u1ed3ng xu nh\u1ecf nh\u1ea5t \u0111\u1ec3 t\u1ed5ng b\u1eb1ng \\(i-V_j\\). Gi\u1ea3 s\u1eed n\u00f3 b\u1eb1ng \\(m\\). N\u1ebfu \\(m+1\\) nh\u1ecf h\u01a1n s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed3ng xu hi\u1ec7n t\u1ea1i cho t\u1ed5ng \\(i\\) th\u00ec ta c\u1eadp nh\u1eadp n\u00f3 b\u1eb1ng \\(m+1\\).</p> <p>Sau \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5: Cho c\u00e1c \u0111\u1ed3ng xu v\u1edbi gi\u00e1 ti\u1ec1n 1, 3 v\u00e0 5. V\u00e0 \\(S\\) = 11.</p> <p>\u0110\u1ea7u ti\u00ean, ta b\u1eaft \u0111\u1ea7u t\u1eeb tr\u1ea1ng th\u00e1i 0, ch\u00fang ta c\u00f3 \\(f[0] = 0\\). X\u00e9t \u0111\u1ebfn t\u1ed5ng 1. C\u00f3 duy nh\u1ea5t \u0111\u1ed3ng xu 1 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng t\u1ed5ng 1, n\u00ean ta c\u00f3 \\(f[1] = f[1-V_0] + 1 = f[0] + 1 = 1\\). X\u00e9t \u0111\u1ebfn t\u1ed5ng 2. C\u0169ng gi\u1ed1ng nh\u01b0 t\u1ed5ng tr\u01b0\u1edbc, ch\u1ec9 c\u00f3 1 \u0111\u1ed5ng xu \\(\\le\\) 2, c\u00f3 \\(f[2] = f[2-V_0] + 1 = f[1]+1 = 2\\) \u0110\u1ebfn t\u1ed5ng 3. L\u1ea7n n\u00e0y c\u00f3 2 \u0111\u1ed3ng xu \\(\\le\\) 3 l\u00e0 1 v\u00e0 3.     - N\u1ebfu ta ch\u1ecdn \u0111\u1ed3ng 1, ta c\u00f3 \\(f[3] = f[3-V_0] + 1 = f[2] + 1 = 3\\)     - N\u1ebfu ta ch\u1ecdn \u0111\u1ed3ng 3, ta c\u00f3 \\(f[3] = f[3-V_1] + 1 = f[0] + 1 = 1\\) R\u00f5 r\u00e0ng l\u00e0 1 \\(\\le\\) 3 n\u00ean ta ch\u1ecdn \u0111\u1ed3ng 3 v\u00e0 \\(f[3] = 1\\) X\u00e9t ti\u1ebfp \u0111\u1ebfn t\u1ed5ng 4, r\u1ed3i \u0111\u1ebfn 11 b\u1eb1ng c\u00e1ch nh\u01b0 tr\u00ean.</p> <p>M\u00e3 gi\u1ea3:</p> <pre><code>G\u00e1n Min[i] b\u1eb1ng d\u01b0\u01a1ng v\u00f4 c\u00f9ng v\u1edbi m\u1ecdi i\nMin[0]=0\n\nFor i = 1 to S\nFor j = 0 to N - 1\n   If (Vj&lt;=i AND Min[i-Vj]+1&lt;Min[i])\nThen Min[i]=Min[i-Vj]+1\nOutput Min[S]\n</code></pre> <p>\u0110\u00e2y l\u00e0 l\u1eddi gi\u1ea3i cho t\u1ea5t c\u1ea3 c\u00e1c t\u1ed5ng:</p> <p> T\u1ed5ng L\u01b0\u1ee3ng xu nh\u1ecf nh\u1ea5t Xu \u0111\u01b0\u1ee3c ch\u1ecdn                 (t\u1ed5ng c\u00f2n l\u1ea1i) 0 0 - 1 1 1 (0) 2 2 1 (1) 3 1 3 (0) 4 2 1 (3) 5 1 5 (0) 6 2 3 (3) 7 3 1 (6) 8 2 3 (5) 9 3 1 (8) 10 2 5 (5) 11 3 1 (10) </p> <p>V\u1eady l\u00e0 ch\u00fang ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c l\u1eddi gi\u1ea3i cho 3 \u0111\u1ed3ng xu t\u1ed5ng b\u1eb1ng 11. D\u1ef1a v\u00e0o b\u1ea3ng tr\u00ean, ta c\u00f3 th\u1ec3 truy v\u1ebft l\u1ea1i \u0111\u01b0\u1ee3c nh\u1eefng \u0111\u1ed3ng xu n\u00e0o \u0111\u01b0\u1ee3c ch\u1ecdn \u0111\u1ec3 t\u1ed1i \u01b0u b\u00e0i to\u00e1n. B\u00e0i QH\u0110 tr\u00ean c\u00f2n c\u00f3 m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1c n\u1eefa. L\u1ea7n n\u00e0y, ta s\u1ebd kh\u00f4ng t\u00ednh li\u00ean ti\u1ebfp c\u00e1c t\u1ed5ng. B\u1eaft \u0111\u1ea7u t\u1eeb tr\u1ea1ng th\u00e1i 0. Th\u1eed nh\u00e9t \u0111\u1ed3ng xu th\u1ee9 1 v\u00e0o c\u00e1c t\u1ed5ng \u0111\u00e3 t\u00ednh. N\u1ebfu nh\u01b0 t\u1ed5ng \\(t\\) c\u00f3 s\u1ed1 \u0111\u1ed3ng xu \u00edt h\u01a1n s\u1ed1 \u0111\u1ed3ng xu hi\u1ec7n t\u1ea1i th\u00ec ti\u1ebfn h\u00e0nh c\u1eadp nh\u1eadt. R\u1ed3i ti\u1ebfp t\u1ee5c th\u1eed v\u1edbi \u0111\u1ed3ng th\u1ee9 2, 3 cho \u0111\u1ebfn khi th\u1eed h\u1ebft c\u00e1c \u0111\u1ed3ng. V\u00ed d\u1ee5, nh\u00e9t \u0111\u1ed3ng 1 (gi\u00e1 tr\u1ecb 1) v\u00e0o t\u1ed5ng 0 ta c\u00f3 t\u1ed5ng 1. V\u00ec ta ch\u01b0a t\u00ednh t\u1ed5ng 1 n\u00ean \\(S[1] = 1\\). Nh\u00e9t \u0111\u1ed3ng 1 v\u00e0o t\u1ed5ng 1 ta c\u00f3 \\(S[2] = 2\\). Ti\u1ebfp t\u1ee5c l\u00e0m nh\u01b0 v\u1eady v\u1edbi c\u00e1c t\u1ed5ng c\u00f2n l\u1ea1i. Sau \u0111\u1ed3ng 1, ta nh\u00e9t \u0111\u1ed3ng 2(gi\u00e1 tr\u1ecb 3) v\u00e0o t\u1ed5ng 0 ta \u0111\u01b0\u1ee3c 1, m\u00e0 \\(S[3] = 3 &gt; 1\\), ta c\u1eadp nh\u1eadt \\(S[3] = 1\\). Ti\u1ebfp t\u1ee5c nh\u00e9t \u0111\u1ed3ng 2 v\u00e0o c\u00e1c t\u1ed5ng c\u00f2n l\u1ea1i, c\u0169ng nh\u1ee9 th\u1eed nh\u00e9t c\u00e1c \u0111\u1ed3ng xu kh\u00e1c.</p>"},{"location":"translate/topcoder/dynamic-programming/#elementary","title":"Elementary","text":"<p>B\u00e2y gi\u1edd, ch\u00fang ta c\u00f9ng \u0111\u1ebfn m\u1ed9t kh\u00e1i ni\u1ec7m m\u1edbi, c\u00f4ng th\u1ee9c truy h\u1ed3i (recurrent relation), m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa nh\u1eefng tr\u1ea1ng th\u00e1i.</p> <p>V\u00ed d\u1ee5: Cho m\u1ed9t d\u00e3y N s\u1ed1 - \\(A[1], A[2], ..., A[N]\\). T\u00ecm d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t.</p> <p>Ta quy \u0111\u1ecbnh tr\u1ea1ng th\u00e1i \\(S[i]\\) l\u00e0 d\u00e3y con kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t k\u1ebft th\u00fac t\u1ea1i \\(A[i]\\). V\u1edbi \\(i&gt;1\\) v\u00e0 \\(j&lt;i\\), t\u00ednh \u0111\u01b0\u1ee3c \\(i\\) khi t\u1ed3n t\u1ea1i \\(A[j] \\le A[i]\\) (v\u00ec \u0111\u00e2y l\u00e0 d\u00e3y kh\u00f4ng gi\u1ea3m). Khi \u0111\u00f3 \\(S[i] = Max(S[i], S[j] + 1)\\). Ti\u1ebfp t\u1ee5c t\u00ednh nh\u01b0 v\u1eady cho \u0111\u1ebfn khi \u0111\u1ebfn \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i \\(S[N]\\).</p> <p>H\u00e3y xem b\u1ea3ng sau v\u1edbi d\u00e3y: 5, 3, 4, 8, 6, 7:</p> <p> I \u0110\u1ed9 d\u00e0i d\u00e3y con                 kh\u00f4ng gi\u1ea3m d\u00e0i nh\u1ea5t                 c\u1ee7a i s\u1ed1 \u0111\u1ea7u ti\u00ean V\u1ecb tr\u00ed c\u1ee7a k\u00ed t\u1ef1 cu\u1ed1i                  trong d\u00e3y 1 1 1 2 1 2 3 2 2 4 3 3 5 3 3 6 4 5 </p> <p>B\u00e0i luy\u1ec7n t\u1eadp: Cho \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G\\) c\u00f3 \\(N\\) \u0111\u1ec9nh (\\(N \\le  1000\\)) v\u00e0 c\u00e1c c\u1ea1nh c\u00f3 tr\u1ecdng s\u1ed1 d\u01b0\u01a1ng. T\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb \u0111\u1ec9nh 1 \u0111\u1ebfn \u0111\u1ec9nh \\(N\\) ho\u1eb7c th\u00f4ng b\u00e1o kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i. G\u1ee3i \u00fd: T\u1ea1i m\u1ed7i b\u01b0\u1edbc, ch\u1ecdn ra trong s\u1ed1 c\u00e1c \u0111\u1ec9nh ch\u01b0a th\u0103m m\u00e0 c\u00f3 \u0111\u01b0\u1eddng \u0111i t\u1eeb 1, ch\u1ecdn ra \u0111\u1ec9nh c\u00f3 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t.</p> <p>C\u00e1c b\u00e0i v\u00ed d\u1ee5 kh\u00e1c:</p> <ul> <li>ZigZag \u2013 2003 TCCC Semifinals 3.</li> <li>BadNeighbors \u2013 2004 TCCC Round 4.</li> <li>FlowerGarden \u2013 2004 TCCC Round 1.</li> </ul>"},{"location":"translate/topcoder/dynamic-programming/#intermediate","title":"Intermediate","text":"<p>T\u1edbi \u0111\u00e2y b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c l\u00e0m quen v\u1edbi QH\u0110 2 chi\u1ec1u.</p> <p>B\u00e0i to\u00e1n: Cho m\u1ed9t b\u1ea3ng \\(M * N\\), m\u1ed7i \u00f4 c\u00f3 m\u1ed9t l\u01b0\u1ee3ng t\u00e1o. B\u1eaft \u0111\u1ea7u t\u1eeb \u00f4 tr\u00e1i tr\u00ean, m\u1ed7i b\u01b0\u1edbc c\u00f3 th\u1ec3 \u0111i sang ph\u1ea3i ho\u1eb7c xu\u1ed1ng d\u01b0\u1edbi. B\u1ea1n c\u00f3 th\u1ec3 \u0103n \u0111\u01b0\u1ee3c nhi\u1ec1u nh\u1ea5t bao nhi\u00eau qu\u1ea3 t\u00e1o ?</p> <p>C\u00e1ch gi\u1ea3i b\u00e0i n\u00e0y c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 nh\u1eefng b\u00e0i tr\u01b0\u1edbc.</p> <p>\u0110\u1ea7u ti\u00ean l\u00e0 ph\u1ea3i x\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i l\u00e0 g\u00ec. \u1ede m\u1ed7i \u00f4 c\u00f3 nhi\u1ec1u nh\u1ea5t 2 c\u00e1ch c\u00f3 th\u1ec3 t\u1edbi \u0111\u01b0\u1ee3c \u00f4 \u0111\u00f3, t\u1eeb \u00f4 b\u00ean tr\u00e1i v\u00e0 \u00f4 ph\u00eda tr\u00ean. Do v\u1eady, \u0111\u1ec3 t\u00ecm tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i, ta ph\u1ea3i t\u00ednh tr\u01b0\u1edbc c\u00e1c \u00f4 c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c n\u00f3.</p> <p>Ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i sau: \\(S[i][j]=A[i][j] + max(S[i-1][j], if\\) $ i&gt;0 ; S[i][j-1], if$  \\(j&gt;0)\\) (trong \u0111\u00f3, \\(i\\) l\u00e0 h\u00e0ng, \\(j\\) l\u00e0 c\u1ed9t, \\(A[i][j]\\) l\u00e0 s\u1ed1 t\u00e1o \u1edf \u00f4 \\(i,j\\)) \\(S[i][j]\\) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ednh t\u1eeb tr\u00e1i sang ph\u1ea3i, t\u1eeb tr\u00ean xu\u1ed1ng d\u01b0\u1edbi, ho\u1eb7c t\u1eeb tr\u00ean xu\u1ed1ng, t\u1eeb tr\u00e1i sang.</p> <p>M\u00e3 gi\u1ea3:</p> <pre><code>For i = 0 to N - 1\n   For j = 0 to M - 1\n   S[i][j] = A[i][j] +\n      max(S[i][j-1], if j&gt;0 ; S[i-1][j], if i&gt;0 ; 0)\n\nOutput S[n-1][m-1]\n</code></pre> <p>V\u00ed d\u1ee5 kh\u00e1c:</p> <ul> <li>AvoidRoads \u2013 2003 TCO Semifinals 4</li> <li>ChessMetric \u2013 2003 TCCC Round 4</li> </ul>"},{"location":"translate/topcoder/dynamic-programming/#upper-intermediate","title":"Upper-Intermediate","text":"<p>Ph\u1ea7n n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u v\u1edbi b\u1ea1n nh\u1eefng b\u00e0i to\u00e1n c\u00f9ng v\u1edbi m\u1ed9t s\u1ed1 \u0111i\u1ec1u ki\u1ec7n.</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 c\u1ee5 th\u1ec3:</p> <p>Cho \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G\\) c\u00f3 tr\u1ecdng s\u1ed1 d\u01b0\u01a1ng v\u00e0 \\(N\\) \u0111\u1ec9nh.</p> <p>Ban \u0111\u1ea7u b\u1ea1n c\u00f3 s\u1ed1 ti\u1ec1n l\u00e0 \\(M\\). \u0110\u1ec3 \u0111i qua \u0111\u1ec9nh \\(i\\), b\u1ea1n ph\u1ea3i tr\u1ea3 s\u1ed1 ti\u1ec1n l\u00e0 \\(S[i]\\). V\u00e0 \u0111\u01b0\u01a1ng nhi\u00ean, n\u1ebfu kh\u00f4ng \u0111\u1ee7 ti\u1ec1n th\u00ec b\u1ea1n kh\u00f4ng \u0111i \u0111\u01b0\u1ee3c. T\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb 1 t\u1edbi \\(N\\) th\u1ecfa m\u00e3n ti\u00eau ch\u00ed tr\u00ean. N\u1ebfu c\u00f3 nhi\u1ec1u \u0111\u01b0\u1eddng ng\u1eafn nh\u1ea5t, in ra \u0111\u01b0\u1eddng v\u1edbi chi ph\u00ed nh\u1ecf nh\u1ea5t. Gi\u1edbi h\u1ea1n: $1&lt;N \\le 100 $; \\(0 \\le M \\le 100\\);  \\(0 \\le S[i] \\le 100\\).</p> <p>C\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u1ea5y \u0111\u00e2y l\u00e0 m\u1ed9t b\u00e0i Dijkstra c\u01a1 b\u1ea3n, tuy nhi\u00ean ch\u1ec9 kh\u00e1c \u1edf ch\u1ed7 n\u00f3 c\u00f3 th\u00eam m\u1ed9t \u0111i\u1ec1u ki\u1ec7n. Trong b\u00e0i to\u00e1n Dijkstra c\u01a1 b\u1ea3n ta c\u00f3  \\(Min[i]\\) , l\u00e0 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1eeb 1 t\u1edbi \\(i\\). C\u00f2n \u1edf \u0111\u00e2y, ch\u00fang ta c\u1ea7n ph\u1ea3i quan t\u00e2m \u0111\u1ebfn s\u1ed1 ti\u1ec1n c\u00f2n l\u1ea1i. Do \u0111\u00f3 ch\u00fang ta c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng m\u1ea3ng n\u00e0y th\u00e0nh \\(Min[i][j]\\) , l\u00e0 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1edbi \\(i\\), v\u00e0 c\u00f2n l\u1ea1i s\u1ed1 ti\u1ec1n l\u00e0 \\(j\\). B\u1eb1ng c\u00e1ch n\u00e0y b\u00e0i to\u00e1n \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1ec1 b\u00e0i to\u00e1n Dijkstra quen thu\u1ed9c. T\u1ea1i m\u1ed7i b\u01b0\u1edbc ta t\u00ecm tr\u1ea1ng th\u00e1i \\((i,j)\\) c\u00f3 qu\u00e3ng \u0111\u01b0\u1eddng ng\u1eafn nh\u1ea5t, \u0111\u00e1nh d\u1ea5u l\u00e0 \u0111\u00e3 th\u0103m r\u1ed3i update cho c\u00e1c tr\u1ea1ng th\u00e1i c\u1ea1nh n\u00f3. \u0110\u00e1p \u00e1n s\u1ebd l\u00e0 \\(Min[N][j]\\) c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t (v\u00e0 \\(j\\) l\u1edbn nh\u1ea5t trong s\u1ed1 c\u00e1c \\(Min[N][j]\\) c\u00f3 c\u00f9ng gi\u00e1 tr\u1ecb).</p> <p>M\u00e3 gi\u1ea3:</p> <pre><code>G\u00e1n m\u1ecdi(i,j) l\u00e0 ch\u01b0a th\u0103m\nG\u00e1n Min[i][j] b\u1eb1ng d\u01b0\u01a1ng v\u00f4 c\u00f9ng v\u1edbi m\u1ecdi (i,j)\n\nMin[0][M]=0\n\nWhile(TRUE)\n\n    Trong s\u1ed1 nh\u1eefng tr\u1ea1ng th\u00e1i ch\u01b0a th\u0103m (i,j) t\u00ecm c\u00e1i c\u00f3 Min[i][j]\n    nh\u1ecf nh\u1ea5t. Gi\u1ea3i s\u1eed n\u00f3 l\u00e0 (k,l).\n\n    N\u1ebfu kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c (k,l) n\u00e0o m\u00e0 Min[k][l] nh\u1ecf h\u01a1n d\u01b0\u01a1ng v\u00f4 c\u00f9ng - tho\u00e1t v\u00f2ng l\u1eb7p.\n\n    \u0110\u00e1nh d\u1ea5u (k,l) \u0111\u00e3 th\u0103m\n\n    For All Neighbors p of Vertex k.\n       If (l-S[p]&gt;=0 AND\n        Min[p][l-S[p]]&gt;Min[k][l]+Dist[k][p])\n          Then Min[p][l-S[p]]=Min[k][l]+Dist[k][p]\n       i.e.\n    N\u1ebfu t\u1ea1i (i,j) c\u00f3 \u0111\u1ee7 ti\u1ec1n \u0111\u1ec3 \u0111i qua p (l-S[p] l\u00e0 s\u1ed1 ti\u1ec1n c\u00f2n l\u1ea1i sau khi \u0111i qua p), v\u00e0 \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t c\u1ee7a (p,l-S[p]) l\u1edbn h\u01a1n [\u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t t\u1edbi (k,l)] + [kho\u1ea3ng c\u00e1ch t\u1eeb k t\u1edbi p)],\n    th\u00ec g\u00e1n (i,j) b\u1eb1n t\u1ed5ng n\u00e0y.\n    End For\n\nEnd While\n\nT\u00ecm s\u1ed1 nh\u1ecf nh\u1ea5t trong c\u00e1c Min[N-1][j] (for all j, 0&lt;=j&lt;=M);\nN\u1ebfu c\u00f3 nhi\u1ec1u h\u01a1n m\u1ed9t tr\u1ea1ng th\u00e1i, l\u1ea5y tr\u1ea1ng th\u00e1i n\u00e0o c\u00f3 j l\u1edbn nh\u1ea5t. N\u1ebfu kh\u00f4ng c\u00f3 (N-1,j) n\u00e0o nh\u1ecf h\u01a1n d\u01b0\u01a1ng v\u00f4 c\u00f9ng - kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng \u0111i.\n</code></pre> <p>C\u00e1c b\u00e0i luy\u1ec7n t\u1eadp:</p> <ul> <li>Jewelry \u2013 2003 TCO Online Round 4</li> <li>StripePainter \u2013 SRM 150 Div 1</li> <li>QuickSums \u2013 SRM 197 Div 2</li> <li>ShortPalindromes \u2013 SRM 165 Div 2</li> </ul>"},{"location":"translate/topcoder/dynamic-programming/#advanced","title":"Advanced","text":"<p>Nh\u1eefng b\u00e0i sau \u0111\u00e2y s\u1ebd c\u1ea7n m\u1ed9t ch\u00fat k\u0129 n\u0103ng ph\u00e2n t\u00edch \u0111\u1ec3 c\u00f3 th\u1ec3 t\u1ed1i \u01b0u ch\u00fang th\u00e0nh b\u00e0i QH\u0110.</p> <p>Problem StarAdventure \u2013 SRM 208 Div 1:</p> <p>Cho ma tr\u1eadn M h\u00e0ng, N c\u1ed9t (\\(N * M\\)). M\u1ed7i \u00f4 c\u00f3 m\u1ed9t l\u01b0\u1ee3ng t\u00e1o. B\u1ea1n \u0111ang \u1edf \u00f4 g\u00f3c tr\u00e1i tr\u00ean. B\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 \u0111i xu\u1ed1ng ho\u1eb7c sang ph\u1ea3i. B\u1ea1n c\u1ea7n t\u1edbi \u00f4 g\u00f3c ph\u1ea3i d\u01b0\u1edbi. R\u1ed3i quay l\u1ea1i \u00f4 tr\u00e1i tr\u00ean b\u1eb1ng c\u00e1ch l\u00ean ho\u1eb7c sang tr\u00e1i. Cu\u1ed1i c\u00f9ng, b\u1ea1n quay l\u1ea1i \u00f4 ph\u1ea3i d\u01b0\u1edbi. T\u00ecm s\u1ed1 t\u00e1o nhi\u1ec1u nh\u1ea5t m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 \u0103n \u0111\u01b0\u1ee3c. Khi \u0111i qua m\u1ed9t \u00f4, to\u00e0n b\u1ed9 t\u00e1o c\u1ee7a \u00f4 \u0111\u1ea5y s\u1ebd b\u1ecb \u0103n h\u1ebft.</p> <p>Gi\u1edbi h\u1ea1n: \\(1 &lt; N, M \\le 50\\) m\u1ed7i \u00f4 c\u00f3 t\u1eeb 0 \u0111\u1ebfn 1000 qu\u1ea3 t\u00e1o.</p> <p>\u0110\u1ecdc \u0111\u1ebfn \u0111\u00e2y, h\u1eb3n b\u1ea1n s\u1ebd th\u1ea5y c\u00e1i \u0111\u1ec1 n\u00e0y quen quen, n\u00f3 ch\u00ednh l\u00e0 b\u00e0i m\u1edf r\u1ed9ng c\u1ee7a b\u00e0i to\u00e1n ph\u1ea7n Intermediate. Ta c\u00f3 th\u1ec3 th\u1eed \u0111\u01b0a b\u00e0i to\u00e1n n\u00e0y v\u1ec1 th\u00e0nh b\u00e0i to\u00e1n tr\u00ean. \u0110\u1ec3 \u00fd th\u1ea5y \u0111\u01b0\u1eddng \u0111i t\u1eeb \u00f4 g\u00f3c ph\u1ea3i d\u01b0\u1edbi l\u00ean tr\u00e1i tr\u00ean c\u0169ng c\u00f3 th\u1ec3 coi l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u00f3c tr\u00e1i tr\u00ean xu\u1ed1ng. Nh\u01b0 v\u1eady, ch\u00fang ta ph\u1ea3i x\u1eed l\u00fd b\u00e0i to\u00e1n v\u1edbi 3 \u0111\u01b0\u1eddng \u0111i t\u1eeb tr\u00e1i tr\u00ean xu\u1ed1ng. G\u1ecdi 3 \u0111\u01b0\u1eddng n\u00e0y l\u00e0 tr\u00e1i, gi\u1eefa v\u00e0 ph\u1ea3i. Khi 2 \u0111\u01b0\u1eddng giao nhau (nh\u01b0 h\u00ecnh d\u01b0\u1edbi):</p> <p></p> <p>th\u00ec n\u00f3 c\u0169ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi h\u00ecnh sau:</p> <p></p> <p>B\u1eb1ng c\u00e1ch n\u00e0y, ch\u00fang ta \u0111\u00e3 c\u00f3 m\u1ed9t c\u00e1i nh\u00ecn kh\u00e1c v\u1ec1 b\u00e0i to\u00e1n. C\u00e1c \u0111\u01b0\u1eddng n\u00e0y s\u1ebd kh\u00f4ng giao nhau (tr\u1eeb \u00f4 g\u00f3c tr\u00e1i tr\u00ean v\u00e0 ph\u1ea3i d\u01b0\u1edbi). V\u1edbi m\u1ed7i h\u00e0ng y (kh\u00f4ng ph\u1ea3i h\u00e0ng \u0111\u1ea7u v\u00e0 cu\u1ed1i), t\u1ecda \u0111\u1ed9 x \u1edf m\u1ed7i \u0111\u01b0\u1eddng s\u1ebd l\u00e0 (\\(x1[y]\\) , \\(x2[y]\\) v\u00e0 \\(x3[y]\\) ) : \\(x1[y] &lt; x2[y] &lt; x3[y]\\) . Ta x\u00e9t h\u00e0ng th\u1ee9 y. Gi\u1ea3 s\u1eed, ta x\u00e9t \\(x1[y-1]\\) , \\(x2[y-1]\\) and \\(x3[y-1]\\) v\u00e0 s\u1ed1 t\u00e1o hi\u1ec7n gi\u1edd thu \u0111\u01b0\u1ee3c l\u00e0 nhi\u1ec1u nh\u1ea5t. T\u1eeb \u0111\u00f3 ta c\u00f3 th\u1ec3 t\u1ed1i \u01b0u cho h\u00e0ng \\(y\\). Ch\u00fang ta c\u1ea7n t\u00ecm c\u00e1ch chuy\u1ec3n tr\u1ea1ng th\u00e1i. G\u1ecdi \\(Max[i][j][k]\\) l\u00e0 l\u01b0\u1ee3ng t\u00e1o nhi\u1ec1u nh\u1ea5t thu \u0111\u01b0\u1ee3c \u0111\u1ebfn h\u00e0ng \\(y-1\\) v\u1edbi 3 \u0111\u01b0\u1eddng \u0111ang d\u1eebng \u1edf c\u1ed9t \\(i\\), \\(j\\), v\u00e0 \\(k\\). V\u1edbi h\u00e0ng \\(y\\), th\u00eam v\u00e0o \\(Max[i][j][k]\\)  s\u1ed1 l\u01b0\u1ee3ng t\u00e1o \u1edf c\u00e1c \u00f4 \\((y,i)\\) , \\((y,j)\\) and \\((y,k)\\). V\u00ec ch\u00fang ta \u0111ang \u0111i xu\u1ed1ng. Sau \u0111\u00f3, ch\u00fang ta x\u00e9t \u0111\u1ebfn nh\u1eefng \u0111\u01b0\u1eddng c\u00f3 th\u1ec3 sang ph\u1ea3i. \u0110\u1ec3 tr\u00e1nh vi\u1ec7c giao nhau, ta x\u00e9t l\u1ea7n l\u01b0\u1ee3t c\u00e1c b\u01b0\u1edbc \u1edf tr\u00e1i, ph\u1ea3i r\u1ed3i gi\u1eefa.</p> <p>B\u00e0i luy\u1ec7n t\u1eadp th\u00eam:</p> <ul> <li>MiniPaint \u2013 SRM 178 Div 1</li> </ul> <p>Note: Khi g\u1eb7p m\u1ed9t b\u00e0i to\u00e1n, h\u00e3y \u0111\u1ec3 \u00fd xem n\u00f3 c\u00f3 \u0111\u01b0\u1ee3c gi\u1ea3i trong th\u1eddi gian \u0111a th\u1ee9c kh\u00f4ng. N\u1ebfu c\u00f3, th\u1eed x\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i c\u1ee7a n\u00f3, c\u00e1ch chuy\u1ec3n tr\u1ea1ng th\u00e1i, v\u00e0 n\u1ebfu kh\u00f4ng chuy\u1ec3n \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i, h\u00e3y th\u1eed t\u1ed1i \u01b0u n\u00f3 v\u1ec1 m\u1ed9t b\u00e0i QH\u0110 (nh\u01b0 v\u00ed d\u1ee5 \u1edf tr\u00ean).</p> <p>Nh\u1eefng b\u00e0i \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean:</p> <ul> <li>TCCC \u201903 Semifinals 3 Div I Easy \u2013    ZigZag</li> <li>TCCC \u201904 Round 4 Div I Easy \u2013    BadNeighbors</li> <li>TCCC \u201904 Round 1 Div I Med \u2013    FlowerGarden</li> <li>TCO \u201903 Semifinals 4 Div I Easy \u2013    AvoidRoads</li> <li>TCCC \u201903 Round 4 Div I Easy \u2013    ChessMetric</li> <li>TCO \u201903 Round 4 Div I Med \u2013    Jewelry</li> <li>SRM 150 Div I Med \u2013    StripePainter</li> <li>SRM 197 Div II Hard \u2013    QuickSums</li> <li>SRM 165 Div II Hard \u2013    ShortPalindromes</li> <li>SRM 208 Div I Hard \u2013    StarAdventure</li> <li>SRM 178 Div I Hard \u2013    MiniPaint</li> </ul>"},{"location":"translate/topcoder/fun-with-bits/","title":"Fun with Bits","text":"<p>B\u00e0i vi\u1ebft b\u1edfi bmerry.</p> <p>Ngu\u1ed3n: Topcoder</p>"},{"location":"translate/topcoder/fun-with-bits/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>H\u1ea7u h\u1ebft c\u00e1c k\u0129 thu\u1eadt t\u1ed1i \u01b0u d\u00f9ng trong c\u00e1c k\u00ec thi Topcoder \u0111\u1ec1u l\u00e0 nh\u1eefng k\u0129 thu\u1eadt cao c\u1ea5p, c\u00f3 ngh\u0129a l\u00e0, c\u00e1c k\u0129 thu\u1eadt n\u00e0y t\u1ed1i \u01b0u tr\u1ef1c ti\u1ebfp thu\u1eadt to\u00e1n h\u01a1n l\u00e0 t\u1ed1i \u01b0u c\u00e1ch c\u00e0i \u0111\u1eb7t. Tuy nhi\u00ean, c\u00f3 m\u1ed9t k\u0129 thu\u1eadt t\u1ed1i \u01b0u c\u01a1 b\u1ea3n nh\u01b0ng s\u1eed d\u1ee5ng r\u1ea5t hi\u1ec7u qu\u1ea3 l\u00e0 thao t\u00e1c bit (bit manipulation), hay s\u1eed d\u1ee5ng nh\u1eefng bit thu\u1ed9c bi\u1ec3u di\u1ec5n c\u1ee7a m\u1ed9t s\u1ed1 nguy\u00ean \u0111\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed9t t\u1eadp h\u1ee3p. N\u00f3 kh\u00f4ng ch\u1ec9 l\u00e0m t\u0103ng t\u1ed1c \u0111\u1ed9 ch\u1ea1y, gi\u1ea3m dung l\u01b0\u1ee3ng b\u1ed9 nh\u1edb, m\u00e0 c\u00f2n l\u00e0m code ch\u00fang ta tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n.</p> <p>M\u00ecnh s\u1ebd b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c nh\u1eafc l\u1ea1i m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 bit, tr\u01b0\u1edbc khi nghi\u00ean c\u1ee9u nh\u1eefng k\u0129 thu\u1eadt s\u00e2u h\u01a1n. </p>"},{"location":"translate/topcoder/fun-with-bits/#co-ban","title":"C\u01a1 b\u1ea3n","text":"<p>Nh\u1eefng th\u1ee9 quan tr\u1ecdng nh\u1ea5t trong thao t\u00e1c bit l\u00e0 nh\u1eefng to\u00e1n t\u1eed tr\u00ean bit (bit-wise operator): <code>&amp;</code> (and), <code>|</code> (or), <code>~</code> (not) v\u00e0 <code>^</code> (xor). Ch\u1eafc h\u1eb3n c\u00e1c b\u1ea1n \u0111\u00e3 qu\u00e1 quen v\u1edbi ba to\u00e1n t\u1eed \u0111\u1ea7u ti\u00ean trong c\u00e1c ph\u00e9p to\u00e1n logic (<code>&amp;&amp;</code>, <code>||</code>, v\u00e0 <code>!</code>). D\u01b0\u1edbi \u0111\u00e2y l\u00e0 b\u1ea3ng ch\u00e2n tr\u1ecb (truth tables): </p> A B !A A &amp;&amp; B A || B A ^ B 0 0 1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 <p>To\u00e1n t\u1eed bit tr\u00ean s\u1ed1 nguy\u00ean c\u0169ng th\u1ef1c hi\u00ean gi\u1ed1ng v\u1eady, ch\u1ec9 kh\u00e1c m\u1ed9t th\u1ee9 l\u00e0 thay v\u00ec chuy\u1ec3n c\u00e1c tham s\u1ed1 v\u1ec1 true ho\u1eb7c false, th\u00ec c\u00e1c to\u00e1n t\u1eed bit \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean c\u00e1c bit c\u1ee7a c\u00e1c tham s\u1ed1. Do \u0111\u00f3, n\u1ebfu <code>A</code> l\u00e0 <code>1010</code> v\u00e0 <code>B</code> l\u00e0 <code>1100</code>, th\u00ec  <pre><code>A &amp; B = 1000\nA | B = 1110\nA ^ B = 0110\n~A = 11110101 (s\u1ed1 ch\u1eef s\u1ed1 1 ph\u1ee5 thu\u1ed9c v\u00e0o ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a A)\n</code></pre></p> <p>Hai to\u00e1n t\u1eed m\u00e0 ch\u00fang ta c\u1ea7n ph\u1ea3i bi\u1ebft n\u1eefa \u0111\u00f3 l\u00e0 to\u00e1n t\u1eed d\u1ecbch bit <code>a &lt;&lt; b</code> v\u00e0 <code>a &gt;&gt; b</code>. To\u00e1n t\u1eed \u0111\u1ea7u ti\u00ean l\u00e0 d\u1ecbch t\u1ea5t c\u1ea3 c\u00e1c bit c\u1ee7a a sang tr\u00e1i b v\u1ecb tr\u00ed; To\u00e1n t\u1eed th\u1ee9 hai c\u0169ng gi\u1ed1ng v\u1eady nh\u01b0ng d\u1ecbch sang ph\u1ea3i. V\u1edbi nh\u1eefng gi\u00e1 tr\u1ecb kh\u00f4ng \u00e2m (c\u0169ng l\u00e0 nh\u1eefng s\u1ed1 duy nh\u1ea5t m\u00e0 ta s\u1ebd x\u00e9t \u0111\u1ebfn), nh\u1eefng bit m\u1edbi xu\u1ea5t hi\u1ec7n (do d\u1ecbch tr\u00e1i) s\u1ebd b\u1eb1ng 0. D\u1ecbch tr\u00e1i (left-shifting) \\(b\\) bit \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c nh\u00e2n v\u1edbi \\(2^{b}\\) v\u00e0 d\u1ecbch ph\u1ea3i (right-shifting) \u0111\u1ed3ng ngh\u0129a v\u1edbi chia nguy\u00ean cho \\(2^{b}\\). D\u1ecbch bit \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u nh\u1ea5t \u0111\u1ec3 truy c\u1eadp v\u00e0o m\u1ed9t bit b\u1ea5t k\u00ec, v\u00ed d\u1ee5, <code>1 &lt;&lt; x</code> l\u00e0 m\u1ed9t s\u1ed1 nh\u1ecb ph\u00e2n v\u1edbi bit th\u1ee9 x b\u1eb1ng 1 v\u00e0 c\u00e1c bit kh\u00e1c b\u1eb1ng 0 (bit lu\u00f4n lu\u00f4n \u0111\u01b0\u1ee3c \u0111\u1ebfm t\u1eeb b\u00ean ph\u1ea3i (least-significant), \u0111\u1ebfm b\u1eaft \u0111\u1ea7u t\u1eeb 0). </p> <p>Th\u00f4ng th\u01b0\u1eddng, ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 nguy\u00ean \u0111\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed9t t\u1eadp h\u1ee3p v\u1edbi mi\u1ec1n gi\u00e1 tr\u1ecb l\u00ean \u0111\u1ebfn 32 gi\u00e1 tr\u1ecb (ho\u1eb7c 64 n\u1ebfu s\u1eed d\u1ee5ng s\u1ed1 nguy\u00ean 64 bit), v\u1edbi bit 1 cho bi\u1ebft ph\u1ea7n t\u1eed \u0111\u00f3 c\u00f3 trong t\u1eadp h\u1ee3p v\u00e0 bit 0 th\u00ec kh\u00f4ng c\u00f3. Sau \u0111\u00f3 th\u00ec c\u00e1c ph\u00e9p to\u00e1n th\u00ec kh\u00f4ng c\u00f3 g\u00ec ph\u1ee9c t\u1ea1p, trong \u0111\u00f3 <code>ALL_BITS</code> tr\u1ea3 v\u1ec1 s\u1ed1 bit 1, t\u01b0\u01a1ng \u1ee9ng v\u1edbi s\u1ed1 ph\u1ea7n t\u1eed c\u00f3 trong t\u1eadp h\u1ee3p:</p> <p>Ph\u00e9p to\u00e1n h\u1ee3p (Set union) <code>A | B</code></p> <p>Ph\u00e9p to\u00e1n giao (Set intersection) <code>A &amp; B</code></p> <p>Ph\u00e9p to\u00e1n hi\u1ec7u (Set subtraction) <code>A &amp; ~B</code></p> <p>Ph\u00e9p to\u00e1n ph\u1ee7 \u0111\u1ecbnh (Set negation) <code>ALL_BIT ^ A</code></p> <p>G\u00e1n bit b\u1eb1ng 1 (Set bit) <code>A |= 1 &lt;&lt; bit</code></p> <p>G\u00e1n bit b\u1eb1ng 0 (Clear bit) <code>A &amp;= ~(1 &lt;&lt; bit)</code></p> <p>Truy c\u1eadp gi\u00e1 tr\u1ecb (Test bit) <code>(A &amp; 1 &lt;&lt; bit) != 0</code></p>"},{"location":"translate/topcoder/fun-with-bits/#tach-tung-bit","title":"T\u00e1ch t\u1eebng bit","text":"<p>Trong ph\u1ea7n n\u00e0y, ch\u00fang ta s\u1ebd b\u00e0n \u0111\u1ebfn vi\u1ec7c t\u00ecm v\u1ecb tr\u00ed c\u1ee7a bit 1 cao nh\u1ea5t (bit 1 n\u1eb1m xa nh\u1ea5t v\u1ec1 b\u00ean tr\u00e1i) v\u00e0 th\u1ea5p nh\u1ea5t (bit 1 n\u1eb1m xa nh\u1ea5t v\u1ec1 b\u00ean ph\u1ea3i) trong m\u1ed9t s\u1ed1. \u0110\u00e2y l\u00e0 nh\u1eefng ph\u00e9p to\u00e1n c\u01a1 b\u1ea3n \u0111\u1ec3 t\u00e1ch m\u1ed9t t\u1eadp h\u1ee3p ra th\u00e0nh nh\u1eefng ph\u1ea7n t\u1eed.</p> <p>T\u00ecm bit 1 th\u1ea5p nh\u1ea5t kh\u00e1 l\u00e0 \u0111\u01a1n gi\u1ea3n, ch\u1ec9 c\u1ea7n k\u1ebft h\u1ee3p \u0111\u00fang \u0111\u1eafn gi\u1eefa to\u00e1n t\u1eed bit v\u00e0 ph\u00e9p to\u00e1n s\u1ed1 h\u1ecdc. Gi\u1ea3 s\u1eed ch\u00fang ta mu\u1ed1n t\u00ecm bit 1 th\u1ea5p nh\u1ea5t c\u1ee7a s\u1ed1 x (x kh\u00e1c 0). N\u1ebfu ch\u00fang ta tr\u1eeb 1 t\u1eeb x th\u00ec bit n\u00e0y \u0111\u01b0\u1ee3c xo\u00e1, nh\u01b0ng t\u1ea5t c\u1ea3 c\u00e1c bit m\u1ed9t kh\u00e1c v\u1eabn c\u00f2n. Do \u0111\u00f3, <code>x &amp; ~(x - 1)</code> ch\u1ec9 ch\u1ee9a duy nh\u1ea5t bit 1 th\u1ea5p nh\u1ea5t c\u1ee7a x. Tuy nhi\u00ean, c\u00e1ch n\u00e0y ch\u1ec9 cho ch\u00fang ta bi\u1ebft gi\u00e1 tr\u1ecb c\u1ee7a bit \u0111\u00f3, kh\u00f4ng ph\u1ea3i l\u00e0 v\u1ecb tr\u00ed.</p> <p>N\u1ebfu ch\u00fang ta mu\u1ed1n bi\u1ebft v\u1ecb tr\u00ed c\u1ee7a bit 1 cao nh\u1ea5t v\u00e0 th\u1ea5p nh\u1ea5t, c\u00e1ch ti\u1ebfp c\u1eadn \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u00f3 l\u00e0 duy\u1ec7t qua c\u00e1c bit (t\u1eeb tr\u00e1i qua hay t\u1eeb ph\u1ea3i qua) cho t\u1edbi khi t\u00ecm \u0111\u01b0\u1ee3c bit 1 \u0111\u1ea7u ti\u00ean. L\u00fac \u0111\u1ea7u, ta c\u00f3 th\u1ec3 c\u1ea3m th\u1ea5y c\u00e1ch l\u00e0m n\u00e0y h\u01a1i ch\u1eadm v\u00ec kh\u00f4ng t\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c l\u1ee3i th\u1ebf g\u00ec v\u1ec1 bit. Tuy nhi\u00ean, n\u1ebfu x\u00e1c su\u1ea5t \\(2^{N}\\) t\u1eadp con c\u1ee7a mi\u1ec1n gi\u00e1 tr\u1ecb N ph\u1ea7n t\u1eed \u0111\u1ec1u b\u1eb1ng nhau, th\u00ec trung b\u00ecnh v\u00f2ng l\u1eb7p ch\u1ec9 c\u1ea7n 2 l\u1ea7n ch\u1ea1y, th\u1eadt ra \u0111\u00e2y l\u00e0 ph\u01b0\u01a1ng ph\u00e1p nhanh nh\u1ea5t.</p> <p>CPU 386 c\u00f3 h\u1ed7 tr\u1ee3 duy\u1ec7t bit (bit scanning): BSF (bit scan forward) v\u00e0 BSR (bit scan reverse). GCC cung c\u1ea5p nh\u1eefng h\u1ed7 tr\u1ee3 n\u00e0y qua nh\u1eefng h\u00e0m x\u00e2y d\u1ef1ng s\u1eb5n (built-in functions) <code>__builtin_ctz</code> (\u0111\u1ebfm s\u1ed1 ch\u1eef s\u1ed1 0 \u0111\u1ee9ng cu\u1ed1i) v\u00e0 <code>__builtin_clz</code> (\u0111\u1ebfm s\u1ed1 ch\u1eef s\u1ed1 0 \u0111\u1ee9ng \u0111\u1ea7u). \u0110\u00e2y l\u00e0 nh\u1eefng c\u00e1ch ti\u1ec7n l\u1ee3i nh\u1ea5t \u0111\u1ec3 t\u00ecm v\u1ecb tr\u00ed c\u1ee7a bit d\u00e0nh cho l\u1eadp tr\u00ecnh vi\u00ean C++ \u1edf Topcoder. L\u01b0u \u00fd: gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 l\u00e0 undefined n\u1ebfu tham s\u1ed1 \u0111\u1ea7u v\u00e0o b\u1eb1ng 0.</p> <p>Cu\u1ed1i c\u00f9ng, c\u00f2n m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p kh\u00e1c \u0111\u1ec3 thay th\u1ebf trong nh\u1eefng testcase m\u00e0 d\u00f9ng v\u00f2ng l\u1eb7p t\u1ed1n nhi\u1ec1u th\u1eddi gian. S\u1eed d\u1ee5ng m\u1ed7i byte c\u1ee7a s\u1ed1 nguy\u00ean 4 byte ho\u1eb7c s\u1ed1 nguy\u00ean 8 byte \u0111\u1ec3 t\u00ednh tr\u01b0\u1edbc b\u1ea3ng 256 ph\u1ea7n t\u1eed l\u01b0u tr\u1eef v\u1ecb tr\u00ed c\u1ee7a bit 1 cao nh\u1ea5t (th\u1ea5p nh\u1ea5t) trong byte \u0111\u00f3. Bit 1 cao nh\u1ea5t (th\u1ea5p nh\u1ea5t) c\u1ee7a s\u1ed1 nguy\u00ean l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t (gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t) c\u1ee7a b\u1ea3ng n\u00e0y. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u0111\u1ebfn \u0111\u1ec3 l\u00e0m \u0111a d\u1ea1ng th\u00eam c\u00e1c ph\u01b0\u01a1ng ph\u00e1p, t\u1ed1c \u0111\u1ed9 c\u0169ng ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 r\u00f5 r\u00e0ng qua c\u00e1c k\u00ec thi Topcoder.</p>"},{"location":"translate/topcoder/fun-with-bits/#em-so-bit","title":"\u0110\u1ebfm s\u1ed1 bit","text":"<p>Ch\u00fang ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ki\u1ec3m tra m\u1ed9t s\u1ed1 c\u00f3 ph\u1ea3i l\u00e0 lu\u1ef9 th\u1eeba c\u1ee7a 2 b\u1eb1ng c\u00e1ch xo\u00e1 bit 1 th\u1ea5p nh\u1ea5t v\u00e0 ki\u1ec3m tra xem n\u1ebfu k\u1ebft qu\u1ea3 c\u00f3 b\u1eb1ng 0 ch\u01b0a. Tuy nhi\u00ean, trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p ch\u00fang ta c\u1ea7n ph\u1ea3i bi\u1ebft c\u00f3 bao nhi\u00eau bit \u0111\u00e3 \u0111\u01b0\u1ee3c set (bit \u0111\u00e3 \u0111\u01b0\u1ee3c set l\u00e0 bit 1, bit ch\u01b0a \u0111\u01b0\u1ee3c set l\u00e0 bit b\u1eb1ng 0), ch\u00fang ta c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n nhi\u1ec1u vi\u1ec7c ph\u1ee9c t\u1ea1p h\u01a1n t\u00ed. </p> <p>GCC c\u00f3 m\u1ed9t h\u00e0m g\u1ecdi l\u00e0 <code>__builtin_popcount</code> th\u1ef1c hi\u1ec7n \u0111\u00fang nh\u1eefng th\u1ee9 ta c\u1ea7n. Tuy nhi\u00ean, kh\u00f4ng gi\u1ed1ng nh\u01b0 h\u00e0m <code>__builtin_ctz</code>, n\u00f3 kh\u00f4ng \u0111\u01b0\u1ee3c chuy\u1ec3n th\u00e0nh nh\u1eefng ch\u1ec9 th\u1ecb tr\u00ean ph\u1ea7n c\u1ee9ng (\u00edt nh\u1ea5t l\u00e0 tr\u00ean x86). Thay v\u00e0o \u0111\u00f3, n\u00f3 s\u1ebd s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p l\u01b0u b\u1ea3ng gi\u1ed1ng nh\u01b0 tr\u00ean \u0111\u00e3 tr\u00ecnh b\u00e0y \u0111\u1ec3 t\u00ecm ki\u1ebfm bit. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y kh\u00e1 l\u00e0 hi\u1ec7u qu\u1ea3 v\u00e0 c\u0169ng c\u1ef1c k\u00ec ti\u1ec7n l\u1ee3i. </p> <p>Nh\u1eefng ng\u01b0\u1eddi d\u00f9ng c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c kh\u00f4ng th\u1ec3 d\u00f9ng c\u00e1ch n\u00e0y (m\u1eb7c d\u00f9 h\u1ecd c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t l\u1ea1i n\u00f3). N\u1ebfu m\u1ed9t s\u1ed1 \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n r\u1eb1ng c\u00f3 r\u1ea5t \u00edt bit 1, m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p thay th\u1ebf l\u00e0 ch\u1ec9 c\u1ea7n l\u1eb7p l\u1ea1i qu\u00e1 tr\u00ecnh t\u00ecm bit 1 th\u1ea5p nh\u1ea5t v\u00e0 xo\u00e1 n\u00f3.</p>"},{"location":"translate/topcoder/fun-with-bits/#tat-ca-cac-tap-con","title":"T\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con","text":"<p>M\u1ed9t \u01b0u \u0111i\u1ec3m l\u1edbn c\u1ee7a thao t\u00e1c bit l\u00e0 vi\u1ec7c duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con c\u1ee7a m\u1ed9t t\u1eadp h\u1ee3p N ph\u1ea7n t\u1eed r\u1ea5t \u0111\u01a1n gi\u1ea3n: m\u1ed7i s\u1ed1 nguy\u00ean \u0111\u1ea1i di\u1ec7n cho m\u1ed9t t\u1eadp con. H\u01a1n th\u1ebf n\u1eefa, n\u1ebfu A l\u00e0 t\u1eadp con c\u1ee7a B th\u00ec s\u1ed1 nguy\u00ean \u0111\u1ea1i di\u1ec7n cho A s\u1ebd nh\u1ecf h\u01a1n s\u1ed1 nguy\u00ean \u0111\u1ea1i di\u1ec7n cho B, r\u1ea5t ti\u1ec7n l\u1ee3i cho vi\u1ec7c k\u1ebft h\u1ee3p v\u1edbi quy ho\u1ea1ch \u0111\u1ed9ng. </p> <p>Vi\u1ec7c duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con c\u1ee7a m\u1ed9t t\u1eadp con kh\u00e1c c\u0169ng r\u1ea5t d\u1ec5 d\u00e0ng (\u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t d\u00e3y bit), n\u1ebfu b\u1ea1n kh\u00f4ng quan t\u00e2m \u0111\u1ebfn th\u1ee9 t\u1ef1 duy\u1ec7t ng\u01b0\u1ee3c l\u1ea1i (ho\u1eb7c c\u00f3 th\u1ec3 l\u01b0u c\u00e1c t\u1eadp h\u1ee3p v\u00e0o m\u1ed9t danh s\u00e1ch v\u00e0 \u0111i ng\u01b0\u1ee3c l\u1ea1i). M\u1eb9o \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng c\u0169ng gi\u1ed1ng nh\u01b0 vi\u1ec7c t\u00ecm bit 1 th\u1ea5p nh\u1ea5t v\u1eady. N\u1ebfu ch\u00fang ta tr\u1eeb \u0111i 1 t\u1eeb t\u1eadp con, th\u00ec ph\u1ea7n t\u1eed \u0111\u1ea1i di\u1ec7n b\u1edfi bit 1 \u0111\u00f3 s\u1ebd \u0111\u01b0\u1ee3c xo\u00e1, v\u00e0 m\u1ed7i ph\u1ea7n t\u1eed 0 ph\u00eda b\u00ean ph\u1ea3i n\u00f3 \u0111\u1ec1u tr\u1edf th\u00e0nh 1. Tuy nhi\u00ean, ch\u00fang ta ch\u1ec9 mu\u1ed1n c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\u1ecdn l\u00e0 nh\u1eefng ph\u1ea7n t\u1eed c\u00f3 trong t\u1eadp cha. N\u00ean b\u01b0\u1edbc l\u1eb7p ch\u1ec9 c\u1ea7n thay th\u1ebf ng\u1eafn g\u1ecdn b\u1eb1ng <code>i = (i - 1) &amp; superset</code>.</p>"},{"location":"translate/topcoder/fun-with-bits/#cai-at","title":"C\u00e0i \u0111\u1eb7t:","text":"<pre><code>// x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con kh\u00e1c r\u1ed7ng c\u1ee7a S\nfor (int i = S; i &gt; 0; i = (i - 1) &amp; S); {\n}\n</code></pre>"},{"location":"translate/topcoder/fun-with-bits/#chi-can-mot-bit-sai-cung-0-iem","title":"Ch\u1ec9 c\u1ea7n m\u1ed9t bit sai c\u0169ng 0 \u0111i\u1ec3m","text":"<p>C\u00f3 m\u1ed9t s\u1ed1 l\u1ed7i m\u00e0 m\u1ecdi ng\u01b0\u1eddi th\u01b0\u1eddng m\u1eafc ph\u1ea3i khi s\u1eed d\u1ee5ng c\u00e1c thao t\u00e1c bit. Ch\u00fa \u00fd c\u1ea9n th\u1eadn v\u1edbi code c\u1ee7a b\u1ea1n. </p> <ol> <li> <p>Khi th\u1ef1c hi\u1ec7n ph\u00e9p to\u00e1n d\u1ecbch, a &lt;&lt; b, ki\u1ebfn tr\u00fac x86 ch\u1ec9 s\u1eed d\u1ee5ng the 5 bit th\u1ea5p nh\u1ea5t c\u1ee7a b (6 cho s\u1ed1 nguy\u00ean 64 bit). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 d\u1ecbch tr\u00e1i (ho\u1eb7c ph\u1ea3i) 32 bit \u0111\u1ed3ng ngh\u0129a l\u00e0 kh\u00f4ng l\u00e0m g\u00ec c\u1ea3, ngo\u00e0i vi\u1ec7c xo\u00e1 t\u1ea5t c\u1ea3 c\u00e1c bit. Vi\u1ec7c n\u00e0y c\u0169ng \u0111\u01b0\u1ee3c nh\u1eafc \u0111\u1ebfn trong Java v\u00e0 C#; C99 \u0111\u1ec1 c\u1eadp r\u1eb1ng vi\u1ec7c d\u1ecbch \u00edt nh\u1ea5t b\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a s\u1ed1 s\u1ebd tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 l\u00e0  undefined. L\u1ecbch s\u1eed: m\u00e1y 8086 s\u1eed d\u1ee5ng full shift register, th\u01b0\u1eddng thao t\u00e1c n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 ki\u1ec3m tra processor m\u1edbi.</p> </li> <li> <p>To\u00e1n t\u1eed <code>&amp;</code> v\u00e0 <code>|</code> c\u00f3 \u0111\u1ed9 \u01b0u ti\u00ean th\u1ef1c hi\u1ec7n th\u1ea5p h\u01a1n ph\u00e9p so s\u00e1nh. \u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0 <code>x &amp; 3 == 1</code> b\u1eb1ng v\u1edbi <code>x &amp; (3 == 1)</code>, \u0111\u00e2y l\u00e0 nh\u1eefng l\u1ed7i b\u1ea1n kh\u00f4ng h\u1ec1 mu\u1ed1n m\u1eafc ph\u1ea3i. </p> </li> <li> <p>N\u1ebfu b\u1ea1n mu\u1ed1n vi\u1ebft nh\u1eefng d\u00f2ng code C/C++ d\u00f9ng \u1edf nhi\u1ec1u n\u01a1i, h\u00e3y \u0111\u1ea3m b\u1ea3o r\u1eb1ng b\u1ea1n s\u1eed d\u1ee5ng ki\u1ec3u unsigned, c\u1ee5 th\u1ec3 trong tr\u01b0\u1eddng h\u1ee3p b\u1ea1n c\u00f3 \u00fd \u0111\u1ecbnh s\u1eed d\u1ee5ng bit cao nh\u1ea5t (top-most). C99 n\u00f3i r\u1eb1ng d\u1ecbch bit tr\u00ean gi\u00e1 tr\u1ecb \u00e2m s\u1ebd tr\u1ea3 v\u1ec1 undefined. Java ch\u1ec9 c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u c\u00f3 d\u1ea5u: <code>&gt;&gt;</code> s\u1ebd t\u1ef1 \u0111\u1ed9ng  thay \u0111\u1ed5i d\u1ea5u c\u1ee7a gi\u00e1 tr\u1ecb n\u1ebfu c\u1ea7n thi\u1ebft (nh\u01b0ng \u0111\u00e2y l\u00e0 th\u1ee9 b\u1ea1n th\u01b0\u1eddng kh\u00f4ng mu\u1ed1n x\u1ea3y ra), nh\u01b0ng to\u00e1n t\u1eed \u0111\u1eb7c bi\u1ec7t n\u00e0y c\u1ee7a Java l\u00e0 <code>&gt;&gt;&gt;</code> s\u1ebd th\u00eam c\u00e1c s\u1ed1 0 v\u00e0o ph\u00eda tr\u01b0\u1edbc sau khi d\u1ecbch. </p> </li> </ol>"},{"location":"translate/topcoder/fun-with-bits/#mot-so-meo-hay-va-cute","title":"M\u1ed9t s\u1ed1 m\u1eb9o hay (v\u00e0 cute)","text":"<p>C\u00f3 m\u1ed9t s\u1ed1 m\u1eb9o hay c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng v\u1edbi thao t\u00e1c bit. Nh\u1eefng m\u1eb9o n\u00e0y kh\u00e1 hay \u0111\u1ec3 \u0111em \u0111i ch\u00e9m gi\u00f3 v\u1edbi b\u1ea1n b\u00e8, nh\u01b0ng th\u00f4ng th\u01b0\u1eddng hi\u1ec7u qu\u1ea3 c\u0169ng kh\u00f4ng c\u1ea3i thi\u1ec7n l\u1eafm \u1edf th\u1ef1c t\u1ebf.</p> <p>\u0110\u1ea3o th\u1ee9 t\u1ef1 c\u00e1c bit trong m\u1ed9t s\u1ed1 nguy\u00ean <pre><code>x = ((x &amp; 0xaaaaaaaa) &gt;&gt; 1) | ((x &amp; 0x55555555) &lt;&lt; 1);\nx = ((x &amp; 0xcccccccc) &gt;&gt; 2) | ((x &amp; 0x33333333) &lt;&lt; 2);\nx = ((x &amp; 0xf0f0f0f0) &gt;&gt; 4) | ((x &amp; 0x0f0f0f0f) &lt;&lt; 4);\nx = ((x &amp; 0xff00ff00) &gt;&gt; 8) | ((x &amp; 0x00ff00ff) &lt;&lt; 8);\nx = ((x &amp; 0xffff0000) &gt;&gt; 16) | ((x &amp; 0x0000ffff) &lt;&lt; 16);\n</code></pre></p> <p>B\u00e0i t\u1eadp l\u00e0 b\u1ea1n h\u00e3y d\u00f9ng k\u0129 thu\u1eadt ph\u00eda tr\u00ean \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 bit v\u1edbi ki\u1ec3u d\u1eef li\u1ec7u word.</p> <p>Duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con c\u00f3 k ph\u1ea7n t\u1eed</p> <pre><code>int s = (1 &lt;&lt; k) - 1;\nwhile (!(s &amp; 1 &lt;&lt; N)) \n{\n    //l\u00e0m g\u00ec \u0111\u00f3 v\u1edbi s\n    int lo = s &amp; ~(s - 1);   //bit 1 th\u1ea5p nh\u1ea5t\n    int lz = (s + lo) &amp; ~s;  //bit 0 th\u1ea5p nh\u1ea5t tr\u00ean lo\n    s |= lz;                       //th\u00eam lz v\u00e0o t\u1eadp h\u1ee3p\n    s &amp;= ~(lz - 1);             //reset bit ph\u00eda d\u01b0\u1edbi lz\n    s |= (lz / lo / 2) - 1;     //\u0111\u1eb7t l\u1ea1i \u0111\u00fang s\u1ed1 bit \u1edf cu\u1ed1i\n}\n</code></pre> <p>Trong C, d\u00f2ng cu\u1ed1i c\u00f3 th\u1ec3 vi\u1ebft l\u00e0 <code>s |= (lz &gt;&gt; ffs(lo)) - 1</code> \u0111\u1ec3 tr\u00e1nh ph\u00e9p chia. </p> <p>X\u00e1c \u0111\u1ecbnh <code>x ? y : -y</code>, trong \u0111\u00f3 x b\u1eb1ng 0 ho\u1eb7c 1     <code>(-x ^ y) + x</code></p> <p>C\u00e2u l\u1ec7nh tr\u00ean ch\u1ea1y \u0111\u01b0\u1ee3c tr\u00ean ki\u1ebfn tr\u00fac s\u1ed1 b\u00f9 2 (t\u1ed3n t\u1ea1i \u1edf h\u1ea7u h\u1ebft c\u00e1c m\u00e1y t\u00ednh b\u1ea1n th\u1ea5y ng\u00e0y nay), trong \u0111\u00f3 s\u1ed1 \u00e2m \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng c\u00e1ch \u0111\u1ea3o t\u1ea5t c\u1ea3 c\u00e1c bit v\u00e0 c\u1ed9ng th\u00eam cho 1. Ch\u00fa \u00fd r\u1eb1ng tr\u00ean i686 v\u00e0 tr\u01b0\u1edbc \u0111\u00f3, c\u00e2u l\u1ec7nh n\u00e0y ch\u1ea1y kh\u00e1 hi\u1ec7u qu\u1ea3 (kh\u00f4ng c\u1ea7n r\u1ebd nh\u00e1nh ) nh\u1edd v\u00e0o l\u1ec7nh <code>CMOVE</code> (di chuy\u1ec3n c\u00f3 \u0111i\u1ec1u ki\u1ec7n).</p>"},{"location":"translate/topcoder/fun-with-bits/#bai-tap-mau","title":"B\u00e0i t\u1eadp m\u1eabu","text":"<p>TCCC 2006, Round 1B Medium</p> <p>V\u1edbi m\u1ed7i th\u00e0nh ph\u1ed1, gi\u1eef m\u1ed9t bit-set c\u1ee7a nh\u1eefng th\u00e0nh ph\u1ed1 k\u1ec1 n\u00f3. M\u1ed9t khi m\u1ed9t ph\u1ea7n c\u1ee7a nh\u00e0 m\u00e1y \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn (\u0111\u1ec7 quy), AND nh\u1eefng bit-set \u0111\u00f3 l\u1ea1i s\u1ebd cho ra m\u1ed9t bit-set m\u1edbi m\u00f4 t\u1ea3 nh\u1eefng v\u1ecb tr\u00ed c\u00f3 th\u1ec3 c\u1ee7a nh\u1eefng ph\u1ea7n c\u1ee7a nh\u00e0 m\u00e1y. N\u1ebfu bit-set n\u00e0y c\u00f3 k bit, th\u00ec c\u00f3 \\(C^k_m\\) c\u00e1ch \u0111\u1ec3 ch\u1ecdn c\u00e1c ph\u1ea7n c\u1ee7a nh\u00e0 m\u00e1y.</p> <p>TCO 2006, Round 1 Easy</p> <p>S\u1ed1 l\u01b0\u1ee3ng n\u00fat nh\u1ecf cho th\u1ea5y r\u1eb1ng b\u00e0i n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u1eb1ng vi\u1ec7c x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c t\u1eadp con. V\u1edbi m\u1ed7i t\u1eadp con ta x\u00e9t 2 tr\u01b0\u1eddng h\u1ee3p: n\u00fat nh\u1ecf nh\u1ea5t kh\u00f4ng c\u00f3 trao \u0111\u1ed5i g\u00ec c\u1ea3, trong tr\u01b0\u1eddng h\u1ee3p ta x\u00e9t t\u1eadp con m\u00e0 kh\u00f4ng c\u00f3 n\u00f3, ho\u1eb7c n\u00f3 trao \u0111\u1ed5i v\u1edbi m\u1ed9t s\u1ed1 n\u00fat, ta s\u1ebd x\u00e9t c\u00e1c t\u1eadp h\u1ee3p kh\u00f4ng c\u00f3 n\u00f3 v\u00e0 c\u00e1c n\u00fat m\u00e0 n\u00f3 trao \u0111\u1ed5i. Code b\u00e0i gi\u1ea3i r\u1ea5t ng\u1eafn g\u1ecdn: </p> <pre><code>static int dp[1 &lt;&lt; 18];\n\nint SeparateConnections::howMany(vector &lt;string&gt; mat)\n{\n    int N = mat.size();\n    int N2 = 1 &lt;&lt; N;\n    dp[0] = 0;\n    for (int i = 1; i &lt; N2; i++)\n    {\n        int bot = i &amp; ~(i - 1);\n        int use = __builtin_ctz(bot);\n        dp[i] = dp[i ^ bot];\n        for (int j = use + 1; j &lt; N; j++)\n            if ((i &amp; (1 &lt;&lt; j)) &amp;&amp; mat[use][j] == 'Y')\n                dp[i] = max(dp[i], dp[i ^ bot ^ (1 &lt;&lt; j)] + 2);\n    }\n    return dp[N2 - 1];\n}\n</code></pre> <p>SRM 308, Division  Medium</p> <p>C\u00e1i b\u1ea3ng ch\u1ee9a 36 h\u00ecnh vu\u00f4ng v\u00e0 nh\u1eefng con c\u1edd kh\u00f4ng th\u1ec3 ph\u00e2n bi\u1ec7t \u0111\u01b0\u1ee3c, n\u00ean nh\u1eefng v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 v\u00e0o s\u1ed1 nguy\u00ean 64 bit. B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean l\u00e0 li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c b\u01b0\u1edbc \u0111i h\u1ee3p l\u1ec7. B\u1ea5t k\u00ec b\u01b0\u1edbc \u0111i h\u1ee3p l\u1ec7 n\u00e0o c\u0169ng \u0111\u1ec1u \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 s\u1eed d\u1ee5ng 3 tr\u01b0\u1eddng: 1 tr\u1ea1ng th\u00e1i tr\u01b0\u1edbc, 1 tr\u1ea1ng th\u00e1i sau v\u00e0 m\u1ed9t mask d\u00f9ng \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a ph\u1ea7n n\u00e0o c\u1ee7a tr\u1ea1ng th\u00e1i tr\u01b0\u1edbc l\u00e0 quan tr\u1ecdng. M\u1ed9t b\u01b0\u1edbc \u0111i c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o ra t\u1eeb tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i n\u1ebfu <code>(current &amp; mask) == before</code>. N\u1ebfu n\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o ra, th\u00ec tr\u1ea1ng th\u00e1i m\u1edbi l\u00e0 <code>(current &amp; ~mask) | after</code>.</p> <p>SRM 320, Division 1 Hard</p> <p>\u0110i\u1ec1u ki\u1ec7n cho ta bi\u1ebft r\u1eb1ng ch\u1ec9 c\u00f3 nhi\u1ec1u nh\u1ea5t 8 c\u1ed9t (n\u1ebfu c\u00f3 nhi\u1ec1u h\u01a1n, ta c\u00f3 th\u1ec3 \u0111\u1ed5i gi\u1eefa d\u00f2ng v\u00e0 c\u1ed9t), n\u00ean ch\u00fang ta c\u00f3 th\u1ec3 x\u00e9t t\u1eebng c\u00e1ch \u0111\u1ec3 m\u1ed9t d\u00f2ng. M\u1ed9t khi ch\u00fang ta c\u00f3 th\u00f4ng tin n\u00e0y, ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 c\u00f2n l\u1ea1i c\u1ee7a b\u00e0i to\u00e1n (xem tutorial \u0111\u1ec3 bi\u1ebft th\u00eam chi ti\u1ebft). Do \u0111\u00f3 ta c\u1ea7n m\u1ed9t danh s\u00e1ch t\u1ea5t c\u1ea3 s\u1ed1 nguy\u00ean n bit m\u00e0 kh\u00f4ng c\u00f3 2 bit 1 k\u1ec1 nhau, v\u00e0 ta c\u0169ng c\u1ea7n bi\u1ebft c\u00f3 bao nhi\u00eau bit 1 trong m\u1ed7i d\u00f2ng nh\u01b0 v\u1eady. \u0110\u00e2y l\u00e0 code c\u1ee7a m\u00ecnh: <pre><code>for (int i = 0; i &lt; (1 &lt;&lt; n); i++)\n{\n    if (i &amp; (i &lt;&lt; 1)) continue;\n    pg.push_back(i);\n    pgb.push_back(__builtin_popcount(i));\n}\n</code></pre></p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/","title":"Lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng - Maxflow network","text":"<p>Bi\u00ean so\u1ea1n: \u0110\u1ed7 Vi\u1ec7t Anh</p> <p>Email: dovietanh.95@gmail.com</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#0-kien-thuc-can-biet","title":"0. Ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c b\u00e0i vi\u1ebft b\u1ea1n \u0111\u1ecdc c\u1ea7n bi\u1ebft c\u00e1c kh\u00e1i ni\u1ec7m v\u1ec1 l\u00fd thuy\u1ebft \u0111\u1ed3 th\u1ecb v\u00e0 b\u00e0i vi\u1ebft gi\u1edbi thi\u1ec7u v\u1ec1 b\u00e0i to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#1-ung-dung","title":"1. \u1ee8ng d\u1ee5ng","text":"<ul> <li> <p>Ch\u00ednh t\u00ean b\u00e0i to\u00e1n \u0111\u00e3 cho th\u1ea5y m\u1ed9t \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3 \u0111\u00f3 l\u00e0 t\u00ednh l\u01b0\u1ee3ng n\u01b0\u1edbc c\u00f3 th\u1ec3 v\u1eadn chuy\u1ec3n gi\u1eefa hai \u0111\u1ecba \u0111i\u1ec3m(\u0111i\u1ec3m ph\u00e1t v\u00e0 \u0111i\u1ec3m thu) trong h\u1ec7 th\u1ed1ng</p> </li> <li> <p>\u1ee8ng d\u1ee5ng th\u1ee9 2 \u0111\u00f3 l\u00e0 t\u00ednh to\u00e1n l\u01b0u l\u01b0\u1ee3ng giao th\u00f4ng c\u1ee7a h\u1ec7 th\u1ed1ng \u0111\u01b0\u1eddng trong th\u00e0nh ph\u1ed1</p> </li> </ul> <p>Tr\u00ean \u0111\u00e2y l\u00e0 2 \u1ee9ng d\u1ee5ng d\u1ec5 th\u1ea5y c\u1ee7a b\u00e0i to\u00e1n r\u1ea5t mong \u0111\u01b0\u1ee3c g\u00f3p \u00fd \u0111\u1ec3 l\u00e0m phong ph\u00fa n\u1ed9i dung c\u1ee7a m\u1ee5c n\u00e0y</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#2-phat-bieu-bai-toan","title":"2. Ph\u00e1t bi\u1ec3u b\u00e0i to\u00e1n","text":"<p>Cho m\u1ed9t m\u1ea1ng (network) c\u00f3 d\u1ea1ng m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G=(E,V)\\) (\\(V\\) l\u00e0 t\u1eadp \u0111\u1ec9nh, \\(E\\) l\u00e0 t\u1eadp c\u1ea1nh) c\u00f3:</p> <ul> <li>\\(e=(u,v) \\in E\\) nh\u01b0 m\u1ed9t k\u00eanh chuy\u1ec3n t\u1ea3i n\u01b0\u1edbc t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) c\u00f3 s\u1ee9c ch\u1ee9a(capacity) \\(c(e)=c[u,v]\\) (hay l\u00e0 gi\u00e1 tr\u1ecb lu\u1ed3ng t\u1ed1i \u0111a c\u00f3 c\u00f3 th\u1ec3 qua \\(e\\))</li> <li>M\u1ed9t \u0111\u1ec9nh ph\u00e1t \\(s\\) (source)</li> <li>V\u00e0 m\u1ed9t \u0111\u1ec9nh thu \\(t\\) (sink)</li> </ul> <p>Y\u00eau c\u1ea7u: v\u1edbi m\u1ed7i k\u00eanh truy\u1ec1n t\u1ea3i \\(e=[u,v]\\in E\\) c\u1ea7n x\u00e1c \u0111\u1ecbnh gi\u00e1 tr\u1ecb \\(f[u,v] (f[u,v]\\le c[u,v])\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 lu\u1ed3ng (flow) tr\u00ean k\u00eanh \\(e\\), sao cho \\(\\sum_{v\u2208V} f[v,u]=\\sum_{w\\in V} f[u,w]\\) (\\(\\forall u\\in V/\\\\{s,t\\\\}\\)) (t\u1ed5ng lu\u1ed3ng \u0111i v\u00e0o b\u1eb1ng t\u1ed5ng lu\u1ed3ng \u0111i ra). H\u01a1n th\u1ebf n\u1eefa \\(f(s,V)=\\sum_{v\\in V} f[s,v]\\) l\u00e0 l\u1edbn nh\u1ea5t.</p> <p>L\u01b0u \u00fd: \u1edf \u0111\u00e2y \\(f(s, V)\\)(\\(=\\sum_{u\\in V} f[s,u]\\)) l\u00e0 m\u1ed9t h\u00e0m trong khi \\(f[s,u]\\) l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb</p> <p>h\u00ecnh d\u01b0\u1edbi \u0111\u00e2y bi\u1ec3u di\u1ec5n m\u1ed9t lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng v\u00e0 m\u1ed7i c\u1ea1nh c\u1ee7a n\u00f3 \u0111\u01b0\u1ee3c g\u00e1n nh\u00e3n l\u00e0 \\(f[u,v]/c[u,v]\\) (gi\u00e1 tr\u1ecb d\u00f2ng ch\u1ea3y v\u00e0 s\u1ee9c ch\u1ee9a c\u1ee7a k\u00eanh)</p> <p>/uploads/max_flow_img_1.jpg</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#3-cach-giai-bai-toan","title":"3. c\u00e1ch gi\u1ea3i b\u00e0i to\u00e1n","text":"<p>Tr\u01b0\u1edbc h\u1ebft \u0111\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i to\u00e1n ta bi\u1ebft hai kh\u00e1i ni\u1ec7m m\u1ea1ng th\u1eb7ng d\u01b0 (residual network) v\u00e0 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng (augment path)</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#31-mang-thang-du-residual-network","title":"3.1 m\u1ea1ng th\u1eb7ng d\u01b0 - residual network","text":"<p>M\u1ea1ng th\u1eb7ng d\u01b0 \\(G'(E',V')\\) c\u1ee7a m\u1ea1ng \\(G(E,V)\\) cho bi\u1ebft s\u1ee9c ch\u1ee9a c\u00f2n l\u1ea1i tr\u00ean m\u1ea1ng \\(G(E,V)\\) khi \u0111\u00e3 g\u1eedi m\u1ed9t s\u1ed1 lu\u1ed3ng \\(f^{\\*}\\) qua n\u00f3 v\u00e0 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u01b0 sau:</p> <ul> <li>T\u1eadp \u0111\u1ec9nh \\(V'= V\\)</li> <li> <p>M\u1ed7i c\u1ea1nh \\(e(u,v) \u2208 E\\) c\u00f3 gi\u00e1 tr\u1ecb lu\u1ed3ng l\u00e0 \\(f[u,v]\\) v\u00e0 s\u1ee9c ch\u1ee9a \\(c[u,v]\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi 2 c\u1ea1nh trong \\(E'\\):</p> <ul> <li>\\(e'(u,v)\\)(c\u1ea1nh xu\u00f4i) c\u00f3 \\(f'[u,v]=f[u,v]\\),\\(c'[u,v]=c[u,v]\\)</li> <li>V\u00e0 \\(e'(v,u)\\)(c\u1ea1nh ng\u01b0\u1ee3c) c\u00f3 \\(f'[v,u]=-f[u,v]\\) v\u00e0 \\(c'[v,u]=0\\)</li> </ul> </li> </ul> <p>(C\u00f3 th\u1ec3 th\u1ea5y t\u1eadp c\u1ea1nh xu\u00f4i tr\u00ean \\(G'\\) ch\u00ednh l\u00e0 t\u1eadp c\u1ea1nh c\u1ee7a \\(G\\)). H\u00ecnh d\u01b0\u1edbi \u0111\u00e2y s\u1ebd di\u1ec5n t\u1ea3 m\u1ed9t \u0111\u1ed3 th\u1ecb G v\u00e0 m\u1ea1ng th\u1eb7ng d\u01b0 \\(G\\)' c\u1ee7a n\u00f3</p> <p>/uploads/max_flow_2a.jpg /uploads/max_flow_2b.jpg</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#32-uong-tang-luong-augment-path","title":"3.2 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng - augment path","text":"<p>\u0110\u01b0\u1eddng t\u0103ng lu\u1ed3ng l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n t\u1eeb \u0111\u1ec9nh ph\u00e1t \\(s\\) (source) \u0111\u1ebfn \u0111\u1ec9nh thu \\(t\\) (sink) trong m\u1ea1ng th\u1eb7ng d\u01b0 \\(G'\\) m\u00e0 k\u00eanh tr\u00ean \u0111\u01b0\u1eddng \u0111i ch\u01b0a b\u1ecb b\u00e3o h\u00f2a ( \\(f'[u,v] &lt; c'[u,v]\\), m\u1ed9t k\u00eanh \\(e'(u,v)\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 b\u00e3o h\u00f2a n\u1ebfu \\(f'(u,v)=c'(u,v)\\)).</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#33-vi-du","title":"3.3 v\u00ed d\u1ee5","text":"<p>b\u1eb1ng vi\u1ec7c xem x\u00e9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng s_A_C_t tr\u00ean m\u1ea1ng th\u1eb7ng d\u01b0 \\(G'\\) ch\u00fang ta c\u00f3 th\u1ec3 t\u0103ng lu\u1ed3ng l\u00ean 1 v\u00ec s_A v\u00e0 A_C c\u00f3 th\u1ec3 cho m\u1ed9t lu\u1ed3ng c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 3 nh\u01b0ng C_t ch\u1ec9 c\u00f3 th\u1ec3 cho m\u1ed9t lu\u1ed3ng 1 \u0111i qua, do \u0111\u00f3 ta s\u1ebd l\u1ea5y gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng \u0111i \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u0103ng gi\u00e1 tr\u1ecb lu\u1ed3ng. Sau khi t\u0103ng lu\u1ed3ng l\u00ean m\u1ed9t ta c\u00f3 h\u00ecnh nh\u01b0 sau:</p> <p>/uploads/max_flow_3a.jpg</p> <p>sau khi t\u0103ng lu\u1ed3ng ta \u0111\u01b0\u1ee3c m\u1ed9t m\u1ea1ng m\u1edbi v\u1edbi t\u1ed5ng gi\u00e1 tr\u1ecb lu\u1ed3ng l\u00e0 2 nh\u01b0ng trong v\u00ed d\u1ee5 1.a ta th\u1ea5y t\u1ed5ng lu\u1ed3ng l\u00e0 3 do \u0111\u00f3 lu\u1ed3ng nh\u01b0 tr\u00ean v\u1eabn c\u00f3 th\u1ec3 t\u0103ng lu\u1ed3ng th\u00eam n\u1eefa. V\u1eady m\u1ed9t c\u00e2u h\u1ecfi l\u00e0 ta s\u1ebd t\u0103ng lu\u1ed3ng nh\u01b0 th\u1ebf n\u00e0o? h\u00e3y nh\u00ecn v\u00e0o m\u1ea1ng th\u1eb7ng d\u01b0 3.b c\u1ee7a \u0111\u1ed3 th\u1ecb 3.a d\u01b0\u1edbi \u0111\u00e2y, trong h\u00ecnh d\u01b0\u1edbi m\u1ed1i c\u1ea1nh c\u1ee7a \\(G'\\) s\u1ebd \u0111\u01b0\u1ee3c g\u00e1n nh\u00e3n b\u1eb1ng \\(c'[u,v] - f'[u,v]\\)</p> <p>/uploads/max_flow_3b.jpg</p> <p>Ta c\u00f3 th\u1ec3 th\u1ea5y t\u1eeb \\(s\\) \u0111\u1ebfn \\(t\\) t\u1ed3n t\u1ea1i m\u1ed9t \u0111\u01b0\u1eddng \u0111i \u0111\u01a1n (\u0111\u01b0\u1eddng t\u0103ng lu\u1ed3n): s_A_C_B_D_E_t, ta s\u1ebd s\u1eed d\u1ee5ng \u0111\u01b0\u1eddng \u0111i n\u00e0y \u0111\u1ec3 t\u0103ng c\u00e1c gi\u00e1 tr\u1ecb tr\u00ean \u0111\u01b0\u1eddng \u0111i n\u00e0y m\u1ed9t l\u01b0\u1ee3ng b\u1eb1ng s\u1ee9c ch\u1ee9a nh\u1ecf nh\u1ea5t (s\u1ee9c ch\u1ee9a c\u1ee7a C_B nh\u1ecf nh\u1ea5t v\u00e0 b\u1eb1ng 1), h\u00ecnh 1.b d\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ea1ng th\u1eb7ng d\u01b0 t\u01b0\u01a1ng \u1ee9ng c\u1ee7a 3.a sau khi \u0111\u01b0\u1ee3c t\u0103ng lu\u1ed3ng</p> <p>/uploads/max_flow_1b.jpg</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#34-thuat-toan-fordfulkerson","title":"3.4 Thu\u1eadt to\u00e1n Ford\u2013Fulkerson","text":"<p>T\u1eeb v\u00ed d\u1ee5 tr\u00ean ta c\u00f3 th\u1ec3 \u0111i \u0111\u1ebfn thu\u1eadt to\u00e1n nh\u01b0 sau:</p> <p>\\(b\u01b0\u1edbc (1)\\): T\u1ea1o m\u1ea1ng th\u1eb7ng d\u01b0 \\(G'\\) t\u01b0\u01a1ng \u1ee9ng cho m\u1ea1ng \\(G\\) ban \u0111\u1ea7u</p> <p>\\(b\u01b0\u1edbc (2)\\): t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng tr\u00ean m\u1ea1ng th\u1eb7ng d\u01b0 \\(G'\\)</p> <ul> <li> <p>n\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \\(\\rightarrow\\) k\u1ebft th\u00fac thu\u1eadt to\u00e1n</p> </li> <li> <p>n\u1ebfu t\u1ed3n m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \\(\\rightarrow\\) th\u1ef1c hi\u1ec7n t\u0103ng lu\u1ed3ng tr\u00ean m\u1ea1ng th\u1eb7ng d\u01b0 v\u00e0 quay tr\u1edf l\u1ea1i \\(b\u01b0\u1edbc (2)\\) Khi thu\u1eadt to\u00e1n k\u1ebft th\u00fac \\(f(s,V')\\) ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb lu\u1ed3ng c\u1ef1c \u0111\u1ea1i c\u1ea7n t\u00ecm.</p> </li> </ul> <p>\u0110\u1ebfn \u0111\u00e2y b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 d\u00f9ng thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm tr\u00ean \u0111\u1ed3 th\u1ecb DFS (deep first search) ho\u1eb7c BFS(breath first search) \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng v\u00e0 c\u1eadp nh\u1eadt m\u1ea1ng th\u1eb7ng d\u01b0 thu\u1eadt to\u00e1n n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p b\u1eb1ng s\u1ed1 l\u1ea7n t\u0103ng lu\u1ed3ng (\\(f^{\\*}\\)) nh\u00e2n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a th\u1eadt to\u00e1n t\u00ecm ki\u1ebfm \u0111\u1ed3 th\u1ecb-\\(O(E)\\) v\u00e0 b\u1eb1ng \\(O(\\|f^{\\*}\\|.E)\\). Sau \u0111\u00e2u l\u00e0 code c\u1ee7a thu\u1eadt to\u00e1n tr\u00ean:</p> <p>L\u01b0u \u00fd: Trong c\u00e1c thu\u1eadt to\u00e1n d\u01b0\u1edbi \u0111\u00e2y ta s\u1ebd g\u1ecdi trace[u] l\u00e0 \u0111i\u1ec3n \u0111i \u0111\u1ebfn \u0111\u01b0\u1ee3c u trong \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng, n\u1ebfu kh\u00f4ng c\u00f3 \u0111\u1ec9nh n\u00e0o \u0111\u1ebfn \u0111\u01b0\u1ee3c u trace[u] s\u1ebd c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(-1\\)</p> <pre><code>def dfs(int u, sink):\n    # \u0111\u00e1nh d\u1ea5u u \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m\n    visited[u] = True\n\n    # duy\u1ec7t h\u1ebft c\u00e1c \u0111\u1ec9nh v c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb u hay th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c[u][v] - f[u][v] &gt; 0\n    for( v in VertecesCanComeFromU ):\n        if not visited[v]:\n            trace[v] = u\n\ndef find_augment_from_to(int source, int sink):\n    \"\"\"\n        brief: h\u00e0m n\u00e0y s\u1ebd t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng t\u1eeb source \u0111\u1ebfn sink\n        return: \n            - N\u1ebfu c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng tr\u1ea3 v\u1ec1 True\n            - N\u1ebfu kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u00e0o tr\u1ea3 v\u1ec1 False\n    \"\"\"\n    # kh\u1edfi t\u1ea1o m\u1ea3ng \u0111\u00e1nh d\u1ea5u visited ( false n\u1ebfu ch\u01b0a th\u0103m, true n\u1ebfu \u0111\u00e3 th\u0103m)\n    fill(all(visited), False)\n    # d\u00f9ng thu\u1eadt to\u00e1n dfs t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng\n    dfs(source, sink)\n    return visited[sink]\n\ndef increase_flow(int minCapacity, int source, int sink)\n    \"\"\"\n        brief: th\u1ee7 t\u1ee5c t\u0103ng lu\u1ed3ng l\u00ean m\u1ed9t gi\u00e1 tr\u1ecb minCapacity theo \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng t\u1eeb source \u0111\u00ean sink\n    \"\"\"\n    # kh\u1edfi t\u1ea1o minCapacity v\u00f4 c\u00f9ng l\u1edbn\n    minCapacity = inf\n\n    # l\u1ea5y kh\u1ea3 n\u0103ng th\u00f4ng qua nh\u1ecf nh\u1ea5t tr\u00ean \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \u0111\u1ec3 t\u0103ng lu\u1ed3ng\n    u = sink\n    while u != source:\n        previousVertex = trace[u]\n        minCapacity = min(minCapacity, c[previousVertex][u]-f[previousVertex][u])\n        u = previousVertex\n\n    # t\u0103ng lu\u1ed3ng\n    while sink != source:\n        previousVertex = trace[sink]\n        f[previousVertex][sink] += minCapacity\n        f[sink][previousVertex] -= minCapacity\n        sink = previousVertex\n\n## Trong khi v\u1eabn t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng\nwhile find_augment_from_to(s,t):\n    # t\u0103ng lu\u1ed3ng\n    increase_flow(s, t)\n</code></pre> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 thu\u1eadt to\u00e1n v\u00e0 c\u00e1ch ch\u1ee9ng minh b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc ti\u1ebfp c\u00e1c ph\u1ea7n sau:</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#35-tinh-ung-dan","title":"3.5 t\u00ednh \u0111\u00fang d\u1eafn","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 ch\u1ee9ng minh \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n tr\u01b0\u1edbc h\u1ebft ta c\u1ea7n bi\u1ebft 2 kh\u00e1i ni\u1ec7m l\u00e1t c\u1eaft \\(s-t\\) v\u00e0 l\u00e1t c\u1eaft \\(s-t\\) h\u1eb9p nh\u1ea5t tr\u00ean m\u1ea1ng th\u1eb7ng d\u01b0 G'</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#351-lat-cat-s-t","title":"3.5.1 L\u00e1t c\u1eaft \\(s-t\\)","text":"<p>L\u00e1t c\u1eaft l\u00e0 m\u1ed9t c\u00e1c ph\u00e2n ho\u1ea1ch t\u1eadp c\u00e1c \u0111\u1ec9nh \\(V'\\) trong m\u1ea1ng th\u1eb7ng d\u01b0 \\(G'\\) th\u00e0nh 2 t\u1eadp \\(X\\) v\u00e0 \\(Y\\) th\u1ecfa m\u00e3n \u0111\u1ec9nh ph\u00e1t \\(s\\) thu\u1ed9c \\(X\\) v\u00e0 \u0111\u1ec9nh thu \\(t\\) thu\u1ed9c \\(Y\\). Ta c\u00f3 gi\u00e1 tr\u1ecb lu\u1ed3ng c\u1ee7a l\u00e1t c\u1eaft l\u00e0 \\(f(X, Y)\\) v\u00e0 \\(c(X, Y)\\) (trong \u0111\u00f3 \\(f(X,Y)=\\sum_{u \\in X}\\sum_{v \\in Y} f'[u,v]\\) v\u00e0 \\(c(X,Y)=\\sum_{u \\in X}\\sum_{v \\in Y} c'[u,v]\\)) ta c\u00f3 th\u1ec3 ch\u1ee9ng m\u00ecnh \u0111\u01b0\u1ee3c 2 \u0111i\u1ec1u sau:</p> <ul> <li> <p>\\(f(X, Y) \\le c(X, Y)\\)</p> </li> <li> <p>Gi\u00e1 tr\u1ecb lu\u1ed3ng \\(f(s,V') = f(X,Y)\\)</p> </li> </ul>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#352-lat-cat-s-t-hep-nhat","title":"3.5.2 L\u00e1t c\u1eaft s-t h\u1eb9p nh\u1ea5t","text":"<p>l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t l\u00e0 l\u00e1t c\u1eaft c\u00f3 f(X,Y) l\u00e0 nh\u1ecf nh\u1ea5t (hay f(X, Y) = c(X, Y)). T\u1eeb kh\u00e1i ni\u1ec7m l\u00e1t c\u1eaft v\u00e0 l\u00e1t c\u1eaft nh\u1ecf nh\u1ea5t ta c\u00f3 th\u1ec3 d\u1eabn \u0111\u1ebfn c\u00e1ch ch\u1ee9ng minh sau</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#353-chung-minh","title":"3.5.3 ch\u1ee9ng minh","text":"<p>ta c\u00f3 th\u1ec3 ch\u1ee9ng minh 3 nh\u1eadn \u0111\u1ecbnh sau l\u00e0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng:</p> <ul> <li> <p>\\((1)\\) \\(f^{*}\\) l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng</p> </li> <li> <p>\\((2)\\) M\u1ea1ng th\u1eb7ng d\u01b0 \\(G'\\) kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng</p> </li> <li> <p>\\((3\\)) t\u1ed3n t\u1ea1i l\u00e1t c\u1eaft \\(s-t\\) h\u1eb9p nh\u1ea5t tr\u00ean \\(G'\\)</p> </li> </ul> <p>Ch\u1ee9ng minh:</p> <ul> <li>\\((1) \\rightarrow (2)\\): v\u00ec n\u1ebfu t\u1ed3n t\u1ea1i \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng th\u00ec ta c\u00f3 th\u1ec3 t\u0103ng lu\u1ed3ng \u0111\u1ec3 \u0111\u01b0\u1ee3c m\u1ed9t lu\u1ed3ng m\u1edbi l\u1edbn h\u01a1n \\(\\rightarrow\\) tr\u00e1i v\u1edbi \\((1)\\)</li> <li> <p>\\((2) \\rightarrow (3)\\): n\u1ebfu gi\u1ea3 s\u1eed kh\u00f4ng t\u1ed3n t\u1ea1i l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \\(\\rightarrow\\) \\((2)\\) sai (ph\u1ea7n n\u00e0y c\u00f3 th\u1ec3 coi nh\u01b0 m\u1ed9t b\u00e0i t\u1eadp cho b\u1ea1n \u0111\u1ecdc)</p> </li> <li> <p>\\((3) \\rightarrow (1)\\): Ta c\u00f3 th\u1ec3 th\u1ea5y \\(f(s,V') = f(X, Y) \\le c(X, Y)\\), do \u0111\u00f3 \\(f(s,V')\\) l\u00e0 lu\u1ed3ng c\u1ef1c \u0111\u1ea1i v\u00ec n\u1ebfu t\u1ed3n t\u1ea1i m\u1ed9t lu\u1ed3ng \\(f^{\\*} &gt; f(s,V')\\) s\u1ebd v\u00f4 l\u00fd v\u1edbi nh\u1eadn x\u00e9t trong m\u1ee5c l\u00e1t c\u1eaft \\(s-t\\) 3.5.1 .</p> </li> </ul>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#36-cac-thuat-toan-tim-uong-tang-luong","title":"3.6 C\u00e1c thu\u1eadt to\u00e1n t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng","text":"<p>Nh\u01b0 \u0111\u00e3 n\u00f3i \\(O(\\|f^{\\*}\\|.E)\\) l\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Ford-Fulkerson n\u00f3 ph\u1ee5 thu\u1ed9c 2 y\u1ebfu t\u1ed1 l\u00e0 t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \\(O(E)\\) v\u00e0 s\u1ed1 l\u1ea7n t\u0103ng lu\u1ed3ng \\(f^{\\*}\\) do \u0111\u00f3 ta c\u00f3 th\u1ec3 t\u1ed1i \u01b0u 1 trong 2 ho\u1eb7c c\u1ea3 2 n\u1ebfu mu\u1ed1n thu\u1eadt to\u00e1n ch\u1ea1y nhanh h\u01a1n. Trong m\u1ee5c n\u00e0y ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1ch \u0111\u1ec3 c\u00f3 th\u1ec3 gi\u1ea3m \u0111\u01b0\u1ee3c s\u1ed1 l\u1ea7n t\u0103ng lu\u1ed3ng \\(f^{\\*}\\) \u0111i\u1ec1u n\u00e0y ph\u1ee5 thu\u1ed9c nhi\u1ec1u v\u00e0o vi\u1ec7c ch\u1ecdn \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u00e0o \u0111\u1ec3 t\u0103ng, c\u00e1c ph\u01b0\u01a1ng ph\u00e1p d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(\\|f^{\\*}\\|.E)\\) nh\u01b0ng \u0111a s\u1ed1 c\u00e1c tr\u01b0\u1eddng h\u1ee3p s\u1ebd c\u00f3 \u0111\u1ed9 t\u1ed1t t\u0103ng d\u1ea7n theo th\u1ee9 t\u1ef1 tr\u00ecnh b\u00e0y sau:</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#361-su-dung-thuat-toan-thuat-toan-tim-kiem-theo-chieu-saudeep-first-search-dfs","title":"3.6.1 S\u1eed d\u1ee5ng thu\u1eadt to\u00e1n thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u(Deep First Search-DFS)","text":"<p>Thu\u1eadt to\u00e1n n\u00e0y c\u00f3 \u01b0u \u0111i\u1ec3m l\u00e0 d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t nh\u01b0ng th\u00f4ng th\u01b0\u1eddng s\u1ed1 l\u1ea7n t\u0103ng lu\u1ed3ng l\u00e0 kh\u00e1 l\u1edbn. Code \u0111\u00e3 \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y \u1edf cu\u1ed1i m\u1ee5c 3.4. M\u1eb7c d\u00f9 c\u00e0i \u0111\u1eb7t c\u00f3 \u0111\u01a1n gi\u1ea3n nh\u01b0ng s\u1ebd c\u00f3 th\u1eddi gian ch\u1ea1y th\u1ef1c t\u1ebf l\u1edbn h\u01a1n thu\u1eadt to\u00e1n BFS d\u01b0\u1edbi \u0111\u00e2y.</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#362-su-dung-thuat-toan-tim-kiem-theo-chieu-rongbreadth-first-search-bfs","title":"3.6.2 S\u1eed d\u1ee5ng thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm theo chi\u1ec1u r\u1ed9ng(Breadth First Search-BFS)","text":"<p>m\u1eb7c d\u00f9 d\u00f9ng bfs \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng m\u1edf c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00fd thuy\u1ebft b\u1eb1ng v\u1edbi khi t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng b\u1eb1ng dfs nh\u01b0ng thu\u1eadt to\u00e1n n\u00e0y trong th\u1ef1c t\u1ebf l\u1ea1i nhanh h\u01a1n nhi\u1ec1u \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00fd thuy\u1ebft.</p> <pre><code>def bfs(int source, int sink):\n    # kh\u1edfi t\u1ea1o m\u1ea3ng \u0111\u00e1nh d\u1ea5u visited ( false n\u1ebfu ch\u01b0a th\u0103m, true n\u1ebfu \u0111\u00e3 th\u0103m)\n    fill(all(visited), False)\n\n    # \u0111\u1ea9y source v\u00e0o queue\n    queue.push(source)\n    # \u0111\u00e1nh d\u1ea5u source\n    visited[source] = True\n\n    while queue.not_empty():\n        u = queue.pop()\n\n        # duy\u1ec7t h\u1ebft c\u00e1c \u0111\u1ec9nh v c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb u hay th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c[u][v] - f[u][v] &gt; 0\n        for( v in VertecesCanComeFromU ):\n            if !visited[v]:\n                queue.push(v)\n                visited[v] = True\n                trace[v] = u\n\ndef find_augment_from_to(int source, int sink):\n    \"\"\"\n        brief: h\u00e0m n\u00e0y s\u1ebd t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng t\u1eeb source \u0111\u1ebfn sink\n        return: \n            - N\u1ebfu c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng tr\u1ea3 v\u1ec1 True\n            - N\u1ebfu kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u00e0o tr\u1ea3 v\u1ec1 False\n    \"\"\"\n    # D\u00f9ng thu\u1eadt to\u00e1n bfs t\u00ecm \u0111\u01b0\u1eddng t\u1eb1ng lu\u1ed3ng t\u1eeb source \u0111\u1ebfn sink\n    bfs(source, sink)\n\n    return visited[sink]\n</code></pre>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#363-su-dung-thuat-toan-tim-kiem-uu-tienpriority-first-search-pfs","title":"3.6.3 S\u1eed d\u1ee5ng thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm \u01b0u ti\u00ean(Priority First Search-PFS)","text":"<p>Thu\u1eadt to\u00e1n n\u00e0y t\u00ecm ra \u0111\u01b0\u1eddng m\u1edf c\u00f3 th\u1ec3 t\u0103ng lu\u1ed3ng l\u1edbn nh\u1ea5t trong t\u1ea5t c\u1ea3 c\u00e1c \u0111\u01b0\u1eddng m\u1edf v\u00e0 kh\u00e1 gi\u1ed1ng v\u1edbi thu\u1eadt to\u00e1n Dijkstra t\u00ecm \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t v\u00ec c\u00f9ng s\u1eed d\u1ee5ng h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean priority_queue, n\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(E * logU\\) v\u1edbi U l\u00e0 kh\u1ea3 n\u0103ng th\u00f4ng qua l\u1edbn nh\u1ea5t v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a h\u00e0ng \u0111\u1ee3i \u01b0u ti\u00ean (priority_queue) l\u00e0 \\(E*logE\\) nh\u01b0ng c\u0169ng nh\u01b0 khi d\u00f9ng bfs \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1eddng m\u1edf pfs c\u0169ng ch\u1ea1y nhanh h\u01a1n l\u00fd thuy\u1ebft r\u1ea5t nhi\u1ec1u</p> <pre><code>def pfs(int source, int sink):\n    # kh\u1edfi t\u1ea1o m\u1ea3ng \u0111\u00e1nh d\u1ea5u visited ( false n\u1ebfu ch\u01b0a th\u0103m, true n\u1ebfu \u0111\u00e3 th\u0103m)\n    fill(all(visited), False)\n    # \n    fill(all(minCapacity), 0)\n\n    # \u0111\u1ea9y source v\u00e0o priority_queue pq v\u1edbi gi\u00e1 tr\u1ecb lu\u1ed3ng c\u1ef1c \u0111\u1ea1i l\u00e0 v\u00f4 c\u00f9ng l\u1edbn\n    pq.push([source, inf])\n\n    while queue.not_empty():\n        uAndMinCapacity = queue.pop()\n        minC = uAndMinCapacity[1]\n        u = uAndCapacity[0]\n\n        visited[u] = True\n\n        # duy\u1ec7t h\u1ebft c\u00e1c \u0111\u1ec9nh v c\u00f3 th\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c t\u1eeb u hay th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c[u][v] - f[u][v] &gt; 0\n        for( v in VertecesCanComeFromU ):\n            if !visited[v] &amp;&amp; min(minC, c[u][v]-f[u][v]) &gt; minCapacity[v]:\n                minCapacity[v] = c[u][v]-f[u][v]\n                queue.push([v, minCapacity[v]])\n                trace[v] = u\n\ndef find_augment_from_to(int source, int sink):\n    \"\"\"\n        brief: h\u00e0m n\u00e0y s\u1ebd t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng t\u1eeb source \u0111\u1ebfn sink\n        return: \n            - N\u1ebfu c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng tr\u1ea3 v\u1ec1 True\n            - N\u1ebfu kh\u00f4ng c\u00f3 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u00e0o tr\u1ea3 v\u1ec1 False\n    \"\"\"\n    # D\u00f9ng thu\u1eadt to\u00e1n bfs t\u00ecm \u0111\u01b0\u1eddng t\u1eb1ng lu\u1ed3ng t\u1eeb source \u0111\u1ebfn sink\n    pfs(source, sink)\n\n    return visited[sink]\n</code></pre>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#4-bai-toan-lien-quan","title":"4. B\u00e0i to\u00e1n li\u00ean quan","text":""},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#mang-voi-nhieu-iem-phat-va-nhieu-iem-thu","title":"M\u1ea1ng v\u1edbi nhi\u1ec1u \u0111i\u1ec3m ph\u00e1t v\u00e0 nhi\u1ec1u \u0111i\u1ec3m thu","text":"<p>Cho m\u1ed9t m\u1ea1ng g\u1ed3m \\(n\\) \u0111\u1ec9nh v\u1edbi \\(p\\) \u0111i\u1ec3m ph\u00e1t \\(A_{1}, A_{2},..,A_{p}\\) v\u00e0 q \u0111i\u1ec3m thu \\(B_{1}, B_{2},...,B_{p}\\). M\u1ed7i cung c\u1ee7a m\u1ea1ng \u0111\u01b0\u1ee3c g\u00e1n kh\u1ea3 n\u0103ng th\u00f4ng qua l\u00e0 s\u1ed1 nguy\u00ean. C\u00e1c \u0111\u1ec9nh ph\u00e1t ch\u1ec9 c\u00f3 cung \u0111i ra v\u00e0 c\u00e1c \u0111\u1ec9nh thu ch\u1ec9 c\u00f3 cung \u0111i v\u00e0o. M\u1ed9t lu\u1ed3ng tr\u00ean m\u1ea1ng n\u00e0y l\u00e0 m\u1ed9t ph\u00e9p g\u00e1n cho m\u1ed7i cung m\u1ed9t s\u1ed1 th\u1ef1c g\u1ecdi l\u00e0 lu\u1ed3ng tr\u00ean cung \u0111\u00f3 kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 kh\u1ea3 n\u0103ng th\u00f4ng qua v\u00e0 tho\u1ea3 m\u00e3n v\u1edbi m\u1ed7i \u0111\u1ec9nh kh\u00f4ng ph\u1ea3i \u0111\u1ec9nh ph\u00e1t hay \u0111\u1ec9nh thu th\u00ec t\u1ed5ng lu\u1ed3ng \u0111i v\u00e0o b\u1eb1ng t\u1ed5ng lu\u1ed3ng \u0111i ra. Gi\u00e1 tr\u1ecb lu\u1ed3ng b\u1eb1ng t\u1ed5ng lu\u1ed3ng \u0111i ra t\u1eeb c\u00e1c \u0111\u1ec9nh ph\u00e1t = t\u1ed5ng lu\u1ed3ng \u0111i v\u00e0o c\u00e1c \u0111\u1ec9nh thu. H\u00e3y t\u00ecm lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng.</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#cap-ghep-cuc-ai-tren-o-thi-2-phia","title":"C\u1eb7p gh\u00e9p c\u1ef1c \u0111\u1ea1i tr\u00ean \u0111\u1ed3 th\u1ecb 2 ph\u00eda","text":"<p>M\u1ed9t l\u1edbp h\u1ecdc khi\u00eau v\u0169 c\u00f3 N b\u1ea1n nam \\(B_{1},B_{2},...,B_{N}\\) v\u00e0 M b\u1ea1n n\u1eef \\(G_{1},G_{2},...,G_{M}\\) \u1edf bu\u1ed5i h\u1ecdc \u0111\u1ea7u ti\u00ean c\u00e1c b\u1ea1n nam \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u m\u1eddi m\u1ed9t b\u1ea1n n\u1eef l\u00e0m b\u1ea1n nh\u1ea3y c\u00f9ng trong c\u1ea3 kh\u00f3a h\u1ecdc theo kh\u1ea3o s\u00e1t ch\u00fang ta bi\u1ebft \u0111\u01b0\u1ee3c b\u1ea3ng gi\u00e1 tr\u1ecb like[i][j], like[i][j]=True n\u1ebfu b\u1ea1n n\u1eef Gj ch\u1ea5p nh\u1eadn l\u1eddi \u0111\u1ec1 ngh\u1ecb t\u1eeb b\u1ea1n nam Bi v\u00e0 like[i][j]=False ng\u01b0\u1ee3c l\u1ea1i n\u1ebfu b\u1ea1n g\u00e1i Gj kh\u00f4ng ch\u1ea5p nh\u1eadn l\u1eddi m\u1eddi t\u1eeb b\u1ea1n nam Bi. B\u1ea1n h\u00e3y x\u00e1c \u0111\u1ecbnh s\u1ed1 c\u1eb7p nh\u1ea3y nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3 c\u1ee7a l\u1edbp h\u1ecdc.</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#tap-ai-dien","title":"T\u1eadp \u0111\u1ea1i di\u1ec7n","text":"<p>M\u1ed9t l\u1edbp h\u1ecdc c\u00f3 n b\u1ea1n nam, n b\u1ea1n n\u1eef. Cho m m\u00f3n qu\u00e0 l\u01b0u ni\u1ec7m, (n \u2264 m). M\u1ed7i b\u1ea1n c\u00f3 s\u1edf th\u00edch v\u1ec1 m\u1ed9t s\u1ed1 m\u00f3n qu\u00e0 n\u00e0o \u0111\u00f3. H\u00e3y t\u00ecm c\u00e1ch ph\u00e2n cho m\u1ed7i b\u1ea1n nam t\u1eb7ng m\u1ed9t m\u00f3n qu\u00e0 cho m\u1ed9t b\u1ea1n n\u1eef tho\u1ea3 m\u00e3n:</p> <ul> <li> <p>M\u1ed7i b\u1ea1n nam ch\u1ec9 t\u1eb7ng qu\u00e0 cho \u0111\u00fang m\u1ed9t b\u1ea1n n\u1eef</p> </li> <li> <p>M\u1ed7i b\u1ea1n n\u1eef ch\u1ec9 nh\u1eadn qu\u00e0 c\u1ee7a \u0111\u00fang m\u1ed9t b\u1ea1n nam</p> </li> <li> <p>B\u1ea1n nam n\u00e0o c\u0169ng \u0111i t\u1eb7ng qu\u00e0 v\u00e0 b\u1ea1n n\u1eef n\u00e0o c\u0169ng \u0111\u01b0\u1ee3c nh\u1eadn qu\u00e0, m\u00f3n qu\u00e0 \u0111\u00f3 ph\u1ea3i h\u1ee3p s\u1edf th\u00edch c\u1ee7a c\u1ea3 hai ng\u01b0\u1eddi.</p> </li> <li> <p>M\u00f3n qu\u00e0 n\u00e0o \u0111\u00e3 \u0111\u01b0\u1ee3c m\u1ed9t b\u1ea1n nam ch\u1ecdn th\u00ec b\u1ea1n nam kh\u00e1c kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ecdn n\u1eefa</p> </li> </ul>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#mang-voi-kha-nang-thong-qua-cua-cac-inh-va-cac-canh","title":"M\u1ea1ng v\u1edbi kh\u1ea3 n\u0103ng th\u00f4ng qua c\u1ee7a c\u00e1c \u0111\u1ec9nh v\u00e0 c\u00e1c c\u1ea1nh","text":"<p>Cho m\u1ed9t m\u1ea1ng v\u1edbi \u0111\u1ec9nh ph\u00e1t A v\u00e0 \u0111\u1ec9nh thu B. M\u1ed7i cung (u, v) \u0111\u01b0\u1ee3c g\u00e1n kh\u1ea3 n\u0103ng th\u00f4ng qua c[u, v]. M\u1ed7i \u0111\u1ec9nh v kh\u00e1c v\u1edbi A v\u00e0 B \u0111\u01b0\u1ee3c g\u00e1n kh\u1ea3 n\u0103ng th\u00f4ng qua d[v]. M\u1ed9t lu\u1ed3ng tr\u00ean m\u1ea1ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 tr\u01b0\u1edbc v\u00e0 th\u00eam \u0111i\u1ec1u ki\u1ec7n:</p> <ul> <li>t\u1ed5ng lu\u1ed3ng \u0111i v\u00e0o \u0111\u1ec9nh v kh\u00f4ng \u0111\u01b0\u1ee3c v\u01b0\u1ee3t qu\u00e1 kh\u1ea3 n\u0103ng th\u00f4ng qua d[v] c\u1ee7a \u0111\u1ec9nh \u0111\u00f3.</li> </ul> <p>H\u00e3y t\u00ecm lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng.</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#lat-cat-hep-nhat","title":"L\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t:","text":"<p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb li\u00ean th\u00f4ng g\u1ed3m n \u0111\u1ec9nh v\u00e0 m c\u1ea1nh, h\u00e3y t\u00ecm c\u00e1ch b\u1ecf \u0111i m\u1ed9t s\u1ed1 \u00edt nh\u1ea5t c\u00e1c c\u1ea1nh \u0111\u1ec3 l\u00e0m cho \u0111\u1ed3 th\u1ecb m\u1ea5t \u0111i t\u00ednh li\u00ean th\u00f4ng</p>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#5-mot-so-bai-e-luyen-tap","title":"5. M\u1ed9t s\u1ed1 b\u00e0i \u0111\u1ec3 luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOJ - NKFLOW</li> <li>SPOJ - FASTFLOW</li> <li>VNOJ - ASSIGN1</li> <li>VNOJ - KWAY</li> <li>VNOJ - STNODE</li> <li>codeforces - flows</li> </ul>"},{"location":"translate/topcoder/max-flow-1-luong-cuc-dai-tren-mang-1/#6-nguon-tham-khao","title":"6. Ngu\u1ed3n tham kh\u1ea3o","text":"<ul> <li> <p>L\u00fd thuy\u1ebft \u0111\u1ed3 th\u1ecb - DSAP Textbook c\u1ee7a th\u1ea7y L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc s\u01b0 ph\u1ea1m H\u00e0 N\u1ed9i</p> </li> <li> <p>Topcoder - maximum flow section 1</p> </li> </ul>"},{"location":"translate/wcipeg/Bao-l%E1%BB%93i/","title":"Gi\u1ea3i th\u00edch tr\u1ef1c quan v\u1ec1 bao l\u1ed3i tr\u00ean m\u1eb7t ph\u1eb3ng","text":"<p>Trong h\u00ecnh h\u1ecdc t\u00ednh to\u00e1n, bao l\u1ed3i c\u1ee7a m\u1ed9t t\u1eadp \u0111i\u1ec3m l\u00e0 t\u1eadp l\u1ed3i nh\u1ecf nh\u1ea5t (theo di\u1ec7n t\u00edch, th\u1ec3 t\u00edch, ...) m\u00e0 t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m \u0111\u1ec1u n\u1eb1m trong t\u1eadp \u0111\u00f3.</p> <ul> <li> <p>N\u1ebfu ta coi c\u00e1c \u0111i\u1ec3m trong m\u1ed9t t\u1eadp h\u1ee3p l\u00e0 c\u00e1c c\u00e1i \u0111inh \u0111\u00f3ng tr\u00ean m\u1ed9t t\u1ea5m g\u1ed7, bao l\u1ed3i c\u1ee7a t\u1eadp \u0111i\u1ec3m \u0111\u00f3 c\u00f3 vi\u1ec1n ngo\u00e0i t\u1ea1o b\u1edfi s\u1ee3i d\u00e2y chun m\u1eafc v\u00e0o c\u00e1c c\u00e1i \u0111inh sau khi b\u1ecb k\u00e9o c\u0103ng v\u1ec1 c\u00e1c ph\u00eda.</p> </li> <li> <p>N\u1ebfu ta coi c\u00e1c \u0111i\u1ec3m trong m\u1ed9t t\u1eadp h\u1ee3p l\u00e0 c\u00e1c con c\u1eebu tr\u00ean \u0111\u1ed3ng c\u1ecf, bao l\u1ed3i c\u1ee7a t\u1eadp \u0111i\u1ec3m \u0111\u00f3 c\u00f3 vi\u1ec1n ngo\u00e0i l\u00e0 h\u00e0ng r\u00e0o c\u00f3 \u0111\u1ed9 d\u00e0i nh\u1ecf nh\u1ea5t bao quanh t\u1ea5t c\u1ea3 c\u00e1c con c\u1eebu</p> </li> <li> <p>N\u1ebfu ta coi c\u00e1c \u0111i\u1ec3m trong m\u1ed9t t\u1eadp h\u1ee3p l\u00e0 c\u00e1c \u0111\u1ea7u m\u00fat c\u00f3 th\u1ec3 c\u1ee7a c\u00e1c h\u00e0ng r\u00e0o, bao l\u1ed3i c\u1ee7a t\u1eadp \u0111i\u1ec3m \u0111\u00f3 c\u00f3 vi\u1ec1n ngo\u00e0i l\u00e0 c\u00e1c h\u00e0ng r\u00e0o th\u1eb3ng c\u00f3 \u0111i\u1ec3m \u0111\u1ea7u v\u00e0 \u0111i\u1ec3m cu\u1ed1i thu\u1ed9c t\u1eadp \u0111i\u1ec3m \u0111\u00f3 v\u00e0 bao quanh di\u1ec7n t\u00edch l\u1edbn nh\u1ea5t.</p> </li> <li> <p>N\u1ebfu ta coi c\u00e1c \u0111i\u1ec3m trong m\u1ed9t t\u1eadp h\u1ee3p l\u00e0 c\u00e1c c\u00e1i c\u00e2y, chu vi c\u1ee7a bao l\u1ed3i l\u00e0 \u0111\u1ed9 d\u00e0i t\u1ed1i thi\u1ec3u c\u1ee7a d\u1ea3i ruy b\u0103ng bao quanh t\u1ea5t c\u1ea3 c\u00e1c c\u00e2y \u0111\u00f3.</p> </li> </ul>"},{"location":"translate/wcipeg/Bao-l%E1%BB%93i/#thuat-toan-tim-bao-loi-tren-mat-phang","title":"Thu\u1eadt to\u00e1n t\u00ecm bao l\u1ed3i tr\u00ean m\u1eb7t ph\u1eb3ng","text":"<p>B\u00e0i to\u00e1n t\u00ecm bao l\u1ed3i c\u1ee7a m\u1ed9t t\u1eadp \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng l\u00e0 m\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u nhi\u1ec1u nh\u1ea5t trong h\u00ecnh h\u1ecdc t\u00ednh to\u00e1n v\u00e0 c\u00f3 r\u1ea5t nhi\u1ec1u thu\u1eadt to\u00e1n \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y. Sau \u0111\u00e2y l\u00e0 ba thu\u1eadt to\u00e1n ph\u1ed5 bi\u1ebfn nh\u1ea5t, \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n v\u1ec1 \u0111\u1ed9 kh\u00f3.</p>"},{"location":"translate/wcipeg/Bao-l%E1%BB%93i/#thuat-toan-boc-goi","title":"Thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i","text":"<p>Thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i hay c\u00f2n g\u1ecdi l\u00e0 thu\u1eadt to\u00e1n Jarvis march l\u00e0 m\u1ed9t trong nh\u1eefng thu\u1eadt to\u00e1n t\u00ecm bao l\u1ed3i \u0111\u01a1n gi\u1ea3n v\u00e0 d\u1ec5 hi\u1ec3u nh\u1ea5t. T\u00ean thu\u1eadt to\u00e1n xu\u1ea5t ph\u00e1t t\u1eeb s\u1ef1 t\u01b0\u01a1ng t\u1ef1 c\u1ee7a thu\u1eadt to\u00e1n v\u1edbi vi\u1ec7c \u0111i b\u1ed9 xung quanh c\u00e1c \u0111i\u1ec3m v\u00e0 c\u1ea7m theo m\u1ed9t d\u1ea3i b\u0103ng g\u00f3i qu\u00e0.</p> <p>B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 ch\u1ecdn m\u1ed9t \u0111i\u1ec3m ch\u1eafc ch\u1eafn n\u1eb1m trong bao l\u1ed3i, v\u00ed d\u1ee5, \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 l\u1edbn nh\u1ea5t. B\u1eaft \u0111\u1ea7u t\u1eeb \u0111i\u1ec3m n\u00e0y, ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t \u0111i \u0111\u1ebfn c\u00e1c \u0111i\u1ec3m kh\u00e1c cho \u0111\u1ebfn khi quay tr\u1edf l\u1ea1i \u0111i\u1ec3m ta ch\u1ecdn l\u00fac \u0111\u1ea7u. Sau \u0111\u00f3, ta nh\u00ecn v\u1ec1 ph\u00eda b\u00ean ph\u1ea3i \u0111i\u1ec3m ta v\u1eeba ch\u1ecdn. T\u1ea1i m\u1ed7i th\u1eddi \u0111i\u1ec3m ta s\u1ebd l\u01b0u l\u1ea1i vi tr\u00ed \u0111i\u1ec3m \\(P\\) m\u00e0 ta \u0111ang ch\u1ecdn v\u00e0 vector \\(\\vec{v}\\) ch\u1ec9 h\u01b0\u1edbng ta \u0111ang nh\u00ecn. Ti\u1ebfp theo, thu\u1eadt to\u00e1n s\u1ebd l\u1eb7p l\u1ea1i li\u00ean t\u1ee5c c\u00e1c b\u01b0\u1edbc sau cho \u0111\u1ebfn khi t\u00ecm \u0111\u01b0\u1ee3c bao l\u1ed3i. Ta quay m\u1eb7t theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 cho \u0111\u1ebfn khi ta nh\u00ecn th\u1ea5y m\u1ed9t \u0111i\u1ec3m, g\u1ecdi \u0111i\u1ec3m \u0111\u00f3 l\u00e0 \\(Q\\). R\u1ed3i ta c\u1ea7m theo d\u1ea3i b\u0103ng v\u00e0 \u0111i \u0111\u1ebfn \u0111i\u1ec3m \\(Q\\). Khi ta \u0111\u1ebfn \u0111i\u1ec3m \u0111\u1ea5y, \\(\\vec{v}\\) tr\u1edf th\u00e0nh \\(\\vec{PQ}\\) v\u00e0 \\(P\\) tr\u1edf th\u00e0nh \\(Q\\). Khi thu\u1eadt to\u00e1n k\u1ebft th\u00fac, ta \u0111\u00e3 \u0111i \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u1ee7a bao l\u1ed3i theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3.</p> <p>\u0110\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111i\u1ec3m ta nh\u00ecn th\u1ea5y \u0111\u1ea7u ti\u00ean khi ta quay m\u1eb7t theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3, ta duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m \\(R\\) trong t\u1eadp, ngo\u1ea1i tr\u1eeb \u0111i\u1ec3m \\(P\\), v\u1edbi m\u1ed7i \u0111i\u1ec3m, ta x\u00e9t vector \\(\\vec{u}=\\vec{PR}\\). \\(\\vec{u}\\) t\u1ea1o v\u1edbi \\(\\vec{v}\\) m\u1ed9t g\u00f3c \\(\\theta\\) nh\u1ecf nh\u1ea5t s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi \u0111i\u1ec3m \\(Q\\) (d\u1ec5 d\u00e0ng ch\u1ee9ng minh \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y). \u0110\u1ec3 t\u00ecm \\(\\theta\\) nh\u1ecf nh\u1ea5t, ta t\u00ecm \\(\\cos{ \\theta }\\) l\u1edbn nh\u1ea5t, m\u00e0 ta l\u1ea1i d\u1ec5 d\u00e0ng t\u00ednh \u0111\u01b0\u1ee3c \\(\\cos{ \\theta }\\) b\u1eb1ng c\u00f4ng th\u1ee9c \\(\\frac{\\vec{u}.\\vec{v}}{\\|\\vec{u}\\|\\|\\vec{v}\\|}\\)</p> <p>V\u1edbi m\u1ed7i l\u1ea7n t\u00ecm \u0111i\u1ec3m ti\u1ebfp theo, ta c\u1ea7n duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m trong t\u1eadp, v\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a m\u1ed7i l\u1ea7n t\u00ecm \u0111i\u1ec3m l\u00e0 \\(O(n)\\) v\u1edbi \\(n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111i\u1ec3m trong t\u1eadp. S\u1ed1 l\u1ea7n t\u00ecm \u0111i\u1ec3m ti\u1ebfp theo ph\u1ee5 thu\u1ed9c v\u00e0o s\u1ed1 l\u01b0\u1ee3ng \u0111i\u1ec3m l\u00e0 \u0111\u1ec9nh c\u1ee7a bao l\u1ed3i, g\u1ecdi s\u1ed1 l\u01b0\u1ee3ng \u0111i\u1ec3m \u0111\u00f3 l\u00e0 \\(h\\), v\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u1ea3 thu\u1eadt to\u00e1n l\u00e0 \\(O(nh)\\). Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, \\(h=n\\) hay t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m trong d\u1eef li\u1ec7u v\u00e0o t\u1ea1o th\u00e0nh m\u1ed9t \u0111a gi\u00e1c l\u1ed3i, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(O(n^2)\\), kh\u00f4ng \u0111\u1ee7 nhanh khi \\(n &gt; 5000\\).</p>"},{"location":"translate/wcipeg/Bao-l%E1%BB%93i/#thuat-toan-graham","title":"Thu\u1eadt to\u00e1n Graham","text":"<p>Thu\u1eadt to\u00e1n Graham c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t nh\u1ecf h\u01a1n thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i, song thu\u1eadt to\u00e1n Graham l\u1ea1i ph\u1ee9c t\u1ea1p h\u01a1n. \u0110\u1ea7u ti\u00ean, m\u1ed9t \u0111i\u1ec3m (kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i c\u00f3 trong d\u1eef li\u1ec7u v\u00e0o) m\u00e0 ch\u1eafc ch\u1eafn thu\u1ed9c v\u00e0o bao \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh. T\u00ecm gi\u00e1 tr\u1ecb trung b\u00ecnh c\u1ee7a ho\u00e0nh \u0111\u1ed9 v\u00e0 tung \u0111\u1ed9 c\u00e1c \u0111i\u1ec3m trong d\u1eef li\u1ec7u l\u00e0 m\u1ed9t c\u00e1ch \u0111\u1ec3 t\u00ecm t\u1ecda \u0111\u1ed9 c\u1ee7a m\u1ed9t \u0111i\u1ec3m nh\u01b0 v\u1eady. Sau \u0111\u00f3 ta ch\u1ecdn h\u1ec7 tr\u1ee5c t\u1ecda \u0111\u1ed9 c\u00f3 g\u1ed1c l\u00e0 \u0111i\u1ec3m v\u1eeba ch\u1ecdn, sau \u0111\u00f3 \u0111\u1ed5i t\u1ecda \u0111\u1ed9 c\u00e1c \u0111i\u1ec3m c\u00f2n l\u1ea1i theo h\u1ec7 tr\u1ee5c t\u1ecda \u0111\u1ed9 m\u1edbi (trong th\u1ef1c t\u1ebf ta s\u1ebd kh\u00f4ng l\u00e0m nh\u01b0 v\u1eady). Ti\u1ebfp theo, ta s\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m \\(P\\) c\u00f2n l\u1ea1i theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a g\u00f3c t\u1ea1o b\u1edfi \\(\\vec{OP}\\) v\u00e0 \\(\\vec{OI}\\) v\u1edbi \\(I\\) l\u00e0 m\u1ed9t \u0111i\u1ec3m n\u1eb1m tr\u00ean tr\u1ee5c ho\u00e0nh v\u00e0 \\(\\vec{OI}\\) c\u00f9ng h\u01b0\u1edbng v\u1edbi chi\u1ec1u d\u01b0\u01a1ng c\u1ee7a tr\u1ee5c ho\u00e0nh. Do l\u00fac n\u00e0y ta kh\u00f4ng bi\u1ebft \u0111i\u1ec3m n\u00e0o s\u1ebd l\u00e0 \u0111\u1ec9nh c\u1ee7a bao l\u1ed3i n\u00ean ta \u0111\u1eb7t \\(h = 0\\). Ta x\u00e9t c\u00e1c \u0111i\u1ec3m theo th\u1ee9 t\u1ef1 ta v\u1eeba s\u1eafp x\u1ebfp, v\u1edbi m\u1ed7i \u0111i\u1ec3m ta s\u1eeda l\u1ea1i bao l\u1ed3i \\(H\\). G\u1ecdi \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c cho v\u00e0o bao l\u1ed3i \\(H\\) l\u00e0 \\(H_1\\), \u0111i\u1ec3m cu\u1ed1i c\u00f9ng l\u00e0 \\(H_h\\). Khi x\u00e9t m\u1ed7i \u0111i\u1ec3m ta l\u00e0m nh\u01b0 sau:</p> <ol> <li> <p>Th\u00eam \u0111i\u1ec3m \\(P\\) v\u00e0o cu\u1ed1i bao l\u1ed3i \\(H\\). T\u1ee9c l\u00e0 ta t\u0103ng \\(h\\) l\u00ean 1 v\u00e0 \u0111\u1eb7t \\(H_h = P\\).</p> </li> <li> <p>N\u1ebfu \\(h&lt;3\\), x\u00e9t ti\u1ebfp \u0111i\u1ec3m ti\u1ebfp theo.</p> </li> <li> <p>X\u00e9t 3 \u0111i\u1ec3m \\(H_h,H_{h-1}\\) v\u00e0 \\(H_{h-2}\\). C\u00f3 th\u1ec3 sau khi cho th\u00eam \u0111i\u1ec3m \\(H_h\\), ta bi\u1ebft \u0111\u01b0\u1ee3c \u0111i\u1ec3m \\(H_{h-1}\\) ch\u1eafc ch\u1eafn kh\u00f4ng n\u1eb1m trong bao. G\u1ecdi \\(\\vec{u}=\\overrightarrow{ H_{h-2} H_{h-1} }\\) v\u00e0 \\(\\vec{v}=\\overrightarrow{H_{h-1} H_h}\\). N\u1ebfu khi \u0111i theo h\u01b0\u1edbng \\(\\vec{v}\\) r\u1ed3i \u0111i theo h\u01b0\u1edbng \\(\\vec{u}\\) l\u00e0 ta \u0111\u00e3 b\u1ebb g\u00f3c ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3, hay \\(\\vec{u} \\times \\vec{v}&gt;0\\), th\u00ec c\u1ea3 ba \u0111i\u1ec3m \u0111\u1ec1u t\u1ea1m thu\u1ed9c bao, v\u00e0 ta x\u00e9t ti\u1ebfp \u0111i\u1ec3m ti\u1ebfp theo. Nh\u01b0ng n\u1ebfu \\(\\vec{u} \\times \\vec{v}&lt;0\\), th\u00ec g\u00f3c \\(\\widehat{H_{h-2} H_{h-1} H_{h} }\\) s\u1ebd t\u1ea1o ra \u0111a gi\u00e1c l\u00f5m v\u00e0 \u0111i\u1ec3m \\(H_{h-1}\\) ph\u1ea3i b\u1ecb lo\u1ea1i b\u1ecf, c\u00f3 ngh\u0129a l\u00e0 \\(H_{h-1}\\) \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00e0 \\(H_{h}\\) v\u00e0 \\(h\\) gi\u1ea3m \u0111i 1. Sau \u0111\u00f3 quay l\u1ea1i b\u01b0\u1edbc 2 cho \u0111\u1ebfn khi x\u00e9t h\u1ebft c\u00e1c \u0111i\u1ec3m.</p> </li> </ol> <p>\u0110\u1ebfn l\u00fac n\u00e0y ta \u0111\u00e3 c\u00f3 m\u1ed9t t\u1eadp \u0111i\u1ec3m \\(H_1, H_2,..., H_h\\) s\u1eafp x\u1ebfp ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3. V\u1ea5n \u0111\u1ec1 l\u00e0 ta ch\u01b0a ch\u1eafc \u0111i\u1ec3m \\(H_1\\) \u0111\u00e3 thu\u1ed9c bao hay kh\u00f4ng (ch\u00fa \u00fd r\u1eb1ng \u0111i\u1ec3m \\(H_1\\) kh\u00f4ng th\u1ec3 b\u1ecb lo\u1ea1i b\u1ecf trong c\u00e1c b\u01b0\u1edbc tr\u00ean). Ngo\u00e0i ra, v\u00ec bao l\u1ed3i l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng kh\u00e9p k\u00edn ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng g\u1ea5p kh\u00fac n\u00ean c\u0169ng c\u00f3 kh\u1ea3 n\u0103ng \u0111i\u1ec3m \\(H_h\\) kh\u00f4ng thu\u1ed9c bao (\u0111i\u1ec3m \\(H_h\\) c\u0169ng kh\u00f4ng th\u1ec3 b\u1ecb lo\u1ea1i b\u1ecf trong c\u00e1c b\u01b0\u1edbc tr\u00ean). C\u00e1ch m\u00e0 ch\u00fang ta lo\u1ea1i b\u1ecf \u0111i\u1ec3m kh\u00f4ng thu\u1ed9c bao l\u00e0 x\u00e9t 3 \u0111i\u1ec3m li\u00ean ti\u1ebfp trong bao, v\u00e0 ta c\u0169ng ph\u1ea3i l\u00e0m t\u01b0\u01a1ng t\u1ef1 v\u1edbi hai \u0111i\u1ec3m \\(H_1\\) v\u00e0 \\(H_h\\).</p> <ol> <li> <p>X\u00e9t 3 \u0111i\u1ec3m \\(H_2, H_1, H_h\\). G\u1ecdi \\(\\vec{u}=\\overrightarrow{H_h H_1}\\) v\u00e0 \\(\\vec{v}=\\overrightarrow{H_1 H_2}\\). N\u1ebfu \\(\\vec{u} \\times \\vec{v} &lt;0\\) th\u00ec \\(H_1\\) ph\u1ea3i b\u1ecb lo\u1ea1i kh\u1ecfi bao.</p> </li> <li> <p>X\u00e9t 3 \u0111i\u1ec3m \\(H_1, H_h, H_{h-1}\\). G\u1ecdi \\(\\vec{u}=\\overrightarrow{H_{h-1} H_h}\\) v\u00e0 \\(\\vec{v}=\\overrightarrow{H_h H_1}\\). N\u1ebfu \\(\\vec{u} \\times \\vec{v} &lt;0\\) th\u00ec \\(H_h\\) ph\u1ea3i b\u1ecb lo\u1ea1i kh\u1ecfi bao.</p> </li> <li> <p>N\u1ebfu kh\u00f4ng c\u00f3 \u0111i\u1ec3m n\u00e0o b\u1ecb lo\u1ea1i kh\u1ecfi bao, ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c bao l\u1ed3i th\u1eadt s\u1ef1 \\(H\\) v\u1edbi c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3, n\u1ebfu kh\u00f4ng th\u00ec ta quay l\u1ea1i b\u01b0\u1edbc 1.</p> </li> </ol> <p>\u0110\u1ec3 \u0111\u1ea3m b\u1ea3o ta c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf \u0111i\u1ec3m \\(H_1\\) v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(1)\\) (t\u1ee9c l\u00e0 \u0111i\u1ec3m \\(H_2\\) c\u0169 tr\u1edf th\u00e0nh \u0111i\u1ec3m \\(H_1\\) m\u1edbi,...), ta n\u00ean d\u00f9ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u h\u00e0ng \u0111\u1ee3i hai \u0111\u1ea7u (deque) ho\u1eb7c danh s\u00e1ch li\u00ean k\u1ebft (linked list).</p> <p>V\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n, ta th\u1ea5y b\u01b0\u1edbc s\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n \\log{n})\\). M\u1ed7i \u0111i\u1ec3m \u0111\u01b0\u1ee3c cho v\u00e0o bao nhi\u1ec1u nh\u1ea5t m\u1ed9t l\u1ea7n n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c b\u01b0\u1edbc th\u00eam \u0111i\u1ec3m l\u00e0 \\(O(n)\\), v\u00e0 m\u1ed7i \u0111i\u1ec3m b\u1ecb lo\u1ea1i ra kh\u1ecfi bao nhi\u1ec1u nh\u1ea5t m\u1ed9t l\u1ea7n n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c b\u01b0\u1edbc x\u00f3a \u0111i\u1ec3m l\u00e0 \\(O(n)\\), do \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a b\u01b0\u1edbc x\u00e9t c\u00e1c \u0111i\u1ec3m l\u00e0 \\(O(n)\\). V\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Graham l\u00e0 \\(O(n \\log{n})\\), ph\u00f9 h\u1ee3p cho h\u1ea7u h\u1ebft c\u00e1c b\u00e0i to\u00e1n. </p>"},{"location":"translate/wcipeg/Binary-Heap/","title":"Binary Heap","text":"<p>Bi\u00ean so\u1ea1n: \u0110\u1ed7 Vi\u1ec7t Anh (lion_it)</p> <p>Email: dovietanh.95@gmail.com</p> <p>Ngu\u1ed3n: wcipeg.com/wiki</p>"},{"location":"translate/wcipeg/Binary-Heap/#0-kien-thuc-can-biet-truoc","title":"0. Ki\u1ebfn th\u1ee9c c\u1ea7n bi\u1ebft tr\u01b0\u1edbc","text":"<p>\u0110\u1ec3 \u0111\u1ecdc v\u00e0 hi\u1ec3u \u0111\u01b0\u1ee3c b\u00e0i vi\u1ebft c\u00e1c b\u1ea1n c\u1ea7n c\u00f3 ki\u1ebfn th\u1ee9c v\u1ec1 c\u1ea5u tr\u00fac c\u00e2y (tree) v\u00e0 c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 (complete binary tree)</p>"},{"location":"translate/wcipeg/Binary-Heap/#1-gioi-thieu-chung","title":"1. Gi\u1edbi thi\u1ec7u chung","text":""},{"location":"translate/wcipeg/Binary-Heap/#10-tinh-chat","title":"1.0. T\u00ednh ch\u1ea5t","text":"<p>M\u1ed9t c\u1ea5u tr\u00fac Binary Heap th\u1ecfa m\u00e3n 2 \u0111i\u1ec1u ki\u1ec7n sau:</p> <ul> <li> <p>T\u00ednh ch\u1ea5t 1 - Binary (TC1): L\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 (complete binary tree)</p> </li> <li> <p>T\u00ednh ch\u1ea5t 2 - Heap (TC2) M\u1ed7i n\u00fat (node) tr\u00ean c\u00e2y \u0111\u1ec1u ch\u1ee9a m\u1ed9t nh\u00e3n l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng c\u00e1c con c\u1ee7a n\u00f3 (n\u1ebfu c\u00f3) v\u00e0 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng n\u00fat cha (tr\u1eeb n\u00fat g\u1ed1c l\u00e0 v\u00e0 n\u00f3 l\u00e0 n\u00fat l\u1edbn nh\u1ea5t).</p> </li> </ul> <p>M\u1ed9t c\u1ea5u tr\u00fac nh\u01b0 tr\u00ean \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 max binary heap v\u00ec nh\u00e3n \u1edf g\u1ed1c (root), t\u01b0\u01a1ng t\u1ef1 ta c\u00f3 th\u1ec3 thay \u0111\u1ed5i TC 2 \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c min binary heap v\u1edbi nh\u00e3n \u1edf g\u1ed1c l\u00e0 nh\u1ecf nh\u1ea5t trong c\u00e2y.</p>"},{"location":"translate/wcipeg/Binary-Heap/#11-ung-dung","title":"1.1. \u1ee8ng d\u1ee5ng","text":"<p>Binary Heap \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t priority queue (trong C++, java...) hay d\u00f9ng \u0111\u1ec3 t\u0103ng t\u1ed1c c\u00e1c thu\u1eadt to\u00e1n nh\u01b0 Dijkstra, Prim..</p>"},{"location":"translate/wcipeg/Binary-Heap/#12-cai-at","title":"1.2. C\u00e0i \u0111\u1eb7t","text":"<ul> <li>Trong C++, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng CTDL <code>priority_queue</code> ho\u1eb7c <code>set</code>, v\u00ec v\u1eady vi\u1ec7c t\u1ef1 c\u00e0i \u0111\u1eb7t l\u1ea1i l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft.</li> <li>V\u1edbi Pascal, b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u c\u00e1ch c\u00e0i \u0111\u1eb7t trong quy\u1ec3n s\u00e1ch c\u1ee7a th\u1ea7y L\u00ea Minh Ho\u00e0ng</li> </ul>"},{"location":"translate/wcipeg/Binary-Heap/#2-cac-thao-tac-tren-binary-heap","title":"2. C\u00e1c thao t\u00e1c tr\u00ean Binary Heap","text":""},{"location":"translate/wcipeg/Binary-Heap/#20-cac-thao-tac-thuong-dung-voi-binary-heap-la","title":"2.0. C\u00e1c thao t\u00e1c th\u01b0\u1eddng d\u00f9ng v\u1edbi Binary Heap l\u00e0","text":"<ul> <li>T\u00ecm nh\u00e3n l\u1edbn nh\u1ea5t tr\u00ean Binary Heap (n\u00fat g\u1ed1c)</li> <li>Th\u00eam m\u1ed9t n\u00fat v\u00e0o Binary Heap</li> <li>X\u00f3a b\u1ecf n\u00fat g\u1ed1c (root) hay nh\u00e3n l\u1edbn nh\u1ea5t tr\u00ean Binary Heap</li> <li>X\u00e2y d\u1ef1ng m\u1ed9t Binary Heap t\u1eeb m\u1ed9t t\u1eadp \\(N\\) ph\u1ea7n t\u1eed</li> </ul> <p>(C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 v\u00e0o visualgo \u0111\u1ec3 c\u00f3 th\u1ec3 h\u00ecnh dung c\u1ee5 th\u1ec3 v\u1ec1 c\u00e1c thao t\u00e1c tr\u00ean Heap)</p> <p>\u0110\u1eb7t \\(h\\) l\u00e0 \u0111\u1ed9 cao c\u1ee7a c\u00e2y. N\u00fat g\u1ed1c \u1edf \u0111\u1ed9 s\u00e2u 0, 2 n\u00fat con c\u1ee7a g\u1ed1c \u1edf \u0111\u1ed9 s\u00e2u 1, v\u00e0 n\u00fat s\u00e2u nh\u1ea5t c\u00f3 \u0111\u1ed9 s\u00e2u l\u00e0 \\(h\\). \u1ede \u0111\u1ed9 s\u00e2u \\(k\\), c\u00e2y c\u00f3 t\u1ed1i \u0111a \\(2^k\\) n\u00fat, do \u0111\u00f3 t\u1ed5ng s\u1ed1 n\u00fat tr\u00ean c\u00e2y \\(N \\le 2^{h+1}\\).</p>"},{"location":"translate/wcipeg/Binary-Heap/#21-tim-phan-tu-lon-nhat","title":"2.1. T\u00ecm ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t","text":"<ul> <li>R\u00f5 r\u00e0ng g\u1ed1c (root) lu\u00f4n ch\u1ee9a nh\u00e3n l\u1edbn nh\u1ea5t theo TC2 (c\u00e1c n\u00fat con lu\u00f4n kh\u00f4ng nh\u1ecf h\u01a1n n\u00fat cha) </li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n: \\(O(1)\\).<ul> <li>Th\u00f4ng th\u01b0\u1eddng thao t\u00e1c n\u00e0y s\u1ebd \u0111i k\u00e8m v\u1edbi thao t\u00e1c x\u00f3a n\u00fat g\u1ed1c \u0111\u1ec3 t\u00ecm nh\u00e3n ti\u1ebfp theo (nh\u01b0 khi sort). Thao t\u00e1c x\u00f3a s\u1ebd \u0111\u01b0\u1ee3c mi\u00eau t\u1ea3 \u1edf m\u1ee5c 2.3</li> </ul> </li> </ul>"},{"location":"translate/wcipeg/Binary-Heap/#22-them-mot-nut-node-tren-cay","title":"2.2. Th\u00eam m\u1ed9t n\u00fat (node) tr\u00ean c\u00e2y","text":"<ul> <li> <p>Ch\u1ecdn v\u1ecb tr\u00ed \u0111\u1ec3 th\u00eam n\u00fat:</p> <ul> <li>N\u1ebfu Binary Heap l\u00e0 r\u1ed7ng ta ch\u1ec9 c\u1ea7n cho n\u00fat c\u1ea7n th\u00eam l\u00e0m g\u1ed1c.</li> <li>N\u1ebfu Binary Heap kh\u00f4ng r\u1ed7ng th\u00eam n\u00f3 v\u00e0o v\u1ecb tr\u00ed ph\u1ea3i nh\u1ea5t \u1edf c\u1ee7a l\u1edbp \u0111\u00e1y, n\u1ebfu l\u1edbp \u0111\u00e1y \u0111\u00e3 \u0111\u1ee7 (s\u1ed1 ph\u1ea7n t\u1eed \u0111\u00fang b\u1eb1ng \\(2^h\\)) th\u00eam n\u00fat n\u00e0y v\u00e0o l\u1edbp m\u1edbi.</li> </ul> </li> <li> <p>Vun \u0111\u1ed1ng t\u1eeb d\u01b0\u1edbi l\u00ean (bottom-up heapify):</p> <ul> <li>Vi\u1ec7c th\u00eam nh\u01b0 tr\u00ean s\u1ebd \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c t\u00ednh ch\u1ea5t TC1 c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 (complete binary tree) nh\u01b0ng TC2 c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n.</li> <li>N\u1ebfu n\u00fat m\u1edbi n\u00e0y nh\u1ecf h\u01a1n n\u00fat cha c\u1ee7a n\u00f3 ta kh\u00f4ng c\u1ea7n ph\u1ea3i l\u00e0m g\u00ec th\u00eam n\u1eefa.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i n\u1ebfu ph\u1ea7n t\u1eed m\u1edbi l\u1edbn h\u01a1n n\u00fat cha ta \u0111\u1ed5i ch\u1ed7 2 n\u00fat cho nhau, so s\u00e1nh v\u1edbi n\u00fat cha m\u1edbi \u0111\u1ed5i ch\u1ed7 n\u1ebfu n\u00f3 l\u1edbn h\u01a1n n\u00fat cha c\u1ee9 th\u1ebf \u0111\u1ebfn khi n\u00f3 nh\u1ecf ho\u1eb7c b\u1eb1ng n\u00fat cha ho\u1eb7c n\u00f3 l\u00e0 g\u1ed1c (kh\u00f4ng c\u00f2n n\u00fat cha n\u00e0o n\u1eefa).</li> </ul> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p:</p> </li> <li>Qu\u00e1 tr\u00ecnh ch\u1ecdn v\u1ecb tr\u00ed cho n\u00fat ch\u1ec9 m\u1ea5t \\(O(1)\\)</li> <li>Qu\u00e1 tr\u00ecnh vun \u0111\u1ed1ng t\u1eeb d\u01b0\u1edbi l\u00ean (bottom-up heapify): ta c\u00f3 th\u1ec3 th\u1ea5y s\u1ed1 l\u1ea7n so s\u00e1nh v\u00e0 \u0111\u1ed5i ch\u1ed7 2 ph\u1ea7n t\u1eed kh\u00f4ng qu\u00e1 \u0111\u1ed9 s\u00e2u \\(h\\) c\u1ee7a c\u00e2y nh\u1ecb ph\u00e2n hay (\\(\\le log(N+1)\\) v\u1edbi \\(N\\) l\u00e0 s\u1ed1 n\u00fat hi\u1ec7n c\u00f3 tr\u00ean c\u00e2y). </li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u1ea3 qu\u00e1 tr\u00ecnh n\u00e0y l\u00e0 \\(O(logN)\\)</li> </ul>"},{"location":"translate/wcipeg/Binary-Heap/#23-xoa-nut-goc-khoi-cay","title":"2.3. X\u00f3a n\u00fat g\u1ed1c kh\u1ecfi c\u00e2y","text":"<ul> <li> <p>Ta ch\u1ec9 c\u00f3 th\u1ec3 x\u00f3a ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t hay g\u00f3c c\u1ee7a Binary Heap ra kh\u1ecfi c\u00e2y. </p> <ul> <li>N\u1ebfu c\u00e2y ch\u1ec9 c\u00f3 n\u00fat g\u1ed1c ta x\u00f3a n\u00f3 kh\u1ecfi c\u00e2y, n\u1ebfu kh\u00f4ng</li> <li>G\u00e1n nh\u00e3n n\u00fat g\u00f3c b\u1eb1ng nh\u00e3n c\u1ee7a n\u00fat ph\u1ea3i nh\u1ea5t \u1edf l\u1edbp s\u00e2u nh\u1ea5t</li> <li>X\u00f3a n\u00fat ph\u1ea3i nh\u1ea5t \u1edf l\u1edbp s\u00e2u nh\u1ea5t \u0111i (n\u00fat n\u00e0y v\u1eeba \u0111\u01b0\u1ee3c chuy\u1ec3n nh\u00e3n l\u00ean g\u1ed1c)</li> <li>Khi n\u00e0y t\u00ednh ch\u1ea5t TC1 v\u1ea5n \u0111\u01b0\u1ee3c \u0111\u1ea3m b\u1ea3o nh\u01b0ng TC2 th\u00ec c\u00f3 th\u1ec3 kh\u00f4ng, do \u0111\u00f3 ta c\u1ea7n vun \u0111\u1ed1ng t\u1eeb tr\u00ean xu\u1ed1ng (top-down heapify):<ul> <li>So s\u00e1nh nh\u00e3n n\u00fat g\u1ed1c v\u1edbi n\u00fat l\u1edbn h\u01a1n trong 2 n\u00fat con c\u1ee7a n\u00f3 (n\u1ebfu ch\u1ec9 c\u00f3 1 n\u00fat con, th\u00ec n\u00fat con \u0111\u00f3 \u0111\u01b0\u1ee3c coi l\u00e0 n\u00fat l\u1edbn h\u01a1n)</li> <li>N\u1ebfu n\u00f3 nh\u1ecf h\u01a1n n\u00fat con l\u1edbn h\u01a1n c\u1ee7a n\u00f3: \u0111\u1ed5i ch\u1ed7 2 n\u00fat n\u00e0y, ti\u1ebfp t\u1ee5c x\u00e9t ti\u1ebfp v\u1edbi n\u00fat con m\u1edbi cho \u0111\u1ebfn khi n\u00f3 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng n\u00fat con l\u1edbn h\u01a1n c\u1ee7a n\u00f3 ho\u1eb7c n\u00f3 kh\u00f4ng c\u00f3 con hay n\u00fat l\u00e1 (leaf)</li> </ul> </li> </ul> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p:</p> <ul> <li>N\u1ebfu c\u00e2y ch\u1ec9 c\u00f3 duy nh\u1ea5t n\u00fat g\u1ed1c \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(1)\\).</li> <li>N\u1ebfu c\u00e2y c\u00f3 \\(N\\) n\u00fat:<ul> <li>X\u00f3a n\u00fat ph\u1ea3i nh\u1ea5t \u1edf l\u1edbp s\u00e2u nh\u1ea5t kh\u1ecfi c\u00e2y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(1)\\)</li> <li>Vun \u0111\u1ed1ng t\u1eeb tr\u00ean xu\u1ed1ng (top-down heapify) c\u0169ng nh\u01b0 bottom-up heapify kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \u0111\u1ed9 s\u00e2u \\(h\\) c\u1ee7a c\u00e2y n\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(logN)\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"translate/wcipeg/Binary-Heap/#24-tang-giam-nhan-cua-mot-nut","title":"2.4. T\u0103ng, gi\u1ea3m nh\u00e3n c\u1ee7a m\u1ed9t n\u00fat","text":"<ul> <li>Tr\u01b0\u1edbc ti\u00ean c\u1ea7n x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed c\u1ee7a n\u00fat ta c\u1ea7n thay \u0111\u1ed5i nh\u00e3n</li> <li>Thay \u0111\u1ed5i nh\u00e3n</li> <li> <p>Vun \u0111\u1ed1ng heap</p> <ul> <li>N\u1ebfu nh\u00e3n t\u0103ng so v\u1edbi nh\u00e3n tr\u01b0\u1edbc \u0111\u00f3 c\u1ea7n th\u1ef1c hi\u1ec7n bottom-up heapify nh\u01b0 khi th\u00eam n\u00fat</li> <li>N\u1ebfu nh\u00e3n gi\u1ea3m \u0111i so v\u1edbi nh\u00e3n tr\u01b0\u1edbc \u0111\u00f3 c\u1ea7n th\u01b0c hi\u1ec7n top-down heapify nh\u01b0 khi x\u00f3a n\u00fat.</li> </ul> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \u0111\u1ed9 th\u1ee9c t\u1ea1p c\u1ee7a thao t\u00e1c n\u00e0y b\u1eb1ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a top-down heapify ho\u1eb7c bottom-up heapify hay b\u1eb1ng \\(O(logN)\\)</p> </li> </ul>"},{"location":"translate/wcipeg/Binary-Heap/#25-xay-ung-binary-heap-tu-tap-n-phan-tu","title":"2.5. X\u00e2y \u0111\u1ef1ng Binary Heap t\u1eeb t\u1eadp \\(N\\) ph\u1ea7n t\u1eed","text":"<ul> <li>M\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \\(N\\) ph\u00e9p th\u00eam n\u00fat. Nh\u01b0ng c\u00f3 m\u1ed9t k\u0129 thu\u1eadt hi\u1ec7u qu\u1ea3 h\u01a1n \u0111\u1ec3 x\u00e2y d\u1ef1ng binary heap \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bottom-up construction.</li> <li> <p>Bottom-up construction: K\u1ef9 thu\u1eadt n\u00e0y y\u00eau c\u1ea7u x\u00e2y d\u1ef1ng m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 tr\u01b0\u1edbc v\u00e0 th\u1ef1c hi\u1ec7n top-down heapify c\u00e1c n\u00fat tr\u00ean c\u00e2y theo t\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n \u0111\u1ed9 cao c\u1ee7a c\u00e2y (t\u1eeb c\u00e1c n\u00fat l\u00e1 l\u00ean c\u00e1c n\u00fat cha v\u00e0 ti\u1ebfp t\u1ee5c cho \u0111\u1ebfn g\u1ed1c). Ch\u1ee9ng minh k\u1ebft qu\u1ea3 c\u1ee7a c\u00e1ch x\u00e2y d\u1ef1ng l\u00e0 m\u1ed9t Binary Heap kh\u00f4ng ph\u1ea3i l\u00e0 kh\u00f3.</p> </li> <li> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p:</p> </li> <li>Khi th\u1ef1c hi\u1ec7n \\(N\\) b\u01b0\u1edbc th\u00eam n\u00fat ta c\u00f3 th\u1ec3 th\u1ea5y \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(log{1} + log{2} + ... + log{N}) = O(NlogN)\\).</li> <li>\u1ede c\u00e1ch x\u00e2y d\u1ef1ng th\u1ee9 2 ta th\u1ea5y n\u1ebfu m\u1ed9t n\u00fat \u1edf \u0111\u1ed9 x\u00e2u \\(k\\) n\u00f3 s\u1ebd m\u1ea5t kh\u00f4ng qu\u00e1 \\(h - k\\) l\u1ea7n so s\u00e1nh v\u1edbi n\u00fat con (nh\u1eafc l\u1ea1i \\(h\\) l\u00e0 \u0111\u1ed9 s\u00e2u c\u1ee7a c\u00e2y v\u00e0 s\u1ed1 n\u00fat c\u1ee7a c\u00e2y \\(N &lt; 2^{h+1}\\)) v\u00e0 m\u1ed9t n\u1eeda s\u1ed1 n\u00fat tr\u00ean c\u00e2y l\u00e0 l\u00e1 v\u00e0 s\u1ebd kh\u00f4ng ph\u1ea3i so s\u00e1nh v\u1edbi n\u00fat con n\u00e0o c\u1ea3, ta suy ra \u0111\u01b0\u1ee3c:<ul> <li>\u1ede \u0111\u1ed9 s\u00e2u \\(k = h-1\\) c\u00f3 \\(2^{h-1}\\) n\u00fat s\u1ed1 ph\u00e9p so s\u00e1nh l\u00e0 \\(1 \\* 2^{h-1} = 1/4 \\* N\\)</li> <li>\u1ede \u0111\u1ed9 s\u00e2u \\(k = h-2\\) c\u00f3 \\(2^{h-2}\\) n\u00fat s\u1ed1 ph\u00e9p so s\u00e1nh l\u00e0 \\(2 \\* 2^{h-2} = 2/8 \\* N\\)</li> <li>\u1ede \u0111\u1ed9 s\u00e2u \\(k = h-3\\) c\u00f3 \\(2^{h-3}\\) n\u00fat s\u1ed1 ph\u00e9p so s\u00e1nh l\u00e0 \\(3 \\* 2^{h-3} = 3/16 \\* N\\)     ...</li> <li>\u1ede \u0111\u1ed9 s\u00e2u \\(k = 0\\) (g\u1ed1c) c\u00f3 \\(1\\) n\u00fat s\u1ed1 ph\u00e9p so s\u00e1nh l\u00e0 \\(h \\* 1 = h/N \\* N\\)</li> <li>T\u1ed5ng h\u1ee3p l\u1ea1i ta c\u00f3: \\(1/4 \\* N + 2/8 \\* N + 3/16 \\* N + ... + h/N \\* N = N\\) ph\u00e9p so s\u00e1nh</li> </ul> </li> </ul>"},{"location":"translate/wcipeg/Binary-Heap/#3-cau-hoi-them-cho-ban-oc","title":"3. C\u00e2u h\u1ecfi th\u00eam cho b\u1ea1n \u0111\u1ecdc","text":"<ul> <li> <p>T\u1ea1i sao Binary Heap n\u00ean l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u1ea7y \u0111\u1ee7 TC1 ?</p> </li> <li> <p>N\u1ebfu Heap kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n m\u00e0 l\u00e0 m\u1ed9t c\u00e2y tam ph\u00e2n, t\u1ee9 ph\u00e2n, k-ph\u00e2n th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c thao t\u00e1c s\u1ebd thay \u0111\u1ed5i th\u1ebf n\u00e0o ?</p> </li> <li> <p>TC1 c\u1ea7n th\u00eam \u0111i\u1ec3u ki\u1ec7n t\u1eadp nh\u00e3n ph\u1ea3i l\u00e0 m\u1ed9t totally ordered set (2 gi\u00e1 tr\u1ecb b\u1ea5t k\u00ec trong t\u1eadp \u0111\u1ec1u c\u00f3 th\u1ec3 so s\u00e1nh \u0111\u01b0\u1ee3c v\u00e0 c\u00f3 t\u00ednh ch\u1ea5t b\u1eafc c\u1ea7u trong c\u00e1c ph\u00e9p so s\u00e1nh, v\u00ed d\u1ee5 nh\u01b0 t\u1eadp s\u1ed1 th\u1ef1c \\(\\mathbb{R}\\))</p> </li> </ul>"},{"location":"translate/wcipeg/Convex-Hull-Trick/","title":"K\u0129 thu\u1eadt bao l\u1ed3i (Convex Hull Trick)","text":"<p>Ngu\u1ed3n: P3G</p> <p>T\u00e1c gi\u1ea3: Phan Minh Ho\u00e0ng + L\u00ea Anh \u0110\u1ee9c</p> <p>K\u0129 thu\u1eadt bao l\u1ed3i l\u00e0 k\u0129 thu\u1eadt (ho\u1eb7c l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u) d\u00f9ng \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh hi\u1ec7u qu\u1ea3, c\u00f3 ti\u1ec1n x\u1eed l\u00fd, c\u1ef1c tr\u1ecb c\u1ee7a m\u1ed9t t\u1eadp c\u00e1c h\u00e0m tuy\u1ebfn t\u00ednh t\u1ea1i m\u1ed9t gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn \u0111\u1ed9c l\u1eadp. M\u1eb7c d\u00f9 t\u00ean g\u1ecdi gi\u1ed1ng nh\u01b0ng k\u0129 thu\u1eadt n\u00e0y l\u1ea1i kh\u00e1 kh\u00e1c bi\u1ec7t so v\u1edbi thu\u1eadt to\u00e1n bao l\u1ed3i c\u1ee7a h\u00ecnh h\u1ecdc t\u00ednh to\u00e1n.</p> <p>Ngo\u00e0i ra c\u00f3 m\u1ed9t k\u0129 thu\u1eadt li\u00ean quan \u0111\u1ebfn k\u0129 thu\u1eadt bao l\u1ed3i l\u00e0 IT \u0111o\u1ea1n th\u1eb3ng</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#lich-su","title":"L\u1ecbch s\u1eed","text":"<p>K\u0129 thu\u1eadt bao l\u1ed3i \u0111\u01b0\u1ee3c bi\u1ebft \u0111\u1ebfn nhi\u1ec1u nh\u1ea5t c\u00f3 l\u1ebd v\u00ec n\u00f3 c\u1ea7n \u0111\u1ec3 \u0103n tr\u1ecdn to\u00e0n b\u1ed9 s\u1ed1 \u0111i\u1ec3m trong nhi\u1ec1u b\u00e0i to\u00e1n USACO, nh\u01b0 l\u00e0 b\u00e0i Acquire trong b\u1ea3ng gold c\u1ee7a USACO th\u00e1ng 3 n\u0103m 2008. Thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh m\u1ed9t c\u00e1ch r\u1ed9ng r\u00e3i sau b\u00e0i Batch Scheduling trong k\u00ec thi IOI 2002. \u0110\u00e2y l\u00e0 m\u1ed9t k\u0129 thu\u1eadt kh\u00e1 l\u1ea1 v\u00e0 \u00edt c\u00f3 ngu\u1ed3n tr\u00ean m\u1ea1ng v\u1ec1 v\u1ea5n \u0111\u1ec1 n\u00e0y. </p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#bai-toan-co-ban","title":"B\u00e0i to\u00e1n c\u01a1 b\u1ea3n","text":"<p>Cho m\u1ed9t t\u1eadp l\u1edbn c\u00e1c h\u00e0m tuy\u1ebfn t\u00ednh c\u00f3 d\u1ea1ng \\(y = m_i x + b_i\\) v\u00e0 m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng l\u1edbn truy v\u1ea5n. M\u1ed7i truy v\u1ea5n l\u00e0 m\u1ed9t s\u1ed1 \\(x\\) v\u00e0 h\u1ecfi gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u \\(y\\) c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c n\u1ebfu ch\u00fang ta th\u1ebf \\(x\\) v\u00e0o m\u1ed9t trong nh\u1eefng ph\u01b0\u01a1ng tr\u00ecnh \u0111\u00e3 cho. V\u00ed d\u1ee5, cho c\u00e1c ph\u01b0\u01a1ng tr\u00ecnh \\(y=4\\), \\(y=\\frac{4}{3}+\\frac{2}{3}x\\), \\(y=12-3x\\) v\u00e0 \\(y=3-\\frac{1}{2}x\\) v\u00e0 truy v\u1ea5n \\(x=1\\). Ch\u00fang ta ph\u1ea3i t\u00ecm ph\u01b0\u01a1ng tr\u00ecnh m\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u ho\u1eb7c gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u \u0111\u00f3 (trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 ph\u01b0\u01a1ng tr\u00ecnh \\(y=\\frac{4}{3}+\\frac{2}{3}x\\) v\u00e0 gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u \u0111\u00f3 l\u00e0 2).</p> <p>Bi\u1ebfn th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n c\u00f3 th\u1ec3 l\u00e0 t\u00ecm gi\u00e1 tr\u1ecb c\u1ef1c \u0111\u1ea1i c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft v\u1edbi m\u1ed9t thay \u0111\u1ed5i nh\u1ecf v\u00ec v\u1eady trong b\u00e0i vi\u1ebft n\u00e0y ch\u1ec9 t\u1eadp trung v\u00e0o b\u00e0i to\u00e1n t\u00ecm gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u.</p> <p>Sau khi ta v\u1ebd c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng l\u00ean h\u1ec7 tr\u1ee5c t\u1ecda \u0111\u1ed9, d\u1ec5 th\u1ea5y r\u1eb1ng: ch\u00fang ta mu\u1ed1n x\u00e1c \u0111\u1ecbnh, t\u1ea1i \\(x=1\\)(\u0111\u01b0\u1eddng m\u00e0u \u0111\u1ecf)  \u0111\u01b0\u1eddng n\u00e0o c\u00f3 t\u1ecda \u0111\u1ed9 \\(y\\) nh\u1ecf nh\u1ea5t. \u1ede trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 \u0111\u01b0\u1eddng n\u00e9t \u0111\u1ee9t \u0111\u1eadm \\(y=\\frac{4}{3}+\\frac{2}{3}x\\).</p> <p></p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#thuat-toan-duyet","title":"Thu\u1eadt to\u00e1n duy\u1ec7t","text":"<p>V\u1edbi m\u1ed7i truy v\u1ea5n trong \\(Q\\) truy v\u1ea5n, ta duy\u1ec7t qua t\u1eebng h\u00e0m s\u1ed1 v\u00e0 th\u1eed t\u1eebng t\u1eebng h\u00e0m v\u00e0 xem th\u1eed h\u00e0m n\u00e0o tr\u1ea3 gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u cho gi\u00e1 tr\u1ecb \\(x\\). N\u1ebfu c\u00f3 \\(M\\) \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0 \\(Q\\) truy v\u1ea5n, \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd \\(\\mathcal{O}(MQ)\\). K\u0129 thu\u1eadt bao l\u1ed3i s\u1ebd gi\u00fap gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p xu\u1ed1ng c\u00f2n \\(\\mathcal{O}((Q+M)\\log M\\), m\u1ed9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p hi\u1ec7u qu\u00e1 h\u01a1n nhi\u1ec1u. </p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#ki-thuat","title":"K\u0129 thu\u1eadt","text":"<p>X\u00e9t h\u00ecnh v\u1ebd \u1edf tr\u00ean. \u0110\u01b0\u1eddng th\u1eb3ng \\(y=4\\) s\u1ebd kh\u00f4ng bao gi\u1edd l\u00e0 gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t v\u1edbi t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb c\u1ee7a \\(x\\).  M\u1ed7i \u0111\u01b0\u1eddng trong m\u1ed7i \u0111\u01b0\u1eddng th\u1eb3ng c\u00f2n l\u1ea1i s\u1ebd l\u1ea1i tr\u1ea3 l\u1ea1i gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u trong m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp (c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t bi\u00ean l\u00e0 \\(+\\infty\\) ho\u1eb7c \\(-\\infty\\)).  \u0110\u01b0\u1eddng ch\u1ea5m \u0111\u1eadm s\u1ebd cho gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u v\u1edbi t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb n\u1eb1m b\u00ean tr\u00e1i \u0111i\u1ec3m giao v\u1edbi \u0111\u01b0\u1eddng \u0111en \u0111\u1eadm. \u0110\u01b0\u1eddng \u0111en \u0111\u1eadm s\u1ebd cho gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u v\u1edbi t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb gi\u1eefa giao \u0111i\u1ec3m c\u1ee7a n\u00f3 v\u1edbi \u0111\u01b0\u1eddng nh\u1ea1t v\u00e0 \u0111\u01b0\u1eddng ch\u1ea5m \u0111\u1eadm. V\u00e0 \u0111\u01b0\u1eddng nh\u1ea1t s\u1ebd nh\u1eadn c\u1ef1c ti\u1ec3u cho t\u1ea5t c\u1ea3 gi\u00e1 tr\u1ecb b\u00ean ph\u1ea3i giao \u0111i\u1ec3m v\u1edbi \u0111\u01b0\u1eddng \u0111\u1eadm. M\u1ed9t nh\u1eadn x\u00e9t n\u1eefa l\u00e0 v\u1edbi gi\u00e1 tr\u1ecb c\u1ee7a \\(x\\) c\u00e0ng t\u0103ng th\u00ec h\u1ec7 s\u1ed1 g\u00f3c c\u1ee7a c\u00e1c h\u00e0m s\u1ed1 s\u1ebd gi\u1ea3m, \\(\\frac{2}{3}, \\frac{-1}{2}, -3\\). V\u1edbi m\u1ed9t ch\u00fat ch\u1ee9ng minh d\u1ec5 th\u1ea5y r\u1eb1ng \u0111i\u1ec1u n\u00e0y lu\u00f4n \u0111\u00fang. </p> <p>\u0110i\u1ec1u n\u00e0y gi\u00fap ch\u00fang ta hi\u1ec3u ph\u1ea7n n\u00e0o thu\u1eadt to\u00e1n:</p> <ul> <li> <p>B\u1ecf \u0111i c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng kh\u00f4ng quan tr\u1ecdng nh\u01b0 \\(y=4\\) trong v\u00ed d\u1ee5 (nh\u1eefng \u0111\u01b0\u1eddng th\u1eb3ng m\u00e0 kh\u00f4ng nh\u1eadn gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u trong b\u1ea5t k\u00ec \u0111o\u1ea1n n\u00e0o)</p> </li> <li> <p>S\u1eafp x\u1ebfp c\u00e1c \u0111o\u1ea1n th\u1eb3ng c\u00f2n l\u1ea1i theo h\u1ec7 s\u1ed1 g\u00f3c v\u00e0 \u0111\u01b0\u1ee3c m\u1ed9t t\u1eadp \\(N\\) \u0111o\u1ea1n th\u1eb3ng (c\u1ee7a \\(N\\) \u0111\u01b0\u1eddng th\u1eb3ng c\u00f2n l\u1ea1i) m\u00e0 m\u1ed7i \u0111o\u1ea1n c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng nh\u1eadn gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u. </p> </li> <li> <p>D\u00f9ng thu\u1eadt to\u00e1n t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n c\u01a1 b\u1ea3n \u0111\u1ec3 c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm \u0111\u00e1p \u00e1n cho t\u1eebng truy v\u1ea5n.</p> </li> </ul>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#y-nghia-cua-ten-ki-thuat","title":"\u00dd ngh\u0129a c\u1ee7a t\u00ean k\u0129 thu\u1eadt","text":"<p>C\u1ee5m t\u1eeb bao l\u1ed3i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ec9 h\u00ecnh bao tr\u00ean/d\u01b0\u1edbi (upper / lower envelope). Trong v\u00ed d\u1ee5, n\u1ebfu ch\u00fang ta coi m\u1ed7i ph\u1ea7n \u0111o\u1ea1n th\u1eb3ng t\u1ed1i \u01b0u c\u1ee7a \u0111\u01b0\u1eddng th\u1eb3ng (b\u1ecf qua \u0111\u01b0\u1eddng \\(y=4\\)), ch\u00fang ta s\u1ebd th\u1ea5y nh\u1eefng \u0111o\u1ea1n \u0111\u00f3 t\u1ea1o th\u00e0nh m\u1ed9t h\u00ecnh bao d\u01b0\u1edbi (lower envelope), m\u1ed9t t\u1eadp c\u00e1c \u0111o\u1ea1n th\u1eb3ng ch\u1ee9a t\u1ea5t c\u1ea3 \u0111i\u1ec3m c\u1ef1c ti\u1ec3u cho m\u1ecdi gi\u00e1 tr\u1ecb c\u1ee7a \\(x\\) (h\u00ecnh bao d\u01b0\u1edbi \u0111\u01b0\u1ee3c t\u00f4 b\u1eb1ng m\u00e0u xanh trong h\u00ecnh. C\u00e1i t\u00ean k\u0129 thu\u1eadt bao l\u1ed3i xu\u1ea5t ph\u00e1t t\u1eeb vi\u1ec7c \u0111\u01b0\u1eddng bao tr\u00ean t\u1ea1o th\u00e0nh m\u1ed9t \u0111\u01b0\u1eddng l\u1ed3i, t\u1eeb \u0111\u00f3 th\u00e0nh bao l\u1ed3i c\u1ee7a m\u1ed9t t\u1eadp \u0111i\u1ec3m.</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#them-mot-uong-vao-tap","title":"Th\u00eam m\u1ed9t \u0111\u01b0\u1eddng v\u00e0o t\u1eadp","text":"<p>Ta c\u00f3 th\u1ec3 th\u1ea5y n\u1ebfu ta c\u00f3 m\u1ed9t t\u1eadp \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u00e3 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh s\u1eafp x\u1ebfp, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng tr\u1ea3 l\u1eddi b\u1ea5t k\u00ec truy v\u1ea5n n\u00e0o v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(\\mathcal{O}(\\log{} M)\\) v\u1edbi t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n. V\u1eady n\u1ebfu ch\u00fang ta t\u00ecm ra c\u00e1ch th\u00eam m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0o t\u00ednh to\u00e1n l\u1ea1i m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 l\u00e0 ch\u00fang ta \u0111\u00e3 c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n ho\u1ea1t \u0111\u1ed9ng ngon l\u00e0nh.</p> <p>Gi\u1ea3 s\u1eed ch\u00fang ta \u0111\u01b0\u1ee3c x\u1eed l\u00fd t\u1ea5t c\u1ea3 \u0111\u01b0\u1eddng th\u1eb3ng tr\u01b0\u1edbc khi l\u00e0m c\u00e1c truy v\u1ea5n th\u00ec ch\u00fang ta ch\u1ec9 c\u1ea7n \u0111\u01a1n gi\u1ea3n s\u1eafp x\u1ebfp c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng theo h\u1ec7 s\u1ed1 g\u00f3c v\u00e0 th\u00eam t\u1eebng \u0111\u01b0\u1eddng m\u1ed9t v\u00e0o. S\u1ebd c\u00f3 th\u1ec3 m\u1ed9t s\u1ed1 \u0111\u01b0\u1eddng kh\u00f4ng quan tr\u1ecdng v\u00e0 s\u1ebd b\u1ecb b\u1ecf \u0111i. Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Stack \u0111\u1ec3 c\u00e0i \u0111\u1eb7t, b\u1ecf t\u1eebng \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0o stack v\u00e0 n\u1ebfu \u0111\u01b0\u1eddng n\u00e0o kh\u00f4ng quan tr\u1ecdng s\u1ebd b\u1ecb b\u1ecf ra ngo\u00e0i \u0111\u1ebfn khi ch\u1ec9 c\u00f2n m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng (\u0111\u01b0\u1eddng th\u1eb3ng cu\u1ed1i kh\u00f4ng th\u1ec3 b\u1ecf) </p> <p>V\u1eady l\u00e0m sao \u0111\u1ec3 c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1eddng th\u1eb3ng n\u00e0o s\u1ebd b\u1ecb b\u1ecf kh\u1ecfi stack? Gi\u1ea3 s\u1eed \\(l_1\\), \\(l_2\\) v\u00e0 \\(l_3\\) l\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng \u00e1p ch\u00f3t (g\u1ea7n cu\u1ed1i ) tr\u00ean stack, \u0111\u01b0\u1eddng th\u1eb3ng cu\u1ed1i c\u00f9ng trong stack v\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c th\u00eam v\u00e0o stack. \u0110o\u1ea1n \\(l_2\\) kh\u00f4ng quan tr\u1ecdng(kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u \u1edf \u0111i\u1ec3m n\u00e0o) khi v\u00e0 ch\u1ec9 khi giao \u0111i\u1ec3m c\u1ee7a \\(l_1\\) v\u00e0 \\(l_3\\) n\u1eb1m b\u00ean tr\u00e1i giao \u0111i\u1ec3m c\u1ee7a \\(l_1\\) v\u00e0 \\(l_2\\) (\u0110o\u1ea1n m\u00e0 \\(l_3\\) nh\u1eadn gi\u00e1 tr\u1ecb c\u1ef1c ti\u1ec3u \u0111\u00e3 n\u1eb1m \u0111\u00e8 l\u00ean \u0111o\u1ea1n c\u1ee7a \\(l_2\\)). Gi\u1ea3 s\u1eed r\u1eb1ng kh\u00f4ng c\u00f3 ba \u0111\u01b0\u1eddng n\u00e0o tr\u00f9ng hay song song v\u1edbi nhau (c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n).</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#phan-tich-thuat-toan","title":"Ph\u00e2n t\u00edch thu\u1eadt to\u00e1n","text":"<p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p b\u1ed9 nh\u1edb s\u1ebd l\u00e0 \\(\\mathcal{O}(M)\\): ch\u00fang ta c\u1ea7n m\u1ed9t danh s\u00e1ch l\u01b0u l\u1ea1i c\u00e1c \u0111o\u1ea1n th\u1eb3ng, bi\u1ec3u di\u1ec5n b\u1edfi hai s\u1ed1 th\u1ef1c. </p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian cho ph\u1ea7n ti\u1ec1n x\u00e2y d\u1ef1ng:</p> <ul> <li> <p>\u0110\u1ec3 s\u1eafp x\u1ebfp c\u00e1c \u0111o\u1ea1n th\u1eb3ng theo t\u0103ng d\u1ea7n h\u1ec7 s\u1ed1 g\u00f3c s\u1ebd t\u1ed1n  \\(\\mathcal{O}(M\\log{M})\\).</p> </li> <li> <p>Duy\u1ec7t qua c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng m\u1ed7i \u0111\u01b0\u1eddng \u0111\u01b0\u1ee3c cho v\u00e0o stack v\u00e0 b\u1ecf kh\u1ecfi stack t\u1ed1i \u0111a m\u1ed9t l\u1ea7n v\u1eady n\u00ean s\u1ebd t\u1ed1n \\(\\mathcal{O}(M)\\) cho b\u01b0\u1edbc n\u00e0y.</p> </li> </ul> <p>V\u1eady th\u1eddi gian cho vi\u1ec7c x\u00e2y d\u1ef1ng s\u1ebd l\u00e0 \\(\\mathcal{O}(M\\log{M})\\). V\u1edbi m\u1ed7i truy v\u1ea5n d\u00f9ng ch\u1eb7t nh\u1ecb ph\u00e2n s\u1ebd cho \u0111\u1ed9 ph\u00fac t\u1ea1p t\u1ed1t nh\u1ea5t \\(\\mathcal{O}(\\log{} M)\\). </p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#vi-du-1-usaco-thang-3-nam-2008-acquire","title":"V\u00ed d\u1ee5 1: USACO Th\u00e1ng 3 n\u0103m 2008 \"Acquire\"","text":""},{"location":"translate/wcipeg/Convex-Hull-Trick/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho \\(N(N \\le 50000)\\) h\u00ecnh ch\u1eef nh\u1eadt kh\u00e1c nhau v\u1ec1 h\u00ecnh d\u1ea1ng, m\u1ee5c ti\u00eau c\u1ee7a b\u00e0i to\u00e1n l\u00e0 ph\u1ea3i l\u1ea5y \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 h\u00ecnh ch\u1eef nh\u1eadt. M\u1ed9t t\u1eadp h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c v\u1edbi chi ph\u00ed b\u1eb1ng t\u00edch c\u1ee7a chi\u1ec1u d\u00e0i d\u00e0i nh\u1ea5t v\u00e0 chi\u1ec1u r\u1ed9ng d\u00e0i nh\u1ea5t. Ch\u00fang ta c\u1ea7n ph\u00e2n ho\u1ea1ch t\u1eadp c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt n\u00e0y m\u1ed9t c\u00e1ch kh\u00f4n kh\u00e9o sao cho t\u1ed5ng chi ph\u00ed c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ed1i thi\u1ec3u h\u00f3a v\u00e0 t\u00ednh chi ph\u00ed n\u00e0y. H\u00ecnh ch\u1eef nh\u1eadt kh\u00f4ng th\u1ec3 \u0111\u01b0\u1ee3c xoay (\u0111\u1ed5i chi\u1ec1u d\u00e0i v\u00e0 chi\u1ec1u r\u1ed9ng).</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#nhan-xet-1-ton-tai-cac-hinh-chu-nhat-khong-quan-trong","title":"Nh\u1eadn x\u00e9t 1: T\u1ed3n t\u1ea1i c\u00e1c h\u00ecnh ch\u1eef nh\u1eadt kh\u00f4ng quan tr\u1ecdng","text":"<p>Gi\u1ea3 s\u1eed t\u1ed3n t\u1ea1i hai h\u00ecnh ch\u1eef nh\u1eadt A v\u00e0 B m\u00e0 m\u00e0 c\u1ea3 chi\u1ec1u d\u00e0i v\u00e0 chi\u1ec1u r\u1ed9ng c\u1ee7a h\u00ecnh B \u0111\u1ec1u b\u00e9 h\u01a1n h\u00ecnh A th\u00ec ta c\u00f3 th\u1ec3 n\u00f3i h\u00ecnh B l\u00e0 kh\u00f4ng quan tr\u1ecdng v\u00ec ta c\u00f3 th\u1ec3 \u0111\u1ec3 h\u00ecnh B chung v\u1edbi h\u00ecnh A t\u1eeb \u0111\u00f3 chi ph\u00ed c\u1ee7a h\u00ecnh B kh\u00f4ng c\u00f2n quan tr\u1ecdng. Sau khi \u0111\u00e3 lo\u1ea1i h\u1ebft t\u1ea5t c\u1ea3 h\u00ecnh kh\u00f4ng quan tr\u1ecdng \u0111i v\u00e0 s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c h\u00ecnh theo chi\u1ec1u d\u00e0i gi\u1ea3m d\u1ea7n th\u00ec chi\u1ec1u r\u1ed9ng c\u00e1c h\u00ecnh \u0111\u00e3 s\u1eafp x\u1ebfp s\u1ebd theo chi\u1ec1u t\u0103ng.</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#nhan-xet-2-oan-lien-tiep","title":"Nh\u1eadn x\u00e9t 2: \u0110o\u1ea1n li\u00ean ti\u1ebfp","text":"<p>Sau khi s\u1eafp x\u1ebfp, ta c\u00f3 th\u1ec3 h\u00ecnh dung \u0111\u01b0\u1ee3c r\u1eb1ng n\u1ebfu ch\u00fang ta ch\u1ecdn hai h\u00ecnh ch\u1eef nh\u1eadt \u1edf v\u1ecb tr\u00ed \\(i\\) v\u00e0 \u1edf v\u1ecb tr\u00ed \\(j\\) th\u00ec ta c\u00f3 th\u1ec3 ch\u1ecdn t\u1ea5t c\u1ea3 h\u00ecnh ch\u1eef nh\u1eadt t\u1eeb \\(i+1\\) \u0111\u1ebfn \\(j-1\\) m\u00e0 kh\u00f4ng t\u1ed1n chi ph\u00ed n\u00e0o c\u1ea3. V\u1eady ta c\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng c\u00e1ch ph\u00e2n ho\u1ea1ch t\u1ed1i \u01b0u l\u00e0 m\u1ed9t c\u00e1ch ph\u00e2n d\u00e3y th\u00e0nh c\u00e1c \u0111o\u1ea1n li\u00ean ti\u1ebfp v\u00e0 chi ph\u00ed c\u1ee7a m\u1ed9t \u0111o\u1ea1n l\u00e0 b\u1eb1ng t\u00edch c\u1ee7a chi\u1ec1u d\u00e0i c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt \u0111\u1ea7u ti\u00ean v\u00e0 chi\u1ec1u r\u1ed9ng c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt cu\u1ed1i c\u00f9ng.  </p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#loi-giai-quy-hoach-ong","title":"L\u1eddi gi\u1ea3i Quy Ho\u1ea1ch \u0110\u1ed9ng","text":"<p>V\u1eady b\u00e0i to\u00e1n tr\u1edd v\u1ec1 b\u00e0i to\u00e1n ph\u00e2n d\u00e3y sao cho t\u1ed5ng chi ph\u00ed c\u1ee7a c\u00e1c d\u00e3y l\u00e0 t\u1ed1i \u01b0u. \u0110\u00e2y l\u00e0 m\u1ed9t d\u1ea1ng b\u00e0i quy ho\u1ea1ch \u0111\u1ed9ng hay g\u1eb7p v\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ngh\u0129 ra thu\u1eadt to\u00e1n \\(\\mathcal{O}(N^2)\\) nh\u01b0 m\u00e3 gi\u1ea3 ph\u00eda d\u01b0\u1edbi. (Gi\u1ea3 s\u1eed c\u00e1c h\u00ecnh \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp v\u00e0 b\u1ecf \u0111i nh\u1eefng h\u00ecnh ch\u1eef nh\u1eadt kh\u00f4ng quan tr\u1ecdng)</p> <pre><code>input N\nfor i \u2208 [1..N]\n     input rect[i].h\n     input rect[i].w\nlet cost[0] = 0\nfor i \u2208 [1..N]\n     let cost[i] = \u221e\n     for j \u2208 [0..i-1]\n         cost[i] = min(cost[i],cost[j]+rect[i].h*rect[j+1].w)\nprint cost[N]\n</code></pre> <p>\u1ede tr\u00ean <code>cost[k]</code> l\u01b0u l\u1ea1i chi ph\u00ed c\u1ef1c ti\u1ec3u \u0111\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c <code>k</code> h\u00ecnh ch\u1eef nh\u1eadt \u0111\u1ea7u ti\u00ean. Hi\u1ec3n nhi\u00ean, <code>cost[0]=0</code>. \u0110\u1ec3 t\u00ednh to\u00e1n \u0111\u01b0\u1ee3c <code>cost[i]</code> v\u1edbi <code>i</code> kh\u00e1c 0, ta c\u00f3 t\u00ednh t\u1ed5ng chi ph\u00ed \u0111\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c c\u00e1c t\u1eadp tr\u01b0\u1edbc v\u00e0 c\u1ed9ng n\u00f3 v\u1edbi chi ph\u00ed c\u1ee7a t\u1eadp cu\u1ed1i c\u00f9ng(c\u00f3 ch\u1ee9a <code>i</code>). Chi ph\u00ed c\u1ee7a m\u1ed9t t\u1eadp c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ednh b\u1eb1ng c\u00e1ch l\u1ea5y t\u00edch c\u1ee7a chi\u1ec1u d\u00e0i h\u00ecnh ch\u1eef nh\u1eadt \u0111\u1ea7u ti\u00ean v\u00e0 chi\u1ec1u r\u1ed9ng c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt cu\u1ed1i c\u00f9ng. V\u1eady ta c\u00f3 <code>min(cost[i],cost[j]+rect[i].h*rect[j+1].w)</code> v\u1edbi j l\u00e0 h\u00ecnh ch\u1eef nh\u1eadt \u0111\u1ea7u ti\u00ean c\u1ee7a t\u1eadp cu\u1ed1i c\u00f9ng. V\u1edbi \\(N=50000\\) th\u00ec thu\u1eadt to\u00e1n \\(\\mathcal{O}(N^2)\\) n\u00e0y l\u00e0 qu\u00e1 ch\u1eadm.</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#nhan-xet-3-su-dung-bao-loi","title":"Nh\u1eadn x\u00e9t 3: S\u1eed d\u1ee5ng bao l\u1ed3i","text":"<p>V\u1edbi \\(m_j=rect[j+1].w, b_j=cost[j], x=rect[i].h\\) v\u1edbi \\(rect[x].h\\) l\u00e0 chi\u1ec1u r\u1ed9ng c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt \\(x\\) v\u00e0 \\(rect[x].w\\) l\u00e0 chi\u1ec1u d\u00e0i c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt \\(x\\). V\u1eady th\u00ec b\u00e0i to\u00e1n tr\u1edd v\u1ec1 t\u00ecm h\u00e0m c\u1ef1c ti\u1ec3u c\u1ee7a \\(y=m_jx+b_j\\) b\u1eb1ng c\u00e1ch t\u00ecm \\(j\\) t\u1ed1i \u01b0u. N\u00f3 gi\u1ed1ng ho\u00e0n to\u00e0n b\u00e0i to\u00e1n ch\u00fang ta \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean. Gi\u1ea3 s\u1eed ta \u0111\u00e3 ho\u00e0n th\u00e0nh vi\u1ec7c c\u00e0i \u0111\u1eb7t c\u1ea5u tr\u00fac \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean ch\u00fang ta c\u00f3 th\u1ec3 c\u00f3 m\u00e3 gi\u1ea3 \u1edf d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>input N\nfor i \u2208 [1..N]\n     input rect[i].h\n     input rect[i].w\nlet E = empty lower envelope structure\nlet cost[0] = 0\nadd the line y=mx+b to E, where m=rect[1].w and b=cost[0] //b is zero\nfor i \u2208 [1..N]\n     cost[i] = E.query(rect[i].h)\n     if i&lt;N\n          E.add(m=rect[i+1].w,b=cost[i])\nprint cost[N]\n</code></pre> <p>R\u00f5 r\u00e0ng c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp gi\u1ea3m d\u1ea7n v\u1ec1 \u0111\u1ed9 l\u1edbn c\u1ee7a h\u1ec7 s\u1ed1 g\u00f3c do ch\u00fang ta \u0111\u00e3 s\u1eafp x\u1ebfp c\u00e1c chi\u1ec1u d\u00e0i gi\u1ea3m d\u1ea7n. Do m\u1ed7i truy v\u1ea5n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n trong th\u1eddi gian \\(\\mathcal{O}(\\log{N})\\), ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u1ea5y th\u1eddi gian th\u1ef1c hi\u1ec7n c\u1ee7a c\u1ea3 b\u00e0i to\u00e1n l\u00e0 \\(\\mathcal{O}(N\\log{N})\\). Do c\u00e1c truy v\u1ea5n c\u1ee7a ch\u00fang ta c\u0169ng t\u0103ng d\u1ea7n (do chi\u1ec1u r\u1ed9ng \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u0103ng t\u1ea7n) ta c\u00f3 th\u1ec3 thay th\u1ebf vi\u1ec7c ch\u1eb7t nh\u1ecb ph\u00e2n b\u1eb1ng m\u1ed9t con tr\u1ecf ch\u1ea1y song song v\u1edbi vi\u1ec7c quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u01b0a b\u01b0\u1edbc quy ho\u1ea1ch \u0111\u1ed9ng c\u00f2n \\(\\mathcal{O}(N)\\) nh\u01b0ng t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1eabn l\u00e0 \\(\\mathcal{O}(N\\log{N})\\) do chi ph\u00ed s\u1eafp x\u1ebfp. V\u1eady l\u00e0 ta \u0111\u00e3 gi\u1ea3i quy\u1ebft th\u00e0nh c\u00f4ng b\u00e0i to\u00e1n s\u1eed d\u1ee5ng k\u0129 thu\u1eadt bao l\u1ed3i \u0111\u1ea7u ti\u00ean c\u1ee7a ch\u00fang ta :D.</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#vi-du-2-apio-2010-commando","title":"V\u00ed d\u1ee5 2: APIO 2010 Commando","text":""},{"location":"translate/wcipeg/Convex-Hull-Trick/#bai-toan_1","title":"B\u00e0i to\u00e1n","text":"<p>B\u1ea1n \u0111\u01b0\u1ee3c cho: - M\u1ed9t d\u00e3y c\u00f3 \\(N\\) s\u1ed1 nguy\u00ean d\u01b0\u01a1ng (\\(1\\le N \\le 10^6\\)) - M\u1ed9t h\u00e0m s\u1ed1 b\u1eadc 2 v\u1edbi h\u1ec7 s\u1ed1 nguy\u00ean duong \\(f(x)= ax^2 + bx +c\\), \\(a\\lt0\\). M\u1ee5c ti\u00eau c\u0169ng c\u1ee7a b\u00e0i to\u00e1n l\u00e0 ph\u00e2n d\u00e3y n\u00e0y ra th\u00e0nh c\u00e1c \u0111o\u1ea1n li\u00ean ti\u1ebfp sao t\u1ed5ng c\u00e1c h\u00e0m \\(f\\) tr\u00ean c\u00e1c d\u00e3y l\u00e0 l\u1edbn nh\u1ea5t ( gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m \\(f\\) l\u00ean d\u00e3y l\u00e0 \\(f(x)\\) v\u1edbi \\(x\\) l\u00e0 t\u1ed5ng d\u00e3y \u0111\u00f3) . T\u01b0\u01a1ng t\u1ef1 nh\u01b0 b\u00e0i tr\u00ean c\u00f4ng th\u1ee9c quy ho\u1ea1ch \u0111\u1ed9ng c\u00f3 th\u1ec3 d\u1ec5 th\u1ea5y c\u00f4ng th\u1ee9c \\(\\mathcal{O}(N^2)\\).</p> <p>\u0110\u1ecbnh ngh\u0129a r\u1eb1ng:</p> <ul> <li><code>sum(i,j) = x[i] + x[i+1] + ... + x[j]</code> </li> <li><code>adjust(i,j) = a*sum(i,j)^2 + b*sum(i,j) + c</code> </li> </ul> <p>Ta c\u00f3:</p> <p>\\(dp(n) = max_{k=0}^{n-1}[dp(k)+adjust(k+1,n)]\\)</p> <p>M\u00e3 gi\u1ea3:</p> <pre><code>dp[0] \u2190 0\nfor n \u2208 [1..N]\n    for k \u2208 [0..n-1]\n        dp[n] \u2190 max(dp[n], dp[k] + adjust(k + 1 , n))\n</code></pre> <p>H\u00e3y th\u1eed bi\u1ebfn \u0111\u1ed5i h\u00e0m \"adjust\" m\u1ed9t t\u00ed n\u00e0o. \u0110\u1ecbnh ngh\u0129a \\(sum(1,x)\\) l\u00e0 \\(\\delta(x)\\). V\u1eady v\u1edbi m\u1ed9t s\u1ed1 \\(k\\) b\u1ea5t k\u00ec ta c\u00f3 th\u1ec3 vi\u1ebft l\u00e0:</p> <p>\\(dp(n)=dp(k)+a(\\delta(n)-\\delta(k))^2+b(\\delta(n)-\\delta(k))+c\\) \\(dp(n)=dp(k)+a(\\delta(n)^2+\\delta(k)^2-2\\delta(n)\\delta(k))+b(\\delta(n)-\\delta(k))+c\\) \\(dp(n)=(a\\delta(n)^2 +b\\delta(n) +c)+dp(k)-2a\\delta(n)\\delta(k)+a\\delta(k)^2-b\\delta(k)\\)</p> <p>N\u1ebfu:</p> <ul> <li>\\(z=\\delta(n)\\)</li> <li>\\(m=-2a\\delta(k)\\)</li> <li>\\(p=dp(k)+a\\delta(k)^2-b\\delta(k)\\)</li> </ul> <p>Ta c\u00f3 th\u1ec3 th\u1ea5y \\(mz+p\\) l\u00e0 \u0111\u1ea1i l\u01b0\u1ee3ng m\u00e0 ch\u00fang ta mu\u1ed1n t\u1ed1i \u01b0u h\u00f3a b\u1eb1ng c\u00e1ch ch\u1ecdn \\(k\\). \\(dp(n)\\) s\u1ebd b\u1eb1ng \u0111\u1ea1i l\u01b0\u1ee3ng \u0111\u00f3 c\u1ed9ng th\u00eam v\u1edbi \\(a\\delta(n)+b\\delta(n)+c\\)(\u0111\u1ed9c l\u1eadp so v\u1edbi k). Trong \u0111\u00f3 \\(z\\) c\u0169ng \u0111\u1ed9c l\u1eadp v\u1edbi \\(k\\), v\u00e0 \\(m\\) v\u00e0 \\(p\\) ph\u1ee5 thu\u1ed9c v\u00e0o k.</p> <p>Ng\u01b0\u1ee3c v\u1edbi b\u00e0i \"acquire\" khi ch\u00fang ta ph\u1ea3i t\u1ed1i thi\u1ec3u h\u00f3a h\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng th\u00ec b\u00e0i n\u00e0y ch\u00fang ta ph\u1ea3i c\u1ef1c \u0111\u1ea1i h\u00f3a n\u00f3. Ch\u00fang ta ph\u1ea3i x\u00e2y d\u1ef1ng m\u1ed9t h\u00ecnh bao tr\u00ean v\u1edbi c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng t\u0103ng d\u1ea7n v\u1ec1 h\u1ec7 s\u1ed1 g\u00f3c. Do \u0111\u1ec1 b\u00e0i \u0111\u00e3 cho \\(a\\lt0\\) h\u1ec7 s\u1ed1 g\u00f3c c\u1ee7a ch\u00fang ta t\u0103ng d\u1ea7n v\u00e0 lu\u00f4n d\u01b0\u01a1ng th\u1ecfa v\u1edbi \u0111i\u1ec1u ki\u1ec7n c\u1ee7a c\u1ea5u tr\u00fac ch\u00fang ta.</p> <p>Do d\u1ec5 th\u1ea5y \\(\\delta(n)&gt;\\delta(n-1)\\), gi\u1ed1ng nh\u01b0 b\u00e0i \"acquire\" c\u00e1c truy v\u1ea5n ch\u00fang ta c\u0169ng t\u0103ng d\u1ea7n theo th\u1ee9 t\u1ef1 do v\u1eady ch\u00fang ta c\u00f3 th\u1ec3 kh\u01a1i t\u1ea1o m\u1ed9t bi\u1ebfn ch\u1ea1y \u0111\u1ec3 ch\u1ea1y song song khi l\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng (b\u1ecf \u0111\u01b0\u1ee3c ph\u1ea7n ch\u1eb7t nh\u1ecb ph\u00e2n).</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#vi-du-3-harbingers-ceoi-2009","title":"V\u00ed d\u1ee5 3: HARBINGERS (CEOI 2009)","text":""},{"location":"translate/wcipeg/Convex-Hull-Trick/#bai-toan_2","title":"B\u00e0i to\u00e1n","text":"<p>Ng\u00e0y x\u1eeda ng\u00e0y x\u01b0a, c\u00f3 \\(N\\) tr\u1ecb tr\u1ea5n ki\u1ec3u trung c\u1ecf trong khu t\u1ef1 tr\u1ecb Moldavian. C\u00e1c trh\u1ecb tr\u1ea5n n\u00e0y \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). Th\u1ecb tr\u1ea5n \\(1\\) l\u00e0 th\u1ee7 \u0111\u00f4. C\u00e1c th\u1ecb tr\u1ea5n \u0111\u01b0\u1ee3c n\u1ed1i v\u1edbi nhau b\u1eb1ng \\(N-1\\) con \u0111\u01b0\u1eddng hai chi\u1ec3u, m\u1ed7i con \u0111\u01b0\u1eddng c\u00f3 \u0111\u1ed9 d\u00e0i \u0111\u01b0\u1ee3c \u0111o b\u1eb1ng km. C\u00f3 duy nh\u1ea5t m\u1ed9t tuy\u1ebfn \u0111\u01b0\u1eddng n\u1ed1i gi\u1eefa hai \u0111i\u1ec3m b\u1ea5t k\u1ef3 (\u0111\u1ed3 th\u1ecb c\u00e1c con \u0111\u01b0\u1eddng l\u00e0 h\u00ecnh c\u00e2y). M\u1ed7i th\u1ecb tr\u1ea5n kh\u00f4ng ph\u1ea3i trung t\u00e2m c\u00f3 m\u1ed9t ng\u01b0\u1eddi truy\u1ec1n tin.</p> <p>Khi m\u1ed9t th\u1ecb tr\u1ea5n b\u1ecb t\u1ea5n c\u00f4ng, t\u00ecnh h\u00ecnh chi\u1ebfn s\u1ef1 c\u1ea7n \u0111\u01b0\u1ee3c b\u1ea3o v\u1ec1 th\u1ee7 \u0111\u00f4 c\u00e0ng s\u1edbm c\u00e0ng t\u1ed1t. M\u1ed9i th\u00f4ng \u0111i\u1ec7p \u0111\u01b0\u1ee3c truy\u1ec1n b\u1eb1ng c\u00e1c ng\u01b0\u1eddi truy\u1ec1n tin. M\u1ed7i ng\u01b0\u1eddi truy\u1ec1n tin \u0111\u01b0\u1ee3c \u0111\u1eb7c tr\u01b0ng b\u1edfi l\u01b0\u1ee3ng th\u1eddi gian kh\u1edfi \u0111\u1ed9ng v\u00e0 v\u1eadn t\u1ed1c kh\u00f4ng \u0111\u1ed5i sau khi xu\u1ea5t ph\u00e1t.</p> <p>Th\u00f4ng \u0111i\u1ec7p lu\u00f4n \u0111\u01b0\u1ee3c truy\u1ec1n tr\u00ean con \u0111\u01b0\u1eddng ng\u1eafn nh\u1ea5t \u0111\u1ebfn trung t\u00e2m. Ban \u0111\u1ea7u, th\u00f4ng tin chi\u1ebfn s\u1ef1 \u0111\u01b0\u1ee3c \u0111\u01b0a cho ng\u01b0\u1eddi truy\u1ec1n tin t\u1ea1i th\u1ecb tr\u1ea5n b\u1ecb t\u1ea5n c\u00f4ng. T\u1eeb th\u1ecb tr\u1ea5n \u0111\u00f3 ng\u01b0\u1eddi truy\u1ec1n tin s\u1ebd \u0111i theo con \u0111\u01b0\u1eddng v\u1ec1 g\u1ea7n th\u1ee7 \u0111\u00f4 h\u01a1n. Khi \u0111\u1ebfn m\u1ed9t th\u1ecb tr\u1ea5n m\u1edbi v\u1eeba \u0111\u1ebfn. L\u01b0u \u00fd r\u1eb1ng khi chuy\u1ec3n sang ng\u01b0\u1eddi truy\u1ec1n tin m\u1edbi th\u00ec ng\u01b0\u1eddi n\u00e0y c\u1ea7n m\u1ed9t l\u01b0\u1ee3ng th\u1eddi gian \u0111\u1ec3 kh\u1edfi \u0111\u1ed9ng r\u1ed3i m\u1edbi \u0111i chuy\u1ec3n tin. Nh\u01b0 v\u1eady, th\u00f4ng \u0111i\u1ec7p s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n b\u1eb1ng m\u1ed9t s\u1ed1 ng\u01b0\u1eddi truy\u1ec1n tin tr\u01b0\u1edbc khi \u0111\u1ebfn th\u1eed \u0111\u00f4.</p> <p>H\u00e3y x\u00e1c \u0111\u1ecbnh th\u1eddi gian \u00edt nh\u1ea5t c\u1ea7n chuy\u1ec3n tin t\u1eeb c\u00e1c th\u1ecb tr\u1ea5n v\u1ec1 th\u1ee7 \u0111\u00f4.</p> <p>Input  - D\u00f2ng \u0111\u1ea7u ghi s\u1ed1 N.  - \\(N-1\\) d\u00f2ng ti\u1ebfp theo, m\u1ed7i d\u00f2ng ghi ba s\u1ed1 \\(u\\), \\(v\\), v\u00e0 \\(d\\) th\u1ec3 hi\u1ec7n m\u1ed9t con \u0111\u01b0\u1eddng n\u1ed1i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) v\u1edbi \u0111\u1ed9 d\u00e0i b\u1eb1ng \\(d\\).  - \\(N-1\\) d\u00f2ng ti\u1ebfp theo, d\u00f2ng th\u1ee9 \\(i\\) g\u1ed3m hai s\u1ed1 \\(S_i\\) v\u00e0 \\(V_i\\) th\u1ec3 hi\u1ec7n th\u1eddi gian c\u1ea7n \u0111\u1ec3 kh\u1edfi \u0111\u1ed9ng v\u00e0 s\u1ed1 l\u01b0\u1ee3ng ph\u00fat \u0111\u1ec3 \u0111i \u0111\u01b0\u1ee3c \\(1\\) km c\u1ee7a ng\u01b0\u1eddi truy\u1ec1n tin \u1edf th\u1ecb tr\u1ea5n \\(i+1\\).</p> <p>Output  - Ghi \\(N-1\\) s\u1ed1 tr\u00ean m\u1ed9t d\u00f2ng. S\u1ed1 th\u1ee9 \\(i\\) th\u1ec3 hi\u1ec7n th\u1eddi gian \u00edt nh\u1ea5t c\u1ea7n truy\u1ec1n tin t\u1eeb th\u00e0nh ph\u1ed1 \\(i+1\\) v\u1ec1 th\u1ee7 \u0111\u00f4.</p> <p>V\u00ed d\u1ee5 <pre><code>Input\n5\n1 2 20\n2 3 12\n2 4 1\n4 5 3\n26 9\n1 10\n500 2\n2 30\n\nOutput\n206 321 542 328\n</code></pre></p> <p>Gi\u1edbi h\u1ea1n  - \\(3 \\le N \\le 100 000\\)  - \\(0 \\le S_i, V_i \\le 10^9\\)  - \u0110\u1ed9 d\u00e0i m\u1ed7i con \u0111\u01b0\u1eddng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(10000\\)</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#loi-giai","title":"L\u1eddi gi\u1ea3i","text":"<p>Thu\u1eadt to\u00e1n QH\u0110</p> <p>G\u1ecdi \\(F(i)\\) l\u00e0 th\u1eddi gian \u00edt nh\u1ea5t \u0111\u1ec3 truy\u1ec1n tin t\u1eeb th\u00e0nh ph\u1ed1 th\u1ee9 \\(i\\) \u0111\u1ebfn th\u1ee7 \u0111\u00f4, ta c\u00f3 c\u00f4ng th\u1ee9c truy h\u1ed3i:</p> <p>\\(F(i) = min[ F(j) + dist(j, i) * V_i + S_i ]\\)</p> <p>v\u1edbi \\(j\\) l\u00e0 m\u1ed9t n\u00fat tr\u00ean \u0111\u01b0\u1eddng t\u1eeb th\u00e0nh ph\u1ed1 \\(i\\) \u0111\u1ebfn th\u00e0nh ph\u1ed1 \\(1\\). Trong \u0111\u00f3 \\(dist(j, i)\\) l\u00e0 kho\u1ea3ng c\u00e1ch gi\u1eefa 2 th\u00e0nh ph\u1ed1 \\(i\\) v\u00e0 \\(j\\), c\u00f3 th\u1ec3 t\u00ednh trong \\(O(1)\\) s\u1eed d\u1ee5ng m\u1ea3ng c\u1ed9ng d\u1ed3n \\(D[]\\) v\u1edbi \\(D[i]\\) l\u00e0 kho\u1ea3ng c\u00e1ch t\u1eeb th\u00e0nh ph\u1ed1 \\(i\\) t\u1edbi th\u1ee7 \u0111\u00f4. Thu\u1eadt to\u00e1n n\u00e0y c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng c\u00e0i \u0111\u1eb7t v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(N^2)\\).</p> <p>\u00c1p d\u1ee5ng bao l\u1ed3i</p> <p>C\u00f4ng th\u1ee9c truy h\u1ed3i c\u00f3 th\u1ec3 vi\u1ebft l\u1ea1i th\u00e0nh</p> <p>\\(F(i) = min[ F(j) - D_j * V_i + D_i * V_i + S_i ]\\)</p> <p>Khi ta t\u00ednh \\(F(i)\\), th\u00ec gi\u00e1 tr\u1ecb \\(D_i*V_i + S_i\\) l\u00e0 h\u1eb1ng s\u1ed1 v\u1edbi m\u1ecdi \\(j\\), v\u00ec v\u1eady</p> <p>\\(F(i) = min[ F(j) - D_j * V_i ] + D_i * V_i + S_i\\)</p> <p>C\u00f3 th\u1ec3 th\u1ea5y r\u1eb1ng ta c\u1ea7n t\u00ecm gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a h\u00e0m b\u1eadc nh\u1ea5t \\(y = -D_j*x + F(j)\\) \\(y = ax + b\\)&gt;. V\u1edbi tr\u01b0\u1eddng h\u1ee3p c\u00e2y l\u00e0 \u0111\u01b0\u1eddng th\u1eb3ng, ta c\u00f3 th\u1ec3 tr\u1ef1c ti\u1ebfp k\u1ef9 thu\u1eadt \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf ph\u1ea7n tr\u01b0\u1edbc. Trong tr\u01b0\u1eddng h\u1ee3p t\u1ed5ng qu\u00e1t, ta c\u1ea7n m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p x\u1eed l\u00ed hai thao t\u00e1c: <ul> <li>Khi DFS xu\u1ed1ng m\u1ed9t n\u00fat con, ta c\u1ea7n th\u00eam m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng.</li> <li>Khi qu\u00e1 tr\u00ecnh DFS t\u00ednh \\(F[]\\) cho g\u1ed1c c\u00e2y con \u0111\u00e3 ho\u00e0n t\u1ea5t, ta c\u1ea7n x\u00f3a m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng, tr\u1ea3 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u v\u1ec1 tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u.</li> </ul> <p>C\u00e1c thao t\u00e1c n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n hi\u1ec7u qu\u1ea3 trong \\(O(logN)\\). C\u1ee5 th\u1ec3 ta s\u1ebd bi\u1ec3u di\u1ec5n stack b\u1eb1ng m\u1ed9t m\u1ea3ng c\u0169ng m\u1ed9t bi\u1ebfn \\(size\\) (k\u00edch th\u01b0\u1edbc stack). Khi th\u00eam m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng v\u00e0o, ta s\u1ebd t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n v\u1ecb tr\u00ed m\u1edbi c\u1ee7a n\u00f3, r\u1ed3i ch\u1ec9nh s\u1eeda bi\u1ebfn \\(size\\) cho ph\u00f9 h\u1ee3p, ch\u00fa \u00fd l\u00e0 s\u1ebd c\u00f3 t\u1ed1i \u0111a m\u1ed9t \u0111\u01b0\u1eddng th\u1eb3ng b\u1ecb ghi \u0111\u00e8, n\u00ean ta ch\u1ec9 c\u1ea7n l\u01b0u l\u1ea1i n\u00f3. Khi c\u1ea7n tr\u1ea3 v\u1ec1 tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u, ta ch\u1ec9 c\u1ea7n ch\u1ec9nh s\u1eeda l\u1ea1i bi\u1ebfn \\(size\\) \u0111\u1ed3ng th\u1eddi ghi l\u1ea1i \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u00e3 b\u1ecb ghi \u0111\u00e8 tr\u01b0\u1edbc \u0111\u00f3. \u0110\u1ec3 qu\u1ea3n l\u00ed l\u1ecbch s\u1eed c\u00e1c thao t\u00e1c ta s\u1eed d\u1ee5ng m\u1ed9t \\(vector\\) l\u01b0u l\u1ea1i ch\u00fang. \u0110\u1ed9 ph\u1ee9c t\u1ea1p cho to\u00e0n b\u1ed9 thu\u1eadt to\u00e1n l\u00e0 \\(O(NlogN)\\).</p> <pre><code>## include &lt;bits/stdc++.h&gt;\n## define X first\n## define Y second\n\nconst int N = 100005;\nconst long long INF = (long long)1e18;\n\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; Line;\n\nstruct operation {\n    int pos, top;\n    Line overwrite;\n    operation(int _p, int _t, Line _o) {\n        pos = _p; top = _t; overwrite = _o;\n    }\n};\nvector&lt;operation&gt; undoLst;\nLine lines[N];\nint n, top;\n\nlong long eval(Line line, long long x) {return line.X * x + line.Y;}\nbool bad(Line a, Line b, Line c)\n    {return (double)(b.Y - a.Y) / (a.X - b.X) &gt;= (double)(c.Y - a.Y) / (a.X - c.X);}\n\nlong long getMin(long long coord) {\n    int l = 0, r = top - 1; long long ans = eval(lines[l], coord);\n    while (l &lt; r) {\n        int mid = l + r &gt;&gt; 1;\n        long long x = eval(lines[mid], coord);\n        long long y = eval(lines[mid + 1], coord);\n        if (x &gt; y) l = mid + 1; else r = mid;\n        ans = min(ans, min(x, y));\n    }\n    return ans;\n}\n\nbool insertLine(Line newLine) {\n    int l = 1, r = top - 1, k = top;\n    while (l &lt;= r) {\n        int mid = l + r &gt;&gt; 1;\n        if (bad(lines[mid - 1], lines[mid], newLine)) {\n            k = mid; r = mid - 1;\n        }\n        else l = mid + 1;\n    }\n    undoLst.push_back(operation(k, top, lines[k]));\n    top = k + 1;\n    lines[k] = newLine;\n    return 1;\n}\n\nvoid undo() {\n    operation ope = undoLst.back(); undoLst.pop_back();\n    top = ope.top; lines[ope.pos] = ope.overwrite;\n}\n\nlong long f[N], S[N], V[N], d[N];\nvector&lt;Line&gt; a[N];\n\nvoid dfs(int u, int par) {\n    if (u &gt; 1)\n        f[u] = getMin(V[u]) + S[u] + V[u] * d[u];\n    insertLine(make_pair(-d[u], f[u]));\n    for (vector&lt;Line&gt;::iterator it = a[u].begin(); it != a[u].end(); ++it) {\n        int v = it-&gt;X;\n        int uv = it-&gt;Y;\n        if (v == par) continue;\n        d[v] = d[u] + uv;\n        dfs(v, u);\n    }\n    undo();\n}\n\nint main() {\n    ios::sync_with_stdio(0); cin.tie(0);\n    cin &gt;&gt; n;\n    int u, v, c;\n    for (int i = 1; i &lt; n; ++i) {\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;\n        a[u].push_back(make_pair(v, c));\n        a[v].push_back(make_pair(u, c));\n    }\n    for (int i = 2; i &lt;= n; ++i) cin &gt;&gt; S[i] &gt;&gt; V[i];\n    dfs(1, 0);\n    for (int i = 2; i &lt;= n; ++i) cout &lt;&lt; f[i] &lt;&lt; ' ';\n    return 0;\n}\n</code></pre>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#bien-the-ong-fully-dynamic-variant","title":"Bi\u1ebfn th\u1ec3 \u0111\u1ed9ng (Fully Dynamic Variant)","text":"<p>K\u0129 thu\u1eadt n\u00e0y c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n khi c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c th\u00eam tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n hay c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u01b0\u1ee3c th\u00eam v\u00e0o theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n c\u1ee7a h\u1ec7 s\u1ed1 g\u00f3c. Ho\u1eb7c v\u1edbi c\u1ea5u tr\u00fac deque ch\u00fang ta c\u0169ng c\u00f3 th\u1ec3 th\u00eam nh\u1eefng \u0111\u01b0\u1eddng th\u1eb3ng c\u00f3 h\u1ec7 s\u1ed1 g\u00f3c l\u1edbn h\u01a1n h\u1ebft c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng \u0111\u00e3 c\u00f3. Nh\u01b0ng c\u00f3 nh\u1eefng l\u00fac s\u1ebd c\u00f3 c\u00e1c b\u00e0i to\u00e1n khi ch\u00fang ta ph\u1ea3i gi\u1ea3i quy\u1ebft c\u00e1c truy v\u1ea5n v\u00e0 th\u00eam \u0111\u01b0\u1eddng th\u1eb3ng l\u1ed3ng v\u00e0o nhau v\u1edbi c\u00e1c h\u1ec7 s\u1ed1 g\u00f3c ng\u1eabu nhi\u00ean. Ch\u00fang ta kh\u00f4ng th\u1ec3 s\u1eafp x\u1ebfp l\u1ea1i tr\u01b0\u1edbc (do b\u1ecb l\u1ed3ng v\u00e0o truy v\u1ea5n) v\u00e0 kh\u00f4ng th\u1ec3 s\u1eafp x\u1ebfp l\u1ea1i v\u1edbi m\u1ed7i l\u1ea7n th\u00eam \u0111\u01b0\u1eddng th\u1eb3ng (v\u1eady s\u1ebd cho ta m\u1ed9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p tuy\u1ebfn t\u00ednh v\u1edbi m\u1ed7i truy v\u1ea5n).</p> <p>C\u00f3 t\u1ed3n t\u1ea1i m\u1ed9t c\u00e1ch \u0111\u1ec3 th\u00eam c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng ng\u1eabu nhi\u00ean v\u00e0o trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p log. Ch\u00fang ta l\u01b0u c\u00e1c \u0111o\u1ea1n th\u1eb3ng trong m\u1ed9t c\u1ea5u tr\u00fac c\u00f3 th\u1ee9 t\u1ef1 \u0111\u1ed9ng nh\u01b0 <code>std::set</code> c\u1ee7a C++. M\u1ed7i \u0111\u01b0\u1eddng th\u1eb3ng ch\u1ee9a h\u1ec7 s\u1ed1 g\u00f3c v\u00e0 giao \u0111i\u1ec3m \\(y\\) (s\u1eafp x\u1ebfp theo h\u1ec7 s\u1ed1 g\u00f3c tr\u01b0\u1edbc r\u1ed3i theo \\(y\\))  c\u00f9ng v\u1edbi m\u1ed9t bi\u1ebfn \\(left\\) th\u00eam, \\(x\\) nh\u1ecf nh\u1ea5t sao cho \u0111\u01b0\u1eddng th\u1eb3ng n\u00e0y \u0111\u1ea1t c\u1ef1c ti\u1ec3u trong t\u1eadp c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng.  S\u1eafp \u0111\u01b0\u1eddng th\u1eb3ng n\u00e0y v\u00e0o v\u1ecb tr\u00ed \u0111\u00fang c\u1ee7a n\u00f3 v\u00e0 nh\u1eefng \u0111\u01b0\u1eddng b\u1ecb lo\u1ea1i s\u1ebd l\u00e0 c\u00e1c \u0111\u01b0\u1eddng li\u00ean ti\u1ebfp k\u1ebf b\u00ean n\u00f3. Ch\u00fang ta d\u00f9ng c\u00e1c \u0111i\u1ec1u ki\u1ec7n t\u01b0\u01a1ng t\u1ef1 tr\u00ean \u0111\u1ec3 b\u1ecf c\u00e1c \u0111\u01b0\u1eddng th\u1eb3ng b\u00ean tr\u00e1i v\u00e0 b\u00ean ph\u1ea3i n\u00f3.</p> <p>\u0110\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n, ch\u00fang ta d\u00f9ng m\u1ed9t set n\u1eefa d\u00f9ng ch\u00ednh c\u00e1c bi\u1ebfn \u1ea5y nh\u01b0ng l\u1ea1i s\u1eafp x\u1ebfp theo \\(left\\). V\u1eady m\u1ed7i l\u1ea7n truy v\u1ea5n ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ch\u1eb7t nh\u1ecb ph\u00e2n \u0111\u1ec3 t\u00ecm ra k\u1ebft qu\u1ea3 nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean.</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#code","title":"Code","text":"<p>Code C++ cho \"acquire\"</p> <p>Code C++ cho \"commando\"</p>"},{"location":"translate/wcipeg/Convex-Hull-Trick/#bai-tap","title":"B\u00e0i t\u1eadp:","text":"<ul> <li>B\u00e0i J - ACM ICPC Vietnam Regional 2017</li> <li>VNOJ-NKLEAVES</li> </ul>"},{"location":"translate/wcipeg/Convex-Hull/","title":"Bao l\u1ed3i (Convex Hull)","text":"<p>Ngu\u1ed3n: wcipeg</p> <p>T\u00e1c gi\u1ea3:  - L\u00ea Minh Ho\u00e0ng - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM</p> <p>Reviewer: - H\u1ed3 Ng\u1ecdc V\u0129nh Ph\u00e1t - \u0110\u1ea1i h\u1ecdc Khoa h\u1ecdc T\u1ef1 nhi\u00ean, \u0110HQG-HCM - Ng\u00f4 Nh\u1eadt Quang - HUS High School for Gifted Students</p>"},{"location":"translate/wcipeg/Convex-Hull/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong h\u00ecnh h\u1ecdc t\u00ednh to\u00e1n (computational geometry), bao l\u1ed3i (convex hull) c\u1ee7a m\u1ed9t t\u1eadp \u0111i\u1ec3m l\u00e0 t\u1eadp l\u1ed3i (convex set) nh\u1ecf nh\u1ea5t (theo di\u1ec7n t\u00edch, th\u1ec3 t\u00edch, ...) m\u00e0 t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m \u0111\u1ec1u n\u1eb1m trong t\u1eadp \u0111\u00f3.</p> <p>Theo m\u1ed9t c\u00e1ch tr\u1ef1c quan, n\u1ebfu ta coi nh\u1eefng \u0111i\u1ec3m trong m\u1ed9t t\u1eadp h\u1ee3p l\u00e0 nh\u1eefng c\u00e1i \u0111inh \u0111\u00f3ng tr\u00ean m\u1ed9t t\u1ea5m g\u1ed7, bao l\u1ed3i c\u1ee7a t\u1eadp \u0111i\u1ec3m \u0111\u00f3 c\u00f3 vi\u1ec1n ngo\u00e0i t\u1ea1o b\u1edfi s\u1ee3i d\u00e2y chun m\u1eafc v\u00e0o nh\u1eefng c\u00e1i \u0111inh sau khi b\u1ecb k\u00e9o c\u0103ng v\u1ec1 c\u00e1c ph\u00eda.</p> <p></p>"},{"location":"translate/wcipeg/Convex-Hull/#cac-thuat-toan-tim-bao-loi-tren-mat-phang","title":"C\u00e1c thu\u1eadt to\u00e1n t\u00ecm bao l\u1ed3i tr\u00ean m\u1eb7t ph\u1eb3ng","text":"<p>B\u00e0i to\u00e1n t\u00ecm bao l\u1ed3i c\u1ee7a m\u1ed9t t\u1eadp \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng l\u00e0 m\u1ed9t trong nh\u1eefng b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c nghi\u00ean c\u1ee9u nhi\u1ec1u nh\u1ea5t trong h\u00ecnh h\u1ecdc t\u00ednh to\u00e1n v\u00e0 c\u00f3 r\u1ea5t nhi\u1ec1u thu\u1eadt to\u00e1n \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n n\u00e0y. Sau \u0111\u00e2y l\u00e0 ba thu\u1eadt to\u00e1n ph\u1ed5 bi\u1ebfn nh\u1ea5t, \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n v\u1ec1 \u0111\u1ed9 kh\u00f3.</p> <p>Ch\u00fa \u00fd 1: B\u1ea1n \u0111\u1ecdc n\u00ean xem qua H\u00ecnh h\u1ecdc t\u00ednh to\u00e1n ph\u1ea7n 1 v\u00e0 H\u00ecnh h\u1ecdc t\u00ednh to\u00e1n ph\u1ea7n 2 tr\u01b0\u1edbc khi ti\u1ebfp t\u1ee5c \u0111\u1ec3 bi\u1ebft v\u1ec1 c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n.</p> <p>Ch\u00fa \u00fd 2: B\u1ea1n \u0111\u1ecdc n\u00ean hi\u1ec3u ph\u1ea7n thu\u1eadt to\u00e1n tr\u01b0\u1edbc khi \u0111\u1ecdc ph\u1ea7n c\u00e0i \u0111\u1eb7t \u0111\u1ec3 d\u1ec5 hi\u1ec3u h\u01a1n.</p>"},{"location":"translate/wcipeg/Convex-Hull/#thuat-toan-boc-goi-qua-gift-wrapping-algorithm","title":"Thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i qu\u00e0 (Gift wrapping algorithm)","text":"<p>Thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i qu\u00e0, hay c\u00f2n g\u1ecdi l\u00e0 thu\u1eadt to\u00e1n Jarvis march, l\u00e0 m\u1ed9t trong nh\u1eefng thu\u1eadt to\u00e1n t\u00ecm bao l\u1ed3i \u0111\u01a1n gi\u1ea3n v\u00e0 d\u1ec5 hi\u1ec3u nh\u1ea5t. T\u00ean thu\u1eadt to\u00e1n xu\u1ea5t ph\u00e1t t\u1eeb s\u1ef1 t\u01b0\u01a1ng t\u1ef1 c\u1ee7a thu\u1eadt to\u00e1n v\u1edbi vi\u1ec7c \u0111i b\u1ed9 xung quanh c\u00e1c \u0111i\u1ec3m v\u00e0 c\u1ea7m theo m\u1ed9t d\u1ea3i b\u0103ng g\u00f3i qu\u00e0.</p> source: wikipedia - Gift wrapping algorithm <p>Thu\u1eadt to\u00e1n n\u00e0y \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 nh\u01b0 sau: - B\u01b0\u1edbc \u0111\u1ea7u:     - Ch\u1ecdn \\(P\\) l\u00e0 \u0111i\u1ec3m tr\u00e1i nh\u1ea5t trong t\u1eadp c\u00e1c \u0111i\u1ec3m (\u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \\(P\\) n\u1eb1m trong t\u1eadp bao l\u1ed3i).     - Ch\u1ecdn h\u01b0\u1edbng ta \u0111ang nh\u00ecn \\(\\vec{v}\\) l\u00e0 t\u1eeb h\u01b0\u1edbng d\u01b0\u1edbi l\u00ean tr\u00ean. - Ti\u1ebfp theo, c\u00e1c b\u01b0\u1edbc s\u1ebd l\u1eb7p l\u1ea1i \u0111\u1ebfn khi t\u00ecm \u0111\u01b0\u1ee3c bao l\u1ed3i:     - Ta quay \\(\\vec{v}\\) theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 cho \u0111\u1ebfn khi ta nh\u00ecn th\u1ea5y m\u1ed9t \u0111i\u1ec3m, g\u1ecdi \u0111i\u1ec3m \u0111\u00f3 l\u00e0 \\(Q\\).     - Ta c\u1ea7m theo d\u1ea3i b\u0103ng v\u00e0 \u0111i \u0111\u1ebfn \u0111i\u1ec3m \\(Q\\).     - Khi ta \u0111\u1ebfn \\(Q\\), ta thay:         - \\(\\vec{v}\\) th\u00e0nh \\(\\overrightarrow{PQ}\\)         - \\(P\\) th\u00e0nh \\(Q\\) - Thu\u1eadt to\u00e1n k\u1ebft th\u00fac khi ta tr\u1edf v\u1ec1 \u0111i\u1ec3m ban \u0111\u1ea7u. L\u00fac n\u00e0y ta \u0111\u00e3 \u0111i \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u1ee7a bao l\u1ed3i theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3.</p> <p>V\u1edbi m\u1ed7i l\u1ea7n t\u00ecm \\(Q\\), ta duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m \\(R\\) trong t\u1eadp v\u00e0 t\u00ednh g\u00f3c t\u1ea1o b\u1edfi \\(\\vec{v}\\) v\u00e0 \\(\\overrightarrow{PR}\\), v\u00ec v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a m\u1ed7i l\u1ea7n t\u00ecm \u0111i\u1ec3m l\u00e0 \\(\\mathcal{O}(n)\\), v\u1edbi \\(n\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng \u0111i\u1ec3m trong t\u1eadp. G\u1ecdi s\u1ed1 \u0111i\u1ec3m thu\u1ed9c bao l\u1ed3i l\u00e0 \\(h\\), Khi \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(nh)\\)</p> Minh ho\u1ea1 c\u1ee7a thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i qu\u00e0 source: wikipedia - Gift wrapping algorithm"},{"location":"translate/wcipeg/Convex-Hull/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y l\u00e0 sai s\u1ed1 c\u1ee7a s\u1ed1 th\u1ef1c khi t\u00ednh g\u00f3c.</p> <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst double EPS = 1e-9;\n\n// Ki\u1ec3u \u0111i\u1ec3m\nstruct Point {\n    int x, y;\n    Point(int x = 0, int y = 0) : x(x), y(y) {}\n    bool operator==(const Point &amp;o) {\n        return x == o.x &amp;&amp; y == o.y;\n    }\n    bool operator!=(const Point &amp;o) {\n        return !(*this == o);\n    }\n    Point operator-(const Point &amp;o) {\n        return Point(x - o.x, y - o.y);\n    }\n    double length() const {\n        return sqrt(1LL * x * x + 1LL * y * y);\n    }\n};\n\n// T\u00edch v\u00f4 h\u01b0\u1edbng c\u1ee7a vector A v\u00e0 vector B\nlong long dot(const Point &amp;A, const Point &amp;B) {\n    return 1LL * A.x * B.x + 1LL * A.y * B.y;\n}\n\n// G\u00f3c gi\u1eefa vector A v\u00e0 vector B\ndouble calcAngle(const Point &amp;A, const Point &amp;B) {\n    return acos(dot(A, B) / A.length() / B.length());\n}\n\n// Tr\u1ea3 v\u1ec1 bao l\u1ed3i v\u1edbi th\u1ee9 t\u1ef1 c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nvector&lt;Point&gt; convexHull(vector&lt;Point&gt; p, int n) {\n    if (n &lt;= 2) return p;\n\n    // \u0110\u01b0a \u0111i\u1ec3m tr\u00e1i nh\u1ea5t l\u00ean \u0111\u1ea7u t\u1eadp\n    for (int i = 1; i &lt; p.size(); ++i) {\n        if (p[0].x &gt; p[i].x) swap(p[0], p[i]);\n    }\n\n    // T\u1eadp bao l\u1ed3i\n    vector&lt;Point&gt; hull;\n    hull.push_back(p[0]);\n\n    // D\u1ef1ng bao l\u1ed3i\n    do {\n        // \u0110\u1ec9nh cu\u1ed1i c\u1ee7a t\u1eadp hull\n        Point P = hull.back();\n\n        // \u0110\u1ec9nh k\u1ebf cu\u1ed1i c\u1ee7a t\u1eadp hull\n        // N\u1ebfu hull.size() == 1 th\u00ec \u0111\u1eb7t \u0111\u1ec9nh k\u1ebf cu\u1ed1i l\u00e0 (P.x, P.y - 1)\n        // V\u00ec ban \u0111\u1ea7u h\u01b0\u1edbng \u0111ang nh\u00ecn l\u00e0 t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean\n        Point P0 = (hull.size() == 1 ? Point(P.x, P.y - 1) : hull[hull.size() - 2]);\n\n        // Q l\u00e0 \u0111\u1ec9nh ti\u1ebfp theo c\u1ee7a t\u1eadp hull\n        Point Q      = p[0];\n        double angle = calcAngle(P0 - P, Q - P);\n\n        for (int i = 1; i &lt; n; ++i) {\n            if (Q == P || Q == P0) {\n                Q     = p[i];\n                angle = calcAngle(P0 - P, Q - P);\n                continue;\n            }\n            if (p[i] == P || p[i] == P0) continue;\n\n            double newAngle = calcAngle(P0 - P, p[i] - P);\n            // N\u1ebfu g\u00f3c (P0, P, Q) nh\u1ecf h\u01a1n g\u00f3c (P0, P, p[i]) th\u00ec g\u00e1n Q = p[i]\n            if (abs(angle - newAngle) &gt; EPS) {\n                if (angle &lt; newAngle) {\n                    Q     = p[i];\n                    angle = newAngle;\n                }\n            }\n            else {\n                if ((Q - P).length() &gt; (p[i] - P).length()) {\n                    Q     = p[i];\n                    angle = newAngle;\n                }\n            }\n        }\n        hull.push_back(Q);\n    } while (hull[0] != hull.back());\n\n    // \u0110\u1ec9nh \u0111\u1ea7u ti\u00ean l\u1eb7p l\u1ea1i \u1edf cu\u1ed1i 1 l\u1ea7n\n    hull.pop_back();\n\n    return hull;\n}\n</code></pre>"},{"location":"translate/wcipeg/Convex-Hull/#thuat-toan-graham-graham-scan","title":"Thu\u1eadt to\u00e1n Graham (Graham scan)","text":"<p>Thu\u1eadt to\u00e1n Graham c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t nh\u1ecf h\u01a1n thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i, song thu\u1eadt to\u00e1n Graham l\u1ea1i ph\u1ee9c t\u1ea1p h\u01a1n. - \u0110\u1ea7u ti\u00ean, ta x\u00e1c \u0111\u1ecbnh m\u1ed9t \u0111i\u1ec3m m\u00e0 ch\u1eafc ch\u1eafn thu\u1ed9c bao l\u1ed3i. Th\u00f4ng th\u01b0\u1eddng, khi c\u00e0i \u0111\u1eb7t ng\u01b0\u1eddi ta ch\u1ecdn \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 nh\u1ecf nh\u1ea5t (n\u1ebfu c\u00f3 nhi\u1ec1u \u0111i\u1ec3m nh\u01b0 v\u1eady th\u00ec ch\u1ecdn \u0111i\u1ec3m tr\u00e1i nh\u1ea5t). G\u1ecdi \u0111i\u1ec3m n\u00e0y l\u00e0 \u0111i\u1ec3m \\(O\\). - Ch\u1ecdn h\u1ec7 tr\u1ee5c t\u1ecda \u0111\u1ed9 c\u00f3 g\u1ed1c l\u00e0 \u0111i\u1ec3m \\(O\\) v\u1eeba ch\u1ecdn, s\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m c\u00f2n l\u1ea1i theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a g\u00f3c t\u1ea1o b\u1edfi tr\u1ee5c ho\u00e0nh theo chi\u1ec1u d\u01b0\u01a1ng v\u00e0 \\(\\overrightarrow{OI}\\) v\u1edbi \\(I\\) l\u00e0 m\u1ed9t trong c\u00e1c \u0111i\u1ec3m c\u00f2n l\u1ea1i. - G\u1ecdi t\u1eadp bao l\u1ed3i hi\u1ec7n t\u1ea1i l\u00e0 \\(H\\) v\u00e0 \u0111i\u1ec3m cu\u1ed1i c\u1ee7a t\u1eadp bao l\u1ed3i \\(H\\) l\u00e0 \\(H_h\\) (ban \u0111\u1ea7u \\(h = 1\\), t\u1ee9c t\u1eadp \\(H\\) ch\u1ec9 ch\u1ee9a \\(O\\)). - Duy\u1ec7t theo th\u1ee9 t\u1ef1 c\u00e1c \u0111i\u1ec3m v\u1eeba s\u1eafp x\u1ebfp. V\u1edbi m\u1ed7i \u0111i\u1ec3m ta s\u1eeda l\u1ea1i bao l\u1ed3i \\(H\\):     - Th\u00eam \u0111i\u1ec3m \\(P\\) v\u00e0o cu\u1ed1i bao l\u1ed3i \\(H\\) (t\u1ee9c l\u00e0 ta t\u0103ng \\(h\\) l\u00ean \\(1\\) v\u00e0 \u0111\u1eb7t \\(H_h = P\\)).     - N\u1ebfu \\(h &lt; 3\\), ta b\u1ecf qua b\u01b0\u1edbc \\(3\\) v\u00e0 x\u00e9t \u0111i\u1ec3m ti\u1ebfp theo.     - X\u00e9t \\(3\\) \u0111i\u1ec3m \\(H_{h-2}, H_{h-1}\\) v\u00e0 \\(H_h\\). G\u1ecdi \\(\\vec{u} = \\overrightarrow{H_{h-2}H_{h-1}}\\) v\u00e0 \\(\\vec{v} = \\overrightarrow{H_{h-1}H_h}\\).         - N\u1ebfu \\(\\vec{u}\\times\\vec{v}&gt;0\\), t\u1ee9c l\u00e0 th\u1ee9 t\u1ef1 c\u1ee7a \\(H_{h-2}, H_{h-1}\\), \\(H_h\\) l\u00e0 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3, th\u00ec c\u1ea3 \\(3\\) \u0111i\u1ec3m \u0111\u1ec1u t\u1ea1m th\u1eddi thu\u1ed9c bao l\u1ed3i \\(H\\), v\u00e0 ta x\u00e9t \u0111i\u1ec3m ti\u1ebfp theo.         - Nh\u01b0ng n\u1ebfu \\(\\vec{u}\\times\\vec{v}&lt;0\\), t\u1ee9c l\u00e0 g\u00f3c \\(\\widehat{H_{h-2}H_{h-1}H_h}\\) s\u1ebd t\u1ea1o ra ph\u1ea7n l\u00f5m, th\u00ec ta b\u1ecf \u0111i\u1ec3m \\(H_{h-1}\\) ra kh\u1ecfi bao l\u1ed3i \\(H\\) (t\u1ee9c l\u00e0 ta \u0111\u1eb7t \\(H_{h-1} = H_h\\) gi\u1ea3m \\(h\\) \u0111i \\(1\\)) v\u00e0 quay l\u1ea1i b\u01b0\u1edbc \\(2\\).</p> <p>V\u1ec1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n, ta th\u1ea5y b\u01b0\u1edbc s\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n\\log{n})\\). M\u1ed7i \u0111i\u1ec3m \u0111\u01b0\u1ee3c th\u00eam/xo\u00e1 nhi\u1ec1u nh\u1ea5t m\u1ed9t l\u1ea7n n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1c b\u01b0\u1edbc th\u00eam/xo\u00e1 \u0111i\u1ec3m l\u00e0 \\(\\mathcal{O}(n)\\). V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n Graham l\u00e0 \\(\\mathcal{O}(n\\log{n})\\), ph\u00f9 h\u1ee3p cho h\u1ea7u h\u1ebft c\u00e1c b\u00e0i to\u00e1n.</p> /uploads/algo_geometry_convex_hull_graham_scan.gif Minh ho\u1ea1 c\u1ee7a thu\u1eadt to\u00e1n Graham source: wikipedia - Graham scan"},{"location":"translate/wcipeg/Convex-Hull/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// Ki\u1ec3u \u0111i\u1ec3m\nstruct Point {\n    int x, y;\n};\n\n// T\u00edch c\u00f3 h\u01b0\u1edbng c\u1ee7a AB v\u00e0 AC\nlong long cross(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return 1LL * (B.x - A.x) * (C.y - A.y) - 1LL * (C.x - A.x) * (B.y - A.y);\n}\n\n// A -&gt; B -&gt; C \u0111i theo th\u1ee9 t\u1ef1 theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (-1), th\u1eb3ng h\u00e0ng (0), ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (1)\nint ccw(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    long long S = cross(A, B, C);\n    if (S &lt; 0) return -1;\n    if (S == 0) return 0;\n    return 1;\n}\n\n// Tr\u1ea3 v\u1ec1 bao l\u1ed3i v\u1edbi th\u1ee9 t\u1ef1 c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nvector&lt;Point&gt; convexHull(vector&lt;Point&gt; p, int n) {\n    // \u0110\u01b0a \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 nh\u1ecf nh\u1ea5t (v\u00e0 tr\u00e1i nh\u1ea5t) l\u00ean \u0111\u1ea7u t\u1eadp\n    for (int i = 1; i &lt; n; ++i) {\n        if (p[0].y &gt; p[i].y || (p[0].y == p[i].y &amp;&amp; p[0].x &gt; p[i].x)) {\n            swap(p[0], p[i]);\n        }\n    }\n\n    // S\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m I theo g\u00f3c t\u1ea1o b\u1edfi tr\u1ee5c ho\u00e0nh theo chi\u1ec1u d\u01b0\u01a1ng v\u00e0 OI\n    sort(p.begin() + 1, p.end(), [&amp;p](const Point &amp;A, const Point &amp;B) {\n        int c = ccw(p[0], A, B);\n        if (c &gt; 0) return true;\n        if (c &lt; 0) return false;\n        return A.x &lt; B.x || (A.x == B.x &amp;&amp; A.y &lt; B.y);\n    });\n\n    // T\u1eadp bao l\u1ed3i\n    vector&lt;Point&gt; hull;\n    hull.push_back(p[0]);\n\n    // D\u1ef1ng bao l\u1ed3i\n    for (int i = 1; i &lt; n; ++i) {\n        while (hull.size() &gt;= 2 &amp;&amp; ccw(hull[hull.size() - 2], hull.back(), p[i]) &lt; 0) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n    return hull;\n}\n</code></pre>"},{"location":"translate/wcipeg/Convex-Hull/#thuat-toan-chuoi-on-ieu-monotone-chain-algorithm","title":"Thu\u1eadt to\u00e1n chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u (Monotone chain algorithm)","text":"<p>Thu\u1eadt to\u00e1n chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u v\u1eeba d\u1ec5 c\u00e0i \u0111\u1eb7t, v\u1eeba l\u00e0 thu\u1eadt to\u00e1n nhanh nh\u1ea5t trong \\(3\\) thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong b\u00e0i n\u00e0y. Thu\u1eadt to\u00e1n d\u1ef1a tr\u00ean vi\u1ec7c t\u00ecm hai chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u c\u1ee7a bao l\u1ed3i: bao tr\u00ean (hay chu\u1ed7i tr\u00ean) v\u00e0 bao d\u01b0\u1edbi (hay chu\u1ed7i d\u01b0\u1edbi).</p> source: wikibooks - Monotone chain <p>Ta th\u1ea5y \u0111i\u1ec3m \u1edf xa v\u1ec1 ph\u00eda b\u00ean tr\u00e1i nh\u1ea5t (t\u1eeb \u0111\u00e2y g\u1ecdi l\u00e0 \u0111i\u1ec3m tr\u00e1i nh\u1ea5t) v\u00e0 \u0111i\u1ec3m \u1edf xa v\u1ec1 ph\u00eda b\u00ean ph\u1ea3i nh\u1ea5t (t\u1eeb \u0111\u00e2y g\u1ecdi l\u00e0 \u0111i\u1ec3m ph\u1ea3i nh\u1ea5t) lu\u00f4n thu\u1ed9c bao l\u1ed3i. Ph\u1ea7n bao l\u1ed3i theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 t\u00ednh t\u1eeb \u0111i\u1ec3m tr\u00e1i nh\u1ea5t \u0111\u1ebfn \u0111i\u1ec3m ph\u1ea3i nh\u1ea5t g\u1ecdi l\u00e0 bao tr\u00ean tr\u00ean, ph\u1ea7n c\u00f2n l\u1ea1i c\u1ee7a bao l\u1ed3i g\u1ecdi l\u00e0 bao d\u01b0\u1edbi. Ta s\u1ebd t\u00ecm bao tr\u00ean v\u00e0 bao d\u01b0\u1edbi \u0111\u1ed9c l\u1eadp v\u1edbi nhau. - B\u01b0\u1edbc \u0111\u1ea7u ti\u00ean, ta s\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c cho theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n theo ho\u00e0nh \u0111\u1ed9. N\u1ebfu hai \u0111i\u1ec3m c\u00f3 c\u00f9ng ho\u00e0nh \u0111\u1ed9, \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 nh\u1ecf h\u01a1n s\u1ebd \u0111\u1ee9ng tr\u01b0\u1edbc. Sau b\u01b0\u1edbc n\u00e0y th\u00ec \u0111i\u1ec3m tr\u00e1i nh\u1ea5t s\u1ebd \u1edf \u0111\u1ea7u v\u00e0 \u0111i\u1ec3m ph\u1ea3i nh\u1ea5t s\u1ebd \u1edf cu\u1ed1i t\u1eadp \u0111i\u1ec3m. - Ta x\u00e9t vi\u1ec7c x\u00e2y d\u1ef1ng bao tr\u00ean. G\u1ecdi \\(H\\) l\u00e0 bao tr\u00ean hi\u1ec7n t\u1ea1i v\u00e0 \u0111\u1ed9 l\u1edbn c\u1ee7a bao l\u00e0 \\(h\\). \u0110i\u1ec3m \u0111\u1ea7u c\u1ee7a bao l\u00e0 \\(H_1\\) v\u00e0 \u0111i\u1ec3m cu\u1ed1i c\u1ee7a bao l\u00e0 \\(H_h\\). X\u00e9t t\u1eebng \u0111i\u1ec3m \\(P\\) theo th\u1ee9 t\u1ef1 \u0111\u00e3 s\u1eafp x\u1ebfp:     - Th\u00eam \\(P\\) v\u00e0o cu\u1ed1i bao tr\u00ean \\(H\\).     - N\u1ebfu \\(h &lt; 3\\), ta b\u1ecf qua b\u01b0\u1edbc \\(3\\) v\u00e0 x\u00e9t \u0111i\u1ec3m ti\u1ebfp theo.     - X\u00e9t \\(3\\) \u0111i\u1ec3m \\(H_{h-2}, H_{h-1}\\) v\u00e0 \\(H_h\\). G\u1ecdi \\(\\vec{u} = \\overrightarrow{H_{h-2}H_{h-1}}\\) v\u00e0 \\(\\vec{v} = \\overrightarrow{H_{h-1}H_h}\\).         - N\u1ebfu \\(\\vec{u}\\times\\vec{v}&lt;0\\), t\u1ee9c l\u00e0 th\u1ee9 t\u1ef1 c\u1ee7a \\(H_{h-2}, H_{h-1}\\), \\(H_h\\) l\u00e0 c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3, th\u00ec c\u1ea3 \\(3\\) \u0111i\u1ec3m \u0111\u1ec1u t\u1ea1m th\u1eddi thu\u1ed9c bao tr\u00ean \\(H\\), v\u00e0 ta x\u00e9t \u0111i\u1ec3m ti\u1ebfp theo.         - Nh\u01b0ng n\u1ebfu \\(\\vec{u}\\times\\vec{v}&gt;0\\), t\u1ee9c l\u00e0 g\u00f3c \\(\\widehat{H_{h-2}H_{h-1}H_h}\\) s\u1ebd t\u1ea1o ra ph\u1ea7n l\u00f5m \u1edf bao tr\u00ean, th\u00ec ta b\u1ecf \u0111i\u1ec3m \\(H_{h-1}\\) ra kh\u1ecfi bao l\u1ed3i \\(H\\) v\u00e0 quay l\u1ea1i b\u01b0\u1edbc \\(2\\).</p> <p>Sau khi x\u00e9t h\u1ebft c\u00e1c \u0111i\u1ec3m, \\(H\\) s\u1ebd ch\u1ee9a to\u00e0n b\u1ed9 ph\u1ea7n bao tr\u00ean. Sau \u0111\u00f3, ta t\u00ecm chu\u1ed7i bao d\u01b0\u1edbi b\u1eb1ng c\u00e1ch t\u01b0\u01a1ng t\u1ef1, ch\u1ec9 kh\u00e1c l\u00e0 ta x\u00e9t c\u00e1c \u0111i\u1ec3m theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c l\u1ea1i (t\u1ee9c l\u00e0 ta x\u00e9t \u0111i\u1ec3m ph\u1ea3i nh\u1ea5t tr\u01b0\u1edbc). L\u01b0u \u00fd kh\u00f4ng th\u00eam \u0111i\u1ec3m ph\u1ea3i nh\u1ea5t hai l\u1ea7n. Khi thu\u1eadt to\u00e1n k\u1ebft th\u00fac, \\(H\\) s\u1ebd ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u1ee7a bao l\u1ed3i, v\u1edbi \u0111i\u1ec3m \u0111\u1ea7u \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i \u1edf cu\u1ed1i.</p> <p>Thu\u1eadt to\u00e1n n\u00e0y c\u0169ng c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n\\log{n})\\). Thu\u1eadt to\u00e1n chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u \u0111\u01b0\u1ee3c khuy\u00ean d\u00f9ng \u1edf m\u1ecdi b\u00e0i to\u00e1n t\u00ecm bao l\u1ed3i, do n\u00f3 \u0111\u01a1n gi\u1ea3n h\u01a1n thu\u1eadt to\u00e1n Graham v\u00e0 nhanh h\u01a1n m\u1ed9t ch\u00fat (do ta kh\u00f4ng ph\u1ea3i t\u00ednh g\u00f3c).</p> /uploads/algo_geometry_convex_hull_monotone_algorithm.gif Minh ho\u1ea1 c\u1ee7a thu\u1eadt to\u00e1n chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u source: wikibooks - Monotone chain"},{"location":"translate/wcipeg/Convex-Hull/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Link b\u00e0i t\u1eadp: CSES - Convex Hull <pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// Ki\u1ec3u \u0111i\u1ec3m\nstruct Point {\n    int x, y;\n};\n\n// A -&gt; B -&gt; C \u0111i theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nbool ccw(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return 1LL * (B.x - A.x) * (C.y - A.y) - 1LL * (C.x - A.x) * (B.y - A.y) &gt; 0;\n}\n\n// Tr\u1ea3 v\u1ec1 bao l\u1ed3i v\u1edbi th\u1ee9 t\u1ef1 c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nvector&lt;Point&gt; convexHull(vector&lt;Point&gt; p, int n) {\n    // S\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m theo t\u1ecda \u0111\u1ed9 x, n\u1ebfu b\u1eb1ng nhau s\u1eafp x\u1ebfp theo y\n    sort(p.begin(), p.end(), [](const Point &amp;A, const Point &amp;B) {\n        if (A.x != B.x) return A.x &lt; B.x;\n        return A.y &lt; B.y;\n    });\n\n    // T\u1eadp bao l\u1ed3i\n    vector&lt;Point&gt; hull;\n    hull.push_back(p[0]);\n\n    // D\u1ef1ng bao tr\u00ean\n    for (int i = 1; i &lt; n; ++i) {\n        while (hull.size() &gt;= 2 &amp;&amp; ccw(hull[hull.size() - 2], hull.back(), p[i])) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n\n    // Ti\u1ebfp t\u1ee5c d\u1ef1ng bao d\u01b0\u1edbi\n    for (int i = n - 2; i &gt;= 0; --i) {\n        while (hull.size() &gt;= 2 &amp;&amp; ccw(hull[hull.size() - 2], hull.back(), p[i])) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n\n    // Xo\u00e1 \u0111\u1ec9\u1ec3m \u0111\u1ea7u \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i \u1edf cu\u1ed1i\n    if (n &gt; 1) hull.pop_back();\n\n    return hull;\n}\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;Point&gt; p(n);\n    for (Point &amp;a : p) {\n        cin &gt;&gt; a.x &gt;&gt; a.y;\n    }\n    vector&lt;Point&gt; hull = convexHull(p, n);\n\n    cout &lt;&lt; hull.size() &lt;&lt; '\\n';\n    for (Point p : hull) {\n        cout &lt;&lt; p.x &lt;&lt; ' ' &lt;&lt; p.y &lt;&lt; '\\n';\n    }\n}\n</code></pre></p>"},{"location":"translate/wcipeg/Convex-Hull/#xu-li-truong-hop-suy-bien","title":"X\u1eed l\u00ed tr\u01b0\u1eddng h\u1ee3p suy bi\u1ebfn","text":"<p>C\u00e1c thu\u1eadt to\u00e1n tr\u00ean ho\u1ea1t \u0111\u1ed9ng t\u1ed1t trong tr\u01b0\u1eddng h\u1ee3p l\u00ed t\u01b0\u1edfng, t\u1ee9c l\u00e0 kh\u00f4ng c\u00f3 hai \u0111i\u1ec3m n\u00e0o tr\u00f9ng nhau v\u00e0 kh\u00f4ng c\u00f3 ba \u0111i\u1ec3m n\u00e0o th\u1eb3ng h\u00e0ng. Tuy nhi\u00ean, trong h\u1ea7u h\u1ebft c\u00e1c b\u00e0i to\u00e1n, ta s\u1ebd ph\u1ea3i x\u1eed l\u00ed c\u00e1c \u0111i\u1ec3m tr\u00f9ng nhau v\u00e0 c\u00e1c b\u1ed9 ba \u0111i\u1ec3m th\u1eb3ng h\u00e0ng. Bi\u1ec7n lu\u1eadn t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p s\u1ebd l\u00e0 m\u1ed9t c\u00f4ng vi\u1ec7c kh\u00f3 nh\u1eb1n v\u00e0 nh\u00e0m ch\u00e1n. V\u00ec v\u1eady, h\u00e3y ghi nh\u1edb nh\u1eefng \u0111i\u1ec1u sau: - \u0110\u1ecdc k\u0129 \u0111\u1ec1 b\u00e0i \u0111\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u v\u00e0o c\u00f3 b\u1ecb suy bi\u1ebfn hay kh\u00f4ng, n\u1ebfu c\u00f3 th\u00ec r\u01a1i v\u00e0o tr\u01b0\u1eddng h\u1ee3p n\u00e0o (l\u01b0u \u00fd r\u1eb1ng kh\u00f4ng ph\u1ea3i \u0111\u1ec1 b\u00e0i n\u00e0o c\u0169ng n\u00f3i r\u00f5 r\u1eb1ng d\u1eef li\u1ec7u b\u1ecb suy bi\u1ebfn). - N\u1ebfu t\u1ed3n t\u1ea1i c\u00e1c \u0111i\u1ec3m tr\u00f9ng nhau:   - Thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i     - V\u1ea5n \u0111\u1ec1 v\u1ec1 ph\u00e9p chia cho s\u1ed1 \\(0\\) (b\u1edfi v\u00ec t\u1ed3n t\u1ea1i \\(\\vec{0}\\) n\u00ean ph\u1ea7n t\u00ednh g\u00f3c g\u1eb7p v\u1ea5n \u0111\u1ec1).   - Thu\u1eadt to\u00e1n Graham v\u00e0 thu\u1eadt to\u00e1n chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u     - N\u1ebfu ta ph\u1ea3i in ra c\u00e1c \u0111\u1ec9nh c\u1ee7a bao l\u1ed3i, c\u00f3 ba th\u1ee9 t\u1ef1 in c\u00e1c \u0111\u1ec9nh m\u00e0 \u0111\u1ec1 b\u00e0i c\u00f3 th\u1ec3 h\u1ecfi: c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (cw), ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 (ccw), ho\u1eb7c theo th\u1ee9 t\u1ef1 xu\u1ea5t hi\u1ec7n trong d\u1eef li\u1ec7u v\u00e0o.     - N\u1ebfu \u0111\u1ec1 b\u00e0i y\u00eau c\u1ea7u in c\u00e1c \u0111\u1ec9nh theo th\u1ee9 t\u1ef1 xu\u1ea5t hi\u1ec7n trong d\u1eef li\u1ec7u v\u00e0o, \u0111\u1ec1 b\u00e0i c\u00f3 th\u1ec3 y\u00eau c\u1ea7u in ra \u0111\u1ec9nh \u0111\u1ea7u ti\u00ean xu\u1ea5t hi\u1ec7n trong d\u1eef li\u1ec7u v\u00e0o n\u1ebfu c\u00e1c \u0111\u1ec9nh tr\u00f9ng nhau, ho\u1eb7c in ra t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh. - N\u1ebfu c\u00f3 c\u00e1c b\u1ed9 ba \u0111i\u1ec3m th\u1eb3ng h\u00e0ng:   - \u0110\u1ec1 b\u00e0i y\u00eau c\u1ea7u bao l\u1ed3i c\u00f3 s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh t\u1ed1i \u0111a hay t\u1ed1i thi\u1ec3u, t\u1eeb \u0111\u00f3 m\u00e0 ta quy\u1ebft \u0111\u1ecbnh c\u00f3 n\u00ean cho th\u00eam c\u00e1c \u0111i\u1ec3m thu\u1ed9c c\u1ea1nh c\u1ee7a bao l\u1ed3i hay kh\u00f4ng.       - Thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i: Ch\u1ecdn \u0111i\u1ec3m xa nh\u1ea5t hay g\u1ea7n nh\u1ea5t n\u1ebfu c\u00f3 hai \u0111i\u1ec3m c\u00f9ng s\u1ed1 \u0111o g\u00f3c nh\u1ecf nh\u1ea5t.       - Thu\u1eadt to\u00e1n Graham v\u00e0 thu\u1eadt to\u00e1n chu\u1ed7i \u0111\u01a1n \u0111i\u1ec7u: \u0110\u1ed5i CCW th\u00e0nh CW v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. - Di\u1ec7n t\u00edch bao l\u1ed3i b\u1eb1ng \\(0\\). C\u00f3 hai tr\u01b0\u1eddng h\u1ee3p nh\u01b0 v\u1eady: t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m \u0111\u1ec1u tr\u00f9ng nhau, ho\u1eb7c t\u1ea5t c\u1ea3 \u0111i\u1ec3m \u0111\u1ec1u th\u1eb3ng h\u00e0ng.</p>"},{"location":"translate/wcipeg/Convex-Hull/#bao-loi-3d","title":"Bao l\u1ed3i 3D","text":"<p>/uploads/algo_geometry_convex_hull_3d.gif</p> <p>T\u00ecm bao l\u1ed3i trong 3D th\u1ef1c s\u1ef1 l\u00e0 m\u1ed9t b\u00e0i to\u00e1n kh\u00f3. B\u00e0i to\u00e1n n\u00e0y ch\u1eafc ch\u1eafn s\u1ebd kh\u00f4ng bao gi\u1edd \u0111\u01b0\u1ee3c ra trong IOI, v\u00e0 h\u1ecdc sinh trung h\u1ecdc kh\u00f4ng c\u1ea7n ph\u1ea3i \u0111i s\u00e2u v\u00e0o v\u1ea5n \u0111\u1ec1 n\u00e0y. Tuy nhi\u00ean, c\u00f3 m\u1ed9t thu\u1eadt to\u00e1n \\(\\mathcal{O}(n^2)\\)  kh\u00e1 l\u00e0 \u0111\u01a1n gi\u1ea3n: - \u0110\u1ea7u ti\u00ean, ta t\u00ecm h\u00ecnh chi\u1ebfu c\u1ee7a c\u00e1c \u0111i\u1ec3m tr\u00ean m\u1eb7t ph\u1eb3ng \\(Oxy\\), v\u00e0 t\u00ecm m\u1ed9t c\u1ea1nh ch\u1eafc ch\u1eafn thu\u1ed9c bao b\u1eb1ng c\u00e1ch l\u1ea5y m\u1ed9t \u0111i\u1ec3m c\u00f3 tung \u0111\u1ed9 l\u1edbn nh\u1ea5t r\u1ed3i t\u00ecm \u0111i\u1ec3m kia b\u1eb1ng c\u00e1ch ch\u1ea1y v\u00f2ng l\u1eb7p c\u1ee7a thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i m\u1ed9t l\u1ea7n. \u0110\u00e2y l\u00e0 ph\u1ea7n \u0111\u1ea7u ti\u00ean c\u1ee7a bao l\u1ed3i. - Sau \u0111\u00f3, x\u00e9t c\u1ea1nh v\u1eeba t\u00ecm \u0111\u01b0\u1ee3c, t\u00ecm m\u1ed9t \u0111i\u1ec3m th\u1ee9 ba \u0111\u1ec3 t\u1ea1o th\u00e0nh m\u1ed9t m\u1eb7t tam gi\u00e1c c\u1ee7a bao l\u1ed3i. Ta ch\u1ecdn \u0111i\u1ec3m th\u1ee9 ba b\u1eb1ng c\u00e1ch t\u00ecm \u0111i\u1ec3m \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m kh\u00e1c n\u1eb1m \u1edf ph\u00eda b\u00ean ph\u1ea3i c\u1ee7a m\u1eb7t tam gi\u00e1c \u0111\u00f3 (gi\u1ed1ng nh\u01b0 thu\u1eadt to\u00e1n b\u1ecdc g\u00f3i, ta t\u00ecm c\u1ea1nh \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m kh\u00e1c \u0111\u1ec1u n\u1eb1m v\u1ec1 ph\u00eda b\u00ean ph\u1ea3i c\u1ea1nh \u0111\u00f3). - B\u00e2y gi\u1edd ta \u0111\u00e3 c\u00f3 ba c\u1ea1nh trong bao l\u1ed3i, ta ch\u1ecdn ng\u1eabu nhi\u00ean m\u1ed9t trong ba c\u1ea1nh \u0111\u00f3, r\u1ed3i t\u00ecm ti\u1ebfp m\u1ed9t tam gi\u00e1c v\u1edbi c\u1ea1nh n\u00e0y, r\u1ed3i ti\u1ebfp t\u1ee5c cho \u0111\u1ebfn khi kh\u00f4ng c\u00f2n c\u1ea1nh n\u00e0o n\u1eefa (khi ta t\u00ecm th\u00eam m\u1ed9t m\u1eb7t tam gi\u00e1c, ta ph\u1ea3i th\u00eam hai c\u1ea1nh v\u00e0o bao, tuy v\u1eady hai c\u1ea1nh n\u00e0y ph\u1ea3i ch\u01b0a c\u00f3 trong bao, n\u1ebfu kh\u00f4ng ta ph\u1ea3i \u0111i t\u00ecm hai c\u1ea1nh kh\u00e1c). - C\u00f3 t\u1ed5ng c\u1ed9ng \\(\\mathcal{O}(n)\\) m\u1eb7t, v\u00e0 m\u1ed7i l\u1ea7n duy\u1ec7t c\u00e1c \u0111i\u1ec3m ta m\u1ea5t th\u1eddi gian \\(\\mathcal{O}(n)\\) v\u00ec ta ph\u1ea3i duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m c\u00f2n l\u1ea1i, do \u0111\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n l\u00e0 \\(\\mathcal{O}(n^2)\\). (N\u1ebfu b\u1ea1n ngh\u0129 b\u1ea1n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t \u0111\u01b0\u1ee3c thu\u1eadt to\u00e1n n\u00e0y, h\u00e3y n\u1ed9p b\u00e0i t\u1ea1i SPOJ - CH3D). - Ta c\u00f3 th\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9 thu\u1eadt to\u00e1n n\u00e0y b\u1eb1ng c\u00e1c lo\u1ea1i b\u1ecf c\u00e1c \u0111i\u1ec3m ch\u1eafc ch\u1eafn kh\u00f4ng ph\u1ea3i \u0111\u1ec9nh c\u1ee7a bao (t\u00ecm c\u00e1c \u0111i\u1ec3m c\u1ef1c theo c\u00e1c tr\u1ee5c t\u1ecda \u0111\u1ed9, r\u1ed3i lo\u1ea1i b\u1ecf c\u00e1c \u0111i\u1ec3m n\u1eb1m trong b\u00e1t di\u1ec7n m\u00e0 c\u00e1c \u0111\u1ec9nh \u0111\u1ea5y t\u1ea1o ra).</p> <p>Ta c\u00f3 th\u1ec3 t\u00ecm bao l\u1ed3i trong kh\u00f4ng gian v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(\\mathcal{O}(n\\log{n})\\) b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p chia \u0111\u1ec3 tr\u1ecb, tuy nhi\u00ean vi\u1ec7c c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n n\u00e0y l\u00e0 v\u00f4 c\u00f9ng kh\u00f3.</p>"},{"location":"translate/wcipeg/Convex-Hull/#ung-dung","title":"\u1ee8ng d\u1ee5ng","text":""},{"location":"translate/wcipeg/Convex-Hull/#vnoj-kmix","title":"VNOJ - KMIX","text":""},{"location":"translate/wcipeg/Convex-Hull/#tom-tat","title":"T\u00f3m t\u1eaft","text":"<p>C\u00f3 \\(N\\) lo\u1ea1i cocktail kh\u00e1c nhau, m\u1ed7i lo\u1ea1i c\u00f3 n\u1ed3ng \u0111\u1ed9 cam v\u00e0 d\u00e2u l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(x\\) v\u00e0 \\(y\\) (t\u00ednh theo \u0111\u01a1n v\u1ecb ph\u1ea7n t\u1ec9). C\u00f3 \\(M\\) v\u1ecb kh\u00e1ch, v\u1ecb kh\u00e1ch th\u1ee9 \\(i\\) y\u00eau c\u1ea7u lo\u1ea1i cocktail c\u00f3 n\u1ed3ng \u0111\u1ed9 cam v\u00e0 d\u00e2u l\u1ea7n l\u01b0\u1ee3t l\u00e0 \\(x\\) v\u00e0 \\(y\\). H\u1ecfi c\u00f3 th\u1ec3 \u0111\u00e1p \u1ee9ng y\u00eau c\u1ea7u c\u1ee7a t\u1eebng v\u1ecb kh\u00e1ch hay kh\u00f4ng?</p>"},{"location":"translate/wcipeg/Convex-Hull/#y-tuong","title":"\u00dd t\u01b0\u1edfng","text":"<p>N\u1ebfu xem m\u1ed7i lo\u1ea1i cocktail l\u00e0 m\u1ed9t \u0111i\u1ec3m to\u1ea1 \u0111\u1ed9 \\((x, y)\\) tr\u00ean m\u1eb7t ph\u1eb3ng, v\u1eady c\u00e1c lo\u1ea1i cocktail c\u00f3 th\u1ec3 pha ch\u1ebf t\u1eeb \\(2\\) lo\u1ea1i cocktail \\(i\\) v\u00e0 \\(j\\) kh\u00e1c nhau s\u1ebd n\u1eb1m tr\u00ean \u0111o\u1ea1n th\u1eb3ng n\u1ed1i \\(2\\) \u0111i\u1ec3m \\((x_i, y_i)\\) v\u00e0 \\((x_j, y_j)\\). M\u1edf r\u1ed9ng, c\u00e1c lo\u1ea1i cocktail c\u00f3 th\u1ec3 pha ch\u1ebf t\u1eeb \\(N\\) lo\u1ea1i cocktail ban \u0111\u1ea7u s\u1ebd n\u1eb1m trong bao l\u1ed3i c\u1ee7a \\(N\\) \u0111i\u1ec3m \\((x, y)\\).</p> <p>\u0110\u1ec3 ki\u1ec3m tra nhanh m\u1ed9t \u0111i\u1ec3m c\u00f3 n\u1eb1m trong bao l\u1ed3i hay kh\u00f4ng trong \\(\\mathcal{O}(\\log{n})\\), ta th\u1ef1c hi\u1ec7n nh\u01b0 sau: - G\u1ecdi t\u1eadp bao l\u1ed3i l\u00e0 \\(H\\), gi\u1ea3 s\u1eed t\u1eadp \\(H\\) \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3. - \u0110\u1ea7u ti\u00ean, ta ki\u1ec3m tra \\((H_0, H_1, P)\\) c\u00f3 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 hay kh\u00f4ng (\\(P\\) tho\u1ea3 thu\u1ed9c v\u00f9ng m\u00e0u xanh).      - Ti\u1ebfp theo, ta ki\u1ec3m tra \\((H_{n-1}, H_0, P)\\) c\u00f3 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 hay kh\u00f4ng (\\(P\\) tho\u1ea3 thu\u1ed9c v\u00f9ng m\u00e0u cam).      - B\u00e2y gi\u1edd, ta ch\u1eb7t nh\u1ecb ph\u00e2n \u0111\u1ec3 t\u00ecm tia \\(\\overrightarrow{H_0H_x}\\) tho\u1ea3 m\u00e3n \\(\\overrightarrow{H_0H_x}\\) l\u00e0 tia g\u1ea7n \u0111i\u1ec3m \\(P\\) nh\u1ea5t \u1edf ph\u00eda b\u00ean ph\u1ea3i b\u1eb1ng c\u00e1ch ki\u1ec3m tra \\(CCW(H_0,H_x,P)\\) (chi ti\u1ebft xem \u1edf ph\u1ea7n c\u00e0i \u0111\u1eb7t). - Sau khi c\u00f3 \\(x\\) (v\u00ed d\u1ee5 \\(x=4\\)), ta bi\u1ebft \u0111\u01b0\u1ee3c r\u1eb1ng \\(P\\) thu\u1ed9c v\u00f9ng t\u1ea1o b\u1edfi \\(2\\) tia \\(\\overrightarrow{H_0H_{x-1}}\\) v\u00e0 \\(\\overrightarrow{H_0H_x}\\) (v\u00f9ng m\u00e0u t\u00edm).      - \u0110\u1ebfn \u0111\u00e2y, ta ki\u1ec3m tra \\((H_{x-1}, H_x, P)\\) c\u00f3 c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 hay kh\u00f4ng (t\u1ee9c \\(P\\) c\u00f3 thu\u1ed9c tam gi\u00e1c \\((H_0,H_{x-1},H_x)\\) hay kh\u00f4ng).</p>"},{"location":"translate/wcipeg/Convex-Hull/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>## include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// Ki\u1ec3u \u0111i\u1ec3m\nstruct Point {\n    int x, y;\n    bool operator==(const Point &amp;o) {\n        return x == o.x &amp;&amp; y == o.y;\n    }\n};\n\n// T\u00edch c\u00f3 h\u01b0\u1edbng c\u1ee7a AB v\u00e0 AC\nlong long cross(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return 1LL * (B.x - A.x) * (C.y - A.y) - 1LL * (C.x - A.x) * (B.y - A.y);\n}\n\n// T\u00edch v\u00f4 h\u01b0\u1edbng c\u1ee7a AB v\u00e0 AC\nlong long dot(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return 1LL * (B.x - A.x) * (C.x - A.x) + 1LL * (B.y - A.y) * (C.y - A.y);\n}\n\n// C n\u1eb1m tr\u00ean \u0111o\u1ea1n AB n\u1ebfu ABxAC = 0 v\u00e0 CA.CB &lt;= 0\nbool onSegment(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return cross(A, B, C) == 0 &amp;&amp; dot(C, A, B) &lt;= 0;\n}\n\n// A -&gt; B -&gt; C \u0111i theo th\u1ee9 t\u1ef1 c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nbool cw(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return cross(A, B, C) &lt; 0;\n}\n\n// A -&gt; B -&gt; C \u0111i theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nbool ccw(const Point &amp;A, const Point &amp;B, const Point &amp;C) {\n    return cross(A, B, C) &gt; 0;\n}\n\n// Tr\u1ea3 v\u1ec1 bao l\u1ed3i v\u1edbi th\u1ee9 t\u1ef1 c\u00e1c \u0111i\u1ec3m \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\nvector&lt;Point&gt; convexHull(vector&lt;Point&gt; p, int n) {\n    // S\u1eafp x\u1ebfp c\u00e1c \u0111i\u1ec3m theo t\u1ecda \u0111\u1ed9 x, n\u1ebfu b\u1eb1ng nhau s\u1eafp x\u1ebfp theo y\n    sort(p.begin(), p.end(), [](const Point &amp;A, const Point &amp;B) {\n        if (A.x != B.x) return A.x &lt; B.x;\n        return A.y &lt; B.y;\n    });\n\n    // T\u1eadp bao l\u1ed3i\n    vector&lt;Point&gt; hull;\n    hull.push_back(p[0]);\n\n    // D\u1ef1ng bao tr\u00ean\n    for (int i = 1; i &lt; n; ++i) {\n        while (hull.size() &gt;= 2 &amp;&amp; ccw(hull[hull.size() - 2], hull.back(), p[i])) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n\n    // Ti\u1ebfp t\u1ee5c d\u1ef1ng bao d\u01b0\u1edbi\n    for (int i = n - 2; i &gt;= 0; --i) {\n        while (hull.size() &gt;= 2 &amp;&amp; ccw(hull[hull.size() - 2], hull.back(), p[i])) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n\n    // Xo\u00e1 \u0111\u1ec9\u1ec3m \u0111\u1ea7u \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i \u1edf cu\u1ed1i\n    if (n &gt; 1) hull.pop_back();\n\n    return hull;\n}\n\n// Ki\u1ec3m tra P c\u00f3 n\u1eb1m trong bao l\u1ed3i hull hay kh\u00f4ng\nbool checkInHull(vector&lt;Point&gt; &amp;hull, Point P) {\n    int n = hull.size();\n\n    // X\u1eed l\u00fd tr\u01b0\u1eddng h\u1ee3p suy bi\u1ebfn c\u00f3 di\u1ec7n t\u00edch bao l\u1ed3i = 0\n    if (n == 1) return (hull[0] == P);\n    if (n == 2) return onSegment(hull[0], hull[1], P);\n\n    // N\u1ebfu (hull[0], hull[1], P) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 th\u00ec P n\u1eb1m ngo\u00e0i bao l\u1ed3i\n    if (ccw(hull[0], hull[1], P)) return false;\n\n    // N\u1ebfu (hull[n - 1], hull[0], P) kh\u00f4ng c\u00f9ng chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 th\u00ec P ch\u1ec9 tho\u1ea3\n    // n\u1ebfu P n\u1eb1m tr\u00ean \u0111o\u1ea1n (hull[n - 1], hull[0])\n    if (!cw(hull[n - 1], hull[0], P)) {\n        return onSegment(hull[n - 1], hull[0], P);\n    }\n\n    // T\u00ecm x tho\u1ea3 m\u00e3n tia (hull[0], hull[x]) l\u00e0 tia g\u1ea7n nh\u1ea5t \u1edf ph\u00eda b\u00ean ph\u1ea3i c\u1ee7a P\n    int lo = 2, hi = n - 1, x = -1;\n    while (lo &lt;= hi) {\n        int mid = (lo + hi) &gt;&gt; 1;\n        // N\u1ebfu (hull[0], hull[mid], P) ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3 th\u00ec\n        // tia (hull[0], hull[mid]) n\u1eb1m \u1edf ph\u00eda b\u00ean ph\u1ea3i c\u1ee7a P\n        if (ccw(hull[0], hull[mid], P)) {\n            x  = mid;\n            hi = mid - 1;\n        }\n        else lo = mid + 1;\n    }\n\n    // P n\u1eb1m trong tam gi\u00e1c (hull[0], hull[x - 1], hull[x]) \n    // n\u1ebfu (hull[x - 1], hull[x], P) kh\u00f4ng ng\u01b0\u1ee3c chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3\n    return !ccw(hull[x - 1], hull[x], P);\n}\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;Point&gt; p(n);\n    for (Point &amp;a : p) {\n        cin &gt;&gt; a.x &gt;&gt; a.y;\n    }\n    vector&lt;Point&gt; hull = convexHull(p, n);\n\n    int m;\n    cin &gt;&gt; m;\n    while (m--) {\n        Point P;\n        cin &gt;&gt; P.x &gt;&gt; P.y;\n        cout &lt;&lt; (checkInHull(hull, P) ? \"YES\\n\" : \"NO\\n\");\n    }\n}\n</code></pre>"},{"location":"translate/wcipeg/Convex-Hull/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Kattis - convexhull</li> <li>ACM ICPC Vietnam National 2017 - K</li> <li>VNOJ - MILITARY</li> <li>VNOJ - HEADQRT</li> <li>USACO - Cow Curling</li> <li>Codeforces - 406D - Hill Climbing</li> </ul>"},{"location":"translate/wcipeg/Flows/","title":"B\u00e0i to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i","text":"<p>Ngu\u1ed3n: WCIPEG</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, t\u00e1c gi\u1ea3 s\u1ebd gi\u1edbi thi\u1ec7u v\u1edbi b\u1ea1n 2 b\u00e0i to\u00e1n c\u01a1 b\u1ea3n: B\u00e0i to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng v\u00e0 b\u00e0i to\u00e1n l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t, c\u0169ng nh\u01b0 m\u1ed1i li\u00ean h\u1ec7 gi\u1eefa 2 b\u00e0i to\u00e1n n\u00e0y.</p>"},{"location":"translate/wcipeg/Flows/#mang-luong-flow-network","title":"M\u1ea1ng lu\u1ed3ng (Flow network)","text":"<p>M\u1ea1ng lu\u1ed3ng l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng th\u1ecfa m\u00e3n:</p> <ul> <li>C\u00f3 2 \u0111\u1ec9nh \u0111\u1eb7c bi\u1ec7t l\u00e0 \u0111\u1ec9nh ph\u00e1t (source-k\u00fd hi\u1ec7u \\(s\\)) v\u00e0 \u0111\u1ec9nh thu (sink-k\u00fd hi\u1ec7u \\(t\\))</li> <li>Kh\u00f4ng c\u00f3 cung \u0111i v\u00e0o \u0111\u1ec9nh ph\u00e1t hay ra t\u1eeb \u0111\u1ec9nh thu</li> <li>V\u1edbi m\u1ed7i cung \\((u,v)\\) g\u1ecdi m\u1ed9t s\u1ed1 th\u1ef1c d\u01b0\u01a1ng \\(c(u,v)\\) l\u00e0 s\u1ee9c ch\u1ee9a</li> </ul> <p>Ta bi\u1ec3u di\u1ec5n m\u1ea1ng lu\u1ed3ng b\u1eb1ng \\(G=(V,s,t,c)\\) v\u1edbi \\(s,t \\in V\\), $c:V \\times V \\rightarrow [0, \\infty) $ v\u00e0 \\(\\forall v, c(v,s)=c(t,v)=0\\). T\u1ed3n t\u1ea1i cung \\((u,v)\\) khi v\u00e0 ch\u1ec9 khi \\(c(u,v)&gt;0\\).</p>"},{"location":"translate/wcipeg/Flows/#luong-hop-le-admissible-flows","title":"Lu\u1ed3ng h\u1ee3p l\u1ec7 (Admissible flows)","text":"<p>M\u1ed9t lu\u1ed3ng h\u1ee3p l\u1ec7 tr\u00ean m\u1ea1ng \\(G\\) l\u00e0 m\u1ed9t h\u00e0m \\(f:V\\times V\\rightarrow \\mathbb{R}\\) th\u1ecfa:</p> <ul> <li>Lu\u1ed3ng tr\u00ean m\u1ed7i cung kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 s\u1ee9c ch\u1ee9a c\u1ee7a n\u00f3: \\(\\forall u,v \\in V,f(u,v) \\leq c(u,v)\\)</li> <li>\u0110\u1ed1i x\u1ee9ng: \\(\\forall u,v \\in V,f(u,v)=-f(v,u)\\)</li> <li>B\u1ea3o to\u00e0n lu\u1ed3ng qua m\u1ed7i \u0111\u1ec9nh: \\(\\forall u \\in V, \\sum_{v \\in V} f(u,v)=0\\)</li> </ul>"},{"location":"translate/wcipeg/Flows/#mang-thang-du-residual-network","title":"M\u1ea1ng th\u1eb7ng d\u01b0 (Residual network)","text":"<p>M\u1ea1ng th\u1eb7ng d\u01b0 cho ch\u00fang ta bi\u1ebft s\u1ee9c ch\u1ee9a c\u00f2n l\u1ea1i tr\u00ean m\u1ea1ng khi \u0111\u00e3 g\u1eedi m\u1ed9t s\u1ed1 lu\u1ed3ng qua n\u00f3.</p> <p>T\u1eeb m\u1ed9t m\u1ea1ng \\((V,s,t,c)\\) v\u00e0 m\u1ed9t lu\u1ed3ng \\(f\\) ta x\u00e2y d\u1ef1ng m\u1ed9t m\u1ea1ng th\u1eb7ng d\u01b0 \\((V,s,t,r)\\) v\u1edbi \\(r(u,v)=c(u,v)-f(u,v)\\).</p> <p>M\u1ea1ng th\u1eb7ng d\u01b0 c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t s\u1ed1 cung m\u00e0 m\u1ea1ng ban \u0111\u1ea7u kh\u00f4ng c\u00f3. C\u1ee5 th\u1ec3, khi g\u1eedi m\u1ed9t lu\u1ed3ng \\(f(u,v)&gt;0\\) qua cung \\((u,v)\\) th\u00ec ta c\u0169ng g\u1eedi m\u1ed9t lu\u1ed3ng \\(-f(u,v)\\) qua cung \\((v,u)\\), khi \u0111\u00f3 \\(r(v,u)=c(v,u)+f(u,v)&gt;0\\) c\u00f3 th\u1ec3 t\u1ea1o ra cung \\((v,u)\\) m\u00e0 m\u1ea1ng ban \u0111\u1ea7u ch\u01b0a c\u00f3.</p>"},{"location":"translate/wcipeg/Flows/#bai-toan-luong-cuc-ai-tren-mang-maximum-flow","title":"B\u00e0i to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i tr\u00ean m\u1ea1ng (Maximum flow)","text":"<p>Cho m\u1ed9t m\u1ea1ng, ch\u00fang ta c\u1ea7n t\u00ecm m\u1ed9t lu\u1ed3ng h\u1ee3p l\u1ec7 sao cho t\u1ed5ng lu\u1ed3ng ra t\u1eeb \u0111\u1ec9nh ph\u00e1t c\u0169ng nh\u01b0 \u0111i v\u00e0o \u0111\u1ec9nh thu l\u00e0 c\u1ef1c \u0111\u1ea1i.</p> <p>M\u1ec7nh \u0111\u1ec1: T\u1ed5ng lu\u1ed3ng ra kh\u1ecfi \u0111\u1ec9nh ph\u00e1t b\u1eb1ng t\u1ed5ng lu\u1ed3ng \u0111i v\u00e0o \u0111\u1ec9nh thu.</p> <p>Ch\u1ee9ng minh: X\u00e9t lu\u1ed3ng \\(f\\) tr\u00ean m\u1ea1ng \\(G\\)</p> <p>Ta c\u00f3:</p> <p>\\(\\sum_{u \\in V} \\sum_{v \\in V} f(u,v)\\)</p> <p>\\(=\\sum_{u \\in V} \\sum_{v \\in V} \\frac{1}{2} (f(u,v)+f(u,v))\\)</p> <p>\\(=\\sum_{u \\in V} \\sum_{v \\in V} \\frac{1}{2} (f(u,v)-f(v,u))\\)</p> <p>\\(=\\frac{1}{2}\\sum_{u \\in V} \\sum_{v \\in V} f(u,v)-\\frac{1}{2}\\sum_{u \\in V} \\sum_{v \\in V} f(v,u)\\)</p> <p>\\(=\\frac{1}{2}\\sum_{u \\in V} \\sum_{v \\in V} f(u,v)-\\frac{1}{2}\\sum_{u \\in V} \\sum_{v \\in V} f(u,v)\\)</p> <p>\\(=0\\)</p> <p>L\u1ea1i c\u00f3:</p> <p>\\(\\sum_{u \\in V} \\sum_{v \\in V} f(u,v)\\)</p> <p>\\(=\\sum_{u \\in V \\setminus \\{s,t\\}} \\sum_{v \\in V} f(u,v)+\\sum_{v \\in V}f(s,v)+\\sum_{v \\in V}f(t,v)\\)</p> <p>\\(=\\sum_{v \\in V}f(s,v)-\\sum_{v \\in V}f(v,t)\\)</p> <p>V\u1eady: \\(\\sum_{v \\in V}f(s,v)=\\sum_{v \\in V}f(v,t)\\)</p>"},{"location":"translate/wcipeg/Flows/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":""},{"location":"translate/wcipeg/Flows/#phuong-phap-cua-fordfulkerson","title":"Ph\u01b0\u01a1ng ph\u00e1p c\u1ee7a Ford\u2013Fulkerson","text":"<p>\u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p c\u1ee7a Ford-Fulkerson l\u00e0 t\u0103ng d\u1ea7n gi\u00e1 tr\u1ecb c\u1ee7a lu\u1ed3ng tr\u00ean m\u1ea1ng cho \u0111\u1ebfn khi n\u00f3 \u0111\u1ea1t c\u1ef1c \u0111\u1ea1i.</p> <p>V\u1edbi m\u1ed7i b\u01b0\u1edbc, tr\u00ean m\u1ea1ng \\(G\\) hi\u1ec7n t\u1ea1i, ch\u00fang ta t\u00ecm m\u1ed9t \u0111\u01b0\u1eddng \u0111i \\(s-t\\) m\u00e0 v\u1eabn c\u00f3 th\u1ec3 g\u1eedi lu\u1ed3ng qua \u0111\u01b0\u1ee3c, \u0111\u01b0\u1eddng \u0111i n\u00e0y g\u1ecdi l\u00e0 \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng (augmenting path). Sau \u0111\u00f3 ti\u1ebfn h\u00e0nh g\u1eedi m\u1ed9t lu\u1ed3ng qua \\(G\\) sao cho lu\u1ed3ng m\u1edbi v\u1eabn h\u1ee3p l\u1ec7. Thu\u1eadt to\u00e1n k\u1ebft th\u00fac khi kh\u00f4ng c\u00f2n t\u00ecm th\u1ea5y \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng n\u1eefa.</p> <pre><code>foreach (u,v) in E: f[u,v]&lt;-0\nwhile exist(augmenting_path):\n    (u[1],u[2],...,u[k])&lt;-augmenting_path\n    m&lt;-min(c[u[i],u[i+1]]-f[u[i],u[i+1]]) for i=1..k-1\n    for i=1..k-1: \n        f[u[i],u[i+1]]+=m\n        f[u[i+1],u[i]]-=m\n</code></pre> <p>C\u00f3 nhi\u1ec1u c\u00e1ch t\u00ecm \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng. C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ch\u1ecdn \u0111\u01b0\u1eddng \u0111i c\u00f3 \u00edt c\u1ea1nh nh\u1ea5t, c\u00e1ch n\u00e0y cho ta thu\u1eadt to\u00e1n c\u1ee7a Edmond-Karp. M\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 h\u01a1n l\u00e0 ph\u00e2n t\u1ea7ng \u0111\u1ed3 th\u1ecb theo kho\u1ea3ng c\u00e1ch t\u1edbi \u0111\u1ec9nh ph\u00e1t v\u00e0 ch\u1ec9 quan t\u00e2m \u0111\u1ebfn nh\u1eefng \u0111\u01b0\u1eddng \u0111i m\u00e0 c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00e1c t\u00e2ng kh\u00e1c nhau, \u0111\u00e2y g\u1ecdi l\u00e0 thu\u1eadt to\u00e1n Dinic.</p>"},{"location":"translate/wcipeg/Flows/#cac-thuat-toan-preflow-push","title":"C\u00e1c thu\u1eadt to\u00e1n preflow-push","text":"<p>L\u1edbp thu\u1eadt to\u00e1n Preflow-push kh\u00e1c v\u1edbi thu\u1eadt to\u00e1n s\u1eed d\u1ee5ng \u0111\u01b0\u1eddng t\u0103ng lu\u1ed3ng \u1edf ch\u1ed7 n\u00f3 kh\u00f4ng duy tr\u00ec lu\u1ed3ng h\u1ee3p l\u1ec7 \u1edf m\u1ed7i b\u01b0\u1edbc, m\u00e0 thay v\u00e0o \u0111\u00f3 duy tr\u00ec m\u1ed9t preflow, m\u00e0 trong \u0111\u00f3 t\u1ed5ng lu\u1ed3ng v\u00e0o m\u1ed9t \u0111\u1ec9nh c\u00f3 th\u1ec3 l\u1edbn h\u01a1n t\u1ed5ng lu\u1ed3ng ra t\u1eeb \u0111\u1ec9nh \u0111\u00f3 (\\(\\sum_{u \\in V}f(u,v) \\geq \\sum_{w \\in V}f(v,w)\\)).</p> <p>\u0110\u1ea7u ti\u00ean ch\u00fang ta kh\u1edfi t\u1ea1o m\u1ed9t preflow m\u00e0 m\u1ed7i cung \u0111i ra t\u1eeb \u0111\u1ec9nh ph\u00e1t \u0111\u1ec1u b\u00e3o h\u00f2a (\\(\\forall u \\in V, f(s,u)=c(s,u)\\)).</p> <p>V\u1edbi m\u1ed7i b\u01b0\u1edbc, ch\u00fang ta th\u1eed x\u1ea3 lu\u1ed3ng m\u1ed9t s\u1ed1 \u0111\u1ec9nh b\u1ecb qu\u00e1 t\u1ea3i b\u1eb1ng c\u00e1ch g\u1eedi lu\u1ed3ng sang m\u1ed9t \u0111\u1ec9nh k\u1ec1 c\u1ee7a n\u00f3. M\u1ed9t s\u1ed1 lu\u1ed3ng cu\u1ed1i c\u00f9ng s\u1ebd \u0111i v\u1ec1 \u0111\u1ec9nh thu, v\u00e0 m\u1ecdi lu\u1ed3ng kh\u00f4ng \u0111i v\u1ec1 \u0111\u1ec9nh thu s\u1ebd quay tr\u1edf l\u1ea1i \u0111\u1ec9nh ph\u00e1t.</p> <pre><code>h[s]&lt;-n,h[t]&lt;-0,h[v]&lt;-0 for other v\nf[e]&lt;-c[e] for e=(s,v), f[e]&lt;-0 for other e\nwhile exist v&lt;&gt;t, excess(v)&gt;0\n    forall (v,w):\n    if exist w: h[w]&lt;h[v]:\n            push(v, w)\n    else:\n        relabel(v)\n\nexcess(v):\n    return sum(f[u,v])-sum(f[v,w]) for all u,w\n\npush(v,w):\n    q&lt;-min(excess(v),c(v,w))\n    add q to (v,w)\n\nrelabel(v):\n    h[v]&lt;-min(h[w])+1 for all w in E\n</code></pre>"},{"location":"translate/wcipeg/Flows/#cac-huong-tiep-can-khac","title":"C\u00e1c h\u01b0\u1edbng ti\u1ebfp c\u1eadn kh\u00e1c","text":"<p>M\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p tinh vi h\u01a1n \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u b\u1edfi King, Rao v\u00e0 Tarjan (1994) v\u00e0 Orlin (2012). K\u1ebft h\u1ee3p hai ph\u01b0\u01a1ng ph\u00e1p cho ta m\u1ed9t thu\u1eadt to\u00e1n t\u1ed5ng qu\u00e1t c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(VE)\\), t\u1ed1i \u01b0u nh\u1ea5t cho \u0111\u1ebfn gi\u1edd ph\u00fat n\u00e0y.</p>"},{"location":"translate/wcipeg/Flows/#bai-toan-lat-cat-hep-nhat-minimun-s-t-cut","title":"B\u00e0i to\u00e1n l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t (Minimun \\(s-t\\) cut)","text":"<p>M\u1ed9t l\u00e1t c\u1eaft \\(s-t\\) l\u00e0 m\u1ed9t t\u1eadp con c\u1ee7a \\(E\\) m\u00e0 khi lo\u1ea1i b\u1ecf nh\u1eefng c\u1ea1nh n\u00e0y th\u00ec kh\u00f4ng c\u00f2n \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(s\\) t\u1edbi \\(t\\).</p> <p>Tr\u00ean m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 tr\u1ecdng s\u1ed1, l\u00e1t c\u1eaft \\(s-t\\) h\u1eb9p nh\u1ea5t l\u00e0 l\u00e1t c\u1eaft \\(s-t\\) c\u00f3 t\u1ed5ng tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh nh\u1ecf nh\u1ea5t. Ta bi\u1ec3u di\u1ec5n \u0111\u1ed3 th\u1ecb n\u00e0y b\u1eb1ng \\((V,E,s,t,w)\\) v\u1edbi \\(w:E \\rightarrow [0,\\infty)\\) l\u00e0 tr\u1ecdng s\u1ed1 c\u00e1c c\u1ea1nh \u0111\u1ed3 th\u1ecb. V\u1edbi nh\u1eefng c\u1ea1nh \u00e2m ta lu\u00f4n c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf c\u1ea1nh n\u00e0y ra kh\u1ecfi \u0111\u1ed3 th\u1ecb v\u00e0 th\u00eam v\u00e0o l\u00e1t c\u1eaft.</p> <p>M\u1ed7i \u0111\u1ed3 th\u1ecb \\((V,E,s,t,w)\\) t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t m\u1ea1ng lu\u1ed3ng \\((V,s,t,c)\\), v\u1edbi \\(c(u,v)=w(u,v)\\) n\u1ebfu \\((u,v) \\in E\\), ng\u01b0\u1ee3c l\u1ea1i \\(c(u,v)=0\\).</p> <p>Max-flow min-cut theorem l\u00e0 m\u1ed9t k\u1ebft qu\u1ea3 n\u1ed5i ti\u1ebfng v\u1ec1 quan h\u1ec7 gi\u1eefa lu\u1ed3ng c\u1ef1c \u0111\u1ea1i v\u00e0 l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t. \u0110\u1ecbnh l\u00fd n\u00e0y cho th\u1ea5y r\u1eb1ng tr\u00ean m\u1ed9t m\u1ea1ng lu\u1ed3ng th\u00ec gi\u00e1 tr\u1ecb lu\u1ed3ng c\u1ef1c \u0111\u1ea1i b\u1eb1ng v\u1edbi gi\u00e1 tr\u1ecb c\u1ee7a l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t. Do \u0111\u00f3 m\u00e0 ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n lu\u1ed3ng c\u1ef1c \u0111\u1ea1i \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t (nh\u01b0ng kh\u00f4ng ng\u01b0\u1ee3c l\u1ea1i).</p>"},{"location":"translate/wcipeg/Flows/#cac-bien-the-cua-bai-toan","title":"C\u00e1c bi\u1ebfn th\u1ec3 c\u1ee7a b\u00e0i to\u00e1n","text":"<p>M\u1ed9t s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb c\u00f3 th\u1ec3 kh\u00f4ng c\u00f3 s\u1ee9c ch\u1ee9a, ta ch\u1ec9 c\u1ea7n cho c\u1ea1nh n\u00e0y m\u1ed9t s\u1ee9c ch\u1ee9a l\u00e0 m\u1ed9t s\u1ed1 c\u1ef1c k\u00ec l\u1edbn. M\u1ed9t c\u1ea1nh kh\u00f4ng c\u00f3 s\u1ee9c ch\u1ee9a th\u00ec kh\u00f4ng thu\u1ed9c l\u00e1t c\u1eaft nh\u1ecf nh\u1ea5t.</p> <p>M\u1ea1ng c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u \u0111\u1ec9nh ph\u00e1t v\u00e0 nhi\u1ec1u \u0111\u1ec9nh thu. Ta c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft b\u1eb1ng c\u00e1ch th\u00eam m\u1ed9t \u0111\u1ec9nh ph\u00e1t \u1ea3o v\u00e0 m\u1ed9t \u0111\u1ec9nh thu \u1ea3o, v\u00e0 c\u00e1c cung c\u00f3 s\u1ee9c ch\u1ee9a v\u00f4 h\u1ea1n \u0111i t\u1eeb \u0111\u1ec9nh ph\u00e1t \u1ea3o n\u00e0y t\u1edbi c\u00e1c \u0111\u1ec9nh ph\u00e1t, v\u00e0 t\u1eeb c\u00e1c \u0111\u1ec9nh thu \u0111\u1ebfn \u0111\u1ec9nh thu \u1ea3o.</p> <p>N\u1ebfu m\u1ed7i \u0111\u1ec9nh \\(v\\) c\u1ee7a m\u1ea1ng c\u00f3 m\u1ed9t s\u1ee9c ch\u1ee9a \\(c(v)\\) sao cho \\(c(v) \\geq \\sum_{u \\in V} f(u,v)\\), ta chia m\u1ed7i \u0111\u1ec9nh \\(v\\) th\u00e0nh m\u1ed9t \u0111\u1ec9nh v\u00e0o \\(v_i\\) v\u00e0 m\u1ed9t \u0111\u1ec9nh ra \\(v_o\\), v\u00e0 khi \u0111\u00f3 \\(c(v)=c'(v_i,v_o)\\). V\u1edbi m\u1ed7i c\u1ea1nh \\((u,v)\\) tr\u00ean \u0111\u1ed3 th\u1ecb g\u1ed1c, ta t\u1ea1o cung \\((u_o,v_i)\\) v\u1edbi \\(c(u,v)=c'(u_o,v_i)\\). Sau \u0111\u00f3 c\u00f3 th\u1ec3 gi\u1ea3i m\u1ed9t c\u00e1ch b\u00ecnh th\u01b0\u1eddng.</p> <p>T\u01b0\u01a1ng t\u1ef1, v\u1edbi b\u00e0i to\u00e1n l\u00e1t c\u1eaft nh\u1ecf nh\u1ea5t cho ph\u00e9p lo\u1ea1i b\u1ecf c\u00e1c \u0111\u1ec9nh gi\u1ed1ng nh\u01b0 c\u00e1c c\u1ea1nh ta c\u0169ng gi\u1ea3i quy\u1ebft nh\u01b0 tr\u00ean.</p> <p>Ta c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n lu\u1ed3ng \u0111\u1ec3 gi\u1ea3i c\u00e1c b\u00e0i to\u00e1n v\u1ec1 c\u1eb7p gh\u00e9p c\u1ef1c \u0111\u1ea1i tr\u00ean \u0111\u1ed3 th\u1ecb hai ph\u00eda. Ta c\u0169ng t\u1ea1o m\u1ed9t \u0111\u1ec9nh ph\u00e1t \u1ea3o n\u1ed1i v\u1edbi c\u00e1c \u0111\u1ec9nh tr\u00e1i c\u1ee7a \u0111\u1ed3 th\u1ecb, v\u00e0 m\u1ed9t \u0111\u1ec9nh thu \u1ea3o n\u1ed1i t\u1eeb c\u00e1c \u0111\u1ec9nh ph\u1ea3i, c\u00e1c cung n\u00e0y c\u00f3 tr\u1ecdng s\u1ed1 l\u00e0 0 (n\u1ebfu c\u1ea7n). T\u1ea5t c\u1ea3 c\u00e1c cung c\u00f3 s\u1ee9c ch\u1ee9a l\u00e0 1. Sau \u0111\u00f3 ta s\u1ebd t\u00ecm gi\u00e1 tr\u1ecb l\u00e1t c\u1eaft h\u1eb9p nh\u1ea5t c\u1ee7a \u0111\u1ed3 th\u1ecb. G\u00eda tr\u1ecb n\u00e0y ch\u00ednh l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a b\u1ed9 gh\u00e9p c\u1ef1c \u0111\u1ea1i tr\u00ean \u0111\u1ed3 th\u1ecb.</p>"},{"location":"translate/wcipeg/Flows/#mot-so-bai-e-luyen-tap","title":"M\u1ed9t s\u1ed1 b\u00e0i \u0111\u1ec3 luy\u1ec7n t\u1eadp","text":"<ul> <li>VNOJ - NKFLOW</li> <li>SPOJ - FASTFLOW</li> <li>VNOJ - ASSIGN1</li> <li>VNOJ - KWAY</li> <li>VNOJ - STNODE</li> <li>codeforces - flows</li> </ul>"},{"location":"translate/wcipeg/kmp/","title":"Thu\u1eadt to\u00e1n Knuth-Morris-Pratt (KMP)","text":"<p>Ngu\u1ed3n: wcipeg</p> <p>Ng\u01b0\u1eddi d\u1ecbch: Tr\u1ea7n Kim Th\u1ea1ch</p>"},{"location":"translate/wcipeg/kmp/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Tr\u01b0\u1edbc khi \u0111\u1ecdc b\u00e0i n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc v\u1ec1 c\u00e1c thu\u1eadt ng\u1eef trong x\u1eed l\u00fd x\u00e2u c\u0169ng nh\u01b0 v\u1ec1 b\u00e0i to\u00e1n so kh\u1edbp chu\u1ed7i \u1edf \u0111\u00e2y</p> <p>Thu\u1eadt to\u00e1n Knuth-Morris-Pratt (KMP) l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi th\u1eddi gian ch\u1ea1y tuy\u1ebfn t\u00ednh nh\u1eb1m gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n so kh\u1edbp chu\u1ed7i.</p> <p>Thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a v\u00e0o quan s\u00e1t r\u1eb1ng m\u1ed9t x\u00e2u con chung c\u1ee7a \\(S\\) v\u00e0 \\(T\\) s\u1ebd \u0111\u01b0a ra \u0111\u01b0\u1ee3c th\u00f4ng tin \\(S\\) c\u00f3 kh\u1edbp v\u1edbi c\u00e1c v\u1ecb tr\u00ed sau c\u1ee7a \\(T\\) hay kh\u00f4ng. B\u1edfi v\u00ec x\u00e2u con chung n\u00e0y \u0111\u1ed3ng ngh\u0129a v\u1edbi m\u1ed9t ph\u1ea7n c\u1ee7a \\(T\\) \u0111\u00e3 kh\u1edbp v\u1edbi m\u1ed9t ph\u1ea7n c\u1ee7a \\(S\\), n\u00ean b\u1eb1ng vi\u1ec7c kh\u1edfi t\u1ea1o tr\u01b0\u1edbc m\u1ed9t s\u1ed1 th\u00f4ng tin v\u1edbi x\u00e2u \\(S\\), ta s\u1ebd thu \u0111\u01b0\u1ee3c nh\u1eefng k\u1ebft lu\u1eadn v\u1ec1 \\(T\\) (nh\u1edd x\u00e2u con chung) m\u00e0 kh\u00f4ng c\u1ea7n quay ng\u01b0\u1ee3c v\u00e0 so s\u00e1nh l\u1ea1i nh\u1eefng k\u00fd t\u1ef1 \u0111\u00e3 kh\u1edbp.</p> <p>C\u1ee5 th\u1ec3 h\u01a1n, ta mu\u1ed1n t\u00ednh to\u00e1n tr\u01b0\u1edbc c\u00e1ch x\u00e2u \\(S\\) t\u1ef1 kh\u1edbp v\u1edbi ch\u00ednh n\u00f3. Nh\u1edd v\u1eady thu\u1eadt to\u00e1n s\u1ebd kh\u00f4ng quay nh\u00ecn l\u1ea1i v\u00e0 ch\u1ec9 duy\u1ec7t qua \\(T\\) m\u1ed9t l\u1ea7n duy nh\u1ea5t.</p> <p>C\u00f9ng v\u1edbi qu\u00e1 tr\u00ecnh ti\u1ec1n x\u1eed l\u00ed tuy\u1ebfn t\u00ednh \\(O(\\|T\\|)\\) (v\u1edbi \\(\\|T\\|\\) l\u00e0 \u0111\u1ed9 d\u00e0i x\u00e2u \\(T\\)), thu\u1eadt to\u00e1n c\u00f3 th\u1eddi gian ch\u1ea1y tuy\u1ebfn t\u00ednh.</p>"},{"location":"translate/wcipeg/kmp/#cam-hung","title":"C\u1ea3m h\u1ee9ng","text":"<p>C\u1ea3m h\u1ee9ng c\u1ee7a KMP c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c minh h\u1ecda r\u00f5 nh\u1ea5t qua 3 v\u00ed d\u1ee5 d\u01b0\u1edbi \u0111\u00e2y.</p>"},{"location":"translate/wcipeg/kmp/#vi-du-1","title":"V\u00ed d\u1ee5 1","text":"<pre><code>S = aaa\nT = aaaaaaaaa\n</code></pre> <p>\u1ede v\u00ed d\u1ee5 n\u00e0y, ta c\u1ea7n c\u00e1c l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a x\u00e2u \\(S\\) trong x\u00e2u \\(T\\) (\\(S\\) xu\u1ea5t hi\u1ec7n 7 l\u1ea7n).</p> <p>Ta c\u00f3 th\u1ec3 duy\u1ec7t b\u00ecnh th\u01b0\u1eddng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(\\|S\\| \\* \\|T\\|)\\) nh\u01b0 sau:</p> <ul> <li>So \\(S_1\\) v\u1edbi \\(T_1\\), \\(S_2\\) v\u1edbi \\(T_2\\), \\(S_3\\) v\u1edbi \\(T_3\\), do \u0111\u00f3 v\u1ecb tr\u00ed s\u1ed1 1 l\u00e0 v\u1ecb tr\u00ed kh\u1edbp c\u1ee7a \\(S\\) trong \\(T\\).</li> <li>So \\(S_1\\) v\u1edbi \\(T_2\\), \\(S_2\\) v\u1edbi \\(T_3\\), \\(S_3\\) v\u1edbi \\(T_4\\), t\u00ecm \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed s\u1ed1 2 l\u00e0 v\u1ecb tr\u00ed kh\u1edbp c\u1ee7a \\(S\\) trong \\(T\\).</li> <li>So \\(S_1\\) v\u1edbi \\(T_3\\), \\(S_2\\) v\u1edbi \\(T_4\\), \\(S_3\\) v\u1edbi \\(T_5\\), t\u00ecm \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed s\u1ed1 3 l\u00e0 v\u1ecb tr\u00ed kh\u1edbp c\u1ee7a \\(S\\) trong \\(T\\).</li> </ul> <p>V\u00e0 c\u1ee9 m\u00e3i nh\u01b0 v\u1eady cho \u0111\u1ebfn khi \u0111\u1ee7 h\u1ebft tr\u01b0\u1eddng h\u1ee3p.</p> <p>Tuy nhi\u00ean ta c\u00f3 th\u1ec3 l\u00e0m t\u1ed1t h\u01a1n n\u1ebfu ta ti\u1ec1n x\u1eed l\u00fd \\(S\\) v\u00e0 \u0111\u1ec3 \u00fd:</p> <ul> <li>\\(S_1\\) gi\u1ed1ng \\(S_2\\)</li> <li>\\(S_2\\) gi\u1ed1ng \\(S_3\\).</li> </ul> <p>V\u1eady ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i 2 c\u1ee7a \\(S\\) (\\(S_1 S_2\\)) kh\u1edbp v\u1edbi x\u00e2u con \u0111\u1ed9 d\u00e0i 2 \u1edf v\u1ecb tr\u00ed th\u1ee9 2 c\u1ee7a \\(S\\) (\\(S_2 S_3\\)) - n\u00f3i c\u00e1ch kh\u00e1c, \\(S\\) t\u1ef1 kh\u1edbp m\u1ed9t ph\u1ea7n.</p> <p>Sau khi ki\u1ec3m tra kh\u1edbp \u1edf v\u1ecb tr\u00ed s\u1ed1 1 (so s\u00e1nh \\(S\\) v\u1edbi \\(T_1 T_2 T_3\\)), ta \u0111\u00e3 bi\u1ebft:</p> <ul> <li>\\(S_1 = T_1\\)</li> <li>\\(S_2 = T_2\\)</li> <li>\\(S_3 = T_3\\)</li> </ul> <p>Khi ta ki\u1ec3m tra kh\u1edbp \u1edf v\u1ecb tr\u00ed s\u1ed1 2 (so s\u00e1nh \\(S\\) v\u1edbi \\(T_2 T_3 T_4\\)), ta c\u00f3:</p> <ul> <li>\\(S_2 = T_2\\), \\(S_3 = T_3\\)</li> <li>\\(S_1 = S_2\\), \\(S_2 = S_3\\)</li> </ul> <p>Suy ra:</p> <ul> <li>\\(S_1 = T_2\\)</li> <li>\\(S_2 = T_3\\).</li> </ul> <p>Do v\u1eady, vi\u1ec7c so s\u00e1nh v\u1edbi \\(T_2\\), \\(T_3\\) l\u00e0 kh\u00f4ng c\u1ea7n thi\u1ebft n\u1eefa. Ta ch\u1ec9 c\u1ea7n ki\u1ec3m tra n\u1ed1t \\(S_3 = T_4\\) l\u00e0 \u0111\u00e3 k\u1ebft lu\u1eadn \u0111\u01b0\u1ee3c \\(S\\) \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y \u1edf v\u1ecb tr\u00ed 2 trong \\(T\\). Nh\u01b0 v\u1eady, sau \u0111\u00e1p \u00e1n \u1edf v\u1ecb tr\u00ed \\(1\\), ta ch\u1ec9 c\u1ea7n th\u00eam \\(1\\) thao t\u00e1c \u0111\u1ec3 k\u1ebft lu\u1eadn \\(S\\) c\u0169ng c\u00f3 \u1edf v\u1ecb tr\u00ed \\(2\\) trong \\(T\\), thay v\u00ec \\(3\\) nh\u01b0 thu\u1eadt duy\u1ec7t b\u00ecnh th\u01b0\u1eddng. \u0110\u1ebfn \u0111\u00e2y ta bi\u1ebft:</p> <ul> <li>\\(S_1 = T_2\\)</li> <li>\\(S_2 = T_3\\)</li> <li>\\(S_3 = T_4\\)</li> </ul> <p>V\u00e0 t\u01b0\u01a1ng t\u1ef1, l\u1ea1i k\u1ebft lu\u1eadn \u0111\u01b0\u1ee3c:</p> <ul> <li>\\(S_1 = T_3\\)</li> <li>\\(S_2 = T_4\\).</li> </ul> <p>Ta sau \u0111\u00f3 ch\u1ec9 c\u1ea7n so \\(S_3\\) v\u1edbi \\(T_5\\), t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t \u0111\u00e1p \u00e1n n\u1eefa, c\u1ee9 th\u1ebf ti\u1ebfp t\u1ee5c. Trong khi thu\u1eadt to\u00e1n duy\u1ec7t c\u1ea7n \u0111\u1ebfn \\(3\\) ph\u00e9p t\u00ednh cho m\u1ed7i l\u1ea7n so s\u00e1nh \\(S\\) v\u1edbi m\u1ed9t x\u00e2u con c\u1ee7a \\(T\\), k\u0129 thu\u1eadt c\u1ee7a ch\u00fang ta ch\u1ec9 c\u1ea7n \\(3\\) ph\u00e9p t\u00ednh \u1edf l\u1ea7n l\u1eb7p \u0111\u1ea7u v\u00e0 \\(1\\) cho m\u1ed7i k\u1ebft qu\u1ea3 sau, v\u00e0 kh\u00f4ng x\u00e9t l\u1ea1i c\u00e1c k\u00ed t\u1ef1 c\u1ee7a \\(T\\). (\u0110\u00e2y c\u0169ng l\u00e0 c\u00e1ch con ng\u01b0\u1eddi gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n) </p>"},{"location":"translate/wcipeg/kmp/#vi-du-2","title":"V\u00ed d\u1ee5 2","text":"<pre><code>S = aaa\nT =  aabaabaaa\n</code></pre> <p>Nh\u01b0 \u1edf tr\u00ean, ta b\u1eaft \u0111\u1ea7u nh\u01b0 thu\u1eadt to\u00e1n duy\u1ec7t, so s\u00e1nh:</p> <ul> <li>\\(S_1\\) v\u1edbi \\(T_1\\)</li> <li>\\(S_2\\) v\u1edbi \\(T_2\\)</li> <li>\\(S_3\\) v\u1edbi \\(T_3\\)</li> </ul> <p>\u1ede \u0111\u00e2y ta th\u1ea5y \\(S_3\\) kh\u00e1c \\(T_3\\), v\u1eady \\(S\\) kh\u00f4ng kh\u1edbp v\u1edbi \\(T\\) \u1edf v\u1ecb tr\u00ed \\(1\\). \u0110\u1ebfn b\u01b0\u1edbc n\u00e0y thu\u1eadt duy\u1ec7t s\u1ebd ti\u1ebfp t\u1ee5c b\u1eb1ng c\u00e1ch so \\(S_1\\) v\u1edbi \\(T_2\\) v\u00e0 \\(S_2\\) v\u1edbi \\(T_3\\), kh\u00f4ng kh\u1edbp; r\u1ed3i l\u1ea1i so \\(S_1\\) v\u1edbi \\(T_3\\), kh\u00f4ng kh\u1edbp; c\u1ee9 nh\u01b0 v\u1eady.</p> <p>Th\u1ebf nh\u01b0ng ch\u00fang ta s\u1ebd th\u1ea5y ngay r\u1eb1ng sau k\u1ebft qu\u1ea3 kh\u00f4ng kh\u1edbp \u1edf v\u1ecb tr\u00ed \u0111\u1ea7u, kh\u1ea3 n\u0103ng t\u00ecm th\u1ea5y \\(S\\) \u1edf c\u00e1c v\u1ecb tr\u00ed \\(2\\) v\u00e0 \\(3\\) c\u1ee7a \\(T\\) \u0111\u00e3 kh\u00f4ng c\u00f2n. L\u00ed do l\u00e0 v\u00ec, nh\u01b0 \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf v\u00ed d\u1ee5 1:</p> <ul> <li>\\(S_2 = S_3\\)</li> <li>\\(S_3 \\neq T_3\\)</li> </ul> <p>Do \u0111\u00f3 \\(S_2 \\neq T_3\\).</p> <p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady, do:</p> <ul> <li>\\(S_1 = S_2\\)</li> <li>\\(S_2 \\neq T_3\\)</li> </ul> <p>N\u00ean \\(S_1 \\neq T_3\\), ta kh\u00f4ng c\u1ea7n t\u00ecm \\(S\\) \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(3\\) c\u1ee7a \\(T\\) l\u00e0m g\u00ec. S\u1ebd h\u1ee3p l\u00ed h\u01a1n khi b\u1eaft \u0111\u1ea7u ti\u1ebfp \u1edf v\u1ecb tr\u00ed s\u1ed1 \\(4\\) (do ta kh\u00f4ng th\u1ec3 ch\u1eafc ch\u1eafn c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c hay kh\u00f4ng \\(S_2 S_3 S_4 \\, = \\, T_4T_5T_6\\)).</p> <p>Sau khi so s\u00e1nh \u1edf v\u1ecb tr\u00ed 4 v\u00e0 th\u1ea5y ti\u1ebfp t\u1ee5c kh\u00f4ng kh\u1edbp, ta d\u00f9ng l\u1eadp lu\u1eadn t\u01b0\u01a1ng t\u1ef1 lo\u1ea1i b\u1ecf v\u1ecb tr\u00ed s\u1ed1 \\(5\\) v\u00e0 \\(6\\), v\u00e0 b\u1eaft \u0111\u1ea7u l\u1ea1i \u1edf v\u1ecb tr\u00ed s\u1ed1 \\(7\\) (\u1edf \u0111\u00e2y 2 x\u00e2u kh\u1edbp nhau). L\u1ea7n n\u1eefa, h\u00e3y ch\u00fa \u00fd c\u00e1c k\u00ed t\u1ef1 c\u1ee7a \\(T\\) \u0111\u01b0\u1ee3c duy\u1ec7t qua theo tr\u00ecnh t\u1ef1.</p>"},{"location":"translate/wcipeg/kmp/#vi-du-3","title":"V\u00ed d\u1ee5 3","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 ph\u1ee9c t\u1ea1p h\u01a1n:</p> <pre><code>S = tartan\nT = tartaric_acid\n</code></pre> <p>Ta quan s\u00e1t th\u1ea5y ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(2\\) c\u1ee7a \\(S\\) kh\u1edbp v\u1edbi ch\u00ednh x\u00e2u con \u0111\u1ed9 d\u00e0i \\(2\\) b\u1eaft \u0111\u1ea7u \u1edf v\u1ecb tr\u00ed s\u1ed1 \\(4\\) c\u1ee7a n\u00f3. B\u00e2y gi\u1edd l\u1ea7n l\u01b0\u1ee3t so s\u00e1nh c\u00e1c v\u1ecb tr\u00ed t\u1eeb \\(S_1\\) \u0111\u1ebfn \\(S_6\\) v\u1edbi \\(T_1\\) \u0111\u1ebfn \\(T_6\\). Ta th\u1ea5y \\(S_6\\) kh\u00f4ng kh\u1edbp v\u1edbi \\(T_6\\), v\u1eady kh\u00f4ng c\u00f3 k\u1ebft qu\u1ea3 \u1edf v\u1ecb tr\u00ed s\u1ed1 \\(1\\).</p> <p>\u1ede \u0111\u00e2y h\u00e3y ch\u00fa \u00fd:</p> <ul> <li>\\(S_1 \\neq S_2\\)</li> <li>\\(S_1 \\neq S_3\\)</li> <li>\\(S_2 = T_2\\)</li> <li>\\(S_3 = T_3\\)</li> </ul> <p>N\u00ean ta c\u00f3 \\(S_1 \\neq T_2\\) v\u00e0 \\(S_1 \\neq T_3\\). V\u1eady kh\u00f4ng th\u1ec3 c\u00f3 tr\u00f9ng kh\u1edbp \u1edf v\u1ecb tr\u00ed s\u1ed1 \\(2\\) v\u00e0 \\(3\\).</p> <p>T\u1edbi \u0111\u00e2y h\u00e3y nh\u1edb l\u1ea1i r\u1eb1ng:</p> <ul> <li>\\(S_1 = S_4\\)</li> <li>\\(S_2 = S_5\\)</li> <li>\\(S_4 = T_4\\)</li> <li>\\(S_5 = T_5\\)</li> </ul> <p>Ta suy ra \\(S_1 = T_4\\), \\(S_2 = T_5\\). V\u1eady ta s\u1ebd ti\u1ebfp t\u1ee5c ki\u1ec3m tra v\u1ecb tr\u00ed s\u1ed1 4 b\u1eb1ng vi\u1ec7c so s\u00e1nh \\(S_3\\) v\u1edbi \\(T_6\\). L\u00e0m theo c\u00e1ch n\u00e0y, ta lo\u1ea1i b\u1ecf \u0111\u01b0\u1ee3c hai tr\u01b0\u1eddng h\u1ee3p v\u00e0 b\u1eaft \u0111\u1ea7u duy\u1ec7t l\u1ea1i kh\u00f4ng ph\u1ea3i \u1edf \u0111\u1ea7u m\u00e0 \u1edf gi\u1eefa x\u00e2u \\(S\\), tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c x\u00e9t l\u1ea1i \\(T_4\\) v\u00e0 \\(T_5\\).</p>"},{"location":"translate/wcipeg/kmp/#y-tuong-chinh","title":"\u00dd t\u01b0\u1edfng ch\u00ednh","text":"<p>G\u1ecdi \\(S^i\\) l\u00e0 ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(i\\) c\u1ee7a x\u00e2u \\(S\\).</p> <p>C\u00e1c v\u00ed d\u1ee5 tr\u00ean ch\u00ednh l\u00e0 t\u01b0 t\u01b0\u1edfng ho\u1ea1t \u0111\u1ed9ng c\u1ee7a KMP: d\u1ef1a tr\u00ean quan s\u00e1t r\u1eb1ng m\u1ed9t s\u1ed1 x\u00e2u con c\u1ee7a x\u00e2u c\u1ea7n t\u00ecm c\u00f3 kh\u1edbp v\u1edbi x\u00e2u con n\u00e0o kh\u00e1c c\u1ee7a x\u00e2u c\u1ea7n t\u00ecm hay kh\u00f4ng. Tuy nhi\u00ean \u0111\u1ecbnh h\u01b0\u1edbng chung, mang t\u00ednh h\u1ec7 th\u1ed1ng c\u1ee7a thu\u1eadt to\u00e1n th\u00ec ch\u01b0a r\u00f5 r\u00e0ng. \u0110\u1ecbnh h\u01b0\u1edbng n\u00e0y \u0111\u01b0\u1ee3c ph\u00e1t bi\u1ec3u nh\u01b0 sau:</p> <p>\u1ede m\u1ed7i v\u1ecb tr\u00ed \\(i\\) c\u1ee7a \\(S\\), t\u00ecm h\u1eadu t\u1ed1 chu\u1ea9n d\u00e0i nh\u1ea5t c\u1ee7a \\(S^i\\) m\u00e0 c\u0169ng l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\). (H\u1eadu t\u1ed1 chu\u1ea9n c\u1ee7a m\u1ed9t x\u00e2u l\u00e0 h\u1eadu t\u1ed1 c\u00f3 \u0111\u1ed9 d\u00e0i b\u00e9 h\u01a1n x\u00e2u \u0111\u00f3.)</p> <p>Ta s\u1ebd g\u1ecdi \u0111\u1ed9 d\u00e0i c\u1ee7a x\u00e2u con n\u00e0y l\u00e0 \\(\\pi_i\\). Ta c\u0169ng c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a \\(\\pi_i\\) l\u00e0 s\u1ed1 \\(j\\) l\u1edbn nh\u1ea5t \u0111\u1ec3 \\(S^j \\sqsupset S^i\\). K\u00fd hi\u1ec7u \\(X \\sqsupset Y\\) ngh\u0129a l\u00e0 \\(X\\) l\u00e0 h\u1eadu t\u1ed1 c\u1ee7a \\(Y\\).</p> <p>B\u1ea3ng \\(\\pi\\), g\u1ecdi l\u00e0 h\u00e0m ti\u1ec1n t\u1ed1, chi\u1ebfm b\u1ed9 nh\u1edb tuy\u1ebfn t\u00ednh, v\u00e0 nh\u01b0 s\u1ebd tr\u00ecnh b\u00e0y d\u01b0\u1edbi \u0111\u00e2y, c\u00f3 th\u1ec3 t\u00ednh \u0111\u01b0\u1ee3c trong th\u1eddi gian tuy\u1ebfn t\u00ednh. B\u1ea3ng s\u1ebd ch\u1ee9a to\u00e0n b\u1ed9 c\u00e1c th\u00f4ng tin c\u1ea7n thi\u1ebft \u0111\u1ec3 m\u00e1y th\u1ef1c hi\u1ec7n nh\u1eefng ph\u01b0\u01a1ng \u00e1n \"th\u00f4ng minh nh\u1ea5t\" cho qu\u00e1 tr\u00ecnh t\u00ecm ki\u1ebfm. C\u1ee5 th\u1ec3 h\u01a1n:</p> <ul> <li>Trong v\u00ed d\u1ee5 1 v\u00e0 2:<ul> <li>\\(\\pi_1 = 0\\), kh\u00f4ng c\u00f3 ti\u1ec1n t\u1ed1 chu\u1ea9n th\u1ecfa m\u00e3n.</li> <li>\\(\\pi_2 = 1\\), ti\u1ec1n t\u1ed1 <code>a</code> kh\u1edbp h\u1eadu t\u1ed1 <code>a</code>.</li> <li>\\(\\pi_3 = 2\\), ti\u1ec1n t\u1ed1 <code>aa</code> kh\u1edbp h\u1eadu t\u1ed1 <code>aa</code>.</li> </ul> </li> <li>Trong v\u00ed d\u1ee5 3:<ul> <li>\\(\\pi_1 = 0\\)</li> <li>\\(\\pi_2 = 0\\)</li> <li>\\(\\pi_3 = 0\\)</li> <li>\\(\\pi_4 = 1\\), ti\u1ec1n t\u1ed1 <code>t</code> kh\u1edbp v\u1edbi x\u00e2u con <code>t</code> k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(4\\).</li> <li>\\(\\pi_5 = 2\\), ti\u1ec1n t\u1ed1 <code>ta</code> kh\u1edbp v\u1edbi x\u00e2u con <code>ta</code> k\u1ebft th\u00fac \u1edf v\u1ecb tr\u00ed th\u1ee9 \\(5\\).</li> <li>\\(\\pi_6 = 0\\).</li> </ul> </li> </ul> <p>T\u1ed5ng qu\u00e1t, b\u1ea3ng \\(\\pi\\) cho ta bi\u1ebft, sau m\u1ed9t l\u1ea7n kh\u1edbp ho\u1eb7c kh\u00f4ng kh\u1edbp gi\u1eefa \"c\u00e2y kim\" v\u00e0 \"\u0111\u1ed1ng r\u01a1m\", v\u1ecb tr\u00ed ti\u1ebfp theo trong \"\u0111\u1ed1ng r\u01a1m\" ta c\u1ea7n ki\u1ec3m tra l\u00e0 g\u00ec. C\u00e1c ph\u00e9p so s\u1ebd ti\u1ebfp t\u1ee5c \u1edf c\u00e1c v\u1ecb tr\u00ed ti\u1ebfp theo, kh\u00f4ng bao gi\u1edd quay ng\u01b0\u1ee3c v\u1ec1 c\u00e1c k\u00ed t\u1ef1 ta \u0111\u00e3 ki\u1ec3m tra r\u1ed3i.</p>"},{"location":"translate/wcipeg/kmp/#tinh-toan-o-phuc-tap","title":"T\u00ednh to\u00e1n \u0111\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>\u0110\u1ec3 t\u00ednh \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho h\u00e0m ti\u1ec1n x\u1eed l\u00ed, tr\u01b0\u1edbc ti\u00ean ta c\u00f3 quan s\u00e1t:</p> <ul> <li>D\u00e3y \\(\\pi_i^{\\*} = i, \\pi_i, \\pi_{\\pi_i}, \\pi_{\\pi_{\\pi_i}}, ... ,0\\) ch\u1ee9a to\u00e0n b\u1ed9 nh\u1eefng gi\u00e1 tr\u1ecb \\(j\\) th\u1ecfa m\u00e3n \\(S^j \\sqsupset S^i\\).</li> </ul> <p>V\u1eady, ta c\u00f3 th\u1ec3 \u0111\u1ebfm to\u00e0n b\u1ed9 nh\u1eefng h\u1eadu t\u1ed1 c\u1ee7a \\(S^i\\) \u0111\u1ed3ng th\u1eddi l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\) b\u1eb1ng c\u00e1ch b\u1eaft \u0111\u1ea7u v\u1edbi \\(i\\), d\u00f2 n\u00f3 trong b\u1ea3ng \\(\\pi\\), d\u00f9ng k\u1ebft qu\u1ea3 \u0111\u00f3 d\u00f2 ti\u1ebfp t\u1ee5c v\u00e0 ti\u1ebfp t\u1ee5c, \u0111\u1ebfn khi k\u1ebft th\u00fac b\u1eb1ng \\(0\\). </p> <p>Ch\u1ee9ng minh:</p> <ul> <li> <p>\u0110\u1ea7u ti\u00ean ta ch\u1ee9ng minh chi\u1ec1u xu\u00f4i: n\u1ebfu \\(j\\) xu\u1ea5t hi\u1ec7n trong \\(\\pi_i^{\\*}\\) th\u00ec \\(S^j \\sqsupset S^i\\).</p> <ul> <li>N\u1ebfu \\(j\\) l\u00e0 ph\u1ea7n t\u1eed \u0111\u1ea7u trong \\(\\pi_i^{\\*}\\). V\u1eady \\(j = i\\) v\u00e0 h\u1eb3n nhi\u00ean \\(S^j \\sqsupset S^i\\).</li> <li>N\u1ebfu \\(j\\) kh\u00f4ng l\u00e0 ph\u1ea7n t\u1eed \u0111\u1ea7u: G\u1ecdi ph\u1ea7n t\u1eed tr\u01b0\u1edbc n\u00f3 l\u00e0 \\(k\\). V\u1eady \\(\\pi_k = j\\). Theo \u0111\u1ecbnh ngh\u0129a, \\(S^j \\sqsupset S^k\\). Nh\u01b0ng \\(S^k \\sqsupset S^i\\). Do quan h\u1ec7 n\u00e0y c\u00f3 t\u00ednh ch\u1ea5t b\u1eafc c\u1ea7u, \\(S^j \\sqsupset S^i\\).</li> </ul> </li> <li> <p>Gi\u1edd ta ch\u1ee9ng minh chi\u1ec1u ng\u01b0\u1ee3c: n\u1ebfu \\(S^j \\sqsupset S^i\\), \\(j\\) thu\u1ed9c \\(\\pi_i^{\\*}\\). Gi\u1ea3 s\u1eed \\(j\\) kh\u00f4ng xu\u1ea5t hi\u1ec7n trong d\u00e3y. R\u00f5 r\u00e0ng \\(0 &lt; j &lt; i\\) do \\(i\\) v\u00e0 \\(0\\) \u0111\u1ec1u c\u00f3 trong d\u00e3y. Do \\(\\pi_i^{\\*}\\) lu\u00f4n gi\u1ea3m, ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t \\(k\\) thu\u1ed9c \\(\\pi_i^{\\*}\\) sao cho \\(k&gt;j\\) v\u00e0 \\(\\pi_k&lt;j\\). N\u00f3i c\u00e1ch kh\u00e1c, ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t v\u00e0 ch\u1ec9 m\u1ed9t \\(k\\) m\u00e0 sau n\u00f3 \\(j\\) \"c\u00f3 l\u1ebd\" s\u1ebd xu\u1ea5t hi\u1ec7n (\u0111\u1ec3 gi\u1eef cho d\u00e3y lu\u00f4n gi\u1ea3m). \u1ede ph\u1ea7n \u0111\u1ea7u ch\u1ee9ng minh ta \u0111\u00e3 bi\u1ebft \\(S^k \\sqsupset S^i\\). Do h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(j\\) c\u1ee7a \\(S^i\\) l\u00e0 m\u1ed9t h\u1eadu t\u1ed1 c\u1ee7a h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(k\\) c\u1ee7a \\(S^i\\), h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(j\\) c\u1ee7a \\(S^i\\) ph\u1ea3i kh\u1edbp v\u1edbi h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(j\\) c\u1ee7a \\(S^k\\). Nh\u01b0ng h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(j\\) c\u1ee7a \\(S^i\\) c\u0169ng kh\u1edbp v\u1edbi \\(S^j\\), n\u00ean \\(S^j\\) kh\u1edbp v\u1edbi h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(j\\) c\u1ee7a \\(S^k\\). V\u1eady ta k\u1ebft lu\u1eadn \\(\\pi_k \\ge j\\). Th\u1ebf nh\u01b0ng \\(j \\ge \\pi_k\\), m\u00e2u thu\u1eabn.</p> </li> </ul> <p>C\u0169ng ch\u00ednh nh\u1edd vi\u1ec7c ch\u1ee9ng minh n\u00e0y, ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ednh b\u1ea3ng \\(\\pi\\). V\u1edbi m\u1ed7i \\(i\\):</p> <ul> <li>\u0110\u1ea7u ti\u00ean ta t\u00ecm s\u1ed1 \\(j &gt; 0\\) sao cho \\(S^j \\sqsupset S^i\\).</li> <li>N\u1ebfu kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c, ta k\u1ebft lu\u1eadn \\(\\pi_i = 0\\) (nh\u01b0 tr\u01b0\u1eddng h\u1ee3p \\(i=1\\)).</li> <li>N\u1ebfu c\u00f3 \\(j &gt; 0\\) th\u1ecfa m\u00e3n, v\u1eady khi x\u00f3a b\u1ecf k\u00ed t\u1ef1 cu\u1ed1i c\u1ee7a h\u1eadu t\u1ed1 n\u00e0y, ta thu \u0111\u01b0\u1ee3c m\u1ed9t h\u1eadu t\u1ed1 c\u1ee7a \\(S_{i-1}\\) \u0111\u1ed3ng th\u1eddi l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\), t\u1ee9c l\u00e0 \\(S^{j-1} \\sqsupset S^{i-1}\\). V\u1eady b\u01b0\u1edbc \u0111\u1ea7u ta \u0111\u1ebfm m\u1ecdi h\u1eadu t\u1ed1 chu\u1ea9n v\u00e0 kh\u00f4ng-r\u1ed7ng c\u1ee7a \\(S^{i-1}\\) \u0111\u1ed3ng th\u1eddi l\u00e0 ti\u1ec1n t\u1ed1 c\u1ee7a \\(S\\). N\u1ebfu ta t\u00ecm \u0111\u01b0\u1ee3c m\u1ed9t h\u1eadu t\u1ed1 \u0111\u1ed9 d\u00e0i \\(k\\) \u0111\u1ed3ng th\u1eddi th\u1ecfa \\(S_k = S_i\\), v\u1eady \\(S^{k+1} \\sqsupset S^i\\), v\u00e0 \\(k+1\\) l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb kh\u1ea3 d\u0129 c\u1ee7a \\(j\\). V\u1eady ta s\u1ebd g\u00e1n \\(k = \\pi_{i-1}\\) v\u00e0 ti\u1ebfp t\u1ee5c l\u1eb7p l\u1ea1i trong d\u00e3y $\\pi_{\\pi_i}, \\pi_{\\pi_{\\pi_i}}, ... $ Qu\u00e1 tr\u00ecnh s\u1ebd d\u1eebng l\u1ea1i n\u1ebfu g\u1eb7p ph\u1ea3i m\u1ed9t ph\u1ea7n t\u1eed \\(j\\) trong d\u00e3y sao cho \\(S_{j+1} = S_i\\), v\u00e0 g\u00e1n \\(\\pi_i = j+1\\); c\u00e1ch n\u00e0y s\u1ebd lu\u00f4n cho k\u1ebft qu\u1ea3 t\u1ed1i \u01b0u v\u00ec d\u00e3y \\(\\pi_{i-1}^*\\) lu\u00f4n gi\u1ea3m v\u00e0 n\u00f3 ch\u1ee9a to\u00e0n b\u1ed9 gi\u00e1 tr\u1ecb \\(k\\) kh\u1ea3 d\u0129. N\u1ebfu \u0111i \u0111\u1ebfn h\u1ebft d\u00e3y, v\u1eady \\(\\pi_i = 0\\).</li> </ul> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u00e3 gi\u1ea3 \u0111\u1ec3 t\u00ednh \\(\\pi\\):</p> <pre><code>\u03c0[1] \u2190 0\nfor i \u2208 [2..m]\n    k \u2190 \u03c0[i-1]\n    while k &gt; 0 and S[k+1] \u2260 S[i]\n        k \u2190 \u03c0[k]\n    if S[k+1] = S[i]\n        \u03c0[i] \u2190 k+1\n    else\n        \u03c0[i] \u2190 0\n</code></pre> <p>Ho\u1eb7c c\u00f3 th\u1ec3 vi\u1ebft g\u1ecdn l\u1ea1i nh\u01b0 sau:</p> <pre><code>\u03c0[1] \u2190 0\nk \u2190 0\nfor i \u2208 [2..m]\n    while k &gt; 0 and S[k+1] \u2260 S[i]\n        k \u2190 \u03c0[k]\n    if S[k+1] = S[i]\n        k \u2190 k+1\n    \u03c0[i] \u2190 k\n</code></pre> <p>Thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m)\\). \u0110\u1ec3 hi\u1ec3u t\u1ea1i sao th\u00ec h\u00e3y \u0111\u1ec3 \u00fd, <code>k</code> kh\u00f4ng bao gi\u1edd \u00e2m; n\u00f3 kh\u00f4ng th\u1ec3 gi\u1ea3m nhi\u1ec1u h\u01a1n m\u1ee9c n\u00f3 t\u0103ng. <code>k</code> ch\u1ec9 t\u0103ng \u1edf d\u00f2ng <code>k \u2190 k+1</code>, v\u1ed1n ch\u1ec9 b\u1ecb g\u1ecdi nhi\u1ec1u nh\u1ea5t l\u00e0 \\(m-1\\) l\u1ea7n. V\u1eady <code>k</code> gi\u1ea3m nhi\u1ec1u nh\u1ea5t l\u00e0 k l\u1ea7n. Nh\u01b0ng <code>k</code> gi\u1ea3m \u1edf m\u1ed7i l\u1ea7n l\u1eb7p c\u1ee7a v\u00f2ng <code>while</code>, v\u1eady t\u1ed5ng t\u1ea5t c\u1ea3 c\u00e1c b\u01b0\u1edbc trong v\u00f2ng <code>while</code> kh\u00f4ng qu\u00e1 \\(O(m)\\). T\u1ea5t c\u1ea3 nh\u1eefng c\u00e2u l\u1ec7nh trong v\u00f2ng <code>for</code> \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 h\u1eb1ng s\u1ed1, n\u00ean c\u1ea3 thu\u1eadt to\u00e1n c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(m)\\).</p>"},{"location":"translate/wcipeg/kmp/#so-khop","title":"So kh\u1edbp","text":"<p>Coi nh\u01b0 ta \u0111\u00e3 x\u00e2y d\u1ef1ng xong b\u1ea3ng \\(\\pi\\). \u0110\u00e2y l\u00e0 l\u00fac ta s\u1eed d\u1ee5ng nh\u1eefng th\u00f4ng tin c\u1ef1c kh\u1ed5 l\u1ea5y \u0111\u01b0\u1ee3c n\u00e0y. Gi\u1ea3 s\u1eed r\u1eb1ng ta \u0111\u00e3 ki\u1ec3m tra \u0111ang v\u1ecb tr\u00ed th\u1ee9 \\(j\\), v\u00e0 \\(k\\) k\u00ed t\u1ef1 \u0111\u1ea7u c\u1ee7a \\(S\\) \u0111\u00e3 kh\u1edbp. N\u00f3i c\u00e1ch kh\u00e1c:</p> <ul> <li>\\(S_1 = T_j\\)</li> <li>\\(S_2 = T_{j+1}\\)</li> <li>\\(S_3 = T_{j+2}\\)</li> <li>...</li> <li>\\(S_k = T_{j+k-1}\\).</li> </ul> <p>C\u00f3 2 kh\u1ea3 n\u0103ng:</p> <ul> <li>Ta mu\u1ed1n ti\u1ebfp t\u1ee5c ch\u1ea1y tr\u00ean \\(S\\) v\u00e0 \\(T\\) \u0111\u1ec3 ki\u1ec3m tra c\u00e1c c\u1eb7p k\u00ed t\u1ef1</li> <li>Ta ki\u1ec3m tra \u1edf m\u1ed9t v\u00ed tr\u1ecb kh\u00e1c tr\u00ean \\(T\\).</li> </ul> <p>L\u00ed do cho tr\u01b0\u1eddng h\u1ee3p 2 l\u00e0:</p> <ul> <li>ho\u1eb7c \\(k = m\\) (t\u1ee9c \u0111\u00e3 t\u00ecm th\u1ea5y m\u1ed9t v\u1ecb tr\u00ed tr\u00f9ng kh\u1edbp c\u1ee7a \\(S\\) tr\u00ean \\(T\\) v\u00e0 ta c\u1ea7n ti\u1ebfp t\u1ee5c \u1edf v\u1ecb tr\u00ed kh\u00e1c)</li> <li>ho\u1eb7c \\(S_{k+1} \\neq T_{j+k}\\) (lo\u1ea1i b\u1ecf v\u1ecb tr\u00ed hi\u1ec7n t\u1ea1i).</li> </ul> <p>N\u1ebfu ta \u0111\u00e3 bi\u1ebft t\u1eeb \\(S_1\\) \u0111\u1ebfn \\(S_k\\) kh\u1edbp v\u1edbi t\u1eeb \\(T_j\\) \u0111\u1ebfn \\(T_{j+k-1}\\), v\u1ecb tr\u00ed n\u00e0o ta c\u00f3 th\u1ec3 b\u1ecf qua? \u0110\u00e2y l\u00e0 c\u1ed1t l\u00f5i c\u1ee7a thu\u1eadt to\u00e1n KMP:</p> <ul> <li>\u0110\u1ecbnh l\u00fd: N\u1ebfu \\(k &gt; 0\\) th\u00ec \\(p = k - \\pi_k\\) s\u1ebd l\u00e0 gi\u00e1 tr\u1ecb \\(p\\) nh\u1ecf nh\u1ea5t sao cho \\(S_1,...,S_{k-p}\\) kh\u1edbp v\u1edbi \\(T_{j+p},...,T_{j+k-1}\\). (N\u1ebfu \\(k=0\\), \\(p=1\\).)</li> </ul> <p>N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 h\u00ecnh dung h\u01a1n, ta c\u00f3 th\u1ec3 b\u1ecf qua t\u1ea5t c\u1ea3 c\u00e1c v\u1ecb tr\u00ed t\u1eeb \\(0\\) \u0111\u1ebfn \\(p-1\\).</p> <p>Suy ngh\u0129 th\u1eadt k\u0129 l\u00ed thuy\u1ebft n\u00e0y.</p> <ul> <li>N\u1ebfu \\(p &gt; 0\\) kh\u00f4ng th\u1ecfa m\u00e3n \\(S_1,...,S_{k-p}\\) kh\u1edbp v\u1edbi \\(T_{j+p},...,T_{j+k-1}\\), v\u1eady \\(S\\) kh\u00f4ng kh\u1edbp v\u1edbi \\(T\\) \u1edf v\u1ecb tr\u00ed \\(j+p\\), t\u1ee9c ta c\u00f3 th\u1ec3 lo\u1ea1i b\u1ecf v\u1ecb tr\u00ed n\u00e0y.</li> <li>M\u1eb7t kh\u00e1c, n\u1ebfu \\(p &gt; 0\\) th\u1ecfa m\u00e3n y\u00eau c\u1ea7u tr\u00ean, x\u00e2u \\(S\\) c\u00f3 kh\u1ea3 n\u0103ng kh\u1edbp v\u1edbi \\(T\\) \u1edf v\u1ecb tr\u00ed \\(j+p\\), v\u00e0 th\u1ef1c t\u1ebf l\u00e0 c\u00e1c k\u00ed t\u1ef1 t\u1eeb v\u1ecb tr\u00ed \\(j+p\\) \u0111\u1ebfn \\(j+k-1\\) \u0111\u1ec1u \u0111\u00e3 kh\u1edbp v\u1edbi c\u00e1c v\u1ecb tr\u00ed t\u01b0\u01a1ng \u1ee9ng \u1edf \\(S\\). Ta ch\u1ec9 c\u1ea7n ti\u1ebfp t\u1ee5c b\u1eb1ng c\u00e1ch so \\(S_{k-p+1}\\) v\u1edbi \\(T_{j+k}\\), \"kh\u00f4ng quay \u0111\u1ea7u l\u1ea1i\" nh\u01b0 \u0111\u00e3 h\u1ee9a.</li> </ul> <p>Ch\u1ee9ng minh:</p> <ul> <li>C\u00f3 \\(0 \\le q &lt; k\\).</li> <li>N\u1ebfu \\(S^q \\sqsupset S^k\\), v\u1eady theo \u0111\u1ecbnh ngh\u0129a ta c\u00f3 \\(S_1,...,S_q = S_{k-q+1},..., S_k\\). Nh\u01b0ng v\u00ec \\(S_1,..., S_k = T_j,...,T_{j+k-1}\\), n\u00ean \\(S_{k-q+1},...,S_k = T_{j+k-q},...,T_{j+k-1}\\). V\u1eady \\(S_1,...S_q = T_{j+k-q},...,T_{j+k-1}\\).</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu kh\u00f4ng c\u00f3 \\(S^q \\sqsupset S^k\\), v\u1eady \\(S_1,...,S_q \\neq S_{k-q+1},..., S_k\\), d\u1eabn \u0111\u1ebfn \\(S_{k-q+1},...,S_k = T_{j+k-q},...,T_{j+k-1}\\) l\u00e0 sai, v\u00e0 d\u1eabn \u0111\u1ebfn \\(S_1,...S_q = T_{j+k-q},...,T_{j+k-1}\\) l\u00e0 sai.</li> </ul> <p>Ta k\u1ebft lu\u1eadn r\u1eb1ng \\(k-q\\) l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb kh\u1ea3 d\u0129 c\u1ee7a \\(p\\) khi v\u00e0 ch\u1ec9 khi \\(S^q \\sqsupset S^k\\). Do maximum c\u1ee7a \\(q\\) l\u00e0 \\(\\pi_k\\), minumum c\u1ee7a \\(p\\) \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1edfi \\(k-\\pi_k\\).</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u00e3 gi\u1ea3:</p> <pre><code>j \u2190 1\nk \u2190 0\nwhile j+m-1 \u2264 n\n    while k \u2264 m and S[k+1] = T[j+k]\n        k \u2190 k+1\n    if k = m\n        print \"Match at position \" j\n    if k = 0\n        j \u2190 j+1\n    else\n        j \u2190 j+k-\u03c0[k]\n        k \u2190 \u03c0[k]\n</code></pre> <p>Ta d\u00f2 trong x\u00e2u c\u1ea7n search m\u1ed9t l\u1ea7n m\u1ed9t k\u00ed t\u1ef1; k\u00ed t\u1ef1 \u0111ang \u0111\u01b0\u1ee3c x\u00e9t l\u00e0 n\u1eb1m \u1edf v\u1ecb tr\u00ed \\(j+k\\). N\u1ebfu x\u1ea3y ra kh\u00f4ng tr\u00f9ng kh\u1edbp, ta d\u00f9ng b\u1ea3ng \\(\\pi\\) \u0111\u1ec3 t\u00ecm \u0111\u1ebfn v\u1ecb tr\u00ed kh\u1ea3 d\u0129 ti\u1ebfp theo.</p> <p>\u0110o\u1ea1n code t\u01b0\u01a1ng \u0111\u01b0\u01a1ng d\u01b0\u1edbi \u0111\u00e2y th\u1ec3 hi\u1ec7n r\u00f5 h\u01a1n vi\u1ec7c thu\u1eadt to\u00e1n x\u00e9t m\u1ed9t k\u00ed t\u1ef1 m\u1ed9t l\u1ea7n v\u00e0 kh\u00f4ng quay ng\u01b0\u1ee3c l\u1ea1i:</p> <pre><code>k \u2190 0\nfor i \u2208 [1..n]\n    while k &gt; 0 and S[k+1] \u2260 T[i]\n        k \u2190 \u03c0[k]\n    if S[k+1] = T[i]\n        k \u2190 k+1\n    if k = m\n        print \"Match at position \" i-m+1\n        k \u2190 \u03c0[k]\n</code></pre> <p>\u1ede \u0111\u00e2y, <code>i</code> t\u01b0\u01a1ng \u1ee9ng v\u1edbi <code>j+k</code> \u1edf \u0111o\u1ea1n code tr\u00ean. M\u1ed7i l\u1ea7n l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p trong c\u1ee7a m\u1ed9t trong 2 \u0111o\u1ea1n code t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t l\u1ea7n l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p ngo\u00e0i \u1edf \u0111o\u1ea1n c\u00f2n l\u1ea1i. \u1ede \u0111o\u1ea1n th\u1ee9 hai, ta c\u0169ng c\u00f3 th\u1ec3 ch\u1ee9ng minh thu\u1eadt c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p \\(O(n)\\); m\u1ed7i l\u1ea7n v\u00f2ng <code>while</code> \u1edf trong \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n, gi\u00e1 tr\u1ecb c\u1ee7a <code>k</code> gi\u1ea3m, nh\u01b0ng n\u00f3 kh\u00f4ng th\u1ec3 gi\u1ea3m nhi\u1ec1u h\u01a1n <code>n</code> l\u1ea7n b\u1edfi <code>k</code> kh\u1edfi \u0111\u1ea7u l\u00e0 kh\u00f4ng v\u00e0 kh\u00f4ng bao gi\u1edd \u00e2m. <code>k</code> ch\u1ec9 t\u0103ng nhi\u1ec1u nh\u1ea5t m\u1ed9t l\u1ea7n \u1edf v\u00f2ng l\u1eb7p ngo\u00e0i (t\u1ee9c nhi\u1ec1u nh\u1ea5t t\u1ed5ng c\u1ed9ng <code>n</code> l\u1ea7n). V\u1eady v\u00f2ng l\u1eb7p trong ch\u1ec9 l\u1eb7p nhi\u1ec1u nh\u1ea5t <code>n</code> l\u1ea7n, v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c c\u00e2u l\u1ec7nh kh\u00e1c c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p h\u1eb1ng s\u1ed1.</p>"},{"location":"translate/wcipeg/kmp/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:","text":"<ul> <li>VNOJ - SUBSTR.<ul> <li>Code C++</li> </ul> </li> <li>VNOJ - TWOOPERS</li> </ul>"},{"location":"translate/wcipeg/tree/","title":"C\u00e2y (Tree)","text":"<p>Ngu\u1ed3n: wcipeg</p>"},{"location":"translate/wcipeg/tree/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>C\u00e2y (tree) l\u00e0 m\u1ed9t \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng li\u00ean th\u00f4ng kh\u00f4ng c\u00f3 chu tr\u00ecnh.</li> <li>T\u1eadp h\u1ee3p c\u00e1c c\u00e2y kh\u00f4ng c\u00f3 \u0111\u1ec9nh chung g\u1ecdi l\u00e0 m\u1ed9t r\u1eebng (forest).</li> </ul>"},{"location":"translate/wcipeg/tree/#tinh-chat","title":"T\u00ednh ch\u1ea5t","text":"<p>V\u1edbi m\u1ed9t \u0111\u1ed3 th\u1ecb b\u1ea5t k\u00ec, n\u1ebfu 2 trong 3 m\u1ec7nh \u0111\u1ec1 sau l\u00e0 \u0111\u00fang, th\u00ec m\u1ec7nh \u0111\u1ec1 c\u00f2n l\u1ea1i l\u00e0 \u0111\u00fang:</p> <ul> <li>\u0110\u1ed3 th\u1ecb li\u00ean th\u00f4ng</li> <li>\u0110\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 chu tr\u00ecnh</li> <li>S\u1ed1 \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb l\u1edbn h\u01a1n s\u1ed1 c\u1ea1nh c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u00fang 1 \u0111\u01a1n v\u1ecb</li> </ul> <p>\u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0, ch\u1ec9 c\u1ea7n th\u1ecfa 2 trong 3 \u0111i\u1ec1u ki\u1ec7n \u0111\u00f3 th\u00ec \u0111\u1ed3 th\u1ecb ch\u1eafc ch\u1eafn s\u1ebd l\u00e0 m\u1ed9t c\u00e2y, v\u00e0 c\u00e2y \u0111\u00f3 s\u1ebd th\u1ecfa c\u1ea3 3 \u0111i\u1ec1u ki\u1ec7n tr\u00ean (tr\u1eeb c\u00e2y r\u1ed7ng - c\u00e2y kh\u00f4ng c\u00f3 \u0111\u1ec9nh n\u00e0o).</p> <p>Ngo\u00e0i ra, n\u1ebfu m\u1ed7i c\u1eb7p \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb \u0111\u1ec1u c\u00f3 ch\u00ednh x\u00e1c 1 \u0111\u01b0\u1eddng \u0111i th\u00ec \u0111\u1ed3 th\u1ecb l\u00e0 c\u00e2y v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>M\u1ecdi c\u00e2y \u0111\u1ec1u l\u00e0 \u0111\u1ed3 th\u1ecb ph\u1eb3ng (planar graph), nh\u01b0ng kh\u00f4ng ph\u1ea3i m\u1ecdi \u0111\u1ed3 th\u1ecb ph\u1eb3ng \u0111\u1ec1u l\u00e0 c\u00e2y.</p>"},{"location":"translate/wcipeg/tree/#cac-vi-du","title":"C\u00e1c v\u00ed d\u1ee5:","text":"<p>C\u00e2y c\u00f3 g\u1ed1c (rooted tree) l\u00e0 c\u00e2y c\u00f3 m\u1ed9t \u0111\u1ec9nh c\u1ee5 th\u1ec3 g\u1ecdi l\u00e0 g\u1ed1c (root) c\u1ee7a c\u00e2y. M\u1ed9t s\u1ed1 c\u00e2y kh\u00f4ng c\u00f3 g\u1ed1c (unrooted tree), c\u00f3 th\u1ec3 l\u00e0 do c\u00e2y kh\u00f4ng c\u1ea7n \u0111\u1ec9nh n\u00e0o \u0111\u1eb7c bi\u1ec7t \u0111\u1ec3 l\u00e0m g\u1ed1c.</p> <ul> <li> <p>Trong m\u1ed9t c\u00e2y trong t\u1ef1 nhi\u00ean, c\u00f3 m\u1ed9t s\u1ed1 \u0111i\u1ec3m m\u00e0 \u1edf \u0111\u00f3 th\u00e2n v\u00e0 c\u00e0nh c\u00e2y ph\u00e2n nh\u00e1nh. Ta coi nh\u1eefng \u0111i\u1ec3m \u0111\u00f3, c\u00f9ng v\u1edbi m\u1eb7t \u0111\u1ea5t v\u00e0 c\u00e1c \u0111i\u1ec3m k\u1ebft th\u00fac c\u1ee7a nh\u1eefng c\u00e0nh c\u00e2y nh\u1ecf nh\u1ea5t l\u00e0 c\u00e1c \u0111\u1ec9nh \u0111\u1ed3 th\u1ecb, trong \u0111\u00f3 \u0111\u1ec9nh \u1edf m\u1eb7t \u0111\u1ea5t l\u00e0 g\u1ed1c c\u00e2y, c\u00f2n th\u00e2n c\u00e2y v\u00e0 c\u00e0nh c\u00e2y l\u00e0 c\u00e1c c\u1ea1nh. \u00dd ngh\u0129a c\u1ee7a vi\u1ec7c n\u00e0y l\u00e0 \u0111\u1ec3 th\u00e2n v\u00e0 c\u00e1c c\u00e0nh \u0111\u1ec1u \u0111\u01b0\u1ee3c coi l\u00e0 xu\u1ea5t ph\u00e1t t\u1eeb g\u1ed1c. M\u1ed9t s\u1ed1 \u0111\u1ecbnh ngh\u0129a xu\u1ea5t ph\u00e1t t\u1eeb v\u00ed d\u1ee5 n\u00e0y:</p> <ul> <li>Nh\u1eefng \u0111\u1ec9nh l\u00e0 \u0111i\u1ec3m k\u1ebft th\u00fac c\u1ee7a c\u00e1c c\u00e0nh c\u00e2y nh\u1ecf nh\u1ea5t, m\u00e0 lu\u00f4n c\u00f3 b\u1eadc l\u00e0 1, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u00e1 (leaf).</li> <li>Kho\u1ea3ng c\u00e1ch t\u1eeb g\u1ed1c \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh kh\u00e1c \u0111\u00f4i khi \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 chi\u1ec1u cao (height) c\u1ee7a \u0111\u1ec9nh (trong khoa h\u1ecdc m\u00e1y t\u00ednh ch\u00fang ta th\u01b0\u1eddng v\u1ebd c\u00e2y ng\u01b0\u1ee3c l\u1ea1i n\u00ean kho\u1ea3ng c\u00e1ch n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ed9 s\u00e2u (depth) c\u1ee7a \u0111\u1ec9nh).</li> <li>Chi\u1ec1u cao l\u1edbn nh\u1ea5t trong t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u1ee7a c\u00e2y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 chi\u1ec1u cao c\u1ee7a c\u00e2y (tree's height).</li> </ul> </li> <li> <p>Gia ph\u1ea3 (family tree): bao g\u1ed3m t\u1ea5t c\u1ea3 h\u1eadu du\u1ec7 c\u1ee7a m\u1ed9t ng\u01b0\u1eddi (c\u1ee5 t\u1ed5). Xem m\u1ed7i ng\u01b0\u1eddi trong c\u00e2y gia \u0111\u00ecnh l\u00e0 m\u1ed9t \u0111\u1ec9nh, v\u00e0 gi\u1eefa 2 \u0111\u1ec9nh c\u00f3 c\u1ea1nh n\u1ed1i n\u1ebfu 1 trong 2 ng\u01b0\u1eddi l\u00e0 con (child) c\u1ee7a ng\u01b0\u1eddi c\u00f2n l\u1ea1i. \u0110\u1ec9nh \u1ee9ng v\u1edbi c\u1ee5 t\u1ed5 l\u00e0 \u0111\u1ec9nh g\u1ed1c. Nh\u1eefng \u0111\u1ec9nh \u1ee9ng v\u1edbi nh\u1eefng ng\u01b0\u1eddi con c\u1ee7a c\u1ee5 t\u1ed5, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 nh\u1eefng \u0111\u1ec9nh con c\u1ee7a \u0111\u1ec9nh g\u1ed1c. M\u1ed9t s\u1ed1 \u0111\u1ecbnh ngh\u0129a b\u1eaft ngu\u1ed3n t\u1eeb v\u00ed d\u1ee5 n\u00e0y:</p> <ul> <li>N\u1ebfu 2 \u0111\u1ec9nh k\u1ec1 nhau th\u00ec \u0111\u1ec9nh \u1edf xa g\u1ed1c h\u01a1n \u0111\u01b0\u1ee3c coi l\u00e0 con c\u1ee7a \u0111\u1ec9nh \u1edf g\u1ea7n g\u1ed1c h\u01a1n, v\u00e0 \u0111\u1ec9nh g\u1ea7n g\u1ed1c h\u01a1n l\u00e0 cha (parent) c\u1ee7a \u0111\u1ec9nh xa g\u1ed1c h\u01a1n. M\u1ed7i \u0111\u1ec9nh c\u00f3 \u0111\u00fang 1 cha, tr\u1eeb g\u1ed1c.</li> <li>\u0110\u1ec9nh \\(u\\), c\u00f9ng c\u00e1c con c\u1ee7a n\u00f3, c\u00e1c con c\u1ee7a c\u00e1c con c\u1ee7a n\u00f3,... \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c h\u1eadu du\u1ec7 (descendant) c\u1ee7a n\u00f3. (t\u00f9y \u0111\u1ecbnh ngh\u0129a, u c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u01b0\u1ee3c coi l\u00e0 h\u1eadu du\u1ec7 c\u1ee7a ch\u00ednh n\u00f3).</li> <li>\u0110\u1ec9nh \\(u\\), c\u00f9ng cha c\u1ee7a n\u00f3, cha c\u1ee7a cha c\u1ee7a n\u00f3,... g\u1ecdi l\u00e0 c\u00e1c t\u1ed5 ti\u00ean (ancestor) c\u1ee7a n\u00f3. (t\u00f9y \u0111\u1ecbnh ngh\u0129a, u c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u01b0\u1ee3c coi l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a ch\u00ednh n\u00f3).</li> <li>G\u1ed1c l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh.</li> </ul> </li> <li> <p>Cho m\u1ed9t s\u1ed1 th\u00e0nh ph\u1ed1 kh\u00f4ng \u0111\u01b0\u1ee3c n\u1ed1i v\u1edbi nhau, ch\u00fang ta mu\u1ed1n x\u00e2y d\u1ef1ng m\u1ed9t s\u1ed1 con \u0111\u01b0\u1eddng gi\u1eefa c\u00e1c th\u00e0nh ph\u1ed1 sao cho c\u00f3 \u0111\u00fang 1 \u0111\u01b0\u1eddng \u0111i gi\u1eefa m\u1ed7i c\u1eb7p th\u00e0nh ph\u1ed1. Ta s\u1ebd x\u00e2y d\u1ef1ng nh\u1eefng con \u0111\u01b0\u1eddng sao cho c\u00e1c th\u00e0nh ph\u1ed1 l\u00e0 c\u00e1c \u0111\u1ec9nh c\u00f2n c\u00e1c con \u0111\u01b0\u1eddng l\u00e0 c\u00e1c c\u1ea1nh c\u1ee7a c\u00e2y. \u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 c\u00e2y kh\u00f4ng c\u00f3 g\u1ed1c, b\u1edfi v\u00ec ch\u1eb3ng c\u00f3 l\u00ed do \u0111\u1eb7c bi\u1ec7t n\u00e0o \u0111\u1ec3 \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u m\u1ed9t th\u00e0nh ph\u1ed1 l\u00e0 g\u1ed1c c\u1ea3.</p> </li> <li> <p>\u0110\u1eb7t song song 2 t\u1ea5m g\u1ed7 g\u1ea7n nhau v\u00e0 \u0111\u00f3ng \u0111inh v\u00e0o 2 t\u1ea5m g\u1ed7 \u0111\u00f3, nh\u00fang ch\u00fang v\u00e0o n\u01b0\u1edbc c\u00f3 x\u00e0 ph\u00f2ng v\u00e0 glyxerin r\u1ed3i l\u1ea5y ra, c\u00e1c t\u1ea5m phim x\u00e0 ph\u00f2ng (soap film) s\u1ebd n\u1ed1i c\u00e1c \u0111inh v\u1edbi nhau m\u00e0 kh\u00f4ng h\u00ecnh th\u00e0nh chu tr\u00ecnh (v\u00ed d\u1ee5). \u0110\u00e2y g\u1ecdi l\u00e0 c\u00e2y Steiner (Steiner tree), m\u1ed9t v\u00ed d\u1ee5 n\u1eefa cho c\u00e2y kh\u00f4ng c\u00f3 g\u1ed1c v\u00ec ch\u1eb3ng c\u00f3 l\u00ed g\u00ec l\u1ea1i \u0111i \u0111\u1eb7t m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u00ec l\u00e0m g\u1ed1c.</p> </li> </ul> <p>M\u1ed9t v\u00e0i ch\u00fa \u00fd:</p> <ul> <li> <p>Ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 coi m\u1ed9t c\u00e2y c\u00f3 g\u1ed1c l\u00e0 kh\u00f4ng g\u1ed1c (b\u1eb1ng c\u00e1ch kh\u00f4ng quan t\u00e2m \u0111\u1ec9nh n\u00e0o l\u00e0 g\u1ed1c) v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, coi m\u1ed9t c\u00e2y kh\u00f4ng g\u1ed1c l\u00e0 1 c\u00e2y c\u00f3 g\u1ed1c (b\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t \u0111\u1ec9nh b\u1ea5t k\u1ef3 l\u00e0m g\u1ed1c).</p> </li> <li> <p>Trong m\u1ed9t c\u00e2y c\u00f3 g\u1ed1c, g\u1ed1c kh\u00f4ng \u0111\u01b0\u1ee3c coi l\u00e0 l\u00e1 k\u1ec3 c\u1ea3 khi n\u00f3 c\u00f3 b\u1eadc l\u00e0 1 (tr\u1eeb khi c\u00e2y ch\u1ec9 c\u00f3 1 \u0111\u1ec9nh). M\u1eb7t kh\u00e1c, trong m\u1ed9t c\u00e2y kh\u00f4ng g\u1ed1c, m\u1ecdi \u0111\u1ec9nh c\u00f3 b\u1eadc 1 \u0111\u01b0\u1ee3c coi l\u00e0 l\u00e1.</p> </li> <li> <p>M\u1ecdi \u0111\u1ed3 th\u1ecb con li\u00ean th\u00f4ng c\u1ee7a m\u1ed9t c\u00e2y c\u0169ng l\u00e0 m\u1ed9t c\u00e2y v\u00e0 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e2y con (subtree).</p> </li> <li> <p>N\u1ebfu c\u00e2y c\u00f3 g\u1ed1c, m\u1ed9t \u0111\u1ec9nh \\(u\\) v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c h\u00e2u du\u1ec7 c\u1ee7a n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e2y con g\u1ed1c \\(u\\). (C\u00e2y con c\u00f3 g\u1ed1c \u1edf \u0111\u1ec9nh g\u1ed1c ch\u00ednh l\u00e0 c\u00e2y ban \u0111\u1ea7u).</p> </li> </ul>"},{"location":"translate/wcipeg/tree/#cay-nhi-phan-binary-tree-va-cay-k-phan-k-ary-tree","title":"C\u00e2y nh\u1ecb ph\u00e2n (binary tree) v\u00e0 c\u00e2y k-ph\u00e2n (k-ary tree)","text":"<ul> <li> <p>C\u00e2y nh\u1ecb ph\u00e2n (binary tree) l\u00e0 c\u00e2y c\u00f3 g\u1ed1c m\u00e0 m\u1ed7i \u0111\u1ec9nh c\u00f3 t\u1ed1i \u0111a 2 con, g\u1ecdi l\u00e0 con tr\u00e1i (left) v\u00e0 ph\u1ea3i (right). C\u00e2y con c\u00f3 g\u1ed1c l\u00e0 \u0111\u1ec9nh con tr\u00e1i c\u1ee7a m\u1ed9t \u0111\u1ec9nh g\u1ecdi l\u00e0 c\u00e2y con tr\u00e1i (left subtree). C\u00e2y con ph\u1ea3i (right subtree) c\u0169ng \u0111\u1ecbnh ngh\u0129a t\u01b0\u01a1ng t\u1ef1. C\u00e2y nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t nhi\u1ec1u v\u00ed d\u1ee5 nh\u01b0 trong c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm (binary search tree), Heap nh\u1ecb ph\u00e2n,...</p> </li> <li> <p>M\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c coi l\u00e0 c\u00f3 v\u00f4 h\u1ea1n s\u1ed1 t\u1ea7ng (level), nh\u01b0ng ch\u1ec9 c\u00f3 m\u1ed9t s\u1ed1 t\u1ea7ng th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. M\u1ed7i t\u1ea7ng c\u1ee7a c\u00e2y bao g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh c\u00f3 c\u00f9ng \u0111\u1ed9 s\u00e2u. T\u1ea7ng \\(0\\) c\u1ee7a c\u00e2y ch\u1ec9 bao g\u1ed3m \\(1\\) \u0111\u1ec9nh l\u00e0 g\u1ed1c; t\u1ea7ng th\u1ee9 nh\u1ea5t ch\u1ee9a nh\u1eefng \u0111\u1ec9nh con c\u1ee7a g\u1ed1c, nh\u01b0 v\u1eady t\u1ea7ng \\(1\\) ch\u1ee9a t\u1ed1i \u0111a \\(2\\) \u0111\u1ec9nh; t\u1ea7ng th\u1ee9 \\(2\\) ch\u1ee9a t\u1ea5t c\u1ea3 \u0111\u1ec9nh ch\u00e1u c\u1ee7a g\u1ed1c (con c\u1ee7a con c\u1ee7a g\u1ed1c), nh\u01b0 v\u1eady t\u1ea7ng n\u00e0y ch\u1ee9a t\u1ed1i \u0111a \\(4\\) \u0111\u1ec9nh;... t\u1ed5ng qu\u00e1t: t\u1ea7ng th\u1ee9 \\(h\\) c\u1ee7a c\u00e2y nh\u1ecb ph\u00e2n c\u00f3 th\u1ec3 ch\u1ee9a t\u1edbi \\(2^{h}\\) \u0111\u1ec9nh. N\u1ebfu m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n c\u00f3 chi\u1ec1u cao \\(h\\) th\u00ec s\u1ed1 \u0111\u1ec9nh t\u1ed1i \u0111a n\u00f3 c\u00f3 th\u1ec3 ch\u1ee9a l\u00e0 \\(1 + 2 + 4 + ... + 2^{h} = 2^{h+1} - 1\\). M\u1eb7t kh\u00e1c, c\u00e2y nh\u1ecb ph\u00e2n c\u00f3 \\(N\\) \u0111\u1ec9nh s\u1ebd c\u00f3 chi\u1ec1u cao \u00edt nh\u1ea5t l\u00e0 \\(\\left \\lceil log_2 (N + 1) \\right \\rceil - 1\\).</p> </li> <li> <p>M\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 ho\u00e0n ch\u1ec9nh (complete) n\u1ebfu t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh t\u1eeb t\u1ea7ng \\(0\\) \u0111\u1ebfn t\u1ea7ng \\(h - 1\\) \u0111\u1ec1u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ec9nh tr\u00ean t\u1ea7ng \\(h\\) \u0111\u1ec1u d\u1ed3n v\u1ec1 b\u00ean tr\u00e1i nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3. M\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh s\u1ebd lu\u00f4n c\u00f3 chi\u1ec1u cao th\u1ea5p nh\u1ea5t c\u00f3 th\u1ec3 c\u00f3.</p> </li> <li> <p>M\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n g\u1ecdi l\u00e0 c\u00e2n b\u1eb1ng (balance) n\u1ebfu ch\u00eanh l\u1ec7nh chi\u1ec1u cao c\u1ee7a 2 \u0111\u1ec9nh l\u00e1 b\u1ea5t k\u00ec \u0111\u1ec1u kh\u00f4ng qu\u00e1 1, n\u1ebfu t\u1ea5t c\u1ea3 \u0111\u1ec9nh l\u00e1 \u0111\u1ec1u c\u00f3 c\u00f9ng chi\u1ec1u cao th\u00ec n\u00f3 \u0111\u01b0\u1ee3c coi l\u00e0 ho\u00e0n to\u00e0n c\u00e2n b\u1eb1ng (perfectly balanced). C\u00e1c c\u00e2y c\u00e2n b\u1eb1ng th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t hi\u1ec7u qu\u1ea3 trong vi\u1ec7c t\u00ecm ki\u1ebfm d\u1eef li\u1ec7u.</p> </li> <li> <p>T\u1ed5ng qu\u00e1t, m\u1ed9t c\u00e2y k-ph\u00e2n (k-ary tree) l\u00e0 m\u1ed9t c\u00e2y c\u00f3 g\u1ed1c m\u00e0 m\u1ed7i \u0111\u1ec9nh c\u00f3 t\u1ed1i \u0111a k con, c\u00e1c thu\u1eadt ng\u1eef kh\u00e1c \u0111\u1ecbnh ngh\u0129a t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e2y nh\u1ecb ph\u00e2n.</p> </li> </ul>"},{"location":"translate/wcipeg/tree/#duyet-cay-tree-traversal","title":"Duy\u1ec7t c\u00e2y (tree traversal)","text":"<p>Duy\u1ec7t c\u00e2y l\u00e0 vi\u1ec7c th\u0103m t\u1ea5t c\u1ea3 \u0111\u1ec9nh c\u1ee7a c\u00e2y. Li\u1ec7t k\u00ea c\u00e1c \u0111\u1ec9nh \u0111\u01b0\u1ee3c th\u0103m theo th\u1ee9 t\u1ef1, ta thu \u0111\u01b0\u1ee3c m\u1ed9t th\u1ee9 t\u1ef1 duy\u1ec7t c\u00e2y. N\u1ebfu m\u1ed9t c\u00e2y c\u00f3 \\(N\\) \u0111\u1ec9nh th\u00ec s\u1ebd c\u00f3 \\(N!\\) th\u1ee9 t\u1ef1 duy\u1ec7t c\u00e2y. C\u00f3 2 c\u00e1ch duy\u1ec7t quan tr\u1ecdng l\u00e0 duy\u1ec7t theo th\u1ee9 t\u1ef1 tr\u01b0\u1edbc (preoder) v\u00e0 duy\u1ec7t theo th\u1ee9 t\u1ef1 sau (postorder). </p>"},{"location":"translate/wcipeg/tree/#duyet-theo-thu-tu-truoc-preorder","title":"Duy\u1ec7t theo th\u1ee9 t\u1ef1 tr\u01b0\u1edbc (preorder)","text":"<p>Trong c\u00e1ch duy\u1ec7t theo th\u1ee9 t\u1ef1 tr\u01b0\u1edbc, ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n m\u1ed9t ph\u00e9p t\u00ecm ki\u1ebfm theo chi\u1ec1u s\u00e2u (DFS) b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ec9nh g\u1ed1c, m\u1ed7i \u0111\u1ec9nh s\u1ebd \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u \u0111\u00e3 \u0111i qua ngay khi n\u00f3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o stack l\u1ea7n \u0111\u1ea7u.</p> <pre><code>DFS(u):\n  preorder &lt;- u\n  for v in children(u):\n    DFS(v)\n</code></pre>"},{"location":"translate/wcipeg/tree/#duyet-theo-thu-tu-sau-postorder","title":"Duy\u1ec7t theo th\u1ee9 t\u1ef1 sau (postorder)","text":"<p>Ph\u00e9p duy\u1ec7t theo th\u1ee9 t\u1ef1 sau c\u0169ng t\u01b0\u01a1ng t\u1ef1, nh\u01b0ng kh\u00e1c \u1edf ch\u1ed7 l\u00e0 m\u1ed9t \u0111\u1ec9nh \u0111\u01b0\u1ee3c coi l\u00e0 \u0111\u00e3 th\u0103m ngay khi t\u1ea5t c\u1ea3 c\u00e1c con c\u1ee7a n\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c th\u0103m (c\u00e1c \u0111\u1ec9nh l\u00e1 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u \u0111\u00e3 th\u0103m khi ch\u00fang v\u1eeba \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o stack v\u00ec ch\u00fang kh\u00f4ng c\u00f3 con). </p> <pre><code>DFS(u):\n  for v in children(u):\n    DFS(v)\n  postorder &lt;- u\n</code></pre> <p>Ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a th\u1ee9 t\u1ef1 cho c\u00e1c con c\u1ee7a 1 \u0111\u1ec9nh: \"con th\u1ee9 nh\u1ea5t\", \"con th\u1ee9 hai\",... Khi \u0111\u00f3, ph\u00e9p duy\u1ec7t theo th\u1ee9 t\u1ef1 tr\u01b0\u1edbc hay sau \u0111\u1ec1u ch\u1ec9 sinh ra m\u1ed9t th\u1ee9 t\u1ef1 duy nh\u1ea5t.</p>"},{"location":"translate/wcipeg/tree/#duyet-theo-thu-tu-giua-inorder","title":"Duy\u1ec7t theo th\u1ee9 t\u1ef1 gi\u1eefa (inorder)","text":"<p>Ngo\u00e0i duy\u1ec7t theo th\u1ee9 t\u1ef1 tr\u01b0\u1edbc v\u00e0 sau, c\u00e2y nh\u1ecb ph\u00e2n c\u00f2n c\u00f3 c\u00e1ch duy\u1ec7t theo th\u1ee9 t\u1ef1 gi\u1eefa (inorder traversal). M\u1ed9t \u0111\u1ec9nh \u0111\u01b0\u1ee3c coi l\u00e0 \u0111\u00e3 th\u0103m sau khi t\u1ea5t c\u1ea3 \u0111\u1ec9nh thu\u1ed9c c\u00e2y con tr\u00e1i c\u1ee7a n\u00f3 \u0111\u01b0\u1ee3c th\u0103m v\u00e0 tr\u01b0\u1edbc khi b\u1ea5t k\u00ec \u0111\u1ec9nh n\u00e0o thu\u1ed9c c\u00e2y con ph\u1ea3i c\u1ee7a n\u00f3 \u0111\u01b0\u1ee3c th\u0103m. Tr\u00ecnh t\u1ef1 duy\u1ec7t theo th\u1ee9 t\u1ef1 gi\u1eefa l\u00e0 duy nh\u1ea5t \u0111\u1ed1i v\u1edbi m\u1ed7i c\u00e2y nh\u1ecb ph\u00e2n, v\u00e0 duy\u1ec7t c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm theo th\u1ee9 t\u1ef1 gi\u1eefa lu\u00f4n tr\u1ea3 v\u1ec1 m\u1ed9t danh s\u00e1ch \u0111\u00e3 s\u1eafp x\u1ebfp.</p> <pre><code>DFS(u)\n  DFS(u.left_child)\n  in_order &lt;- u\n  DFS(u.right_child)\n</code></pre>"},{"location":"translate/wcipeg/tree/#cac-cau-truc-du-lieu","title":"C\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u","text":"<p>C\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u sau \u0111\u1ec1u d\u1ef1a tr\u00ean c\u00e2y c\u00f3 g\u1ed1c, v\u00e0 th\u01b0\u1eddng l\u00e0 c\u00e2y nh\u1ecb ph\u00e2n:</p> <ul> <li> <p>C\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm (binary search tree): nh\u00e3n c\u1ee7a m\u1ed9t \u0111\u1ec9nh lu\u00f4n kh\u00f4ng nh\u1ecf h\u01a1n nh\u00e3n c\u1ee7a \u0111\u1ec9nh con tr\u00e1i c\u1ee7a n\u00f3 (n\u1ebfu c\u00f3) v\u00e0 kh\u00f4ng l\u1edbn h\u01a1n nh\u00e3n c\u1ee7a \u0111\u1ec9nh con ph\u1ea3i c\u1ee7a n\u00f3 (n\u1ebfu c\u00f3). C\u00e2y 2-3-4 hay B-tree c\u0169ng gi\u1ed1ng v\u1eady, nh\u01b0ng m\u1ed7i \u0111\u1ec9nh c\u00f3 th\u1ec3 c\u00f3 h\u01a1n 2 con.</p> </li> <li> <p>Heap (binary heap): m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n ho\u00e0n ch\u1ec9nh m\u00e0 nh\u00e3n c\u1ee7a m\u1ed7i \u0111\u1ec9nh lu\u00f4n kh\u00f4ng nh\u1ecf h\u01a1n nh\u00e3n c\u1ee7a c\u00e1c con c\u1ee7a n\u00f3 (n\u1ebfu c\u00f3) (heap max, t\u01b0\u01a1ng t\u1ef1 v\u1edbi heap min)</p> <ul> <li>Binomial Heap: ch\u1ee9c n\u0103ng c\u0169ng nh\u01b0 Heap nh\u1ecb ph\u00e2n nh\u01b0ng c\u00f3 th\u00eam ph\u01b0\u01a1ng th\u1ee9c k\u1ebft h\u1ee3p 2 heap.</li> <li>Fibonaci Heap: c\u0169ng nh\u01b0 Binomial Heap nh\u01b0ng th\u01b0\u1eddng nhanh h\u01a1n c\u1ea3 Binomial Heap.</li> </ul> </li> <li> <p>C\u00e2y ph\u00e2n \u0111o\u1ea1n (segment tree, range tree hay interval tree): m\u1ed9t c\u00e2y nh\u1ecb ph\u00e2n qu\u1ea3n l\u00fd m\u1ed9t d\u00e3y, v\u1edbi m\u1ed7i l\u00e1 bi\u1ec3u di\u1ec5n m\u1ed9t ph\u1ea7n t\u1eed c\u1ee7a d\u00e3y, v\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed7i \u0111\u1ec9nh kh\u00e1c l\u00e1 l\u00e0 m\u1ed9t h\u00e0m k\u1ebft h\u1ee3p gi\u00e1 tr\u1ecb 2 con c\u1ee7a n\u00f3.</p> </li> <li> <p>Binary indexed tree) hay Fenwick tree: cho ph\u00e9p t\u00ednh to\u00e1n v\u00e0 truy v\u1ea5n tr\u00ean c\u00e1c ti\u1ec1n t\u1ed1 (prefix) c\u1ee7a m\u1ed9t d\u00e3y s\u1ed1.</p> </li> <li> <p>Parse tree: c\u00e2y bi\u1ec3u di\u1ec5n vi\u1ec7c ph\u00e2n t\u00edch c\u00fa ph\u00e1p c\u1ee7a m\u1ed9t chu\u1ed7i. Khi vi\u1ebft li\u00ean ti\u1ebfp c\u00e1c k\u00fd t\u1ef1 tr\u00ean c\u00e1c l\u00e1 c\u1ee7a c\u00e2y t\u1eeb tr\u00e1i sang ph\u1ea3i th\u00ec ta \u0111\u01b0\u1ee3c chu\u1ed7i ban \u0111\u1ea7u. M\u1ed7i c\u00e2y con qu\u1ea3n l\u00fd m\u1ed9t \u0111o\u1ea1n con c\u1ee7a chu\u1ed7i, v\u00e0 c\u00e1c \u0111\u1ec9nh kh\u00f4ng ph\u1ea3i l\u00e0 l\u00e1 mang th\u00f4ng tin v\u1ec1 quan h\u1ec7 c\u00fa ph\u00e1p gi\u1eefa c\u00e1c \u0111o\u1ea1n con m\u00e0 c\u00e1c con c\u1ee7a n\u00f3 qu\u1ea3n l\u00ed.</p> </li> <li> <p>Abstract syntax tree: c\u0169ng gi\u1ed1ng nh\u01b0 c\u00e2y ph\u00e2n t\u00edch c\u00fa ph\u00e1p nh\u01b0ng n\u00f3 mang th\u00f4ng tin tr\u1eebu t\u01b0\u1ee3ng h\u01a1n so v\u1edbi c\u00e2y ph\u00e2n t\u00edch c\u00fa ph\u00e1p. L\u00e1 c\u1ee7a n\u00f3 mang nh\u1eefng kh\u00e1i ni\u1ec7m (concept) c\u01a1 b\u1ea3n v\u00e0 c\u00e1c \u0111\u1ec9nh l\u01b0u gi\u1eef quan h\u1ec7 logic h\u01a1n l\u00e0 quan h\u1ec7 c\u00fa ph\u00e1p c\u1ee7a c\u00e2y ph\u00e2n t\u00edch c\u00fa ph\u00e1p (m\u1ed1i quan h\u1ec7 c\u00f3 ngh\u0129a).</p> </li> <li> <p>C\u00e2y kd (k-dimensional tree hay kd-tree): l\u01b0u tr\u1eef v\u00e0 qu\u1ea3n l\u00fd c\u00e1c \u0111i\u1ec3m thu\u1ed9c kh\u00f4ng gian k-chi\u1ec1u.</p> </li> <li> <p>C\u00e2y trie hay c\u00e2y ti\u1ec1n t\u1ed1 (prefix tree): m\u1ed7i \u0111\u1ec9nh l\u01b0u gi\u1eef m\u1ed9t k\u00fd t\u1ef1 v\u00e0 m\u1ed7i \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh th\u1ec3 hi\u1ec7n m\u1ed9t ti\u1ec1n t\u1ed1 c\u1ee7a chu\u1ed7i.</p> </li> <li> <p>Suffix tree: c\u0169ng gi\u1ed1ng nh\u01b0 trie, nh\u01b0ng m\u1ed7i \u0111\u01b0\u1eddng \u0111i s\u1ebd th\u1ec3 hi\u1ec7n m\u1ed9t h\u1eadu t\u1ed1.</p> </li> </ul>"},{"location":"translate/wcipeg/tree/#cac-bai-toan-ve-cay","title":"C\u00e1c b\u00e0i to\u00e1n v\u1ec1 c\u00e2y","text":"<ul> <li> <p>C\u00e2y khung nh\u1ecf nh\u1ea5t (minium spanning tree): c\u00e2y \\(T\\) g\u1ecdi l\u00e0 c\u00e2y khung (span) c\u1ee7a \u0111\u1ed3 th\u1ecb \\(G\\) khi \\(T\\) l\u00e0 \u0111\u1ed3 th\u1ecb con c\u1ee7a \\(G\\) v\u00e0 ch\u1ee9a t\u1ea5t c\u1ea3 \u0111\u1ec9nh c\u1ee7a \\(G\\). Tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e2y l\u00e0 t\u1ed5ng tr\u1ecdng s\u1ed1 c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh tr\u00ean c\u00e2y. C\u1ea7n t\u00ecm c\u00e2y khung c\u00f3 tr\u1ecdng s\u1ed1 nh\u1ecf nh\u1ea5t.</p> <ul> <li>C\u00e2y khung nh\u1ecf nh\u1ea5t (minimum diameter spanning tree): t\u00ecm c\u00e2y khung sao cho kho\u1ea3ng c\u00e1ch l\u1edbn nh\u1ea5t gi\u1eefa 2 \u0111\u1ec9nh b\u1ea5t k\u00ec l\u00e0 nh\u1ecf nh\u1ea5t.</li> <li>C\u00e2y khung c\u0169ng t\u00ecnh c\u1edd \u0111\u01b0\u1ee3c sinh ra trong c\u00e1c ph\u00e9p duy\u1ec7t \u0111\u1ed3 th\u1ecb nh\u01b0 DFS hay BFS, t\u1ea1o n\u00ean c\u00e2y DFS v\u00e0 c\u00e2y BFS. Dijkstra cho ta m\u1ed9t c\u00e2y \u0111\u01b0\u1eddng \u0111i ng\u1eafn nh\u1ea5t (shortest paths tree)</li> </ul> </li> <li> <p>T\u1ed5 ti\u00ean chung g\u1ea7n nh\u1ea5t (Lowest Common Ancestor - LCA): cho m\u1ed9t c\u1eb7p \u0111\u1ec9nh tr\u00ean c\u00e2y, y\u00eau c\u1ea7u t\u00ecm t\u1ed5 ti\u00ean chung th\u1ea5p nh\u1ea5t c\u1ee7a 2 \u0111\u1ec9nh n\u00e0y, t\u1ee9c \u0111\u1ec9nh th\u1ea5p nh\u1ea5t l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a c\u1ea3 2 \u0111\u1ec9nh n\u00e0y.</p> </li> <li> <p>Ch\u00fang ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c c\u1eb7p \u0111\u1ec9nh trong c\u00e2y d\u00f9 c\u00f3 tr\u1ecdng s\u1ed1 hay kh\u00f4ng tr\u1ecdng s\u1ed1 b\u1edfi v\u00ec ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u01b0\u1eddng \u0111i duy nh\u1ea5t, ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n b\u1eb1ng ph\u00e9p duy\u1ec7t DFS hay BFS</p> <ul> <li>\u0110\u1ec3 t\u00ecm \u0111\u01b0\u1eddng k\u00ednh (diameter) c\u1ee7a m\u1ed9t c\u00e2y, ta ch\u1ecdn m\u1ed9t \u0111\u1ec9nh b\u1eaft \u0111\u1ea7u b\u1ea5t k\u00ec \\(u\\), t\u00ecm \u0111\u1ec9nh \\(v\\) xa \\(u\\) nh\u1ea5t s\u1eed d\u1ee5ng DFS hay BFS, r\u1ed3i t\u00ecm \u0111\u1ec9nh \\(w\\) xa \\(v\\) nh\u1ea5t. Kho\u1ea3ng c\u00e1ch gi\u1eefa \\(v\\) v\u00e0 \\(w\\) l\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a c\u00e2y.</li> <li>Trong b\u00e0i to\u00e1n dynamic distance query, ch\u00fang ta mu\u1ed1n t\u00ecm kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c c\u1eb7p \u0111\u1ec9nh trong c\u00e2y, \u0111\u1ed3ng th\u1eddi ta c\u0169ng c\u1ea7n c\u00f3 th\u1ec3 thay \u0111\u1ed5i tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e1c c\u1ea1nh. B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gi\u1ea3i b\u1eb1ng c\u1ea5u tr\u00fac heavy-light decomposition.</li> </ul> </li> <li> <p>B\u00e0i to\u00e1n c\u1eb7p gh\u00e9p c\u1ef1c \u0111\u1ea1i (maximum matching), t\u1eadp ph\u1ee7 \u0111\u1ec9nh c\u1ef1c \u0111\u1ea1i (minimum vertex cover), t\u1eadp ph\u1ee7 c\u1ea1nh c\u1ef1c \u0111\u1ea1i (minimum edge cover) v\u00e0 t\u1eadp \u0111\u1ed9c l\u1eadp c\u1ef1c \u0111\u1ea1i (maximum independent set) \u0111\u1ec1u nh\u1eadn nh\u1eefng l\u1eddi gi\u1ea3i quy ho\u1ea1ch \u0111\u1ed9ng (dynamic programming) \u0111\u01a1n gi\u1ea3n khi m\u00e0 \u0111\u1ed3 th\u1ecb l\u00e0 m\u1ed9t c\u00e2y.</p> </li> </ul>"}]}